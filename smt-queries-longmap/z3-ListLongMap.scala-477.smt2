; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9754 () Bool)

(assert start!9754)

(declare-fun b!72873 () Bool)

(declare-fun b_free!2117 () Bool)

(declare-fun b_next!2117 () Bool)

(assert (=> b!72873 (= b_free!2117 (not b_next!2117))))

(declare-fun tp!8527 () Bool)

(declare-fun b_and!4475 () Bool)

(assert (=> b!72873 (= tp!8527 b_and!4475)))

(declare-fun b!72882 () Bool)

(declare-fun b_free!2119 () Bool)

(declare-fun b_next!2119 () Bool)

(assert (=> b!72882 (= b_free!2119 (not b_next!2119))))

(declare-fun tp!8530 () Bool)

(declare-fun b_and!4477 () Bool)

(assert (=> b!72882 (= tp!8530 b_and!4477)))

(declare-fun b!72871 () Bool)

(declare-fun e!47683 () Bool)

(declare-fun tp_is_empty!2475 () Bool)

(assert (=> b!72871 (= e!47683 tp_is_empty!2475)))

(declare-fun b!72872 () Bool)

(declare-fun e!47685 () Bool)

(declare-fun e!47680 () Bool)

(declare-fun mapRes!3171 () Bool)

(assert (=> b!72872 (= e!47685 (and e!47680 mapRes!3171))))

(declare-fun condMapEmpty!3172 () Bool)

(declare-datatypes ((V!2947 0))(
  ( (V!2948 (val!1282 Int)) )
))
(declare-datatypes ((array!3895 0))(
  ( (array!3896 (arr!1859 (Array (_ BitVec 32) (_ BitVec 64))) (size!2097 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!894 0))(
  ( (ValueCellFull!894 (v!2529 V!2947)) (EmptyCell!894) )
))
(declare-datatypes ((array!3897 0))(
  ( (array!3898 (arr!1860 (Array (_ BitVec 32) ValueCell!894)) (size!2098 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!696 0))(
  ( (LongMapFixedSize!697 (defaultEntry!2213 Int) (mask!6180 (_ BitVec 32)) (extraKeys!2072 (_ BitVec 32)) (zeroValue!2115 V!2947) (minValue!2115 V!2947) (_size!397 (_ BitVec 32)) (_keys!3865 array!3895) (_values!2196 array!3897) (_vacant!397 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!498 0))(
  ( (Cell!499 (v!2530 LongMapFixedSize!696)) )
))
(declare-datatypes ((LongMap!498 0))(
  ( (LongMap!499 (underlying!260 Cell!498)) )
))
(declare-fun thiss!992 () LongMap!498)

(declare-fun mapDefault!3172 () ValueCell!894)

(assert (=> b!72872 (= condMapEmpty!3172 (= (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3172)))))

(declare-fun e!47691 () Bool)

(declare-fun array_inv!1145 (array!3895) Bool)

(declare-fun array_inv!1146 (array!3897) Bool)

(assert (=> b!72873 (= e!47691 (and tp!8527 tp_is_empty!2475 (array_inv!1145 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (array_inv!1146 (_values!2196 (v!2530 (underlying!260 thiss!992)))) e!47685))))

(declare-fun b!72874 () Bool)

(declare-fun e!47688 () Bool)

(declare-fun e!47679 () Bool)

(assert (=> b!72874 (= e!47688 (not e!47679))))

(declare-fun res!38703 () Bool)

(assert (=> b!72874 (=> res!38703 e!47679)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!72874 (= res!38703 (not (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992))))))))

(declare-datatypes ((tuple2!2122 0))(
  ( (tuple2!2123 (_1!1072 (_ BitVec 64)) (_2!1072 V!2947)) )
))
(declare-datatypes ((List!1478 0))(
  ( (Nil!1475) (Cons!1474 (h!2061 tuple2!2122) (t!5035 List!1478)) )
))
(declare-datatypes ((ListLongMap!1419 0))(
  ( (ListLongMap!1420 (toList!725 List!1478)) )
))
(declare-fun lt!32540 () ListLongMap!1419)

(declare-fun lt!32538 () tuple2!2122)

(declare-fun lt!32542 () tuple2!2122)

(declare-fun +!94 (ListLongMap!1419 tuple2!2122) ListLongMap!1419)

(assert (=> b!72874 (= (+!94 (+!94 lt!32540 lt!32538) lt!32542) (+!94 (+!94 lt!32540 lt!32542) lt!32538))))

(assert (=> b!72874 (= lt!32542 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun lt!32533 () V!2947)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!72874 (= lt!32538 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))

(declare-datatypes ((Unit!2078 0))(
  ( (Unit!2079) )
))
(declare-fun lt!32537 () Unit!2078)

(declare-fun addCommutativeForDiffKeys!13 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64) V!2947) Unit!2078)

(assert (=> b!72874 (= lt!32537 (addCommutativeForDiffKeys!13 lt!32540 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!59 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) ListLongMap!1419)

(assert (=> b!72874 (= lt!32540 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun mapNonEmpty!3171 () Bool)

(declare-fun tp!8528 () Bool)

(assert (=> mapNonEmpty!3171 (= mapRes!3171 (and tp!8528 e!47683))))

(declare-fun mapKey!3172 () (_ BitVec 32))

(declare-fun mapRest!3172 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapValue!3171 () ValueCell!894)

(assert (=> mapNonEmpty!3171 (= (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (store mapRest!3172 mapKey!3172 mapValue!3171))))

(declare-fun b!72875 () Bool)

(declare-fun e!47693 () Bool)

(declare-fun e!47696 () Bool)

(assert (=> b!72875 (= e!47693 e!47696)))

(declare-fun res!38699 () Bool)

(assert (=> b!72875 (=> (not res!38699) (not e!47696))))

(assert (=> b!72875 (= res!38699 (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1139 (ValueCell!894 V!2947) V!2947)

(declare-fun dynLambda!325 (Int (_ BitVec 64)) V!2947)

(assert (=> b!72875 (= lt!32533 (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72876 () Bool)

(declare-fun res!38702 () Bool)

(declare-fun e!47682 () Bool)

(assert (=> b!72876 (=> (not res!38702) (not e!47682))))

(declare-fun newMap!16 () LongMapFixedSize!696)

(declare-fun valid!289 (LongMapFixedSize!696) Bool)

(assert (=> b!72876 (= res!38702 (valid!289 newMap!16))))

(declare-fun mapNonEmpty!3172 () Bool)

(declare-fun mapRes!3172 () Bool)

(declare-fun tp!8529 () Bool)

(declare-fun e!47686 () Bool)

(assert (=> mapNonEmpty!3172 (= mapRes!3172 (and tp!8529 e!47686))))

(declare-fun mapRest!3171 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapValue!3172 () ValueCell!894)

(declare-fun mapKey!3171 () (_ BitVec 32))

(assert (=> mapNonEmpty!3172 (= (arr!1860 (_values!2196 newMap!16)) (store mapRest!3171 mapKey!3171 mapValue!3172))))

(declare-fun b!72877 () Bool)

(declare-fun e!47692 () Bool)

(assert (=> b!72877 (= e!47692 e!47691)))

(declare-fun b!72878 () Bool)

(declare-fun e!47684 () Bool)

(declare-fun e!47694 () Bool)

(assert (=> b!72878 (= e!47684 (and e!47694 mapRes!3172))))

(declare-fun condMapEmpty!3171 () Bool)

(declare-fun mapDefault!3171 () ValueCell!894)

(assert (=> b!72878 (= condMapEmpty!3171 (= (arr!1860 (_values!2196 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3171)))))

(declare-fun b!72879 () Bool)

(declare-fun e!47690 () Unit!2078)

(declare-fun Unit!2080 () Unit!2078)

(assert (=> b!72879 (= e!47690 Unit!2080)))

(declare-fun lt!32532 () Unit!2078)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!49 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2078)

(assert (=> b!72879 (= lt!32532 (lemmaListMapContainsThenArrayContainsFrom!49 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3895 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!72879 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!32535 () Unit!2078)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3895 (_ BitVec 32) (_ BitVec 32)) Unit!2078)

(assert (=> b!72879 (= lt!32535 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1479 0))(
  ( (Nil!1476) (Cons!1475 (h!2062 (_ BitVec 64)) (t!5036 List!1479)) )
))
(declare-fun arrayNoDuplicates!0 (array!3895 (_ BitVec 32) List!1479) Bool)

(assert (=> b!72879 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) from!355 Nil!1476)))

(declare-fun lt!32536 () Unit!2078)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3895 (_ BitVec 32) (_ BitVec 64) List!1479) Unit!2078)

(assert (=> b!72879 (= lt!32536 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476)))))

(assert (=> b!72879 false))

(declare-fun b!72880 () Bool)

(assert (=> b!72880 (= e!47694 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3171 () Bool)

(assert (=> mapIsEmpty!3171 mapRes!3172))

(declare-fun b!72881 () Bool)

(declare-fun e!47687 () Bool)

(assert (=> b!72881 (= e!47687 e!47692)))

(declare-fun e!47689 () Bool)

(assert (=> b!72882 (= e!47689 (and tp!8530 tp_is_empty!2475 (array_inv!1145 (_keys!3865 newMap!16)) (array_inv!1146 (_values!2196 newMap!16)) e!47684))))

(declare-fun b!72883 () Bool)

(assert (=> b!72883 (= e!47679 (or (not (= (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6180 (v!2530 (underlying!260 thiss!992)))))) (not (= (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992)))))) (bvslt (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!72884 () Bool)

(declare-fun res!38700 () Bool)

(assert (=> b!72884 (=> (not res!38700) (not e!47682))))

(assert (=> b!72884 (= res!38700 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!72885 () Bool)

(assert (=> b!72885 (= e!47686 tp_is_empty!2475)))

(declare-fun b!72886 () Bool)

(assert (=> b!72886 (= e!47682 e!47693)))

(declare-fun res!38706 () Bool)

(assert (=> b!72886 (=> (not res!38706) (not e!47693))))

(declare-fun lt!32531 () ListLongMap!1419)

(declare-fun lt!32541 () ListLongMap!1419)

(assert (=> b!72886 (= res!38706 (= lt!32531 lt!32541))))

(declare-fun map!1151 (LongMapFixedSize!696) ListLongMap!1419)

(assert (=> b!72886 (= lt!32541 (map!1151 newMap!16))))

(declare-fun getCurrentListMap!422 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) ListLongMap!1419)

(assert (=> b!72886 (= lt!32531 (getCurrentListMap!422 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!72887 () Bool)

(declare-fun res!38705 () Bool)

(assert (=> b!72887 (=> (not res!38705) (not e!47682))))

(assert (=> b!72887 (= res!38705 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6180 newMap!16)) (_size!397 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!72888 () Bool)

(assert (=> b!72888 (= e!47696 e!47688)))

(declare-fun res!38701 () Bool)

(assert (=> b!72888 (=> (not res!38701) (not e!47688))))

(declare-datatypes ((tuple2!2124 0))(
  ( (tuple2!2125 (_1!1073 Bool) (_2!1073 LongMapFixedSize!696)) )
))
(declare-fun lt!32534 () tuple2!2124)

(assert (=> b!72888 (= res!38701 (and (_1!1073 lt!32534) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!32539 () Unit!2078)

(assert (=> b!72888 (= lt!32539 e!47690)))

(declare-fun c!10788 () Bool)

(declare-fun contains!723 (ListLongMap!1419 (_ BitVec 64)) Bool)

(assert (=> b!72888 (= c!10788 (contains!723 lt!32541 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun update!96 (LongMapFixedSize!696 (_ BitVec 64) V!2947) tuple2!2124)

(assert (=> b!72888 (= lt!32534 (update!96 newMap!16 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))

(declare-fun mapIsEmpty!3172 () Bool)

(assert (=> mapIsEmpty!3172 mapRes!3171))

(declare-fun b!72889 () Bool)

(assert (=> b!72889 (= e!47680 tp_is_empty!2475)))

(declare-fun res!38704 () Bool)

(assert (=> start!9754 (=> (not res!38704) (not e!47682))))

(declare-fun valid!290 (LongMap!498) Bool)

(assert (=> start!9754 (= res!38704 (valid!290 thiss!992))))

(assert (=> start!9754 e!47682))

(assert (=> start!9754 e!47687))

(assert (=> start!9754 true))

(assert (=> start!9754 e!47689))

(declare-fun b!72890 () Bool)

(declare-fun Unit!2081 () Unit!2078)

(assert (=> b!72890 (= e!47690 Unit!2081)))

(assert (= (and start!9754 res!38704) b!72884))

(assert (= (and b!72884 res!38700) b!72876))

(assert (= (and b!72876 res!38702) b!72887))

(assert (= (and b!72887 res!38705) b!72886))

(assert (= (and b!72886 res!38706) b!72875))

(assert (= (and b!72875 res!38699) b!72888))

(assert (= (and b!72888 c!10788) b!72879))

(assert (= (and b!72888 (not c!10788)) b!72890))

(assert (= (and b!72888 res!38701) b!72874))

(assert (= (and b!72874 (not res!38703)) b!72883))

(assert (= (and b!72872 condMapEmpty!3172) mapIsEmpty!3172))

(assert (= (and b!72872 (not condMapEmpty!3172)) mapNonEmpty!3171))

(get-info :version)

(assert (= (and mapNonEmpty!3171 ((_ is ValueCellFull!894) mapValue!3171)) b!72871))

(assert (= (and b!72872 ((_ is ValueCellFull!894) mapDefault!3172)) b!72889))

(assert (= b!72873 b!72872))

(assert (= b!72877 b!72873))

(assert (= b!72881 b!72877))

(assert (= start!9754 b!72881))

(assert (= (and b!72878 condMapEmpty!3171) mapIsEmpty!3171))

(assert (= (and b!72878 (not condMapEmpty!3171)) mapNonEmpty!3172))

(assert (= (and mapNonEmpty!3172 ((_ is ValueCellFull!894) mapValue!3172)) b!72885))

(assert (= (and b!72878 ((_ is ValueCellFull!894) mapDefault!3171)) b!72880))

(assert (= b!72882 b!72878))

(assert (= start!9754 b!72882))

(declare-fun b_lambda!3275 () Bool)

(assert (=> (not b_lambda!3275) (not b!72875)))

(declare-fun t!5032 () Bool)

(declare-fun tb!1529 () Bool)

(assert (=> (and b!72873 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) t!5032) tb!1529))

(declare-fun result!2679 () Bool)

(assert (=> tb!1529 (= result!2679 tp_is_empty!2475)))

(assert (=> b!72875 t!5032))

(declare-fun b_and!4479 () Bool)

(assert (= b_and!4475 (and (=> t!5032 result!2679) b_and!4479)))

(declare-fun t!5034 () Bool)

(declare-fun tb!1531 () Bool)

(assert (=> (and b!72882 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) t!5034) tb!1531))

(declare-fun result!2683 () Bool)

(assert (= result!2683 result!2679))

(assert (=> b!72875 t!5034))

(declare-fun b_and!4481 () Bool)

(assert (= b_and!4477 (and (=> t!5034 result!2683) b_and!4481)))

(declare-fun m!71215 () Bool)

(assert (=> mapNonEmpty!3171 m!71215))

(declare-fun m!71217 () Bool)

(assert (=> b!72874 m!71217))

(declare-fun m!71219 () Bool)

(assert (=> b!72874 m!71219))

(declare-fun m!71221 () Bool)

(assert (=> b!72874 m!71221))

(declare-fun m!71223 () Bool)

(assert (=> b!72874 m!71223))

(assert (=> b!72874 m!71217))

(declare-fun m!71225 () Bool)

(assert (=> b!72874 m!71225))

(declare-fun m!71227 () Bool)

(assert (=> b!72874 m!71227))

(assert (=> b!72874 m!71219))

(assert (=> b!72874 m!71227))

(declare-fun m!71229 () Bool)

(assert (=> b!72874 m!71229))

(declare-fun m!71231 () Bool)

(assert (=> b!72874 m!71231))

(assert (=> b!72888 m!71227))

(assert (=> b!72888 m!71227))

(declare-fun m!71233 () Bool)

(assert (=> b!72888 m!71233))

(assert (=> b!72888 m!71227))

(declare-fun m!71235 () Bool)

(assert (=> b!72888 m!71235))

(declare-fun m!71237 () Bool)

(assert (=> mapNonEmpty!3172 m!71237))

(declare-fun m!71239 () Bool)

(assert (=> b!72886 m!71239))

(declare-fun m!71241 () Bool)

(assert (=> b!72886 m!71241))

(declare-fun m!71243 () Bool)

(assert (=> start!9754 m!71243))

(declare-fun m!71245 () Bool)

(assert (=> b!72873 m!71245))

(declare-fun m!71247 () Bool)

(assert (=> b!72873 m!71247))

(declare-fun m!71249 () Bool)

(assert (=> b!72876 m!71249))

(declare-fun m!71251 () Bool)

(assert (=> b!72882 m!71251))

(declare-fun m!71253 () Bool)

(assert (=> b!72882 m!71253))

(declare-fun m!71255 () Bool)

(assert (=> b!72879 m!71255))

(declare-fun m!71257 () Bool)

(assert (=> b!72879 m!71257))

(assert (=> b!72879 m!71227))

(declare-fun m!71259 () Bool)

(assert (=> b!72879 m!71259))

(assert (=> b!72879 m!71227))

(assert (=> b!72879 m!71227))

(declare-fun m!71261 () Bool)

(assert (=> b!72879 m!71261))

(assert (=> b!72879 m!71227))

(declare-fun m!71263 () Bool)

(assert (=> b!72879 m!71263))

(assert (=> b!72875 m!71227))

(declare-fun m!71265 () Bool)

(assert (=> b!72875 m!71265))

(declare-fun m!71267 () Bool)

(assert (=> b!72875 m!71267))

(assert (=> b!72875 m!71265))

(assert (=> b!72875 m!71267))

(declare-fun m!71269 () Bool)

(assert (=> b!72875 m!71269))

(check-sat (not b!72882) (not start!9754) (not b_next!2117) (not mapNonEmpty!3172) (not b!72874) (not mapNonEmpty!3171) (not b!72875) (not b_next!2119) (not b!72876) (not b!72888) (not b_lambda!3275) (not b!72886) b_and!4481 b_and!4479 tp_is_empty!2475 (not b!72873) (not b!72879))
(check-sat b_and!4479 b_and!4481 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun b_lambda!3279 () Bool)

(assert (= b_lambda!3275 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3279)))

(check-sat (not b!72882) (not start!9754) (not b_next!2117) (not mapNonEmpty!3172) (not b!72874) (not mapNonEmpty!3171) (not b!72875) (not b_next!2119) (not b!72876) (not b!72888) (not b_lambda!3279) (not b!72886) b_and!4481 b_and!4479 tp_is_empty!2475 (not b!72873) (not b!72879))
(check-sat b_and!4479 b_and!4481 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun d!16811 () Bool)

(assert (=> d!16811 (= (array_inv!1145 (_keys!3865 newMap!16)) (bvsge (size!2097 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72882 d!16811))

(declare-fun d!16813 () Bool)

(assert (=> d!16813 (= (array_inv!1146 (_values!2196 newMap!16)) (bvsge (size!2098 (_values!2196 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72882 d!16813))

(declare-fun d!16815 () Bool)

(declare-fun e!47768 () Bool)

(assert (=> d!16815 e!47768))

(declare-fun res!38739 () Bool)

(assert (=> d!16815 (=> (not res!38739) (not e!47768))))

(declare-fun lt!32594 () ListLongMap!1419)

(assert (=> d!16815 (= res!38739 (not (contains!723 lt!32594 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!47766 () ListLongMap!1419)

(assert (=> d!16815 (= lt!32594 e!47766)))

(declare-fun c!10802 () Bool)

(assert (=> d!16815 (= c!10802 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!16815 (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992))))))

(assert (=> d!16815 (= (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) lt!32594)))

(declare-fun b!72979 () Bool)

(declare-fun e!47770 () ListLongMap!1419)

(assert (=> b!72979 (= e!47766 e!47770)))

(declare-fun c!10800 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!72979 (= c!10800 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!72980 () Bool)

(assert (=> b!72980 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> b!72980 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!47771 () Bool)

(declare-fun apply!75 (ListLongMap!1419 (_ BitVec 64)) V!2947)

(assert (=> b!72980 (= e!47771 (= (apply!75 lt!32594 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6351 () Bool)

(declare-fun call!6354 () ListLongMap!1419)

(assert (=> bm!6351 (= call!6354 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!72981 () Bool)

(declare-fun e!47765 () Bool)

(assert (=> b!72981 (= e!47765 e!47771)))

(assert (=> b!72981 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun res!38742 () Bool)

(assert (=> b!72981 (= res!38742 (contains!723 lt!32594 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!72981 (=> (not res!38742) (not e!47771))))

(declare-fun b!72982 () Bool)

(assert (=> b!72982 (= e!47768 e!47765)))

(declare-fun c!10803 () Bool)

(declare-fun e!47767 () Bool)

(assert (=> b!72982 (= c!10803 e!47767)))

(declare-fun res!38741 () Bool)

(assert (=> b!72982 (=> (not res!38741) (not e!47767))))

(assert (=> b!72982 (= res!38741 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!72983 () Bool)

(declare-fun res!38740 () Bool)

(assert (=> b!72983 (=> (not res!38740) (not e!47768))))

(assert (=> b!72983 (= res!38740 (not (contains!723 lt!32594 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72984 () Bool)

(assert (=> b!72984 (= e!47767 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!72984 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!72985 () Bool)

(assert (=> b!72985 (= e!47766 (ListLongMap!1420 Nil!1475))))

(declare-fun b!72986 () Bool)

(declare-fun e!47769 () Bool)

(declare-fun isEmpty!316 (ListLongMap!1419) Bool)

(assert (=> b!72986 (= e!47769 (isEmpty!316 lt!32594))))

(declare-fun b!72987 () Bool)

(assert (=> b!72987 (= e!47765 e!47769)))

(declare-fun c!10801 () Bool)

(assert (=> b!72987 (= c!10801 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!72988 () Bool)

(assert (=> b!72988 (= e!47770 call!6354)))

(declare-fun b!72989 () Bool)

(assert (=> b!72989 (= e!47769 (= lt!32594 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!72990 () Bool)

(declare-fun lt!32597 () Unit!2078)

(declare-fun lt!32598 () Unit!2078)

(assert (=> b!72990 (= lt!32597 lt!32598)))

(declare-fun lt!32593 () (_ BitVec 64))

(declare-fun lt!32596 () V!2947)

(declare-fun lt!32595 () ListLongMap!1419)

(declare-fun lt!32599 () (_ BitVec 64))

(assert (=> b!72990 (not (contains!723 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)) lt!32593))))

(declare-fun addStillNotContains!24 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2078)

(assert (=> b!72990 (= lt!32598 (addStillNotContains!24 lt!32595 lt!32599 lt!32596 lt!32593))))

(assert (=> b!72990 (= lt!32593 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!72990 (= lt!32596 (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!72990 (= lt!32599 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!72990 (= lt!32595 call!6354)))

(assert (=> b!72990 (= e!47770 (+!94 call!6354 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16815 c!10802) b!72985))

(assert (= (and d!16815 (not c!10802)) b!72979))

(assert (= (and b!72979 c!10800) b!72990))

(assert (= (and b!72979 (not c!10800)) b!72988))

(assert (= (or b!72990 b!72988) bm!6351))

(assert (= (and d!16815 res!38739) b!72983))

(assert (= (and b!72983 res!38740) b!72982))

(assert (= (and b!72982 res!38741) b!72984))

(assert (= (and b!72982 c!10803) b!72981))

(assert (= (and b!72982 (not c!10803)) b!72987))

(assert (= (and b!72981 res!38742) b!72980))

(assert (= (and b!72987 c!10801) b!72989))

(assert (= (and b!72987 (not c!10801)) b!72986))

(declare-fun b_lambda!3281 () Bool)

(assert (=> (not b_lambda!3281) (not b!72980)))

(assert (=> b!72980 t!5032))

(declare-fun b_and!4491 () Bool)

(assert (= b_and!4479 (and (=> t!5032 result!2679) b_and!4491)))

(assert (=> b!72980 t!5034))

(declare-fun b_and!4493 () Bool)

(assert (= b_and!4481 (and (=> t!5034 result!2683) b_and!4493)))

(declare-fun b_lambda!3283 () Bool)

(assert (=> (not b_lambda!3283) (not b!72990)))

(assert (=> b!72990 t!5032))

(declare-fun b_and!4495 () Bool)

(assert (= b_and!4491 (and (=> t!5032 result!2679) b_and!4495)))

(assert (=> b!72990 t!5034))

(declare-fun b_and!4497 () Bool)

(assert (= b_and!4493 (and (=> t!5034 result!2683) b_and!4497)))

(declare-fun m!71327 () Bool)

(assert (=> b!72981 m!71327))

(assert (=> b!72981 m!71327))

(declare-fun m!71329 () Bool)

(assert (=> b!72981 m!71329))

(declare-fun m!71331 () Bool)

(assert (=> d!16815 m!71331))

(assert (=> d!16815 m!71223))

(assert (=> b!72979 m!71327))

(assert (=> b!72979 m!71327))

(declare-fun m!71333 () Bool)

(assert (=> b!72979 m!71333))

(declare-fun m!71335 () Bool)

(assert (=> b!72983 m!71335))

(assert (=> b!72984 m!71327))

(assert (=> b!72984 m!71327))

(assert (=> b!72984 m!71333))

(declare-fun m!71337 () Bool)

(assert (=> bm!6351 m!71337))

(declare-fun m!71339 () Bool)

(assert (=> b!72980 m!71339))

(assert (=> b!72980 m!71267))

(declare-fun m!71341 () Bool)

(assert (=> b!72980 m!71341))

(assert (=> b!72980 m!71327))

(assert (=> b!72980 m!71339))

(assert (=> b!72980 m!71327))

(declare-fun m!71343 () Bool)

(assert (=> b!72980 m!71343))

(assert (=> b!72980 m!71267))

(assert (=> b!72989 m!71337))

(assert (=> b!72990 m!71267))

(assert (=> b!72990 m!71339))

(assert (=> b!72990 m!71267))

(assert (=> b!72990 m!71341))

(declare-fun m!71345 () Bool)

(assert (=> b!72990 m!71345))

(declare-fun m!71347 () Bool)

(assert (=> b!72990 m!71347))

(declare-fun m!71349 () Bool)

(assert (=> b!72990 m!71349))

(assert (=> b!72990 m!71339))

(assert (=> b!72990 m!71327))

(assert (=> b!72990 m!71345))

(declare-fun m!71351 () Bool)

(assert (=> b!72990 m!71351))

(declare-fun m!71353 () Bool)

(assert (=> b!72986 m!71353))

(assert (=> b!72874 d!16815))

(declare-fun d!16817 () Bool)

(declare-fun e!47774 () Bool)

(assert (=> d!16817 e!47774))

(declare-fun res!38747 () Bool)

(assert (=> d!16817 (=> (not res!38747) (not e!47774))))

(declare-fun lt!32610 () ListLongMap!1419)

(assert (=> d!16817 (= res!38747 (contains!723 lt!32610 (_1!1072 lt!32542)))))

(declare-fun lt!32609 () List!1478)

(assert (=> d!16817 (= lt!32610 (ListLongMap!1420 lt!32609))))

(declare-fun lt!32611 () Unit!2078)

(declare-fun lt!32608 () Unit!2078)

(assert (=> d!16817 (= lt!32611 lt!32608)))

(declare-datatypes ((Option!139 0))(
  ( (Some!138 (v!2534 V!2947)) (None!137) )
))
(declare-fun getValueByKey!133 (List!1478 (_ BitVec 64)) Option!139)

(assert (=> d!16817 (= (getValueByKey!133 lt!32609 (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542)))))

(declare-fun lemmaContainsTupThenGetReturnValue!50 (List!1478 (_ BitVec 64) V!2947) Unit!2078)

(assert (=> d!16817 (= lt!32608 (lemmaContainsTupThenGetReturnValue!50 lt!32609 (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun insertStrictlySorted!53 (List!1478 (_ BitVec 64) V!2947) List!1478)

(assert (=> d!16817 (= lt!32609 (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 lt!32538)) (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(assert (=> d!16817 (= (+!94 (+!94 lt!32540 lt!32538) lt!32542) lt!32610)))

(declare-fun b!72995 () Bool)

(declare-fun res!38748 () Bool)

(assert (=> b!72995 (=> (not res!38748) (not e!47774))))

(assert (=> b!72995 (= res!38748 (= (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542))))))

(declare-fun b!72996 () Bool)

(declare-fun contains!724 (List!1478 tuple2!2122) Bool)

(assert (=> b!72996 (= e!47774 (contains!724 (toList!725 lt!32610) lt!32542))))

(assert (= (and d!16817 res!38747) b!72995))

(assert (= (and b!72995 res!38748) b!72996))

(declare-fun m!71355 () Bool)

(assert (=> d!16817 m!71355))

(declare-fun m!71357 () Bool)

(assert (=> d!16817 m!71357))

(declare-fun m!71359 () Bool)

(assert (=> d!16817 m!71359))

(declare-fun m!71361 () Bool)

(assert (=> d!16817 m!71361))

(declare-fun m!71363 () Bool)

(assert (=> b!72995 m!71363))

(declare-fun m!71365 () Bool)

(assert (=> b!72996 m!71365))

(assert (=> b!72874 d!16817))

(declare-fun d!16819 () Bool)

(declare-fun e!47775 () Bool)

(assert (=> d!16819 e!47775))

(declare-fun res!38749 () Bool)

(assert (=> d!16819 (=> (not res!38749) (not e!47775))))

(declare-fun lt!32614 () ListLongMap!1419)

(assert (=> d!16819 (= res!38749 (contains!723 lt!32614 (_1!1072 lt!32542)))))

(declare-fun lt!32613 () List!1478)

(assert (=> d!16819 (= lt!32614 (ListLongMap!1420 lt!32613))))

(declare-fun lt!32615 () Unit!2078)

(declare-fun lt!32612 () Unit!2078)

(assert (=> d!16819 (= lt!32615 lt!32612)))

(assert (=> d!16819 (= (getValueByKey!133 lt!32613 (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542)))))

(assert (=> d!16819 (= lt!32612 (lemmaContainsTupThenGetReturnValue!50 lt!32613 (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(assert (=> d!16819 (= lt!32613 (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(assert (=> d!16819 (= (+!94 lt!32540 lt!32542) lt!32614)))

(declare-fun b!72997 () Bool)

(declare-fun res!38750 () Bool)

(assert (=> b!72997 (=> (not res!38750) (not e!47775))))

(assert (=> b!72997 (= res!38750 (= (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542))))))

(declare-fun b!72998 () Bool)

(assert (=> b!72998 (= e!47775 (contains!724 (toList!725 lt!32614) lt!32542))))

(assert (= (and d!16819 res!38749) b!72997))

(assert (= (and b!72997 res!38750) b!72998))

(declare-fun m!71367 () Bool)

(assert (=> d!16819 m!71367))

(declare-fun m!71369 () Bool)

(assert (=> d!16819 m!71369))

(declare-fun m!71371 () Bool)

(assert (=> d!16819 m!71371))

(declare-fun m!71373 () Bool)

(assert (=> d!16819 m!71373))

(declare-fun m!71375 () Bool)

(assert (=> b!72997 m!71375))

(declare-fun m!71377 () Bool)

(assert (=> b!72998 m!71377))

(assert (=> b!72874 d!16819))

(declare-fun d!16821 () Bool)

(declare-fun e!47776 () Bool)

(assert (=> d!16821 e!47776))

(declare-fun res!38751 () Bool)

(assert (=> d!16821 (=> (not res!38751) (not e!47776))))

(declare-fun lt!32618 () ListLongMap!1419)

(assert (=> d!16821 (= res!38751 (contains!723 lt!32618 (_1!1072 lt!32538)))))

(declare-fun lt!32617 () List!1478)

(assert (=> d!16821 (= lt!32618 (ListLongMap!1420 lt!32617))))

(declare-fun lt!32619 () Unit!2078)

(declare-fun lt!32616 () Unit!2078)

(assert (=> d!16821 (= lt!32619 lt!32616)))

(assert (=> d!16821 (= (getValueByKey!133 lt!32617 (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538)))))

(assert (=> d!16821 (= lt!32616 (lemmaContainsTupThenGetReturnValue!50 lt!32617 (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(assert (=> d!16821 (= lt!32617 (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(assert (=> d!16821 (= (+!94 lt!32540 lt!32538) lt!32618)))

(declare-fun b!72999 () Bool)

(declare-fun res!38752 () Bool)

(assert (=> b!72999 (=> (not res!38752) (not e!47776))))

(assert (=> b!72999 (= res!38752 (= (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538))))))

(declare-fun b!73000 () Bool)

(assert (=> b!73000 (= e!47776 (contains!724 (toList!725 lt!32618) lt!32538))))

(assert (= (and d!16821 res!38751) b!72999))

(assert (= (and b!72999 res!38752) b!73000))

(declare-fun m!71379 () Bool)

(assert (=> d!16821 m!71379))

(declare-fun m!71381 () Bool)

(assert (=> d!16821 m!71381))

(declare-fun m!71383 () Bool)

(assert (=> d!16821 m!71383))

(declare-fun m!71385 () Bool)

(assert (=> d!16821 m!71385))

(declare-fun m!71387 () Bool)

(assert (=> b!72999 m!71387))

(declare-fun m!71389 () Bool)

(assert (=> b!73000 m!71389))

(assert (=> b!72874 d!16821))

(declare-fun d!16823 () Bool)

(assert (=> d!16823 (= (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992)))) (and (or (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000001111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000011111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000001111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000011111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000001111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000011111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000001111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000011111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000001111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000011111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000001111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000011111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000001111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000011111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000111111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000001111111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000011111111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000111111111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00001111111111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00011111111111111111111111111111) (= (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!72874 d!16823))

(declare-fun d!16825 () Bool)

(declare-fun e!47777 () Bool)

(assert (=> d!16825 e!47777))

(declare-fun res!38753 () Bool)

(assert (=> d!16825 (=> (not res!38753) (not e!47777))))

(declare-fun lt!32622 () ListLongMap!1419)

(assert (=> d!16825 (= res!38753 (contains!723 lt!32622 (_1!1072 lt!32538)))))

(declare-fun lt!32621 () List!1478)

(assert (=> d!16825 (= lt!32622 (ListLongMap!1420 lt!32621))))

(declare-fun lt!32623 () Unit!2078)

(declare-fun lt!32620 () Unit!2078)

(assert (=> d!16825 (= lt!32623 lt!32620)))

(assert (=> d!16825 (= (getValueByKey!133 lt!32621 (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538)))))

(assert (=> d!16825 (= lt!32620 (lemmaContainsTupThenGetReturnValue!50 lt!32621 (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(assert (=> d!16825 (= lt!32621 (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 lt!32542)) (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(assert (=> d!16825 (= (+!94 (+!94 lt!32540 lt!32542) lt!32538) lt!32622)))

(declare-fun b!73001 () Bool)

(declare-fun res!38754 () Bool)

(assert (=> b!73001 (=> (not res!38754) (not e!47777))))

(assert (=> b!73001 (= res!38754 (= (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538))))))

(declare-fun b!73002 () Bool)

(assert (=> b!73002 (= e!47777 (contains!724 (toList!725 lt!32622) lt!32538))))

(assert (= (and d!16825 res!38753) b!73001))

(assert (= (and b!73001 res!38754) b!73002))

(declare-fun m!71391 () Bool)

(assert (=> d!16825 m!71391))

(declare-fun m!71393 () Bool)

(assert (=> d!16825 m!71393))

(declare-fun m!71395 () Bool)

(assert (=> d!16825 m!71395))

(declare-fun m!71397 () Bool)

(assert (=> d!16825 m!71397))

(declare-fun m!71399 () Bool)

(assert (=> b!73001 m!71399))

(declare-fun m!71401 () Bool)

(assert (=> b!73002 m!71401))

(assert (=> b!72874 d!16825))

(declare-fun d!16827 () Bool)

(assert (=> d!16827 (= (+!94 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (+!94 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun lt!32626 () Unit!2078)

(declare-fun choose!410 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64) V!2947) Unit!2078)

(assert (=> d!16827 (= lt!32626 (choose!410 lt!32540 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))

(assert (=> d!16827 (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16827 (= (addCommutativeForDiffKeys!13 lt!32540 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) lt!32626)))

(declare-fun bs!3141 () Bool)

(assert (= bs!3141 d!16827))

(declare-fun m!71403 () Bool)

(assert (=> bs!3141 m!71403))

(declare-fun m!71405 () Bool)

(assert (=> bs!3141 m!71405))

(assert (=> bs!3141 m!71403))

(declare-fun m!71407 () Bool)

(assert (=> bs!3141 m!71407))

(declare-fun m!71409 () Bool)

(assert (=> bs!3141 m!71409))

(assert (=> bs!3141 m!71227))

(declare-fun m!71411 () Bool)

(assert (=> bs!3141 m!71411))

(assert (=> bs!3141 m!71407))

(assert (=> b!72874 d!16827))

(declare-fun d!16829 () Bool)

(assert (=> d!16829 (= (valid!290 thiss!992) (valid!289 (v!2530 (underlying!260 thiss!992))))))

(declare-fun bs!3142 () Bool)

(assert (= bs!3142 d!16829))

(declare-fun m!71413 () Bool)

(assert (=> bs!3142 m!71413))

(assert (=> start!9754 d!16829))

(declare-fun d!16831 () Bool)

(assert (=> d!16831 (= (map!1151 newMap!16) (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun bs!3143 () Bool)

(assert (= bs!3143 d!16831))

(declare-fun m!71415 () Bool)

(assert (=> bs!3143 m!71415))

(assert (=> b!72886 d!16831))

(declare-fun b!73045 () Bool)

(declare-fun e!47807 () Bool)

(declare-fun e!47809 () Bool)

(assert (=> b!73045 (= e!47807 e!47809)))

(declare-fun res!38775 () Bool)

(declare-fun call!6374 () Bool)

(assert (=> b!73045 (= res!38775 call!6374)))

(assert (=> b!73045 (=> (not res!38775) (not e!47809))))

(declare-fun b!73046 () Bool)

(declare-fun e!47810 () Bool)

(assert (=> b!73046 (= e!47810 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73047 () Bool)

(declare-fun c!10821 () Bool)

(assert (=> b!73047 (= c!10821 (and (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47814 () ListLongMap!1419)

(declare-fun e!47816 () ListLongMap!1419)

(assert (=> b!73047 (= e!47814 e!47816)))

(declare-fun bm!6366 () Bool)

(declare-fun call!6369 () ListLongMap!1419)

(declare-fun call!6372 () ListLongMap!1419)

(assert (=> bm!6366 (= call!6369 call!6372)))

(declare-fun b!73048 () Bool)

(declare-fun res!38776 () Bool)

(declare-fun e!47804 () Bool)

(assert (=> b!73048 (=> (not res!38776) (not e!47804))))

(declare-fun e!47805 () Bool)

(assert (=> b!73048 (= res!38776 e!47805)))

(declare-fun res!38781 () Bool)

(assert (=> b!73048 (=> res!38781 e!47805)))

(assert (=> b!73048 (= res!38781 (not e!47810))))

(declare-fun res!38779 () Bool)

(assert (=> b!73048 (=> (not res!38779) (not e!47810))))

(assert (=> b!73048 (= res!38779 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun bm!6367 () Bool)

(declare-fun call!6370 () Bool)

(declare-fun lt!32681 () ListLongMap!1419)

(assert (=> bm!6367 (= call!6370 (contains!723 lt!32681 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73049 () Bool)

(declare-fun res!38773 () Bool)

(assert (=> b!73049 (=> (not res!38773) (not e!47804))))

(assert (=> b!73049 (= res!38773 e!47807)))

(declare-fun c!10819 () Bool)

(assert (=> b!73049 (= c!10819 (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6368 () Bool)

(declare-fun call!6375 () ListLongMap!1419)

(declare-fun call!6373 () ListLongMap!1419)

(assert (=> bm!6368 (= call!6375 call!6373)))

(declare-fun b!73050 () Bool)

(declare-fun e!47806 () Unit!2078)

(declare-fun Unit!2082 () Unit!2078)

(assert (=> b!73050 (= e!47806 Unit!2082)))

(declare-fun b!73051 () Bool)

(declare-fun e!47811 () Bool)

(assert (=> b!73051 (= e!47804 e!47811)))

(declare-fun c!10817 () Bool)

(assert (=> b!73051 (= c!10817 (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73052 () Bool)

(assert (=> b!73052 (= e!47816 call!6375)))

(declare-fun bm!6369 () Bool)

(declare-fun call!6371 () ListLongMap!1419)

(assert (=> bm!6369 (= call!6371 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!73053 () Bool)

(assert (=> b!73053 (= e!47811 (not call!6370))))

(declare-fun b!73054 () Bool)

(declare-fun e!47808 () ListLongMap!1419)

(assert (=> b!73054 (= e!47808 (+!94 call!6373 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73055 () Bool)

(declare-fun lt!32677 () Unit!2078)

(assert (=> b!73055 (= e!47806 lt!32677)))

(declare-fun lt!32671 () ListLongMap!1419)

(assert (=> b!73055 (= lt!32671 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun lt!32690 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32690 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32673 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32673 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32686 () Unit!2078)

(declare-fun addStillContains!51 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2078)

(assert (=> b!73055 (= lt!32686 (addStillContains!51 lt!32671 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32673))))

(assert (=> b!73055 (contains!723 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32673)))

(declare-fun lt!32676 () Unit!2078)

(assert (=> b!73055 (= lt!32676 lt!32686)))

(declare-fun lt!32674 () ListLongMap!1419)

(assert (=> b!73055 (= lt!32674 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun lt!32679 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32679 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32678 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32678 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32672 () Unit!2078)

(declare-fun addApplyDifferent!51 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2078)

(assert (=> b!73055 (= lt!32672 (addApplyDifferent!51 lt!32674 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32678))))

(assert (=> b!73055 (= (apply!75 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32678) (apply!75 lt!32674 lt!32678))))

(declare-fun lt!32682 () Unit!2078)

(assert (=> b!73055 (= lt!32682 lt!32672)))

(declare-fun lt!32685 () ListLongMap!1419)

(assert (=> b!73055 (= lt!32685 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun lt!32683 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32683 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32684 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32684 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32691 () Unit!2078)

(assert (=> b!73055 (= lt!32691 (addApplyDifferent!51 lt!32685 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32684))))

(assert (=> b!73055 (= (apply!75 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32684) (apply!75 lt!32685 lt!32684))))

(declare-fun lt!32680 () Unit!2078)

(assert (=> b!73055 (= lt!32680 lt!32691)))

(declare-fun lt!32688 () ListLongMap!1419)

(assert (=> b!73055 (= lt!32688 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun lt!32689 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32689 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32687 () (_ BitVec 64))

(assert (=> b!73055 (= lt!32687 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!73055 (= lt!32677 (addApplyDifferent!51 lt!32688 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32687))))

(assert (=> b!73055 (= (apply!75 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32687) (apply!75 lt!32688 lt!32687))))

(declare-fun b!73056 () Bool)

(declare-fun e!47812 () Bool)

(assert (=> b!73056 (= e!47812 (= (apply!75 lt!32681 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!73057 () Bool)

(assert (=> b!73057 (= e!47809 (= (apply!75 lt!32681 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!73058 () Bool)

(assert (=> b!73058 (= e!47816 call!6369)))

(declare-fun c!10816 () Bool)

(declare-fun c!10820 () Bool)

(declare-fun bm!6370 () Bool)

(assert (=> bm!6370 (= call!6373 (+!94 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73059 () Bool)

(assert (=> b!73059 (= e!47808 e!47814)))

(assert (=> b!73059 (= c!10820 (and (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73060 () Bool)

(declare-fun e!47815 () Bool)

(assert (=> b!73060 (= e!47815 (= (apply!75 lt!32681 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73060 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> b!73060 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73061 () Bool)

(assert (=> b!73061 (= e!47811 e!47812)))

(declare-fun res!38780 () Bool)

(assert (=> b!73061 (= res!38780 call!6370)))

(assert (=> b!73061 (=> (not res!38780) (not e!47812))))

(declare-fun d!16833 () Bool)

(assert (=> d!16833 e!47804))

(declare-fun res!38777 () Bool)

(assert (=> d!16833 (=> (not res!38777) (not e!47804))))

(assert (=> d!16833 (= res!38777 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun lt!32692 () ListLongMap!1419)

(assert (=> d!16833 (= lt!32681 lt!32692)))

(declare-fun lt!32675 () Unit!2078)

(assert (=> d!16833 (= lt!32675 e!47806)))

(declare-fun c!10818 () Bool)

(declare-fun e!47813 () Bool)

(assert (=> d!16833 (= c!10818 e!47813)))

(declare-fun res!38774 () Bool)

(assert (=> d!16833 (=> (not res!38774) (not e!47813))))

(assert (=> d!16833 (= res!38774 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!16833 (= lt!32692 e!47808)))

(assert (=> d!16833 (= c!10816 (and (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16833 (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992))))))

(assert (=> d!16833 (= (getCurrentListMap!422 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) lt!32681)))

(declare-fun b!73062 () Bool)

(assert (=> b!73062 (= e!47807 (not call!6374))))

(declare-fun b!73063 () Bool)

(assert (=> b!73063 (= e!47805 e!47815)))

(declare-fun res!38778 () Bool)

(assert (=> b!73063 (=> (not res!38778) (not e!47815))))

(assert (=> b!73063 (= res!38778 (contains!723 lt!32681 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73063 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun bm!6371 () Bool)

(assert (=> bm!6371 (= call!6374 (contains!723 lt!32681 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6372 () Bool)

(assert (=> bm!6372 (= call!6372 call!6371)))

(declare-fun b!73064 () Bool)

(assert (=> b!73064 (= e!47814 call!6375)))

(declare-fun b!73065 () Bool)

(assert (=> b!73065 (= e!47813 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16833 c!10816) b!73054))

(assert (= (and d!16833 (not c!10816)) b!73059))

(assert (= (and b!73059 c!10820) b!73064))

(assert (= (and b!73059 (not c!10820)) b!73047))

(assert (= (and b!73047 c!10821) b!73052))

(assert (= (and b!73047 (not c!10821)) b!73058))

(assert (= (or b!73052 b!73058) bm!6366))

(assert (= (or b!73064 bm!6366) bm!6372))

(assert (= (or b!73064 b!73052) bm!6368))

(assert (= (or b!73054 bm!6372) bm!6369))

(assert (= (or b!73054 bm!6368) bm!6370))

(assert (= (and d!16833 res!38774) b!73065))

(assert (= (and d!16833 c!10818) b!73055))

(assert (= (and d!16833 (not c!10818)) b!73050))

(assert (= (and d!16833 res!38777) b!73048))

(assert (= (and b!73048 res!38779) b!73046))

(assert (= (and b!73048 (not res!38781)) b!73063))

(assert (= (and b!73063 res!38778) b!73060))

(assert (= (and b!73048 res!38776) b!73049))

(assert (= (and b!73049 c!10819) b!73045))

(assert (= (and b!73049 (not c!10819)) b!73062))

(assert (= (and b!73045 res!38775) b!73057))

(assert (= (or b!73045 b!73062) bm!6371))

(assert (= (and b!73049 res!38773) b!73051))

(assert (= (and b!73051 c!10817) b!73061))

(assert (= (and b!73051 (not c!10817)) b!73053))

(assert (= (and b!73061 res!38780) b!73056))

(assert (= (or b!73061 b!73053) bm!6367))

(declare-fun b_lambda!3285 () Bool)

(assert (=> (not b_lambda!3285) (not b!73060)))

(assert (=> b!73060 t!5032))

(declare-fun b_and!4499 () Bool)

(assert (= b_and!4495 (and (=> t!5032 result!2679) b_and!4499)))

(assert (=> b!73060 t!5034))

(declare-fun b_and!4501 () Bool)

(assert (= b_and!4497 (and (=> t!5034 result!2683) b_and!4501)))

(assert (=> b!73060 m!71327))

(assert (=> b!73060 m!71339))

(assert (=> b!73060 m!71267))

(assert (=> b!73060 m!71341))

(assert (=> b!73060 m!71327))

(declare-fun m!71417 () Bool)

(assert (=> b!73060 m!71417))

(assert (=> b!73060 m!71267))

(assert (=> b!73060 m!71339))

(assert (=> bm!6369 m!71231))

(assert (=> d!16833 m!71223))

(declare-fun m!71419 () Bool)

(assert (=> bm!6367 m!71419))

(declare-fun m!71421 () Bool)

(assert (=> bm!6371 m!71421))

(declare-fun m!71423 () Bool)

(assert (=> bm!6370 m!71423))

(declare-fun m!71425 () Bool)

(assert (=> b!73057 m!71425))

(assert (=> b!73046 m!71327))

(assert (=> b!73046 m!71327))

(assert (=> b!73046 m!71333))

(assert (=> b!73065 m!71327))

(assert (=> b!73065 m!71327))

(assert (=> b!73065 m!71333))

(declare-fun m!71427 () Bool)

(assert (=> b!73054 m!71427))

(declare-fun m!71429 () Bool)

(assert (=> b!73056 m!71429))

(declare-fun m!71431 () Bool)

(assert (=> b!73055 m!71431))

(declare-fun m!71433 () Bool)

(assert (=> b!73055 m!71433))

(assert (=> b!73055 m!71231))

(declare-fun m!71435 () Bool)

(assert (=> b!73055 m!71435))

(assert (=> b!73055 m!71327))

(declare-fun m!71437 () Bool)

(assert (=> b!73055 m!71437))

(declare-fun m!71439 () Bool)

(assert (=> b!73055 m!71439))

(declare-fun m!71441 () Bool)

(assert (=> b!73055 m!71441))

(declare-fun m!71443 () Bool)

(assert (=> b!73055 m!71443))

(declare-fun m!71445 () Bool)

(assert (=> b!73055 m!71445))

(declare-fun m!71447 () Bool)

(assert (=> b!73055 m!71447))

(declare-fun m!71449 () Bool)

(assert (=> b!73055 m!71449))

(declare-fun m!71451 () Bool)

(assert (=> b!73055 m!71451))

(assert (=> b!73055 m!71449))

(declare-fun m!71453 () Bool)

(assert (=> b!73055 m!71453))

(assert (=> b!73055 m!71431))

(declare-fun m!71455 () Bool)

(assert (=> b!73055 m!71455))

(assert (=> b!73055 m!71443))

(assert (=> b!73055 m!71433))

(declare-fun m!71457 () Bool)

(assert (=> b!73055 m!71457))

(declare-fun m!71459 () Bool)

(assert (=> b!73055 m!71459))

(assert (=> b!73063 m!71327))

(assert (=> b!73063 m!71327))

(declare-fun m!71461 () Bool)

(assert (=> b!73063 m!71461))

(assert (=> b!72886 d!16833))

(declare-fun d!16835 () Bool)

(assert (=> d!16835 (= (array_inv!1145 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvsge (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72873 d!16835))

(declare-fun d!16837 () Bool)

(assert (=> d!16837 (= (array_inv!1146 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvsge (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72873 d!16837))

(declare-fun d!16839 () Bool)

(declare-fun res!38788 () Bool)

(declare-fun e!47819 () Bool)

(assert (=> d!16839 (=> (not res!38788) (not e!47819))))

(declare-fun simpleValid!51 (LongMapFixedSize!696) Bool)

(assert (=> d!16839 (= res!38788 (simpleValid!51 newMap!16))))

(assert (=> d!16839 (= (valid!289 newMap!16) e!47819)))

(declare-fun b!73072 () Bool)

(declare-fun res!38789 () Bool)

(assert (=> b!73072 (=> (not res!38789) (not e!47819))))

(declare-fun arrayCountValidKeys!0 (array!3895 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73072 (= res!38789 (= (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (_size!397 newMap!16)))))

(declare-fun b!73073 () Bool)

(declare-fun res!38790 () Bool)

(assert (=> b!73073 (=> (not res!38790) (not e!47819))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3895 (_ BitVec 32)) Bool)

(assert (=> b!73073 (= res!38790 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73074 () Bool)

(assert (=> b!73074 (= e!47819 (arrayNoDuplicates!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 Nil!1476))))

(assert (= (and d!16839 res!38788) b!73072))

(assert (= (and b!73072 res!38789) b!73073))

(assert (= (and b!73073 res!38790) b!73074))

(declare-fun m!71463 () Bool)

(assert (=> d!16839 m!71463))

(declare-fun m!71465 () Bool)

(assert (=> b!73072 m!71465))

(declare-fun m!71467 () Bool)

(assert (=> b!73073 m!71467))

(declare-fun m!71469 () Bool)

(assert (=> b!73074 m!71469))

(assert (=> b!72876 d!16839))

(declare-fun d!16841 () Bool)

(declare-fun c!10824 () Bool)

(assert (=> d!16841 (= c!10824 ((_ is ValueCellFull!894) (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun e!47822 () V!2947)

(assert (=> d!16841 (= (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47822)))

(declare-fun b!73079 () Bool)

(declare-fun get!1140 (ValueCell!894 V!2947) V!2947)

(assert (=> b!73079 (= e!47822 (get!1140 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73080 () Bool)

(declare-fun get!1141 (ValueCell!894 V!2947) V!2947)

(assert (=> b!73080 (= e!47822 (get!1141 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16841 c!10824) b!73079))

(assert (= (and d!16841 (not c!10824)) b!73080))

(assert (=> b!73079 m!71265))

(assert (=> b!73079 m!71267))

(declare-fun m!71471 () Bool)

(assert (=> b!73079 m!71471))

(assert (=> b!73080 m!71265))

(assert (=> b!73080 m!71267))

(declare-fun m!71473 () Bool)

(assert (=> b!73080 m!71473))

(assert (=> b!72875 d!16841))

(declare-fun d!16843 () Bool)

(assert (=> d!16843 (not (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32695 () Unit!2078)

(declare-fun choose!68 (array!3895 (_ BitVec 32) (_ BitVec 64) List!1479) Unit!2078)

(assert (=> d!16843 (= lt!32695 (choose!68 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476)))))

(assert (=> d!16843 (bvslt (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16843 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476)) lt!32695)))

(declare-fun bs!3144 () Bool)

(assert (= bs!3144 d!16843))

(assert (=> bs!3144 m!71227))

(assert (=> bs!3144 m!71261))

(assert (=> bs!3144 m!71227))

(declare-fun m!71475 () Bool)

(assert (=> bs!3144 m!71475))

(assert (=> b!72879 d!16843))

(declare-fun d!16845 () Bool)

(assert (=> d!16845 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) from!355 Nil!1476)))

(declare-fun lt!32698 () Unit!2078)

(declare-fun choose!39 (array!3895 (_ BitVec 32) (_ BitVec 32)) Unit!2078)

(assert (=> d!16845 (= lt!32698 (choose!39 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!16845 (bvslt (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16845 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 from!355) lt!32698)))

(declare-fun bs!3145 () Bool)

(assert (= bs!3145 d!16845))

(assert (=> bs!3145 m!71257))

(declare-fun m!71477 () Bool)

(assert (=> bs!3145 m!71477))

(assert (=> b!72879 d!16845))

(declare-fun d!16847 () Bool)

(declare-fun res!38795 () Bool)

(declare-fun e!47827 () Bool)

(assert (=> d!16847 (=> res!38795 e!47827)))

(assert (=> d!16847 (= res!38795 (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16847 (= (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!47827)))

(declare-fun b!73085 () Bool)

(declare-fun e!47828 () Bool)

(assert (=> b!73085 (= e!47827 e!47828)))

(declare-fun res!38796 () Bool)

(assert (=> b!73085 (=> (not res!38796) (not e!47828))))

(assert (=> b!73085 (= res!38796 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73086 () Bool)

(assert (=> b!73086 (= e!47828 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!16847 (not res!38795)) b!73085))

(assert (= (and b!73085 res!38796) b!73086))

(assert (=> d!16847 m!71327))

(assert (=> b!73086 m!71227))

(declare-fun m!71479 () Bool)

(assert (=> b!73086 m!71479))

(assert (=> b!72879 d!16847))

(declare-fun d!16849 () Bool)

(declare-fun e!47831 () Bool)

(assert (=> d!16849 e!47831))

(declare-fun c!10827 () Bool)

(assert (=> d!16849 (= c!10827 (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!32701 () Unit!2078)

(declare-fun choose!411 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2078)

(assert (=> d!16849 (= lt!32701 (choose!411 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(assert (=> d!16849 (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992))))))

(assert (=> d!16849 (= (lemmaListMapContainsThenArrayContainsFrom!49 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) lt!32701)))

(declare-fun b!73091 () Bool)

(assert (=> b!73091 (= e!47831 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73092 () Bool)

(assert (=> b!73092 (= e!47831 (ite (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16849 c!10827) b!73091))

(assert (= (and d!16849 (not c!10827)) b!73092))

(assert (=> d!16849 m!71227))

(declare-fun m!71481 () Bool)

(assert (=> d!16849 m!71481))

(assert (=> d!16849 m!71223))

(assert (=> b!73091 m!71227))

(assert (=> b!73091 m!71261))

(assert (=> b!72879 d!16849))

(declare-fun b!73103 () Bool)

(declare-fun e!47841 () Bool)

(declare-fun contains!725 (List!1479 (_ BitVec 64)) Bool)

(assert (=> b!73103 (= e!47841 (contains!725 Nil!1476 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73104 () Bool)

(declare-fun e!47840 () Bool)

(declare-fun call!6378 () Bool)

(assert (=> b!73104 (= e!47840 call!6378)))

(declare-fun b!73105 () Bool)

(declare-fun e!47842 () Bool)

(declare-fun e!47843 () Bool)

(assert (=> b!73105 (= e!47842 e!47843)))

(declare-fun res!38805 () Bool)

(assert (=> b!73105 (=> (not res!38805) (not e!47843))))

(assert (=> b!73105 (= res!38805 (not e!47841))))

(declare-fun res!38804 () Bool)

(assert (=> b!73105 (=> (not res!38804) (not e!47841))))

(assert (=> b!73105 (= res!38804 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73106 () Bool)

(assert (=> b!73106 (= e!47843 e!47840)))

(declare-fun c!10830 () Bool)

(assert (=> b!73106 (= c!10830 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73107 () Bool)

(assert (=> b!73107 (= e!47840 call!6378)))

(declare-fun d!16851 () Bool)

(declare-fun res!38803 () Bool)

(assert (=> d!16851 (=> res!38803 e!47842)))

(assert (=> d!16851 (= res!38803 (bvsge from!355 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!16851 (= (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) from!355 Nil!1476) e!47842)))

(declare-fun bm!6375 () Bool)

(assert (=> bm!6375 (= call!6378 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)))))

(assert (= (and d!16851 (not res!38803)) b!73105))

(assert (= (and b!73105 res!38804) b!73103))

(assert (= (and b!73105 res!38805) b!73106))

(assert (= (and b!73106 c!10830) b!73104))

(assert (= (and b!73106 (not c!10830)) b!73107))

(assert (= (or b!73104 b!73107) bm!6375))

(assert (=> b!73103 m!71227))

(assert (=> b!73103 m!71227))

(declare-fun m!71483 () Bool)

(assert (=> b!73103 m!71483))

(assert (=> b!73105 m!71227))

(assert (=> b!73105 m!71227))

(declare-fun m!71485 () Bool)

(assert (=> b!73105 m!71485))

(assert (=> b!73106 m!71227))

(assert (=> b!73106 m!71227))

(assert (=> b!73106 m!71485))

(assert (=> bm!6375 m!71227))

(declare-fun m!71487 () Bool)

(assert (=> bm!6375 m!71487))

(assert (=> b!72879 d!16851))

(declare-fun d!16853 () Bool)

(declare-fun e!47849 () Bool)

(assert (=> d!16853 e!47849))

(declare-fun res!38808 () Bool)

(assert (=> d!16853 (=> res!38808 e!47849)))

(declare-fun lt!32713 () Bool)

(assert (=> d!16853 (= res!38808 (not lt!32713))))

(declare-fun lt!32712 () Bool)

(assert (=> d!16853 (= lt!32713 lt!32712)))

(declare-fun lt!32711 () Unit!2078)

(declare-fun e!47848 () Unit!2078)

(assert (=> d!16853 (= lt!32711 e!47848)))

(declare-fun c!10833 () Bool)

(assert (=> d!16853 (= c!10833 lt!32712)))

(declare-fun containsKey!137 (List!1478 (_ BitVec 64)) Bool)

(assert (=> d!16853 (= lt!32712 (containsKey!137 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16853 (= (contains!723 lt!32541 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!32713)))

(declare-fun b!73114 () Bool)

(declare-fun lt!32710 () Unit!2078)

(assert (=> b!73114 (= e!47848 lt!32710)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!85 (List!1478 (_ BitVec 64)) Unit!2078)

(assert (=> b!73114 (= lt!32710 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun isDefined!86 (Option!139) Bool)

(assert (=> b!73114 (isDefined!86 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73115 () Bool)

(declare-fun Unit!2083 () Unit!2078)

(assert (=> b!73115 (= e!47848 Unit!2083)))

(declare-fun b!73116 () Bool)

(assert (=> b!73116 (= e!47849 (isDefined!86 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (= (and d!16853 c!10833) b!73114))

(assert (= (and d!16853 (not c!10833)) b!73115))

(assert (= (and d!16853 (not res!38808)) b!73116))

(assert (=> d!16853 m!71227))

(declare-fun m!71489 () Bool)

(assert (=> d!16853 m!71489))

(assert (=> b!73114 m!71227))

(declare-fun m!71491 () Bool)

(assert (=> b!73114 m!71491))

(assert (=> b!73114 m!71227))

(declare-fun m!71493 () Bool)

(assert (=> b!73114 m!71493))

(assert (=> b!73114 m!71493))

(declare-fun m!71495 () Bool)

(assert (=> b!73114 m!71495))

(assert (=> b!73116 m!71227))

(assert (=> b!73116 m!71493))

(assert (=> b!73116 m!71493))

(assert (=> b!73116 m!71495))

(assert (=> b!72888 d!16853))

(declare-fun bm!6424 () Bool)

(declare-fun call!6439 () ListLongMap!1419)

(declare-fun call!6449 () ListLongMap!1419)

(assert (=> bm!6424 (= call!6439 call!6449)))

(declare-fun d!16855 () Bool)

(declare-fun e!47896 () Bool)

(assert (=> d!16855 e!47896))

(declare-fun res!38842 () Bool)

(assert (=> d!16855 (=> (not res!38842) (not e!47896))))

(declare-fun lt!32791 () tuple2!2124)

(assert (=> d!16855 (= res!38842 (valid!289 (_2!1073 lt!32791)))))

(declare-fun e!47903 () tuple2!2124)

(assert (=> d!16855 (= lt!32791 e!47903)))

(declare-fun c!10872 () Bool)

(assert (=> d!16855 (= c!10872 (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvneg (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (=> d!16855 (valid!289 newMap!16)))

(assert (=> d!16855 (= (update!96 newMap!16 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533) lt!32791)))

(declare-fun e!47904 () ListLongMap!1419)

(declare-fun c!10871 () Bool)

(declare-fun call!6440 () ListLongMap!1419)

(declare-fun call!6435 () ListLongMap!1419)

(declare-fun b!73201 () Bool)

(assert (=> b!73201 (= e!47904 (ite c!10871 call!6435 call!6440))))

(declare-fun bm!6425 () Bool)

(declare-fun call!6430 () ListLongMap!1419)

(assert (=> bm!6425 (= call!6430 (map!1151 (_2!1073 lt!32791)))))

(declare-fun b!73202 () Bool)

(declare-fun e!47895 () tuple2!2124)

(assert (=> b!73202 (= e!47903 e!47895)))

(declare-datatypes ((SeekEntryResult!236 0))(
  ( (MissingZero!236 (index!3075 (_ BitVec 32))) (Found!236 (index!3076 (_ BitVec 32))) (Intermediate!236 (undefined!1048 Bool) (index!3077 (_ BitVec 32)) (x!11152 (_ BitVec 32))) (Undefined!236) (MissingVacant!236 (index!3078 (_ BitVec 32))) )
))
(declare-fun lt!32789 () SeekEntryResult!236)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3895 (_ BitVec 32)) SeekEntryResult!236)

(assert (=> b!73202 (= lt!32789 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun c!10866 () Bool)

(assert (=> b!73202 (= c!10866 ((_ is Undefined!236) lt!32789))))

(declare-fun e!47906 () Bool)

(declare-fun b!73203 () Bool)

(declare-fun lt!32776 () SeekEntryResult!236)

(assert (=> b!73203 (= e!47906 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32776)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73204 () Bool)

(declare-fun e!47901 () ListLongMap!1419)

(assert (=> b!73204 (= e!47901 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun bm!6426 () Bool)

(declare-fun lt!32775 () (_ BitVec 32))

(assert (=> bm!6426 (= call!6449 (getCurrentListMap!422 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73205 () Bool)

(declare-fun e!47915 () Bool)

(assert (=> b!73205 (= e!47896 e!47915)))

(declare-fun c!10870 () Bool)

(assert (=> b!73205 (= c!10870 (_1!1073 lt!32791))))

(declare-fun bm!6427 () Bool)

(declare-fun c!10863 () Bool)

(assert (=> bm!6427 (= c!10863 c!10866)))

(declare-fun call!6445 () Bool)

(assert (=> bm!6427 (= call!6445 (contains!723 e!47901 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73206 () Bool)

(declare-fun lt!32790 () Unit!2078)

(declare-fun lt!32774 () Unit!2078)

(assert (=> b!73206 (= lt!32790 lt!32774)))

(declare-fun call!6442 () ListLongMap!1419)

(assert (=> b!73206 (contains!723 call!6442 (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))

(declare-fun lt!32777 () array!3897)

(declare-fun lemmaValidKeyInArrayIsInListMap!85 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) Unit!2078)

(assert (=> b!73206 (= lt!32774 (lemmaValidKeyInArrayIsInListMap!85 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (defaultEntry!2213 newMap!16)))))

(assert (=> b!73206 (= lt!32777 (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))))

(declare-fun lt!32785 () Unit!2078)

(declare-fun lt!32781 () Unit!2078)

(assert (=> b!73206 (= lt!32785 lt!32781)))

(declare-fun call!6428 () ListLongMap!1419)

(assert (=> b!73206 (= call!6428 call!6439)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2078)

(assert (=> b!73206 (= lt!32781 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32770 () Unit!2078)

(declare-fun e!47910 () Unit!2078)

(assert (=> b!73206 (= lt!32770 e!47910)))

(declare-fun c!10868 () Bool)

(assert (=> b!73206 (= c!10868 call!6445)))

(declare-fun e!47894 () tuple2!2124)

(assert (=> b!73206 (= e!47894 (tuple2!2125 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (_size!397 newMap!16) (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (_vacant!397 newMap!16))))))

(declare-fun bm!6428 () Bool)

(declare-fun call!6443 () Bool)

(declare-fun call!6432 () Bool)

(assert (=> bm!6428 (= call!6443 call!6432)))

(declare-fun b!73207 () Bool)

(declare-fun res!38840 () Bool)

(declare-fun call!6441 () Bool)

(assert (=> b!73207 (= res!38840 call!6441)))

(declare-fun e!47912 () Bool)

(assert (=> b!73207 (=> (not res!38840) (not e!47912))))

(declare-fun b!73208 () Bool)

(declare-fun lt!32788 () Unit!2078)

(declare-fun lt!32772 () Unit!2078)

(assert (=> b!73208 (= lt!32788 lt!32772)))

(declare-fun call!6450 () ListLongMap!1419)

(assert (=> b!73208 (= call!6450 call!6435)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2078)

(assert (=> b!73208 (= lt!32772 (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32775 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32533 (defaultEntry!2213 newMap!16)))))

(assert (=> b!73208 (= lt!32775 (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!47902 () tuple2!2124)

(assert (=> b!73208 (= e!47902 (tuple2!2125 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) (zeroValue!2115 newMap!16) lt!32533 (_size!397 newMap!16) (_keys!3865 newMap!16) (_values!2196 newMap!16) (_vacant!397 newMap!16))))))

(declare-fun b!73209 () Bool)

(declare-fun e!47899 () Bool)

(declare-fun e!47908 () Bool)

(assert (=> b!73209 (= e!47899 e!47908)))

(declare-fun res!38850 () Bool)

(declare-fun call!6444 () Bool)

(assert (=> b!73209 (= res!38850 call!6444)))

(assert (=> b!73209 (=> (not res!38850) (not e!47908))))

(declare-fun b!73210 () Bool)

(declare-fun e!47907 () tuple2!2124)

(declare-fun lt!32769 () tuple2!2124)

(assert (=> b!73210 (= e!47907 (tuple2!2125 (_1!1073 lt!32769) (_2!1073 lt!32769)))))

(declare-fun call!6448 () tuple2!2124)

(assert (=> b!73210 (= lt!32769 call!6448)))

(declare-fun b!73211 () Bool)

(declare-fun call!6433 () ListLongMap!1419)

(assert (=> b!73211 (= e!47915 (= call!6430 call!6433))))

(declare-fun b!73212 () Bool)

(declare-fun res!38849 () Bool)

(declare-fun lt!32779 () SeekEntryResult!236)

(assert (=> b!73212 (= res!38849 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!32779)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47897 () Bool)

(assert (=> b!73212 (=> (not res!38849) (not e!47897))))

(declare-fun call!6429 () SeekEntryResult!236)

(declare-fun bm!6429 () Bool)

(assert (=> bm!6429 (= call!6429 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun e!47898 () Bool)

(declare-fun b!73213 () Bool)

(assert (=> b!73213 (= e!47898 (= call!6430 (+!94 call!6433 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!73214 () Bool)

(declare-fun lt!32787 () Unit!2078)

(declare-fun lt!32778 () Unit!2078)

(assert (=> b!73214 (= lt!32787 lt!32778)))

(assert (=> b!73214 (= call!6450 call!6440)))

(declare-fun lt!32768 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!24 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2078)

(assert (=> b!73214 (= lt!32778 (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32768 (zeroValue!2115 newMap!16) lt!32533 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)))))

(assert (=> b!73214 (= lt!32768 (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!73214 (= e!47902 (tuple2!2125 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) lt!32533 (minValue!2115 newMap!16) (_size!397 newMap!16) (_keys!3865 newMap!16) (_values!2196 newMap!16) (_vacant!397 newMap!16))))))

(declare-fun b!73215 () Bool)

(declare-fun e!47905 () Unit!2078)

(declare-fun Unit!2084 () Unit!2078)

(assert (=> b!73215 (= e!47905 Unit!2084)))

(declare-fun lt!32773 () Unit!2078)

(declare-fun call!6447 () Unit!2078)

(assert (=> b!73215 (= lt!32773 call!6447)))

(declare-fun call!6434 () SeekEntryResult!236)

(assert (=> b!73215 (= lt!32776 call!6434)))

(declare-fun res!38847 () Bool)

(assert (=> b!73215 (= res!38847 ((_ is Found!236) lt!32776))))

(assert (=> b!73215 (=> (not res!38847) (not e!47906))))

(assert (=> b!73215 e!47906))

(declare-fun lt!32782 () Unit!2078)

(assert (=> b!73215 (= lt!32782 lt!32773)))

(assert (=> b!73215 false))

(declare-fun c!10865 () Bool)

(declare-fun bm!6430 () Bool)

(declare-fun updateHelperNewKey!24 (LongMapFixedSize!696 (_ BitVec 64) V!2947 (_ BitVec 32)) tuple2!2124)

(assert (=> bm!6430 (= call!6448 (updateHelperNewKey!24 newMap!16 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))

(declare-fun bm!6431 () Bool)

(assert (=> bm!6431 (= call!6433 (map!1151 newMap!16))))

(declare-fun call!6431 () Unit!2078)

(declare-fun bm!6432 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2078)

(assert (=> bm!6432 (= call!6431 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(declare-fun bm!6433 () Bool)

(assert (=> bm!6433 (= call!6440 call!6442)))

(declare-fun b!73216 () Bool)

(declare-fun e!47909 () Bool)

(assert (=> b!73216 (= e!47909 ((_ is Undefined!236) lt!32779))))

(declare-fun bm!6434 () Bool)

(assert (=> bm!6434 (= call!6435 call!6449)))

(declare-fun bm!6435 () Bool)

(declare-fun call!6436 () Bool)

(declare-fun call!6438 () Bool)

(assert (=> bm!6435 (= call!6436 call!6438)))

(declare-fun b!73217 () Bool)

(assert (=> b!73217 (= e!47903 e!47902)))

(assert (=> b!73217 (= c!10871 (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73218 () Bool)

(assert (=> b!73218 (= e!47901 call!6439)))

(declare-fun b!73219 () Bool)

(declare-fun res!38839 () Bool)

(assert (=> b!73219 (= res!38839 call!6436)))

(assert (=> b!73219 (=> (not res!38839) (not e!47906))))

(declare-fun b!73220 () Bool)

(assert (=> b!73220 (= e!47904 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73221 () Bool)

(assert (=> b!73221 (= c!10865 ((_ is MissingVacant!236) lt!32789))))

(assert (=> b!73221 (= e!47895 e!47907)))

(declare-fun b!73222 () Bool)

(declare-fun lt!32784 () Unit!2078)

(assert (=> b!73222 (= e!47910 lt!32784)))

(assert (=> b!73222 (= lt!32784 call!6447)))

(declare-fun lt!32771 () SeekEntryResult!236)

(declare-fun call!6427 () SeekEntryResult!236)

(assert (=> b!73222 (= lt!32771 call!6427)))

(declare-fun res!38837 () Bool)

(assert (=> b!73222 (= res!38837 ((_ is Found!236) lt!32771))))

(assert (=> b!73222 (=> (not res!38837) (not e!47912))))

(assert (=> b!73222 e!47912))

(declare-fun b!73223 () Bool)

(declare-fun res!38841 () Bool)

(declare-fun lt!32783 () SeekEntryResult!236)

(assert (=> b!73223 (= res!38841 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!32783)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73223 (=> (not res!38841) (not e!47908))))

(declare-fun b!73224 () Bool)

(assert (=> b!73224 (= e!47907 e!47894)))

(declare-fun c!10869 () Bool)

(assert (=> b!73224 (= c!10869 ((_ is MissingZero!236) lt!32789))))

(declare-fun b!73225 () Bool)

(declare-fun Unit!2085 () Unit!2078)

(assert (=> b!73225 (= e!47910 Unit!2085)))

(declare-fun lt!32794 () Unit!2078)

(assert (=> b!73225 (= lt!32794 call!6431)))

(assert (=> b!73225 (= lt!32783 call!6427)))

(declare-fun c!10874 () Bool)

(assert (=> b!73225 (= c!10874 ((_ is MissingZero!236) lt!32783))))

(declare-fun e!47913 () Bool)

(assert (=> b!73225 e!47913))

(declare-fun lt!32780 () Unit!2078)

(assert (=> b!73225 (= lt!32780 lt!32794)))

(assert (=> b!73225 false))

(declare-fun b!73226 () Bool)

(assert (=> b!73226 (= e!47915 e!47898)))

(declare-fun res!38845 () Bool)

(assert (=> b!73226 (= res!38845 (contains!723 call!6430 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!73226 (=> (not res!38845) (not e!47898))))

(declare-fun b!73227 () Bool)

(declare-fun call!6437 () Bool)

(assert (=> b!73227 (= e!47897 (not call!6437))))

(declare-fun b!73228 () Bool)

(declare-fun lt!32792 () Unit!2078)

(assert (=> b!73228 (= e!47905 lt!32792)))

(assert (=> b!73228 (= lt!32792 call!6431)))

(assert (=> b!73228 (= lt!32779 call!6434)))

(declare-fun c!10875 () Bool)

(assert (=> b!73228 (= c!10875 ((_ is MissingZero!236) lt!32779))))

(declare-fun e!47911 () Bool)

(assert (=> b!73228 e!47911))

(declare-fun b!73229 () Bool)

(declare-fun res!38844 () Bool)

(declare-fun e!47914 () Bool)

(assert (=> b!73229 (=> (not res!38844) (not e!47914))))

(assert (=> b!73229 (= res!38844 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!32779)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73230 () Bool)

(declare-fun res!38846 () Bool)

(declare-fun e!47900 () Bool)

(assert (=> b!73230 (=> (not res!38846) (not e!47900))))

(assert (=> b!73230 (= res!38846 call!6444)))

(assert (=> b!73230 (= e!47913 e!47900)))

(declare-fun bm!6436 () Bool)

(assert (=> bm!6436 (= call!6434 call!6429)))

(declare-fun b!73231 () Bool)

(declare-fun lt!32793 () Unit!2078)

(assert (=> b!73231 (= lt!32793 e!47905)))

(declare-fun c!10864 () Bool)

(assert (=> b!73231 (= c!10864 call!6445)))

(assert (=> b!73231 (= e!47895 (tuple2!2125 false newMap!16))))

(declare-fun b!73232 () Bool)

(assert (=> b!73232 (= e!47899 ((_ is Undefined!236) lt!32783))))

(declare-fun b!73233 () Bool)

(assert (=> b!73233 (= e!47900 (not call!6443))))

(declare-fun b!73234 () Bool)

(declare-fun res!38843 () Bool)

(assert (=> b!73234 (=> (not res!38843) (not e!47900))))

(assert (=> b!73234 (= res!38843 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!32783)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6437 () Bool)

(assert (=> bm!6437 (= call!6450 call!6428)))

(declare-fun bm!6438 () Bool)

(assert (=> bm!6438 (= call!6428 (+!94 e!47904 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun c!10862 () Bool)

(assert (=> bm!6438 (= c!10862 c!10872)))

(declare-fun bm!6439 () Bool)

(assert (=> bm!6439 (= call!6444 call!6441)))

(declare-fun b!73235 () Bool)

(declare-fun res!38838 () Bool)

(assert (=> b!73235 (=> (not res!38838) (not e!47914))))

(declare-fun call!6446 () Bool)

(assert (=> b!73235 (= res!38838 call!6446)))

(assert (=> b!73235 (= e!47911 e!47914)))

(declare-fun b!73236 () Bool)

(declare-fun lt!32786 () tuple2!2124)

(assert (=> b!73236 (= lt!32786 call!6448)))

(assert (=> b!73236 (= e!47894 (tuple2!2125 (_1!1073 lt!32786) (_2!1073 lt!32786)))))

(declare-fun bm!6440 () Bool)

(assert (=> bm!6440 (= call!6446 call!6436)))

(declare-fun b!73237 () Bool)

(declare-fun c!10867 () Bool)

(assert (=> b!73237 (= c!10867 ((_ is MissingVacant!236) lt!32779))))

(assert (=> b!73237 (= e!47911 e!47909)))

(declare-fun b!73238 () Bool)

(assert (=> b!73238 (= e!47909 e!47897)))

(declare-fun res!38848 () Bool)

(assert (=> b!73238 (= res!38848 call!6446)))

(assert (=> b!73238 (=> (not res!38848) (not e!47897))))

(declare-fun b!73239 () Bool)

(declare-fun c!10873 () Bool)

(assert (=> b!73239 (= c!10873 ((_ is MissingVacant!236) lt!32783))))

(assert (=> b!73239 (= e!47913 e!47899)))

(declare-fun bm!6441 () Bool)

(assert (=> bm!6441 (= call!6432 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6442 () Bool)

(assert (=> bm!6442 (= call!6437 call!6432)))

(declare-fun bm!6443 () Bool)

(assert (=> bm!6443 (= call!6442 (getCurrentListMap!422 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun bm!6444 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6444 (= call!6438 (inRange!0 (ite c!10866 (ite c!10864 (index!3076 lt!32776) (ite c!10875 (index!3075 lt!32779) (index!3078 lt!32779))) (ite c!10868 (index!3076 lt!32771) (ite c!10874 (index!3075 lt!32783) (index!3078 lt!32783)))) (mask!6180 newMap!16)))))

(declare-fun bm!6445 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2078)

(assert (=> bm!6445 (= call!6447 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(declare-fun bm!6446 () Bool)

(assert (=> bm!6446 (= call!6427 call!6429)))

(declare-fun b!73240 () Bool)

(assert (=> b!73240 (= e!47908 (not call!6443))))

(declare-fun bm!6447 () Bool)

(assert (=> bm!6447 (= call!6441 call!6438)))

(declare-fun b!73241 () Bool)

(assert (=> b!73241 (= e!47914 (not call!6437))))

(declare-fun b!73242 () Bool)

(assert (=> b!73242 (= e!47912 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32771)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!16855 c!10872) b!73217))

(assert (= (and d!16855 (not c!10872)) b!73202))

(assert (= (and b!73217 c!10871) b!73214))

(assert (= (and b!73217 (not c!10871)) b!73208))

(assert (= (or b!73214 b!73208) bm!6434))

(assert (= (or b!73214 b!73208) bm!6433))

(assert (= (or b!73214 b!73208) bm!6437))

(assert (= (and b!73202 c!10866) b!73231))

(assert (= (and b!73202 (not c!10866)) b!73221))

(assert (= (and b!73231 c!10864) b!73215))

(assert (= (and b!73231 (not c!10864)) b!73228))

(assert (= (and b!73215 res!38847) b!73219))

(assert (= (and b!73219 res!38839) b!73203))

(assert (= (and b!73228 c!10875) b!73235))

(assert (= (and b!73228 (not c!10875)) b!73237))

(assert (= (and b!73235 res!38838) b!73229))

(assert (= (and b!73229 res!38844) b!73241))

(assert (= (and b!73237 c!10867) b!73238))

(assert (= (and b!73237 (not c!10867)) b!73216))

(assert (= (and b!73238 res!38848) b!73212))

(assert (= (and b!73212 res!38849) b!73227))

(assert (= (or b!73235 b!73238) bm!6440))

(assert (= (or b!73241 b!73227) bm!6442))

(assert (= (or b!73219 bm!6440) bm!6435))

(assert (= (or b!73215 b!73228) bm!6436))

(assert (= (and b!73221 c!10865) b!73210))

(assert (= (and b!73221 (not c!10865)) b!73224))

(assert (= (and b!73224 c!10869) b!73236))

(assert (= (and b!73224 (not c!10869)) b!73206))

(assert (= (and b!73206 c!10868) b!73222))

(assert (= (and b!73206 (not c!10868)) b!73225))

(assert (= (and b!73222 res!38837) b!73207))

(assert (= (and b!73207 res!38840) b!73242))

(assert (= (and b!73225 c!10874) b!73230))

(assert (= (and b!73225 (not c!10874)) b!73239))

(assert (= (and b!73230 res!38846) b!73234))

(assert (= (and b!73234 res!38843) b!73233))

(assert (= (and b!73239 c!10873) b!73209))

(assert (= (and b!73239 (not c!10873)) b!73232))

(assert (= (and b!73209 res!38850) b!73223))

(assert (= (and b!73223 res!38841) b!73240))

(assert (= (or b!73230 b!73209) bm!6439))

(assert (= (or b!73233 b!73240) bm!6428))

(assert (= (or b!73207 bm!6439) bm!6447))

(assert (= (or b!73222 b!73225) bm!6446))

(assert (= (or b!73210 b!73236) bm!6430))

(assert (= (or bm!6436 bm!6446) bm!6429))

(assert (= (or bm!6435 bm!6447) bm!6444))

(assert (= (or b!73231 b!73206) bm!6424))

(assert (= (or bm!6442 bm!6428) bm!6441))

(assert (= (or b!73215 b!73222) bm!6445))

(assert (= (or b!73228 b!73225) bm!6432))

(assert (= (or b!73231 b!73206) bm!6427))

(assert (= (and bm!6427 c!10863) b!73218))

(assert (= (and bm!6427 (not c!10863)) b!73204))

(assert (= (or bm!6433 b!73206) bm!6443))

(assert (= (or bm!6434 bm!6424) bm!6426))

(assert (= (or bm!6437 b!73206) bm!6438))

(assert (= (and bm!6438 c!10862) b!73201))

(assert (= (and bm!6438 (not c!10862)) b!73220))

(assert (= (and d!16855 res!38842) b!73205))

(assert (= (and b!73205 c!10870) b!73226))

(assert (= (and b!73205 (not c!10870)) b!73211))

(assert (= (and b!73226 res!38845) b!73213))

(assert (= (or b!73226 b!73213 b!73211) bm!6425))

(assert (= (or b!73213 b!73211) bm!6431))

(declare-fun m!71497 () Bool)

(assert (=> bm!6443 m!71497))

(declare-fun m!71499 () Bool)

(assert (=> b!73234 m!71499))

(assert (=> b!73202 m!71227))

(declare-fun m!71501 () Bool)

(assert (=> b!73202 m!71501))

(assert (=> bm!6430 m!71227))

(declare-fun m!71503 () Bool)

(assert (=> bm!6430 m!71503))

(assert (=> bm!6441 m!71227))

(declare-fun m!71505 () Bool)

(assert (=> bm!6441 m!71505))

(declare-fun m!71507 () Bool)

(assert (=> bm!6444 m!71507))

(declare-fun m!71509 () Bool)

(assert (=> bm!6426 m!71509))

(declare-fun m!71511 () Bool)

(assert (=> bm!6426 m!71511))

(declare-fun m!71513 () Bool)

(assert (=> bm!6425 m!71513))

(assert (=> bm!6429 m!71227))

(assert (=> bm!6429 m!71501))

(declare-fun m!71515 () Bool)

(assert (=> b!73212 m!71515))

(declare-fun m!71517 () Bool)

(assert (=> b!73206 m!71517))

(assert (=> b!73206 m!71509))

(assert (=> b!73206 m!71227))

(declare-fun m!71519 () Bool)

(assert (=> b!73206 m!71519))

(declare-fun m!71521 () Bool)

(assert (=> b!73206 m!71521))

(declare-fun m!71523 () Bool)

(assert (=> b!73206 m!71523))

(assert (=> b!73206 m!71521))

(declare-fun m!71525 () Bool)

(assert (=> b!73208 m!71525))

(declare-fun m!71527 () Bool)

(assert (=> b!73242 m!71527))

(assert (=> b!73226 m!71227))

(declare-fun m!71529 () Bool)

(assert (=> b!73226 m!71529))

(assert (=> bm!6432 m!71227))

(declare-fun m!71531 () Bool)

(assert (=> bm!6432 m!71531))

(assert (=> b!73204 m!71415))

(declare-fun m!71533 () Bool)

(assert (=> bm!6438 m!71533))

(declare-fun m!71535 () Bool)

(assert (=> b!73214 m!71535))

(declare-fun m!71537 () Bool)

(assert (=> b!73223 m!71537))

(assert (=> bm!6445 m!71227))

(declare-fun m!71539 () Bool)

(assert (=> bm!6445 m!71539))

(declare-fun m!71541 () Bool)

(assert (=> b!73213 m!71541))

(declare-fun m!71543 () Bool)

(assert (=> d!16855 m!71543))

(assert (=> d!16855 m!71249))

(declare-fun m!71545 () Bool)

(assert (=> b!73229 m!71545))

(assert (=> b!73220 m!71415))

(assert (=> bm!6427 m!71227))

(declare-fun m!71547 () Bool)

(assert (=> bm!6427 m!71547))

(assert (=> bm!6431 m!71239))

(declare-fun m!71549 () Bool)

(assert (=> b!73203 m!71549))

(assert (=> b!72888 d!16855))

(declare-fun b!73250 () Bool)

(declare-fun e!47921 () Bool)

(assert (=> b!73250 (= e!47921 tp_is_empty!2475)))

(declare-fun mapNonEmpty!3181 () Bool)

(declare-fun mapRes!3181 () Bool)

(declare-fun tp!8545 () Bool)

(declare-fun e!47920 () Bool)

(assert (=> mapNonEmpty!3181 (= mapRes!3181 (and tp!8545 e!47920))))

(declare-fun mapValue!3181 () ValueCell!894)

(declare-fun mapRest!3181 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapKey!3181 () (_ BitVec 32))

(assert (=> mapNonEmpty!3181 (= mapRest!3171 (store mapRest!3181 mapKey!3181 mapValue!3181))))

(declare-fun condMapEmpty!3181 () Bool)

(declare-fun mapDefault!3181 () ValueCell!894)

(assert (=> mapNonEmpty!3172 (= condMapEmpty!3181 (= mapRest!3171 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3181)))))

(assert (=> mapNonEmpty!3172 (= tp!8529 (and e!47921 mapRes!3181))))

(declare-fun mapIsEmpty!3181 () Bool)

(assert (=> mapIsEmpty!3181 mapRes!3181))

(declare-fun b!73249 () Bool)

(assert (=> b!73249 (= e!47920 tp_is_empty!2475)))

(assert (= (and mapNonEmpty!3172 condMapEmpty!3181) mapIsEmpty!3181))

(assert (= (and mapNonEmpty!3172 (not condMapEmpty!3181)) mapNonEmpty!3181))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!894) mapValue!3181)) b!73249))

(assert (= (and mapNonEmpty!3172 ((_ is ValueCellFull!894) mapDefault!3181)) b!73250))

(declare-fun m!71551 () Bool)

(assert (=> mapNonEmpty!3181 m!71551))

(declare-fun b!73252 () Bool)

(declare-fun e!47923 () Bool)

(assert (=> b!73252 (= e!47923 tp_is_empty!2475)))

(declare-fun mapNonEmpty!3182 () Bool)

(declare-fun mapRes!3182 () Bool)

(declare-fun tp!8546 () Bool)

(declare-fun e!47922 () Bool)

(assert (=> mapNonEmpty!3182 (= mapRes!3182 (and tp!8546 e!47922))))

(declare-fun mapKey!3182 () (_ BitVec 32))

(declare-fun mapValue!3182 () ValueCell!894)

(declare-fun mapRest!3182 () (Array (_ BitVec 32) ValueCell!894))

(assert (=> mapNonEmpty!3182 (= mapRest!3172 (store mapRest!3182 mapKey!3182 mapValue!3182))))

(declare-fun condMapEmpty!3182 () Bool)

(declare-fun mapDefault!3182 () ValueCell!894)

(assert (=> mapNonEmpty!3171 (= condMapEmpty!3182 (= mapRest!3172 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3182)))))

(assert (=> mapNonEmpty!3171 (= tp!8528 (and e!47923 mapRes!3182))))

(declare-fun mapIsEmpty!3182 () Bool)

(assert (=> mapIsEmpty!3182 mapRes!3182))

(declare-fun b!73251 () Bool)

(assert (=> b!73251 (= e!47922 tp_is_empty!2475)))

(assert (= (and mapNonEmpty!3171 condMapEmpty!3182) mapIsEmpty!3182))

(assert (= (and mapNonEmpty!3171 (not condMapEmpty!3182)) mapNonEmpty!3182))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!894) mapValue!3182)) b!73251))

(assert (= (and mapNonEmpty!3171 ((_ is ValueCellFull!894) mapDefault!3182)) b!73252))

(declare-fun m!71553 () Bool)

(assert (=> mapNonEmpty!3182 m!71553))

(declare-fun b_lambda!3287 () Bool)

(assert (= b_lambda!3283 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3287)))

(declare-fun b_lambda!3289 () Bool)

(assert (= b_lambda!3281 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3289)))

(declare-fun b_lambda!3291 () Bool)

(assert (= b_lambda!3285 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3291)))

(check-sat (not d!16827) (not d!16845) (not b_next!2119) (not d!16829) (not b_lambda!3279) (not b!72989) (not bm!6427) (not b!72995) (not bm!6429) (not d!16817) (not d!16831) (not b!72999) (not bm!6369) (not d!16833) (not mapNonEmpty!3181) (not d!16821) b_and!4501 (not b!73063) (not b!72981) (not d!16825) (not b!72979) (not b!73073) (not b!73103) (not bm!6367) (not b!73057) (not b!73055) (not d!16819) (not bm!6371) (not b!72983) (not b!73001) (not bm!6370) (not b_lambda!3287) (not b!73208) (not b!73080) (not b!73202) (not b!73213) (not b!73226) (not b!73116) (not bm!6445) (not bm!6444) (not b!73065) (not b!73214) (not bm!6431) (not b_next!2117) (not b!73079) (not b!73086) (not b!73072) (not b!72980) (not b!73074) (not bm!6426) (not b!73054) (not mapNonEmpty!3182) (not b!73000) (not b!73056) (not b!73002) (not bm!6430) (not b!72997) (not b!72990) (not bm!6351) (not b!73220) (not bm!6375) (not b!73114) (not b!72996) (not bm!6443) (not b!72998) (not d!16843) (not b_lambda!3291) (not b!72986) (not bm!6441) tp_is_empty!2475 (not d!16853) (not b!73046) (not b!73105) (not b_lambda!3289) (not b!73206) (not b!73106) (not b!73204) b_and!4499 (not d!16855) (not b!73060) (not bm!6432) (not b!72984) (not bm!6438) (not d!16815) (not d!16849) (not d!16839) (not b!73091) (not bm!6425))
(check-sat b_and!4499 b_and!4501 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun d!16857 () Bool)

(declare-fun e!47925 () Bool)

(assert (=> d!16857 e!47925))

(declare-fun res!38851 () Bool)

(assert (=> d!16857 (=> res!38851 e!47925)))

(declare-fun lt!32798 () Bool)

(assert (=> d!16857 (= res!38851 (not lt!32798))))

(declare-fun lt!32797 () Bool)

(assert (=> d!16857 (= lt!32798 lt!32797)))

(declare-fun lt!32796 () Unit!2078)

(declare-fun e!47924 () Unit!2078)

(assert (=> d!16857 (= lt!32796 e!47924)))

(declare-fun c!10876 () Bool)

(assert (=> d!16857 (= c!10876 lt!32797)))

(assert (=> d!16857 (= lt!32797 (containsKey!137 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16857 (= (contains!723 lt!32594 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32798)))

(declare-fun b!73253 () Bool)

(declare-fun lt!32795 () Unit!2078)

(assert (=> b!73253 (= e!47924 lt!32795)))

(assert (=> b!73253 (= lt!32795 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73253 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73254 () Bool)

(declare-fun Unit!2086 () Unit!2078)

(assert (=> b!73254 (= e!47924 Unit!2086)))

(declare-fun b!73255 () Bool)

(assert (=> b!73255 (= e!47925 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16857 c!10876) b!73253))

(assert (= (and d!16857 (not c!10876)) b!73254))

(assert (= (and d!16857 (not res!38851)) b!73255))

(declare-fun m!71555 () Bool)

(assert (=> d!16857 m!71555))

(declare-fun m!71557 () Bool)

(assert (=> b!73253 m!71557))

(declare-fun m!71559 () Bool)

(assert (=> b!73253 m!71559))

(assert (=> b!73253 m!71559))

(declare-fun m!71561 () Bool)

(assert (=> b!73253 m!71561))

(assert (=> b!73255 m!71559))

(assert (=> b!73255 m!71559))

(assert (=> b!73255 m!71561))

(assert (=> b!72983 d!16857))

(declare-fun b!73256 () Bool)

(declare-fun e!47927 () Bool)

(assert (=> b!73256 (= e!47927 (contains!725 Nil!1476 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73257 () Bool)

(declare-fun e!47926 () Bool)

(declare-fun call!6451 () Bool)

(assert (=> b!73257 (= e!47926 call!6451)))

(declare-fun b!73258 () Bool)

(declare-fun e!47928 () Bool)

(declare-fun e!47929 () Bool)

(assert (=> b!73258 (= e!47928 e!47929)))

(declare-fun res!38854 () Bool)

(assert (=> b!73258 (=> (not res!38854) (not e!47929))))

(assert (=> b!73258 (= res!38854 (not e!47927))))

(declare-fun res!38853 () Bool)

(assert (=> b!73258 (=> (not res!38853) (not e!47927))))

(assert (=> b!73258 (= res!38853 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73259 () Bool)

(assert (=> b!73259 (= e!47929 e!47926)))

(declare-fun c!10877 () Bool)

(assert (=> b!73259 (= c!10877 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73260 () Bool)

(assert (=> b!73260 (= e!47926 call!6451)))

(declare-fun d!16859 () Bool)

(declare-fun res!38852 () Bool)

(assert (=> d!16859 (=> res!38852 e!47928)))

(assert (=> d!16859 (= res!38852 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16859 (= (arrayNoDuplicates!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 Nil!1476) e!47928)))

(declare-fun bm!6448 () Bool)

(assert (=> bm!6448 (= call!6451 (arrayNoDuplicates!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10877 (Cons!1475 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1476) Nil!1476)))))

(assert (= (and d!16859 (not res!38852)) b!73258))

(assert (= (and b!73258 res!38853) b!73256))

(assert (= (and b!73258 res!38854) b!73259))

(assert (= (and b!73259 c!10877) b!73257))

(assert (= (and b!73259 (not c!10877)) b!73260))

(assert (= (or b!73257 b!73260) bm!6448))

(declare-fun m!71563 () Bool)

(assert (=> b!73256 m!71563))

(assert (=> b!73256 m!71563))

(declare-fun m!71565 () Bool)

(assert (=> b!73256 m!71565))

(assert (=> b!73258 m!71563))

(assert (=> b!73258 m!71563))

(declare-fun m!71567 () Bool)

(assert (=> b!73258 m!71567))

(assert (=> b!73259 m!71563))

(assert (=> b!73259 m!71563))

(assert (=> b!73259 m!71567))

(assert (=> bm!6448 m!71563))

(declare-fun m!71569 () Bool)

(assert (=> bm!6448 m!71569))

(assert (=> b!73074 d!16859))

(declare-fun d!16861 () Bool)

(declare-fun e!47932 () Bool)

(assert (=> d!16861 e!47932))

(declare-fun c!10880 () Bool)

(assert (=> d!16861 (= c!10880 (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!16861 true))

(declare-fun _$29!90 () Unit!2078)

(assert (=> d!16861 (= (choose!411 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) _$29!90)))

(declare-fun b!73265 () Bool)

(assert (=> b!73265 (= e!47932 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73266 () Bool)

(assert (=> b!73266 (= e!47932 (ite (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16861 c!10880) b!73265))

(assert (= (and d!16861 (not c!10880)) b!73266))

(assert (=> b!73265 m!71227))

(assert (=> b!73265 m!71261))

(assert (=> d!16849 d!16861))

(assert (=> d!16849 d!16823))

(declare-fun d!16863 () Bool)

(declare-fun res!38855 () Bool)

(declare-fun e!47933 () Bool)

(assert (=> d!16863 (=> (not res!38855) (not e!47933))))

(assert (=> d!16863 (= res!38855 (simpleValid!51 (v!2530 (underlying!260 thiss!992))))))

(assert (=> d!16863 (= (valid!289 (v!2530 (underlying!260 thiss!992))) e!47933)))

(declare-fun b!73267 () Bool)

(declare-fun res!38856 () Bool)

(assert (=> b!73267 (=> (not res!38856) (not e!47933))))

(assert (=> b!73267 (= res!38856 (= (arrayCountValidKeys!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))) (_size!397 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!73268 () Bool)

(declare-fun res!38857 () Bool)

(assert (=> b!73268 (=> (not res!38857) (not e!47933))))

(assert (=> b!73268 (= res!38857 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!73269 () Bool)

(assert (=> b!73269 (= e!47933 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 Nil!1476))))

(assert (= (and d!16863 res!38855) b!73267))

(assert (= (and b!73267 res!38856) b!73268))

(assert (= (and b!73268 res!38857) b!73269))

(declare-fun m!71571 () Bool)

(assert (=> d!16863 m!71571))

(declare-fun m!71573 () Bool)

(assert (=> b!73267 m!71573))

(declare-fun m!71575 () Bool)

(assert (=> b!73268 m!71575))

(declare-fun m!71577 () Bool)

(assert (=> b!73269 m!71577))

(assert (=> d!16829 d!16863))

(declare-fun d!16865 () Bool)

(declare-fun lt!32801 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!77 (List!1478) (InoxSet tuple2!2122))

(assert (=> d!16865 (= lt!32801 (select (content!77 (toList!725 lt!32618)) lt!32538))))

(declare-fun e!47938 () Bool)

(assert (=> d!16865 (= lt!32801 e!47938)))

(declare-fun res!38862 () Bool)

(assert (=> d!16865 (=> (not res!38862) (not e!47938))))

(assert (=> d!16865 (= res!38862 ((_ is Cons!1474) (toList!725 lt!32618)))))

(assert (=> d!16865 (= (contains!724 (toList!725 lt!32618) lt!32538) lt!32801)))

(declare-fun b!73274 () Bool)

(declare-fun e!47939 () Bool)

(assert (=> b!73274 (= e!47938 e!47939)))

(declare-fun res!38863 () Bool)

(assert (=> b!73274 (=> res!38863 e!47939)))

(assert (=> b!73274 (= res!38863 (= (h!2061 (toList!725 lt!32618)) lt!32538))))

(declare-fun b!73275 () Bool)

(assert (=> b!73275 (= e!47939 (contains!724 (t!5035 (toList!725 lt!32618)) lt!32538))))

(assert (= (and d!16865 res!38862) b!73274))

(assert (= (and b!73274 (not res!38863)) b!73275))

(declare-fun m!71579 () Bool)

(assert (=> d!16865 m!71579))

(declare-fun m!71581 () Bool)

(assert (=> d!16865 m!71581))

(declare-fun m!71583 () Bool)

(assert (=> b!73275 m!71583))

(assert (=> b!73000 d!16865))

(declare-fun d!16867 () Bool)

(declare-fun e!47941 () Bool)

(assert (=> d!16867 e!47941))

(declare-fun res!38864 () Bool)

(assert (=> d!16867 (=> res!38864 e!47941)))

(declare-fun lt!32805 () Bool)

(assert (=> d!16867 (= res!38864 (not lt!32805))))

(declare-fun lt!32804 () Bool)

(assert (=> d!16867 (= lt!32805 lt!32804)))

(declare-fun lt!32803 () Unit!2078)

(declare-fun e!47940 () Unit!2078)

(assert (=> d!16867 (= lt!32803 e!47940)))

(declare-fun c!10881 () Bool)

(assert (=> d!16867 (= c!10881 lt!32804)))

(assert (=> d!16867 (= lt!32804 (containsKey!137 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16867 (= (contains!723 lt!32594 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32805)))

(declare-fun b!73276 () Bool)

(declare-fun lt!32802 () Unit!2078)

(assert (=> b!73276 (= e!47940 lt!32802)))

(assert (=> b!73276 (= lt!32802 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73276 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73277 () Bool)

(declare-fun Unit!2087 () Unit!2078)

(assert (=> b!73277 (= e!47940 Unit!2087)))

(declare-fun b!73278 () Bool)

(assert (=> b!73278 (= e!47941 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16867 c!10881) b!73276))

(assert (= (and d!16867 (not c!10881)) b!73277))

(assert (= (and d!16867 (not res!38864)) b!73278))

(assert (=> d!16867 m!71327))

(declare-fun m!71585 () Bool)

(assert (=> d!16867 m!71585))

(assert (=> b!73276 m!71327))

(declare-fun m!71587 () Bool)

(assert (=> b!73276 m!71587))

(assert (=> b!73276 m!71327))

(declare-fun m!71589 () Bool)

(assert (=> b!73276 m!71589))

(assert (=> b!73276 m!71589))

(declare-fun m!71591 () Bool)

(assert (=> b!73276 m!71591))

(assert (=> b!73278 m!71327))

(assert (=> b!73278 m!71589))

(assert (=> b!73278 m!71589))

(assert (=> b!73278 m!71591))

(assert (=> b!72981 d!16867))

(declare-fun d!16869 () Bool)

(declare-fun e!47943 () Bool)

(assert (=> d!16869 e!47943))

(declare-fun res!38865 () Bool)

(assert (=> d!16869 (=> res!38865 e!47943)))

(declare-fun lt!32809 () Bool)

(assert (=> d!16869 (= res!38865 (not lt!32809))))

(declare-fun lt!32808 () Bool)

(assert (=> d!16869 (= lt!32809 lt!32808)))

(declare-fun lt!32807 () Unit!2078)

(declare-fun e!47942 () Unit!2078)

(assert (=> d!16869 (= lt!32807 e!47942)))

(declare-fun c!10882 () Bool)

(assert (=> d!16869 (= c!10882 lt!32808)))

(assert (=> d!16869 (= lt!32808 (containsKey!137 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16869 (= (contains!723 lt!32681 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32809)))

(declare-fun b!73279 () Bool)

(declare-fun lt!32806 () Unit!2078)

(assert (=> b!73279 (= e!47942 lt!32806)))

(assert (=> b!73279 (= lt!32806 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73279 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73280 () Bool)

(declare-fun Unit!2088 () Unit!2078)

(assert (=> b!73280 (= e!47942 Unit!2088)))

(declare-fun b!73281 () Bool)

(assert (=> b!73281 (= e!47943 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16869 c!10882) b!73279))

(assert (= (and d!16869 (not c!10882)) b!73280))

(assert (= (and d!16869 (not res!38865)) b!73281))

(assert (=> d!16869 m!71327))

(declare-fun m!71593 () Bool)

(assert (=> d!16869 m!71593))

(assert (=> b!73279 m!71327))

(declare-fun m!71595 () Bool)

(assert (=> b!73279 m!71595))

(assert (=> b!73279 m!71327))

(declare-fun m!71597 () Bool)

(assert (=> b!73279 m!71597))

(assert (=> b!73279 m!71597))

(declare-fun m!71599 () Bool)

(assert (=> b!73279 m!71599))

(assert (=> b!73281 m!71327))

(assert (=> b!73281 m!71597))

(assert (=> b!73281 m!71597))

(assert (=> b!73281 m!71599))

(assert (=> b!73063 d!16869))

(declare-fun d!16871 () Bool)

(assert (=> d!16871 (= (+!94 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (+!94 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (=> d!16871 true))

(declare-fun _$28!121 () Unit!2078)

(assert (=> d!16871 (= (choose!410 lt!32540 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) _$28!121)))

(declare-fun bs!3146 () Bool)

(assert (= bs!3146 d!16871))

(assert (=> bs!3146 m!71403))

(assert (=> bs!3146 m!71403))

(assert (=> bs!3146 m!71405))

(assert (=> bs!3146 m!71407))

(assert (=> bs!3146 m!71407))

(assert (=> bs!3146 m!71409))

(assert (=> d!16827 d!16871))

(declare-fun d!16873 () Bool)

(declare-fun e!47944 () Bool)

(assert (=> d!16873 e!47944))

(declare-fun res!38866 () Bool)

(assert (=> d!16873 (=> (not res!38866) (not e!47944))))

(declare-fun lt!32812 () ListLongMap!1419)

(assert (=> d!16873 (= res!38866 (contains!723 lt!32812 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!32811 () List!1478)

(assert (=> d!16873 (= lt!32812 (ListLongMap!1420 lt!32811))))

(declare-fun lt!32813 () Unit!2078)

(declare-fun lt!32810 () Unit!2078)

(assert (=> d!16873 (= lt!32813 lt!32810)))

(assert (=> d!16873 (= (getValueByKey!133 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16873 (= lt!32810 (lemmaContainsTupThenGetReturnValue!50 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16873 (= lt!32811 (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16873 (= (+!94 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!32812)))

(declare-fun b!73282 () Bool)

(declare-fun res!38867 () Bool)

(assert (=> b!73282 (=> (not res!38867) (not e!47944))))

(assert (=> b!73282 (= res!38867 (= (getValueByKey!133 (toList!725 lt!32812) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!73283 () Bool)

(assert (=> b!73283 (= e!47944 (contains!724 (toList!725 lt!32812) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!16873 res!38866) b!73282))

(assert (= (and b!73282 res!38867) b!73283))

(declare-fun m!71601 () Bool)

(assert (=> d!16873 m!71601))

(declare-fun m!71603 () Bool)

(assert (=> d!16873 m!71603))

(declare-fun m!71605 () Bool)

(assert (=> d!16873 m!71605))

(declare-fun m!71607 () Bool)

(assert (=> d!16873 m!71607))

(declare-fun m!71609 () Bool)

(assert (=> b!73282 m!71609))

(declare-fun m!71611 () Bool)

(assert (=> b!73283 m!71611))

(assert (=> d!16827 d!16873))

(declare-fun d!16875 () Bool)

(declare-fun e!47945 () Bool)

(assert (=> d!16875 e!47945))

(declare-fun res!38868 () Bool)

(assert (=> d!16875 (=> (not res!38868) (not e!47945))))

(declare-fun lt!32816 () ListLongMap!1419)

(assert (=> d!16875 (= res!38868 (contains!723 lt!32816 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!32815 () List!1478)

(assert (=> d!16875 (= lt!32816 (ListLongMap!1420 lt!32815))))

(declare-fun lt!32817 () Unit!2078)

(declare-fun lt!32814 () Unit!2078)

(assert (=> d!16875 (= lt!32817 lt!32814)))

(assert (=> d!16875 (= (getValueByKey!133 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16875 (= lt!32814 (lemmaContainsTupThenGetReturnValue!50 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16875 (= lt!32815 (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16875 (= (+!94 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32816)))

(declare-fun b!73284 () Bool)

(declare-fun res!38869 () Bool)

(assert (=> b!73284 (=> (not res!38869) (not e!47945))))

(assert (=> b!73284 (= res!38869 (= (getValueByKey!133 (toList!725 lt!32816) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73285 () Bool)

(assert (=> b!73285 (= e!47945 (contains!724 (toList!725 lt!32816) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!16875 res!38868) b!73284))

(assert (= (and b!73284 res!38869) b!73285))

(declare-fun m!71613 () Bool)

(assert (=> d!16875 m!71613))

(declare-fun m!71615 () Bool)

(assert (=> d!16875 m!71615))

(declare-fun m!71617 () Bool)

(assert (=> d!16875 m!71617))

(declare-fun m!71619 () Bool)

(assert (=> d!16875 m!71619))

(declare-fun m!71621 () Bool)

(assert (=> b!73284 m!71621))

(declare-fun m!71623 () Bool)

(assert (=> b!73285 m!71623))

(assert (=> d!16827 d!16875))

(declare-fun d!16877 () Bool)

(declare-fun e!47946 () Bool)

(assert (=> d!16877 e!47946))

(declare-fun res!38870 () Bool)

(assert (=> d!16877 (=> (not res!38870) (not e!47946))))

(declare-fun lt!32820 () ListLongMap!1419)

(assert (=> d!16877 (= res!38870 (contains!723 lt!32820 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!32819 () List!1478)

(assert (=> d!16877 (= lt!32820 (ListLongMap!1420 lt!32819))))

(declare-fun lt!32821 () Unit!2078)

(declare-fun lt!32818 () Unit!2078)

(assert (=> d!16877 (= lt!32821 lt!32818)))

(assert (=> d!16877 (= (getValueByKey!133 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16877 (= lt!32818 (lemmaContainsTupThenGetReturnValue!50 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16877 (= lt!32819 (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16877 (= (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32820)))

(declare-fun b!73286 () Bool)

(declare-fun res!38871 () Bool)

(assert (=> b!73286 (=> (not res!38871) (not e!47946))))

(assert (=> b!73286 (= res!38871 (= (getValueByKey!133 (toList!725 lt!32820) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73287 () Bool)

(assert (=> b!73287 (= e!47946 (contains!724 (toList!725 lt!32820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!16877 res!38870) b!73286))

(assert (= (and b!73286 res!38871) b!73287))

(declare-fun m!71625 () Bool)

(assert (=> d!16877 m!71625))

(declare-fun m!71627 () Bool)

(assert (=> d!16877 m!71627))

(declare-fun m!71629 () Bool)

(assert (=> d!16877 m!71629))

(declare-fun m!71631 () Bool)

(assert (=> d!16877 m!71631))

(declare-fun m!71633 () Bool)

(assert (=> b!73286 m!71633))

(declare-fun m!71635 () Bool)

(assert (=> b!73287 m!71635))

(assert (=> d!16827 d!16877))

(declare-fun d!16879 () Bool)

(declare-fun e!47947 () Bool)

(assert (=> d!16879 e!47947))

(declare-fun res!38872 () Bool)

(assert (=> d!16879 (=> (not res!38872) (not e!47947))))

(declare-fun lt!32824 () ListLongMap!1419)

(assert (=> d!16879 (= res!38872 (contains!723 lt!32824 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!32823 () List!1478)

(assert (=> d!16879 (= lt!32824 (ListLongMap!1420 lt!32823))))

(declare-fun lt!32825 () Unit!2078)

(declare-fun lt!32822 () Unit!2078)

(assert (=> d!16879 (= lt!32825 lt!32822)))

(assert (=> d!16879 (= (getValueByKey!133 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16879 (= lt!32822 (lemmaContainsTupThenGetReturnValue!50 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16879 (= lt!32823 (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16879 (= (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!32824)))

(declare-fun b!73288 () Bool)

(declare-fun res!38873 () Bool)

(assert (=> b!73288 (=> (not res!38873) (not e!47947))))

(assert (=> b!73288 (= res!38873 (= (getValueByKey!133 (toList!725 lt!32824) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!73289 () Bool)

(assert (=> b!73289 (= e!47947 (contains!724 (toList!725 lt!32824) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!16879 res!38872) b!73288))

(assert (= (and b!73288 res!38873) b!73289))

(declare-fun m!71637 () Bool)

(assert (=> d!16879 m!71637))

(declare-fun m!71639 () Bool)

(assert (=> d!16879 m!71639))

(declare-fun m!71641 () Bool)

(assert (=> d!16879 m!71641))

(declare-fun m!71643 () Bool)

(assert (=> d!16879 m!71643))

(declare-fun m!71645 () Bool)

(assert (=> b!73288 m!71645))

(declare-fun m!71647 () Bool)

(assert (=> b!73289 m!71647))

(assert (=> d!16827 d!16879))

(declare-fun d!16881 () Bool)

(declare-fun e!47948 () Bool)

(assert (=> d!16881 e!47948))

(declare-fun res!38874 () Bool)

(assert (=> d!16881 (=> (not res!38874) (not e!47948))))

(declare-fun lt!32828 () ListLongMap!1419)

(assert (=> d!16881 (= res!38874 (contains!723 lt!32828 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!32827 () List!1478)

(assert (=> d!16881 (= lt!32828 (ListLongMap!1420 lt!32827))))

(declare-fun lt!32829 () Unit!2078)

(declare-fun lt!32826 () Unit!2078)

(assert (=> d!16881 (= lt!32829 lt!32826)))

(assert (=> d!16881 (= (getValueByKey!133 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16881 (= lt!32826 (lemmaContainsTupThenGetReturnValue!50 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16881 (= lt!32827 (insertStrictlySorted!53 (toList!725 call!6433) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!16881 (= (+!94 call!6433 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!32828)))

(declare-fun b!73290 () Bool)

(declare-fun res!38875 () Bool)

(assert (=> b!73290 (=> (not res!38875) (not e!47948))))

(assert (=> b!73290 (= res!38875 (= (getValueByKey!133 (toList!725 lt!32828) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!73291 () Bool)

(assert (=> b!73291 (= e!47948 (contains!724 (toList!725 lt!32828) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!16881 res!38874) b!73290))

(assert (= (and b!73290 res!38875) b!73291))

(declare-fun m!71649 () Bool)

(assert (=> d!16881 m!71649))

(declare-fun m!71651 () Bool)

(assert (=> d!16881 m!71651))

(declare-fun m!71653 () Bool)

(assert (=> d!16881 m!71653))

(declare-fun m!71655 () Bool)

(assert (=> d!16881 m!71655))

(declare-fun m!71657 () Bool)

(assert (=> b!73290 m!71657))

(declare-fun m!71659 () Bool)

(assert (=> b!73291 m!71659))

(assert (=> b!73213 d!16881))

(declare-fun b!73300 () Bool)

(declare-fun e!47953 () (_ BitVec 32))

(declare-fun call!6454 () (_ BitVec 32))

(assert (=> b!73300 (= e!47953 call!6454)))

(declare-fun b!73301 () Bool)

(declare-fun e!47954 () (_ BitVec 32))

(assert (=> b!73301 (= e!47954 #b00000000000000000000000000000000)))

(declare-fun bm!6451 () Bool)

(assert (=> bm!6451 (= call!6454 (arrayCountValidKeys!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun d!16883 () Bool)

(declare-fun lt!32832 () (_ BitVec 32))

(assert (=> d!16883 (and (bvsge lt!32832 #b00000000000000000000000000000000) (bvsle lt!32832 (bvsub (size!2097 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16883 (= lt!32832 e!47954)))

(declare-fun c!10887 () Bool)

(assert (=> d!16883 (= c!10887 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16883 (and (bvsle #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2097 (_keys!3865 newMap!16)) (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16883 (= (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) lt!32832)))

(declare-fun b!73302 () Bool)

(assert (=> b!73302 (= e!47954 e!47953)))

(declare-fun c!10888 () Bool)

(assert (=> b!73302 (= c!10888 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73303 () Bool)

(assert (=> b!73303 (= e!47953 (bvadd #b00000000000000000000000000000001 call!6454))))

(assert (= (and d!16883 c!10887) b!73301))

(assert (= (and d!16883 (not c!10887)) b!73302))

(assert (= (and b!73302 c!10888) b!73303))

(assert (= (and b!73302 (not c!10888)) b!73300))

(assert (= (or b!73303 b!73300) bm!6451))

(declare-fun m!71661 () Bool)

(assert (=> bm!6451 m!71661))

(assert (=> b!73302 m!71563))

(assert (=> b!73302 m!71563))

(assert (=> b!73302 m!71567))

(assert (=> b!73072 d!16883))

(declare-fun d!16885 () Bool)

(declare-fun get!1142 (Option!139) V!2947)

(assert (=> d!16885 (= (apply!75 lt!32594 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1142 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3147 () Bool)

(assert (= bs!3147 d!16885))

(assert (=> bs!3147 m!71327))

(assert (=> bs!3147 m!71589))

(assert (=> bs!3147 m!71589))

(declare-fun m!71663 () Bool)

(assert (=> bs!3147 m!71663))

(assert (=> b!72980 d!16885))

(declare-fun d!16887 () Bool)

(declare-fun c!10889 () Bool)

(assert (=> d!16887 (= c!10889 ((_ is ValueCellFull!894) (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47955 () V!2947)

(assert (=> d!16887 (= (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47955)))

(declare-fun b!73304 () Bool)

(assert (=> b!73304 (= e!47955 (get!1140 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73305 () Bool)

(assert (=> b!73305 (= e!47955 (get!1141 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16887 c!10889) b!73304))

(assert (= (and d!16887 (not c!10889)) b!73305))

(assert (=> b!73304 m!71339))

(assert (=> b!73304 m!71267))

(declare-fun m!71665 () Bool)

(assert (=> b!73304 m!71665))

(assert (=> b!73305 m!71339))

(assert (=> b!73305 m!71267))

(declare-fun m!71667 () Bool)

(assert (=> b!73305 m!71667))

(assert (=> b!72980 d!16887))

(declare-fun d!16889 () Bool)

(declare-fun lt!32833 () Bool)

(assert (=> d!16889 (= lt!32833 (select (content!77 (toList!725 lt!32614)) lt!32542))))

(declare-fun e!47956 () Bool)

(assert (=> d!16889 (= lt!32833 e!47956)))

(declare-fun res!38876 () Bool)

(assert (=> d!16889 (=> (not res!38876) (not e!47956))))

(assert (=> d!16889 (= res!38876 ((_ is Cons!1474) (toList!725 lt!32614)))))

(assert (=> d!16889 (= (contains!724 (toList!725 lt!32614) lt!32542) lt!32833)))

(declare-fun b!73306 () Bool)

(declare-fun e!47957 () Bool)

(assert (=> b!73306 (= e!47956 e!47957)))

(declare-fun res!38877 () Bool)

(assert (=> b!73306 (=> res!38877 e!47957)))

(assert (=> b!73306 (= res!38877 (= (h!2061 (toList!725 lt!32614)) lt!32542))))

(declare-fun b!73307 () Bool)

(assert (=> b!73307 (= e!47957 (contains!724 (t!5035 (toList!725 lt!32614)) lt!32542))))

(assert (= (and d!16889 res!38876) b!73306))

(assert (= (and b!73306 (not res!38877)) b!73307))

(declare-fun m!71669 () Bool)

(assert (=> d!16889 m!71669))

(declare-fun m!71671 () Bool)

(assert (=> d!16889 m!71671))

(declare-fun m!71673 () Bool)

(assert (=> b!73307 m!71673))

(assert (=> b!72998 d!16889))

(declare-fun d!16891 () Bool)

(declare-fun e!47959 () Bool)

(assert (=> d!16891 e!47959))

(declare-fun res!38878 () Bool)

(assert (=> d!16891 (=> res!38878 e!47959)))

(declare-fun lt!32837 () Bool)

(assert (=> d!16891 (= res!38878 (not lt!32837))))

(declare-fun lt!32836 () Bool)

(assert (=> d!16891 (= lt!32837 lt!32836)))

(declare-fun lt!32835 () Unit!2078)

(declare-fun e!47958 () Unit!2078)

(assert (=> d!16891 (= lt!32835 e!47958)))

(declare-fun c!10890 () Bool)

(assert (=> d!16891 (= c!10890 lt!32836)))

(assert (=> d!16891 (= lt!32836 (containsKey!137 (toList!725 lt!32622) (_1!1072 lt!32538)))))

(assert (=> d!16891 (= (contains!723 lt!32622 (_1!1072 lt!32538)) lt!32837)))

(declare-fun b!73308 () Bool)

(declare-fun lt!32834 () Unit!2078)

(assert (=> b!73308 (= e!47958 lt!32834)))

(assert (=> b!73308 (= lt!32834 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32622) (_1!1072 lt!32538)))))

(assert (=> b!73308 (isDefined!86 (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538)))))

(declare-fun b!73309 () Bool)

(declare-fun Unit!2089 () Unit!2078)

(assert (=> b!73309 (= e!47958 Unit!2089)))

(declare-fun b!73310 () Bool)

(assert (=> b!73310 (= e!47959 (isDefined!86 (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538))))))

(assert (= (and d!16891 c!10890) b!73308))

(assert (= (and d!16891 (not c!10890)) b!73309))

(assert (= (and d!16891 (not res!38878)) b!73310))

(declare-fun m!71675 () Bool)

(assert (=> d!16891 m!71675))

(declare-fun m!71677 () Bool)

(assert (=> b!73308 m!71677))

(assert (=> b!73308 m!71399))

(assert (=> b!73308 m!71399))

(declare-fun m!71679 () Bool)

(assert (=> b!73308 m!71679))

(assert (=> b!73310 m!71399))

(assert (=> b!73310 m!71399))

(assert (=> b!73310 m!71679))

(assert (=> d!16825 d!16891))

(declare-fun b!73321 () Bool)

(declare-fun e!47965 () Option!139)

(assert (=> b!73321 (= e!47965 (getValueByKey!133 (t!5035 lt!32621) (_1!1072 lt!32538)))))

(declare-fun d!16893 () Bool)

(declare-fun c!10895 () Bool)

(assert (=> d!16893 (= c!10895 (and ((_ is Cons!1474) lt!32621) (= (_1!1072 (h!2061 lt!32621)) (_1!1072 lt!32538))))))

(declare-fun e!47964 () Option!139)

(assert (=> d!16893 (= (getValueByKey!133 lt!32621 (_1!1072 lt!32538)) e!47964)))

(declare-fun b!73320 () Bool)

(assert (=> b!73320 (= e!47964 e!47965)))

(declare-fun c!10896 () Bool)

(assert (=> b!73320 (= c!10896 (and ((_ is Cons!1474) lt!32621) (not (= (_1!1072 (h!2061 lt!32621)) (_1!1072 lt!32538)))))))

(declare-fun b!73319 () Bool)

(assert (=> b!73319 (= e!47964 (Some!138 (_2!1072 (h!2061 lt!32621))))))

(declare-fun b!73322 () Bool)

(assert (=> b!73322 (= e!47965 None!137)))

(assert (= (and d!16893 c!10895) b!73319))

(assert (= (and d!16893 (not c!10895)) b!73320))

(assert (= (and b!73320 c!10896) b!73321))

(assert (= (and b!73320 (not c!10896)) b!73322))

(declare-fun m!71681 () Bool)

(assert (=> b!73321 m!71681))

(assert (=> d!16825 d!16893))

(declare-fun d!16895 () Bool)

(assert (=> d!16895 (= (getValueByKey!133 lt!32621 (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538)))))

(declare-fun lt!32840 () Unit!2078)

(declare-fun choose!412 (List!1478 (_ BitVec 64) V!2947) Unit!2078)

(assert (=> d!16895 (= lt!32840 (choose!412 lt!32621 (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(declare-fun e!47968 () Bool)

(assert (=> d!16895 e!47968))

(declare-fun res!38883 () Bool)

(assert (=> d!16895 (=> (not res!38883) (not e!47968))))

(declare-fun isStrictlySorted!292 (List!1478) Bool)

(assert (=> d!16895 (= res!38883 (isStrictlySorted!292 lt!32621))))

(assert (=> d!16895 (= (lemmaContainsTupThenGetReturnValue!50 lt!32621 (_1!1072 lt!32538) (_2!1072 lt!32538)) lt!32840)))

(declare-fun b!73327 () Bool)

(declare-fun res!38884 () Bool)

(assert (=> b!73327 (=> (not res!38884) (not e!47968))))

(assert (=> b!73327 (= res!38884 (containsKey!137 lt!32621 (_1!1072 lt!32538)))))

(declare-fun b!73328 () Bool)

(assert (=> b!73328 (= e!47968 (contains!724 lt!32621 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(assert (= (and d!16895 res!38883) b!73327))

(assert (= (and b!73327 res!38884) b!73328))

(assert (=> d!16895 m!71393))

(declare-fun m!71683 () Bool)

(assert (=> d!16895 m!71683))

(declare-fun m!71685 () Bool)

(assert (=> d!16895 m!71685))

(declare-fun m!71687 () Bool)

(assert (=> b!73327 m!71687))

(declare-fun m!71689 () Bool)

(assert (=> b!73328 m!71689))

(assert (=> d!16825 d!16895))

(declare-fun b!73349 () Bool)

(declare-fun e!47981 () List!1478)

(declare-fun call!6461 () List!1478)

(assert (=> b!73349 (= e!47981 call!6461)))

(declare-fun b!73350 () Bool)

(declare-fun e!47983 () List!1478)

(declare-fun call!6462 () List!1478)

(assert (=> b!73350 (= e!47983 call!6462)))

(declare-fun b!73351 () Bool)

(declare-fun e!47979 () List!1478)

(declare-fun call!6463 () List!1478)

(assert (=> b!73351 (= e!47979 call!6463)))

(declare-fun e!47980 () List!1478)

(declare-fun c!10908 () Bool)

(declare-fun c!10906 () Bool)

(declare-fun b!73352 () Bool)

(assert (=> b!73352 (= e!47980 (ite c!10908 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))) (ite c!10906 (Cons!1474 (h!2061 (toList!725 (+!94 lt!32540 lt!32542))) (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) Nil!1475)))))

(declare-fun b!73353 () Bool)

(assert (=> b!73353 (= e!47979 e!47981)))

(assert (=> b!73353 (= c!10908 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 lt!32542))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32542)))) (_1!1072 lt!32538))))))

(declare-fun bm!6458 () Bool)

(assert (=> bm!6458 (= call!6462 call!6461)))

(declare-fun bm!6459 () Bool)

(declare-fun c!10905 () Bool)

(declare-fun $colon$colon!66 (List!1478 tuple2!2122) List!1478)

(assert (=> bm!6459 (= call!6463 ($colon$colon!66 e!47980 (ite c!10905 (h!2061 (toList!725 (+!94 lt!32540 lt!32542))) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538)))))))

(declare-fun c!10907 () Bool)

(assert (=> bm!6459 (= c!10907 c!10905)))

(declare-fun b!73354 () Bool)

(declare-fun res!38890 () Bool)

(declare-fun e!47982 () Bool)

(assert (=> b!73354 (=> (not res!38890) (not e!47982))))

(declare-fun lt!32843 () List!1478)

(assert (=> b!73354 (= res!38890 (containsKey!137 lt!32843 (_1!1072 lt!32538)))))

(declare-fun bm!6460 () Bool)

(assert (=> bm!6460 (= call!6461 call!6463)))

(declare-fun b!73355 () Bool)

(assert (=> b!73355 (= e!47982 (contains!724 lt!32843 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!73356 () Bool)

(assert (=> b!73356 (= e!47983 call!6462)))

(declare-fun b!73357 () Bool)

(assert (=> b!73357 (= e!47980 (insertStrictlySorted!53 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))) (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(declare-fun b!73358 () Bool)

(assert (=> b!73358 (= c!10906 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 lt!32542))) (bvsgt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32542)))) (_1!1072 lt!32538))))))

(assert (=> b!73358 (= e!47981 e!47983)))

(declare-fun d!16897 () Bool)

(assert (=> d!16897 e!47982))

(declare-fun res!38889 () Bool)

(assert (=> d!16897 (=> (not res!38889) (not e!47982))))

(assert (=> d!16897 (= res!38889 (isStrictlySorted!292 lt!32843))))

(assert (=> d!16897 (= lt!32843 e!47979)))

(assert (=> d!16897 (= c!10905 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 lt!32542))) (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32542)))) (_1!1072 lt!32538))))))

(assert (=> d!16897 (isStrictlySorted!292 (toList!725 (+!94 lt!32540 lt!32542)))))

(assert (=> d!16897 (= (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 lt!32542)) (_1!1072 lt!32538) (_2!1072 lt!32538)) lt!32843)))

(assert (= (and d!16897 c!10905) b!73351))

(assert (= (and d!16897 (not c!10905)) b!73353))

(assert (= (and b!73353 c!10908) b!73349))

(assert (= (and b!73353 (not c!10908)) b!73358))

(assert (= (and b!73358 c!10906) b!73356))

(assert (= (and b!73358 (not c!10906)) b!73350))

(assert (= (or b!73356 b!73350) bm!6458))

(assert (= (or b!73349 bm!6458) bm!6460))

(assert (= (or b!73351 bm!6460) bm!6459))

(assert (= (and bm!6459 c!10907) b!73357))

(assert (= (and bm!6459 (not c!10907)) b!73352))

(assert (= (and d!16897 res!38889) b!73354))

(assert (= (and b!73354 res!38890) b!73355))

(declare-fun m!71691 () Bool)

(assert (=> bm!6459 m!71691))

(declare-fun m!71693 () Bool)

(assert (=> b!73357 m!71693))

(declare-fun m!71695 () Bool)

(assert (=> b!73355 m!71695))

(declare-fun m!71697 () Bool)

(assert (=> d!16897 m!71697))

(declare-fun m!71699 () Bool)

(assert (=> d!16897 m!71699))

(declare-fun m!71701 () Bool)

(assert (=> b!73354 m!71701))

(assert (=> d!16825 d!16897))

(declare-fun d!16899 () Bool)

(declare-fun e!47986 () Bool)

(assert (=> d!16899 e!47986))

(declare-fun res!38895 () Bool)

(assert (=> d!16899 (=> (not res!38895) (not e!47986))))

(declare-fun lt!32849 () SeekEntryResult!236)

(assert (=> d!16899 (= res!38895 ((_ is Found!236) lt!32849))))

(assert (=> d!16899 (= lt!32849 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun lt!32848 () Unit!2078)

(declare-fun choose!413 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2078)

(assert (=> d!16899 (= lt!32848 (choose!413 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16899 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16899 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) lt!32848)))

(declare-fun b!73363 () Bool)

(declare-fun res!38896 () Bool)

(assert (=> b!73363 (=> (not res!38896) (not e!47986))))

(assert (=> b!73363 (= res!38896 (inRange!0 (index!3076 lt!32849) (mask!6180 newMap!16)))))

(declare-fun b!73364 () Bool)

(assert (=> b!73364 (= e!47986 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32849)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!73364 (and (bvsge (index!3076 lt!32849) #b00000000000000000000000000000000) (bvslt (index!3076 lt!32849) (size!2097 (_keys!3865 newMap!16))))))

(assert (= (and d!16899 res!38895) b!73363))

(assert (= (and b!73363 res!38896) b!73364))

(assert (=> d!16899 m!71227))

(assert (=> d!16899 m!71501))

(assert (=> d!16899 m!71227))

(declare-fun m!71703 () Bool)

(assert (=> d!16899 m!71703))

(declare-fun m!71705 () Bool)

(assert (=> d!16899 m!71705))

(declare-fun m!71707 () Bool)

(assert (=> b!73363 m!71707))

(declare-fun m!71709 () Bool)

(assert (=> b!73364 m!71709))

(assert (=> bm!6445 d!16899))

(declare-fun d!16901 () Bool)

(declare-fun res!38897 () Bool)

(declare-fun e!47987 () Bool)

(assert (=> d!16901 (=> res!38897 e!47987)))

(assert (=> d!16901 (= res!38897 (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16901 (= (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!47987)))

(declare-fun b!73365 () Bool)

(declare-fun e!47988 () Bool)

(assert (=> b!73365 (= e!47987 e!47988)))

(declare-fun res!38898 () Bool)

(assert (=> b!73365 (=> (not res!38898) (not e!47988))))

(assert (=> b!73365 (= res!38898 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73366 () Bool)

(assert (=> b!73366 (= e!47988 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16901 (not res!38897)) b!73365))

(assert (= (and b!73365 res!38898) b!73366))

(declare-fun m!71711 () Bool)

(assert (=> d!16901 m!71711))

(assert (=> b!73366 m!71227))

(declare-fun m!71713 () Bool)

(assert (=> b!73366 m!71713))

(assert (=> b!73086 d!16901))

(declare-fun b!73367 () Bool)

(declare-fun e!47992 () Bool)

(declare-fun e!47994 () Bool)

(assert (=> b!73367 (= e!47992 e!47994)))

(declare-fun res!38901 () Bool)

(declare-fun call!6469 () Bool)

(assert (=> b!73367 (= res!38901 call!6469)))

(assert (=> b!73367 (=> (not res!38901) (not e!47994))))

(declare-fun b!73368 () Bool)

(declare-fun e!47995 () Bool)

(assert (=> b!73368 (= e!47995 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73369 () Bool)

(declare-fun c!10914 () Bool)

(assert (=> b!73369 (= c!10914 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47999 () ListLongMap!1419)

(declare-fun e!48001 () ListLongMap!1419)

(assert (=> b!73369 (= e!47999 e!48001)))

(declare-fun bm!6461 () Bool)

(declare-fun call!6464 () ListLongMap!1419)

(declare-fun call!6467 () ListLongMap!1419)

(assert (=> bm!6461 (= call!6464 call!6467)))

(declare-fun b!73370 () Bool)

(declare-fun res!38902 () Bool)

(declare-fun e!47989 () Bool)

(assert (=> b!73370 (=> (not res!38902) (not e!47989))))

(declare-fun e!47990 () Bool)

(assert (=> b!73370 (= res!38902 e!47990)))

(declare-fun res!38907 () Bool)

(assert (=> b!73370 (=> res!38907 e!47990)))

(assert (=> b!73370 (= res!38907 (not e!47995))))

(declare-fun res!38905 () Bool)

(assert (=> b!73370 (=> (not res!38905) (not e!47995))))

(assert (=> b!73370 (= res!38905 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6462 () Bool)

(declare-fun call!6465 () Bool)

(declare-fun lt!32860 () ListLongMap!1419)

(assert (=> bm!6462 (= call!6465 (contains!723 lt!32860 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73371 () Bool)

(declare-fun res!38899 () Bool)

(assert (=> b!73371 (=> (not res!38899) (not e!47989))))

(assert (=> b!73371 (= res!38899 e!47992)))

(declare-fun c!10912 () Bool)

(assert (=> b!73371 (= c!10912 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6463 () Bool)

(declare-fun call!6470 () ListLongMap!1419)

(declare-fun call!6468 () ListLongMap!1419)

(assert (=> bm!6463 (= call!6470 call!6468)))

(declare-fun b!73372 () Bool)

(declare-fun e!47991 () Unit!2078)

(declare-fun Unit!2090 () Unit!2078)

(assert (=> b!73372 (= e!47991 Unit!2090)))

(declare-fun b!73373 () Bool)

(declare-fun e!47996 () Bool)

(assert (=> b!73373 (= e!47989 e!47996)))

(declare-fun c!10910 () Bool)

(assert (=> b!73373 (= c!10910 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73374 () Bool)

(assert (=> b!73374 (= e!48001 call!6470)))

(declare-fun bm!6464 () Bool)

(declare-fun call!6466 () ListLongMap!1419)

(assert (=> bm!6464 (= call!6466 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73375 () Bool)

(assert (=> b!73375 (= e!47996 (not call!6465))))

(declare-fun b!73376 () Bool)

(declare-fun e!47993 () ListLongMap!1419)

(assert (=> b!73376 (= e!47993 (+!94 call!6468 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!73377 () Bool)

(declare-fun lt!32856 () Unit!2078)

(assert (=> b!73377 (= e!47991 lt!32856)))

(declare-fun lt!32850 () ListLongMap!1419)

(assert (=> b!73377 (= lt!32850 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32869 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32869 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32852 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32852 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32865 () Unit!2078)

(assert (=> b!73377 (= lt!32865 (addStillContains!51 lt!32850 lt!32869 (zeroValue!2115 newMap!16) lt!32852))))

(assert (=> b!73377 (contains!723 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))) lt!32852)))

(declare-fun lt!32855 () Unit!2078)

(assert (=> b!73377 (= lt!32855 lt!32865)))

(declare-fun lt!32853 () ListLongMap!1419)

(assert (=> b!73377 (= lt!32853 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32858 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32858 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32857 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32857 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32851 () Unit!2078)

(assert (=> b!73377 (= lt!32851 (addApplyDifferent!51 lt!32853 lt!32858 (minValue!2115 newMap!16) lt!32857))))

(assert (=> b!73377 (= (apply!75 (+!94 lt!32853 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))) lt!32857) (apply!75 lt!32853 lt!32857))))

(declare-fun lt!32861 () Unit!2078)

(assert (=> b!73377 (= lt!32861 lt!32851)))

(declare-fun lt!32864 () ListLongMap!1419)

(assert (=> b!73377 (= lt!32864 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32862 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32862 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32863 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32863 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32870 () Unit!2078)

(assert (=> b!73377 (= lt!32870 (addApplyDifferent!51 lt!32864 lt!32862 (zeroValue!2115 newMap!16) lt!32863))))

(assert (=> b!73377 (= (apply!75 (+!94 lt!32864 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))) lt!32863) (apply!75 lt!32864 lt!32863))))

(declare-fun lt!32859 () Unit!2078)

(assert (=> b!73377 (= lt!32859 lt!32870)))

(declare-fun lt!32867 () ListLongMap!1419)

(assert (=> b!73377 (= lt!32867 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32868 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32868 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32866 () (_ BitVec 64))

(assert (=> b!73377 (= lt!32866 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73377 (= lt!32856 (addApplyDifferent!51 lt!32867 lt!32868 (minValue!2115 newMap!16) lt!32866))))

(assert (=> b!73377 (= (apply!75 (+!94 lt!32867 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))) lt!32866) (apply!75 lt!32867 lt!32866))))

(declare-fun b!73378 () Bool)

(declare-fun e!47997 () Bool)

(assert (=> b!73378 (= e!47997 (= (apply!75 lt!32860 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!73379 () Bool)

(assert (=> b!73379 (= e!47994 (= (apply!75 lt!32860 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!73380 () Bool)

(assert (=> b!73380 (= e!48001 call!6464)))

(declare-fun c!10913 () Bool)

(declare-fun c!10909 () Bool)

(declare-fun bm!6465 () Bool)

(assert (=> bm!6465 (= call!6468 (+!94 (ite c!10909 call!6466 (ite c!10913 call!6467 call!6464)) (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!73381 () Bool)

(assert (=> b!73381 (= e!47993 e!47999)))

(assert (=> b!73381 (= c!10913 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73382 () Bool)

(declare-fun e!48000 () Bool)

(assert (=> b!73382 (= e!48000 (= (apply!75 lt!32860 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (_values!2196 newMap!16))))))

(assert (=> b!73382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73383 () Bool)

(assert (=> b!73383 (= e!47996 e!47997)))

(declare-fun res!38906 () Bool)

(assert (=> b!73383 (= res!38906 call!6465)))

(assert (=> b!73383 (=> (not res!38906) (not e!47997))))

(declare-fun d!16903 () Bool)

(assert (=> d!16903 e!47989))

(declare-fun res!38903 () Bool)

(assert (=> d!16903 (=> (not res!38903) (not e!47989))))

(assert (=> d!16903 (= res!38903 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!32871 () ListLongMap!1419)

(assert (=> d!16903 (= lt!32860 lt!32871)))

(declare-fun lt!32854 () Unit!2078)

(assert (=> d!16903 (= lt!32854 e!47991)))

(declare-fun c!10911 () Bool)

(declare-fun e!47998 () Bool)

(assert (=> d!16903 (= c!10911 e!47998)))

(declare-fun res!38900 () Bool)

(assert (=> d!16903 (=> (not res!38900) (not e!47998))))

(assert (=> d!16903 (= res!38900 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16903 (= lt!32871 e!47993)))

(assert (=> d!16903 (= c!10909 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16903 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16903 (= (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!32860)))

(declare-fun b!73384 () Bool)

(assert (=> b!73384 (= e!47992 (not call!6469))))

(declare-fun b!73385 () Bool)

(assert (=> b!73385 (= e!47990 e!48000)))

(declare-fun res!38904 () Bool)

(assert (=> b!73385 (=> (not res!38904) (not e!48000))))

(assert (=> b!73385 (= res!38904 (contains!723 lt!32860 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73385 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6466 () Bool)

(assert (=> bm!6466 (= call!6469 (contains!723 lt!32860 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6467 () Bool)

(assert (=> bm!6467 (= call!6467 call!6466)))

(declare-fun b!73386 () Bool)

(assert (=> b!73386 (= e!47999 call!6470)))

(declare-fun b!73387 () Bool)

(assert (=> b!73387 (= e!47998 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16903 c!10909) b!73376))

(assert (= (and d!16903 (not c!10909)) b!73381))

(assert (= (and b!73381 c!10913) b!73386))

(assert (= (and b!73381 (not c!10913)) b!73369))

(assert (= (and b!73369 c!10914) b!73374))

(assert (= (and b!73369 (not c!10914)) b!73380))

(assert (= (or b!73374 b!73380) bm!6461))

(assert (= (or b!73386 bm!6461) bm!6467))

(assert (= (or b!73386 b!73374) bm!6463))

(assert (= (or b!73376 bm!6467) bm!6464))

(assert (= (or b!73376 bm!6463) bm!6465))

(assert (= (and d!16903 res!38900) b!73387))

(assert (= (and d!16903 c!10911) b!73377))

(assert (= (and d!16903 (not c!10911)) b!73372))

(assert (= (and d!16903 res!38903) b!73370))

(assert (= (and b!73370 res!38905) b!73368))

(assert (= (and b!73370 (not res!38907)) b!73385))

(assert (= (and b!73385 res!38904) b!73382))

(assert (= (and b!73370 res!38902) b!73371))

(assert (= (and b!73371 c!10912) b!73367))

(assert (= (and b!73371 (not c!10912)) b!73384))

(assert (= (and b!73367 res!38901) b!73379))

(assert (= (or b!73367 b!73384) bm!6466))

(assert (= (and b!73371 res!38899) b!73373))

(assert (= (and b!73373 c!10910) b!73383))

(assert (= (and b!73373 (not c!10910)) b!73375))

(assert (= (and b!73383 res!38906) b!73378))

(assert (= (or b!73383 b!73375) bm!6462))

(declare-fun b_lambda!3293 () Bool)

(assert (=> (not b_lambda!3293) (not b!73382)))

(declare-fun t!5042 () Bool)

(declare-fun tb!1537 () Bool)

(assert (=> (and b!72873 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16)) t!5042) tb!1537))

(declare-fun result!2693 () Bool)

(assert (=> tb!1537 (= result!2693 tp_is_empty!2475)))

(assert (=> b!73382 t!5042))

(declare-fun b_and!4503 () Bool)

(assert (= b_and!4499 (and (=> t!5042 result!2693) b_and!4503)))

(declare-fun t!5044 () Bool)

(declare-fun tb!1539 () Bool)

(assert (=> (and b!72882 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 newMap!16)) t!5044) tb!1539))

(declare-fun result!2695 () Bool)

(assert (= result!2695 result!2693))

(assert (=> b!73382 t!5044))

(declare-fun b_and!4505 () Bool)

(assert (= b_and!4501 (and (=> t!5044 result!2695) b_and!4505)))

(assert (=> b!73382 m!71563))

(declare-fun m!71715 () Bool)

(assert (=> b!73382 m!71715))

(declare-fun m!71717 () Bool)

(assert (=> b!73382 m!71717))

(declare-fun m!71719 () Bool)

(assert (=> b!73382 m!71719))

(assert (=> b!73382 m!71563))

(declare-fun m!71721 () Bool)

(assert (=> b!73382 m!71721))

(assert (=> b!73382 m!71717))

(assert (=> b!73382 m!71715))

(declare-fun m!71723 () Bool)

(assert (=> bm!6464 m!71723))

(assert (=> d!16903 m!71705))

(declare-fun m!71725 () Bool)

(assert (=> bm!6462 m!71725))

(declare-fun m!71727 () Bool)

(assert (=> bm!6466 m!71727))

(declare-fun m!71729 () Bool)

(assert (=> bm!6465 m!71729))

(declare-fun m!71731 () Bool)

(assert (=> b!73379 m!71731))

(assert (=> b!73368 m!71563))

(assert (=> b!73368 m!71563))

(assert (=> b!73368 m!71567))

(assert (=> b!73387 m!71563))

(assert (=> b!73387 m!71563))

(assert (=> b!73387 m!71567))

(declare-fun m!71733 () Bool)

(assert (=> b!73376 m!71733))

(declare-fun m!71735 () Bool)

(assert (=> b!73378 m!71735))

(declare-fun m!71737 () Bool)

(assert (=> b!73377 m!71737))

(declare-fun m!71739 () Bool)

(assert (=> b!73377 m!71739))

(assert (=> b!73377 m!71723))

(declare-fun m!71741 () Bool)

(assert (=> b!73377 m!71741))

(assert (=> b!73377 m!71563))

(declare-fun m!71743 () Bool)

(assert (=> b!73377 m!71743))

(declare-fun m!71745 () Bool)

(assert (=> b!73377 m!71745))

(declare-fun m!71747 () Bool)

(assert (=> b!73377 m!71747))

(declare-fun m!71749 () Bool)

(assert (=> b!73377 m!71749))

(declare-fun m!71751 () Bool)

(assert (=> b!73377 m!71751))

(declare-fun m!71753 () Bool)

(assert (=> b!73377 m!71753))

(declare-fun m!71755 () Bool)

(assert (=> b!73377 m!71755))

(declare-fun m!71757 () Bool)

(assert (=> b!73377 m!71757))

(assert (=> b!73377 m!71755))

(declare-fun m!71759 () Bool)

(assert (=> b!73377 m!71759))

(assert (=> b!73377 m!71737))

(declare-fun m!71761 () Bool)

(assert (=> b!73377 m!71761))

(assert (=> b!73377 m!71749))

(assert (=> b!73377 m!71739))

(declare-fun m!71763 () Bool)

(assert (=> b!73377 m!71763))

(declare-fun m!71765 () Bool)

(assert (=> b!73377 m!71765))

(assert (=> b!73385 m!71563))

(assert (=> b!73385 m!71563))

(declare-fun m!71767 () Bool)

(assert (=> b!73385 m!71767))

(assert (=> b!73204 d!16903))

(assert (=> b!73091 d!16847))

(declare-fun b!73390 () Bool)

(declare-fun e!48003 () Option!139)

(assert (=> b!73390 (= e!48003 (getValueByKey!133 (t!5035 (toList!725 lt!32622)) (_1!1072 lt!32538)))))

(declare-fun d!16905 () Bool)

(declare-fun c!10915 () Bool)

(assert (=> d!16905 (= c!10915 (and ((_ is Cons!1474) (toList!725 lt!32622)) (= (_1!1072 (h!2061 (toList!725 lt!32622))) (_1!1072 lt!32538))))))

(declare-fun e!48002 () Option!139)

(assert (=> d!16905 (= (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538)) e!48002)))

(declare-fun b!73389 () Bool)

(assert (=> b!73389 (= e!48002 e!48003)))

(declare-fun c!10916 () Bool)

(assert (=> b!73389 (= c!10916 (and ((_ is Cons!1474) (toList!725 lt!32622)) (not (= (_1!1072 (h!2061 (toList!725 lt!32622))) (_1!1072 lt!32538)))))))

(declare-fun b!73388 () Bool)

(assert (=> b!73388 (= e!48002 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32622)))))))

(declare-fun b!73391 () Bool)

(assert (=> b!73391 (= e!48003 None!137)))

(assert (= (and d!16905 c!10915) b!73388))

(assert (= (and d!16905 (not c!10915)) b!73389))

(assert (= (and b!73389 c!10916) b!73390))

(assert (= (and b!73389 (not c!10916)) b!73391))

(declare-fun m!71769 () Bool)

(assert (=> b!73390 m!71769))

(assert (=> b!73001 d!16905))

(declare-fun b!73404 () Bool)

(declare-fun c!10924 () Bool)

(declare-fun lt!32878 () (_ BitVec 64))

(assert (=> b!73404 (= c!10924 (= lt!32878 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48010 () SeekEntryResult!236)

(declare-fun e!48011 () SeekEntryResult!236)

(assert (=> b!73404 (= e!48010 e!48011)))

(declare-fun b!73405 () Bool)

(declare-fun lt!32879 () SeekEntryResult!236)

(assert (=> b!73405 (= e!48011 (MissingZero!236 (index!3077 lt!32879)))))

(declare-fun lt!32880 () SeekEntryResult!236)

(declare-fun d!16907 () Bool)

(assert (=> d!16907 (and (or ((_ is Undefined!236) lt!32880) (not ((_ is Found!236) lt!32880)) (and (bvsge (index!3076 lt!32880) #b00000000000000000000000000000000) (bvslt (index!3076 lt!32880) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!32880) ((_ is Found!236) lt!32880) (not ((_ is MissingZero!236) lt!32880)) (and (bvsge (index!3075 lt!32880) #b00000000000000000000000000000000) (bvslt (index!3075 lt!32880) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!32880) ((_ is Found!236) lt!32880) ((_ is MissingZero!236) lt!32880) (not ((_ is MissingVacant!236) lt!32880)) (and (bvsge (index!3078 lt!32880) #b00000000000000000000000000000000) (bvslt (index!3078 lt!32880) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!32880) (ite ((_ is Found!236) lt!32880) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32880)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite ((_ is MissingZero!236) lt!32880) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!32880)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!236) lt!32880) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!32880)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48012 () SeekEntryResult!236)

(assert (=> d!16907 (= lt!32880 e!48012)))

(declare-fun c!10925 () Bool)

(assert (=> d!16907 (= c!10925 (and ((_ is Intermediate!236) lt!32879) (undefined!1048 lt!32879)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3895 (_ BitVec 32)) SeekEntryResult!236)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!16907 (= lt!32879 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!16907 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16907 (= (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!32880)))

(declare-fun b!73406 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3895 (_ BitVec 32)) SeekEntryResult!236)

(assert (=> b!73406 (= e!48011 (seekKeyOrZeroReturnVacant!0 (x!11152 lt!32879) (index!3077 lt!32879) (index!3077 lt!32879) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73407 () Bool)

(assert (=> b!73407 (= e!48012 Undefined!236)))

(declare-fun b!73408 () Bool)

(assert (=> b!73408 (= e!48012 e!48010)))

(assert (=> b!73408 (= lt!32878 (select (arr!1859 (_keys!3865 newMap!16)) (index!3077 lt!32879)))))

(declare-fun c!10923 () Bool)

(assert (=> b!73408 (= c!10923 (= lt!32878 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73409 () Bool)

(assert (=> b!73409 (= e!48010 (Found!236 (index!3077 lt!32879)))))

(assert (= (and d!16907 c!10925) b!73407))

(assert (= (and d!16907 (not c!10925)) b!73408))

(assert (= (and b!73408 c!10923) b!73409))

(assert (= (and b!73408 (not c!10923)) b!73404))

(assert (= (and b!73404 c!10924) b!73405))

(assert (= (and b!73404 (not c!10924)) b!73406))

(declare-fun m!71771 () Bool)

(assert (=> d!16907 m!71771))

(declare-fun m!71773 () Bool)

(assert (=> d!16907 m!71773))

(assert (=> d!16907 m!71705))

(assert (=> d!16907 m!71227))

(declare-fun m!71775 () Bool)

(assert (=> d!16907 m!71775))

(assert (=> d!16907 m!71775))

(assert (=> d!16907 m!71227))

(declare-fun m!71777 () Bool)

(assert (=> d!16907 m!71777))

(declare-fun m!71779 () Bool)

(assert (=> d!16907 m!71779))

(assert (=> b!73406 m!71227))

(declare-fun m!71781 () Bool)

(assert (=> b!73406 m!71781))

(declare-fun m!71783 () Bool)

(assert (=> b!73408 m!71783))

(assert (=> b!73202 d!16907))

(declare-fun d!16909 () Bool)

(assert (=> d!16909 (= (get!1140 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2529 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!73079 d!16909))

(declare-fun d!16911 () Bool)

(declare-fun res!38912 () Bool)

(declare-fun e!48017 () Bool)

(assert (=> d!16911 (=> res!38912 e!48017)))

(assert (=> d!16911 (= res!38912 (and ((_ is Cons!1474) (toList!725 lt!32541)) (= (_1!1072 (h!2061 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (=> d!16911 (= (containsKey!137 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48017)))

(declare-fun b!73414 () Bool)

(declare-fun e!48018 () Bool)

(assert (=> b!73414 (= e!48017 e!48018)))

(declare-fun res!38913 () Bool)

(assert (=> b!73414 (=> (not res!38913) (not e!48018))))

(assert (=> b!73414 (= res!38913 (and (or (not ((_ is Cons!1474) (toList!725 lt!32541))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) ((_ is Cons!1474) (toList!725 lt!32541)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun b!73415 () Bool)

(assert (=> b!73415 (= e!48018 (containsKey!137 (t!5035 (toList!725 lt!32541)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!16911 (not res!38912)) b!73414))

(assert (= (and b!73414 res!38913) b!73415))

(assert (=> b!73415 m!71227))

(declare-fun m!71785 () Bool)

(assert (=> b!73415 m!71785))

(assert (=> d!16853 d!16911))

(assert (=> d!16845 d!16851))

(declare-fun d!16913 () Bool)

(assert (=> d!16913 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) from!355 Nil!1476)))

(assert (=> d!16913 true))

(declare-fun _$71!96 () Unit!2078)

(assert (=> d!16913 (= (choose!39 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!96)))

(declare-fun bs!3148 () Bool)

(assert (= bs!3148 d!16913))

(assert (=> bs!3148 m!71257))

(assert (=> d!16845 d!16913))

(declare-fun d!16915 () Bool)

(assert (=> d!16915 (= (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73065 d!16915))

(assert (=> bm!6431 d!16831))

(assert (=> d!16843 d!16847))

(declare-fun d!16917 () Bool)

(assert (=> d!16917 (not (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!16917 true))

(declare-fun _$68!55 () Unit!2078)

(assert (=> d!16917 (= (choose!68 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476)) _$68!55)))

(declare-fun bs!3149 () Bool)

(assert (= bs!3149 d!16917))

(assert (=> bs!3149 m!71227))

(assert (=> bs!3149 m!71261))

(assert (=> d!16843 d!16917))

(declare-fun d!16919 () Bool)

(declare-fun e!48019 () Bool)

(assert (=> d!16919 e!48019))

(declare-fun res!38914 () Bool)

(assert (=> d!16919 (=> (not res!38914) (not e!48019))))

(declare-fun lt!32883 () ListLongMap!1419)

(assert (=> d!16919 (= res!38914 (contains!723 lt!32883 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!32882 () List!1478)

(assert (=> d!16919 (= lt!32883 (ListLongMap!1420 lt!32882))))

(declare-fun lt!32884 () Unit!2078)

(declare-fun lt!32881 () Unit!2078)

(assert (=> d!16919 (= lt!32884 lt!32881)))

(assert (=> d!16919 (= (getValueByKey!133 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16919 (= lt!32881 (lemmaContainsTupThenGetReturnValue!50 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16919 (= lt!32882 (insertStrictlySorted!53 (toList!725 call!6373) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16919 (= (+!94 call!6373 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32883)))

(declare-fun b!73416 () Bool)

(declare-fun res!38915 () Bool)

(assert (=> b!73416 (=> (not res!38915) (not e!48019))))

(assert (=> b!73416 (= res!38915 (= (getValueByKey!133 (toList!725 lt!32883) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73417 () Bool)

(assert (=> b!73417 (= e!48019 (contains!724 (toList!725 lt!32883) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!16919 res!38914) b!73416))

(assert (= (and b!73416 res!38915) b!73417))

(declare-fun m!71787 () Bool)

(assert (=> d!16919 m!71787))

(declare-fun m!71789 () Bool)

(assert (=> d!16919 m!71789))

(declare-fun m!71791 () Bool)

(assert (=> d!16919 m!71791))

(declare-fun m!71793 () Bool)

(assert (=> d!16919 m!71793))

(declare-fun m!71795 () Bool)

(assert (=> b!73416 m!71795))

(declare-fun m!71797 () Bool)

(assert (=> b!73417 m!71797))

(assert (=> b!73054 d!16919))

(assert (=> b!73220 d!16903))

(declare-fun d!16921 () Bool)

(declare-fun e!48021 () Bool)

(assert (=> d!16921 e!48021))

(declare-fun res!38916 () Bool)

(assert (=> d!16921 (=> res!38916 e!48021)))

(declare-fun lt!32888 () Bool)

(assert (=> d!16921 (= res!38916 (not lt!32888))))

(declare-fun lt!32887 () Bool)

(assert (=> d!16921 (= lt!32888 lt!32887)))

(declare-fun lt!32886 () Unit!2078)

(declare-fun e!48020 () Unit!2078)

(assert (=> d!16921 (= lt!32886 e!48020)))

(declare-fun c!10926 () Bool)

(assert (=> d!16921 (= c!10926 lt!32887)))

(assert (=> d!16921 (= lt!32887 (containsKey!137 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16921 (= (contains!723 e!47901 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!32888)))

(declare-fun b!73418 () Bool)

(declare-fun lt!32885 () Unit!2078)

(assert (=> b!73418 (= e!48020 lt!32885)))

(assert (=> b!73418 (= lt!32885 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!73418 (isDefined!86 (getValueByKey!133 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73419 () Bool)

(declare-fun Unit!2091 () Unit!2078)

(assert (=> b!73419 (= e!48020 Unit!2091)))

(declare-fun b!73420 () Bool)

(assert (=> b!73420 (= e!48021 (isDefined!86 (getValueByKey!133 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (= (and d!16921 c!10926) b!73418))

(assert (= (and d!16921 (not c!10926)) b!73419))

(assert (= (and d!16921 (not res!38916)) b!73420))

(assert (=> d!16921 m!71227))

(declare-fun m!71799 () Bool)

(assert (=> d!16921 m!71799))

(assert (=> b!73418 m!71227))

(declare-fun m!71801 () Bool)

(assert (=> b!73418 m!71801))

(assert (=> b!73418 m!71227))

(declare-fun m!71803 () Bool)

(assert (=> b!73418 m!71803))

(assert (=> b!73418 m!71803))

(declare-fun m!71805 () Bool)

(assert (=> b!73418 m!71805))

(assert (=> b!73420 m!71227))

(assert (=> b!73420 m!71803))

(assert (=> b!73420 m!71803))

(assert (=> b!73420 m!71805))

(assert (=> bm!6427 d!16921))

(assert (=> bm!6369 d!16815))

(declare-fun d!16923 () Bool)

(declare-fun e!48022 () Bool)

(assert (=> d!16923 e!48022))

(declare-fun res!38917 () Bool)

(assert (=> d!16923 (=> (not res!38917) (not e!48022))))

(declare-fun lt!32891 () ListLongMap!1419)

(assert (=> d!16923 (= res!38917 (contains!723 lt!32891 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32890 () List!1478)

(assert (=> d!16923 (= lt!32891 (ListLongMap!1420 lt!32890))))

(declare-fun lt!32892 () Unit!2078)

(declare-fun lt!32889 () Unit!2078)

(assert (=> d!16923 (= lt!32892 lt!32889)))

(assert (=> d!16923 (= (getValueByKey!133 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16923 (= lt!32889 (lemmaContainsTupThenGetReturnValue!50 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16923 (= lt!32890 (insertStrictlySorted!53 (toList!725 call!6354) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16923 (= (+!94 call!6354 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32891)))

(declare-fun b!73421 () Bool)

(declare-fun res!38918 () Bool)

(assert (=> b!73421 (=> (not res!38918) (not e!48022))))

(assert (=> b!73421 (= res!38918 (= (getValueByKey!133 (toList!725 lt!32891) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!73422 () Bool)

(assert (=> b!73422 (= e!48022 (contains!724 (toList!725 lt!32891) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16923 res!38917) b!73421))

(assert (= (and b!73421 res!38918) b!73422))

(declare-fun m!71807 () Bool)

(assert (=> d!16923 m!71807))

(declare-fun m!71809 () Bool)

(assert (=> d!16923 m!71809))

(declare-fun m!71811 () Bool)

(assert (=> d!16923 m!71811))

(declare-fun m!71813 () Bool)

(assert (=> d!16923 m!71813))

(declare-fun m!71815 () Bool)

(assert (=> b!73421 m!71815))

(declare-fun m!71817 () Bool)

(assert (=> b!73422 m!71817))

(assert (=> b!72990 d!16923))

(declare-fun d!16925 () Bool)

(declare-fun e!48023 () Bool)

(assert (=> d!16925 e!48023))

(declare-fun res!38919 () Bool)

(assert (=> d!16925 (=> (not res!38919) (not e!48023))))

(declare-fun lt!32895 () ListLongMap!1419)

(assert (=> d!16925 (= res!38919 (contains!723 lt!32895 (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun lt!32894 () List!1478)

(assert (=> d!16925 (= lt!32895 (ListLongMap!1420 lt!32894))))

(declare-fun lt!32896 () Unit!2078)

(declare-fun lt!32893 () Unit!2078)

(assert (=> d!16925 (= lt!32896 lt!32893)))

(assert (=> d!16925 (= (getValueByKey!133 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596))) (Some!138 (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))

(assert (=> d!16925 (= lt!32893 (lemmaContainsTupThenGetReturnValue!50 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))

(assert (=> d!16925 (= lt!32894 (insertStrictlySorted!53 (toList!725 lt!32595) (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))

(assert (=> d!16925 (= (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)) lt!32895)))

(declare-fun b!73423 () Bool)

(declare-fun res!38920 () Bool)

(assert (=> b!73423 (=> (not res!38920) (not e!48023))))

(assert (=> b!73423 (= res!38920 (= (getValueByKey!133 (toList!725 lt!32895) (_1!1072 (tuple2!2123 lt!32599 lt!32596))) (Some!138 (_2!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(declare-fun b!73424 () Bool)

(assert (=> b!73424 (= e!48023 (contains!724 (toList!725 lt!32895) (tuple2!2123 lt!32599 lt!32596)))))

(assert (= (and d!16925 res!38919) b!73423))

(assert (= (and b!73423 res!38920) b!73424))

(declare-fun m!71819 () Bool)

(assert (=> d!16925 m!71819))

(declare-fun m!71821 () Bool)

(assert (=> d!16925 m!71821))

(declare-fun m!71823 () Bool)

(assert (=> d!16925 m!71823))

(declare-fun m!71825 () Bool)

(assert (=> d!16925 m!71825))

(declare-fun m!71827 () Bool)

(assert (=> b!73423 m!71827))

(declare-fun m!71829 () Bool)

(assert (=> b!73424 m!71829))

(assert (=> b!72990 d!16925))

(assert (=> b!72990 d!16887))

(declare-fun d!16927 () Bool)

(declare-fun e!48025 () Bool)

(assert (=> d!16927 e!48025))

(declare-fun res!38921 () Bool)

(assert (=> d!16927 (=> res!38921 e!48025)))

(declare-fun lt!32900 () Bool)

(assert (=> d!16927 (= res!38921 (not lt!32900))))

(declare-fun lt!32899 () Bool)

(assert (=> d!16927 (= lt!32900 lt!32899)))

(declare-fun lt!32898 () Unit!2078)

(declare-fun e!48024 () Unit!2078)

(assert (=> d!16927 (= lt!32898 e!48024)))

(declare-fun c!10927 () Bool)

(assert (=> d!16927 (= c!10927 lt!32899)))

(assert (=> d!16927 (= lt!32899 (containsKey!137 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))

(assert (=> d!16927 (= (contains!723 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)) lt!32593) lt!32900)))

(declare-fun b!73425 () Bool)

(declare-fun lt!32897 () Unit!2078)

(assert (=> b!73425 (= e!48024 lt!32897)))

(assert (=> b!73425 (= lt!32897 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))

(assert (=> b!73425 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))

(declare-fun b!73426 () Bool)

(declare-fun Unit!2092 () Unit!2078)

(assert (=> b!73426 (= e!48024 Unit!2092)))

(declare-fun b!73427 () Bool)

(assert (=> b!73427 (= e!48025 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593)))))

(assert (= (and d!16927 c!10927) b!73425))

(assert (= (and d!16927 (not c!10927)) b!73426))

(assert (= (and d!16927 (not res!38921)) b!73427))

(declare-fun m!71831 () Bool)

(assert (=> d!16927 m!71831))

(declare-fun m!71833 () Bool)

(assert (=> b!73425 m!71833))

(declare-fun m!71835 () Bool)

(assert (=> b!73425 m!71835))

(assert (=> b!73425 m!71835))

(declare-fun m!71837 () Bool)

(assert (=> b!73425 m!71837))

(assert (=> b!73427 m!71835))

(assert (=> b!73427 m!71835))

(assert (=> b!73427 m!71837))

(assert (=> b!72990 d!16927))

(declare-fun d!16929 () Bool)

(assert (=> d!16929 (not (contains!723 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)) lt!32593))))

(declare-fun lt!32903 () Unit!2078)

(declare-fun choose!414 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2078)

(assert (=> d!16929 (= lt!32903 (choose!414 lt!32595 lt!32599 lt!32596 lt!32593))))

(declare-fun e!48028 () Bool)

(assert (=> d!16929 e!48028))

(declare-fun res!38924 () Bool)

(assert (=> d!16929 (=> (not res!38924) (not e!48028))))

(assert (=> d!16929 (= res!38924 (not (contains!723 lt!32595 lt!32593)))))

(assert (=> d!16929 (= (addStillNotContains!24 lt!32595 lt!32599 lt!32596 lt!32593) lt!32903)))

(declare-fun b!73431 () Bool)

(assert (=> b!73431 (= e!48028 (not (= lt!32599 lt!32593)))))

(assert (= (and d!16929 res!38924) b!73431))

(assert (=> d!16929 m!71345))

(assert (=> d!16929 m!71345))

(assert (=> d!16929 m!71351))

(declare-fun m!71839 () Bool)

(assert (=> d!16929 m!71839))

(declare-fun m!71841 () Bool)

(assert (=> d!16929 m!71841))

(assert (=> b!72990 d!16929))

(declare-fun b!73432 () Bool)

(declare-fun e!48032 () Bool)

(declare-fun e!48034 () Bool)

(assert (=> b!73432 (= e!48032 e!48034)))

(declare-fun res!38927 () Bool)

(declare-fun call!6476 () Bool)

(assert (=> b!73432 (= res!38927 call!6476)))

(assert (=> b!73432 (=> (not res!38927) (not e!48034))))

(declare-fun b!73433 () Bool)

(declare-fun e!48035 () Bool)

(assert (=> b!73433 (= e!48035 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73434 () Bool)

(declare-fun c!10933 () Bool)

(assert (=> b!73434 (= c!10933 (and (not (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48039 () ListLongMap!1419)

(declare-fun e!48041 () ListLongMap!1419)

(assert (=> b!73434 (= e!48039 e!48041)))

(declare-fun bm!6468 () Bool)

(declare-fun call!6471 () ListLongMap!1419)

(declare-fun call!6474 () ListLongMap!1419)

(assert (=> bm!6468 (= call!6471 call!6474)))

(declare-fun b!73435 () Bool)

(declare-fun res!38928 () Bool)

(declare-fun e!48029 () Bool)

(assert (=> b!73435 (=> (not res!38928) (not e!48029))))

(declare-fun e!48030 () Bool)

(assert (=> b!73435 (= res!38928 e!48030)))

(declare-fun res!38933 () Bool)

(assert (=> b!73435 (=> res!38933 e!48030)))

(assert (=> b!73435 (= res!38933 (not e!48035))))

(declare-fun res!38931 () Bool)

(assert (=> b!73435 (=> (not res!38931) (not e!48035))))

(assert (=> b!73435 (= res!38931 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6469 () Bool)

(declare-fun call!6472 () Bool)

(declare-fun lt!32914 () ListLongMap!1419)

(assert (=> bm!6469 (= call!6472 (contains!723 lt!32914 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73436 () Bool)

(declare-fun res!38925 () Bool)

(assert (=> b!73436 (=> (not res!38925) (not e!48029))))

(assert (=> b!73436 (= res!38925 e!48032)))

(declare-fun c!10931 () Bool)

(assert (=> b!73436 (= c!10931 (not (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6470 () Bool)

(declare-fun call!6477 () ListLongMap!1419)

(declare-fun call!6475 () ListLongMap!1419)

(assert (=> bm!6470 (= call!6477 call!6475)))

(declare-fun b!73437 () Bool)

(declare-fun e!48031 () Unit!2078)

(declare-fun Unit!2093 () Unit!2078)

(assert (=> b!73437 (= e!48031 Unit!2093)))

(declare-fun b!73438 () Bool)

(declare-fun e!48036 () Bool)

(assert (=> b!73438 (= e!48029 e!48036)))

(declare-fun c!10929 () Bool)

(assert (=> b!73438 (= c!10929 (not (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73439 () Bool)

(assert (=> b!73439 (= e!48041 call!6477)))

(declare-fun call!6473 () ListLongMap!1419)

(declare-fun bm!6471 () Bool)

(assert (=> bm!6471 (= call!6473 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73440 () Bool)

(assert (=> b!73440 (= e!48036 (not call!6472))))

(declare-fun b!73441 () Bool)

(declare-fun e!48033 () ListLongMap!1419)

(assert (=> b!73441 (= e!48033 (+!94 call!6475 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))

(declare-fun b!73442 () Bool)

(declare-fun lt!32910 () Unit!2078)

(assert (=> b!73442 (= e!48031 lt!32910)))

(declare-fun lt!32904 () ListLongMap!1419)

(assert (=> b!73442 (= lt!32904 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32923 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32923 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32906 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32906 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32919 () Unit!2078)

(assert (=> b!73442 (= lt!32919 (addStillContains!51 lt!32904 lt!32923 (zeroValue!2115 newMap!16) lt!32906))))

(assert (=> b!73442 (contains!723 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))) lt!32906)))

(declare-fun lt!32909 () Unit!2078)

(assert (=> b!73442 (= lt!32909 lt!32919)))

(declare-fun lt!32907 () ListLongMap!1419)

(assert (=> b!73442 (= lt!32907 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32912 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32912 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32911 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32911 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32905 () Unit!2078)

(assert (=> b!73442 (= lt!32905 (addApplyDifferent!51 lt!32907 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) lt!32911))))

(assert (=> b!73442 (= (apply!75 (+!94 lt!32907 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!32911) (apply!75 lt!32907 lt!32911))))

(declare-fun lt!32915 () Unit!2078)

(assert (=> b!73442 (= lt!32915 lt!32905)))

(declare-fun lt!32918 () ListLongMap!1419)

(assert (=> b!73442 (= lt!32918 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32916 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32916 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32917 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32917 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32924 () Unit!2078)

(assert (=> b!73442 (= lt!32924 (addApplyDifferent!51 lt!32918 lt!32916 (zeroValue!2115 newMap!16) lt!32917))))

(assert (=> b!73442 (= (apply!75 (+!94 lt!32918 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))) lt!32917) (apply!75 lt!32918 lt!32917))))

(declare-fun lt!32913 () Unit!2078)

(assert (=> b!73442 (= lt!32913 lt!32924)))

(declare-fun lt!32921 () ListLongMap!1419)

(assert (=> b!73442 (= lt!32921 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32922 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32922 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32920 () (_ BitVec 64))

(assert (=> b!73442 (= lt!32920 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73442 (= lt!32910 (addApplyDifferent!51 lt!32921 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) lt!32920))))

(assert (=> b!73442 (= (apply!75 (+!94 lt!32921 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!32920) (apply!75 lt!32921 lt!32920))))

(declare-fun e!48037 () Bool)

(declare-fun b!73443 () Bool)

(assert (=> b!73443 (= e!48037 (= (apply!75 lt!32914 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))

(declare-fun b!73444 () Bool)

(assert (=> b!73444 (= e!48034 (= (apply!75 lt!32914 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!73445 () Bool)

(assert (=> b!73445 (= e!48041 call!6471)))

(declare-fun c!10932 () Bool)

(declare-fun c!10928 () Bool)

(declare-fun bm!6472 () Bool)

(assert (=> bm!6472 (= call!6475 (+!94 (ite c!10928 call!6473 (ite c!10932 call!6474 call!6471)) (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(declare-fun b!73446 () Bool)

(assert (=> b!73446 (= e!48033 e!48039)))

(assert (=> b!73446 (= c!10932 (and (not (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73447 () Bool)

(declare-fun e!48040 () Bool)

(assert (=> b!73447 (= e!48040 (= (apply!75 lt!32914 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73447 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))))))))

(assert (=> b!73447 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73448 () Bool)

(assert (=> b!73448 (= e!48036 e!48037)))

(declare-fun res!38932 () Bool)

(assert (=> b!73448 (= res!38932 call!6472)))

(assert (=> b!73448 (=> (not res!38932) (not e!48037))))

(declare-fun d!16931 () Bool)

(assert (=> d!16931 e!48029))

(declare-fun res!38929 () Bool)

(assert (=> d!16931 (=> (not res!38929) (not e!48029))))

(assert (=> d!16931 (= res!38929 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!32925 () ListLongMap!1419)

(assert (=> d!16931 (= lt!32914 lt!32925)))

(declare-fun lt!32908 () Unit!2078)

(assert (=> d!16931 (= lt!32908 e!48031)))

(declare-fun c!10930 () Bool)

(declare-fun e!48038 () Bool)

(assert (=> d!16931 (= c!10930 e!48038)))

(declare-fun res!38926 () Bool)

(assert (=> d!16931 (=> (not res!38926) (not e!48038))))

(assert (=> d!16931 (= res!38926 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16931 (= lt!32925 e!48033)))

(assert (=> d!16931 (= c!10928 (and (not (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16931 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16931 (= (getCurrentListMap!422 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!32914)))

(declare-fun b!73449 () Bool)

(assert (=> b!73449 (= e!48032 (not call!6476))))

(declare-fun b!73450 () Bool)

(assert (=> b!73450 (= e!48030 e!48040)))

(declare-fun res!38930 () Bool)

(assert (=> b!73450 (=> (not res!38930) (not e!48040))))

(assert (=> b!73450 (= res!38930 (contains!723 lt!32914 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73450 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6473 () Bool)

(assert (=> bm!6473 (= call!6476 (contains!723 lt!32914 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6474 () Bool)

(assert (=> bm!6474 (= call!6474 call!6473)))

(declare-fun b!73451 () Bool)

(assert (=> b!73451 (= e!48039 call!6477)))

(declare-fun b!73452 () Bool)

(assert (=> b!73452 (= e!48038 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16931 c!10928) b!73441))

(assert (= (and d!16931 (not c!10928)) b!73446))

(assert (= (and b!73446 c!10932) b!73451))

(assert (= (and b!73446 (not c!10932)) b!73434))

(assert (= (and b!73434 c!10933) b!73439))

(assert (= (and b!73434 (not c!10933)) b!73445))

(assert (= (or b!73439 b!73445) bm!6468))

(assert (= (or b!73451 bm!6468) bm!6474))

(assert (= (or b!73451 b!73439) bm!6470))

(assert (= (or b!73441 bm!6474) bm!6471))

(assert (= (or b!73441 bm!6470) bm!6472))

(assert (= (and d!16931 res!38926) b!73452))

(assert (= (and d!16931 c!10930) b!73442))

(assert (= (and d!16931 (not c!10930)) b!73437))

(assert (= (and d!16931 res!38929) b!73435))

(assert (= (and b!73435 res!38931) b!73433))

(assert (= (and b!73435 (not res!38933)) b!73450))

(assert (= (and b!73450 res!38930) b!73447))

(assert (= (and b!73435 res!38928) b!73436))

(assert (= (and b!73436 c!10931) b!73432))

(assert (= (and b!73436 (not c!10931)) b!73449))

(assert (= (and b!73432 res!38927) b!73444))

(assert (= (or b!73432 b!73449) bm!6473))

(assert (= (and b!73436 res!38925) b!73438))

(assert (= (and b!73438 c!10929) b!73448))

(assert (= (and b!73438 (not c!10929)) b!73440))

(assert (= (and b!73448 res!38932) b!73443))

(assert (= (or b!73448 b!73440) bm!6469))

(declare-fun b_lambda!3295 () Bool)

(assert (=> (not b_lambda!3295) (not b!73447)))

(assert (=> b!73447 t!5042))

(declare-fun b_and!4507 () Bool)

(assert (= b_and!4503 (and (=> t!5042 result!2693) b_and!4507)))

(assert (=> b!73447 t!5044))

(declare-fun b_and!4509 () Bool)

(assert (= b_and!4505 (and (=> t!5044 result!2695) b_and!4509)))

(assert (=> b!73447 m!71563))

(declare-fun m!71843 () Bool)

(assert (=> b!73447 m!71843))

(assert (=> b!73447 m!71717))

(declare-fun m!71845 () Bool)

(assert (=> b!73447 m!71845))

(assert (=> b!73447 m!71563))

(declare-fun m!71847 () Bool)

(assert (=> b!73447 m!71847))

(assert (=> b!73447 m!71717))

(assert (=> b!73447 m!71843))

(declare-fun m!71849 () Bool)

(assert (=> bm!6471 m!71849))

(assert (=> d!16931 m!71705))

(declare-fun m!71851 () Bool)

(assert (=> bm!6469 m!71851))

(declare-fun m!71853 () Bool)

(assert (=> bm!6473 m!71853))

(declare-fun m!71855 () Bool)

(assert (=> bm!6472 m!71855))

(declare-fun m!71857 () Bool)

(assert (=> b!73444 m!71857))

(assert (=> b!73433 m!71563))

(assert (=> b!73433 m!71563))

(assert (=> b!73433 m!71567))

(assert (=> b!73452 m!71563))

(assert (=> b!73452 m!71563))

(assert (=> b!73452 m!71567))

(declare-fun m!71859 () Bool)

(assert (=> b!73441 m!71859))

(declare-fun m!71861 () Bool)

(assert (=> b!73443 m!71861))

(declare-fun m!71863 () Bool)

(assert (=> b!73442 m!71863))

(declare-fun m!71865 () Bool)

(assert (=> b!73442 m!71865))

(assert (=> b!73442 m!71849))

(declare-fun m!71867 () Bool)

(assert (=> b!73442 m!71867))

(assert (=> b!73442 m!71563))

(declare-fun m!71869 () Bool)

(assert (=> b!73442 m!71869))

(declare-fun m!71871 () Bool)

(assert (=> b!73442 m!71871))

(declare-fun m!71873 () Bool)

(assert (=> b!73442 m!71873))

(declare-fun m!71875 () Bool)

(assert (=> b!73442 m!71875))

(declare-fun m!71877 () Bool)

(assert (=> b!73442 m!71877))

(declare-fun m!71879 () Bool)

(assert (=> b!73442 m!71879))

(declare-fun m!71881 () Bool)

(assert (=> b!73442 m!71881))

(declare-fun m!71883 () Bool)

(assert (=> b!73442 m!71883))

(assert (=> b!73442 m!71881))

(declare-fun m!71885 () Bool)

(assert (=> b!73442 m!71885))

(assert (=> b!73442 m!71863))

(declare-fun m!71887 () Bool)

(assert (=> b!73442 m!71887))

(assert (=> b!73442 m!71875))

(assert (=> b!73442 m!71865))

(declare-fun m!71889 () Bool)

(assert (=> b!73442 m!71889))

(declare-fun m!71891 () Bool)

(assert (=> b!73442 m!71891))

(assert (=> b!73450 m!71563))

(assert (=> b!73450 m!71563))

(declare-fun m!71893 () Bool)

(assert (=> b!73450 m!71893))

(assert (=> bm!6426 d!16931))

(declare-fun d!16933 () Bool)

(declare-fun res!38934 () Bool)

(declare-fun e!48042 () Bool)

(assert (=> d!16933 (=> (not res!38934) (not e!48042))))

(assert (=> d!16933 (= res!38934 (simpleValid!51 (_2!1073 lt!32791)))))

(assert (=> d!16933 (= (valid!289 (_2!1073 lt!32791)) e!48042)))

(declare-fun b!73453 () Bool)

(declare-fun res!38935 () Bool)

(assert (=> b!73453 (=> (not res!38935) (not e!48042))))

(assert (=> b!73453 (= res!38935 (= (arrayCountValidKeys!0 (_keys!3865 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))) (_size!397 (_2!1073 lt!32791))))))

(declare-fun b!73454 () Bool)

(declare-fun res!38936 () Bool)

(assert (=> b!73454 (=> (not res!38936) (not e!48042))))

(assert (=> b!73454 (= res!38936 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791))))))

(declare-fun b!73455 () Bool)

(assert (=> b!73455 (= e!48042 (arrayNoDuplicates!0 (_keys!3865 (_2!1073 lt!32791)) #b00000000000000000000000000000000 Nil!1476))))

(assert (= (and d!16933 res!38934) b!73453))

(assert (= (and b!73453 res!38935) b!73454))

(assert (= (and b!73454 res!38936) b!73455))

(declare-fun m!71895 () Bool)

(assert (=> d!16933 m!71895))

(declare-fun m!71897 () Bool)

(assert (=> b!73453 m!71897))

(declare-fun m!71899 () Bool)

(assert (=> b!73454 m!71899))

(declare-fun m!71901 () Bool)

(assert (=> b!73455 m!71901))

(assert (=> d!16855 d!16933))

(assert (=> d!16855 d!16839))

(declare-fun d!16935 () Bool)

(declare-fun e!48044 () Bool)

(assert (=> d!16935 e!48044))

(declare-fun res!38937 () Bool)

(assert (=> d!16935 (=> res!38937 e!48044)))

(declare-fun lt!32929 () Bool)

(assert (=> d!16935 (= res!38937 (not lt!32929))))

(declare-fun lt!32928 () Bool)

(assert (=> d!16935 (= lt!32929 lt!32928)))

(declare-fun lt!32927 () Unit!2078)

(declare-fun e!48043 () Unit!2078)

(assert (=> d!16935 (= lt!32927 e!48043)))

(declare-fun c!10934 () Bool)

(assert (=> d!16935 (= c!10934 lt!32928)))

(assert (=> d!16935 (= lt!32928 (containsKey!137 (toList!725 lt!32610) (_1!1072 lt!32542)))))

(assert (=> d!16935 (= (contains!723 lt!32610 (_1!1072 lt!32542)) lt!32929)))

(declare-fun b!73456 () Bool)

(declare-fun lt!32926 () Unit!2078)

(assert (=> b!73456 (= e!48043 lt!32926)))

(assert (=> b!73456 (= lt!32926 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32610) (_1!1072 lt!32542)))))

(assert (=> b!73456 (isDefined!86 (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542)))))

(declare-fun b!73457 () Bool)

(declare-fun Unit!2094 () Unit!2078)

(assert (=> b!73457 (= e!48043 Unit!2094)))

(declare-fun b!73458 () Bool)

(assert (=> b!73458 (= e!48044 (isDefined!86 (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542))))))

(assert (= (and d!16935 c!10934) b!73456))

(assert (= (and d!16935 (not c!10934)) b!73457))

(assert (= (and d!16935 (not res!38937)) b!73458))

(declare-fun m!71903 () Bool)

(assert (=> d!16935 m!71903))

(declare-fun m!71905 () Bool)

(assert (=> b!73456 m!71905))

(assert (=> b!73456 m!71363))

(assert (=> b!73456 m!71363))

(declare-fun m!71907 () Bool)

(assert (=> b!73456 m!71907))

(assert (=> b!73458 m!71363))

(assert (=> b!73458 m!71363))

(assert (=> b!73458 m!71907))

(assert (=> d!16817 d!16935))

(declare-fun b!73461 () Bool)

(declare-fun e!48046 () Option!139)

(assert (=> b!73461 (= e!48046 (getValueByKey!133 (t!5035 lt!32609) (_1!1072 lt!32542)))))

(declare-fun d!16937 () Bool)

(declare-fun c!10935 () Bool)

(assert (=> d!16937 (= c!10935 (and ((_ is Cons!1474) lt!32609) (= (_1!1072 (h!2061 lt!32609)) (_1!1072 lt!32542))))))

(declare-fun e!48045 () Option!139)

(assert (=> d!16937 (= (getValueByKey!133 lt!32609 (_1!1072 lt!32542)) e!48045)))

(declare-fun b!73460 () Bool)

(assert (=> b!73460 (= e!48045 e!48046)))

(declare-fun c!10936 () Bool)

(assert (=> b!73460 (= c!10936 (and ((_ is Cons!1474) lt!32609) (not (= (_1!1072 (h!2061 lt!32609)) (_1!1072 lt!32542)))))))

(declare-fun b!73459 () Bool)

(assert (=> b!73459 (= e!48045 (Some!138 (_2!1072 (h!2061 lt!32609))))))

(declare-fun b!73462 () Bool)

(assert (=> b!73462 (= e!48046 None!137)))

(assert (= (and d!16937 c!10935) b!73459))

(assert (= (and d!16937 (not c!10935)) b!73460))

(assert (= (and b!73460 c!10936) b!73461))

(assert (= (and b!73460 (not c!10936)) b!73462))

(declare-fun m!71909 () Bool)

(assert (=> b!73461 m!71909))

(assert (=> d!16817 d!16937))

(declare-fun d!16939 () Bool)

(assert (=> d!16939 (= (getValueByKey!133 lt!32609 (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542)))))

(declare-fun lt!32930 () Unit!2078)

(assert (=> d!16939 (= lt!32930 (choose!412 lt!32609 (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun e!48047 () Bool)

(assert (=> d!16939 e!48047))

(declare-fun res!38938 () Bool)

(assert (=> d!16939 (=> (not res!38938) (not e!48047))))

(assert (=> d!16939 (= res!38938 (isStrictlySorted!292 lt!32609))))

(assert (=> d!16939 (= (lemmaContainsTupThenGetReturnValue!50 lt!32609 (_1!1072 lt!32542) (_2!1072 lt!32542)) lt!32930)))

(declare-fun b!73463 () Bool)

(declare-fun res!38939 () Bool)

(assert (=> b!73463 (=> (not res!38939) (not e!48047))))

(assert (=> b!73463 (= res!38939 (containsKey!137 lt!32609 (_1!1072 lt!32542)))))

(declare-fun b!73464 () Bool)

(assert (=> b!73464 (= e!48047 (contains!724 lt!32609 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(assert (= (and d!16939 res!38938) b!73463))

(assert (= (and b!73463 res!38939) b!73464))

(assert (=> d!16939 m!71357))

(declare-fun m!71911 () Bool)

(assert (=> d!16939 m!71911))

(declare-fun m!71913 () Bool)

(assert (=> d!16939 m!71913))

(declare-fun m!71915 () Bool)

(assert (=> b!73463 m!71915))

(declare-fun m!71917 () Bool)

(assert (=> b!73464 m!71917))

(assert (=> d!16817 d!16939))

(declare-fun b!73465 () Bool)

(declare-fun e!48050 () List!1478)

(declare-fun call!6478 () List!1478)

(assert (=> b!73465 (= e!48050 call!6478)))

(declare-fun b!73466 () Bool)

(declare-fun e!48052 () List!1478)

(declare-fun call!6479 () List!1478)

(assert (=> b!73466 (= e!48052 call!6479)))

(declare-fun b!73467 () Bool)

(declare-fun e!48048 () List!1478)

(declare-fun call!6480 () List!1478)

(assert (=> b!73467 (= e!48048 call!6480)))

(declare-fun c!10940 () Bool)

(declare-fun b!73468 () Bool)

(declare-fun c!10938 () Bool)

(declare-fun e!48049 () List!1478)

(assert (=> b!73468 (= e!48049 (ite c!10940 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))) (ite c!10938 (Cons!1474 (h!2061 (toList!725 (+!94 lt!32540 lt!32538))) (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) Nil!1475)))))

(declare-fun b!73469 () Bool)

(assert (=> b!73469 (= e!48048 e!48050)))

(assert (=> b!73469 (= c!10940 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 lt!32538))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32538)))) (_1!1072 lt!32542))))))

(declare-fun bm!6475 () Bool)

(assert (=> bm!6475 (= call!6479 call!6478)))

(declare-fun c!10937 () Bool)

(declare-fun bm!6476 () Bool)

(assert (=> bm!6476 (= call!6480 ($colon$colon!66 e!48049 (ite c!10937 (h!2061 (toList!725 (+!94 lt!32540 lt!32538))) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542)))))))

(declare-fun c!10939 () Bool)

(assert (=> bm!6476 (= c!10939 c!10937)))

(declare-fun b!73470 () Bool)

(declare-fun res!38941 () Bool)

(declare-fun e!48051 () Bool)

(assert (=> b!73470 (=> (not res!38941) (not e!48051))))

(declare-fun lt!32931 () List!1478)

(assert (=> b!73470 (= res!38941 (containsKey!137 lt!32931 (_1!1072 lt!32542)))))

(declare-fun bm!6477 () Bool)

(assert (=> bm!6477 (= call!6478 call!6480)))

(declare-fun b!73471 () Bool)

(assert (=> b!73471 (= e!48051 (contains!724 lt!32931 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!73472 () Bool)

(assert (=> b!73472 (= e!48052 call!6479)))

(declare-fun b!73473 () Bool)

(assert (=> b!73473 (= e!48049 (insertStrictlySorted!53 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))) (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun b!73474 () Bool)

(assert (=> b!73474 (= c!10938 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 lt!32538))) (bvsgt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32538)))) (_1!1072 lt!32542))))))

(assert (=> b!73474 (= e!48050 e!48052)))

(declare-fun d!16941 () Bool)

(assert (=> d!16941 e!48051))

(declare-fun res!38940 () Bool)

(assert (=> d!16941 (=> (not res!38940) (not e!48051))))

(assert (=> d!16941 (= res!38940 (isStrictlySorted!292 lt!32931))))

(assert (=> d!16941 (= lt!32931 e!48048)))

(assert (=> d!16941 (= c!10937 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 lt!32538))) (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32538)))) (_1!1072 lt!32542))))))

(assert (=> d!16941 (isStrictlySorted!292 (toList!725 (+!94 lt!32540 lt!32538)))))

(assert (=> d!16941 (= (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 lt!32538)) (_1!1072 lt!32542) (_2!1072 lt!32542)) lt!32931)))

(assert (= (and d!16941 c!10937) b!73467))

(assert (= (and d!16941 (not c!10937)) b!73469))

(assert (= (and b!73469 c!10940) b!73465))

(assert (= (and b!73469 (not c!10940)) b!73474))

(assert (= (and b!73474 c!10938) b!73472))

(assert (= (and b!73474 (not c!10938)) b!73466))

(assert (= (or b!73472 b!73466) bm!6475))

(assert (= (or b!73465 bm!6475) bm!6477))

(assert (= (or b!73467 bm!6477) bm!6476))

(assert (= (and bm!6476 c!10939) b!73473))

(assert (= (and bm!6476 (not c!10939)) b!73468))

(assert (= (and d!16941 res!38940) b!73470))

(assert (= (and b!73470 res!38941) b!73471))

(declare-fun m!71919 () Bool)

(assert (=> bm!6476 m!71919))

(declare-fun m!71921 () Bool)

(assert (=> b!73473 m!71921))

(declare-fun m!71923 () Bool)

(assert (=> b!73471 m!71923))

(declare-fun m!71925 () Bool)

(assert (=> d!16941 m!71925))

(declare-fun m!71927 () Bool)

(assert (=> d!16941 m!71927))

(declare-fun m!71929 () Bool)

(assert (=> b!73470 m!71929))

(assert (=> d!16817 d!16941))

(declare-fun d!16943 () Bool)

(declare-fun lt!32932 () Bool)

(assert (=> d!16943 (= lt!32932 (select (content!77 (toList!725 lt!32610)) lt!32542))))

(declare-fun e!48053 () Bool)

(assert (=> d!16943 (= lt!32932 e!48053)))

(declare-fun res!38942 () Bool)

(assert (=> d!16943 (=> (not res!38942) (not e!48053))))

(assert (=> d!16943 (= res!38942 ((_ is Cons!1474) (toList!725 lt!32610)))))

(assert (=> d!16943 (= (contains!724 (toList!725 lt!32610) lt!32542) lt!32932)))

(declare-fun b!73475 () Bool)

(declare-fun e!48054 () Bool)

(assert (=> b!73475 (= e!48053 e!48054)))

(declare-fun res!38943 () Bool)

(assert (=> b!73475 (=> res!38943 e!48054)))

(assert (=> b!73475 (= res!38943 (= (h!2061 (toList!725 lt!32610)) lt!32542))))

(declare-fun b!73476 () Bool)

(assert (=> b!73476 (= e!48054 (contains!724 (t!5035 (toList!725 lt!32610)) lt!32542))))

(assert (= (and d!16943 res!38942) b!73475))

(assert (= (and b!73475 (not res!38943)) b!73476))

(declare-fun m!71931 () Bool)

(assert (=> d!16943 m!71931))

(declare-fun m!71933 () Bool)

(assert (=> d!16943 m!71933))

(declare-fun m!71935 () Bool)

(assert (=> b!73476 m!71935))

(assert (=> b!72996 d!16943))

(declare-fun d!16945 () Bool)

(declare-fun e!48056 () Bool)

(assert (=> d!16945 e!48056))

(declare-fun res!38944 () Bool)

(assert (=> d!16945 (=> res!38944 e!48056)))

(declare-fun lt!32936 () Bool)

(assert (=> d!16945 (= res!38944 (not lt!32936))))

(declare-fun lt!32935 () Bool)

(assert (=> d!16945 (= lt!32936 lt!32935)))

(declare-fun lt!32934 () Unit!2078)

(declare-fun e!48055 () Unit!2078)

(assert (=> d!16945 (= lt!32934 e!48055)))

(declare-fun c!10941 () Bool)

(assert (=> d!16945 (= c!10941 lt!32935)))

(assert (=> d!16945 (= lt!32935 (containsKey!137 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16945 (= (contains!723 call!6430 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!32936)))

(declare-fun b!73477 () Bool)

(declare-fun lt!32933 () Unit!2078)

(assert (=> b!73477 (= e!48055 lt!32933)))

(assert (=> b!73477 (= lt!32933 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!73477 (isDefined!86 (getValueByKey!133 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73478 () Bool)

(declare-fun Unit!2095 () Unit!2078)

(assert (=> b!73478 (= e!48055 Unit!2095)))

(declare-fun b!73479 () Bool)

(assert (=> b!73479 (= e!48056 (isDefined!86 (getValueByKey!133 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (= (and d!16945 c!10941) b!73477))

(assert (= (and d!16945 (not c!10941)) b!73478))

(assert (= (and d!16945 (not res!38944)) b!73479))

(assert (=> d!16945 m!71227))

(declare-fun m!71937 () Bool)

(assert (=> d!16945 m!71937))

(assert (=> b!73477 m!71227))

(declare-fun m!71939 () Bool)

(assert (=> b!73477 m!71939))

(assert (=> b!73477 m!71227))

(declare-fun m!71941 () Bool)

(assert (=> b!73477 m!71941))

(assert (=> b!73477 m!71941))

(declare-fun m!71943 () Bool)

(assert (=> b!73477 m!71943))

(assert (=> b!73479 m!71227))

(assert (=> b!73479 m!71941))

(assert (=> b!73479 m!71941))

(assert (=> b!73479 m!71943))

(assert (=> b!73226 d!16945))

(declare-fun b!73480 () Bool)

(declare-fun e!48060 () Bool)

(declare-fun e!48062 () Bool)

(assert (=> b!73480 (= e!48060 e!48062)))

(declare-fun res!38947 () Bool)

(declare-fun call!6486 () Bool)

(assert (=> b!73480 (= res!38947 call!6486)))

(assert (=> b!73480 (=> (not res!38947) (not e!48062))))

(declare-fun b!73481 () Bool)

(declare-fun e!48063 () Bool)

(assert (=> b!73481 (= e!48063 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73482 () Bool)

(declare-fun c!10947 () Bool)

(assert (=> b!73482 (= c!10947 (and (not (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48067 () ListLongMap!1419)

(declare-fun e!48069 () ListLongMap!1419)

(assert (=> b!73482 (= e!48067 e!48069)))

(declare-fun bm!6478 () Bool)

(declare-fun call!6481 () ListLongMap!1419)

(declare-fun call!6484 () ListLongMap!1419)

(assert (=> bm!6478 (= call!6481 call!6484)))

(declare-fun b!73483 () Bool)

(declare-fun res!38948 () Bool)

(declare-fun e!48057 () Bool)

(assert (=> b!73483 (=> (not res!38948) (not e!48057))))

(declare-fun e!48058 () Bool)

(assert (=> b!73483 (= res!38948 e!48058)))

(declare-fun res!38953 () Bool)

(assert (=> b!73483 (=> res!38953 e!48058)))

(assert (=> b!73483 (= res!38953 (not e!48063))))

(declare-fun res!38951 () Bool)

(assert (=> b!73483 (=> (not res!38951) (not e!48063))))

(assert (=> b!73483 (= res!38951 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6479 () Bool)

(declare-fun call!6482 () Bool)

(declare-fun lt!32947 () ListLongMap!1419)

(assert (=> bm!6479 (= call!6482 (contains!723 lt!32947 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73484 () Bool)

(declare-fun res!38945 () Bool)

(assert (=> b!73484 (=> (not res!38945) (not e!48057))))

(assert (=> b!73484 (= res!38945 e!48060)))

(declare-fun c!10945 () Bool)

(assert (=> b!73484 (= c!10945 (not (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6480 () Bool)

(declare-fun call!6487 () ListLongMap!1419)

(declare-fun call!6485 () ListLongMap!1419)

(assert (=> bm!6480 (= call!6487 call!6485)))

(declare-fun b!73485 () Bool)

(declare-fun e!48059 () Unit!2078)

(declare-fun Unit!2096 () Unit!2078)

(assert (=> b!73485 (= e!48059 Unit!2096)))

(declare-fun b!73486 () Bool)

(declare-fun e!48064 () Bool)

(assert (=> b!73486 (= e!48057 e!48064)))

(declare-fun c!10943 () Bool)

(assert (=> b!73486 (= c!10943 (not (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73487 () Bool)

(assert (=> b!73487 (= e!48069 call!6487)))

(declare-fun call!6483 () ListLongMap!1419)

(declare-fun bm!6481 () Bool)

(assert (=> bm!6481 (= call!6483 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73488 () Bool)

(assert (=> b!73488 (= e!48064 (not call!6482))))

(declare-fun b!73489 () Bool)

(declare-fun e!48061 () ListLongMap!1419)

(assert (=> b!73489 (= e!48061 (+!94 call!6485 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!73490 () Bool)

(declare-fun lt!32943 () Unit!2078)

(assert (=> b!73490 (= e!48059 lt!32943)))

(declare-fun lt!32937 () ListLongMap!1419)

(assert (=> b!73490 (= lt!32937 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32956 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32956 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32939 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32939 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32952 () Unit!2078)

(assert (=> b!73490 (= lt!32952 (addStillContains!51 lt!32937 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) lt!32939))))

(assert (=> b!73490 (contains!723 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!32939)))

(declare-fun lt!32942 () Unit!2078)

(assert (=> b!73490 (= lt!32942 lt!32952)))

(declare-fun lt!32940 () ListLongMap!1419)

(assert (=> b!73490 (= lt!32940 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32945 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32945 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32944 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32944 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32938 () Unit!2078)

(assert (=> b!73490 (= lt!32938 (addApplyDifferent!51 lt!32940 lt!32945 (minValue!2115 newMap!16) lt!32944))))

(assert (=> b!73490 (= (apply!75 (+!94 lt!32940 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))) lt!32944) (apply!75 lt!32940 lt!32944))))

(declare-fun lt!32948 () Unit!2078)

(assert (=> b!73490 (= lt!32948 lt!32938)))

(declare-fun lt!32951 () ListLongMap!1419)

(assert (=> b!73490 (= lt!32951 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32949 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32949 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32950 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32950 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32957 () Unit!2078)

(assert (=> b!73490 (= lt!32957 (addApplyDifferent!51 lt!32951 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) lt!32950))))

(assert (=> b!73490 (= (apply!75 (+!94 lt!32951 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!32950) (apply!75 lt!32951 lt!32950))))

(declare-fun lt!32946 () Unit!2078)

(assert (=> b!73490 (= lt!32946 lt!32957)))

(declare-fun lt!32954 () ListLongMap!1419)

(assert (=> b!73490 (= lt!32954 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32955 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32955 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32953 () (_ BitVec 64))

(assert (=> b!73490 (= lt!32953 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73490 (= lt!32943 (addApplyDifferent!51 lt!32954 lt!32955 (minValue!2115 newMap!16) lt!32953))))

(assert (=> b!73490 (= (apply!75 (+!94 lt!32954 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))) lt!32953) (apply!75 lt!32954 lt!32953))))

(declare-fun b!73491 () Bool)

(declare-fun e!48065 () Bool)

(assert (=> b!73491 (= e!48065 (= (apply!75 lt!32947 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!73492 () Bool)

(assert (=> b!73492 (= e!48062 (= (apply!75 lt!32947 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))

(declare-fun b!73493 () Bool)

(assert (=> b!73493 (= e!48069 call!6481)))

(declare-fun bm!6482 () Bool)

(declare-fun c!10942 () Bool)

(declare-fun c!10946 () Bool)

(assert (=> bm!6482 (= call!6485 (+!94 (ite c!10942 call!6483 (ite c!10946 call!6484 call!6481)) (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!73494 () Bool)

(assert (=> b!73494 (= e!48061 e!48067)))

(assert (=> b!73494 (= c!10946 (and (not (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73495 () Bool)

(declare-fun e!48068 () Bool)

(assert (=> b!73495 (= e!48068 (= (apply!75 lt!32947 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73495 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (ite c!10872 (_values!2196 newMap!16) lt!32777))))))

(assert (=> b!73495 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73496 () Bool)

(assert (=> b!73496 (= e!48064 e!48065)))

(declare-fun res!38952 () Bool)

(assert (=> b!73496 (= res!38952 call!6482)))

(assert (=> b!73496 (=> (not res!38952) (not e!48065))))

(declare-fun d!16947 () Bool)

(assert (=> d!16947 e!48057))

(declare-fun res!38949 () Bool)

(assert (=> d!16947 (=> (not res!38949) (not e!48057))))

(assert (=> d!16947 (= res!38949 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!32958 () ListLongMap!1419)

(assert (=> d!16947 (= lt!32947 lt!32958)))

(declare-fun lt!32941 () Unit!2078)

(assert (=> d!16947 (= lt!32941 e!48059)))

(declare-fun c!10944 () Bool)

(declare-fun e!48066 () Bool)

(assert (=> d!16947 (= c!10944 e!48066)))

(declare-fun res!38946 () Bool)

(assert (=> d!16947 (=> (not res!38946) (not e!48066))))

(assert (=> d!16947 (= res!38946 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16947 (= lt!32958 e!48061)))

(assert (=> d!16947 (= c!10942 (and (not (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16947 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16947 (= (getCurrentListMap!422 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!32947)))

(declare-fun b!73497 () Bool)

(assert (=> b!73497 (= e!48060 (not call!6486))))

(declare-fun b!73498 () Bool)

(assert (=> b!73498 (= e!48058 e!48068)))

(declare-fun res!38950 () Bool)

(assert (=> b!73498 (=> (not res!38950) (not e!48068))))

(assert (=> b!73498 (= res!38950 (contains!723 lt!32947 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73498 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6483 () Bool)

(assert (=> bm!6483 (= call!6486 (contains!723 lt!32947 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6484 () Bool)

(assert (=> bm!6484 (= call!6484 call!6483)))

(declare-fun b!73499 () Bool)

(assert (=> b!73499 (= e!48067 call!6487)))

(declare-fun b!73500 () Bool)

(assert (=> b!73500 (= e!48066 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16947 c!10942) b!73489))

(assert (= (and d!16947 (not c!10942)) b!73494))

(assert (= (and b!73494 c!10946) b!73499))

(assert (= (and b!73494 (not c!10946)) b!73482))

(assert (= (and b!73482 c!10947) b!73487))

(assert (= (and b!73482 (not c!10947)) b!73493))

(assert (= (or b!73487 b!73493) bm!6478))

(assert (= (or b!73499 bm!6478) bm!6484))

(assert (= (or b!73499 b!73487) bm!6480))

(assert (= (or b!73489 bm!6484) bm!6481))

(assert (= (or b!73489 bm!6480) bm!6482))

(assert (= (and d!16947 res!38946) b!73500))

(assert (= (and d!16947 c!10944) b!73490))

(assert (= (and d!16947 (not c!10944)) b!73485))

(assert (= (and d!16947 res!38949) b!73483))

(assert (= (and b!73483 res!38951) b!73481))

(assert (= (and b!73483 (not res!38953)) b!73498))

(assert (= (and b!73498 res!38950) b!73495))

(assert (= (and b!73483 res!38948) b!73484))

(assert (= (and b!73484 c!10945) b!73480))

(assert (= (and b!73484 (not c!10945)) b!73497))

(assert (= (and b!73480 res!38947) b!73492))

(assert (= (or b!73480 b!73497) bm!6483))

(assert (= (and b!73484 res!38945) b!73486))

(assert (= (and b!73486 c!10943) b!73496))

(assert (= (and b!73486 (not c!10943)) b!73488))

(assert (= (and b!73496 res!38952) b!73491))

(assert (= (or b!73496 b!73488) bm!6479))

(declare-fun b_lambda!3297 () Bool)

(assert (=> (not b_lambda!3297) (not b!73495)))

(assert (=> b!73495 t!5042))

(declare-fun b_and!4511 () Bool)

(assert (= b_and!4507 (and (=> t!5042 result!2693) b_and!4511)))

(assert (=> b!73495 t!5044))

(declare-fun b_and!4513 () Bool)

(assert (= b_and!4509 (and (=> t!5044 result!2695) b_and!4513)))

(assert (=> b!73495 m!71563))

(declare-fun m!71945 () Bool)

(assert (=> b!73495 m!71945))

(assert (=> b!73495 m!71717))

(declare-fun m!71947 () Bool)

(assert (=> b!73495 m!71947))

(assert (=> b!73495 m!71563))

(declare-fun m!71949 () Bool)

(assert (=> b!73495 m!71949))

(assert (=> b!73495 m!71717))

(assert (=> b!73495 m!71945))

(declare-fun m!71951 () Bool)

(assert (=> bm!6481 m!71951))

(assert (=> d!16947 m!71705))

(declare-fun m!71953 () Bool)

(assert (=> bm!6479 m!71953))

(declare-fun m!71955 () Bool)

(assert (=> bm!6483 m!71955))

(declare-fun m!71957 () Bool)

(assert (=> bm!6482 m!71957))

(declare-fun m!71959 () Bool)

(assert (=> b!73492 m!71959))

(assert (=> b!73481 m!71563))

(assert (=> b!73481 m!71563))

(assert (=> b!73481 m!71567))

(assert (=> b!73500 m!71563))

(assert (=> b!73500 m!71563))

(assert (=> b!73500 m!71567))

(declare-fun m!71961 () Bool)

(assert (=> b!73489 m!71961))

(declare-fun m!71963 () Bool)

(assert (=> b!73491 m!71963))

(declare-fun m!71965 () Bool)

(assert (=> b!73490 m!71965))

(declare-fun m!71967 () Bool)

(assert (=> b!73490 m!71967))

(assert (=> b!73490 m!71951))

(declare-fun m!71969 () Bool)

(assert (=> b!73490 m!71969))

(assert (=> b!73490 m!71563))

(declare-fun m!71971 () Bool)

(assert (=> b!73490 m!71971))

(declare-fun m!71973 () Bool)

(assert (=> b!73490 m!71973))

(declare-fun m!71975 () Bool)

(assert (=> b!73490 m!71975))

(declare-fun m!71977 () Bool)

(assert (=> b!73490 m!71977))

(declare-fun m!71979 () Bool)

(assert (=> b!73490 m!71979))

(declare-fun m!71981 () Bool)

(assert (=> b!73490 m!71981))

(declare-fun m!71983 () Bool)

(assert (=> b!73490 m!71983))

(declare-fun m!71985 () Bool)

(assert (=> b!73490 m!71985))

(assert (=> b!73490 m!71983))

(declare-fun m!71987 () Bool)

(assert (=> b!73490 m!71987))

(assert (=> b!73490 m!71965))

(declare-fun m!71989 () Bool)

(assert (=> b!73490 m!71989))

(assert (=> b!73490 m!71977))

(assert (=> b!73490 m!71967))

(declare-fun m!71991 () Bool)

(assert (=> b!73490 m!71991))

(declare-fun m!71993 () Bool)

(assert (=> b!73490 m!71993))

(assert (=> b!73498 m!71563))

(assert (=> b!73498 m!71563))

(declare-fun m!71995 () Bool)

(assert (=> b!73498 m!71995))

(assert (=> bm!6443 d!16947))

(declare-fun b!73501 () Bool)

(declare-fun e!48071 () Bool)

(assert (=> b!73501 (= e!48071 (contains!725 (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73502 () Bool)

(declare-fun e!48070 () Bool)

(declare-fun call!6488 () Bool)

(assert (=> b!73502 (= e!48070 call!6488)))

(declare-fun b!73503 () Bool)

(declare-fun e!48072 () Bool)

(declare-fun e!48073 () Bool)

(assert (=> b!73503 (= e!48072 e!48073)))

(declare-fun res!38956 () Bool)

(assert (=> b!73503 (=> (not res!38956) (not e!48073))))

(assert (=> b!73503 (= res!38956 (not e!48071))))

(declare-fun res!38955 () Bool)

(assert (=> b!73503 (=> (not res!38955) (not e!48071))))

(assert (=> b!73503 (= res!38955 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73504 () Bool)

(assert (=> b!73504 (= e!48073 e!48070)))

(declare-fun c!10948 () Bool)

(assert (=> b!73504 (= c!10948 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73505 () Bool)

(assert (=> b!73505 (= e!48070 call!6488)))

(declare-fun d!16949 () Bool)

(declare-fun res!38954 () Bool)

(assert (=> d!16949 (=> res!38954 e!48072)))

(assert (=> d!16949 (= res!38954 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!16949 (= (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) e!48072)))

(declare-fun bm!6485 () Bool)

(assert (=> bm!6485 (= call!6488 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10948 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476))))))

(assert (= (and d!16949 (not res!38954)) b!73503))

(assert (= (and b!73503 res!38955) b!73501))

(assert (= (and b!73503 res!38956) b!73504))

(assert (= (and b!73504 c!10948) b!73502))

(assert (= (and b!73504 (not c!10948)) b!73505))

(assert (= (or b!73502 b!73505) bm!6485))

(declare-fun m!71997 () Bool)

(assert (=> b!73501 m!71997))

(assert (=> b!73501 m!71997))

(declare-fun m!71999 () Bool)

(assert (=> b!73501 m!71999))

(assert (=> b!73503 m!71997))

(assert (=> b!73503 m!71997))

(declare-fun m!72001 () Bool)

(assert (=> b!73503 m!72001))

(assert (=> b!73504 m!71997))

(assert (=> b!73504 m!71997))

(assert (=> b!73504 m!72001))

(assert (=> bm!6485 m!71997))

(declare-fun m!72003 () Bool)

(assert (=> bm!6485 m!72003))

(assert (=> bm!6375 d!16949))

(declare-fun d!16951 () Bool)

(assert (=> d!16951 (= (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73106 d!16951))

(declare-fun d!16953 () Bool)

(declare-fun res!38957 () Bool)

(declare-fun e!48074 () Bool)

(assert (=> d!16953 (=> res!38957 e!48074)))

(assert (=> d!16953 (= res!38957 (= (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16953 (= (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48074)))

(declare-fun b!73506 () Bool)

(declare-fun e!48075 () Bool)

(assert (=> b!73506 (= e!48074 e!48075)))

(declare-fun res!38958 () Bool)

(assert (=> b!73506 (=> (not res!38958) (not e!48075))))

(assert (=> b!73506 (= res!38958 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73507 () Bool)

(assert (=> b!73507 (= e!48075 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16953 (not res!38957)) b!73506))

(assert (= (and b!73506 res!38958) b!73507))

(assert (=> d!16953 m!71563))

(assert (=> b!73507 m!71227))

(declare-fun m!72005 () Bool)

(assert (=> b!73507 m!72005))

(assert (=> bm!6441 d!16953))

(declare-fun d!16955 () Bool)

(assert (=> d!16955 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32961 () Unit!2078)

(declare-fun choose!415 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2078)

(assert (=> d!16955 (= lt!32961 (choose!415 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32775 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32533 (defaultEntry!2213 newMap!16)))))

(assert (=> d!16955 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16955 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32775 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32533 (defaultEntry!2213 newMap!16)) lt!32961)))

(declare-fun bs!3150 () Bool)

(assert (= bs!3150 d!16955))

(declare-fun m!72007 () Bool)

(assert (=> bs!3150 m!72007))

(assert (=> bs!3150 m!71415))

(assert (=> bs!3150 m!71705))

(declare-fun m!72009 () Bool)

(assert (=> bs!3150 m!72009))

(assert (=> bs!3150 m!71415))

(declare-fun m!72011 () Bool)

(assert (=> bs!3150 m!72011))

(assert (=> b!73208 d!16955))

(declare-fun d!16957 () Bool)

(assert (=> d!16957 (= (apply!75 lt!32681 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3151 () Bool)

(assert (= bs!3151 d!16957))

(declare-fun m!72013 () Bool)

(assert (=> bs!3151 m!72013))

(assert (=> bs!3151 m!72013))

(declare-fun m!72015 () Bool)

(assert (=> bs!3151 m!72015))

(assert (=> b!73056 d!16957))

(declare-fun b!73542 () Bool)

(declare-fun c!10959 () Bool)

(declare-fun lt!33028 () SeekEntryResult!236)

(assert (=> b!73542 (= c!10959 ((_ is MissingVacant!236) lt!33028))))

(declare-fun e!48092 () Bool)

(declare-fun e!48099 () Bool)

(assert (=> b!73542 (= e!48092 e!48099)))

(declare-fun b!73543 () Bool)

(declare-fun res!38979 () Bool)

(assert (=> b!73543 (= res!38979 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!33028)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48095 () Bool)

(assert (=> b!73543 (=> (not res!38979) (not e!48095))))

(declare-fun b!73544 () Bool)

(declare-fun call!6500 () Bool)

(assert (=> b!73544 (= e!48095 (not call!6500))))

(declare-fun b!73545 () Bool)

(declare-fun e!48097 () Bool)

(assert (=> b!73545 (= e!48097 (not call!6500))))

(declare-fun b!73546 () Bool)

(declare-fun e!48094 () Unit!2078)

(declare-fun Unit!2097 () Unit!2078)

(assert (=> b!73546 (= e!48094 Unit!2097)))

(declare-fun lt!33038 () Unit!2078)

(assert (=> b!73546 (= lt!33038 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33023 () SeekEntryResult!236)

(declare-fun call!6499 () SeekEntryResult!236)

(assert (=> b!73546 (= lt!33023 call!6499)))

(declare-fun res!38980 () Bool)

(assert (=> b!73546 (= res!38980 ((_ is Found!236) lt!33023))))

(declare-fun e!48096 () Bool)

(assert (=> b!73546 (=> (not res!38980) (not e!48096))))

(assert (=> b!73546 e!48096))

(declare-fun lt!33039 () Unit!2078)

(assert (=> b!73546 (= lt!33039 lt!33038)))

(assert (=> b!73546 false))

(declare-fun b!73547 () Bool)

(assert (=> b!73547 (= e!48099 ((_ is Undefined!236) lt!33028))))

(declare-fun b!73548 () Bool)

(declare-fun res!38985 () Bool)

(declare-fun call!6497 () Bool)

(assert (=> b!73548 (= res!38985 call!6497)))

(assert (=> b!73548 (=> (not res!38985) (not e!48096))))

(declare-fun b!73549 () Bool)

(declare-fun e!48093 () Unit!2078)

(declare-fun Unit!2098 () Unit!2078)

(assert (=> b!73549 (= e!48093 Unit!2098)))

(declare-fun lt!33029 () Unit!2078)

(declare-fun lemmaArrayContainsKeyThenInListMap!13 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2078)

(assert (=> b!73549 (= lt!33029 (lemmaArrayContainsKeyThenInListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> b!73549 (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))

(declare-fun lt!33043 () Unit!2078)

(assert (=> b!73549 (= lt!33043 lt!33029)))

(assert (=> b!73549 false))

(declare-fun b!73550 () Bool)

(assert (=> b!73550 (= e!48099 e!48095)))

(declare-fun res!38982 () Bool)

(declare-fun call!6498 () Bool)

(assert (=> b!73550 (= res!38982 call!6498)))

(assert (=> b!73550 (=> (not res!38982) (not e!48095))))

(declare-fun b!73551 () Bool)

(declare-fun res!38981 () Bool)

(declare-fun e!48098 () Bool)

(assert (=> b!73551 (=> (not res!38981) (not e!48098))))

(declare-fun lt!33051 () tuple2!2124)

(assert (=> b!73551 (= res!38981 (contains!723 (map!1151 (_2!1073 lt!33051)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun bm!6494 () Bool)

(assert (=> bm!6494 (= call!6499 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun d!16959 () Bool)

(assert (=> d!16959 e!48098))

(declare-fun res!38977 () Bool)

(assert (=> d!16959 (=> (not res!38977) (not e!48098))))

(assert (=> d!16959 (= res!38977 (_1!1073 lt!33051))))

(assert (=> d!16959 (= lt!33051 (tuple2!2125 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd (_size!397 newMap!16) #b00000000000000000000000000000001) (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (_vacant!397 newMap!16))))))

(declare-fun lt!33030 () Unit!2078)

(declare-fun lt!33036 () Unit!2078)

(assert (=> d!16959 (= lt!33030 lt!33036)))

(declare-fun lt!33050 () array!3895)

(declare-fun lt!33042 () array!3897)

(assert (=> d!16959 (contains!723 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))

(assert (=> d!16959 (= lt!33036 (lemmaValidKeyInArrayIsInListMap!85 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16959 (= lt!33042 (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))))

(assert (=> d!16959 (= lt!33050 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun lt!33044 () Unit!2078)

(declare-fun lt!33048 () Unit!2078)

(assert (=> d!16959 (= lt!33044 lt!33048)))

(declare-fun lt!33034 () array!3895)

(assert (=> d!16959 (= (arrayCountValidKeys!0 lt!33034 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3895 (_ BitVec 32)) Unit!2078)

(assert (=> d!16959 (= lt!33048 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!33034 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))

(assert (=> d!16959 (= lt!33034 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun lt!33035 () Unit!2078)

(declare-fun lt!33026 () Unit!2078)

(assert (=> d!16959 (= lt!33035 lt!33026)))

(declare-fun lt!33024 () array!3895)

(assert (=> d!16959 (arrayContainsKey!0 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3895 (_ BitVec 64) (_ BitVec 32)) Unit!2078)

(assert (=> d!16959 (= lt!33026 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))

(assert (=> d!16959 (= lt!33024 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun lt!33032 () Unit!2078)

(declare-fun lt!33041 () Unit!2078)

(assert (=> d!16959 (= lt!33032 lt!33041)))

(assert (=> d!16959 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (getCurrentListMap!422 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!13 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2078)

(assert (=> d!16959 (= lt!33041 (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33033 () Unit!2078)

(declare-fun lt!33025 () Unit!2078)

(assert (=> d!16959 (= lt!33033 lt!33025)))

(assert (=> d!16959 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (mask!6180 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3895 (_ BitVec 32) (_ BitVec 32)) Unit!2078)

(assert (=> d!16959 (= lt!33025 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (mask!6180 newMap!16)))))

(declare-fun lt!33040 () Unit!2078)

(declare-fun lt!33046 () Unit!2078)

(assert (=> d!16959 (= lt!33040 lt!33046)))

(assert (=> d!16959 (= (arrayCountValidKeys!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3895 (_ BitVec 32) (_ BitVec 64)) Unit!2078)

(assert (=> d!16959 (= lt!33046 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3865 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun lt!33027 () Unit!2078)

(declare-fun lt!33022 () Unit!2078)

(assert (=> d!16959 (= lt!33027 lt!33022)))

(declare-fun lt!33049 () List!1479)

(declare-fun lt!33047 () (_ BitVec 32))

(assert (=> d!16959 (arrayNoDuplicates!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) lt!33047 lt!33049)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3895 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1479) Unit!2078)

(assert (=> d!16959 (= lt!33022 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) lt!33047 lt!33049))))

(assert (=> d!16959 (= lt!33049 Nil!1476)))

(assert (=> d!16959 (= lt!33047 #b00000000000000000000000000000000)))

(declare-fun lt!33037 () Unit!2078)

(assert (=> d!16959 (= lt!33037 e!48093)))

(declare-fun c!10958 () Bool)

(assert (=> d!16959 (= c!10958 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!33045 () Unit!2078)

(assert (=> d!16959 (= lt!33045 e!48094)))

(declare-fun c!10960 () Bool)

(assert (=> d!16959 (= c!10960 (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!16959 (valid!289 newMap!16)))

(assert (=> d!16959 (= (updateHelperNewKey!24 newMap!16 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))) lt!33051)))

(declare-fun b!73552 () Bool)

(declare-fun lt!33031 () Unit!2078)

(assert (=> b!73552 (= e!48094 lt!33031)))

(assert (=> b!73552 (= lt!33031 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(assert (=> b!73552 (= lt!33028 call!6499)))

(declare-fun c!10957 () Bool)

(assert (=> b!73552 (= c!10957 ((_ is MissingZero!236) lt!33028))))

(assert (=> b!73552 e!48092))

(declare-fun b!73553 () Bool)

(assert (=> b!73553 (= e!48098 (= (map!1151 (_2!1073 lt!33051)) (+!94 (map!1151 newMap!16) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!73554 () Bool)

(declare-fun res!38983 () Bool)

(assert (=> b!73554 (=> (not res!38983) (not e!48097))))

(assert (=> b!73554 (= res!38983 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!33028)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6495 () Bool)

(assert (=> bm!6495 (= call!6500 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73555 () Bool)

(declare-fun res!38978 () Bool)

(assert (=> b!73555 (=> (not res!38978) (not e!48097))))

(assert (=> b!73555 (= res!38978 call!6498)))

(assert (=> b!73555 (= e!48092 e!48097)))

(declare-fun bm!6496 () Bool)

(assert (=> bm!6496 (= call!6498 call!6497)))

(declare-fun b!73556 () Bool)

(declare-fun Unit!2099 () Unit!2078)

(assert (=> b!73556 (= e!48093 Unit!2099)))

(declare-fun bm!6497 () Bool)

(assert (=> bm!6497 (= call!6497 (inRange!0 (ite c!10960 (index!3076 lt!33023) (ite c!10957 (index!3075 lt!33028) (index!3078 lt!33028))) (mask!6180 newMap!16)))))

(declare-fun b!73557 () Bool)

(declare-fun res!38984 () Bool)

(assert (=> b!73557 (=> (not res!38984) (not e!48098))))

(assert (=> b!73557 (= res!38984 (valid!289 (_2!1073 lt!33051)))))

(declare-fun b!73558 () Bool)

(assert (=> b!73558 (= e!48096 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!33023)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!16959 c!10960) b!73546))

(assert (= (and d!16959 (not c!10960)) b!73552))

(assert (= (and b!73546 res!38980) b!73548))

(assert (= (and b!73548 res!38985) b!73558))

(assert (= (and b!73552 c!10957) b!73555))

(assert (= (and b!73552 (not c!10957)) b!73542))

(assert (= (and b!73555 res!38978) b!73554))

(assert (= (and b!73554 res!38983) b!73545))

(assert (= (and b!73542 c!10959) b!73550))

(assert (= (and b!73542 (not c!10959)) b!73547))

(assert (= (and b!73550 res!38982) b!73543))

(assert (= (and b!73543 res!38979) b!73544))

(assert (= (or b!73555 b!73550) bm!6496))

(assert (= (or b!73545 b!73544) bm!6495))

(assert (= (or b!73548 bm!6496) bm!6497))

(assert (= (or b!73546 b!73552) bm!6494))

(assert (= (and d!16959 c!10958) b!73549))

(assert (= (and d!16959 (not c!10958)) b!73556))

(assert (= (and d!16959 res!38977) b!73557))

(assert (= (and b!73557 res!38984) b!73551))

(assert (= (and b!73551 res!38981) b!73553))

(declare-fun m!72017 () Bool)

(assert (=> d!16959 m!72017))

(assert (=> d!16959 m!71227))

(declare-fun m!72019 () Bool)

(assert (=> d!16959 m!72019))

(assert (=> d!16959 m!71415))

(declare-fun m!72021 () Bool)

(assert (=> d!16959 m!72021))

(declare-fun m!72023 () Bool)

(assert (=> d!16959 m!72023))

(assert (=> d!16959 m!71465))

(declare-fun m!72025 () Bool)

(assert (=> d!16959 m!72025))

(assert (=> d!16959 m!71415))

(assert (=> d!16959 m!71227))

(declare-fun m!72027 () Bool)

(assert (=> d!16959 m!72027))

(assert (=> d!16959 m!71227))

(declare-fun m!72029 () Bool)

(assert (=> d!16959 m!72029))

(declare-fun m!72031 () Bool)

(assert (=> d!16959 m!72031))

(declare-fun m!72033 () Bool)

(assert (=> d!16959 m!72033))

(declare-fun m!72035 () Bool)

(assert (=> d!16959 m!72035))

(declare-fun m!72037 () Bool)

(assert (=> d!16959 m!72037))

(assert (=> d!16959 m!71227))

(assert (=> d!16959 m!71505))

(declare-fun m!72039 () Bool)

(assert (=> d!16959 m!72039))

(assert (=> d!16959 m!71249))

(assert (=> d!16959 m!71227))

(declare-fun m!72041 () Bool)

(assert (=> d!16959 m!72041))

(assert (=> d!16959 m!71415))

(assert (=> d!16959 m!71227))

(declare-fun m!72043 () Bool)

(assert (=> d!16959 m!72043))

(declare-fun m!72045 () Bool)

(assert (=> d!16959 m!72045))

(assert (=> d!16959 m!71227))

(declare-fun m!72047 () Bool)

(assert (=> d!16959 m!72047))

(declare-fun m!72049 () Bool)

(assert (=> d!16959 m!72049))

(assert (=> d!16959 m!71227))

(declare-fun m!72051 () Bool)

(assert (=> d!16959 m!72051))

(declare-fun m!72053 () Bool)

(assert (=> d!16959 m!72053))

(assert (=> d!16959 m!72049))

(assert (=> d!16959 m!72033))

(declare-fun m!72055 () Bool)

(assert (=> d!16959 m!72055))

(assert (=> bm!6494 m!71227))

(assert (=> bm!6494 m!71501))

(assert (=> b!73552 m!71227))

(assert (=> b!73552 m!71531))

(assert (=> b!73549 m!71227))

(declare-fun m!72057 () Bool)

(assert (=> b!73549 m!72057))

(assert (=> b!73549 m!71415))

(assert (=> b!73549 m!71415))

(assert (=> b!73549 m!71227))

(assert (=> b!73549 m!72027))

(declare-fun m!72059 () Bool)

(assert (=> b!73551 m!72059))

(assert (=> b!73551 m!72059))

(assert (=> b!73551 m!71227))

(declare-fun m!72061 () Bool)

(assert (=> b!73551 m!72061))

(declare-fun m!72063 () Bool)

(assert (=> b!73554 m!72063))

(declare-fun m!72065 () Bool)

(assert (=> b!73558 m!72065))

(declare-fun m!72067 () Bool)

(assert (=> b!73543 m!72067))

(declare-fun m!72069 () Bool)

(assert (=> b!73557 m!72069))

(declare-fun m!72071 () Bool)

(assert (=> bm!6497 m!72071))

(assert (=> b!73553 m!72059))

(assert (=> b!73553 m!71239))

(assert (=> b!73553 m!71239))

(declare-fun m!72073 () Bool)

(assert (=> b!73553 m!72073))

(assert (=> bm!6495 m!71227))

(assert (=> bm!6495 m!71505))

(assert (=> b!73546 m!71227))

(assert (=> b!73546 m!71539))

(assert (=> bm!6430 d!16959))

(declare-fun d!16961 () Bool)

(declare-fun e!48101 () Bool)

(assert (=> d!16961 e!48101))

(declare-fun res!38986 () Bool)

(assert (=> d!16961 (=> res!38986 e!48101)))

(declare-fun lt!33055 () Bool)

(assert (=> d!16961 (= res!38986 (not lt!33055))))

(declare-fun lt!33054 () Bool)

(assert (=> d!16961 (= lt!33055 lt!33054)))

(declare-fun lt!33053 () Unit!2078)

(declare-fun e!48100 () Unit!2078)

(assert (=> d!16961 (= lt!33053 e!48100)))

(declare-fun c!10961 () Bool)

(assert (=> d!16961 (= c!10961 lt!33054)))

(assert (=> d!16961 (= lt!33054 (containsKey!137 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16961 (= (contains!723 lt!32681 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33055)))

(declare-fun b!73559 () Bool)

(declare-fun lt!33052 () Unit!2078)

(assert (=> b!73559 (= e!48100 lt!33052)))

(assert (=> b!73559 (= lt!33052 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73559 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73560 () Bool)

(declare-fun Unit!2100 () Unit!2078)

(assert (=> b!73560 (= e!48100 Unit!2100)))

(declare-fun b!73561 () Bool)

(assert (=> b!73561 (= e!48101 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16961 c!10961) b!73559))

(assert (= (and d!16961 (not c!10961)) b!73560))

(assert (= (and d!16961 (not res!38986)) b!73561))

(declare-fun m!72075 () Bool)

(assert (=> d!16961 m!72075))

(declare-fun m!72077 () Bool)

(assert (=> b!73559 m!72077))

(declare-fun m!72079 () Bool)

(assert (=> b!73559 m!72079))

(assert (=> b!73559 m!72079))

(declare-fun m!72081 () Bool)

(assert (=> b!73559 m!72081))

(assert (=> b!73561 m!72079))

(assert (=> b!73561 m!72079))

(assert (=> b!73561 m!72081))

(assert (=> bm!6371 d!16961))

(declare-fun d!16963 () Bool)

(declare-fun res!38992 () Bool)

(declare-fun e!48110 () Bool)

(assert (=> d!16963 (=> res!38992 e!48110)))

(assert (=> d!16963 (= res!38992 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!16963 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 newMap!16) (mask!6180 newMap!16)) e!48110)))

(declare-fun b!73570 () Bool)

(declare-fun e!48109 () Bool)

(assert (=> b!73570 (= e!48110 e!48109)))

(declare-fun c!10964 () Bool)

(assert (=> b!73570 (= c!10964 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73571 () Bool)

(declare-fun e!48108 () Bool)

(declare-fun call!6503 () Bool)

(assert (=> b!73571 (= e!48108 call!6503)))

(declare-fun bm!6500 () Bool)

(assert (=> bm!6500 (= call!6503 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73572 () Bool)

(assert (=> b!73572 (= e!48109 call!6503)))

(declare-fun b!73573 () Bool)

(assert (=> b!73573 (= e!48109 e!48108)))

(declare-fun lt!33063 () (_ BitVec 64))

(assert (=> b!73573 (= lt!33063 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33062 () Unit!2078)

(assert (=> b!73573 (= lt!33062 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 newMap!16) lt!33063 #b00000000000000000000000000000000))))

(assert (=> b!73573 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!33063 #b00000000000000000000000000000000)))

(declare-fun lt!33064 () Unit!2078)

(assert (=> b!73573 (= lt!33064 lt!33062)))

(declare-fun res!38991 () Bool)

(assert (=> b!73573 (= res!38991 (= (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!73573 (=> (not res!38991) (not e!48108))))

(assert (= (and d!16963 (not res!38992)) b!73570))

(assert (= (and b!73570 c!10964) b!73573))

(assert (= (and b!73570 (not c!10964)) b!73572))

(assert (= (and b!73573 res!38991) b!73571))

(assert (= (or b!73571 b!73572) bm!6500))

(assert (=> b!73570 m!71563))

(assert (=> b!73570 m!71563))

(assert (=> b!73570 m!71567))

(declare-fun m!72083 () Bool)

(assert (=> bm!6500 m!72083))

(assert (=> b!73573 m!71563))

(declare-fun m!72085 () Bool)

(assert (=> b!73573 m!72085))

(declare-fun m!72087 () Bool)

(assert (=> b!73573 m!72087))

(assert (=> b!73573 m!71563))

(declare-fun m!72089 () Bool)

(assert (=> b!73573 m!72089))

(assert (=> b!73073 d!16963))

(assert (=> b!73046 d!16915))

(declare-fun d!16965 () Bool)

(declare-fun isEmpty!317 (Option!139) Bool)

(assert (=> d!16965 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun bs!3152 () Bool)

(assert (= bs!3152 d!16965))

(assert (=> bs!3152 m!71493))

(declare-fun m!72091 () Bool)

(assert (=> bs!3152 m!72091))

(assert (=> b!73116 d!16965))

(declare-fun b!73576 () Bool)

(declare-fun e!48112 () Option!139)

(assert (=> b!73576 (= e!48112 (getValueByKey!133 (t!5035 (toList!725 lt!32541)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun d!16967 () Bool)

(declare-fun c!10965 () Bool)

(assert (=> d!16967 (= c!10965 (and ((_ is Cons!1474) (toList!725 lt!32541)) (= (_1!1072 (h!2061 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun e!48111 () Option!139)

(assert (=> d!16967 (= (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48111)))

(declare-fun b!73575 () Bool)

(assert (=> b!73575 (= e!48111 e!48112)))

(declare-fun c!10966 () Bool)

(assert (=> b!73575 (= c!10966 (and ((_ is Cons!1474) (toList!725 lt!32541)) (not (= (_1!1072 (h!2061 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun b!73574 () Bool)

(assert (=> b!73574 (= e!48111 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32541)))))))

(declare-fun b!73577 () Bool)

(assert (=> b!73577 (= e!48112 None!137)))

(assert (= (and d!16967 c!10965) b!73574))

(assert (= (and d!16967 (not c!10965)) b!73575))

(assert (= (and b!73575 c!10966) b!73576))

(assert (= (and b!73575 (not c!10966)) b!73577))

(assert (=> b!73576 m!71227))

(declare-fun m!72093 () Bool)

(assert (=> b!73576 m!72093))

(assert (=> b!73116 d!16967))

(declare-fun b!73586 () Bool)

(declare-fun res!39004 () Bool)

(declare-fun e!48115 () Bool)

(assert (=> b!73586 (=> (not res!39004) (not e!48115))))

(assert (=> b!73586 (= res!39004 (and (= (size!2098 (_values!2196 newMap!16)) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001)) (= (size!2097 (_keys!3865 newMap!16)) (size!2098 (_values!2196 newMap!16))) (bvsge (_size!397 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!397 newMap!16) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!16969 () Bool)

(declare-fun res!39002 () Bool)

(assert (=> d!16969 (=> (not res!39002) (not e!48115))))

(assert (=> d!16969 (= res!39002 (validMask!0 (mask!6180 newMap!16)))))

(assert (=> d!16969 (= (simpleValid!51 newMap!16) e!48115)))

(declare-fun b!73587 () Bool)

(declare-fun res!39001 () Bool)

(assert (=> b!73587 (=> (not res!39001) (not e!48115))))

(declare-fun size!2101 (LongMapFixedSize!696) (_ BitVec 32))

(assert (=> b!73587 (= res!39001 (bvsge (size!2101 newMap!16) (_size!397 newMap!16)))))

(declare-fun b!73589 () Bool)

(assert (=> b!73589 (= e!48115 (and (bvsge (extraKeys!2072 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!397 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!73588 () Bool)

(declare-fun res!39003 () Bool)

(assert (=> b!73588 (=> (not res!39003) (not e!48115))))

(assert (=> b!73588 (= res!39003 (= (size!2101 newMap!16) (bvadd (_size!397 newMap!16) (bvsdiv (bvadd (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!16969 res!39002) b!73586))

(assert (= (and b!73586 res!39004) b!73587))

(assert (= (and b!73587 res!39001) b!73588))

(assert (= (and b!73588 res!39003) b!73589))

(assert (=> d!16969 m!71705))

(declare-fun m!72095 () Bool)

(assert (=> b!73587 m!72095))

(assert (=> b!73588 m!72095))

(assert (=> d!16839 d!16969))

(declare-fun d!16971 () Bool)

(assert (=> d!16971 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33067 () Unit!2078)

(declare-fun choose!416 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2078)

(assert (=> d!16971 (= lt!33067 (choose!416 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32768 (zeroValue!2115 newMap!16) lt!32533 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16971 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16971 (= (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32768 (zeroValue!2115 newMap!16) lt!32533 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)) lt!33067)))

(declare-fun bs!3153 () Bool)

(assert (= bs!3153 d!16971))

(assert (=> bs!3153 m!71415))

(declare-fun m!72097 () Bool)

(assert (=> bs!3153 m!72097))

(assert (=> bs!3153 m!71415))

(declare-fun m!72099 () Bool)

(assert (=> bs!3153 m!72099))

(assert (=> bs!3153 m!71705))

(declare-fun m!72101 () Bool)

(assert (=> bs!3153 m!72101))

(assert (=> b!73214 d!16971))

(declare-fun b!73592 () Bool)

(declare-fun e!48117 () Option!139)

(assert (=> b!73592 (= e!48117 (getValueByKey!133 (t!5035 (toList!725 lt!32618)) (_1!1072 lt!32538)))))

(declare-fun d!16973 () Bool)

(declare-fun c!10967 () Bool)

(assert (=> d!16973 (= c!10967 (and ((_ is Cons!1474) (toList!725 lt!32618)) (= (_1!1072 (h!2061 (toList!725 lt!32618))) (_1!1072 lt!32538))))))

(declare-fun e!48116 () Option!139)

(assert (=> d!16973 (= (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538)) e!48116)))

(declare-fun b!73591 () Bool)

(assert (=> b!73591 (= e!48116 e!48117)))

(declare-fun c!10968 () Bool)

(assert (=> b!73591 (= c!10968 (and ((_ is Cons!1474) (toList!725 lt!32618)) (not (= (_1!1072 (h!2061 (toList!725 lt!32618))) (_1!1072 lt!32538)))))))

(declare-fun b!73590 () Bool)

(assert (=> b!73590 (= e!48116 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32618)))))))

(declare-fun b!73593 () Bool)

(assert (=> b!73593 (= e!48117 None!137)))

(assert (= (and d!16973 c!10967) b!73590))

(assert (= (and d!16973 (not c!10967)) b!73591))

(assert (= (and b!73591 c!10968) b!73592))

(assert (= (and b!73591 (not c!10968)) b!73593))

(declare-fun m!72103 () Bool)

(assert (=> b!73592 m!72103))

(assert (=> b!72999 d!16973))

(declare-fun d!16975 () Bool)

(declare-fun e!48121 () Bool)

(assert (=> d!16975 e!48121))

(declare-fun res!39005 () Bool)

(assert (=> d!16975 (=> (not res!39005) (not e!48121))))

(declare-fun lt!33069 () ListLongMap!1419)

(assert (=> d!16975 (= res!39005 (not (contains!723 lt!33069 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48119 () ListLongMap!1419)

(assert (=> d!16975 (= lt!33069 e!48119)))

(declare-fun c!10971 () Bool)

(assert (=> d!16975 (= c!10971 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!16975 (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992))))))

(assert (=> d!16975 (= (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) lt!33069)))

(declare-fun b!73594 () Bool)

(declare-fun e!48123 () ListLongMap!1419)

(assert (=> b!73594 (= e!48119 e!48123)))

(declare-fun c!10969 () Bool)

(assert (=> b!73594 (= c!10969 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73595 () Bool)

(assert (=> b!73595 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> b!73595 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48124 () Bool)

(assert (=> b!73595 (= e!48124 (= (apply!75 lt!33069 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6501 () Bool)

(declare-fun call!6504 () ListLongMap!1419)

(assert (=> bm!6501 (= call!6504 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!73596 () Bool)

(declare-fun e!48118 () Bool)

(assert (=> b!73596 (= e!48118 e!48124)))

(assert (=> b!73596 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun res!39008 () Bool)

(assert (=> b!73596 (= res!39008 (contains!723 lt!33069 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73596 (=> (not res!39008) (not e!48124))))

(declare-fun b!73597 () Bool)

(assert (=> b!73597 (= e!48121 e!48118)))

(declare-fun c!10972 () Bool)

(declare-fun e!48120 () Bool)

(assert (=> b!73597 (= c!10972 e!48120)))

(declare-fun res!39007 () Bool)

(assert (=> b!73597 (=> (not res!39007) (not e!48120))))

(assert (=> b!73597 (= res!39007 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73598 () Bool)

(declare-fun res!39006 () Bool)

(assert (=> b!73598 (=> (not res!39006) (not e!48121))))

(assert (=> b!73598 (= res!39006 (not (contains!723 lt!33069 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73599 () Bool)

(assert (=> b!73599 (= e!48120 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73599 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73600 () Bool)

(assert (=> b!73600 (= e!48119 (ListLongMap!1420 Nil!1475))))

(declare-fun b!73601 () Bool)

(declare-fun e!48122 () Bool)

(assert (=> b!73601 (= e!48122 (isEmpty!316 lt!33069))))

(declare-fun b!73602 () Bool)

(assert (=> b!73602 (= e!48118 e!48122)))

(declare-fun c!10970 () Bool)

(assert (=> b!73602 (= c!10970 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73603 () Bool)

(assert (=> b!73603 (= e!48123 call!6504)))

(declare-fun b!73604 () Bool)

(assert (=> b!73604 (= e!48122 (= lt!33069 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73605 () Bool)

(declare-fun lt!33072 () Unit!2078)

(declare-fun lt!33073 () Unit!2078)

(assert (=> b!73605 (= lt!33072 lt!33073)))

(declare-fun lt!33070 () ListLongMap!1419)

(declare-fun lt!33071 () V!2947)

(declare-fun lt!33074 () (_ BitVec 64))

(declare-fun lt!33068 () (_ BitVec 64))

(assert (=> b!73605 (not (contains!723 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071)) lt!33068))))

(assert (=> b!73605 (= lt!33073 (addStillNotContains!24 lt!33070 lt!33074 lt!33071 lt!33068))))

(assert (=> b!73605 (= lt!33068 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73605 (= lt!33071 (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73605 (= lt!33074 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!73605 (= lt!33070 call!6504)))

(assert (=> b!73605 (= e!48123 (+!94 call!6504 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16975 c!10971) b!73600))

(assert (= (and d!16975 (not c!10971)) b!73594))

(assert (= (and b!73594 c!10969) b!73605))

(assert (= (and b!73594 (not c!10969)) b!73603))

(assert (= (or b!73605 b!73603) bm!6501))

(assert (= (and d!16975 res!39005) b!73598))

(assert (= (and b!73598 res!39006) b!73597))

(assert (= (and b!73597 res!39007) b!73599))

(assert (= (and b!73597 c!10972) b!73596))

(assert (= (and b!73597 (not c!10972)) b!73602))

(assert (= (and b!73596 res!39008) b!73595))

(assert (= (and b!73602 c!10970) b!73604))

(assert (= (and b!73602 (not c!10970)) b!73601))

(declare-fun b_lambda!3299 () Bool)

(assert (=> (not b_lambda!3299) (not b!73595)))

(assert (=> b!73595 t!5032))

(declare-fun b_and!4515 () Bool)

(assert (= b_and!4511 (and (=> t!5032 result!2679) b_and!4515)))

(assert (=> b!73595 t!5034))

(declare-fun b_and!4517 () Bool)

(assert (= b_and!4513 (and (=> t!5034 result!2683) b_and!4517)))

(declare-fun b_lambda!3301 () Bool)

(assert (=> (not b_lambda!3301) (not b!73605)))

(assert (=> b!73605 t!5032))

(declare-fun b_and!4519 () Bool)

(assert (= b_and!4515 (and (=> t!5032 result!2679) b_and!4519)))

(assert (=> b!73605 t!5034))

(declare-fun b_and!4521 () Bool)

(assert (= b_and!4517 (and (=> t!5034 result!2683) b_and!4521)))

(assert (=> b!73596 m!71711))

(assert (=> b!73596 m!71711))

(declare-fun m!72105 () Bool)

(assert (=> b!73596 m!72105))

(declare-fun m!72107 () Bool)

(assert (=> d!16975 m!72107))

(assert (=> d!16975 m!71223))

(assert (=> b!73594 m!71711))

(assert (=> b!73594 m!71711))

(declare-fun m!72109 () Bool)

(assert (=> b!73594 m!72109))

(declare-fun m!72111 () Bool)

(assert (=> b!73598 m!72111))

(assert (=> b!73599 m!71711))

(assert (=> b!73599 m!71711))

(assert (=> b!73599 m!72109))

(declare-fun m!72113 () Bool)

(assert (=> bm!6501 m!72113))

(declare-fun m!72115 () Bool)

(assert (=> b!73595 m!72115))

(assert (=> b!73595 m!71267))

(declare-fun m!72117 () Bool)

(assert (=> b!73595 m!72117))

(assert (=> b!73595 m!71711))

(assert (=> b!73595 m!72115))

(assert (=> b!73595 m!71711))

(declare-fun m!72119 () Bool)

(assert (=> b!73595 m!72119))

(assert (=> b!73595 m!71267))

(assert (=> b!73604 m!72113))

(assert (=> b!73605 m!71267))

(assert (=> b!73605 m!72115))

(assert (=> b!73605 m!71267))

(assert (=> b!73605 m!72117))

(declare-fun m!72121 () Bool)

(assert (=> b!73605 m!72121))

(declare-fun m!72123 () Bool)

(assert (=> b!73605 m!72123))

(declare-fun m!72125 () Bool)

(assert (=> b!73605 m!72125))

(assert (=> b!73605 m!72115))

(assert (=> b!73605 m!71711))

(assert (=> b!73605 m!72121))

(declare-fun m!72127 () Bool)

(assert (=> b!73605 m!72127))

(declare-fun m!72129 () Bool)

(assert (=> b!73601 m!72129))

(assert (=> bm!6351 d!16975))

(assert (=> bm!6429 d!16907))

(declare-fun d!16977 () Bool)

(assert (=> d!16977 (= (apply!75 lt!32681 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1142 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3154 () Bool)

(assert (= bs!3154 d!16977))

(assert (=> bs!3154 m!71327))

(assert (=> bs!3154 m!71597))

(assert (=> bs!3154 m!71597))

(declare-fun m!72131 () Bool)

(assert (=> bs!3154 m!72131))

(assert (=> b!73060 d!16977))

(assert (=> b!73060 d!16887))

(declare-fun b!73608 () Bool)

(declare-fun e!48126 () Option!139)

(assert (=> b!73608 (= e!48126 (getValueByKey!133 (t!5035 (toList!725 lt!32614)) (_1!1072 lt!32542)))))

(declare-fun d!16979 () Bool)

(declare-fun c!10973 () Bool)

(assert (=> d!16979 (= c!10973 (and ((_ is Cons!1474) (toList!725 lt!32614)) (= (_1!1072 (h!2061 (toList!725 lt!32614))) (_1!1072 lt!32542))))))

(declare-fun e!48125 () Option!139)

(assert (=> d!16979 (= (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542)) e!48125)))

(declare-fun b!73607 () Bool)

(assert (=> b!73607 (= e!48125 e!48126)))

(declare-fun c!10974 () Bool)

(assert (=> b!73607 (= c!10974 (and ((_ is Cons!1474) (toList!725 lt!32614)) (not (= (_1!1072 (h!2061 (toList!725 lt!32614))) (_1!1072 lt!32542)))))))

(declare-fun b!73606 () Bool)

(assert (=> b!73606 (= e!48125 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32614)))))))

(declare-fun b!73609 () Bool)

(assert (=> b!73609 (= e!48126 None!137)))

(assert (= (and d!16979 c!10973) b!73606))

(assert (= (and d!16979 (not c!10973)) b!73607))

(assert (= (and b!73607 c!10974) b!73608))

(assert (= (and b!73607 (not c!10974)) b!73609))

(declare-fun m!72133 () Bool)

(assert (=> b!73608 m!72133))

(assert (=> b!72997 d!16979))

(declare-fun d!16981 () Bool)

(declare-fun lt!33075 () Bool)

(assert (=> d!16981 (= lt!33075 (select (content!77 (toList!725 lt!32622)) lt!32538))))

(declare-fun e!48127 () Bool)

(assert (=> d!16981 (= lt!33075 e!48127)))

(declare-fun res!39009 () Bool)

(assert (=> d!16981 (=> (not res!39009) (not e!48127))))

(assert (=> d!16981 (= res!39009 ((_ is Cons!1474) (toList!725 lt!32622)))))

(assert (=> d!16981 (= (contains!724 (toList!725 lt!32622) lt!32538) lt!33075)))

(declare-fun b!73610 () Bool)

(declare-fun e!48128 () Bool)

(assert (=> b!73610 (= e!48127 e!48128)))

(declare-fun res!39010 () Bool)

(assert (=> b!73610 (=> res!39010 e!48128)))

(assert (=> b!73610 (= res!39010 (= (h!2061 (toList!725 lt!32622)) lt!32538))))

(declare-fun b!73611 () Bool)

(assert (=> b!73611 (= e!48128 (contains!724 (t!5035 (toList!725 lt!32622)) lt!32538))))

(assert (= (and d!16981 res!39009) b!73610))

(assert (= (and b!73610 (not res!39010)) b!73611))

(declare-fun m!72135 () Bool)

(assert (=> d!16981 m!72135))

(declare-fun m!72137 () Bool)

(assert (=> d!16981 m!72137))

(declare-fun m!72139 () Bool)

(assert (=> b!73611 m!72139))

(assert (=> b!73002 d!16981))

(declare-fun d!16983 () Bool)

(declare-fun e!48129 () Bool)

(assert (=> d!16983 e!48129))

(declare-fun res!39011 () Bool)

(assert (=> d!16983 (=> (not res!39011) (not e!48129))))

(declare-fun lt!33078 () ListLongMap!1419)

(assert (=> d!16983 (= res!39011 (contains!723 lt!33078 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun lt!33077 () List!1478)

(assert (=> d!16983 (= lt!33078 (ListLongMap!1420 lt!33077))))

(declare-fun lt!33079 () Unit!2078)

(declare-fun lt!33076 () Unit!2078)

(assert (=> d!16983 (= lt!33079 lt!33076)))

(assert (=> d!16983 (= (getValueByKey!133 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (Some!138 (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!16983 (= lt!33076 (lemmaContainsTupThenGetReturnValue!50 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!16983 (= lt!33077 (insertStrictlySorted!53 (toList!725 e!47904) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!16983 (= (+!94 e!47904 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33078)))

(declare-fun b!73612 () Bool)

(declare-fun res!39012 () Bool)

(assert (=> b!73612 (=> (not res!39012) (not e!48129))))

(assert (=> b!73612 (= res!39012 (= (getValueByKey!133 (toList!725 lt!33078) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (Some!138 (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!73613 () Bool)

(assert (=> b!73613 (= e!48129 (contains!724 (toList!725 lt!33078) (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (= (and d!16983 res!39011) b!73612))

(assert (= (and b!73612 res!39012) b!73613))

(declare-fun m!72141 () Bool)

(assert (=> d!16983 m!72141))

(declare-fun m!72143 () Bool)

(assert (=> d!16983 m!72143))

(declare-fun m!72145 () Bool)

(assert (=> d!16983 m!72145))

(declare-fun m!72147 () Bool)

(assert (=> d!16983 m!72147))

(declare-fun m!72149 () Bool)

(assert (=> b!73612 m!72149))

(declare-fun m!72151 () Bool)

(assert (=> b!73613 m!72151))

(assert (=> bm!6438 d!16983))

(declare-fun d!16985 () Bool)

(assert (=> d!16985 (= (get!1141 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73080 d!16985))

(declare-fun d!16987 () Bool)

(declare-fun isEmpty!318 (List!1478) Bool)

(assert (=> d!16987 (= (isEmpty!316 lt!32594) (isEmpty!318 (toList!725 lt!32594)))))

(declare-fun bs!3155 () Bool)

(assert (= bs!3155 d!16987))

(declare-fun m!72153 () Bool)

(assert (=> bs!3155 m!72153))

(assert (=> b!72986 d!16987))

(declare-fun d!16989 () Bool)

(assert (=> d!16989 (= (map!1151 (_2!1073 lt!32791)) (getCurrentListMap!422 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))))))

(declare-fun bs!3156 () Bool)

(assert (= bs!3156 d!16989))

(declare-fun m!72155 () Bool)

(assert (=> bs!3156 m!72155))

(assert (=> bm!6425 d!16989))

(declare-fun d!16991 () Bool)

(declare-fun e!48131 () Bool)

(assert (=> d!16991 e!48131))

(declare-fun res!39013 () Bool)

(assert (=> d!16991 (=> res!39013 e!48131)))

(declare-fun lt!33083 () Bool)

(assert (=> d!16991 (= res!39013 (not lt!33083))))

(declare-fun lt!33082 () Bool)

(assert (=> d!16991 (= lt!33083 lt!33082)))

(declare-fun lt!33081 () Unit!2078)

(declare-fun e!48130 () Unit!2078)

(assert (=> d!16991 (= lt!33081 e!48130)))

(declare-fun c!10975 () Bool)

(assert (=> d!16991 (= c!10975 lt!33082)))

(assert (=> d!16991 (= lt!33082 (containsKey!137 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16991 (= (contains!723 lt!32681 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33083)))

(declare-fun b!73614 () Bool)

(declare-fun lt!33080 () Unit!2078)

(assert (=> b!73614 (= e!48130 lt!33080)))

(assert (=> b!73614 (= lt!33080 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73614 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73615 () Bool)

(declare-fun Unit!2101 () Unit!2078)

(assert (=> b!73615 (= e!48130 Unit!2101)))

(declare-fun b!73616 () Bool)

(assert (=> b!73616 (= e!48131 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16991 c!10975) b!73614))

(assert (= (and d!16991 (not c!10975)) b!73615))

(assert (= (and d!16991 (not res!39013)) b!73616))

(declare-fun m!72157 () Bool)

(assert (=> d!16991 m!72157))

(declare-fun m!72159 () Bool)

(assert (=> b!73614 m!72159))

(assert (=> b!73614 m!72013))

(assert (=> b!73614 m!72013))

(declare-fun m!72161 () Bool)

(assert (=> b!73614 m!72161))

(assert (=> b!73616 m!72013))

(assert (=> b!73616 m!72013))

(assert (=> b!73616 m!72161))

(assert (=> bm!6367 d!16991))

(declare-fun b!73633 () Bool)

(declare-fun lt!33088 () SeekEntryResult!236)

(assert (=> b!73633 (and (bvsge (index!3075 lt!33088) #b00000000000000000000000000000000) (bvslt (index!3075 lt!33088) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun res!39022 () Bool)

(assert (=> b!73633 (= res!39022 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!33088)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48140 () Bool)

(assert (=> b!73633 (=> (not res!39022) (not e!48140))))

(declare-fun b!73634 () Bool)

(declare-fun e!48141 () Bool)

(assert (=> b!73634 (= e!48141 ((_ is Undefined!236) lt!33088))))

(declare-fun b!73635 () Bool)

(declare-fun res!39025 () Bool)

(declare-fun e!48143 () Bool)

(assert (=> b!73635 (=> (not res!39025) (not e!48143))))

(assert (=> b!73635 (= res!39025 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!33088)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73635 (and (bvsge (index!3078 lt!33088) #b00000000000000000000000000000000) (bvslt (index!3078 lt!33088) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73636 () Bool)

(declare-fun call!6510 () Bool)

(assert (=> b!73636 (= e!48140 (not call!6510))))

(declare-fun b!73637 () Bool)

(declare-fun res!39024 () Bool)

(assert (=> b!73637 (=> (not res!39024) (not e!48143))))

(declare-fun call!6509 () Bool)

(assert (=> b!73637 (= res!39024 call!6509)))

(assert (=> b!73637 (= e!48141 e!48143)))

(declare-fun b!73638 () Bool)

(declare-fun e!48142 () Bool)

(assert (=> b!73638 (= e!48142 e!48141)))

(declare-fun c!10980 () Bool)

(assert (=> b!73638 (= c!10980 ((_ is MissingVacant!236) lt!33088))))

(declare-fun c!10981 () Bool)

(declare-fun bm!6506 () Bool)

(assert (=> bm!6506 (= call!6509 (inRange!0 (ite c!10981 (index!3075 lt!33088) (index!3078 lt!33088)) (mask!6180 newMap!16)))))

(declare-fun b!73640 () Bool)

(assert (=> b!73640 (= e!48143 (not call!6510))))

(declare-fun bm!6507 () Bool)

(assert (=> bm!6507 (= call!6510 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!16993 () Bool)

(assert (=> d!16993 e!48142))

(assert (=> d!16993 (= c!10981 ((_ is MissingZero!236) lt!33088))))

(assert (=> d!16993 (= lt!33088 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun lt!33089 () Unit!2078)

(declare-fun choose!417 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2078)

(assert (=> d!16993 (= lt!33089 (choose!417 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16993 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16993 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) lt!33089)))

(declare-fun b!73639 () Bool)

(assert (=> b!73639 (= e!48142 e!48140)))

(declare-fun res!39023 () Bool)

(assert (=> b!73639 (= res!39023 call!6509)))

(assert (=> b!73639 (=> (not res!39023) (not e!48140))))

(assert (= (and d!16993 c!10981) b!73639))

(assert (= (and d!16993 (not c!10981)) b!73638))

(assert (= (and b!73639 res!39023) b!73633))

(assert (= (and b!73633 res!39022) b!73636))

(assert (= (and b!73638 c!10980) b!73637))

(assert (= (and b!73638 (not c!10980)) b!73634))

(assert (= (and b!73637 res!39024) b!73635))

(assert (= (and b!73635 res!39025) b!73640))

(assert (= (or b!73639 b!73637) bm!6506))

(assert (= (or b!73636 b!73640) bm!6507))

(declare-fun m!72163 () Bool)

(assert (=> b!73633 m!72163))

(assert (=> d!16993 m!71227))

(assert (=> d!16993 m!71501))

(assert (=> d!16993 m!71227))

(declare-fun m!72165 () Bool)

(assert (=> d!16993 m!72165))

(assert (=> d!16993 m!71705))

(assert (=> bm!6507 m!71227))

(assert (=> bm!6507 m!71505))

(declare-fun m!72167 () Bool)

(assert (=> bm!6506 m!72167))

(declare-fun m!72169 () Bool)

(assert (=> b!73635 m!72169))

(assert (=> bm!6432 d!16993))

(assert (=> b!72984 d!16915))

(declare-fun d!16995 () Bool)

(declare-fun lt!33092 () Bool)

(declare-fun content!78 (List!1479) (InoxSet (_ BitVec 64)))

(assert (=> d!16995 (= lt!33092 (select (content!78 Nil!1476) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun e!48148 () Bool)

(assert (=> d!16995 (= lt!33092 e!48148)))

(declare-fun res!39030 () Bool)

(assert (=> d!16995 (=> (not res!39030) (not e!48148))))

(assert (=> d!16995 (= res!39030 ((_ is Cons!1475) Nil!1476))))

(assert (=> d!16995 (= (contains!725 Nil!1476 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33092)))

(declare-fun b!73645 () Bool)

(declare-fun e!48149 () Bool)

(assert (=> b!73645 (= e!48148 e!48149)))

(declare-fun res!39031 () Bool)

(assert (=> b!73645 (=> res!39031 e!48149)))

(assert (=> b!73645 (= res!39031 (= (h!2062 Nil!1476) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!73646 () Bool)

(assert (=> b!73646 (= e!48149 (contains!725 (t!5036 Nil!1476) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!16995 res!39030) b!73645))

(assert (= (and b!73645 (not res!39031)) b!73646))

(declare-fun m!72171 () Bool)

(assert (=> d!16995 m!72171))

(assert (=> d!16995 m!71227))

(declare-fun m!72173 () Bool)

(assert (=> d!16995 m!72173))

(assert (=> b!73646 m!71227))

(declare-fun m!72175 () Bool)

(assert (=> b!73646 m!72175))

(assert (=> b!73103 d!16995))

(declare-fun d!16997 () Bool)

(assert (=> d!16997 (contains!723 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32673)))

(declare-fun lt!33095 () Unit!2078)

(declare-fun choose!418 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2078)

(assert (=> d!16997 (= lt!33095 (choose!418 lt!32671 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32673))))

(assert (=> d!16997 (contains!723 lt!32671 lt!32673)))

(assert (=> d!16997 (= (addStillContains!51 lt!32671 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32673) lt!33095)))

(declare-fun bs!3157 () Bool)

(assert (= bs!3157 d!16997))

(assert (=> bs!3157 m!71431))

(assert (=> bs!3157 m!71431))

(assert (=> bs!3157 m!71455))

(declare-fun m!72177 () Bool)

(assert (=> bs!3157 m!72177))

(declare-fun m!72179 () Bool)

(assert (=> bs!3157 m!72179))

(assert (=> b!73055 d!16997))

(declare-fun d!16999 () Bool)

(declare-fun e!48150 () Bool)

(assert (=> d!16999 e!48150))

(declare-fun res!39032 () Bool)

(assert (=> d!16999 (=> (not res!39032) (not e!48150))))

(declare-fun lt!33098 () ListLongMap!1419)

(assert (=> d!16999 (= res!39032 (contains!723 lt!33098 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33097 () List!1478)

(assert (=> d!16999 (= lt!33098 (ListLongMap!1420 lt!33097))))

(declare-fun lt!33099 () Unit!2078)

(declare-fun lt!33096 () Unit!2078)

(assert (=> d!16999 (= lt!33099 lt!33096)))

(assert (=> d!16999 (= (getValueByKey!133 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16999 (= lt!33096 (lemmaContainsTupThenGetReturnValue!50 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16999 (= lt!33097 (insertStrictlySorted!53 (toList!725 lt!32674) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!16999 (= (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33098)))

(declare-fun b!73648 () Bool)

(declare-fun res!39033 () Bool)

(assert (=> b!73648 (=> (not res!39033) (not e!48150))))

(assert (=> b!73648 (= res!39033 (= (getValueByKey!133 (toList!725 lt!33098) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73649 () Bool)

(assert (=> b!73649 (= e!48150 (contains!724 (toList!725 lt!33098) (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!16999 res!39032) b!73648))

(assert (= (and b!73648 res!39033) b!73649))

(declare-fun m!72181 () Bool)

(assert (=> d!16999 m!72181))

(declare-fun m!72183 () Bool)

(assert (=> d!16999 m!72183))

(declare-fun m!72185 () Bool)

(assert (=> d!16999 m!72185))

(declare-fun m!72187 () Bool)

(assert (=> d!16999 m!72187))

(declare-fun m!72189 () Bool)

(assert (=> b!73648 m!72189))

(declare-fun m!72191 () Bool)

(assert (=> b!73649 m!72191))

(assert (=> b!73055 d!16999))

(assert (=> b!73055 d!16815))

(declare-fun d!17001 () Bool)

(assert (=> d!17001 (= (apply!75 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32687) (apply!75 lt!32688 lt!32687))))

(declare-fun lt!33102 () Unit!2078)

(declare-fun choose!419 (ListLongMap!1419 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2078)

(assert (=> d!17001 (= lt!33102 (choose!419 lt!32688 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32687))))

(declare-fun e!48153 () Bool)

(assert (=> d!17001 e!48153))

(declare-fun res!39036 () Bool)

(assert (=> d!17001 (=> (not res!39036) (not e!48153))))

(assert (=> d!17001 (= res!39036 (contains!723 lt!32688 lt!32687))))

(assert (=> d!17001 (= (addApplyDifferent!51 lt!32688 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32687) lt!33102)))

(declare-fun b!73653 () Bool)

(assert (=> b!73653 (= e!48153 (not (= lt!32687 lt!32689)))))

(assert (= (and d!17001 res!39036) b!73653))

(assert (=> d!17001 m!71433))

(assert (=> d!17001 m!71457))

(assert (=> d!17001 m!71437))

(declare-fun m!72193 () Bool)

(assert (=> d!17001 m!72193))

(assert (=> d!17001 m!71433))

(declare-fun m!72195 () Bool)

(assert (=> d!17001 m!72195))

(assert (=> b!73055 d!17001))

(declare-fun d!17003 () Bool)

(assert (=> d!17003 (= (apply!75 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32678) (apply!75 lt!32674 lt!32678))))

(declare-fun lt!33103 () Unit!2078)

(assert (=> d!17003 (= lt!33103 (choose!419 lt!32674 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32678))))

(declare-fun e!48154 () Bool)

(assert (=> d!17003 e!48154))

(declare-fun res!39037 () Bool)

(assert (=> d!17003 (=> (not res!39037) (not e!48154))))

(assert (=> d!17003 (= res!39037 (contains!723 lt!32674 lt!32678))))

(assert (=> d!17003 (= (addApplyDifferent!51 lt!32674 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32678) lt!33103)))

(declare-fun b!73654 () Bool)

(assert (=> b!73654 (= e!48154 (not (= lt!32678 lt!32679)))))

(assert (= (and d!17003 res!39037) b!73654))

(assert (=> d!17003 m!71443))

(assert (=> d!17003 m!71445))

(assert (=> d!17003 m!71439))

(declare-fun m!72197 () Bool)

(assert (=> d!17003 m!72197))

(assert (=> d!17003 m!71443))

(declare-fun m!72199 () Bool)

(assert (=> d!17003 m!72199))

(assert (=> b!73055 d!17003))

(declare-fun d!17005 () Bool)

(declare-fun e!48155 () Bool)

(assert (=> d!17005 e!48155))

(declare-fun res!39038 () Bool)

(assert (=> d!17005 (=> (not res!39038) (not e!48155))))

(declare-fun lt!33106 () ListLongMap!1419)

(assert (=> d!17005 (= res!39038 (contains!723 lt!33106 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33105 () List!1478)

(assert (=> d!17005 (= lt!33106 (ListLongMap!1420 lt!33105))))

(declare-fun lt!33107 () Unit!2078)

(declare-fun lt!33104 () Unit!2078)

(assert (=> d!17005 (= lt!33107 lt!33104)))

(assert (=> d!17005 (= (getValueByKey!133 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17005 (= lt!33104 (lemmaContainsTupThenGetReturnValue!50 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17005 (= lt!33105 (insertStrictlySorted!53 (toList!725 lt!32671) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17005 (= (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33106)))

(declare-fun b!73655 () Bool)

(declare-fun res!39039 () Bool)

(assert (=> b!73655 (=> (not res!39039) (not e!48155))))

(assert (=> b!73655 (= res!39039 (= (getValueByKey!133 (toList!725 lt!33106) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73656 () Bool)

(assert (=> b!73656 (= e!48155 (contains!724 (toList!725 lt!33106) (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17005 res!39038) b!73655))

(assert (= (and b!73655 res!39039) b!73656))

(declare-fun m!72201 () Bool)

(assert (=> d!17005 m!72201))

(declare-fun m!72203 () Bool)

(assert (=> d!17005 m!72203))

(declare-fun m!72205 () Bool)

(assert (=> d!17005 m!72205))

(declare-fun m!72207 () Bool)

(assert (=> d!17005 m!72207))

(declare-fun m!72209 () Bool)

(assert (=> b!73655 m!72209))

(declare-fun m!72211 () Bool)

(assert (=> b!73656 m!72211))

(assert (=> b!73055 d!17005))

(declare-fun d!17007 () Bool)

(assert (=> d!17007 (= (apply!75 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32678) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32678)))))

(declare-fun bs!3158 () Bool)

(assert (= bs!3158 d!17007))

(declare-fun m!72213 () Bool)

(assert (=> bs!3158 m!72213))

(assert (=> bs!3158 m!72213))

(declare-fun m!72215 () Bool)

(assert (=> bs!3158 m!72215))

(assert (=> b!73055 d!17007))

(declare-fun d!17009 () Bool)

(assert (=> d!17009 (= (apply!75 lt!32685 lt!32684) (get!1142 (getValueByKey!133 (toList!725 lt!32685) lt!32684)))))

(declare-fun bs!3159 () Bool)

(assert (= bs!3159 d!17009))

(declare-fun m!72217 () Bool)

(assert (=> bs!3159 m!72217))

(assert (=> bs!3159 m!72217))

(declare-fun m!72219 () Bool)

(assert (=> bs!3159 m!72219))

(assert (=> b!73055 d!17009))

(declare-fun d!17011 () Bool)

(assert (=> d!17011 (= (apply!75 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32684) (apply!75 lt!32685 lt!32684))))

(declare-fun lt!33108 () Unit!2078)

(assert (=> d!17011 (= lt!33108 (choose!419 lt!32685 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32684))))

(declare-fun e!48156 () Bool)

(assert (=> d!17011 e!48156))

(declare-fun res!39040 () Bool)

(assert (=> d!17011 (=> (not res!39040) (not e!48156))))

(assert (=> d!17011 (= res!39040 (contains!723 lt!32685 lt!32684))))

(assert (=> d!17011 (= (addApplyDifferent!51 lt!32685 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32684) lt!33108)))

(declare-fun b!73657 () Bool)

(assert (=> b!73657 (= e!48156 (not (= lt!32684 lt!32683)))))

(assert (= (and d!17011 res!39040) b!73657))

(assert (=> d!17011 m!71449))

(assert (=> d!17011 m!71451))

(assert (=> d!17011 m!71459))

(declare-fun m!72221 () Bool)

(assert (=> d!17011 m!72221))

(assert (=> d!17011 m!71449))

(declare-fun m!72223 () Bool)

(assert (=> d!17011 m!72223))

(assert (=> b!73055 d!17011))

(declare-fun d!17013 () Bool)

(declare-fun e!48157 () Bool)

(assert (=> d!17013 e!48157))

(declare-fun res!39041 () Bool)

(assert (=> d!17013 (=> (not res!39041) (not e!48157))))

(declare-fun lt!33111 () ListLongMap!1419)

(assert (=> d!17013 (= res!39041 (contains!723 lt!33111 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33110 () List!1478)

(assert (=> d!17013 (= lt!33111 (ListLongMap!1420 lt!33110))))

(declare-fun lt!33112 () Unit!2078)

(declare-fun lt!33109 () Unit!2078)

(assert (=> d!17013 (= lt!33112 lt!33109)))

(assert (=> d!17013 (= (getValueByKey!133 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17013 (= lt!33109 (lemmaContainsTupThenGetReturnValue!50 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17013 (= lt!33110 (insertStrictlySorted!53 (toList!725 lt!32688) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17013 (= (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33111)))

(declare-fun b!73658 () Bool)

(declare-fun res!39042 () Bool)

(assert (=> b!73658 (=> (not res!39042) (not e!48157))))

(assert (=> b!73658 (= res!39042 (= (getValueByKey!133 (toList!725 lt!33111) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73659 () Bool)

(assert (=> b!73659 (= e!48157 (contains!724 (toList!725 lt!33111) (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17013 res!39041) b!73658))

(assert (= (and b!73658 res!39042) b!73659))

(declare-fun m!72225 () Bool)

(assert (=> d!17013 m!72225))

(declare-fun m!72227 () Bool)

(assert (=> d!17013 m!72227))

(declare-fun m!72229 () Bool)

(assert (=> d!17013 m!72229))

(declare-fun m!72231 () Bool)

(assert (=> d!17013 m!72231))

(declare-fun m!72233 () Bool)

(assert (=> b!73658 m!72233))

(declare-fun m!72235 () Bool)

(assert (=> b!73659 m!72235))

(assert (=> b!73055 d!17013))

(declare-fun d!17015 () Bool)

(assert (=> d!17015 (= (apply!75 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32687) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32687)))))

(declare-fun bs!3160 () Bool)

(assert (= bs!3160 d!17015))

(declare-fun m!72237 () Bool)

(assert (=> bs!3160 m!72237))

(assert (=> bs!3160 m!72237))

(declare-fun m!72239 () Bool)

(assert (=> bs!3160 m!72239))

(assert (=> b!73055 d!17015))

(declare-fun d!17017 () Bool)

(declare-fun e!48158 () Bool)

(assert (=> d!17017 e!48158))

(declare-fun res!39043 () Bool)

(assert (=> d!17017 (=> (not res!39043) (not e!48158))))

(declare-fun lt!33115 () ListLongMap!1419)

(assert (=> d!17017 (= res!39043 (contains!723 lt!33115 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33114 () List!1478)

(assert (=> d!17017 (= lt!33115 (ListLongMap!1420 lt!33114))))

(declare-fun lt!33116 () Unit!2078)

(declare-fun lt!33113 () Unit!2078)

(assert (=> d!17017 (= lt!33116 lt!33113)))

(assert (=> d!17017 (= (getValueByKey!133 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17017 (= lt!33113 (lemmaContainsTupThenGetReturnValue!50 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17017 (= lt!33114 (insertStrictlySorted!53 (toList!725 lt!32685) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17017 (= (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33115)))

(declare-fun b!73660 () Bool)

(declare-fun res!39044 () Bool)

(assert (=> b!73660 (=> (not res!39044) (not e!48158))))

(assert (=> b!73660 (= res!39044 (= (getValueByKey!133 (toList!725 lt!33115) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73661 () Bool)

(assert (=> b!73661 (= e!48158 (contains!724 (toList!725 lt!33115) (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17017 res!39043) b!73660))

(assert (= (and b!73660 res!39044) b!73661))

(declare-fun m!72241 () Bool)

(assert (=> d!17017 m!72241))

(declare-fun m!72243 () Bool)

(assert (=> d!17017 m!72243))

(declare-fun m!72245 () Bool)

(assert (=> d!17017 m!72245))

(declare-fun m!72247 () Bool)

(assert (=> d!17017 m!72247))

(declare-fun m!72249 () Bool)

(assert (=> b!73660 m!72249))

(declare-fun m!72251 () Bool)

(assert (=> b!73661 m!72251))

(assert (=> b!73055 d!17017))

(declare-fun d!17019 () Bool)

(assert (=> d!17019 (= (apply!75 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32684) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32684)))))

(declare-fun bs!3161 () Bool)

(assert (= bs!3161 d!17019))

(declare-fun m!72253 () Bool)

(assert (=> bs!3161 m!72253))

(assert (=> bs!3161 m!72253))

(declare-fun m!72255 () Bool)

(assert (=> bs!3161 m!72255))

(assert (=> b!73055 d!17019))

(declare-fun d!17021 () Bool)

(declare-fun e!48160 () Bool)

(assert (=> d!17021 e!48160))

(declare-fun res!39045 () Bool)

(assert (=> d!17021 (=> res!39045 e!48160)))

(declare-fun lt!33120 () Bool)

(assert (=> d!17021 (= res!39045 (not lt!33120))))

(declare-fun lt!33119 () Bool)

(assert (=> d!17021 (= lt!33120 lt!33119)))

(declare-fun lt!33118 () Unit!2078)

(declare-fun e!48159 () Unit!2078)

(assert (=> d!17021 (= lt!33118 e!48159)))

(declare-fun c!10982 () Bool)

(assert (=> d!17021 (= c!10982 lt!33119)))

(assert (=> d!17021 (= lt!33119 (containsKey!137 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))

(assert (=> d!17021 (= (contains!723 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32673) lt!33120)))

(declare-fun b!73662 () Bool)

(declare-fun lt!33117 () Unit!2078)

(assert (=> b!73662 (= e!48159 lt!33117)))

(assert (=> b!73662 (= lt!33117 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))

(assert (=> b!73662 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))

(declare-fun b!73663 () Bool)

(declare-fun Unit!2102 () Unit!2078)

(assert (=> b!73663 (= e!48159 Unit!2102)))

(declare-fun b!73664 () Bool)

(assert (=> b!73664 (= e!48160 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673)))))

(assert (= (and d!17021 c!10982) b!73662))

(assert (= (and d!17021 (not c!10982)) b!73663))

(assert (= (and d!17021 (not res!39045)) b!73664))

(declare-fun m!72257 () Bool)

(assert (=> d!17021 m!72257))

(declare-fun m!72259 () Bool)

(assert (=> b!73662 m!72259))

(declare-fun m!72261 () Bool)

(assert (=> b!73662 m!72261))

(assert (=> b!73662 m!72261))

(declare-fun m!72263 () Bool)

(assert (=> b!73662 m!72263))

(assert (=> b!73664 m!72261))

(assert (=> b!73664 m!72261))

(assert (=> b!73664 m!72263))

(assert (=> b!73055 d!17021))

(declare-fun d!17023 () Bool)

(assert (=> d!17023 (= (apply!75 lt!32674 lt!32678) (get!1142 (getValueByKey!133 (toList!725 lt!32674) lt!32678)))))

(declare-fun bs!3162 () Bool)

(assert (= bs!3162 d!17023))

(declare-fun m!72265 () Bool)

(assert (=> bs!3162 m!72265))

(assert (=> bs!3162 m!72265))

(declare-fun m!72267 () Bool)

(assert (=> bs!3162 m!72267))

(assert (=> b!73055 d!17023))

(declare-fun d!17025 () Bool)

(assert (=> d!17025 (= (apply!75 lt!32688 lt!32687) (get!1142 (getValueByKey!133 (toList!725 lt!32688) lt!32687)))))

(declare-fun bs!3163 () Bool)

(assert (= bs!3163 d!17025))

(declare-fun m!72269 () Bool)

(assert (=> bs!3163 m!72269))

(assert (=> bs!3163 m!72269))

(declare-fun m!72271 () Bool)

(assert (=> bs!3163 m!72271))

(assert (=> b!73055 d!17025))

(declare-fun d!17027 () Bool)

(declare-fun e!48162 () Bool)

(assert (=> d!17027 e!48162))

(declare-fun res!39046 () Bool)

(assert (=> d!17027 (=> res!39046 e!48162)))

(declare-fun lt!33124 () Bool)

(assert (=> d!17027 (= res!39046 (not lt!33124))))

(declare-fun lt!33123 () Bool)

(assert (=> d!17027 (= lt!33124 lt!33123)))

(declare-fun lt!33122 () Unit!2078)

(declare-fun e!48161 () Unit!2078)

(assert (=> d!17027 (= lt!33122 e!48161)))

(declare-fun c!10983 () Bool)

(assert (=> d!17027 (= c!10983 lt!33123)))

(assert (=> d!17027 (= lt!33123 (containsKey!137 (toList!725 lt!32618) (_1!1072 lt!32538)))))

(assert (=> d!17027 (= (contains!723 lt!32618 (_1!1072 lt!32538)) lt!33124)))

(declare-fun b!73665 () Bool)

(declare-fun lt!33121 () Unit!2078)

(assert (=> b!73665 (= e!48161 lt!33121)))

(assert (=> b!73665 (= lt!33121 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32618) (_1!1072 lt!32538)))))

(assert (=> b!73665 (isDefined!86 (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538)))))

(declare-fun b!73666 () Bool)

(declare-fun Unit!2103 () Unit!2078)

(assert (=> b!73666 (= e!48161 Unit!2103)))

(declare-fun b!73667 () Bool)

(assert (=> b!73667 (= e!48162 (isDefined!86 (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538))))))

(assert (= (and d!17027 c!10983) b!73665))

(assert (= (and d!17027 (not c!10983)) b!73666))

(assert (= (and d!17027 (not res!39046)) b!73667))

(declare-fun m!72273 () Bool)

(assert (=> d!17027 m!72273))

(declare-fun m!72275 () Bool)

(assert (=> b!73665 m!72275))

(assert (=> b!73665 m!71387))

(assert (=> b!73665 m!71387))

(declare-fun m!72277 () Bool)

(assert (=> b!73665 m!72277))

(assert (=> b!73667 m!71387))

(assert (=> b!73667 m!71387))

(assert (=> b!73667 m!72277))

(assert (=> d!16821 d!17027))

(declare-fun b!73670 () Bool)

(declare-fun e!48164 () Option!139)

(assert (=> b!73670 (= e!48164 (getValueByKey!133 (t!5035 lt!32617) (_1!1072 lt!32538)))))

(declare-fun d!17029 () Bool)

(declare-fun c!10984 () Bool)

(assert (=> d!17029 (= c!10984 (and ((_ is Cons!1474) lt!32617) (= (_1!1072 (h!2061 lt!32617)) (_1!1072 lt!32538))))))

(declare-fun e!48163 () Option!139)

(assert (=> d!17029 (= (getValueByKey!133 lt!32617 (_1!1072 lt!32538)) e!48163)))

(declare-fun b!73669 () Bool)

(assert (=> b!73669 (= e!48163 e!48164)))

(declare-fun c!10985 () Bool)

(assert (=> b!73669 (= c!10985 (and ((_ is Cons!1474) lt!32617) (not (= (_1!1072 (h!2061 lt!32617)) (_1!1072 lt!32538)))))))

(declare-fun b!73668 () Bool)

(assert (=> b!73668 (= e!48163 (Some!138 (_2!1072 (h!2061 lt!32617))))))

(declare-fun b!73671 () Bool)

(assert (=> b!73671 (= e!48164 None!137)))

(assert (= (and d!17029 c!10984) b!73668))

(assert (= (and d!17029 (not c!10984)) b!73669))

(assert (= (and b!73669 c!10985) b!73670))

(assert (= (and b!73669 (not c!10985)) b!73671))

(declare-fun m!72279 () Bool)

(assert (=> b!73670 m!72279))

(assert (=> d!16821 d!17029))

(declare-fun d!17031 () Bool)

(assert (=> d!17031 (= (getValueByKey!133 lt!32617 (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538)))))

(declare-fun lt!33125 () Unit!2078)

(assert (=> d!17031 (= lt!33125 (choose!412 lt!32617 (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(declare-fun e!48165 () Bool)

(assert (=> d!17031 e!48165))

(declare-fun res!39047 () Bool)

(assert (=> d!17031 (=> (not res!39047) (not e!48165))))

(assert (=> d!17031 (= res!39047 (isStrictlySorted!292 lt!32617))))

(assert (=> d!17031 (= (lemmaContainsTupThenGetReturnValue!50 lt!32617 (_1!1072 lt!32538) (_2!1072 lt!32538)) lt!33125)))

(declare-fun b!73672 () Bool)

(declare-fun res!39048 () Bool)

(assert (=> b!73672 (=> (not res!39048) (not e!48165))))

(assert (=> b!73672 (= res!39048 (containsKey!137 lt!32617 (_1!1072 lt!32538)))))

(declare-fun b!73673 () Bool)

(assert (=> b!73673 (= e!48165 (contains!724 lt!32617 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(assert (= (and d!17031 res!39047) b!73672))

(assert (= (and b!73672 res!39048) b!73673))

(assert (=> d!17031 m!71381))

(declare-fun m!72281 () Bool)

(assert (=> d!17031 m!72281))

(declare-fun m!72283 () Bool)

(assert (=> d!17031 m!72283))

(declare-fun m!72285 () Bool)

(assert (=> b!73672 m!72285))

(declare-fun m!72287 () Bool)

(assert (=> b!73673 m!72287))

(assert (=> d!16821 d!17031))

(declare-fun b!73674 () Bool)

(declare-fun e!48168 () List!1478)

(declare-fun call!6511 () List!1478)

(assert (=> b!73674 (= e!48168 call!6511)))

(declare-fun b!73675 () Bool)

(declare-fun e!48170 () List!1478)

(declare-fun call!6512 () List!1478)

(assert (=> b!73675 (= e!48170 call!6512)))

(declare-fun b!73676 () Bool)

(declare-fun e!48166 () List!1478)

(declare-fun call!6513 () List!1478)

(assert (=> b!73676 (= e!48166 call!6513)))

(declare-fun c!10987 () Bool)

(declare-fun c!10989 () Bool)

(declare-fun b!73677 () Bool)

(declare-fun e!48167 () List!1478)

(assert (=> b!73677 (= e!48167 (ite c!10989 (t!5035 (toList!725 lt!32540)) (ite c!10987 (Cons!1474 (h!2061 (toList!725 lt!32540)) (t!5035 (toList!725 lt!32540))) Nil!1475)))))

(declare-fun b!73678 () Bool)

(assert (=> b!73678 (= e!48166 e!48168)))

(assert (=> b!73678 (= c!10989 (and ((_ is Cons!1474) (toList!725 lt!32540)) (= (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 lt!32538))))))

(declare-fun bm!6508 () Bool)

(assert (=> bm!6508 (= call!6512 call!6511)))

(declare-fun c!10986 () Bool)

(declare-fun bm!6509 () Bool)

(assert (=> bm!6509 (= call!6513 ($colon$colon!66 e!48167 (ite c!10986 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538)))))))

(declare-fun c!10988 () Bool)

(assert (=> bm!6509 (= c!10988 c!10986)))

(declare-fun b!73679 () Bool)

(declare-fun res!39050 () Bool)

(declare-fun e!48169 () Bool)

(assert (=> b!73679 (=> (not res!39050) (not e!48169))))

(declare-fun lt!33126 () List!1478)

(assert (=> b!73679 (= res!39050 (containsKey!137 lt!33126 (_1!1072 lt!32538)))))

(declare-fun bm!6510 () Bool)

(assert (=> bm!6510 (= call!6511 call!6513)))

(declare-fun b!73680 () Bool)

(assert (=> b!73680 (= e!48169 (contains!724 lt!33126 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!73681 () Bool)

(assert (=> b!73681 (= e!48170 call!6512)))

(declare-fun b!73682 () Bool)

(assert (=> b!73682 (= e!48167 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32540)) (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(declare-fun b!73683 () Bool)

(assert (=> b!73683 (= c!10987 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 lt!32538))))))

(assert (=> b!73683 (= e!48168 e!48170)))

(declare-fun d!17033 () Bool)

(assert (=> d!17033 e!48169))

(declare-fun res!39049 () Bool)

(assert (=> d!17033 (=> (not res!39049) (not e!48169))))

(assert (=> d!17033 (= res!39049 (isStrictlySorted!292 lt!33126))))

(assert (=> d!17033 (= lt!33126 e!48166)))

(assert (=> d!17033 (= c!10986 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 lt!32538))))))

(assert (=> d!17033 (isStrictlySorted!292 (toList!725 lt!32540))))

(assert (=> d!17033 (= (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 lt!32538) (_2!1072 lt!32538)) lt!33126)))

(assert (= (and d!17033 c!10986) b!73676))

(assert (= (and d!17033 (not c!10986)) b!73678))

(assert (= (and b!73678 c!10989) b!73674))

(assert (= (and b!73678 (not c!10989)) b!73683))

(assert (= (and b!73683 c!10987) b!73681))

(assert (= (and b!73683 (not c!10987)) b!73675))

(assert (= (or b!73681 b!73675) bm!6508))

(assert (= (or b!73674 bm!6508) bm!6510))

(assert (= (or b!73676 bm!6510) bm!6509))

(assert (= (and bm!6509 c!10988) b!73682))

(assert (= (and bm!6509 (not c!10988)) b!73677))

(assert (= (and d!17033 res!39049) b!73679))

(assert (= (and b!73679 res!39050) b!73680))

(declare-fun m!72289 () Bool)

(assert (=> bm!6509 m!72289))

(declare-fun m!72291 () Bool)

(assert (=> b!73682 m!72291))

(declare-fun m!72293 () Bool)

(assert (=> b!73680 m!72293))

(declare-fun m!72295 () Bool)

(assert (=> d!17033 m!72295))

(declare-fun m!72297 () Bool)

(assert (=> d!17033 m!72297))

(declare-fun m!72299 () Bool)

(assert (=> b!73679 m!72299))

(assert (=> d!16821 d!17033))

(declare-fun d!17035 () Bool)

(declare-fun e!48172 () Bool)

(assert (=> d!17035 e!48172))

(declare-fun res!39051 () Bool)

(assert (=> d!17035 (=> res!39051 e!48172)))

(declare-fun lt!33130 () Bool)

(assert (=> d!17035 (= res!39051 (not lt!33130))))

(declare-fun lt!33129 () Bool)

(assert (=> d!17035 (= lt!33130 lt!33129)))

(declare-fun lt!33128 () Unit!2078)

(declare-fun e!48171 () Unit!2078)

(assert (=> d!17035 (= lt!33128 e!48171)))

(declare-fun c!10990 () Bool)

(assert (=> d!17035 (= c!10990 lt!33129)))

(assert (=> d!17035 (= lt!33129 (containsKey!137 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (=> d!17035 (= (contains!723 call!6442 (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))) lt!33130)))

(declare-fun b!73684 () Bool)

(declare-fun lt!33127 () Unit!2078)

(assert (=> b!73684 (= e!48171 lt!33127)))

(assert (=> b!73684 (= lt!33127 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (=> b!73684 (isDefined!86 (getValueByKey!133 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(declare-fun b!73685 () Bool)

(declare-fun Unit!2104 () Unit!2078)

(assert (=> b!73685 (= e!48171 Unit!2104)))

(declare-fun b!73686 () Bool)

(assert (=> b!73686 (= e!48172 (isDefined!86 (getValueByKey!133 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))))

(assert (= (and d!17035 c!10990) b!73684))

(assert (= (and d!17035 (not c!10990)) b!73685))

(assert (= (and d!17035 (not res!39051)) b!73686))

(assert (=> d!17035 m!71521))

(declare-fun m!72301 () Bool)

(assert (=> d!17035 m!72301))

(assert (=> b!73684 m!71521))

(declare-fun m!72303 () Bool)

(assert (=> b!73684 m!72303))

(assert (=> b!73684 m!71521))

(declare-fun m!72305 () Bool)

(assert (=> b!73684 m!72305))

(assert (=> b!73684 m!72305))

(declare-fun m!72307 () Bool)

(assert (=> b!73684 m!72307))

(assert (=> b!73686 m!71521))

(assert (=> b!73686 m!72305))

(assert (=> b!73686 m!72305))

(assert (=> b!73686 m!72307))

(assert (=> b!73206 d!17035))

(declare-fun d!17037 () Bool)

(declare-fun e!48175 () Bool)

(assert (=> d!17037 e!48175))

(declare-fun res!39054 () Bool)

(assert (=> d!17037 (=> (not res!39054) (not e!48175))))

(assert (=> d!17037 (= res!39054 (and (bvsge (index!3076 lt!32789) #b00000000000000000000000000000000) (bvslt (index!3076 lt!32789) (size!2097 (_keys!3865 newMap!16)))))))

(declare-fun lt!33133 () Unit!2078)

(declare-fun choose!420 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) Unit!2078)

(assert (=> d!17037 (= lt!33133 (choose!420 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (defaultEntry!2213 newMap!16)))))

(assert (=> d!17037 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17037 (= (lemmaValidKeyInArrayIsInListMap!85 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (defaultEntry!2213 newMap!16)) lt!33133)))

(declare-fun b!73689 () Bool)

(assert (=> b!73689 (= e!48175 (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (= (and d!17037 res!39054) b!73689))

(declare-fun m!72309 () Bool)

(assert (=> d!17037 m!72309))

(assert (=> d!17037 m!71705))

(declare-fun m!72311 () Bool)

(assert (=> b!73689 m!72311))

(assert (=> b!73689 m!71521))

(assert (=> b!73689 m!72311))

(assert (=> b!73689 m!71521))

(declare-fun m!72313 () Bool)

(assert (=> b!73689 m!72313))

(assert (=> b!73206 d!17037))

(declare-fun d!17039 () Bool)

(declare-fun e!48178 () Bool)

(assert (=> d!17039 e!48178))

(declare-fun res!39057 () Bool)

(assert (=> d!17039 (=> (not res!39057) (not e!48178))))

(assert (=> d!17039 (= res!39057 (and (bvsge (index!3076 lt!32789) #b00000000000000000000000000000000) (bvslt (index!3076 lt!32789) (size!2098 (_values!2196 newMap!16)))))))

(declare-fun lt!33136 () Unit!2078)

(declare-fun choose!421 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2078)

(assert (=> d!17039 (= lt!33136 (choose!421 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17039 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17039 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)) lt!33136)))

(declare-fun b!73692 () Bool)

(assert (=> b!73692 (= e!48178 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (getCurrentListMap!422 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))))))

(assert (= (and d!17039 res!39057) b!73692))

(assert (=> d!17039 m!71227))

(declare-fun m!72315 () Bool)

(assert (=> d!17039 m!72315))

(assert (=> d!17039 m!71705))

(assert (=> b!73692 m!71415))

(assert (=> b!73692 m!71415))

(assert (=> b!73692 m!72021))

(assert (=> b!73692 m!71509))

(declare-fun m!72317 () Bool)

(assert (=> b!73692 m!72317))

(assert (=> b!73206 d!17039))

(declare-fun d!17041 () Bool)

(declare-fun e!48180 () Bool)

(assert (=> d!17041 e!48180))

(declare-fun res!39058 () Bool)

(assert (=> d!17041 (=> res!39058 e!48180)))

(declare-fun lt!33140 () Bool)

(assert (=> d!17041 (= res!39058 (not lt!33140))))

(declare-fun lt!33139 () Bool)

(assert (=> d!17041 (= lt!33140 lt!33139)))

(declare-fun lt!33138 () Unit!2078)

(declare-fun e!48179 () Unit!2078)

(assert (=> d!17041 (= lt!33138 e!48179)))

(declare-fun c!10991 () Bool)

(assert (=> d!17041 (= c!10991 lt!33139)))

(assert (=> d!17041 (= lt!33139 (containsKey!137 (toList!725 lt!32614) (_1!1072 lt!32542)))))

(assert (=> d!17041 (= (contains!723 lt!32614 (_1!1072 lt!32542)) lt!33140)))

(declare-fun b!73693 () Bool)

(declare-fun lt!33137 () Unit!2078)

(assert (=> b!73693 (= e!48179 lt!33137)))

(assert (=> b!73693 (= lt!33137 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32614) (_1!1072 lt!32542)))))

(assert (=> b!73693 (isDefined!86 (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542)))))

(declare-fun b!73694 () Bool)

(declare-fun Unit!2105 () Unit!2078)

(assert (=> b!73694 (= e!48179 Unit!2105)))

(declare-fun b!73695 () Bool)

(assert (=> b!73695 (= e!48180 (isDefined!86 (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542))))))

(assert (= (and d!17041 c!10991) b!73693))

(assert (= (and d!17041 (not c!10991)) b!73694))

(assert (= (and d!17041 (not res!39058)) b!73695))

(declare-fun m!72319 () Bool)

(assert (=> d!17041 m!72319))

(declare-fun m!72321 () Bool)

(assert (=> b!73693 m!72321))

(assert (=> b!73693 m!71375))

(assert (=> b!73693 m!71375))

(declare-fun m!72323 () Bool)

(assert (=> b!73693 m!72323))

(assert (=> b!73695 m!71375))

(assert (=> b!73695 m!71375))

(assert (=> b!73695 m!72323))

(assert (=> d!16819 d!17041))

(declare-fun b!73698 () Bool)

(declare-fun e!48182 () Option!139)

(assert (=> b!73698 (= e!48182 (getValueByKey!133 (t!5035 lt!32613) (_1!1072 lt!32542)))))

(declare-fun d!17043 () Bool)

(declare-fun c!10992 () Bool)

(assert (=> d!17043 (= c!10992 (and ((_ is Cons!1474) lt!32613) (= (_1!1072 (h!2061 lt!32613)) (_1!1072 lt!32542))))))

(declare-fun e!48181 () Option!139)

(assert (=> d!17043 (= (getValueByKey!133 lt!32613 (_1!1072 lt!32542)) e!48181)))

(declare-fun b!73697 () Bool)

(assert (=> b!73697 (= e!48181 e!48182)))

(declare-fun c!10993 () Bool)

(assert (=> b!73697 (= c!10993 (and ((_ is Cons!1474) lt!32613) (not (= (_1!1072 (h!2061 lt!32613)) (_1!1072 lt!32542)))))))

(declare-fun b!73696 () Bool)

(assert (=> b!73696 (= e!48181 (Some!138 (_2!1072 (h!2061 lt!32613))))))

(declare-fun b!73699 () Bool)

(assert (=> b!73699 (= e!48182 None!137)))

(assert (= (and d!17043 c!10992) b!73696))

(assert (= (and d!17043 (not c!10992)) b!73697))

(assert (= (and b!73697 c!10993) b!73698))

(assert (= (and b!73697 (not c!10993)) b!73699))

(declare-fun m!72325 () Bool)

(assert (=> b!73698 m!72325))

(assert (=> d!16819 d!17043))

(declare-fun d!17045 () Bool)

(assert (=> d!17045 (= (getValueByKey!133 lt!32613 (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542)))))

(declare-fun lt!33141 () Unit!2078)

(assert (=> d!17045 (= lt!33141 (choose!412 lt!32613 (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun e!48183 () Bool)

(assert (=> d!17045 e!48183))

(declare-fun res!39059 () Bool)

(assert (=> d!17045 (=> (not res!39059) (not e!48183))))

(assert (=> d!17045 (= res!39059 (isStrictlySorted!292 lt!32613))))

(assert (=> d!17045 (= (lemmaContainsTupThenGetReturnValue!50 lt!32613 (_1!1072 lt!32542) (_2!1072 lt!32542)) lt!33141)))

(declare-fun b!73700 () Bool)

(declare-fun res!39060 () Bool)

(assert (=> b!73700 (=> (not res!39060) (not e!48183))))

(assert (=> b!73700 (= res!39060 (containsKey!137 lt!32613 (_1!1072 lt!32542)))))

(declare-fun b!73701 () Bool)

(assert (=> b!73701 (= e!48183 (contains!724 lt!32613 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(assert (= (and d!17045 res!39059) b!73700))

(assert (= (and b!73700 res!39060) b!73701))

(assert (=> d!17045 m!71369))

(declare-fun m!72327 () Bool)

(assert (=> d!17045 m!72327))

(declare-fun m!72329 () Bool)

(assert (=> d!17045 m!72329))

(declare-fun m!72331 () Bool)

(assert (=> b!73700 m!72331))

(declare-fun m!72333 () Bool)

(assert (=> b!73701 m!72333))

(assert (=> d!16819 d!17045))

(declare-fun b!73702 () Bool)

(declare-fun e!48186 () List!1478)

(declare-fun call!6514 () List!1478)

(assert (=> b!73702 (= e!48186 call!6514)))

(declare-fun b!73703 () Bool)

(declare-fun e!48188 () List!1478)

(declare-fun call!6515 () List!1478)

(assert (=> b!73703 (= e!48188 call!6515)))

(declare-fun b!73704 () Bool)

(declare-fun e!48184 () List!1478)

(declare-fun call!6516 () List!1478)

(assert (=> b!73704 (= e!48184 call!6516)))

(declare-fun c!10995 () Bool)

(declare-fun c!10997 () Bool)

(declare-fun e!48185 () List!1478)

(declare-fun b!73705 () Bool)

(assert (=> b!73705 (= e!48185 (ite c!10997 (t!5035 (toList!725 lt!32540)) (ite c!10995 (Cons!1474 (h!2061 (toList!725 lt!32540)) (t!5035 (toList!725 lt!32540))) Nil!1475)))))

(declare-fun b!73706 () Bool)

(assert (=> b!73706 (= e!48184 e!48186)))

(assert (=> b!73706 (= c!10997 (and ((_ is Cons!1474) (toList!725 lt!32540)) (= (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 lt!32542))))))

(declare-fun bm!6511 () Bool)

(assert (=> bm!6511 (= call!6515 call!6514)))

(declare-fun bm!6512 () Bool)

(declare-fun c!10994 () Bool)

(assert (=> bm!6512 (= call!6516 ($colon$colon!66 e!48185 (ite c!10994 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542)))))))

(declare-fun c!10996 () Bool)

(assert (=> bm!6512 (= c!10996 c!10994)))

(declare-fun b!73707 () Bool)

(declare-fun res!39062 () Bool)

(declare-fun e!48187 () Bool)

(assert (=> b!73707 (=> (not res!39062) (not e!48187))))

(declare-fun lt!33142 () List!1478)

(assert (=> b!73707 (= res!39062 (containsKey!137 lt!33142 (_1!1072 lt!32542)))))

(declare-fun bm!6513 () Bool)

(assert (=> bm!6513 (= call!6514 call!6516)))

(declare-fun b!73708 () Bool)

(assert (=> b!73708 (= e!48187 (contains!724 lt!33142 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!73709 () Bool)

(assert (=> b!73709 (= e!48188 call!6515)))

(declare-fun b!73710 () Bool)

(assert (=> b!73710 (= e!48185 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32540)) (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun b!73711 () Bool)

(assert (=> b!73711 (= c!10995 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 lt!32542))))))

(assert (=> b!73711 (= e!48186 e!48188)))

(declare-fun d!17047 () Bool)

(assert (=> d!17047 e!48187))

(declare-fun res!39061 () Bool)

(assert (=> d!17047 (=> (not res!39061) (not e!48187))))

(assert (=> d!17047 (= res!39061 (isStrictlySorted!292 lt!33142))))

(assert (=> d!17047 (= lt!33142 e!48184)))

(assert (=> d!17047 (= c!10994 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 lt!32542))))))

(assert (=> d!17047 (isStrictlySorted!292 (toList!725 lt!32540))))

(assert (=> d!17047 (= (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 lt!32542) (_2!1072 lt!32542)) lt!33142)))

(assert (= (and d!17047 c!10994) b!73704))

(assert (= (and d!17047 (not c!10994)) b!73706))

(assert (= (and b!73706 c!10997) b!73702))

(assert (= (and b!73706 (not c!10997)) b!73711))

(assert (= (and b!73711 c!10995) b!73709))

(assert (= (and b!73711 (not c!10995)) b!73703))

(assert (= (or b!73709 b!73703) bm!6511))

(assert (= (or b!73702 bm!6511) bm!6513))

(assert (= (or b!73704 bm!6513) bm!6512))

(assert (= (and bm!6512 c!10996) b!73710))

(assert (= (and bm!6512 (not c!10996)) b!73705))

(assert (= (and d!17047 res!39061) b!73707))

(assert (= (and b!73707 res!39062) b!73708))

(declare-fun m!72335 () Bool)

(assert (=> bm!6512 m!72335))

(declare-fun m!72337 () Bool)

(assert (=> b!73710 m!72337))

(declare-fun m!72339 () Bool)

(assert (=> b!73708 m!72339))

(declare-fun m!72341 () Bool)

(assert (=> d!17047 m!72341))

(assert (=> d!17047 m!72297))

(declare-fun m!72343 () Bool)

(assert (=> b!73707 m!72343))

(assert (=> d!16819 d!17047))

(assert (=> d!16831 d!16903))

(assert (=> b!72989 d!16975))

(declare-fun d!17049 () Bool)

(declare-fun e!48190 () Bool)

(assert (=> d!17049 e!48190))

(declare-fun res!39063 () Bool)

(assert (=> d!17049 (=> res!39063 e!48190)))

(declare-fun lt!33146 () Bool)

(assert (=> d!17049 (= res!39063 (not lt!33146))))

(declare-fun lt!33145 () Bool)

(assert (=> d!17049 (= lt!33146 lt!33145)))

(declare-fun lt!33144 () Unit!2078)

(declare-fun e!48189 () Unit!2078)

(assert (=> d!17049 (= lt!33144 e!48189)))

(declare-fun c!10998 () Bool)

(assert (=> d!17049 (= c!10998 lt!33145)))

(assert (=> d!17049 (= lt!33145 (containsKey!137 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17049 (= (contains!723 lt!32594 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33146)))

(declare-fun b!73712 () Bool)

(declare-fun lt!33143 () Unit!2078)

(assert (=> b!73712 (= e!48189 lt!33143)))

(assert (=> b!73712 (= lt!33143 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73712 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73713 () Bool)

(declare-fun Unit!2106 () Unit!2078)

(assert (=> b!73713 (= e!48189 Unit!2106)))

(declare-fun b!73714 () Bool)

(assert (=> b!73714 (= e!48190 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17049 c!10998) b!73712))

(assert (= (and d!17049 (not c!10998)) b!73713))

(assert (= (and d!17049 (not res!39063)) b!73714))

(declare-fun m!72345 () Bool)

(assert (=> d!17049 m!72345))

(declare-fun m!72347 () Bool)

(assert (=> b!73712 m!72347))

(declare-fun m!72349 () Bool)

(assert (=> b!73712 m!72349))

(assert (=> b!73712 m!72349))

(declare-fun m!72351 () Bool)

(assert (=> b!73712 m!72351))

(assert (=> b!73714 m!72349))

(assert (=> b!73714 m!72349))

(assert (=> b!73714 m!72351))

(assert (=> d!16815 d!17049))

(assert (=> d!16815 d!16823))

(assert (=> b!72979 d!16915))

(declare-fun d!17051 () Bool)

(assert (=> d!17051 (= (inRange!0 (ite c!10866 (ite c!10864 (index!3076 lt!32776) (ite c!10875 (index!3075 lt!32779) (index!3078 lt!32779))) (ite c!10868 (index!3076 lt!32771) (ite c!10874 (index!3075 lt!32783) (index!3078 lt!32783)))) (mask!6180 newMap!16)) (and (bvsge (ite c!10866 (ite c!10864 (index!3076 lt!32776) (ite c!10875 (index!3075 lt!32779) (index!3078 lt!32779))) (ite c!10868 (index!3076 lt!32771) (ite c!10874 (index!3075 lt!32783) (index!3078 lt!32783)))) #b00000000000000000000000000000000) (bvslt (ite c!10866 (ite c!10864 (index!3076 lt!32776) (ite c!10875 (index!3075 lt!32779) (index!3078 lt!32779))) (ite c!10868 (index!3076 lt!32771) (ite c!10874 (index!3075 lt!32783) (index!3078 lt!32783)))) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6444 d!17051))

(declare-fun d!17053 () Bool)

(assert (=> d!17053 (isDefined!86 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun lt!33149 () Unit!2078)

(declare-fun choose!422 (List!1478 (_ BitVec 64)) Unit!2078)

(assert (=> d!17053 (= lt!33149 (choose!422 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun e!48193 () Bool)

(assert (=> d!17053 e!48193))

(declare-fun res!39066 () Bool)

(assert (=> d!17053 (=> (not res!39066) (not e!48193))))

(assert (=> d!17053 (= res!39066 (isStrictlySorted!292 (toList!725 lt!32541)))))

(assert (=> d!17053 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33149)))

(declare-fun b!73717 () Bool)

(assert (=> b!73717 (= e!48193 (containsKey!137 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17053 res!39066) b!73717))

(assert (=> d!17053 m!71227))

(assert (=> d!17053 m!71493))

(assert (=> d!17053 m!71493))

(assert (=> d!17053 m!71495))

(assert (=> d!17053 m!71227))

(declare-fun m!72353 () Bool)

(assert (=> d!17053 m!72353))

(declare-fun m!72355 () Bool)

(assert (=> d!17053 m!72355))

(assert (=> b!73717 m!71227))

(assert (=> b!73717 m!71489))

(assert (=> b!73114 d!17053))

(assert (=> b!73114 d!16965))

(assert (=> b!73114 d!16967))

(assert (=> d!16833 d!16823))

(declare-fun b!73720 () Bool)

(declare-fun e!48195 () Option!139)

(assert (=> b!73720 (= e!48195 (getValueByKey!133 (t!5035 (toList!725 lt!32610)) (_1!1072 lt!32542)))))

(declare-fun d!17055 () Bool)

(declare-fun c!10999 () Bool)

(assert (=> d!17055 (= c!10999 (and ((_ is Cons!1474) (toList!725 lt!32610)) (= (_1!1072 (h!2061 (toList!725 lt!32610))) (_1!1072 lt!32542))))))

(declare-fun e!48194 () Option!139)

(assert (=> d!17055 (= (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542)) e!48194)))

(declare-fun b!73719 () Bool)

(assert (=> b!73719 (= e!48194 e!48195)))

(declare-fun c!11000 () Bool)

(assert (=> b!73719 (= c!11000 (and ((_ is Cons!1474) (toList!725 lt!32610)) (not (= (_1!1072 (h!2061 (toList!725 lt!32610))) (_1!1072 lt!32542)))))))

(declare-fun b!73718 () Bool)

(assert (=> b!73718 (= e!48194 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32610)))))))

(declare-fun b!73721 () Bool)

(assert (=> b!73721 (= e!48195 None!137)))

(assert (= (and d!17055 c!10999) b!73718))

(assert (= (and d!17055 (not c!10999)) b!73719))

(assert (= (and b!73719 c!11000) b!73720))

(assert (= (and b!73719 (not c!11000)) b!73721))

(declare-fun m!72357 () Bool)

(assert (=> b!73720 m!72357))

(assert (=> b!72995 d!17055))

(declare-fun d!17057 () Bool)

(declare-fun e!48196 () Bool)

(assert (=> d!17057 e!48196))

(declare-fun res!39067 () Bool)

(assert (=> d!17057 (=> (not res!39067) (not e!48196))))

(declare-fun lt!33152 () ListLongMap!1419)

(assert (=> d!17057 (= res!39067 (contains!723 lt!33152 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun lt!33151 () List!1478)

(assert (=> d!17057 (= lt!33152 (ListLongMap!1420 lt!33151))))

(declare-fun lt!33153 () Unit!2078)

(declare-fun lt!33150 () Unit!2078)

(assert (=> d!17057 (= lt!33153 lt!33150)))

(assert (=> d!17057 (= (getValueByKey!133 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (Some!138 (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17057 (= lt!33150 (lemmaContainsTupThenGetReturnValue!50 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17057 (= lt!33151 (insertStrictlySorted!53 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17057 (= (+!94 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33152)))

(declare-fun b!73722 () Bool)

(declare-fun res!39068 () Bool)

(assert (=> b!73722 (=> (not res!39068) (not e!48196))))

(assert (=> b!73722 (= res!39068 (= (getValueByKey!133 (toList!725 lt!33152) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (Some!138 (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73723 () Bool)

(assert (=> b!73723 (= e!48196 (contains!724 (toList!725 lt!33152) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (= (and d!17057 res!39067) b!73722))

(assert (= (and b!73722 res!39068) b!73723))

(declare-fun m!72359 () Bool)

(assert (=> d!17057 m!72359))

(declare-fun m!72361 () Bool)

(assert (=> d!17057 m!72361))

(declare-fun m!72363 () Bool)

(assert (=> d!17057 m!72363))

(declare-fun m!72365 () Bool)

(assert (=> d!17057 m!72365))

(declare-fun m!72367 () Bool)

(assert (=> b!73722 m!72367))

(declare-fun m!72369 () Bool)

(assert (=> b!73723 m!72369))

(assert (=> bm!6370 d!17057))

(assert (=> b!73105 d!16951))

(declare-fun d!17059 () Bool)

(assert (=> d!17059 (= (apply!75 lt!32681 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3164 () Bool)

(assert (= bs!3164 d!17059))

(assert (=> bs!3164 m!72079))

(assert (=> bs!3164 m!72079))

(declare-fun m!72371 () Bool)

(assert (=> bs!3164 m!72371))

(assert (=> b!73057 d!17059))

(declare-fun b!73725 () Bool)

(declare-fun e!48198 () Bool)

(assert (=> b!73725 (= e!48198 tp_is_empty!2475)))

(declare-fun mapNonEmpty!3183 () Bool)

(declare-fun mapRes!3183 () Bool)

(declare-fun tp!8547 () Bool)

(declare-fun e!48197 () Bool)

(assert (=> mapNonEmpty!3183 (= mapRes!3183 (and tp!8547 e!48197))))

(declare-fun mapValue!3183 () ValueCell!894)

(declare-fun mapRest!3183 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapKey!3183 () (_ BitVec 32))

(assert (=> mapNonEmpty!3183 (= mapRest!3181 (store mapRest!3183 mapKey!3183 mapValue!3183))))

(declare-fun condMapEmpty!3183 () Bool)

(declare-fun mapDefault!3183 () ValueCell!894)

(assert (=> mapNonEmpty!3181 (= condMapEmpty!3183 (= mapRest!3181 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3183)))))

(assert (=> mapNonEmpty!3181 (= tp!8545 (and e!48198 mapRes!3183))))

(declare-fun mapIsEmpty!3183 () Bool)

(assert (=> mapIsEmpty!3183 mapRes!3183))

(declare-fun b!73724 () Bool)

(assert (=> b!73724 (= e!48197 tp_is_empty!2475)))

(assert (= (and mapNonEmpty!3181 condMapEmpty!3183) mapIsEmpty!3183))

(assert (= (and mapNonEmpty!3181 (not condMapEmpty!3183)) mapNonEmpty!3183))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!894) mapValue!3183)) b!73724))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!894) mapDefault!3183)) b!73725))

(declare-fun m!72373 () Bool)

(assert (=> mapNonEmpty!3183 m!72373))

(declare-fun b!73727 () Bool)

(declare-fun e!48200 () Bool)

(assert (=> b!73727 (= e!48200 tp_is_empty!2475)))

(declare-fun mapNonEmpty!3184 () Bool)

(declare-fun mapRes!3184 () Bool)

(declare-fun tp!8548 () Bool)

(declare-fun e!48199 () Bool)

(assert (=> mapNonEmpty!3184 (= mapRes!3184 (and tp!8548 e!48199))))

(declare-fun mapValue!3184 () ValueCell!894)

(declare-fun mapKey!3184 () (_ BitVec 32))

(declare-fun mapRest!3184 () (Array (_ BitVec 32) ValueCell!894))

(assert (=> mapNonEmpty!3184 (= mapRest!3182 (store mapRest!3184 mapKey!3184 mapValue!3184))))

(declare-fun condMapEmpty!3184 () Bool)

(declare-fun mapDefault!3184 () ValueCell!894)

(assert (=> mapNonEmpty!3182 (= condMapEmpty!3184 (= mapRest!3182 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3184)))))

(assert (=> mapNonEmpty!3182 (= tp!8546 (and e!48200 mapRes!3184))))

(declare-fun mapIsEmpty!3184 () Bool)

(assert (=> mapIsEmpty!3184 mapRes!3184))

(declare-fun b!73726 () Bool)

(assert (=> b!73726 (= e!48199 tp_is_empty!2475)))

(assert (= (and mapNonEmpty!3182 condMapEmpty!3184) mapIsEmpty!3184))

(assert (= (and mapNonEmpty!3182 (not condMapEmpty!3184)) mapNonEmpty!3184))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!894) mapValue!3184)) b!73726))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!894) mapDefault!3184)) b!73727))

(declare-fun m!72375 () Bool)

(assert (=> mapNonEmpty!3184 m!72375))

(declare-fun b_lambda!3303 () Bool)

(assert (= b_lambda!3299 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3303)))

(declare-fun b_lambda!3305 () Bool)

(assert (= b_lambda!3301 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3305)))

(declare-fun b_lambda!3307 () Bool)

(assert (= b_lambda!3297 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3307)))

(declare-fun b_lambda!3309 () Bool)

(assert (= b_lambda!3293 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3309)))

(declare-fun b_lambda!3311 () Bool)

(assert (= b_lambda!3295 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3311)))

(check-sat (not b!73444) (not b!73287) (not b!73476) (not b!73655) (not b!73279) (not b!73305) (not d!16923) (not d!17025) (not b!73255) (not b!73489) (not b!73659) (not d!17027) (not d!17049) (not b!73418) (not d!16983) (not b!73354) (not b!73658) (not b!73321) (not b!73379) (not bm!6485) (not b!73276) (not d!16941) (not d!17005) (not b!73415) (not d!17037) (not b!73667) (not d!17001) (not d!16925) (not d!16919) (not b!73481) (not d!16891) (not d!17057) (not b!73664) (not b!73592) (not d!16879) (not b!73458) (not b!73698) (not d!16921) (not d!16871) (not d!16929) (not bm!6448) (not bm!6472) (not d!17045) (not b!73390) (not b!73495) (not b!73684) (not d!17021) (not d!16897) (not b!73689) (not bm!6494) (not b!73611) (not d!16947) (not b!73417) (not b!73490) (not b!73275) (not b!73423) (not b!73693) (not bm!6464) (not b!73720) (not bm!6479) (not bm!6465) (not b!73672) (not d!16969) (not b!73549) (not b!73613) (not d!17009) (not b!73649) (not bm!6483) (not d!16863) (not bm!6506) (not b!73282) (not b!73561) (not d!16959) (not b!73473) (not b!73599) (not bm!6497) (not b!73491) (not b!73723) (not d!17015) (not b!73479) (not d!16907) (not d!16935) (not b!73701) (not b!73378) (not b!73450) (not bm!6501) (not b!73455) (not b!73680) (not d!16875) (not bm!6462) (not b_lambda!3287) (not mapNonEmpty!3183) (not b!73557) (not d!17059) (not b!73327) (not d!16927) (not d!16945) (not d!16961) (not b!73377) (not b!73594) (not b!73258) (not bm!6507) (not b!73673) (not b!73605) (not b!73265) (not b!73648) (not b!73286) (not d!16865) (not d!16913) (not b!73425) (not b!73601) (not b!73447) (not d!16939) (not bm!6459) (not b!73376) (not bm!6476) (not bm!6471) (not b!73616) (not b_next!2117) (not b!73501) (not b!73421) (not b!73679) (not d!17035) (not b!73717) (not b!73595) (not d!16931) (not b!73452) (not d!17041) (not d!16867) (not b!73503) (not b!73304) (not b!73308) (not b!73385) (not d!16997) (not b!73424) (not b!73700) (not d!17019) (not b!73598) (not b!73442) (not b!73608) (not b!73695) (not d!16987) (not bm!6466) (not d!16877) (not b!73559) (not b!73507) (not b!73288) (not b_lambda!3307) (not b!73453) (not b!73661) (not b!73614) (not b!73551) (not b!73662) (not b!73307) (not b!73382) (not b!73570) (not b!73443) (not b!73278) (not d!16885) (not b!73368) (not b!73289) (not d!16993) (not b!73612) (not d!17013) (not b!73714) (not d!16889) (not d!17053) (not bm!6509) (not d!17011) (not bm!6473) (not b!73259) (not b!73710) (not b!73416) (not bm!6500) (not b!73441) (not d!16955) (not d!16981) (not b!73707) (not d!16899) (not bm!6451) (not d!17033) (not b!73712) (not b_lambda!3303) (not b!73366) (not b_lambda!3291) (not d!16881) (not b!73504) b_and!4519 (not b!73686) (not d!17047) (not d!16869) (not b!73281) (not bm!6481) (not d!17031) b_and!4521 (not b!73498) (not b!73269) (not b!73310) tp_is_empty!2475 (not d!16895) (not d!16943) (not b!73665) (not b!73422) (not b!73477) (not b!73427) (not bm!6469) (not b!73363) (not mapNonEmpty!3184) (not b!73284) (not d!16977) (not d!16971) (not b!73500) (not b!73461) (not b!73302) (not b_lambda!3289) (not b!73670) (not b!73646) (not b!73552) (not d!16933) (not d!16917) (not b!73433) (not d!16991) (not b_next!2119) (not b!73588) (not b!73268) (not b!73587) (not b!73692) (not b_lambda!3309) (not b!73456) (not bm!6512) (not b!73464) (not d!17017) (not d!16975) (not b!73285) (not b!73454) (not d!16989) (not d!16965) (not b!73471) (not b!73355) (not d!16999) (not b!73267) (not b_lambda!3311) (not d!16873) (not bm!6495) (not b!73492) (not d!17023) (not b!73553) (not b_lambda!3305) (not b!73357) (not d!17007) (not b!73290) (not d!16957) (not b!73256) (not b!73387) (not b!73708) (not b!73682) (not d!17039) (not b!73660) (not b!73722) (not b!73463) (not d!17003) (not b!73604) (not b!73420) (not b!73470) (not b!73283) (not b!73253) (not d!16995) (not b!73291) (not b!73328) (not bm!6482) (not b!73576) (not b_lambda!3279) (not b!73406) (not b!73656) (not d!16903) (not d!16857) (not b!73546) (not b!73596) (not b!73573))
(check-sat b_and!4519 b_and!4521 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun d!17061 () Bool)

(assert (=> d!17061 (= (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73259 d!17061))

(declare-fun e!48202 () Option!139)

(declare-fun b!73730 () Bool)

(assert (=> b!73730 (= e!48202 (getValueByKey!133 (t!5035 (toList!725 lt!33078)) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun c!11001 () Bool)

(declare-fun d!17063 () Bool)

(assert (=> d!17063 (= c!11001 (and ((_ is Cons!1474) (toList!725 lt!33078)) (= (_1!1072 (h!2061 (toList!725 lt!33078))) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun e!48201 () Option!139)

(assert (=> d!17063 (= (getValueByKey!133 (toList!725 lt!33078) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) e!48201)))

(declare-fun b!73729 () Bool)

(assert (=> b!73729 (= e!48201 e!48202)))

(declare-fun c!11002 () Bool)

(assert (=> b!73729 (= c!11002 (and ((_ is Cons!1474) (toList!725 lt!33078)) (not (= (_1!1072 (h!2061 (toList!725 lt!33078))) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))))

(declare-fun b!73728 () Bool)

(assert (=> b!73728 (= e!48201 (Some!138 (_2!1072 (h!2061 (toList!725 lt!33078)))))))

(declare-fun b!73731 () Bool)

(assert (=> b!73731 (= e!48202 None!137)))

(assert (= (and d!17063 c!11001) b!73728))

(assert (= (and d!17063 (not c!11001)) b!73729))

(assert (= (and b!73729 c!11002) b!73730))

(assert (= (and b!73729 (not c!11002)) b!73731))

(declare-fun m!72377 () Bool)

(assert (=> b!73730 m!72377))

(assert (=> b!73612 d!17063))

(declare-fun b!73750 () Bool)

(declare-fun lt!33159 () SeekEntryResult!236)

(assert (=> b!73750 (and (bvsge (index!3077 lt!33159) #b00000000000000000000000000000000) (bvslt (index!3077 lt!33159) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun res!39075 () Bool)

(assert (=> b!73750 (= res!39075 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3077 lt!33159)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48214 () Bool)

(assert (=> b!73750 (=> res!39075 e!48214)))

(declare-fun d!17065 () Bool)

(declare-fun e!48215 () Bool)

(assert (=> d!17065 e!48215))

(declare-fun c!11011 () Bool)

(assert (=> d!17065 (= c!11011 (and ((_ is Intermediate!236) lt!33159) (undefined!1048 lt!33159)))))

(declare-fun e!48213 () SeekEntryResult!236)

(assert (=> d!17065 (= lt!33159 e!48213)))

(declare-fun c!11009 () Bool)

(assert (=> d!17065 (= c!11009 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!33158 () (_ BitVec 64))

(assert (=> d!17065 (= lt!33158 (select (arr!1859 (_keys!3865 newMap!16)) (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16))))))

(assert (=> d!17065 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17065 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!33159)))

(declare-fun e!48217 () SeekEntryResult!236)

(declare-fun b!73751 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73751 (= e!48217 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16)) #b00000000000000000000000000000000 (mask!6180 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73752 () Bool)

(assert (=> b!73752 (= e!48213 e!48217)))

(declare-fun c!11010 () Bool)

(assert (=> b!73752 (= c!11010 (or (= lt!33158 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (= (bvadd lt!33158 lt!33158) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73753 () Bool)

(assert (=> b!73753 (= e!48213 (Intermediate!236 true (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!73754 () Bool)

(assert (=> b!73754 (and (bvsge (index!3077 lt!33159) #b00000000000000000000000000000000) (bvslt (index!3077 lt!33159) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun res!39076 () Bool)

(assert (=> b!73754 (= res!39076 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3077 lt!33159)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!73754 (=> res!39076 e!48214)))

(declare-fun e!48216 () Bool)

(assert (=> b!73754 (= e!48216 e!48214)))

(declare-fun b!73755 () Bool)

(assert (=> b!73755 (= e!48215 e!48216)))

(declare-fun res!39077 () Bool)

(assert (=> b!73755 (= res!39077 (and ((_ is Intermediate!236) lt!33159) (not (undefined!1048 lt!33159)) (bvslt (x!11152 lt!33159) #b01111111111111111111111111111110) (bvsge (x!11152 lt!33159) #b00000000000000000000000000000000) (bvsge (x!11152 lt!33159) #b00000000000000000000000000000000)))))

(assert (=> b!73755 (=> (not res!39077) (not e!48216))))

(declare-fun b!73756 () Bool)

(assert (=> b!73756 (= e!48217 (Intermediate!236 false (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!73757 () Bool)

(assert (=> b!73757 (and (bvsge (index!3077 lt!33159) #b00000000000000000000000000000000) (bvslt (index!3077 lt!33159) (size!2097 (_keys!3865 newMap!16))))))

(assert (=> b!73757 (= e!48214 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3077 lt!33159)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73758 () Bool)

(assert (=> b!73758 (= e!48215 (bvsge (x!11152 lt!33159) #b01111111111111111111111111111110))))

(assert (= (and d!17065 c!11009) b!73753))

(assert (= (and d!17065 (not c!11009)) b!73752))

(assert (= (and b!73752 c!11010) b!73756))

(assert (= (and b!73752 (not c!11010)) b!73751))

(assert (= (and d!17065 c!11011) b!73758))

(assert (= (and d!17065 (not c!11011)) b!73755))

(assert (= (and b!73755 res!39077) b!73754))

(assert (= (and b!73754 (not res!39076)) b!73750))

(assert (= (and b!73750 (not res!39075)) b!73757))

(declare-fun m!72379 () Bool)

(assert (=> b!73754 m!72379))

(assert (=> b!73750 m!72379))

(assert (=> b!73757 m!72379))

(assert (=> d!17065 m!71775))

(declare-fun m!72381 () Bool)

(assert (=> d!17065 m!72381))

(assert (=> d!17065 m!71705))

(assert (=> b!73751 m!71775))

(declare-fun m!72383 () Bool)

(assert (=> b!73751 m!72383))

(assert (=> b!73751 m!72383))

(assert (=> b!73751 m!71227))

(declare-fun m!72385 () Bool)

(assert (=> b!73751 m!72385))

(assert (=> d!16907 d!17065))

(declare-fun d!17067 () Bool)

(declare-fun lt!33165 () (_ BitVec 32))

(declare-fun lt!33164 () (_ BitVec 32))

(assert (=> d!17067 (= lt!33165 (bvmul (bvxor lt!33164 (bvlshr lt!33164 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!17067 (= lt!33164 ((_ extract 31 0) (bvand (bvxor (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvlshr (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!17067 (and (bvsge (mask!6180 newMap!16) #b00000000000000000000000000000000) (let ((res!39078 (let ((h!2063 ((_ extract 31 0) (bvand (bvxor (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvlshr (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11254 (bvmul (bvxor h!2063 (bvlshr h!2063 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11254 (bvlshr x!11254 #b00000000000000000000000000001101)) (mask!6180 newMap!16)))))) (and (bvslt res!39078 (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001)) (bvsge res!39078 #b00000000000000000000000000000000))))))

(assert (=> d!17067 (= (toIndex!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (mask!6180 newMap!16)) (bvand (bvxor lt!33165 (bvlshr lt!33165 #b00000000000000000000000000001101)) (mask!6180 newMap!16)))))

(assert (=> d!16907 d!17067))

(declare-fun d!17069 () Bool)

(assert (=> d!17069 (= (validMask!0 (mask!6180 newMap!16)) (and (or (= (mask!6180 newMap!16) #b00000000000000000000000000000111) (= (mask!6180 newMap!16) #b00000000000000000000000000001111) (= (mask!6180 newMap!16) #b00000000000000000000000000011111) (= (mask!6180 newMap!16) #b00000000000000000000000000111111) (= (mask!6180 newMap!16) #b00000000000000000000000001111111) (= (mask!6180 newMap!16) #b00000000000000000000000011111111) (= (mask!6180 newMap!16) #b00000000000000000000000111111111) (= (mask!6180 newMap!16) #b00000000000000000000001111111111) (= (mask!6180 newMap!16) #b00000000000000000000011111111111) (= (mask!6180 newMap!16) #b00000000000000000000111111111111) (= (mask!6180 newMap!16) #b00000000000000000001111111111111) (= (mask!6180 newMap!16) #b00000000000000000011111111111111) (= (mask!6180 newMap!16) #b00000000000000000111111111111111) (= (mask!6180 newMap!16) #b00000000000000001111111111111111) (= (mask!6180 newMap!16) #b00000000000000011111111111111111) (= (mask!6180 newMap!16) #b00000000000000111111111111111111) (= (mask!6180 newMap!16) #b00000000000001111111111111111111) (= (mask!6180 newMap!16) #b00000000000011111111111111111111) (= (mask!6180 newMap!16) #b00000000000111111111111111111111) (= (mask!6180 newMap!16) #b00000000001111111111111111111111) (= (mask!6180 newMap!16) #b00000000011111111111111111111111) (= (mask!6180 newMap!16) #b00000000111111111111111111111111) (= (mask!6180 newMap!16) #b00000001111111111111111111111111) (= (mask!6180 newMap!16) #b00000011111111111111111111111111) (= (mask!6180 newMap!16) #b00000111111111111111111111111111) (= (mask!6180 newMap!16) #b00001111111111111111111111111111) (= (mask!6180 newMap!16) #b00011111111111111111111111111111) (= (mask!6180 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6180 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!16907 d!17069))

(declare-fun d!17071 () Bool)

(assert (=> d!17071 (= (isEmpty!316 lt!33069) (isEmpty!318 (toList!725 lt!33069)))))

(declare-fun bs!3165 () Bool)

(assert (= bs!3165 d!17071))

(declare-fun m!72387 () Bool)

(assert (=> bs!3165 m!72387))

(assert (=> b!73601 d!17071))

(declare-fun d!17073 () Bool)

(assert (=> d!17073 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33166 () Unit!2078)

(assert (=> d!17073 (= lt!33166 (choose!422 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48218 () Bool)

(assert (=> d!17073 e!48218))

(declare-fun res!39079 () Bool)

(assert (=> d!17073 (=> (not res!39079) (not e!48218))))

(assert (=> d!17073 (= res!39079 (isStrictlySorted!292 (toList!725 lt!32681)))))

(assert (=> d!17073 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33166)))

(declare-fun b!73759 () Bool)

(assert (=> b!73759 (= e!48218 (containsKey!137 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17073 res!39079) b!73759))

(assert (=> d!17073 m!72079))

(assert (=> d!17073 m!72079))

(assert (=> d!17073 m!72081))

(declare-fun m!72389 () Bool)

(assert (=> d!17073 m!72389))

(declare-fun m!72391 () Bool)

(assert (=> d!17073 m!72391))

(assert (=> b!73759 m!72075))

(assert (=> b!73559 d!17073))

(declare-fun d!17075 () Bool)

(assert (=> d!17075 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3166 () Bool)

(assert (= bs!3166 d!17075))

(assert (=> bs!3166 m!72079))

(declare-fun m!72393 () Bool)

(assert (=> bs!3166 m!72393))

(assert (=> b!73559 d!17075))

(declare-fun b!73762 () Bool)

(declare-fun e!48220 () Option!139)

(assert (=> b!73762 (= e!48220 (getValueByKey!133 (t!5035 (toList!725 lt!32681)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17077 () Bool)

(declare-fun c!11012 () Bool)

(assert (=> d!17077 (= c!11012 (and ((_ is Cons!1474) (toList!725 lt!32681)) (= (_1!1072 (h!2061 (toList!725 lt!32681))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48219 () Option!139)

(assert (=> d!17077 (= (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000) e!48219)))

(declare-fun b!73761 () Bool)

(assert (=> b!73761 (= e!48219 e!48220)))

(declare-fun c!11013 () Bool)

(assert (=> b!73761 (= c!11013 (and ((_ is Cons!1474) (toList!725 lt!32681)) (not (= (_1!1072 (h!2061 (toList!725 lt!32681))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73760 () Bool)

(assert (=> b!73760 (= e!48219 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32681)))))))

(declare-fun b!73763 () Bool)

(assert (=> b!73763 (= e!48220 None!137)))

(assert (= (and d!17077 c!11012) b!73760))

(assert (= (and d!17077 (not c!11012)) b!73761))

(assert (= (and b!73761 c!11013) b!73762))

(assert (= (and b!73761 (not c!11013)) b!73763))

(declare-fun m!72395 () Bool)

(assert (=> b!73762 m!72395))

(assert (=> b!73559 d!17077))

(declare-fun d!17079 () Bool)

(declare-fun e!48222 () Bool)

(assert (=> d!17079 e!48222))

(declare-fun res!39080 () Bool)

(assert (=> d!17079 (=> res!39080 e!48222)))

(declare-fun lt!33170 () Bool)

(assert (=> d!17079 (= res!39080 (not lt!33170))))

(declare-fun lt!33169 () Bool)

(assert (=> d!17079 (= lt!33170 lt!33169)))

(declare-fun lt!33168 () Unit!2078)

(declare-fun e!48221 () Unit!2078)

(assert (=> d!17079 (= lt!33168 e!48221)))

(declare-fun c!11014 () Bool)

(assert (=> d!17079 (= c!11014 lt!33169)))

(assert (=> d!17079 (= lt!33169 (containsKey!137 (toList!725 lt!32816) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17079 (= (contains!723 lt!32816 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33170)))

(declare-fun b!73764 () Bool)

(declare-fun lt!33167 () Unit!2078)

(assert (=> b!73764 (= e!48221 lt!33167)))

(assert (=> b!73764 (= lt!33167 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32816) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!73764 (isDefined!86 (getValueByKey!133 (toList!725 lt!32816) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73765 () Bool)

(declare-fun Unit!2107 () Unit!2078)

(assert (=> b!73765 (= e!48221 Unit!2107)))

(declare-fun b!73766 () Bool)

(assert (=> b!73766 (= e!48222 (isDefined!86 (getValueByKey!133 (toList!725 lt!32816) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17079 c!11014) b!73764))

(assert (= (and d!17079 (not c!11014)) b!73765))

(assert (= (and d!17079 (not res!39080)) b!73766))

(declare-fun m!72397 () Bool)

(assert (=> d!17079 m!72397))

(declare-fun m!72399 () Bool)

(assert (=> b!73764 m!72399))

(assert (=> b!73764 m!71621))

(assert (=> b!73764 m!71621))

(declare-fun m!72401 () Bool)

(assert (=> b!73764 m!72401))

(assert (=> b!73766 m!71621))

(assert (=> b!73766 m!71621))

(assert (=> b!73766 m!72401))

(assert (=> d!16875 d!17079))

(declare-fun b!73769 () Bool)

(declare-fun e!48224 () Option!139)

(assert (=> b!73769 (= e!48224 (getValueByKey!133 (t!5035 lt!32815) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17081 () Bool)

(declare-fun c!11015 () Bool)

(assert (=> d!17081 (= c!11015 (and ((_ is Cons!1474) lt!32815) (= (_1!1072 (h!2061 lt!32815)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48223 () Option!139)

(assert (=> d!17081 (= (getValueByKey!133 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48223)))

(declare-fun b!73768 () Bool)

(assert (=> b!73768 (= e!48223 e!48224)))

(declare-fun c!11016 () Bool)

(assert (=> b!73768 (= c!11016 (and ((_ is Cons!1474) lt!32815) (not (= (_1!1072 (h!2061 lt!32815)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73767 () Bool)

(assert (=> b!73767 (= e!48223 (Some!138 (_2!1072 (h!2061 lt!32815))))))

(declare-fun b!73770 () Bool)

(assert (=> b!73770 (= e!48224 None!137)))

(assert (= (and d!17081 c!11015) b!73767))

(assert (= (and d!17081 (not c!11015)) b!73768))

(assert (= (and b!73768 c!11016) b!73769))

(assert (= (and b!73768 (not c!11016)) b!73770))

(declare-fun m!72403 () Bool)

(assert (=> b!73769 m!72403))

(assert (=> d!16875 d!17081))

(declare-fun d!17083 () Bool)

(assert (=> d!17083 (= (getValueByKey!133 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33171 () Unit!2078)

(assert (=> d!17083 (= lt!33171 (choose!412 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48225 () Bool)

(assert (=> d!17083 e!48225))

(declare-fun res!39081 () Bool)

(assert (=> d!17083 (=> (not res!39081) (not e!48225))))

(assert (=> d!17083 (= res!39081 (isStrictlySorted!292 lt!32815))))

(assert (=> d!17083 (= (lemmaContainsTupThenGetReturnValue!50 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33171)))

(declare-fun b!73771 () Bool)

(declare-fun res!39082 () Bool)

(assert (=> b!73771 (=> (not res!39082) (not e!48225))))

(assert (=> b!73771 (= res!39082 (containsKey!137 lt!32815 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73772 () Bool)

(assert (=> b!73772 (= e!48225 (contains!724 lt!32815 (tuple2!2123 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17083 res!39081) b!73771))

(assert (= (and b!73771 res!39082) b!73772))

(assert (=> d!17083 m!71615))

(declare-fun m!72405 () Bool)

(assert (=> d!17083 m!72405))

(declare-fun m!72407 () Bool)

(assert (=> d!17083 m!72407))

(declare-fun m!72409 () Bool)

(assert (=> b!73771 m!72409))

(declare-fun m!72411 () Bool)

(assert (=> b!73772 m!72411))

(assert (=> d!16875 d!17083))

(declare-fun b!73773 () Bool)

(declare-fun e!48228 () List!1478)

(declare-fun call!6517 () List!1478)

(assert (=> b!73773 (= e!48228 call!6517)))

(declare-fun b!73774 () Bool)

(declare-fun e!48230 () List!1478)

(declare-fun call!6518 () List!1478)

(assert (=> b!73774 (= e!48230 call!6518)))

(declare-fun b!73775 () Bool)

(declare-fun e!48226 () List!1478)

(declare-fun call!6519 () List!1478)

(assert (=> b!73775 (= e!48226 call!6519)))

(declare-fun c!11018 () Bool)

(declare-fun c!11020 () Bool)

(declare-fun e!48227 () List!1478)

(declare-fun b!73776 () Bool)

(assert (=> b!73776 (= e!48227 (ite c!11020 (t!5035 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (ite c!11018 (Cons!1474 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (t!5035 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))) Nil!1475)))))

(declare-fun b!73777 () Bool)

(assert (=> b!73777 (= e!48226 e!48228)))

(assert (=> b!73777 (= c!11020 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6514 () Bool)

(assert (=> bm!6514 (= call!6518 call!6517)))

(declare-fun c!11017 () Bool)

(declare-fun bm!6515 () Bool)

(assert (=> bm!6515 (= call!6519 ($colon$colon!66 e!48227 (ite c!11017 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (tuple2!2123 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11019 () Bool)

(assert (=> bm!6515 (= c!11019 c!11017)))

(declare-fun b!73778 () Bool)

(declare-fun res!39084 () Bool)

(declare-fun e!48229 () Bool)

(assert (=> b!73778 (=> (not res!39084) (not e!48229))))

(declare-fun lt!33172 () List!1478)

(assert (=> b!73778 (= res!39084 (containsKey!137 lt!33172 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6516 () Bool)

(assert (=> bm!6516 (= call!6517 call!6519)))

(declare-fun b!73779 () Bool)

(assert (=> b!73779 (= e!48229 (contains!724 lt!33172 (tuple2!2123 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73780 () Bool)

(assert (=> b!73780 (= e!48230 call!6518)))

(declare-fun b!73781 () Bool)

(assert (=> b!73781 (= e!48227 (insertStrictlySorted!53 (t!5035 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73782 () Bool)

(assert (=> b!73782 (= c!11018 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (bvsgt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!73782 (= e!48228 e!48230)))

(declare-fun d!17085 () Bool)

(assert (=> d!17085 e!48229))

(declare-fun res!39083 () Bool)

(assert (=> d!17085 (=> (not res!39083) (not e!48229))))

(assert (=> d!17085 (= res!39083 (isStrictlySorted!292 lt!33172))))

(assert (=> d!17085 (= lt!33172 e!48226)))

(assert (=> d!17085 (= c!11017 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17085 (isStrictlySorted!292 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17085 (= (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33172)))

(assert (= (and d!17085 c!11017) b!73775))

(assert (= (and d!17085 (not c!11017)) b!73777))

(assert (= (and b!73777 c!11020) b!73773))

(assert (= (and b!73777 (not c!11020)) b!73782))

(assert (= (and b!73782 c!11018) b!73780))

(assert (= (and b!73782 (not c!11018)) b!73774))

(assert (= (or b!73780 b!73774) bm!6514))

(assert (= (or b!73773 bm!6514) bm!6516))

(assert (= (or b!73775 bm!6516) bm!6515))

(assert (= (and bm!6515 c!11019) b!73781))

(assert (= (and bm!6515 (not c!11019)) b!73776))

(assert (= (and d!17085 res!39083) b!73778))

(assert (= (and b!73778 res!39084) b!73779))

(declare-fun m!72413 () Bool)

(assert (=> bm!6515 m!72413))

(declare-fun m!72415 () Bool)

(assert (=> b!73781 m!72415))

(declare-fun m!72417 () Bool)

(assert (=> b!73779 m!72417))

(declare-fun m!72419 () Bool)

(assert (=> d!17085 m!72419))

(declare-fun m!72421 () Bool)

(assert (=> d!17085 m!72421))

(declare-fun m!72423 () Bool)

(assert (=> b!73778 m!72423))

(assert (=> d!16875 d!17085))

(declare-fun b!73783 () Bool)

(declare-fun e!48234 () Bool)

(declare-fun e!48236 () Bool)

(assert (=> b!73783 (= e!48234 e!48236)))

(declare-fun res!39087 () Bool)

(declare-fun call!6525 () Bool)

(assert (=> b!73783 (= res!39087 call!6525)))

(assert (=> b!73783 (=> (not res!39087) (not e!48236))))

(declare-fun b!73784 () Bool)

(declare-fun e!48237 () Bool)

(assert (=> b!73784 (= e!48237 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73785 () Bool)

(declare-fun c!11026 () Bool)

(assert (=> b!73785 (= c!11026 (and (not (= (bvand lt!32768 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32768 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48241 () ListLongMap!1419)

(declare-fun e!48243 () ListLongMap!1419)

(assert (=> b!73785 (= e!48241 e!48243)))

(declare-fun bm!6517 () Bool)

(declare-fun call!6520 () ListLongMap!1419)

(declare-fun call!6523 () ListLongMap!1419)

(assert (=> bm!6517 (= call!6520 call!6523)))

(declare-fun b!73786 () Bool)

(declare-fun res!39088 () Bool)

(declare-fun e!48231 () Bool)

(assert (=> b!73786 (=> (not res!39088) (not e!48231))))

(declare-fun e!48232 () Bool)

(assert (=> b!73786 (= res!39088 e!48232)))

(declare-fun res!39093 () Bool)

(assert (=> b!73786 (=> res!39093 e!48232)))

(assert (=> b!73786 (= res!39093 (not e!48237))))

(declare-fun res!39091 () Bool)

(assert (=> b!73786 (=> (not res!39091) (not e!48237))))

(assert (=> b!73786 (= res!39091 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6518 () Bool)

(declare-fun call!6521 () Bool)

(declare-fun lt!33183 () ListLongMap!1419)

(assert (=> bm!6518 (= call!6521 (contains!723 lt!33183 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73787 () Bool)

(declare-fun res!39085 () Bool)

(assert (=> b!73787 (=> (not res!39085) (not e!48231))))

(assert (=> b!73787 (= res!39085 e!48234)))

(declare-fun c!11024 () Bool)

(assert (=> b!73787 (= c!11024 (not (= (bvand lt!32768 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6519 () Bool)

(declare-fun call!6526 () ListLongMap!1419)

(declare-fun call!6524 () ListLongMap!1419)

(assert (=> bm!6519 (= call!6526 call!6524)))

(declare-fun b!73788 () Bool)

(declare-fun e!48233 () Unit!2078)

(declare-fun Unit!2108 () Unit!2078)

(assert (=> b!73788 (= e!48233 Unit!2108)))

(declare-fun b!73789 () Bool)

(declare-fun e!48238 () Bool)

(assert (=> b!73789 (= e!48231 e!48238)))

(declare-fun c!11022 () Bool)

(assert (=> b!73789 (= c!11022 (not (= (bvand lt!32768 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73790 () Bool)

(assert (=> b!73790 (= e!48243 call!6526)))

(declare-fun call!6522 () ListLongMap!1419)

(declare-fun bm!6520 () Bool)

(assert (=> bm!6520 (= call!6522 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73791 () Bool)

(assert (=> b!73791 (= e!48238 (not call!6521))))

(declare-fun b!73792 () Bool)

(declare-fun e!48235 () ListLongMap!1419)

(assert (=> b!73792 (= e!48235 (+!94 call!6524 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!73793 () Bool)

(declare-fun lt!33179 () Unit!2078)

(assert (=> b!73793 (= e!48233 lt!33179)))

(declare-fun lt!33173 () ListLongMap!1419)

(assert (=> b!73793 (= lt!33173 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33192 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33192 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33175 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33175 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33188 () Unit!2078)

(assert (=> b!73793 (= lt!33188 (addStillContains!51 lt!33173 lt!33192 lt!32533 lt!33175))))

(assert (=> b!73793 (contains!723 (+!94 lt!33173 (tuple2!2123 lt!33192 lt!32533)) lt!33175)))

(declare-fun lt!33178 () Unit!2078)

(assert (=> b!73793 (= lt!33178 lt!33188)))

(declare-fun lt!33176 () ListLongMap!1419)

(assert (=> b!73793 (= lt!33176 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33181 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33181 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33180 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33180 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33174 () Unit!2078)

(assert (=> b!73793 (= lt!33174 (addApplyDifferent!51 lt!33176 lt!33181 (minValue!2115 newMap!16) lt!33180))))

(assert (=> b!73793 (= (apply!75 (+!94 lt!33176 (tuple2!2123 lt!33181 (minValue!2115 newMap!16))) lt!33180) (apply!75 lt!33176 lt!33180))))

(declare-fun lt!33184 () Unit!2078)

(assert (=> b!73793 (= lt!33184 lt!33174)))

(declare-fun lt!33187 () ListLongMap!1419)

(assert (=> b!73793 (= lt!33187 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33185 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33185 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33186 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33186 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33193 () Unit!2078)

(assert (=> b!73793 (= lt!33193 (addApplyDifferent!51 lt!33187 lt!33185 lt!32533 lt!33186))))

(assert (=> b!73793 (= (apply!75 (+!94 lt!33187 (tuple2!2123 lt!33185 lt!32533)) lt!33186) (apply!75 lt!33187 lt!33186))))

(declare-fun lt!33182 () Unit!2078)

(assert (=> b!73793 (= lt!33182 lt!33193)))

(declare-fun lt!33190 () ListLongMap!1419)

(assert (=> b!73793 (= lt!33190 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33191 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33191 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33189 () (_ BitVec 64))

(assert (=> b!73793 (= lt!33189 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73793 (= lt!33179 (addApplyDifferent!51 lt!33190 lt!33191 (minValue!2115 newMap!16) lt!33189))))

(assert (=> b!73793 (= (apply!75 (+!94 lt!33190 (tuple2!2123 lt!33191 (minValue!2115 newMap!16))) lt!33189) (apply!75 lt!33190 lt!33189))))

(declare-fun b!73794 () Bool)

(declare-fun e!48239 () Bool)

(assert (=> b!73794 (= e!48239 (= (apply!75 lt!33183 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!73795 () Bool)

(assert (=> b!73795 (= e!48236 (= (apply!75 lt!33183 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32533))))

(declare-fun b!73796 () Bool)

(assert (=> b!73796 (= e!48243 call!6520)))

(declare-fun bm!6521 () Bool)

(declare-fun c!11021 () Bool)

(declare-fun c!11025 () Bool)

(assert (=> bm!6521 (= call!6524 (+!94 (ite c!11021 call!6522 (ite c!11025 call!6523 call!6520)) (ite (or c!11021 c!11025) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!73797 () Bool)

(assert (=> b!73797 (= e!48235 e!48241)))

(assert (=> b!73797 (= c!11025 (and (not (= (bvand lt!32768 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32768 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73798 () Bool)

(declare-fun e!48242 () Bool)

(assert (=> b!73798 (= e!48242 (= (apply!75 lt!33183 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73798 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (_values!2196 newMap!16))))))

(assert (=> b!73798 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73799 () Bool)

(assert (=> b!73799 (= e!48238 e!48239)))

(declare-fun res!39092 () Bool)

(assert (=> b!73799 (= res!39092 call!6521)))

(assert (=> b!73799 (=> (not res!39092) (not e!48239))))

(declare-fun d!17087 () Bool)

(assert (=> d!17087 e!48231))

(declare-fun res!39089 () Bool)

(assert (=> d!17087 (=> (not res!39089) (not e!48231))))

(assert (=> d!17087 (= res!39089 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!33194 () ListLongMap!1419)

(assert (=> d!17087 (= lt!33183 lt!33194)))

(declare-fun lt!33177 () Unit!2078)

(assert (=> d!17087 (= lt!33177 e!48233)))

(declare-fun c!11023 () Bool)

(declare-fun e!48240 () Bool)

(assert (=> d!17087 (= c!11023 e!48240)))

(declare-fun res!39086 () Bool)

(assert (=> d!17087 (=> (not res!39086) (not e!48240))))

(assert (=> d!17087 (= res!39086 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17087 (= lt!33194 e!48235)))

(assert (=> d!17087 (= c!11021 (and (not (= (bvand lt!32768 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32768 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17087 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17087 (= (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33183)))

(declare-fun b!73800 () Bool)

(assert (=> b!73800 (= e!48234 (not call!6525))))

(declare-fun b!73801 () Bool)

(assert (=> b!73801 (= e!48232 e!48242)))

(declare-fun res!39090 () Bool)

(assert (=> b!73801 (=> (not res!39090) (not e!48242))))

(assert (=> b!73801 (= res!39090 (contains!723 lt!33183 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73801 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6522 () Bool)

(assert (=> bm!6522 (= call!6525 (contains!723 lt!33183 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6523 () Bool)

(assert (=> bm!6523 (= call!6523 call!6522)))

(declare-fun b!73802 () Bool)

(assert (=> b!73802 (= e!48241 call!6526)))

(declare-fun b!73803 () Bool)

(assert (=> b!73803 (= e!48240 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17087 c!11021) b!73792))

(assert (= (and d!17087 (not c!11021)) b!73797))

(assert (= (and b!73797 c!11025) b!73802))

(assert (= (and b!73797 (not c!11025)) b!73785))

(assert (= (and b!73785 c!11026) b!73790))

(assert (= (and b!73785 (not c!11026)) b!73796))

(assert (= (or b!73790 b!73796) bm!6517))

(assert (= (or b!73802 bm!6517) bm!6523))

(assert (= (or b!73802 b!73790) bm!6519))

(assert (= (or b!73792 bm!6523) bm!6520))

(assert (= (or b!73792 bm!6519) bm!6521))

(assert (= (and d!17087 res!39086) b!73803))

(assert (= (and d!17087 c!11023) b!73793))

(assert (= (and d!17087 (not c!11023)) b!73788))

(assert (= (and d!17087 res!39089) b!73786))

(assert (= (and b!73786 res!39091) b!73784))

(assert (= (and b!73786 (not res!39093)) b!73801))

(assert (= (and b!73801 res!39090) b!73798))

(assert (= (and b!73786 res!39088) b!73787))

(assert (= (and b!73787 c!11024) b!73783))

(assert (= (and b!73787 (not c!11024)) b!73800))

(assert (= (and b!73783 res!39087) b!73795))

(assert (= (or b!73783 b!73800) bm!6522))

(assert (= (and b!73787 res!39085) b!73789))

(assert (= (and b!73789 c!11022) b!73799))

(assert (= (and b!73789 (not c!11022)) b!73791))

(assert (= (and b!73799 res!39092) b!73794))

(assert (= (or b!73799 b!73791) bm!6518))

(declare-fun b_lambda!3313 () Bool)

(assert (=> (not b_lambda!3313) (not b!73798)))

(assert (=> b!73798 t!5042))

(declare-fun b_and!4523 () Bool)

(assert (= b_and!4519 (and (=> t!5042 result!2693) b_and!4523)))

(assert (=> b!73798 t!5044))

(declare-fun b_and!4525 () Bool)

(assert (= b_and!4521 (and (=> t!5044 result!2695) b_and!4525)))

(assert (=> b!73798 m!71563))

(assert (=> b!73798 m!71715))

(assert (=> b!73798 m!71717))

(assert (=> b!73798 m!71719))

(assert (=> b!73798 m!71563))

(declare-fun m!72425 () Bool)

(assert (=> b!73798 m!72425))

(assert (=> b!73798 m!71717))

(assert (=> b!73798 m!71715))

(declare-fun m!72427 () Bool)

(assert (=> bm!6520 m!72427))

(assert (=> d!17087 m!71705))

(declare-fun m!72429 () Bool)

(assert (=> bm!6518 m!72429))

(declare-fun m!72431 () Bool)

(assert (=> bm!6522 m!72431))

(declare-fun m!72433 () Bool)

(assert (=> bm!6521 m!72433))

(declare-fun m!72435 () Bool)

(assert (=> b!73795 m!72435))

(assert (=> b!73784 m!71563))

(assert (=> b!73784 m!71563))

(assert (=> b!73784 m!71567))

(assert (=> b!73803 m!71563))

(assert (=> b!73803 m!71563))

(assert (=> b!73803 m!71567))

(declare-fun m!72437 () Bool)

(assert (=> b!73792 m!72437))

(declare-fun m!72439 () Bool)

(assert (=> b!73794 m!72439))

(declare-fun m!72441 () Bool)

(assert (=> b!73793 m!72441))

(declare-fun m!72443 () Bool)

(assert (=> b!73793 m!72443))

(assert (=> b!73793 m!72427))

(declare-fun m!72445 () Bool)

(assert (=> b!73793 m!72445))

(assert (=> b!73793 m!71563))

(declare-fun m!72447 () Bool)

(assert (=> b!73793 m!72447))

(declare-fun m!72449 () Bool)

(assert (=> b!73793 m!72449))

(declare-fun m!72451 () Bool)

(assert (=> b!73793 m!72451))

(declare-fun m!72453 () Bool)

(assert (=> b!73793 m!72453))

(declare-fun m!72455 () Bool)

(assert (=> b!73793 m!72455))

(declare-fun m!72457 () Bool)

(assert (=> b!73793 m!72457))

(declare-fun m!72459 () Bool)

(assert (=> b!73793 m!72459))

(declare-fun m!72461 () Bool)

(assert (=> b!73793 m!72461))

(assert (=> b!73793 m!72459))

(declare-fun m!72463 () Bool)

(assert (=> b!73793 m!72463))

(assert (=> b!73793 m!72441))

(declare-fun m!72465 () Bool)

(assert (=> b!73793 m!72465))

(assert (=> b!73793 m!72453))

(assert (=> b!73793 m!72443))

(declare-fun m!72467 () Bool)

(assert (=> b!73793 m!72467))

(declare-fun m!72469 () Bool)

(assert (=> b!73793 m!72469))

(assert (=> b!73801 m!71563))

(assert (=> b!73801 m!71563))

(declare-fun m!72471 () Bool)

(assert (=> b!73801 m!72471))

(assert (=> d!16971 d!17087))

(declare-fun d!17089 () Bool)

(assert (=> d!17089 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32768 lt!32533 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17089 true))

(declare-fun _$7!62 () Unit!2078)

(assert (=> d!17089 (= (choose!416 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32768 (zeroValue!2115 newMap!16) lt!32533 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)) _$7!62)))

(declare-fun bs!3167 () Bool)

(assert (= bs!3167 d!17089))

(assert (=> bs!3167 m!71415))

(assert (=> bs!3167 m!71415))

(assert (=> bs!3167 m!72099))

(assert (=> bs!3167 m!72097))

(assert (=> d!16971 d!17089))

(assert (=> d!16971 d!16903))

(declare-fun d!17091 () Bool)

(declare-fun e!48244 () Bool)

(assert (=> d!17091 e!48244))

(declare-fun res!39094 () Bool)

(assert (=> d!17091 (=> (not res!39094) (not e!48244))))

(declare-fun lt!33197 () ListLongMap!1419)

(assert (=> d!17091 (= res!39094 (contains!723 lt!33197 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(declare-fun lt!33196 () List!1478)

(assert (=> d!17091 (= lt!33197 (ListLongMap!1420 lt!33196))))

(declare-fun lt!33198 () Unit!2078)

(declare-fun lt!33195 () Unit!2078)

(assert (=> d!17091 (= lt!33198 lt!33195)))

(assert (=> d!17091 (= (getValueByKey!133 lt!33196 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(assert (=> d!17091 (= lt!33195 (lemmaContainsTupThenGetReturnValue!50 lt!33196 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(assert (=> d!17091 (= lt!33196 (insertStrictlySorted!53 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(assert (=> d!17091 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)) lt!33197)))

(declare-fun b!73804 () Bool)

(declare-fun res!39095 () Bool)

(assert (=> b!73804 (=> (not res!39095) (not e!48244))))

(assert (=> b!73804 (= res!39095 (= (getValueByKey!133 (toList!725 lt!33197) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)))))))

(declare-fun b!73805 () Bool)

(assert (=> b!73805 (= e!48244 (contains!724 (toList!725 lt!33197) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533)))))

(assert (= (and d!17091 res!39094) b!73804))

(assert (= (and b!73804 res!39095) b!73805))

(declare-fun m!72473 () Bool)

(assert (=> d!17091 m!72473))

(declare-fun m!72475 () Bool)

(assert (=> d!17091 m!72475))

(declare-fun m!72477 () Bool)

(assert (=> d!17091 m!72477))

(declare-fun m!72479 () Bool)

(assert (=> d!17091 m!72479))

(declare-fun m!72481 () Bool)

(assert (=> b!73804 m!72481))

(declare-fun m!72483 () Bool)

(assert (=> b!73805 m!72483))

(assert (=> d!16971 d!17091))

(assert (=> d!16971 d!17069))

(declare-fun d!17093 () Bool)

(assert (=> d!17093 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33199 () Unit!2078)

(assert (=> d!17093 (= lt!33199 (choose!422 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48245 () Bool)

(assert (=> d!17093 e!48245))

(declare-fun res!39096 () Bool)

(assert (=> d!17093 (=> (not res!39096) (not e!48245))))

(assert (=> d!17093 (= res!39096 (isStrictlySorted!292 (toList!725 lt!32594)))))

(assert (=> d!17093 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33199)))

(declare-fun b!73806 () Bool)

(assert (=> b!73806 (= e!48245 (containsKey!137 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17093 res!39096) b!73806))

(assert (=> d!17093 m!71559))

(assert (=> d!17093 m!71559))

(assert (=> d!17093 m!71561))

(declare-fun m!72485 () Bool)

(assert (=> d!17093 m!72485))

(declare-fun m!72487 () Bool)

(assert (=> d!17093 m!72487))

(assert (=> b!73806 m!71555))

(assert (=> b!73253 d!17093))

(declare-fun d!17095 () Bool)

(assert (=> d!17095 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3168 () Bool)

(assert (= bs!3168 d!17095))

(assert (=> bs!3168 m!71559))

(declare-fun m!72489 () Bool)

(assert (=> bs!3168 m!72489))

(assert (=> b!73253 d!17095))

(declare-fun b!73809 () Bool)

(declare-fun e!48247 () Option!139)

(assert (=> b!73809 (= e!48247 (getValueByKey!133 (t!5035 (toList!725 lt!32594)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17097 () Bool)

(declare-fun c!11027 () Bool)

(assert (=> d!17097 (= c!11027 (and ((_ is Cons!1474) (toList!725 lt!32594)) (= (_1!1072 (h!2061 (toList!725 lt!32594))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48246 () Option!139)

(assert (=> d!17097 (= (getValueByKey!133 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000) e!48246)))

(declare-fun b!73808 () Bool)

(assert (=> b!73808 (= e!48246 e!48247)))

(declare-fun c!11028 () Bool)

(assert (=> b!73808 (= c!11028 (and ((_ is Cons!1474) (toList!725 lt!32594)) (not (= (_1!1072 (h!2061 (toList!725 lt!32594))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73807 () Bool)

(assert (=> b!73807 (= e!48246 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32594)))))))

(declare-fun b!73810 () Bool)

(assert (=> b!73810 (= e!48247 None!137)))

(assert (= (and d!17097 c!11027) b!73807))

(assert (= (and d!17097 (not c!11027)) b!73808))

(assert (= (and b!73808 c!11028) b!73809))

(assert (= (and b!73808 (not c!11028)) b!73810))

(declare-fun m!72491 () Bool)

(assert (=> b!73809 m!72491))

(assert (=> b!73253 d!17097))

(declare-fun b!73811 () Bool)

(declare-fun e!48250 () List!1478)

(declare-fun call!6527 () List!1478)

(assert (=> b!73811 (= e!48250 call!6527)))

(declare-fun b!73812 () Bool)

(declare-fun e!48252 () List!1478)

(declare-fun call!6528 () List!1478)

(assert (=> b!73812 (= e!48252 call!6528)))

(declare-fun b!73813 () Bool)

(declare-fun e!48248 () List!1478)

(declare-fun call!6529 () List!1478)

(assert (=> b!73813 (= e!48248 call!6529)))

(declare-fun e!48249 () List!1478)

(declare-fun b!73814 () Bool)

(declare-fun c!11032 () Bool)

(declare-fun c!11030 () Bool)

(assert (=> b!73814 (= e!48249 (ite c!11032 (t!5035 (t!5035 (toList!725 lt!32540))) (ite c!11030 (Cons!1474 (h!2061 (t!5035 (toList!725 lt!32540))) (t!5035 (t!5035 (toList!725 lt!32540)))) Nil!1475)))))

(declare-fun b!73815 () Bool)

(assert (=> b!73815 (= e!48248 e!48250)))

(assert (=> b!73815 (= c!11032 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32540))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540)))) (_1!1072 lt!32542))))))

(declare-fun bm!6524 () Bool)

(assert (=> bm!6524 (= call!6528 call!6527)))

(declare-fun c!11029 () Bool)

(declare-fun bm!6525 () Bool)

(assert (=> bm!6525 (= call!6529 ($colon$colon!66 e!48249 (ite c!11029 (h!2061 (t!5035 (toList!725 lt!32540))) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542)))))))

(declare-fun c!11031 () Bool)

(assert (=> bm!6525 (= c!11031 c!11029)))

(declare-fun b!73816 () Bool)

(declare-fun res!39098 () Bool)

(declare-fun e!48251 () Bool)

(assert (=> b!73816 (=> (not res!39098) (not e!48251))))

(declare-fun lt!33200 () List!1478)

(assert (=> b!73816 (= res!39098 (containsKey!137 lt!33200 (_1!1072 lt!32542)))))

(declare-fun bm!6526 () Bool)

(assert (=> bm!6526 (= call!6527 call!6529)))

(declare-fun b!73817 () Bool)

(assert (=> b!73817 (= e!48251 (contains!724 lt!33200 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!73818 () Bool)

(assert (=> b!73818 (= e!48252 call!6528)))

(declare-fun b!73819 () Bool)

(assert (=> b!73819 (= e!48249 (insertStrictlySorted!53 (t!5035 (t!5035 (toList!725 lt!32540))) (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun b!73820 () Bool)

(assert (=> b!73820 (= c!11030 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32540))) (bvsgt (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540)))) (_1!1072 lt!32542))))))

(assert (=> b!73820 (= e!48250 e!48252)))

(declare-fun d!17099 () Bool)

(assert (=> d!17099 e!48251))

(declare-fun res!39097 () Bool)

(assert (=> d!17099 (=> (not res!39097) (not e!48251))))

(assert (=> d!17099 (= res!39097 (isStrictlySorted!292 lt!33200))))

(assert (=> d!17099 (= lt!33200 e!48248)))

(assert (=> d!17099 (= c!11029 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32540))) (bvslt (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540)))) (_1!1072 lt!32542))))))

(assert (=> d!17099 (isStrictlySorted!292 (t!5035 (toList!725 lt!32540)))))

(assert (=> d!17099 (= (insertStrictlySorted!53 (t!5035 (toList!725 lt!32540)) (_1!1072 lt!32542) (_2!1072 lt!32542)) lt!33200)))

(assert (= (and d!17099 c!11029) b!73813))

(assert (= (and d!17099 (not c!11029)) b!73815))

(assert (= (and b!73815 c!11032) b!73811))

(assert (= (and b!73815 (not c!11032)) b!73820))

(assert (= (and b!73820 c!11030) b!73818))

(assert (= (and b!73820 (not c!11030)) b!73812))

(assert (= (or b!73818 b!73812) bm!6524))

(assert (= (or b!73811 bm!6524) bm!6526))

(assert (= (or b!73813 bm!6526) bm!6525))

(assert (= (and bm!6525 c!11031) b!73819))

(assert (= (and bm!6525 (not c!11031)) b!73814))

(assert (= (and d!17099 res!39097) b!73816))

(assert (= (and b!73816 res!39098) b!73817))

(declare-fun m!72493 () Bool)

(assert (=> bm!6525 m!72493))

(declare-fun m!72495 () Bool)

(assert (=> b!73819 m!72495))

(declare-fun m!72497 () Bool)

(assert (=> b!73817 m!72497))

(declare-fun m!72499 () Bool)

(assert (=> d!17099 m!72499))

(declare-fun m!72501 () Bool)

(assert (=> d!17099 m!72501))

(declare-fun m!72503 () Bool)

(assert (=> b!73816 m!72503))

(assert (=> b!73710 d!17099))

(declare-fun d!17101 () Bool)

(assert (=> d!17101 (= ($colon$colon!66 e!48049 (ite c!10937 (h!2061 (toList!725 (+!94 lt!32540 lt!32538))) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542)))) (Cons!1474 (ite c!10937 (h!2061 (toList!725 (+!94 lt!32540 lt!32538))) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))) e!48049))))

(assert (=> bm!6476 d!17101))

(declare-fun b!73823 () Bool)

(declare-fun e!48254 () Option!139)

(assert (=> b!73823 (= e!48254 (getValueByKey!133 (t!5035 (toList!725 lt!32816)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17103 () Bool)

(declare-fun c!11033 () Bool)

(assert (=> d!17103 (= c!11033 (and ((_ is Cons!1474) (toList!725 lt!32816)) (= (_1!1072 (h!2061 (toList!725 lt!32816))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48253 () Option!139)

(assert (=> d!17103 (= (getValueByKey!133 (toList!725 lt!32816) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48253)))

(declare-fun b!73822 () Bool)

(assert (=> b!73822 (= e!48253 e!48254)))

(declare-fun c!11034 () Bool)

(assert (=> b!73822 (= c!11034 (and ((_ is Cons!1474) (toList!725 lt!32816)) (not (= (_1!1072 (h!2061 (toList!725 lt!32816))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73821 () Bool)

(assert (=> b!73821 (= e!48253 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32816)))))))

(declare-fun b!73824 () Bool)

(assert (=> b!73824 (= e!48254 None!137)))

(assert (= (and d!17103 c!11033) b!73821))

(assert (= (and d!17103 (not c!11033)) b!73822))

(assert (= (and b!73822 c!11034) b!73823))

(assert (= (and b!73822 (not c!11034)) b!73824))

(declare-fun m!72505 () Bool)

(assert (=> b!73823 m!72505))

(assert (=> b!73284 d!17103))

(declare-fun d!17105 () Bool)

(assert (=> d!17105 (= (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673)) (not (isEmpty!317 (getValueByKey!133 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))))

(declare-fun bs!3169 () Bool)

(assert (= bs!3169 d!17105))

(assert (=> bs!3169 m!72261))

(declare-fun m!72507 () Bool)

(assert (=> bs!3169 m!72507))

(assert (=> b!73664 d!17105))

(declare-fun e!48256 () Option!139)

(declare-fun b!73827 () Bool)

(assert (=> b!73827 (= e!48256 (getValueByKey!133 (t!5035 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!32673))))

(declare-fun d!17107 () Bool)

(declare-fun c!11035 () Bool)

(assert (=> d!17107 (= c!11035 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32673)))))

(declare-fun e!48255 () Option!139)

(assert (=> d!17107 (= (getValueByKey!133 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673) e!48255)))

(declare-fun b!73826 () Bool)

(assert (=> b!73826 (= e!48255 e!48256)))

(declare-fun c!11036 () Bool)

(assert (=> b!73826 (= c!11036 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (not (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32673))))))

(declare-fun b!73825 () Bool)

(assert (=> b!73825 (= e!48255 (Some!138 (_2!1072 (h!2061 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun b!73828 () Bool)

(assert (=> b!73828 (= e!48256 None!137)))

(assert (= (and d!17107 c!11035) b!73825))

(assert (= (and d!17107 (not c!11035)) b!73826))

(assert (= (and b!73826 c!11036) b!73827))

(assert (= (and b!73826 (not c!11036)) b!73828))

(declare-fun m!72509 () Bool)

(assert (=> b!73827 m!72509))

(assert (=> b!73664 d!17107))

(declare-fun d!17109 () Bool)

(assert (=> d!17109 (= (get!1142 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2534 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16885 d!17109))

(declare-fun e!48258 () Option!139)

(declare-fun b!73831 () Bool)

(assert (=> b!73831 (= e!48258 (getValueByKey!133 (t!5035 (toList!725 lt!32594)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!11037 () Bool)

(declare-fun d!17111 () Bool)

(assert (=> d!17111 (= c!11037 (and ((_ is Cons!1474) (toList!725 lt!32594)) (= (_1!1072 (h!2061 (toList!725 lt!32594))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!48257 () Option!139)

(assert (=> d!17111 (= (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48257)))

(declare-fun b!73830 () Bool)

(assert (=> b!73830 (= e!48257 e!48258)))

(declare-fun c!11038 () Bool)

(assert (=> b!73830 (= c!11038 (and ((_ is Cons!1474) (toList!725 lt!32594)) (not (= (_1!1072 (h!2061 (toList!725 lt!32594))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!73829 () Bool)

(assert (=> b!73829 (= e!48257 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32594)))))))

(declare-fun b!73832 () Bool)

(assert (=> b!73832 (= e!48258 None!137)))

(assert (= (and d!17111 c!11037) b!73829))

(assert (= (and d!17111 (not c!11037)) b!73830))

(assert (= (and b!73830 c!11038) b!73831))

(assert (= (and b!73830 (not c!11038)) b!73832))

(assert (=> b!73831 m!71327))

(declare-fun m!72511 () Bool)

(assert (=> b!73831 m!72511))

(assert (=> d!16885 d!17111))

(declare-fun d!17113 () Bool)

(assert (=> d!17113 (= (get!1142 (getValueByKey!133 (toList!725 lt!32688) lt!32687)) (v!2534 (getValueByKey!133 (toList!725 lt!32688) lt!32687)))))

(assert (=> d!17025 d!17113))

(declare-fun b!73835 () Bool)

(declare-fun e!48260 () Option!139)

(assert (=> b!73835 (= e!48260 (getValueByKey!133 (t!5035 (toList!725 lt!32688)) lt!32687))))

(declare-fun d!17115 () Bool)

(declare-fun c!11039 () Bool)

(assert (=> d!17115 (= c!11039 (and ((_ is Cons!1474) (toList!725 lt!32688)) (= (_1!1072 (h!2061 (toList!725 lt!32688))) lt!32687)))))

(declare-fun e!48259 () Option!139)

(assert (=> d!17115 (= (getValueByKey!133 (toList!725 lt!32688) lt!32687) e!48259)))

(declare-fun b!73834 () Bool)

(assert (=> b!73834 (= e!48259 e!48260)))

(declare-fun c!11040 () Bool)

(assert (=> b!73834 (= c!11040 (and ((_ is Cons!1474) (toList!725 lt!32688)) (not (= (_1!1072 (h!2061 (toList!725 lt!32688))) lt!32687))))))

(declare-fun b!73833 () Bool)

(assert (=> b!73833 (= e!48259 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32688)))))))

(declare-fun b!73836 () Bool)

(assert (=> b!73836 (= e!48260 None!137)))

(assert (= (and d!17115 c!11039) b!73833))

(assert (= (and d!17115 (not c!11039)) b!73834))

(assert (= (and b!73834 c!11040) b!73835))

(assert (= (and b!73834 (not c!11040)) b!73836))

(declare-fun m!72513 () Bool)

(assert (=> b!73835 m!72513))

(assert (=> d!17025 d!17115))

(declare-fun d!17117 () Bool)

(declare-fun lt!33201 () Bool)

(assert (=> d!17117 (= lt!33201 (select (content!77 (toList!725 lt!33106)) (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48261 () Bool)

(assert (=> d!17117 (= lt!33201 e!48261)))

(declare-fun res!39099 () Bool)

(assert (=> d!17117 (=> (not res!39099) (not e!48261))))

(assert (=> d!17117 (= res!39099 ((_ is Cons!1474) (toList!725 lt!33106)))))

(assert (=> d!17117 (= (contains!724 (toList!725 lt!33106) (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33201)))

(declare-fun b!73837 () Bool)

(declare-fun e!48262 () Bool)

(assert (=> b!73837 (= e!48261 e!48262)))

(declare-fun res!39100 () Bool)

(assert (=> b!73837 (=> res!39100 e!48262)))

(assert (=> b!73837 (= res!39100 (= (h!2061 (toList!725 lt!33106)) (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73838 () Bool)

(assert (=> b!73838 (= e!48262 (contains!724 (t!5035 (toList!725 lt!33106)) (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17117 res!39099) b!73837))

(assert (= (and b!73837 (not res!39100)) b!73838))

(declare-fun m!72515 () Bool)

(assert (=> d!17117 m!72515))

(declare-fun m!72517 () Bool)

(assert (=> d!17117 m!72517))

(declare-fun m!72519 () Bool)

(assert (=> b!73838 m!72519))

(assert (=> b!73656 d!17117))

(assert (=> bm!6495 d!16953))

(declare-fun d!17119 () Bool)

(assert (=> d!17119 (= (get!1142 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2534 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16957 d!17119))

(declare-fun b!73841 () Bool)

(declare-fun e!48264 () Option!139)

(assert (=> b!73841 (= e!48264 (getValueByKey!133 (t!5035 (toList!725 lt!32681)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17121 () Bool)

(declare-fun c!11041 () Bool)

(assert (=> d!17121 (= c!11041 (and ((_ is Cons!1474) (toList!725 lt!32681)) (= (_1!1072 (h!2061 (toList!725 lt!32681))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48263 () Option!139)

(assert (=> d!17121 (= (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000) e!48263)))

(declare-fun b!73840 () Bool)

(assert (=> b!73840 (= e!48263 e!48264)))

(declare-fun c!11042 () Bool)

(assert (=> b!73840 (= c!11042 (and ((_ is Cons!1474) (toList!725 lt!32681)) (not (= (_1!1072 (h!2061 (toList!725 lt!32681))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73839 () Bool)

(assert (=> b!73839 (= e!48263 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32681)))))))

(declare-fun b!73842 () Bool)

(assert (=> b!73842 (= e!48264 None!137)))

(assert (= (and d!17121 c!11041) b!73839))

(assert (= (and d!17121 (not c!11041)) b!73840))

(assert (= (and b!73840 c!11042) b!73841))

(assert (= (and b!73840 (not c!11042)) b!73842))

(declare-fun m!72521 () Bool)

(assert (=> b!73841 m!72521))

(assert (=> d!16957 d!17121))

(declare-fun e!48266 () Option!139)

(declare-fun b!73845 () Bool)

(assert (=> b!73845 (= e!48266 (getValueByKey!133 (t!5035 (toList!725 lt!33098)) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17123 () Bool)

(declare-fun c!11043 () Bool)

(assert (=> d!17123 (= c!11043 (and ((_ is Cons!1474) (toList!725 lt!33098)) (= (_1!1072 (h!2061 (toList!725 lt!33098))) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48265 () Option!139)

(assert (=> d!17123 (= (getValueByKey!133 (toList!725 lt!33098) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48265)))

(declare-fun b!73844 () Bool)

(assert (=> b!73844 (= e!48265 e!48266)))

(declare-fun c!11044 () Bool)

(assert (=> b!73844 (= c!11044 (and ((_ is Cons!1474) (toList!725 lt!33098)) (not (= (_1!1072 (h!2061 (toList!725 lt!33098))) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73843 () Bool)

(assert (=> b!73843 (= e!48265 (Some!138 (_2!1072 (h!2061 (toList!725 lt!33098)))))))

(declare-fun b!73846 () Bool)

(assert (=> b!73846 (= e!48266 None!137)))

(assert (= (and d!17123 c!11043) b!73843))

(assert (= (and d!17123 (not c!11043)) b!73844))

(assert (= (and b!73844 c!11044) b!73845))

(assert (= (and b!73844 (not c!11044)) b!73846))

(declare-fun m!72523 () Bool)

(assert (=> b!73845 m!72523))

(assert (=> b!73648 d!17123))

(declare-fun d!17125 () Bool)

(assert (=> d!17125 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542)))))))

(declare-fun bs!3170 () Bool)

(assert (= bs!3170 d!17125))

(assert (=> bs!3170 m!71363))

(declare-fun m!72525 () Bool)

(assert (=> bs!3170 m!72525))

(assert (=> b!73458 d!17125))

(assert (=> b!73458 d!17055))

(declare-fun d!17127 () Bool)

(declare-fun lt!33202 () Bool)

(assert (=> d!17127 (= lt!33202 (select (content!77 (t!5035 (toList!725 lt!32614))) lt!32542))))

(declare-fun e!48267 () Bool)

(assert (=> d!17127 (= lt!33202 e!48267)))

(declare-fun res!39101 () Bool)

(assert (=> d!17127 (=> (not res!39101) (not e!48267))))

(assert (=> d!17127 (= res!39101 ((_ is Cons!1474) (t!5035 (toList!725 lt!32614))))))

(assert (=> d!17127 (= (contains!724 (t!5035 (toList!725 lt!32614)) lt!32542) lt!33202)))

(declare-fun b!73847 () Bool)

(declare-fun e!48268 () Bool)

(assert (=> b!73847 (= e!48267 e!48268)))

(declare-fun res!39102 () Bool)

(assert (=> b!73847 (=> res!39102 e!48268)))

(assert (=> b!73847 (= res!39102 (= (h!2061 (t!5035 (toList!725 lt!32614))) lt!32542))))

(declare-fun b!73848 () Bool)

(assert (=> b!73848 (= e!48268 (contains!724 (t!5035 (t!5035 (toList!725 lt!32614))) lt!32542))))

(assert (= (and d!17127 res!39101) b!73847))

(assert (= (and b!73847 (not res!39102)) b!73848))

(declare-fun m!72527 () Bool)

(assert (=> d!17127 m!72527))

(declare-fun m!72529 () Bool)

(assert (=> d!17127 m!72529))

(declare-fun m!72531 () Bool)

(assert (=> b!73848 m!72531))

(assert (=> b!73307 d!17127))

(declare-fun d!17129 () Bool)

(declare-fun e!48270 () Bool)

(assert (=> d!17129 e!48270))

(declare-fun res!39103 () Bool)

(assert (=> d!17129 (=> res!39103 e!48270)))

(declare-fun lt!33206 () Bool)

(assert (=> d!17129 (= res!39103 (not lt!33206))))

(declare-fun lt!33205 () Bool)

(assert (=> d!17129 (= lt!33206 lt!33205)))

(declare-fun lt!33204 () Unit!2078)

(declare-fun e!48269 () Unit!2078)

(assert (=> d!17129 (= lt!33204 e!48269)))

(declare-fun c!11045 () Bool)

(assert (=> d!17129 (= c!11045 lt!33205)))

(assert (=> d!17129 (= lt!33205 (containsKey!137 (toList!725 lt!33115) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17129 (= (contains!723 lt!33115 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33206)))

(declare-fun b!73849 () Bool)

(declare-fun lt!33203 () Unit!2078)

(assert (=> b!73849 (= e!48269 lt!33203)))

(assert (=> b!73849 (= lt!33203 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33115) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!73849 (isDefined!86 (getValueByKey!133 (toList!725 lt!33115) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73850 () Bool)

(declare-fun Unit!2109 () Unit!2078)

(assert (=> b!73850 (= e!48269 Unit!2109)))

(declare-fun b!73851 () Bool)

(assert (=> b!73851 (= e!48270 (isDefined!86 (getValueByKey!133 (toList!725 lt!33115) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17129 c!11045) b!73849))

(assert (= (and d!17129 (not c!11045)) b!73850))

(assert (= (and d!17129 (not res!39103)) b!73851))

(declare-fun m!72533 () Bool)

(assert (=> d!17129 m!72533))

(declare-fun m!72535 () Bool)

(assert (=> b!73849 m!72535))

(assert (=> b!73849 m!72249))

(assert (=> b!73849 m!72249))

(declare-fun m!72537 () Bool)

(assert (=> b!73849 m!72537))

(assert (=> b!73851 m!72249))

(assert (=> b!73851 m!72249))

(assert (=> b!73851 m!72537))

(assert (=> d!17017 d!17129))

(declare-fun b!73854 () Bool)

(declare-fun e!48272 () Option!139)

(assert (=> b!73854 (= e!48272 (getValueByKey!133 (t!5035 lt!33114) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17131 () Bool)

(declare-fun c!11046 () Bool)

(assert (=> d!17131 (= c!11046 (and ((_ is Cons!1474) lt!33114) (= (_1!1072 (h!2061 lt!33114)) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48271 () Option!139)

(assert (=> d!17131 (= (getValueByKey!133 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48271)))

(declare-fun b!73853 () Bool)

(assert (=> b!73853 (= e!48271 e!48272)))

(declare-fun c!11047 () Bool)

(assert (=> b!73853 (= c!11047 (and ((_ is Cons!1474) lt!33114) (not (= (_1!1072 (h!2061 lt!33114)) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73852 () Bool)

(assert (=> b!73852 (= e!48271 (Some!138 (_2!1072 (h!2061 lt!33114))))))

(declare-fun b!73855 () Bool)

(assert (=> b!73855 (= e!48272 None!137)))

(assert (= (and d!17131 c!11046) b!73852))

(assert (= (and d!17131 (not c!11046)) b!73853))

(assert (= (and b!73853 c!11047) b!73854))

(assert (= (and b!73853 (not c!11047)) b!73855))

(declare-fun m!72539 () Bool)

(assert (=> b!73854 m!72539))

(assert (=> d!17017 d!17131))

(declare-fun d!17133 () Bool)

(assert (=> d!17133 (= (getValueByKey!133 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33207 () Unit!2078)

(assert (=> d!17133 (= lt!33207 (choose!412 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48273 () Bool)

(assert (=> d!17133 e!48273))

(declare-fun res!39104 () Bool)

(assert (=> d!17133 (=> (not res!39104) (not e!48273))))

(assert (=> d!17133 (= res!39104 (isStrictlySorted!292 lt!33114))))

(assert (=> d!17133 (= (lemmaContainsTupThenGetReturnValue!50 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33207)))

(declare-fun b!73856 () Bool)

(declare-fun res!39105 () Bool)

(assert (=> b!73856 (=> (not res!39105) (not e!48273))))

(assert (=> b!73856 (= res!39105 (containsKey!137 lt!33114 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73857 () Bool)

(assert (=> b!73857 (= e!48273 (contains!724 lt!33114 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17133 res!39104) b!73856))

(assert (= (and b!73856 res!39105) b!73857))

(assert (=> d!17133 m!72243))

(declare-fun m!72541 () Bool)

(assert (=> d!17133 m!72541))

(declare-fun m!72543 () Bool)

(assert (=> d!17133 m!72543))

(declare-fun m!72545 () Bool)

(assert (=> b!73856 m!72545))

(declare-fun m!72547 () Bool)

(assert (=> b!73857 m!72547))

(assert (=> d!17017 d!17133))

(declare-fun b!73858 () Bool)

(declare-fun e!48276 () List!1478)

(declare-fun call!6530 () List!1478)

(assert (=> b!73858 (= e!48276 call!6530)))

(declare-fun b!73859 () Bool)

(declare-fun e!48278 () List!1478)

(declare-fun call!6531 () List!1478)

(assert (=> b!73859 (= e!48278 call!6531)))

(declare-fun b!73860 () Bool)

(declare-fun e!48274 () List!1478)

(declare-fun call!6532 () List!1478)

(assert (=> b!73860 (= e!48274 call!6532)))

(declare-fun b!73861 () Bool)

(declare-fun c!11049 () Bool)

(declare-fun c!11051 () Bool)

(declare-fun e!48275 () List!1478)

(assert (=> b!73861 (= e!48275 (ite c!11051 (t!5035 (toList!725 lt!32685)) (ite c!11049 (Cons!1474 (h!2061 (toList!725 lt!32685)) (t!5035 (toList!725 lt!32685))) Nil!1475)))))

(declare-fun b!73862 () Bool)

(assert (=> b!73862 (= e!48274 e!48276)))

(assert (=> b!73862 (= c!11051 (and ((_ is Cons!1474) (toList!725 lt!32685)) (= (_1!1072 (h!2061 (toList!725 lt!32685))) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6527 () Bool)

(assert (=> bm!6527 (= call!6531 call!6530)))

(declare-fun c!11048 () Bool)

(declare-fun bm!6528 () Bool)

(assert (=> bm!6528 (= call!6532 ($colon$colon!66 e!48275 (ite c!11048 (h!2061 (toList!725 lt!32685)) (tuple2!2123 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11050 () Bool)

(assert (=> bm!6528 (= c!11050 c!11048)))

(declare-fun b!73863 () Bool)

(declare-fun res!39107 () Bool)

(declare-fun e!48277 () Bool)

(assert (=> b!73863 (=> (not res!39107) (not e!48277))))

(declare-fun lt!33208 () List!1478)

(assert (=> b!73863 (= res!39107 (containsKey!137 lt!33208 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6529 () Bool)

(assert (=> bm!6529 (= call!6530 call!6532)))

(declare-fun b!73864 () Bool)

(assert (=> b!73864 (= e!48277 (contains!724 lt!33208 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73865 () Bool)

(assert (=> b!73865 (= e!48278 call!6531)))

(declare-fun b!73866 () Bool)

(assert (=> b!73866 (= e!48275 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32685)) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73867 () Bool)

(assert (=> b!73867 (= c!11049 (and ((_ is Cons!1474) (toList!725 lt!32685)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32685))) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!73867 (= e!48276 e!48278)))

(declare-fun d!17135 () Bool)

(assert (=> d!17135 e!48277))

(declare-fun res!39106 () Bool)

(assert (=> d!17135 (=> (not res!39106) (not e!48277))))

(assert (=> d!17135 (= res!39106 (isStrictlySorted!292 lt!33208))))

(assert (=> d!17135 (= lt!33208 e!48274)))

(assert (=> d!17135 (= c!11048 (and ((_ is Cons!1474) (toList!725 lt!32685)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32685))) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17135 (isStrictlySorted!292 (toList!725 lt!32685))))

(assert (=> d!17135 (= (insertStrictlySorted!53 (toList!725 lt!32685) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33208)))

(assert (= (and d!17135 c!11048) b!73860))

(assert (= (and d!17135 (not c!11048)) b!73862))

(assert (= (and b!73862 c!11051) b!73858))

(assert (= (and b!73862 (not c!11051)) b!73867))

(assert (= (and b!73867 c!11049) b!73865))

(assert (= (and b!73867 (not c!11049)) b!73859))

(assert (= (or b!73865 b!73859) bm!6527))

(assert (= (or b!73858 bm!6527) bm!6529))

(assert (= (or b!73860 bm!6529) bm!6528))

(assert (= (and bm!6528 c!11050) b!73866))

(assert (= (and bm!6528 (not c!11050)) b!73861))

(assert (= (and d!17135 res!39106) b!73863))

(assert (= (and b!73863 res!39107) b!73864))

(declare-fun m!72549 () Bool)

(assert (=> bm!6528 m!72549))

(declare-fun m!72551 () Bool)

(assert (=> b!73866 m!72551))

(declare-fun m!72553 () Bool)

(assert (=> b!73864 m!72553))

(declare-fun m!72555 () Bool)

(assert (=> d!17135 m!72555))

(declare-fun m!72557 () Bool)

(assert (=> d!17135 m!72557))

(declare-fun m!72559 () Bool)

(assert (=> b!73863 m!72559))

(assert (=> d!17017 d!17135))

(assert (=> bm!6507 d!16953))

(declare-fun d!17137 () Bool)

(declare-fun lt!33209 () Bool)

(assert (=> d!17137 (= lt!33209 (select (content!77 (toList!725 lt!32816)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48279 () Bool)

(assert (=> d!17137 (= lt!33209 e!48279)))

(declare-fun res!39108 () Bool)

(assert (=> d!17137 (=> (not res!39108) (not e!48279))))

(assert (=> d!17137 (= res!39108 ((_ is Cons!1474) (toList!725 lt!32816)))))

(assert (=> d!17137 (= (contains!724 (toList!725 lt!32816) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33209)))

(declare-fun b!73868 () Bool)

(declare-fun e!48280 () Bool)

(assert (=> b!73868 (= e!48279 e!48280)))

(declare-fun res!39109 () Bool)

(assert (=> b!73868 (=> res!39109 e!48280)))

(assert (=> b!73868 (= res!39109 (= (h!2061 (toList!725 lt!32816)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73869 () Bool)

(assert (=> b!73869 (= e!48280 (contains!724 (t!5035 (toList!725 lt!32816)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17137 res!39108) b!73868))

(assert (= (and b!73868 (not res!39109)) b!73869))

(declare-fun m!72561 () Bool)

(assert (=> d!17137 m!72561))

(declare-fun m!72563 () Bool)

(assert (=> d!17137 m!72563))

(declare-fun m!72565 () Bool)

(assert (=> b!73869 m!72565))

(assert (=> b!73285 d!17137))

(declare-fun d!17139 () Bool)

(declare-fun e!48281 () Bool)

(assert (=> d!17139 e!48281))

(declare-fun res!39110 () Bool)

(assert (=> d!17139 (=> (not res!39110) (not e!48281))))

(declare-fun lt!33212 () ListLongMap!1419)

(assert (=> d!17139 (= res!39110 (contains!723 lt!33212 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun lt!33211 () List!1478)

(assert (=> d!17139 (= lt!33212 (ListLongMap!1420 lt!33211))))

(declare-fun lt!33213 () Unit!2078)

(declare-fun lt!33210 () Unit!2078)

(assert (=> d!17139 (= lt!33213 lt!33210)))

(assert (=> d!17139 (= (getValueByKey!133 lt!33211 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17139 (= lt!33210 (lemmaContainsTupThenGetReturnValue!50 lt!33211 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17139 (= lt!33211 (insertStrictlySorted!53 (toList!725 call!6468) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17139 (= (+!94 call!6468 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) lt!33212)))

(declare-fun b!73870 () Bool)

(declare-fun res!39111 () Bool)

(assert (=> b!73870 (=> (not res!39111) (not e!48281))))

(assert (=> b!73870 (= res!39111 (= (getValueByKey!133 (toList!725 lt!33212) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun b!73871 () Bool)

(assert (=> b!73871 (= e!48281 (contains!724 (toList!725 lt!33212) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17139 res!39110) b!73870))

(assert (= (and b!73870 res!39111) b!73871))

(declare-fun m!72567 () Bool)

(assert (=> d!17139 m!72567))

(declare-fun m!72569 () Bool)

(assert (=> d!17139 m!72569))

(declare-fun m!72571 () Bool)

(assert (=> d!17139 m!72571))

(declare-fun m!72573 () Bool)

(assert (=> d!17139 m!72573))

(declare-fun m!72575 () Bool)

(assert (=> b!73870 m!72575))

(declare-fun m!72577 () Bool)

(assert (=> b!73871 m!72577))

(assert (=> b!73376 d!17139))

(declare-fun d!17141 () Bool)

(assert (=> d!17141 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3171 () Bool)

(assert (= bs!3171 d!17141))

(assert (=> bs!3171 m!71589))

(declare-fun m!72579 () Bool)

(assert (=> bs!3171 m!72579))

(assert (=> b!73278 d!17141))

(assert (=> b!73278 d!17111))

(assert (=> d!16913 d!16851))

(declare-fun d!17143 () Bool)

(declare-fun res!39112 () Bool)

(declare-fun e!48282 () Bool)

(assert (=> d!17143 (=> res!39112 e!48282)))

(assert (=> d!17143 (= res!39112 (and ((_ is Cons!1474) (toList!725 lt!32622)) (= (_1!1072 (h!2061 (toList!725 lt!32622))) (_1!1072 lt!32538))))))

(assert (=> d!17143 (= (containsKey!137 (toList!725 lt!32622) (_1!1072 lt!32538)) e!48282)))

(declare-fun b!73872 () Bool)

(declare-fun e!48283 () Bool)

(assert (=> b!73872 (= e!48282 e!48283)))

(declare-fun res!39113 () Bool)

(assert (=> b!73872 (=> (not res!39113) (not e!48283))))

(assert (=> b!73872 (= res!39113 (and (or (not ((_ is Cons!1474) (toList!725 lt!32622))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32622))) (_1!1072 lt!32538))) ((_ is Cons!1474) (toList!725 lt!32622)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32622))) (_1!1072 lt!32538))))))

(declare-fun b!73873 () Bool)

(assert (=> b!73873 (= e!48283 (containsKey!137 (t!5035 (toList!725 lt!32622)) (_1!1072 lt!32538)))))

(assert (= (and d!17143 (not res!39112)) b!73872))

(assert (= (and b!73872 res!39113) b!73873))

(declare-fun m!72581 () Bool)

(assert (=> b!73873 m!72581))

(assert (=> d!16891 d!17143))

(declare-fun b!73876 () Bool)

(declare-fun e!48285 () Option!139)

(assert (=> b!73876 (= e!48285 (getValueByKey!133 (t!5035 (toList!725 lt!33115)) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun c!11052 () Bool)

(declare-fun d!17145 () Bool)

(assert (=> d!17145 (= c!11052 (and ((_ is Cons!1474) (toList!725 lt!33115)) (= (_1!1072 (h!2061 (toList!725 lt!33115))) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48284 () Option!139)

(assert (=> d!17145 (= (getValueByKey!133 (toList!725 lt!33115) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48284)))

(declare-fun b!73875 () Bool)

(assert (=> b!73875 (= e!48284 e!48285)))

(declare-fun c!11053 () Bool)

(assert (=> b!73875 (= c!11053 (and ((_ is Cons!1474) (toList!725 lt!33115)) (not (= (_1!1072 (h!2061 (toList!725 lt!33115))) (_1!1072 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73874 () Bool)

(assert (=> b!73874 (= e!48284 (Some!138 (_2!1072 (h!2061 (toList!725 lt!33115)))))))

(declare-fun b!73877 () Bool)

(assert (=> b!73877 (= e!48285 None!137)))

(assert (= (and d!17145 c!11052) b!73874))

(assert (= (and d!17145 (not c!11052)) b!73875))

(assert (= (and b!73875 c!11053) b!73876))

(assert (= (and b!73875 (not c!11053)) b!73877))

(declare-fun m!72583 () Bool)

(assert (=> b!73876 m!72583))

(assert (=> b!73660 d!17145))

(declare-fun d!17147 () Bool)

(declare-fun res!39114 () Bool)

(declare-fun e!48286 () Bool)

(assert (=> d!17147 (=> res!39114 e!48286)))

(assert (=> d!17147 (= res!39114 (and ((_ is Cons!1474) lt!32609) (= (_1!1072 (h!2061 lt!32609)) (_1!1072 lt!32542))))))

(assert (=> d!17147 (= (containsKey!137 lt!32609 (_1!1072 lt!32542)) e!48286)))

(declare-fun b!73878 () Bool)

(declare-fun e!48287 () Bool)

(assert (=> b!73878 (= e!48286 e!48287)))

(declare-fun res!39115 () Bool)

(assert (=> b!73878 (=> (not res!39115) (not e!48287))))

(assert (=> b!73878 (= res!39115 (and (or (not ((_ is Cons!1474) lt!32609)) (bvsle (_1!1072 (h!2061 lt!32609)) (_1!1072 lt!32542))) ((_ is Cons!1474) lt!32609) (bvslt (_1!1072 (h!2061 lt!32609)) (_1!1072 lt!32542))))))

(declare-fun b!73879 () Bool)

(assert (=> b!73879 (= e!48287 (containsKey!137 (t!5035 lt!32609) (_1!1072 lt!32542)))))

(assert (= (and d!17147 (not res!39114)) b!73878))

(assert (= (and b!73878 res!39115) b!73879))

(declare-fun m!72585 () Bool)

(assert (=> b!73879 m!72585))

(assert (=> b!73463 d!17147))

(declare-fun d!17149 () Bool)

(declare-fun res!39120 () Bool)

(declare-fun e!48292 () Bool)

(assert (=> d!17149 (=> res!39120 e!48292)))

(assert (=> d!17149 (= res!39120 (or ((_ is Nil!1475) lt!32843) ((_ is Nil!1475) (t!5035 lt!32843))))))

(assert (=> d!17149 (= (isStrictlySorted!292 lt!32843) e!48292)))

(declare-fun b!73884 () Bool)

(declare-fun e!48293 () Bool)

(assert (=> b!73884 (= e!48292 e!48293)))

(declare-fun res!39121 () Bool)

(assert (=> b!73884 (=> (not res!39121) (not e!48293))))

(assert (=> b!73884 (= res!39121 (bvslt (_1!1072 (h!2061 lt!32843)) (_1!1072 (h!2061 (t!5035 lt!32843)))))))

(declare-fun b!73885 () Bool)

(assert (=> b!73885 (= e!48293 (isStrictlySorted!292 (t!5035 lt!32843)))))

(assert (= (and d!17149 (not res!39120)) b!73884))

(assert (= (and b!73884 res!39121) b!73885))

(declare-fun m!72587 () Bool)

(assert (=> b!73885 m!72587))

(assert (=> d!16897 d!17149))

(declare-fun d!17151 () Bool)

(declare-fun res!39122 () Bool)

(declare-fun e!48294 () Bool)

(assert (=> d!17151 (=> res!39122 e!48294)))

(assert (=> d!17151 (= res!39122 (or ((_ is Nil!1475) (toList!725 (+!94 lt!32540 lt!32542))) ((_ is Nil!1475) (t!5035 (toList!725 (+!94 lt!32540 lt!32542))))))))

(assert (=> d!17151 (= (isStrictlySorted!292 (toList!725 (+!94 lt!32540 lt!32542))) e!48294)))

(declare-fun b!73886 () Bool)

(declare-fun e!48295 () Bool)

(assert (=> b!73886 (= e!48294 e!48295)))

(declare-fun res!39123 () Bool)

(assert (=> b!73886 (=> (not res!39123) (not e!48295))))

(assert (=> b!73886 (= res!39123 (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32542)))) (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))))))))

(declare-fun b!73887 () Bool)

(assert (=> b!73887 (= e!48295 (isStrictlySorted!292 (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))))))

(assert (= (and d!17151 (not res!39122)) b!73886))

(assert (= (and b!73886 res!39123) b!73887))

(declare-fun m!72589 () Bool)

(assert (=> b!73887 m!72589))

(assert (=> d!16897 d!17151))

(declare-fun d!17153 () Bool)

(assert (=> d!17153 (= (apply!75 (+!94 lt!32921 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!32920) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32921 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) lt!32920)))))

(declare-fun bs!3172 () Bool)

(assert (= bs!3172 d!17153))

(declare-fun m!72591 () Bool)

(assert (=> bs!3172 m!72591))

(assert (=> bs!3172 m!72591))

(declare-fun m!72593 () Bool)

(assert (=> bs!3172 m!72593))

(assert (=> b!73442 d!17153))

(declare-fun d!17155 () Bool)

(assert (=> d!17155 (= (apply!75 (+!94 lt!32907 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!32911) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32907 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) lt!32911)))))

(declare-fun bs!3173 () Bool)

(assert (= bs!3173 d!17155))

(declare-fun m!72595 () Bool)

(assert (=> bs!3173 m!72595))

(assert (=> bs!3173 m!72595))

(declare-fun m!72597 () Bool)

(assert (=> bs!3173 m!72597))

(assert (=> b!73442 d!17155))

(declare-fun d!17157 () Bool)

(declare-fun e!48296 () Bool)

(assert (=> d!17157 e!48296))

(declare-fun res!39124 () Bool)

(assert (=> d!17157 (=> (not res!39124) (not e!48296))))

(declare-fun lt!33216 () ListLongMap!1419)

(assert (=> d!17157 (= res!39124 (contains!723 lt!33216 (_1!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(declare-fun lt!33215 () List!1478)

(assert (=> d!17157 (= lt!33216 (ListLongMap!1420 lt!33215))))

(declare-fun lt!33217 () Unit!2078)

(declare-fun lt!33214 () Unit!2078)

(assert (=> d!17157 (= lt!33217 lt!33214)))

(assert (=> d!17157 (= (getValueByKey!133 lt!33215 (_1!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17157 (= lt!33214 (lemmaContainsTupThenGetReturnValue!50 lt!33215 (_1!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17157 (= lt!33215 (insertStrictlySorted!53 (toList!725 lt!32921) (_1!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17157 (= (+!94 lt!32921 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!33216)))

(declare-fun b!73888 () Bool)

(declare-fun res!39125 () Bool)

(assert (=> b!73888 (=> (not res!39125) (not e!48296))))

(assert (=> b!73888 (= res!39125 (= (getValueByKey!133 (toList!725 lt!33216) (_1!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(declare-fun b!73889 () Bool)

(assert (=> b!73889 (= e!48296 (contains!724 (toList!725 lt!33216) (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))

(assert (= (and d!17157 res!39124) b!73888))

(assert (= (and b!73888 res!39125) b!73889))

(declare-fun m!72599 () Bool)

(assert (=> d!17157 m!72599))

(declare-fun m!72601 () Bool)

(assert (=> d!17157 m!72601))

(declare-fun m!72603 () Bool)

(assert (=> d!17157 m!72603))

(declare-fun m!72605 () Bool)

(assert (=> d!17157 m!72605))

(declare-fun m!72607 () Bool)

(assert (=> b!73888 m!72607))

(declare-fun m!72609 () Bool)

(assert (=> b!73889 m!72609))

(assert (=> b!73442 d!17157))

(declare-fun d!17159 () Bool)

(declare-fun e!48300 () Bool)

(assert (=> d!17159 e!48300))

(declare-fun res!39126 () Bool)

(assert (=> d!17159 (=> (not res!39126) (not e!48300))))

(declare-fun lt!33219 () ListLongMap!1419)

(assert (=> d!17159 (= res!39126 (not (contains!723 lt!33219 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48298 () ListLongMap!1419)

(assert (=> d!17159 (= lt!33219 e!48298)))

(declare-fun c!11056 () Bool)

(assert (=> d!17159 (= c!11056 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17159 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17159 (= (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33219)))

(declare-fun b!73890 () Bool)

(declare-fun e!48302 () ListLongMap!1419)

(assert (=> b!73890 (= e!48298 e!48302)))

(declare-fun c!11054 () Bool)

(assert (=> b!73890 (= c!11054 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73891 () Bool)

(assert (=> b!73891 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> b!73891 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))))))))

(declare-fun e!48303 () Bool)

(assert (=> b!73891 (= e!48303 (= (apply!75 lt!33219 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6530 () Bool)

(declare-fun call!6533 () ListLongMap!1419)

(assert (=> bm!6530 (= call!6533 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16)))))

(declare-fun b!73892 () Bool)

(declare-fun e!48297 () Bool)

(assert (=> b!73892 (= e!48297 e!48303)))

(assert (=> b!73892 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun res!39129 () Bool)

(assert (=> b!73892 (= res!39129 (contains!723 lt!33219 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73892 (=> (not res!39129) (not e!48303))))

(declare-fun b!73893 () Bool)

(assert (=> b!73893 (= e!48300 e!48297)))

(declare-fun c!11057 () Bool)

(declare-fun e!48299 () Bool)

(assert (=> b!73893 (= c!11057 e!48299)))

(declare-fun res!39128 () Bool)

(assert (=> b!73893 (=> (not res!39128) (not e!48299))))

(assert (=> b!73893 (= res!39128 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73894 () Bool)

(declare-fun res!39127 () Bool)

(assert (=> b!73894 (=> (not res!39127) (not e!48300))))

(assert (=> b!73894 (= res!39127 (not (contains!723 lt!33219 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73895 () Bool)

(assert (=> b!73895 (= e!48299 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73895 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!73896 () Bool)

(assert (=> b!73896 (= e!48298 (ListLongMap!1420 Nil!1475))))

(declare-fun b!73897 () Bool)

(declare-fun e!48301 () Bool)

(assert (=> b!73897 (= e!48301 (isEmpty!316 lt!33219))))

(declare-fun b!73898 () Bool)

(assert (=> b!73898 (= e!48297 e!48301)))

(declare-fun c!11055 () Bool)

(assert (=> b!73898 (= c!11055 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!73899 () Bool)

(assert (=> b!73899 (= e!48302 call!6533)))

(declare-fun b!73900 () Bool)

(assert (=> b!73900 (= e!48301 (= lt!33219 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (ite c!10872 (ite c!10871 (extraKeys!2072 newMap!16) lt!32775) (extraKeys!2072 newMap!16)) (zeroValue!2115 newMap!16) (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16))))))

(declare-fun b!73901 () Bool)

(declare-fun lt!33222 () Unit!2078)

(declare-fun lt!33223 () Unit!2078)

(assert (=> b!73901 (= lt!33222 lt!33223)))

(declare-fun lt!33220 () ListLongMap!1419)

(declare-fun lt!33224 () (_ BitVec 64))

(declare-fun lt!33221 () V!2947)

(declare-fun lt!33218 () (_ BitVec 64))

(assert (=> b!73901 (not (contains!723 (+!94 lt!33220 (tuple2!2123 lt!33224 lt!33221)) lt!33218))))

(assert (=> b!73901 (= lt!33223 (addStillNotContains!24 lt!33220 lt!33224 lt!33221 lt!33218))))

(assert (=> b!73901 (= lt!33218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73901 (= lt!33221 (get!1139 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73901 (= lt!33224 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73901 (= lt!33220 call!6533)))

(assert (=> b!73901 (= e!48302 (+!94 call!6533 (tuple2!2123 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (get!1139 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17159 c!11056) b!73896))

(assert (= (and d!17159 (not c!11056)) b!73890))

(assert (= (and b!73890 c!11054) b!73901))

(assert (= (and b!73890 (not c!11054)) b!73899))

(assert (= (or b!73901 b!73899) bm!6530))

(assert (= (and d!17159 res!39126) b!73894))

(assert (= (and b!73894 res!39127) b!73893))

(assert (= (and b!73893 res!39128) b!73895))

(assert (= (and b!73893 c!11057) b!73892))

(assert (= (and b!73893 (not c!11057)) b!73898))

(assert (= (and b!73892 res!39129) b!73891))

(assert (= (and b!73898 c!11055) b!73900))

(assert (= (and b!73898 (not c!11055)) b!73897))

(declare-fun b_lambda!3315 () Bool)

(assert (=> (not b_lambda!3315) (not b!73891)))

(assert (=> b!73891 t!5042))

(declare-fun b_and!4527 () Bool)

(assert (= b_and!4523 (and (=> t!5042 result!2693) b_and!4527)))

(assert (=> b!73891 t!5044))

(declare-fun b_and!4529 () Bool)

(assert (= b_and!4525 (and (=> t!5044 result!2695) b_and!4529)))

(declare-fun b_lambda!3317 () Bool)

(assert (=> (not b_lambda!3317) (not b!73901)))

(assert (=> b!73901 t!5042))

(declare-fun b_and!4531 () Bool)

(assert (= b_and!4527 (and (=> t!5042 result!2693) b_and!4531)))

(assert (=> b!73901 t!5044))

(declare-fun b_and!4533 () Bool)

(assert (= b_and!4529 (and (=> t!5044 result!2695) b_and!4533)))

(assert (=> b!73892 m!71563))

(assert (=> b!73892 m!71563))

(declare-fun m!72611 () Bool)

(assert (=> b!73892 m!72611))

(declare-fun m!72613 () Bool)

(assert (=> d!17159 m!72613))

(assert (=> d!17159 m!71705))

(assert (=> b!73890 m!71563))

(assert (=> b!73890 m!71563))

(assert (=> b!73890 m!71567))

(declare-fun m!72615 () Bool)

(assert (=> b!73894 m!72615))

(assert (=> b!73895 m!71563))

(assert (=> b!73895 m!71563))

(assert (=> b!73895 m!71567))

(declare-fun m!72617 () Bool)

(assert (=> bm!6530 m!72617))

(assert (=> b!73891 m!71843))

(assert (=> b!73891 m!71717))

(assert (=> b!73891 m!71845))

(assert (=> b!73891 m!71563))

(assert (=> b!73891 m!71843))

(assert (=> b!73891 m!71563))

(declare-fun m!72619 () Bool)

(assert (=> b!73891 m!72619))

(assert (=> b!73891 m!71717))

(assert (=> b!73900 m!72617))

(assert (=> b!73901 m!71717))

(assert (=> b!73901 m!71843))

(assert (=> b!73901 m!71717))

(assert (=> b!73901 m!71845))

(declare-fun m!72621 () Bool)

(assert (=> b!73901 m!72621))

(declare-fun m!72623 () Bool)

(assert (=> b!73901 m!72623))

(declare-fun m!72625 () Bool)

(assert (=> b!73901 m!72625))

(assert (=> b!73901 m!71843))

(assert (=> b!73901 m!71563))

(assert (=> b!73901 m!72621))

(declare-fun m!72627 () Bool)

(assert (=> b!73901 m!72627))

(declare-fun m!72629 () Bool)

(assert (=> b!73897 m!72629))

(assert (=> b!73442 d!17159))

(declare-fun d!17161 () Bool)

(declare-fun e!48304 () Bool)

(assert (=> d!17161 e!48304))

(declare-fun res!39130 () Bool)

(assert (=> d!17161 (=> (not res!39130) (not e!48304))))

(declare-fun lt!33227 () ListLongMap!1419)

(assert (=> d!17161 (= res!39130 (contains!723 lt!33227 (_1!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33226 () List!1478)

(assert (=> d!17161 (= lt!33227 (ListLongMap!1420 lt!33226))))

(declare-fun lt!33228 () Unit!2078)

(declare-fun lt!33225 () Unit!2078)

(assert (=> d!17161 (= lt!33228 lt!33225)))

(assert (=> d!17161 (= (getValueByKey!133 lt!33226 (_1!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17161 (= lt!33225 (lemmaContainsTupThenGetReturnValue!50 lt!33226 (_1!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17161 (= lt!33226 (insertStrictlySorted!53 (toList!725 lt!32904) (_1!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17161 (= (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))) lt!33227)))

(declare-fun b!73902 () Bool)

(declare-fun res!39131 () Bool)

(assert (=> b!73902 (=> (not res!39131) (not e!48304))))

(assert (=> b!73902 (= res!39131 (= (getValueByKey!133 (toList!725 lt!33227) (_1!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))))))))

(declare-fun b!73903 () Bool)

(assert (=> b!73903 (= e!48304 (contains!724 (toList!725 lt!33227) (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17161 res!39130) b!73902))

(assert (= (and b!73902 res!39131) b!73903))

(declare-fun m!72631 () Bool)

(assert (=> d!17161 m!72631))

(declare-fun m!72633 () Bool)

(assert (=> d!17161 m!72633))

(declare-fun m!72635 () Bool)

(assert (=> d!17161 m!72635))

(declare-fun m!72637 () Bool)

(assert (=> d!17161 m!72637))

(declare-fun m!72639 () Bool)

(assert (=> b!73902 m!72639))

(declare-fun m!72641 () Bool)

(assert (=> b!73903 m!72641))

(assert (=> b!73442 d!17161))

(declare-fun d!17163 () Bool)

(declare-fun e!48305 () Bool)

(assert (=> d!17163 e!48305))

(declare-fun res!39132 () Bool)

(assert (=> d!17163 (=> (not res!39132) (not e!48305))))

(declare-fun lt!33231 () ListLongMap!1419)

(assert (=> d!17163 (= res!39132 (contains!723 lt!33231 (_1!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33230 () List!1478)

(assert (=> d!17163 (= lt!33231 (ListLongMap!1420 lt!33230))))

(declare-fun lt!33232 () Unit!2078)

(declare-fun lt!33229 () Unit!2078)

(assert (=> d!17163 (= lt!33232 lt!33229)))

(assert (=> d!17163 (= (getValueByKey!133 lt!33230 (_1!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17163 (= lt!33229 (lemmaContainsTupThenGetReturnValue!50 lt!33230 (_1!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17163 (= lt!33230 (insertStrictlySorted!53 (toList!725 lt!32918) (_1!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17163 (= (+!94 lt!32918 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))) lt!33231)))

(declare-fun b!73904 () Bool)

(declare-fun res!39133 () Bool)

(assert (=> b!73904 (=> (not res!39133) (not e!48305))))

(assert (=> b!73904 (= res!39133 (= (getValueByKey!133 (toList!725 lt!33231) (_1!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))))))))

(declare-fun b!73905 () Bool)

(assert (=> b!73905 (= e!48305 (contains!724 (toList!725 lt!33231) (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17163 res!39132) b!73904))

(assert (= (and b!73904 res!39133) b!73905))

(declare-fun m!72643 () Bool)

(assert (=> d!17163 m!72643))

(declare-fun m!72645 () Bool)

(assert (=> d!17163 m!72645))

(declare-fun m!72647 () Bool)

(assert (=> d!17163 m!72647))

(declare-fun m!72649 () Bool)

(assert (=> d!17163 m!72649))

(declare-fun m!72651 () Bool)

(assert (=> b!73904 m!72651))

(declare-fun m!72653 () Bool)

(assert (=> b!73905 m!72653))

(assert (=> b!73442 d!17163))

(declare-fun d!17165 () Bool)

(assert (=> d!17165 (= (apply!75 lt!32907 lt!32911) (get!1142 (getValueByKey!133 (toList!725 lt!32907) lt!32911)))))

(declare-fun bs!3174 () Bool)

(assert (= bs!3174 d!17165))

(declare-fun m!72655 () Bool)

(assert (=> bs!3174 m!72655))

(assert (=> bs!3174 m!72655))

(declare-fun m!72657 () Bool)

(assert (=> bs!3174 m!72657))

(assert (=> b!73442 d!17165))

(declare-fun d!17167 () Bool)

(declare-fun e!48307 () Bool)

(assert (=> d!17167 e!48307))

(declare-fun res!39134 () Bool)

(assert (=> d!17167 (=> res!39134 e!48307)))

(declare-fun lt!33236 () Bool)

(assert (=> d!17167 (= res!39134 (not lt!33236))))

(declare-fun lt!33235 () Bool)

(assert (=> d!17167 (= lt!33236 lt!33235)))

(declare-fun lt!33234 () Unit!2078)

(declare-fun e!48306 () Unit!2078)

(assert (=> d!17167 (= lt!33234 e!48306)))

(declare-fun c!11058 () Bool)

(assert (=> d!17167 (= c!11058 lt!33235)))

(assert (=> d!17167 (= lt!33235 (containsKey!137 (toList!725 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))) lt!32906))))

(assert (=> d!17167 (= (contains!723 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))) lt!32906) lt!33236)))

(declare-fun b!73906 () Bool)

(declare-fun lt!33233 () Unit!2078)

(assert (=> b!73906 (= e!48306 lt!33233)))

(assert (=> b!73906 (= lt!33233 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))) lt!32906))))

(assert (=> b!73906 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))) lt!32906))))

(declare-fun b!73907 () Bool)

(declare-fun Unit!2110 () Unit!2078)

(assert (=> b!73907 (= e!48306 Unit!2110)))

(declare-fun b!73908 () Bool)

(assert (=> b!73908 (= e!48307 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16)))) lt!32906)))))

(assert (= (and d!17167 c!11058) b!73906))

(assert (= (and d!17167 (not c!11058)) b!73907))

(assert (= (and d!17167 (not res!39134)) b!73908))

(declare-fun m!72659 () Bool)

(assert (=> d!17167 m!72659))

(declare-fun m!72661 () Bool)

(assert (=> b!73906 m!72661))

(declare-fun m!72663 () Bool)

(assert (=> b!73906 m!72663))

(assert (=> b!73906 m!72663))

(declare-fun m!72665 () Bool)

(assert (=> b!73906 m!72665))

(assert (=> b!73908 m!72663))

(assert (=> b!73908 m!72663))

(assert (=> b!73908 m!72665))

(assert (=> b!73442 d!17167))

(declare-fun d!17169 () Bool)

(assert (=> d!17169 (= (apply!75 (+!94 lt!32921 (tuple2!2123 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!32920) (apply!75 lt!32921 lt!32920))))

(declare-fun lt!33237 () Unit!2078)

(assert (=> d!17169 (= lt!33237 (choose!419 lt!32921 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) lt!32920))))

(declare-fun e!48308 () Bool)

(assert (=> d!17169 e!48308))

(declare-fun res!39135 () Bool)

(assert (=> d!17169 (=> (not res!39135) (not e!48308))))

(assert (=> d!17169 (= res!39135 (contains!723 lt!32921 lt!32920))))

(assert (=> d!17169 (= (addApplyDifferent!51 lt!32921 lt!32922 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) lt!32920) lt!33237)))

(declare-fun b!73909 () Bool)

(assert (=> b!73909 (= e!48308 (not (= lt!32920 lt!32922)))))

(assert (= (and d!17169 res!39135) b!73909))

(assert (=> d!17169 m!71865))

(assert (=> d!17169 m!71889))

(assert (=> d!17169 m!71869))

(declare-fun m!72667 () Bool)

(assert (=> d!17169 m!72667))

(assert (=> d!17169 m!71865))

(declare-fun m!72669 () Bool)

(assert (=> d!17169 m!72669))

(assert (=> b!73442 d!17169))

(declare-fun d!17171 () Bool)

(declare-fun e!48309 () Bool)

(assert (=> d!17171 e!48309))

(declare-fun res!39136 () Bool)

(assert (=> d!17171 (=> (not res!39136) (not e!48309))))

(declare-fun lt!33240 () ListLongMap!1419)

(assert (=> d!17171 (= res!39136 (contains!723 lt!33240 (_1!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(declare-fun lt!33239 () List!1478)

(assert (=> d!17171 (= lt!33240 (ListLongMap!1420 lt!33239))))

(declare-fun lt!33241 () Unit!2078)

(declare-fun lt!33238 () Unit!2078)

(assert (=> d!17171 (= lt!33241 lt!33238)))

(assert (=> d!17171 (= (getValueByKey!133 lt!33239 (_1!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17171 (= lt!33238 (lemmaContainsTupThenGetReturnValue!50 lt!33239 (_1!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17171 (= lt!33239 (insertStrictlySorted!53 (toList!725 lt!32907) (_1!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17171 (= (+!94 lt!32907 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!33240)))

(declare-fun b!73910 () Bool)

(declare-fun res!39137 () Bool)

(assert (=> b!73910 (=> (not res!39137) (not e!48309))))

(assert (=> b!73910 (= res!39137 (= (getValueByKey!133 (toList!725 lt!33240) (_1!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(declare-fun b!73911 () Bool)

(assert (=> b!73911 (= e!48309 (contains!724 (toList!725 lt!33240) (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))

(assert (= (and d!17171 res!39136) b!73910))

(assert (= (and b!73910 res!39137) b!73911))

(declare-fun m!72671 () Bool)

(assert (=> d!17171 m!72671))

(declare-fun m!72673 () Bool)

(assert (=> d!17171 m!72673))

(declare-fun m!72675 () Bool)

(assert (=> d!17171 m!72675))

(declare-fun m!72677 () Bool)

(assert (=> d!17171 m!72677))

(declare-fun m!72679 () Bool)

(assert (=> b!73910 m!72679))

(declare-fun m!72681 () Bool)

(assert (=> b!73911 m!72681))

(assert (=> b!73442 d!17171))

(declare-fun d!17173 () Bool)

(assert (=> d!17173 (= (apply!75 lt!32918 lt!32917) (get!1142 (getValueByKey!133 (toList!725 lt!32918) lt!32917)))))

(declare-fun bs!3175 () Bool)

(assert (= bs!3175 d!17173))

(declare-fun m!72683 () Bool)

(assert (=> bs!3175 m!72683))

(assert (=> bs!3175 m!72683))

(declare-fun m!72685 () Bool)

(assert (=> bs!3175 m!72685))

(assert (=> b!73442 d!17173))

(declare-fun d!17175 () Bool)

(assert (=> d!17175 (= (apply!75 lt!32921 lt!32920) (get!1142 (getValueByKey!133 (toList!725 lt!32921) lt!32920)))))

(declare-fun bs!3176 () Bool)

(assert (= bs!3176 d!17175))

(declare-fun m!72687 () Bool)

(assert (=> bs!3176 m!72687))

(assert (=> bs!3176 m!72687))

(declare-fun m!72689 () Bool)

(assert (=> bs!3176 m!72689))

(assert (=> b!73442 d!17175))

(declare-fun d!17177 () Bool)

(assert (=> d!17177 (= (apply!75 (+!94 lt!32907 (tuple2!2123 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!32911) (apply!75 lt!32907 lt!32911))))

(declare-fun lt!33242 () Unit!2078)

(assert (=> d!17177 (= lt!33242 (choose!419 lt!32907 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) lt!32911))))

(declare-fun e!48310 () Bool)

(assert (=> d!17177 e!48310))

(declare-fun res!39138 () Bool)

(assert (=> d!17177 (=> (not res!39138) (not e!48310))))

(assert (=> d!17177 (= res!39138 (contains!723 lt!32907 lt!32911))))

(assert (=> d!17177 (= (addApplyDifferent!51 lt!32907 lt!32912 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)) lt!32911) lt!33242)))

(declare-fun b!73912 () Bool)

(assert (=> b!73912 (= e!48310 (not (= lt!32911 lt!32912)))))

(assert (= (and d!17177 res!39138) b!73912))

(assert (=> d!17177 m!71875))

(assert (=> d!17177 m!71877))

(assert (=> d!17177 m!71871))

(declare-fun m!72691 () Bool)

(assert (=> d!17177 m!72691))

(assert (=> d!17177 m!71875))

(declare-fun m!72693 () Bool)

(assert (=> d!17177 m!72693))

(assert (=> b!73442 d!17177))

(declare-fun d!17179 () Bool)

(assert (=> d!17179 (= (apply!75 (+!94 lt!32918 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))) lt!32917) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32918 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16)))) lt!32917)))))

(declare-fun bs!3177 () Bool)

(assert (= bs!3177 d!17179))

(declare-fun m!72695 () Bool)

(assert (=> bs!3177 m!72695))

(assert (=> bs!3177 m!72695))

(declare-fun m!72697 () Bool)

(assert (=> bs!3177 m!72697))

(assert (=> b!73442 d!17179))

(declare-fun d!17181 () Bool)

(assert (=> d!17181 (= (apply!75 (+!94 lt!32918 (tuple2!2123 lt!32916 (zeroValue!2115 newMap!16))) lt!32917) (apply!75 lt!32918 lt!32917))))

(declare-fun lt!33243 () Unit!2078)

(assert (=> d!17181 (= lt!33243 (choose!419 lt!32918 lt!32916 (zeroValue!2115 newMap!16) lt!32917))))

(declare-fun e!48311 () Bool)

(assert (=> d!17181 e!48311))

(declare-fun res!39139 () Bool)

(assert (=> d!17181 (=> (not res!39139) (not e!48311))))

(assert (=> d!17181 (= res!39139 (contains!723 lt!32918 lt!32917))))

(assert (=> d!17181 (= (addApplyDifferent!51 lt!32918 lt!32916 (zeroValue!2115 newMap!16) lt!32917) lt!33243)))

(declare-fun b!73913 () Bool)

(assert (=> b!73913 (= e!48311 (not (= lt!32917 lt!32916)))))

(assert (= (and d!17181 res!39139) b!73913))

(assert (=> d!17181 m!71881))

(assert (=> d!17181 m!71883))

(assert (=> d!17181 m!71891))

(declare-fun m!72699 () Bool)

(assert (=> d!17181 m!72699))

(assert (=> d!17181 m!71881))

(declare-fun m!72701 () Bool)

(assert (=> d!17181 m!72701))

(assert (=> b!73442 d!17181))

(declare-fun d!17183 () Bool)

(assert (=> d!17183 (contains!723 (+!94 lt!32904 (tuple2!2123 lt!32923 (zeroValue!2115 newMap!16))) lt!32906)))

(declare-fun lt!33244 () Unit!2078)

(assert (=> d!17183 (= lt!33244 (choose!418 lt!32904 lt!32923 (zeroValue!2115 newMap!16) lt!32906))))

(assert (=> d!17183 (contains!723 lt!32904 lt!32906)))

(assert (=> d!17183 (= (addStillContains!51 lt!32904 lt!32923 (zeroValue!2115 newMap!16) lt!32906) lt!33244)))

(declare-fun bs!3178 () Bool)

(assert (= bs!3178 d!17183))

(assert (=> bs!3178 m!71863))

(assert (=> bs!3178 m!71863))

(assert (=> bs!3178 m!71887))

(declare-fun m!72703 () Bool)

(assert (=> bs!3178 m!72703))

(declare-fun m!72705 () Bool)

(assert (=> bs!3178 m!72705))

(assert (=> b!73442 d!17183))

(declare-fun d!17185 () Bool)

(declare-fun res!39140 () Bool)

(declare-fun e!48312 () Bool)

(assert (=> d!17185 (=> res!39140 e!48312)))

(assert (=> d!17185 (= res!39140 (and ((_ is Cons!1474) lt!32843) (= (_1!1072 (h!2061 lt!32843)) (_1!1072 lt!32538))))))

(assert (=> d!17185 (= (containsKey!137 lt!32843 (_1!1072 lt!32538)) e!48312)))

(declare-fun b!73914 () Bool)

(declare-fun e!48313 () Bool)

(assert (=> b!73914 (= e!48312 e!48313)))

(declare-fun res!39141 () Bool)

(assert (=> b!73914 (=> (not res!39141) (not e!48313))))

(assert (=> b!73914 (= res!39141 (and (or (not ((_ is Cons!1474) lt!32843)) (bvsle (_1!1072 (h!2061 lt!32843)) (_1!1072 lt!32538))) ((_ is Cons!1474) lt!32843) (bvslt (_1!1072 (h!2061 lt!32843)) (_1!1072 lt!32538))))))

(declare-fun b!73915 () Bool)

(assert (=> b!73915 (= e!48313 (containsKey!137 (t!5035 lt!32843) (_1!1072 lt!32538)))))

(assert (= (and d!17185 (not res!39140)) b!73914))

(assert (= (and b!73914 res!39141) b!73915))

(declare-fun m!72707 () Bool)

(assert (=> b!73915 m!72707))

(assert (=> b!73354 d!17185))

(declare-fun d!17187 () Bool)

(declare-fun e!48315 () Bool)

(assert (=> d!17187 e!48315))

(declare-fun res!39142 () Bool)

(assert (=> d!17187 (=> res!39142 e!48315)))

(declare-fun lt!33248 () Bool)

(assert (=> d!17187 (= res!39142 (not lt!33248))))

(declare-fun lt!33247 () Bool)

(assert (=> d!17187 (= lt!33248 lt!33247)))

(declare-fun lt!33246 () Unit!2078)

(declare-fun e!48314 () Unit!2078)

(assert (=> d!17187 (= lt!33246 e!48314)))

(declare-fun c!11059 () Bool)

(assert (=> d!17187 (= c!11059 lt!33247)))

(assert (=> d!17187 (= lt!33247 (containsKey!137 (toList!725 lt!33078) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!17187 (= (contains!723 lt!33078 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) lt!33248)))

(declare-fun b!73916 () Bool)

(declare-fun lt!33245 () Unit!2078)

(assert (=> b!73916 (= e!48314 lt!33245)))

(assert (=> b!73916 (= lt!33245 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33078) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> b!73916 (isDefined!86 (getValueByKey!133 (toList!725 lt!33078) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!73917 () Bool)

(declare-fun Unit!2111 () Unit!2078)

(assert (=> b!73917 (= e!48314 Unit!2111)))

(declare-fun b!73918 () Bool)

(assert (=> b!73918 (= e!48315 (isDefined!86 (getValueByKey!133 (toList!725 lt!33078) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(assert (= (and d!17187 c!11059) b!73916))

(assert (= (and d!17187 (not c!11059)) b!73917))

(assert (= (and d!17187 (not res!39142)) b!73918))

(declare-fun m!72709 () Bool)

(assert (=> d!17187 m!72709))

(declare-fun m!72711 () Bool)

(assert (=> b!73916 m!72711))

(assert (=> b!73916 m!72149))

(assert (=> b!73916 m!72149))

(declare-fun m!72713 () Bool)

(assert (=> b!73916 m!72713))

(assert (=> b!73918 m!72149))

(assert (=> b!73918 m!72149))

(assert (=> b!73918 m!72713))

(assert (=> d!16983 d!17187))

(declare-fun b!73921 () Bool)

(declare-fun e!48317 () Option!139)

(assert (=> b!73921 (= e!48317 (getValueByKey!133 (t!5035 lt!33077) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun c!11060 () Bool)

(declare-fun d!17189 () Bool)

(assert (=> d!17189 (= c!11060 (and ((_ is Cons!1474) lt!33077) (= (_1!1072 (h!2061 lt!33077)) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun e!48316 () Option!139)

(assert (=> d!17189 (= (getValueByKey!133 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) e!48316)))

(declare-fun b!73920 () Bool)

(assert (=> b!73920 (= e!48316 e!48317)))

(declare-fun c!11061 () Bool)

(assert (=> b!73920 (= c!11061 (and ((_ is Cons!1474) lt!33077) (not (= (_1!1072 (h!2061 lt!33077)) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))))

(declare-fun b!73919 () Bool)

(assert (=> b!73919 (= e!48316 (Some!138 (_2!1072 (h!2061 lt!33077))))))

(declare-fun b!73922 () Bool)

(assert (=> b!73922 (= e!48317 None!137)))

(assert (= (and d!17189 c!11060) b!73919))

(assert (= (and d!17189 (not c!11060)) b!73920))

(assert (= (and b!73920 c!11061) b!73921))

(assert (= (and b!73920 (not c!11061)) b!73922))

(declare-fun m!72715 () Bool)

(assert (=> b!73921 m!72715))

(assert (=> d!16983 d!17189))

(declare-fun d!17191 () Bool)

(assert (=> d!17191 (= (getValueByKey!133 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) (Some!138 (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun lt!33249 () Unit!2078)

(assert (=> d!17191 (= lt!33249 (choose!412 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48318 () Bool)

(assert (=> d!17191 e!48318))

(declare-fun res!39143 () Bool)

(assert (=> d!17191 (=> (not res!39143) (not e!48318))))

(assert (=> d!17191 (= res!39143 (isStrictlySorted!292 lt!33077))))

(assert (=> d!17191 (= (lemmaContainsTupThenGetReturnValue!50 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) lt!33249)))

(declare-fun b!73923 () Bool)

(declare-fun res!39144 () Bool)

(assert (=> b!73923 (=> (not res!39144) (not e!48318))))

(assert (=> b!73923 (= res!39144 (containsKey!137 lt!33077 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!73924 () Bool)

(assert (=> b!73924 (= e!48318 (contains!724 lt!33077 (tuple2!2123 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(assert (= (and d!17191 res!39143) b!73923))

(assert (= (and b!73923 res!39144) b!73924))

(assert (=> d!17191 m!72143))

(declare-fun m!72717 () Bool)

(assert (=> d!17191 m!72717))

(declare-fun m!72719 () Bool)

(assert (=> d!17191 m!72719))

(declare-fun m!72721 () Bool)

(assert (=> b!73923 m!72721))

(declare-fun m!72723 () Bool)

(assert (=> b!73924 m!72723))

(assert (=> d!16983 d!17191))

(declare-fun b!73925 () Bool)

(declare-fun e!48321 () List!1478)

(declare-fun call!6534 () List!1478)

(assert (=> b!73925 (= e!48321 call!6534)))

(declare-fun b!73926 () Bool)

(declare-fun e!48323 () List!1478)

(declare-fun call!6535 () List!1478)

(assert (=> b!73926 (= e!48323 call!6535)))

(declare-fun b!73927 () Bool)

(declare-fun e!48319 () List!1478)

(declare-fun call!6536 () List!1478)

(assert (=> b!73927 (= e!48319 call!6536)))

(declare-fun b!73928 () Bool)

(declare-fun e!48320 () List!1478)

(declare-fun c!11065 () Bool)

(declare-fun c!11063 () Bool)

(assert (=> b!73928 (= e!48320 (ite c!11065 (t!5035 (toList!725 e!47904)) (ite c!11063 (Cons!1474 (h!2061 (toList!725 e!47904)) (t!5035 (toList!725 e!47904))) Nil!1475)))))

(declare-fun b!73929 () Bool)

(assert (=> b!73929 (= e!48319 e!48321)))

(assert (=> b!73929 (= c!11065 (and ((_ is Cons!1474) (toList!725 e!47904)) (= (_1!1072 (h!2061 (toList!725 e!47904))) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun bm!6531 () Bool)

(assert (=> bm!6531 (= call!6535 call!6534)))

(declare-fun bm!6532 () Bool)

(declare-fun c!11062 () Bool)

(assert (=> bm!6532 (= call!6536 ($colon$colon!66 e!48320 (ite c!11062 (h!2061 (toList!725 e!47904)) (tuple2!2123 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))))

(declare-fun c!11064 () Bool)

(assert (=> bm!6532 (= c!11064 c!11062)))

(declare-fun b!73930 () Bool)

(declare-fun res!39146 () Bool)

(declare-fun e!48322 () Bool)

(assert (=> b!73930 (=> (not res!39146) (not e!48322))))

(declare-fun lt!33250 () List!1478)

(assert (=> b!73930 (= res!39146 (containsKey!137 lt!33250 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun bm!6533 () Bool)

(assert (=> bm!6533 (= call!6534 call!6536)))

(declare-fun b!73931 () Bool)

(assert (=> b!73931 (= e!48322 (contains!724 lt!33250 (tuple2!2123 (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!73932 () Bool)

(assert (=> b!73932 (= e!48323 call!6535)))

(declare-fun b!73933 () Bool)

(assert (=> b!73933 (= e!48320 (insertStrictlySorted!53 (t!5035 (toList!725 e!47904)) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!73934 () Bool)

(assert (=> b!73934 (= c!11063 (and ((_ is Cons!1474) (toList!725 e!47904)) (bvsgt (_1!1072 (h!2061 (toList!725 e!47904))) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(assert (=> b!73934 (= e!48321 e!48323)))

(declare-fun d!17193 () Bool)

(assert (=> d!17193 e!48322))

(declare-fun res!39145 () Bool)

(assert (=> d!17193 (=> (not res!39145) (not e!48322))))

(assert (=> d!17193 (= res!39145 (isStrictlySorted!292 lt!33250))))

(assert (=> d!17193 (= lt!33250 e!48319)))

(assert (=> d!17193 (= c!11062 (and ((_ is Cons!1474) (toList!725 e!47904)) (bvslt (_1!1072 (h!2061 (toList!725 e!47904))) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(assert (=> d!17193 (isStrictlySorted!292 (toList!725 e!47904))))

(assert (=> d!17193 (= (insertStrictlySorted!53 (toList!725 e!47904) (_1!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (_2!1072 (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))) lt!33250)))

(assert (= (and d!17193 c!11062) b!73927))

(assert (= (and d!17193 (not c!11062)) b!73929))

(assert (= (and b!73929 c!11065) b!73925))

(assert (= (and b!73929 (not c!11065)) b!73934))

(assert (= (and b!73934 c!11063) b!73932))

(assert (= (and b!73934 (not c!11063)) b!73926))

(assert (= (or b!73932 b!73926) bm!6531))

(assert (= (or b!73925 bm!6531) bm!6533))

(assert (= (or b!73927 bm!6533) bm!6532))

(assert (= (and bm!6532 c!11064) b!73933))

(assert (= (and bm!6532 (not c!11064)) b!73928))

(assert (= (and d!17193 res!39145) b!73930))

(assert (= (and b!73930 res!39146) b!73931))

(declare-fun m!72725 () Bool)

(assert (=> bm!6532 m!72725))

(declare-fun m!72727 () Bool)

(assert (=> b!73933 m!72727))

(declare-fun m!72729 () Bool)

(assert (=> b!73931 m!72729))

(declare-fun m!72731 () Bool)

(assert (=> d!17193 m!72731))

(declare-fun m!72733 () Bool)

(assert (=> d!17193 m!72733))

(declare-fun m!72735 () Bool)

(assert (=> b!73930 m!72735))

(assert (=> d!16983 d!17193))

(declare-fun d!17195 () Bool)

(declare-fun res!39147 () Bool)

(declare-fun e!48324 () Bool)

(assert (=> d!17195 (=> res!39147 e!48324)))

(assert (=> d!17195 (= res!39147 (and ((_ is Cons!1474) (toList!725 lt!32681)) (= (_1!1072 (h!2061 (toList!725 lt!32681))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17195 (= (containsKey!137 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000) e!48324)))

(declare-fun b!73935 () Bool)

(declare-fun e!48325 () Bool)

(assert (=> b!73935 (= e!48324 e!48325)))

(declare-fun res!39148 () Bool)

(assert (=> b!73935 (=> (not res!39148) (not e!48325))))

(assert (=> b!73935 (= res!39148 (and (or (not ((_ is Cons!1474) (toList!725 lt!32681))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32681))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1474) (toList!725 lt!32681)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32681))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73936 () Bool)

(assert (=> b!73936 (= e!48325 (containsKey!137 (t!5035 (toList!725 lt!32681)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17195 (not res!39147)) b!73935))

(assert (= (and b!73935 res!39148) b!73936))

(declare-fun m!72737 () Bool)

(assert (=> b!73936 m!72737))

(assert (=> d!16991 d!17195))

(declare-fun d!17197 () Bool)

(assert (=> d!17197 (= (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73594 d!17197))

(declare-fun d!17199 () Bool)

(assert (=> d!17199 (= ($colon$colon!66 e!48167 (ite c!10986 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538)))) (Cons!1474 (ite c!10986 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))) e!48167))))

(assert (=> bm!6509 d!17199))

(declare-fun d!17201 () Bool)

(declare-fun lt!33251 () Bool)

(assert (=> d!17201 (= lt!33251 (select (content!77 (toList!725 lt!33078)) (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun e!48326 () Bool)

(assert (=> d!17201 (= lt!33251 e!48326)))

(declare-fun res!39149 () Bool)

(assert (=> d!17201 (=> (not res!39149) (not e!48326))))

(assert (=> d!17201 (= res!39149 ((_ is Cons!1474) (toList!725 lt!33078)))))

(assert (=> d!17201 (= (contains!724 (toList!725 lt!33078) (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33251)))

(declare-fun b!73937 () Bool)

(declare-fun e!48327 () Bool)

(assert (=> b!73937 (= e!48326 e!48327)))

(declare-fun res!39150 () Bool)

(assert (=> b!73937 (=> res!39150 e!48327)))

(assert (=> b!73937 (= res!39150 (= (h!2061 (toList!725 lt!33078)) (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!73938 () Bool)

(assert (=> b!73938 (= e!48327 (contains!724 (t!5035 (toList!725 lt!33078)) (ite c!10872 (ite c!10871 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32533) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (= (and d!17201 res!39149) b!73937))

(assert (= (and b!73937 (not res!39150)) b!73938))

(declare-fun m!72739 () Bool)

(assert (=> d!17201 m!72739))

(declare-fun m!72741 () Bool)

(assert (=> d!17201 m!72741))

(declare-fun m!72743 () Bool)

(assert (=> b!73938 m!72743))

(assert (=> b!73613 d!17201))

(declare-fun d!17203 () Bool)

(declare-fun e!48329 () Bool)

(assert (=> d!17203 e!48329))

(declare-fun res!39151 () Bool)

(assert (=> d!17203 (=> res!39151 e!48329)))

(declare-fun lt!33255 () Bool)

(assert (=> d!17203 (= res!39151 (not lt!33255))))

(declare-fun lt!33254 () Bool)

(assert (=> d!17203 (= lt!33255 lt!33254)))

(declare-fun lt!33253 () Unit!2078)

(declare-fun e!48328 () Unit!2078)

(assert (=> d!17203 (= lt!33253 e!48328)))

(declare-fun c!11066 () Bool)

(assert (=> d!17203 (= c!11066 lt!33254)))

(assert (=> d!17203 (= lt!33254 (containsKey!137 (toList!725 lt!32860) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17203 (= (contains!723 lt!32860 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33255)))

(declare-fun b!73939 () Bool)

(declare-fun lt!33252 () Unit!2078)

(assert (=> b!73939 (= e!48328 lt!33252)))

(assert (=> b!73939 (= lt!33252 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32860) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73939 (isDefined!86 (getValueByKey!133 (toList!725 lt!32860) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73940 () Bool)

(declare-fun Unit!2112 () Unit!2078)

(assert (=> b!73940 (= e!48328 Unit!2112)))

(declare-fun b!73941 () Bool)

(assert (=> b!73941 (= e!48329 (isDefined!86 (getValueByKey!133 (toList!725 lt!32860) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17203 c!11066) b!73939))

(assert (= (and d!17203 (not c!11066)) b!73940))

(assert (= (and d!17203 (not res!39151)) b!73941))

(declare-fun m!72745 () Bool)

(assert (=> d!17203 m!72745))

(declare-fun m!72747 () Bool)

(assert (=> b!73939 m!72747))

(declare-fun m!72749 () Bool)

(assert (=> b!73939 m!72749))

(assert (=> b!73939 m!72749))

(declare-fun m!72751 () Bool)

(assert (=> b!73939 m!72751))

(assert (=> b!73941 m!72749))

(assert (=> b!73941 m!72749))

(assert (=> b!73941 m!72751))

(assert (=> bm!6462 d!17203))

(declare-fun d!17205 () Bool)

(assert (=> d!17205 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33256 () Unit!2078)

(assert (=> d!17205 (= lt!33256 (choose!422 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48330 () Bool)

(assert (=> d!17205 e!48330))

(declare-fun res!39152 () Bool)

(assert (=> d!17205 (=> (not res!39152) (not e!48330))))

(assert (=> d!17205 (= res!39152 (isStrictlySorted!292 (toList!725 lt!32681)))))

(assert (=> d!17205 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33256)))

(declare-fun b!73942 () Bool)

(assert (=> b!73942 (= e!48330 (containsKey!137 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17205 res!39152) b!73942))

(assert (=> d!17205 m!72013))

(assert (=> d!17205 m!72013))

(assert (=> d!17205 m!72161))

(declare-fun m!72753 () Bool)

(assert (=> d!17205 m!72753))

(assert (=> d!17205 m!72391))

(assert (=> b!73942 m!72157))

(assert (=> b!73614 d!17205))

(declare-fun d!17207 () Bool)

(assert (=> d!17207 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32681) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3179 () Bool)

(assert (= bs!3179 d!17207))

(assert (=> bs!3179 m!72013))

(declare-fun m!72755 () Bool)

(assert (=> bs!3179 m!72755))

(assert (=> b!73614 d!17207))

(assert (=> b!73614 d!17121))

(declare-fun d!17209 () Bool)

(assert (=> d!17209 (= (apply!75 lt!32914 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32914) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3180 () Bool)

(assert (= bs!3180 d!17209))

(declare-fun m!72757 () Bool)

(assert (=> bs!3180 m!72757))

(assert (=> bs!3180 m!72757))

(declare-fun m!72759 () Bool)

(assert (=> bs!3180 m!72759))

(assert (=> b!73443 d!17209))

(declare-fun d!17211 () Bool)

(declare-fun res!39154 () Bool)

(declare-fun e!48333 () Bool)

(assert (=> d!17211 (=> res!39154 e!48333)))

(assert (=> d!17211 (= res!39154 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17211 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 newMap!16) (mask!6180 newMap!16)) e!48333)))

(declare-fun b!73943 () Bool)

(declare-fun e!48332 () Bool)

(assert (=> b!73943 (= e!48333 e!48332)))

(declare-fun c!11067 () Bool)

(assert (=> b!73943 (= c!11067 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!73944 () Bool)

(declare-fun e!48331 () Bool)

(declare-fun call!6537 () Bool)

(assert (=> b!73944 (= e!48331 call!6537)))

(declare-fun bm!6534 () Bool)

(assert (=> bm!6534 (= call!6537 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73945 () Bool)

(assert (=> b!73945 (= e!48332 call!6537)))

(declare-fun b!73946 () Bool)

(assert (=> b!73946 (= e!48332 e!48331)))

(declare-fun lt!33258 () (_ BitVec 64))

(assert (=> b!73946 (= lt!33258 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!33257 () Unit!2078)

(assert (=> b!73946 (= lt!33257 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 newMap!16) lt!33258 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!73946 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!33258 #b00000000000000000000000000000000)))

(declare-fun lt!33259 () Unit!2078)

(assert (=> b!73946 (= lt!33259 lt!33257)))

(declare-fun res!39153 () Bool)

(assert (=> b!73946 (= res!39153 (= (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3865 newMap!16) (mask!6180 newMap!16)) (Found!236 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!73946 (=> (not res!39153) (not e!48331))))

(assert (= (and d!17211 (not res!39154)) b!73943))

(assert (= (and b!73943 c!11067) b!73946))

(assert (= (and b!73943 (not c!11067)) b!73945))

(assert (= (and b!73946 res!39153) b!73944))

(assert (= (or b!73944 b!73945) bm!6534))

(declare-fun m!72761 () Bool)

(assert (=> b!73943 m!72761))

(assert (=> b!73943 m!72761))

(declare-fun m!72763 () Bool)

(assert (=> b!73943 m!72763))

(declare-fun m!72765 () Bool)

(assert (=> bm!6534 m!72765))

(assert (=> b!73946 m!72761))

(declare-fun m!72767 () Bool)

(assert (=> b!73946 m!72767))

(declare-fun m!72769 () Bool)

(assert (=> b!73946 m!72769))

(assert (=> b!73946 m!72761))

(declare-fun m!72771 () Bool)

(assert (=> b!73946 m!72771))

(assert (=> bm!6500 d!17211))

(declare-fun d!17213 () Bool)

(declare-fun e!48335 () Bool)

(assert (=> d!17213 e!48335))

(declare-fun res!39155 () Bool)

(assert (=> d!17213 (=> res!39155 e!48335)))

(declare-fun lt!33263 () Bool)

(assert (=> d!17213 (= res!39155 (not lt!33263))))

(declare-fun lt!33262 () Bool)

(assert (=> d!17213 (= lt!33263 lt!33262)))

(declare-fun lt!33261 () Unit!2078)

(declare-fun e!48334 () Unit!2078)

(assert (=> d!17213 (= lt!33261 e!48334)))

(declare-fun c!11068 () Bool)

(assert (=> d!17213 (= c!11068 lt!33262)))

(assert (=> d!17213 (= lt!33262 (containsKey!137 (toList!725 lt!32947) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17213 (= (contains!723 lt!32947 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33263)))

(declare-fun b!73947 () Bool)

(declare-fun lt!33260 () Unit!2078)

(assert (=> b!73947 (= e!48334 lt!33260)))

(assert (=> b!73947 (= lt!33260 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32947) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73947 (isDefined!86 (getValueByKey!133 (toList!725 lt!32947) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73948 () Bool)

(declare-fun Unit!2113 () Unit!2078)

(assert (=> b!73948 (= e!48334 Unit!2113)))

(declare-fun b!73949 () Bool)

(assert (=> b!73949 (= e!48335 (isDefined!86 (getValueByKey!133 (toList!725 lt!32947) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17213 c!11068) b!73947))

(assert (= (and d!17213 (not c!11068)) b!73948))

(assert (= (and d!17213 (not res!39155)) b!73949))

(declare-fun m!72773 () Bool)

(assert (=> d!17213 m!72773))

(declare-fun m!72775 () Bool)

(assert (=> b!73947 m!72775))

(declare-fun m!72777 () Bool)

(assert (=> b!73947 m!72777))

(assert (=> b!73947 m!72777))

(declare-fun m!72779 () Bool)

(assert (=> b!73947 m!72779))

(assert (=> b!73949 m!72777))

(assert (=> b!73949 m!72777))

(assert (=> b!73949 m!72779))

(assert (=> bm!6479 d!17213))

(declare-fun d!17215 () Bool)

(assert (=> d!17215 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538)))))))

(declare-fun bs!3181 () Bool)

(assert (= bs!3181 d!17215))

(assert (=> bs!3181 m!71387))

(declare-fun m!72781 () Bool)

(assert (=> bs!3181 m!72781))

(assert (=> b!73667 d!17215))

(assert (=> b!73667 d!16973))

(declare-fun d!17217 () Bool)

(declare-fun res!39156 () Bool)

(declare-fun e!48336 () Bool)

(assert (=> d!17217 (=> res!39156 e!48336)))

(assert (=> d!17217 (= res!39156 (and ((_ is Cons!1474) (toList!725 call!6430)) (= (_1!1072 (h!2061 (toList!725 call!6430))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (=> d!17217 (= (containsKey!137 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48336)))

(declare-fun b!73950 () Bool)

(declare-fun e!48337 () Bool)

(assert (=> b!73950 (= e!48336 e!48337)))

(declare-fun res!39157 () Bool)

(assert (=> b!73950 (=> (not res!39157) (not e!48337))))

(assert (=> b!73950 (= res!39157 (and (or (not ((_ is Cons!1474) (toList!725 call!6430))) (bvsle (_1!1072 (h!2061 (toList!725 call!6430))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) ((_ is Cons!1474) (toList!725 call!6430)) (bvslt (_1!1072 (h!2061 (toList!725 call!6430))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun b!73951 () Bool)

(assert (=> b!73951 (= e!48337 (containsKey!137 (t!5035 (toList!725 call!6430)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17217 (not res!39156)) b!73950))

(assert (= (and b!73950 res!39157) b!73951))

(assert (=> b!73951 m!71227))

(declare-fun m!72783 () Bool)

(assert (=> b!73951 m!72783))

(assert (=> d!16945 d!17217))

(declare-fun d!17219 () Bool)

(declare-fun lt!33264 () Bool)

(assert (=> d!17219 (= lt!33264 (select (content!77 (t!5035 (toList!725 lt!32622))) lt!32538))))

(declare-fun e!48338 () Bool)

(assert (=> d!17219 (= lt!33264 e!48338)))

(declare-fun res!39158 () Bool)

(assert (=> d!17219 (=> (not res!39158) (not e!48338))))

(assert (=> d!17219 (= res!39158 ((_ is Cons!1474) (t!5035 (toList!725 lt!32622))))))

(assert (=> d!17219 (= (contains!724 (t!5035 (toList!725 lt!32622)) lt!32538) lt!33264)))

(declare-fun b!73952 () Bool)

(declare-fun e!48339 () Bool)

(assert (=> b!73952 (= e!48338 e!48339)))

(declare-fun res!39159 () Bool)

(assert (=> b!73952 (=> res!39159 e!48339)))

(assert (=> b!73952 (= res!39159 (= (h!2061 (t!5035 (toList!725 lt!32622))) lt!32538))))

(declare-fun b!73953 () Bool)

(assert (=> b!73953 (= e!48339 (contains!724 (t!5035 (t!5035 (toList!725 lt!32622))) lt!32538))))

(assert (= (and d!17219 res!39158) b!73952))

(assert (= (and b!73952 (not res!39159)) b!73953))

(declare-fun m!72785 () Bool)

(assert (=> d!17219 m!72785))

(declare-fun m!72787 () Bool)

(assert (=> d!17219 m!72787))

(declare-fun m!72789 () Bool)

(assert (=> b!73953 m!72789))

(assert (=> b!73611 d!17219))

(declare-fun d!17221 () Bool)

(declare-fun e!48341 () Bool)

(assert (=> d!17221 e!48341))

(declare-fun res!39160 () Bool)

(assert (=> d!17221 (=> res!39160 e!48341)))

(declare-fun lt!33268 () Bool)

(assert (=> d!17221 (= res!39160 (not lt!33268))))

(declare-fun lt!33267 () Bool)

(assert (=> d!17221 (= lt!33268 lt!33267)))

(declare-fun lt!33266 () Unit!2078)

(declare-fun e!48340 () Unit!2078)

(assert (=> d!17221 (= lt!33266 e!48340)))

(declare-fun c!11069 () Bool)

(assert (=> d!17221 (= c!11069 lt!33267)))

(assert (=> d!17221 (= lt!33267 (containsKey!137 (toList!725 lt!32914) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17221 (= (contains!723 lt!32914 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33268)))

(declare-fun b!73954 () Bool)

(declare-fun lt!33265 () Unit!2078)

(assert (=> b!73954 (= e!48340 lt!33265)))

(assert (=> b!73954 (= lt!33265 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32914) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73954 (isDefined!86 (getValueByKey!133 (toList!725 lt!32914) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73955 () Bool)

(declare-fun Unit!2114 () Unit!2078)

(assert (=> b!73955 (= e!48340 Unit!2114)))

(declare-fun b!73956 () Bool)

(assert (=> b!73956 (= e!48341 (isDefined!86 (getValueByKey!133 (toList!725 lt!32914) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17221 c!11069) b!73954))

(assert (= (and d!17221 (not c!11069)) b!73955))

(assert (= (and d!17221 (not res!39160)) b!73956))

(assert (=> d!17221 m!71563))

(declare-fun m!72791 () Bool)

(assert (=> d!17221 m!72791))

(assert (=> b!73954 m!71563))

(declare-fun m!72793 () Bool)

(assert (=> b!73954 m!72793))

(assert (=> b!73954 m!71563))

(declare-fun m!72795 () Bool)

(assert (=> b!73954 m!72795))

(assert (=> b!73954 m!72795))

(declare-fun m!72797 () Bool)

(assert (=> b!73954 m!72797))

(assert (=> b!73956 m!71563))

(assert (=> b!73956 m!72795))

(assert (=> b!73956 m!72795))

(assert (=> b!73956 m!72797))

(assert (=> b!73450 d!17221))

(declare-fun d!17223 () Bool)

(declare-fun e!48342 () Bool)

(assert (=> d!17223 e!48342))

(declare-fun res!39161 () Bool)

(assert (=> d!17223 (=> (not res!39161) (not e!48342))))

(declare-fun lt!33271 () ListLongMap!1419)

(assert (=> d!17223 (= res!39161 (contains!723 lt!33271 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun lt!33270 () List!1478)

(assert (=> d!17223 (= lt!33271 (ListLongMap!1420 lt!33270))))

(declare-fun lt!33272 () Unit!2078)

(declare-fun lt!33269 () Unit!2078)

(assert (=> d!17223 (= lt!33272 lt!33269)))

(assert (=> d!17223 (= (getValueByKey!133 lt!33270 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17223 (= lt!33269 (lemmaContainsTupThenGetReturnValue!50 lt!33270 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17223 (= lt!33270 (insertStrictlySorted!53 (toList!725 call!6485) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17223 (= (+!94 call!6485 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) lt!33271)))

(declare-fun b!73957 () Bool)

(declare-fun res!39162 () Bool)

(assert (=> b!73957 (=> (not res!39162) (not e!48342))))

(assert (=> b!73957 (= res!39162 (= (getValueByKey!133 (toList!725 lt!33271) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun b!73958 () Bool)

(assert (=> b!73958 (= e!48342 (contains!724 (toList!725 lt!33271) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17223 res!39161) b!73957))

(assert (= (and b!73957 res!39162) b!73958))

(declare-fun m!72799 () Bool)

(assert (=> d!17223 m!72799))

(declare-fun m!72801 () Bool)

(assert (=> d!17223 m!72801))

(declare-fun m!72803 () Bool)

(assert (=> d!17223 m!72803))

(declare-fun m!72805 () Bool)

(assert (=> d!17223 m!72805))

(declare-fun m!72807 () Bool)

(assert (=> b!73957 m!72807))

(declare-fun m!72809 () Bool)

(assert (=> b!73958 m!72809))

(assert (=> b!73489 d!17223))

(declare-fun d!17225 () Bool)

(assert (=> d!17225 (isDefined!86 (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538)))))

(declare-fun lt!33273 () Unit!2078)

(assert (=> d!17225 (= lt!33273 (choose!422 (toList!725 lt!32622) (_1!1072 lt!32538)))))

(declare-fun e!48343 () Bool)

(assert (=> d!17225 e!48343))

(declare-fun res!39163 () Bool)

(assert (=> d!17225 (=> (not res!39163) (not e!48343))))

(assert (=> d!17225 (= res!39163 (isStrictlySorted!292 (toList!725 lt!32622)))))

(assert (=> d!17225 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32622) (_1!1072 lt!32538)) lt!33273)))

(declare-fun b!73959 () Bool)

(assert (=> b!73959 (= e!48343 (containsKey!137 (toList!725 lt!32622) (_1!1072 lt!32538)))))

(assert (= (and d!17225 res!39163) b!73959))

(assert (=> d!17225 m!71399))

(assert (=> d!17225 m!71399))

(assert (=> d!17225 m!71679))

(declare-fun m!72811 () Bool)

(assert (=> d!17225 m!72811))

(declare-fun m!72813 () Bool)

(assert (=> d!17225 m!72813))

(assert (=> b!73959 m!71675))

(assert (=> b!73308 d!17225))

(declare-fun d!17227 () Bool)

(assert (=> d!17227 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32622) (_1!1072 lt!32538)))))))

(declare-fun bs!3182 () Bool)

(assert (= bs!3182 d!17227))

(assert (=> bs!3182 m!71399))

(declare-fun m!72815 () Bool)

(assert (=> bs!3182 m!72815))

(assert (=> b!73308 d!17227))

(assert (=> b!73308 d!16905))

(declare-fun d!17229 () Bool)

(declare-fun res!39164 () Bool)

(declare-fun e!48344 () Bool)

(assert (=> d!17229 (=> res!39164 e!48344)))

(assert (=> d!17229 (= res!39164 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))))) lt!32593)))))

(assert (=> d!17229 (= (containsKey!137 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593) e!48344)))

(declare-fun b!73960 () Bool)

(declare-fun e!48345 () Bool)

(assert (=> b!73960 (= e!48344 e!48345)))

(declare-fun res!39165 () Bool)

(assert (=> b!73960 (=> (not res!39165) (not e!48345))))

(assert (=> b!73960 (= res!39165 (and (or (not ((_ is Cons!1474) (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))))) (bvsle (_1!1072 (h!2061 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))))) lt!32593)) ((_ is Cons!1474) (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))) (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))))) lt!32593)))))

(declare-fun b!73961 () Bool)

(assert (=> b!73961 (= e!48345 (containsKey!137 (t!5035 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))) lt!32593))))

(assert (= (and d!17229 (not res!39164)) b!73960))

(assert (= (and b!73960 res!39165) b!73961))

(declare-fun m!72817 () Bool)

(assert (=> b!73961 m!72817))

(assert (=> d!16927 d!17229))

(declare-fun d!17231 () Bool)

(declare-fun res!39166 () Bool)

(declare-fun e!48346 () Bool)

(assert (=> d!17231 (=> res!39166 e!48346)))

(assert (=> d!17231 (= res!39166 (and ((_ is Cons!1474) lt!32931) (= (_1!1072 (h!2061 lt!32931)) (_1!1072 lt!32542))))))

(assert (=> d!17231 (= (containsKey!137 lt!32931 (_1!1072 lt!32542)) e!48346)))

(declare-fun b!73962 () Bool)

(declare-fun e!48347 () Bool)

(assert (=> b!73962 (= e!48346 e!48347)))

(declare-fun res!39167 () Bool)

(assert (=> b!73962 (=> (not res!39167) (not e!48347))))

(assert (=> b!73962 (= res!39167 (and (or (not ((_ is Cons!1474) lt!32931)) (bvsle (_1!1072 (h!2061 lt!32931)) (_1!1072 lt!32542))) ((_ is Cons!1474) lt!32931) (bvslt (_1!1072 (h!2061 lt!32931)) (_1!1072 lt!32542))))))

(declare-fun b!73963 () Bool)

(assert (=> b!73963 (= e!48347 (containsKey!137 (t!5035 lt!32931) (_1!1072 lt!32542)))))

(assert (= (and d!17231 (not res!39166)) b!73962))

(assert (= (and b!73962 res!39167) b!73963))

(declare-fun m!72819 () Bool)

(assert (=> b!73963 m!72819))

(assert (=> b!73470 d!17231))

(declare-fun d!17233 () Bool)

(declare-fun res!39168 () Bool)

(declare-fun e!48348 () Bool)

(assert (=> d!17233 (=> res!39168 e!48348)))

(assert (=> d!17233 (= res!39168 (and ((_ is Cons!1474) lt!32617) (= (_1!1072 (h!2061 lt!32617)) (_1!1072 lt!32538))))))

(assert (=> d!17233 (= (containsKey!137 lt!32617 (_1!1072 lt!32538)) e!48348)))

(declare-fun b!73964 () Bool)

(declare-fun e!48349 () Bool)

(assert (=> b!73964 (= e!48348 e!48349)))

(declare-fun res!39169 () Bool)

(assert (=> b!73964 (=> (not res!39169) (not e!48349))))

(assert (=> b!73964 (= res!39169 (and (or (not ((_ is Cons!1474) lt!32617)) (bvsle (_1!1072 (h!2061 lt!32617)) (_1!1072 lt!32538))) ((_ is Cons!1474) lt!32617) (bvslt (_1!1072 (h!2061 lt!32617)) (_1!1072 lt!32538))))))

(declare-fun b!73965 () Bool)

(assert (=> b!73965 (= e!48349 (containsKey!137 (t!5035 lt!32617) (_1!1072 lt!32538)))))

(assert (= (and d!17233 (not res!39168)) b!73964))

(assert (= (and b!73964 res!39169) b!73965))

(declare-fun m!72821 () Bool)

(assert (=> b!73965 m!72821))

(assert (=> b!73672 d!17233))

(declare-fun d!17235 () Bool)

(declare-fun res!39170 () Bool)

(declare-fun e!48350 () Bool)

(assert (=> d!17235 (=> res!39170 e!48350)))

(assert (=> d!17235 (= res!39170 (and ((_ is Cons!1474) (toList!725 e!47901)) (= (_1!1072 (h!2061 (toList!725 e!47901))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (=> d!17235 (= (containsKey!137 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48350)))

(declare-fun b!73966 () Bool)

(declare-fun e!48351 () Bool)

(assert (=> b!73966 (= e!48350 e!48351)))

(declare-fun res!39171 () Bool)

(assert (=> b!73966 (=> (not res!39171) (not e!48351))))

(assert (=> b!73966 (= res!39171 (and (or (not ((_ is Cons!1474) (toList!725 e!47901))) (bvsle (_1!1072 (h!2061 (toList!725 e!47901))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) ((_ is Cons!1474) (toList!725 e!47901)) (bvslt (_1!1072 (h!2061 (toList!725 e!47901))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun b!73967 () Bool)

(assert (=> b!73967 (= e!48351 (containsKey!137 (t!5035 (toList!725 e!47901)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17235 (not res!39170)) b!73966))

(assert (= (and b!73966 res!39171) b!73967))

(assert (=> b!73967 m!71227))

(declare-fun m!72823 () Bool)

(assert (=> b!73967 m!72823))

(assert (=> d!16921 d!17235))

(assert (=> d!16895 d!16893))

(declare-fun d!17237 () Bool)

(assert (=> d!17237 (= (getValueByKey!133 lt!32621 (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538)))))

(assert (=> d!17237 true))

(declare-fun _$22!385 () Unit!2078)

(assert (=> d!17237 (= (choose!412 lt!32621 (_1!1072 lt!32538) (_2!1072 lt!32538)) _$22!385)))

(declare-fun bs!3183 () Bool)

(assert (= bs!3183 d!17237))

(assert (=> bs!3183 m!71393))

(assert (=> d!16895 d!17237))

(declare-fun d!17239 () Bool)

(declare-fun res!39172 () Bool)

(declare-fun e!48352 () Bool)

(assert (=> d!17239 (=> res!39172 e!48352)))

(assert (=> d!17239 (= res!39172 (or ((_ is Nil!1475) lt!32621) ((_ is Nil!1475) (t!5035 lt!32621))))))

(assert (=> d!17239 (= (isStrictlySorted!292 lt!32621) e!48352)))

(declare-fun b!73968 () Bool)

(declare-fun e!48353 () Bool)

(assert (=> b!73968 (= e!48352 e!48353)))

(declare-fun res!39173 () Bool)

(assert (=> b!73968 (=> (not res!39173) (not e!48353))))

(assert (=> b!73968 (= res!39173 (bvslt (_1!1072 (h!2061 lt!32621)) (_1!1072 (h!2061 (t!5035 lt!32621)))))))

(declare-fun b!73969 () Bool)

(assert (=> b!73969 (= e!48353 (isStrictlySorted!292 (t!5035 lt!32621)))))

(assert (= (and d!17239 (not res!39172)) b!73968))

(assert (= (and b!73968 res!39173) b!73969))

(declare-fun m!72825 () Bool)

(assert (=> b!73969 m!72825))

(assert (=> d!16895 d!17239))

(declare-fun d!17241 () Bool)

(declare-fun e!48355 () Bool)

(assert (=> d!17241 e!48355))

(declare-fun res!39174 () Bool)

(assert (=> d!17241 (=> res!39174 e!48355)))

(declare-fun lt!33277 () Bool)

(assert (=> d!17241 (= res!39174 (not lt!33277))))

(declare-fun lt!33276 () Bool)

(assert (=> d!17241 (= lt!33277 lt!33276)))

(declare-fun lt!33275 () Unit!2078)

(declare-fun e!48354 () Unit!2078)

(assert (=> d!17241 (= lt!33275 e!48354)))

(declare-fun c!11070 () Bool)

(assert (=> d!17241 (= c!11070 lt!33276)))

(assert (=> d!17241 (= lt!33276 (containsKey!137 (toList!725 lt!33098) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17241 (= (contains!723 lt!33098 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33277)))

(declare-fun b!73970 () Bool)

(declare-fun lt!33274 () Unit!2078)

(assert (=> b!73970 (= e!48354 lt!33274)))

(assert (=> b!73970 (= lt!33274 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33098) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!73970 (isDefined!86 (getValueByKey!133 (toList!725 lt!33098) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73971 () Bool)

(declare-fun Unit!2115 () Unit!2078)

(assert (=> b!73971 (= e!48354 Unit!2115)))

(declare-fun b!73972 () Bool)

(assert (=> b!73972 (= e!48355 (isDefined!86 (getValueByKey!133 (toList!725 lt!33098) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17241 c!11070) b!73970))

(assert (= (and d!17241 (not c!11070)) b!73971))

(assert (= (and d!17241 (not res!39174)) b!73972))

(declare-fun m!72827 () Bool)

(assert (=> d!17241 m!72827))

(declare-fun m!72829 () Bool)

(assert (=> b!73970 m!72829))

(assert (=> b!73970 m!72189))

(assert (=> b!73970 m!72189))

(declare-fun m!72831 () Bool)

(assert (=> b!73970 m!72831))

(assert (=> b!73972 m!72189))

(assert (=> b!73972 m!72189))

(assert (=> b!73972 m!72831))

(assert (=> d!16999 d!17241))

(declare-fun b!73975 () Bool)

(declare-fun e!48357 () Option!139)

(assert (=> b!73975 (= e!48357 (getValueByKey!133 (t!5035 lt!33097) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun c!11071 () Bool)

(declare-fun d!17243 () Bool)

(assert (=> d!17243 (= c!11071 (and ((_ is Cons!1474) lt!33097) (= (_1!1072 (h!2061 lt!33097)) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48356 () Option!139)

(assert (=> d!17243 (= (getValueByKey!133 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48356)))

(declare-fun b!73974 () Bool)

(assert (=> b!73974 (= e!48356 e!48357)))

(declare-fun c!11072 () Bool)

(assert (=> b!73974 (= c!11072 (and ((_ is Cons!1474) lt!33097) (not (= (_1!1072 (h!2061 lt!33097)) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!73973 () Bool)

(assert (=> b!73973 (= e!48356 (Some!138 (_2!1072 (h!2061 lt!33097))))))

(declare-fun b!73976 () Bool)

(assert (=> b!73976 (= e!48357 None!137)))

(assert (= (and d!17243 c!11071) b!73973))

(assert (= (and d!17243 (not c!11071)) b!73974))

(assert (= (and b!73974 c!11072) b!73975))

(assert (= (and b!73974 (not c!11072)) b!73976))

(declare-fun m!72833 () Bool)

(assert (=> b!73975 m!72833))

(assert (=> d!16999 d!17243))

(declare-fun d!17245 () Bool)

(assert (=> d!17245 (= (getValueByKey!133 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33278 () Unit!2078)

(assert (=> d!17245 (= lt!33278 (choose!412 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48358 () Bool)

(assert (=> d!17245 e!48358))

(declare-fun res!39175 () Bool)

(assert (=> d!17245 (=> (not res!39175) (not e!48358))))

(assert (=> d!17245 (= res!39175 (isStrictlySorted!292 lt!33097))))

(assert (=> d!17245 (= (lemmaContainsTupThenGetReturnValue!50 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33278)))

(declare-fun b!73977 () Bool)

(declare-fun res!39176 () Bool)

(assert (=> b!73977 (=> (not res!39176) (not e!48358))))

(assert (=> b!73977 (= res!39176 (containsKey!137 lt!33097 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73978 () Bool)

(assert (=> b!73978 (= e!48358 (contains!724 lt!33097 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17245 res!39175) b!73977))

(assert (= (and b!73977 res!39176) b!73978))

(assert (=> d!17245 m!72183))

(declare-fun m!72835 () Bool)

(assert (=> d!17245 m!72835))

(declare-fun m!72837 () Bool)

(assert (=> d!17245 m!72837))

(declare-fun m!72839 () Bool)

(assert (=> b!73977 m!72839))

(declare-fun m!72841 () Bool)

(assert (=> b!73978 m!72841))

(assert (=> d!16999 d!17245))

(declare-fun b!73979 () Bool)

(declare-fun e!48361 () List!1478)

(declare-fun call!6538 () List!1478)

(assert (=> b!73979 (= e!48361 call!6538)))

(declare-fun b!73980 () Bool)

(declare-fun e!48363 () List!1478)

(declare-fun call!6539 () List!1478)

(assert (=> b!73980 (= e!48363 call!6539)))

(declare-fun b!73981 () Bool)

(declare-fun e!48359 () List!1478)

(declare-fun call!6540 () List!1478)

(assert (=> b!73981 (= e!48359 call!6540)))

(declare-fun c!11074 () Bool)

(declare-fun e!48360 () List!1478)

(declare-fun c!11076 () Bool)

(declare-fun b!73982 () Bool)

(assert (=> b!73982 (= e!48360 (ite c!11076 (t!5035 (toList!725 lt!32674)) (ite c!11074 (Cons!1474 (h!2061 (toList!725 lt!32674)) (t!5035 (toList!725 lt!32674))) Nil!1475)))))

(declare-fun b!73983 () Bool)

(assert (=> b!73983 (= e!48359 e!48361)))

(assert (=> b!73983 (= c!11076 (and ((_ is Cons!1474) (toList!725 lt!32674)) (= (_1!1072 (h!2061 (toList!725 lt!32674))) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6535 () Bool)

(assert (=> bm!6535 (= call!6539 call!6538)))

(declare-fun c!11073 () Bool)

(declare-fun bm!6536 () Bool)

(assert (=> bm!6536 (= call!6540 ($colon$colon!66 e!48360 (ite c!11073 (h!2061 (toList!725 lt!32674)) (tuple2!2123 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11075 () Bool)

(assert (=> bm!6536 (= c!11075 c!11073)))

(declare-fun b!73984 () Bool)

(declare-fun res!39178 () Bool)

(declare-fun e!48362 () Bool)

(assert (=> b!73984 (=> (not res!39178) (not e!48362))))

(declare-fun lt!33279 () List!1478)

(assert (=> b!73984 (= res!39178 (containsKey!137 lt!33279 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6537 () Bool)

(assert (=> bm!6537 (= call!6538 call!6540)))

(declare-fun b!73985 () Bool)

(assert (=> b!73985 (= e!48362 (contains!724 lt!33279 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!73986 () Bool)

(assert (=> b!73986 (= e!48363 call!6539)))

(declare-fun b!73987 () Bool)

(assert (=> b!73987 (= e!48360 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32674)) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!73988 () Bool)

(assert (=> b!73988 (= c!11074 (and ((_ is Cons!1474) (toList!725 lt!32674)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32674))) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!73988 (= e!48361 e!48363)))

(declare-fun d!17247 () Bool)

(assert (=> d!17247 e!48362))

(declare-fun res!39177 () Bool)

(assert (=> d!17247 (=> (not res!39177) (not e!48362))))

(assert (=> d!17247 (= res!39177 (isStrictlySorted!292 lt!33279))))

(assert (=> d!17247 (= lt!33279 e!48359)))

(assert (=> d!17247 (= c!11073 (and ((_ is Cons!1474) (toList!725 lt!32674)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32674))) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17247 (isStrictlySorted!292 (toList!725 lt!32674))))

(assert (=> d!17247 (= (insertStrictlySorted!53 (toList!725 lt!32674) (_1!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33279)))

(assert (= (and d!17247 c!11073) b!73981))

(assert (= (and d!17247 (not c!11073)) b!73983))

(assert (= (and b!73983 c!11076) b!73979))

(assert (= (and b!73983 (not c!11076)) b!73988))

(assert (= (and b!73988 c!11074) b!73986))

(assert (= (and b!73988 (not c!11074)) b!73980))

(assert (= (or b!73986 b!73980) bm!6535))

(assert (= (or b!73979 bm!6535) bm!6537))

(assert (= (or b!73981 bm!6537) bm!6536))

(assert (= (and bm!6536 c!11075) b!73987))

(assert (= (and bm!6536 (not c!11075)) b!73982))

(assert (= (and d!17247 res!39177) b!73984))

(assert (= (and b!73984 res!39178) b!73985))

(declare-fun m!72843 () Bool)

(assert (=> bm!6536 m!72843))

(declare-fun m!72845 () Bool)

(assert (=> b!73987 m!72845))

(declare-fun m!72847 () Bool)

(assert (=> b!73985 m!72847))

(declare-fun m!72849 () Bool)

(assert (=> d!17247 m!72849))

(declare-fun m!72851 () Bool)

(assert (=> d!17247 m!72851))

(declare-fun m!72853 () Bool)

(assert (=> b!73984 m!72853))

(assert (=> d!16999 d!17247))

(declare-fun d!17249 () Bool)

(declare-fun lt!33280 () Bool)

(assert (=> d!17249 (= lt!33280 (select (content!78 (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48364 () Bool)

(assert (=> d!17249 (= lt!33280 e!48364)))

(declare-fun res!39179 () Bool)

(assert (=> d!17249 (=> (not res!39179) (not e!48364))))

(assert (=> d!17249 (= res!39179 ((_ is Cons!1475) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)))))

(assert (=> d!17249 (= (contains!725 (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!33280)))

(declare-fun b!73989 () Bool)

(declare-fun e!48365 () Bool)

(assert (=> b!73989 (= e!48364 e!48365)))

(declare-fun res!39180 () Bool)

(assert (=> b!73989 (=> res!39180 e!48365)))

(assert (=> b!73989 (= res!39180 (= (h!2062 (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73990 () Bool)

(assert (=> b!73990 (= e!48365 (contains!725 (t!5036 (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!17249 res!39179) b!73989))

(assert (= (and b!73989 (not res!39180)) b!73990))

(declare-fun m!72855 () Bool)

(assert (=> d!17249 m!72855))

(assert (=> d!17249 m!71997))

(declare-fun m!72857 () Bool)

(assert (=> d!17249 m!72857))

(assert (=> b!73990 m!71997))

(declare-fun m!72859 () Bool)

(assert (=> b!73990 m!72859))

(assert (=> b!73501 d!17249))

(declare-fun b!73993 () Bool)

(declare-fun e!48367 () Option!139)

(assert (=> b!73993 (= e!48367 (getValueByKey!133 (t!5035 (toList!725 lt!32828)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun d!17251 () Bool)

(declare-fun c!11077 () Bool)

(assert (=> d!17251 (= c!11077 (and ((_ is Cons!1474) (toList!725 lt!32828)) (= (_1!1072 (h!2061 (toList!725 lt!32828))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48366 () Option!139)

(assert (=> d!17251 (= (getValueByKey!133 (toList!725 lt!32828) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) e!48366)))

(declare-fun b!73992 () Bool)

(assert (=> b!73992 (= e!48366 e!48367)))

(declare-fun c!11078 () Bool)

(assert (=> b!73992 (= c!11078 (and ((_ is Cons!1474) (toList!725 lt!32828)) (not (= (_1!1072 (h!2061 (toList!725 lt!32828))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!73991 () Bool)

(assert (=> b!73991 (= e!48366 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32828)))))))

(declare-fun b!73994 () Bool)

(assert (=> b!73994 (= e!48367 None!137)))

(assert (= (and d!17251 c!11077) b!73991))

(assert (= (and d!17251 (not c!11077)) b!73992))

(assert (= (and b!73992 c!11078) b!73993))

(assert (= (and b!73992 (not c!11078)) b!73994))

(declare-fun m!72861 () Bool)

(assert (=> b!73993 m!72861))

(assert (=> b!73290 d!17251))

(declare-fun d!17253 () Bool)

(declare-fun e!48369 () Bool)

(assert (=> d!17253 e!48369))

(declare-fun res!39181 () Bool)

(assert (=> d!17253 (=> res!39181 e!48369)))

(declare-fun lt!33284 () Bool)

(assert (=> d!17253 (= res!39181 (not lt!33284))))

(declare-fun lt!33283 () Bool)

(assert (=> d!17253 (= lt!33284 lt!33283)))

(declare-fun lt!33282 () Unit!2078)

(declare-fun e!48368 () Unit!2078)

(assert (=> d!17253 (= lt!33282 e!48368)))

(declare-fun c!11079 () Bool)

(assert (=> d!17253 (= c!11079 lt!33283)))

(assert (=> d!17253 (= lt!33283 (containsKey!137 (toList!725 lt!33069) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17253 (= (contains!723 lt!33069 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33284)))

(declare-fun b!73995 () Bool)

(declare-fun lt!33281 () Unit!2078)

(assert (=> b!73995 (= e!48368 lt!33281)))

(assert (=> b!73995 (= lt!33281 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33069) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73995 (isDefined!86 (getValueByKey!133 (toList!725 lt!33069) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73996 () Bool)

(declare-fun Unit!2116 () Unit!2078)

(assert (=> b!73996 (= e!48368 Unit!2116)))

(declare-fun b!73997 () Bool)

(assert (=> b!73997 (= e!48369 (isDefined!86 (getValueByKey!133 (toList!725 lt!33069) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17253 c!11079) b!73995))

(assert (= (and d!17253 (not c!11079)) b!73996))

(assert (= (and d!17253 (not res!39181)) b!73997))

(declare-fun m!72863 () Bool)

(assert (=> d!17253 m!72863))

(declare-fun m!72865 () Bool)

(assert (=> b!73995 m!72865))

(declare-fun m!72867 () Bool)

(assert (=> b!73995 m!72867))

(assert (=> b!73995 m!72867))

(declare-fun m!72869 () Bool)

(assert (=> b!73995 m!72869))

(assert (=> b!73997 m!72867))

(assert (=> b!73997 m!72867))

(assert (=> b!73997 m!72869))

(assert (=> d!16975 d!17253))

(assert (=> d!16975 d!16823))

(declare-fun d!17255 () Bool)

(declare-fun lt!33285 () Bool)

(assert (=> d!17255 (= lt!33285 (select (content!77 (toList!725 lt!33098)) (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48370 () Bool)

(assert (=> d!17255 (= lt!33285 e!48370)))

(declare-fun res!39182 () Bool)

(assert (=> d!17255 (=> (not res!39182) (not e!48370))))

(assert (=> d!17255 (= res!39182 ((_ is Cons!1474) (toList!725 lt!33098)))))

(assert (=> d!17255 (= (contains!724 (toList!725 lt!33098) (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33285)))

(declare-fun b!73998 () Bool)

(declare-fun e!48371 () Bool)

(assert (=> b!73998 (= e!48370 e!48371)))

(declare-fun res!39183 () Bool)

(assert (=> b!73998 (=> res!39183 e!48371)))

(assert (=> b!73998 (= res!39183 (= (h!2061 (toList!725 lt!33098)) (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!73999 () Bool)

(assert (=> b!73999 (= e!48371 (contains!724 (t!5035 (toList!725 lt!33098)) (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17255 res!39182) b!73998))

(assert (= (and b!73998 (not res!39183)) b!73999))

(declare-fun m!72871 () Bool)

(assert (=> d!17255 m!72871))

(declare-fun m!72873 () Bool)

(assert (=> d!17255 m!72873))

(declare-fun m!72875 () Bool)

(assert (=> b!73999 m!72875))

(assert (=> b!73649 d!17255))

(declare-fun d!17257 () Bool)

(declare-fun lt!33286 () Bool)

(assert (=> d!17257 (= lt!33286 (select (content!77 (t!5035 (toList!725 lt!32610))) lt!32542))))

(declare-fun e!48372 () Bool)

(assert (=> d!17257 (= lt!33286 e!48372)))

(declare-fun res!39184 () Bool)

(assert (=> d!17257 (=> (not res!39184) (not e!48372))))

(assert (=> d!17257 (= res!39184 ((_ is Cons!1474) (t!5035 (toList!725 lt!32610))))))

(assert (=> d!17257 (= (contains!724 (t!5035 (toList!725 lt!32610)) lt!32542) lt!33286)))

(declare-fun b!74000 () Bool)

(declare-fun e!48373 () Bool)

(assert (=> b!74000 (= e!48372 e!48373)))

(declare-fun res!39185 () Bool)

(assert (=> b!74000 (=> res!39185 e!48373)))

(assert (=> b!74000 (= res!39185 (= (h!2061 (t!5035 (toList!725 lt!32610))) lt!32542))))

(declare-fun b!74001 () Bool)

(assert (=> b!74001 (= e!48373 (contains!724 (t!5035 (t!5035 (toList!725 lt!32610))) lt!32542))))

(assert (= (and d!17257 res!39184) b!74000))

(assert (= (and b!74000 (not res!39185)) b!74001))

(declare-fun m!72877 () Bool)

(assert (=> d!17257 m!72877))

(declare-fun m!72879 () Bool)

(assert (=> d!17257 m!72879))

(declare-fun m!72881 () Bool)

(assert (=> b!74001 m!72881))

(assert (=> b!73476 d!17257))

(declare-fun d!17259 () Bool)

(assert (=> d!17259 (= (apply!75 (+!94 lt!32853 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))) lt!32857) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32853 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))) lt!32857)))))

(declare-fun bs!3184 () Bool)

(assert (= bs!3184 d!17259))

(declare-fun m!72883 () Bool)

(assert (=> bs!3184 m!72883))

(assert (=> bs!3184 m!72883))

(declare-fun m!72885 () Bool)

(assert (=> bs!3184 m!72885))

(assert (=> b!73377 d!17259))

(declare-fun d!17261 () Bool)

(declare-fun e!48374 () Bool)

(assert (=> d!17261 e!48374))

(declare-fun res!39186 () Bool)

(assert (=> d!17261 (=> (not res!39186) (not e!48374))))

(declare-fun lt!33289 () ListLongMap!1419)

(assert (=> d!17261 (= res!39186 (contains!723 lt!33289 (_1!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))))))

(declare-fun lt!33288 () List!1478)

(assert (=> d!17261 (= lt!33289 (ListLongMap!1420 lt!33288))))

(declare-fun lt!33290 () Unit!2078)

(declare-fun lt!33287 () Unit!2078)

(assert (=> d!17261 (= lt!33290 lt!33287)))

(assert (=> d!17261 (= (getValueByKey!133 lt!33288 (_1!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))))))

(assert (=> d!17261 (= lt!33287 (lemmaContainsTupThenGetReturnValue!50 lt!33288 (_1!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))))))

(assert (=> d!17261 (= lt!33288 (insertStrictlySorted!53 (toList!725 lt!32853) (_1!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))))))

(assert (=> d!17261 (= (+!94 lt!32853 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))) lt!33289)))

(declare-fun b!74002 () Bool)

(declare-fun res!39187 () Bool)

(assert (=> b!74002 (=> (not res!39187) (not e!48374))))

(assert (=> b!74002 (= res!39187 (= (getValueByKey!133 (toList!725 lt!33289) (_1!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))))))))

(declare-fun b!74003 () Bool)

(assert (=> b!74003 (= e!48374 (contains!724 (toList!725 lt!33289) (tuple2!2123 lt!32858 (minValue!2115 newMap!16))))))

(assert (= (and d!17261 res!39186) b!74002))

(assert (= (and b!74002 res!39187) b!74003))

(declare-fun m!72887 () Bool)

(assert (=> d!17261 m!72887))

(declare-fun m!72889 () Bool)

(assert (=> d!17261 m!72889))

(declare-fun m!72891 () Bool)

(assert (=> d!17261 m!72891))

(declare-fun m!72893 () Bool)

(assert (=> d!17261 m!72893))

(declare-fun m!72895 () Bool)

(assert (=> b!74002 m!72895))

(declare-fun m!72897 () Bool)

(assert (=> b!74003 m!72897))

(assert (=> b!73377 d!17261))

(declare-fun d!17263 () Bool)

(assert (=> d!17263 (= (apply!75 (+!94 lt!32864 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))) lt!32863) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32864 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))) lt!32863)))))

(declare-fun bs!3185 () Bool)

(assert (= bs!3185 d!17263))

(declare-fun m!72899 () Bool)

(assert (=> bs!3185 m!72899))

(assert (=> bs!3185 m!72899))

(declare-fun m!72901 () Bool)

(assert (=> bs!3185 m!72901))

(assert (=> b!73377 d!17263))

(declare-fun d!17265 () Bool)

(assert (=> d!17265 (= (apply!75 (+!94 lt!32853 (tuple2!2123 lt!32858 (minValue!2115 newMap!16))) lt!32857) (apply!75 lt!32853 lt!32857))))

(declare-fun lt!33291 () Unit!2078)

(assert (=> d!17265 (= lt!33291 (choose!419 lt!32853 lt!32858 (minValue!2115 newMap!16) lt!32857))))

(declare-fun e!48375 () Bool)

(assert (=> d!17265 e!48375))

(declare-fun res!39188 () Bool)

(assert (=> d!17265 (=> (not res!39188) (not e!48375))))

(assert (=> d!17265 (= res!39188 (contains!723 lt!32853 lt!32857))))

(assert (=> d!17265 (= (addApplyDifferent!51 lt!32853 lt!32858 (minValue!2115 newMap!16) lt!32857) lt!33291)))

(declare-fun b!74004 () Bool)

(assert (=> b!74004 (= e!48375 (not (= lt!32857 lt!32858)))))

(assert (= (and d!17265 res!39188) b!74004))

(assert (=> d!17265 m!71749))

(assert (=> d!17265 m!71751))

(assert (=> d!17265 m!71745))

(declare-fun m!72903 () Bool)

(assert (=> d!17265 m!72903))

(assert (=> d!17265 m!71749))

(declare-fun m!72905 () Bool)

(assert (=> d!17265 m!72905))

(assert (=> b!73377 d!17265))

(declare-fun d!17267 () Bool)

(assert (=> d!17267 (= (apply!75 (+!94 lt!32867 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))) lt!32866) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32867 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))) lt!32866)))))

(declare-fun bs!3186 () Bool)

(assert (= bs!3186 d!17267))

(declare-fun m!72907 () Bool)

(assert (=> bs!3186 m!72907))

(assert (=> bs!3186 m!72907))

(declare-fun m!72909 () Bool)

(assert (=> bs!3186 m!72909))

(assert (=> b!73377 d!17267))

(declare-fun d!17269 () Bool)

(assert (=> d!17269 (= (apply!75 (+!94 lt!32864 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))) lt!32863) (apply!75 lt!32864 lt!32863))))

(declare-fun lt!33292 () Unit!2078)

(assert (=> d!17269 (= lt!33292 (choose!419 lt!32864 lt!32862 (zeroValue!2115 newMap!16) lt!32863))))

(declare-fun e!48376 () Bool)

(assert (=> d!17269 e!48376))

(declare-fun res!39189 () Bool)

(assert (=> d!17269 (=> (not res!39189) (not e!48376))))

(assert (=> d!17269 (= res!39189 (contains!723 lt!32864 lt!32863))))

(assert (=> d!17269 (= (addApplyDifferent!51 lt!32864 lt!32862 (zeroValue!2115 newMap!16) lt!32863) lt!33292)))

(declare-fun b!74005 () Bool)

(assert (=> b!74005 (= e!48376 (not (= lt!32863 lt!32862)))))

(assert (= (and d!17269 res!39189) b!74005))

(assert (=> d!17269 m!71755))

(assert (=> d!17269 m!71757))

(assert (=> d!17269 m!71765))

(declare-fun m!72911 () Bool)

(assert (=> d!17269 m!72911))

(assert (=> d!17269 m!71755))

(declare-fun m!72913 () Bool)

(assert (=> d!17269 m!72913))

(assert (=> b!73377 d!17269))

(declare-fun d!17271 () Bool)

(assert (=> d!17271 (= (apply!75 lt!32853 lt!32857) (get!1142 (getValueByKey!133 (toList!725 lt!32853) lt!32857)))))

(declare-fun bs!3187 () Bool)

(assert (= bs!3187 d!17271))

(declare-fun m!72915 () Bool)

(assert (=> bs!3187 m!72915))

(assert (=> bs!3187 m!72915))

(declare-fun m!72917 () Bool)

(assert (=> bs!3187 m!72917))

(assert (=> b!73377 d!17271))

(declare-fun d!17273 () Bool)

(assert (=> d!17273 (= (apply!75 lt!32864 lt!32863) (get!1142 (getValueByKey!133 (toList!725 lt!32864) lt!32863)))))

(declare-fun bs!3188 () Bool)

(assert (= bs!3188 d!17273))

(declare-fun m!72919 () Bool)

(assert (=> bs!3188 m!72919))

(assert (=> bs!3188 m!72919))

(declare-fun m!72921 () Bool)

(assert (=> bs!3188 m!72921))

(assert (=> b!73377 d!17273))

(declare-fun d!17275 () Bool)

(assert (=> d!17275 (= (apply!75 lt!32867 lt!32866) (get!1142 (getValueByKey!133 (toList!725 lt!32867) lt!32866)))))

(declare-fun bs!3189 () Bool)

(assert (= bs!3189 d!17275))

(declare-fun m!72923 () Bool)

(assert (=> bs!3189 m!72923))

(assert (=> bs!3189 m!72923))

(declare-fun m!72925 () Bool)

(assert (=> bs!3189 m!72925))

(assert (=> b!73377 d!17275))

(declare-fun d!17277 () Bool)

(assert (=> d!17277 (contains!723 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))) lt!32852)))

(declare-fun lt!33293 () Unit!2078)

(assert (=> d!17277 (= lt!33293 (choose!418 lt!32850 lt!32869 (zeroValue!2115 newMap!16) lt!32852))))

(assert (=> d!17277 (contains!723 lt!32850 lt!32852)))

(assert (=> d!17277 (= (addStillContains!51 lt!32850 lt!32869 (zeroValue!2115 newMap!16) lt!32852) lt!33293)))

(declare-fun bs!3190 () Bool)

(assert (= bs!3190 d!17277))

(assert (=> bs!3190 m!71737))

(assert (=> bs!3190 m!71737))

(assert (=> bs!3190 m!71761))

(declare-fun m!72927 () Bool)

(assert (=> bs!3190 m!72927))

(declare-fun m!72929 () Bool)

(assert (=> bs!3190 m!72929))

(assert (=> b!73377 d!17277))

(declare-fun d!17279 () Bool)

(declare-fun e!48377 () Bool)

(assert (=> d!17279 e!48377))

(declare-fun res!39190 () Bool)

(assert (=> d!17279 (=> (not res!39190) (not e!48377))))

(declare-fun lt!33296 () ListLongMap!1419)

(assert (=> d!17279 (= res!39190 (contains!723 lt!33296 (_1!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33295 () List!1478)

(assert (=> d!17279 (= lt!33296 (ListLongMap!1420 lt!33295))))

(declare-fun lt!33297 () Unit!2078)

(declare-fun lt!33294 () Unit!2078)

(assert (=> d!17279 (= lt!33297 lt!33294)))

(assert (=> d!17279 (= (getValueByKey!133 lt!33295 (_1!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17279 (= lt!33294 (lemmaContainsTupThenGetReturnValue!50 lt!33295 (_1!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17279 (= lt!33295 (insertStrictlySorted!53 (toList!725 lt!32864) (_1!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17279 (= (+!94 lt!32864 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))) lt!33296)))

(declare-fun b!74006 () Bool)

(declare-fun res!39191 () Bool)

(assert (=> b!74006 (=> (not res!39191) (not e!48377))))

(assert (=> b!74006 (= res!39191 (= (getValueByKey!133 (toList!725 lt!33296) (_1!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))))))))

(declare-fun b!74007 () Bool)

(assert (=> b!74007 (= e!48377 (contains!724 (toList!725 lt!33296) (tuple2!2123 lt!32862 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17279 res!39190) b!74006))

(assert (= (and b!74006 res!39191) b!74007))

(declare-fun m!72931 () Bool)

(assert (=> d!17279 m!72931))

(declare-fun m!72933 () Bool)

(assert (=> d!17279 m!72933))

(declare-fun m!72935 () Bool)

(assert (=> d!17279 m!72935))

(declare-fun m!72937 () Bool)

(assert (=> d!17279 m!72937))

(declare-fun m!72939 () Bool)

(assert (=> b!74006 m!72939))

(declare-fun m!72941 () Bool)

(assert (=> b!74007 m!72941))

(assert (=> b!73377 d!17279))

(declare-fun d!17281 () Bool)

(declare-fun e!48378 () Bool)

(assert (=> d!17281 e!48378))

(declare-fun res!39192 () Bool)

(assert (=> d!17281 (=> (not res!39192) (not e!48378))))

(declare-fun lt!33300 () ListLongMap!1419)

(assert (=> d!17281 (= res!39192 (contains!723 lt!33300 (_1!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))))))

(declare-fun lt!33299 () List!1478)

(assert (=> d!17281 (= lt!33300 (ListLongMap!1420 lt!33299))))

(declare-fun lt!33301 () Unit!2078)

(declare-fun lt!33298 () Unit!2078)

(assert (=> d!17281 (= lt!33301 lt!33298)))

(assert (=> d!17281 (= (getValueByKey!133 lt!33299 (_1!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))))))

(assert (=> d!17281 (= lt!33298 (lemmaContainsTupThenGetReturnValue!50 lt!33299 (_1!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))))))

(assert (=> d!17281 (= lt!33299 (insertStrictlySorted!53 (toList!725 lt!32867) (_1!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))))))

(assert (=> d!17281 (= (+!94 lt!32867 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))) lt!33300)))

(declare-fun b!74008 () Bool)

(declare-fun res!39193 () Bool)

(assert (=> b!74008 (=> (not res!39193) (not e!48378))))

(assert (=> b!74008 (= res!39193 (= (getValueByKey!133 (toList!725 lt!33300) (_1!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))))))))

(declare-fun b!74009 () Bool)

(assert (=> b!74009 (= e!48378 (contains!724 (toList!725 lt!33300) (tuple2!2123 lt!32868 (minValue!2115 newMap!16))))))

(assert (= (and d!17281 res!39192) b!74008))

(assert (= (and b!74008 res!39193) b!74009))

(declare-fun m!72943 () Bool)

(assert (=> d!17281 m!72943))

(declare-fun m!72945 () Bool)

(assert (=> d!17281 m!72945))

(declare-fun m!72947 () Bool)

(assert (=> d!17281 m!72947))

(declare-fun m!72949 () Bool)

(assert (=> d!17281 m!72949))

(declare-fun m!72951 () Bool)

(assert (=> b!74008 m!72951))

(declare-fun m!72953 () Bool)

(assert (=> b!74009 m!72953))

(assert (=> b!73377 d!17281))

(declare-fun d!17283 () Bool)

(declare-fun e!48380 () Bool)

(assert (=> d!17283 e!48380))

(declare-fun res!39194 () Bool)

(assert (=> d!17283 (=> res!39194 e!48380)))

(declare-fun lt!33305 () Bool)

(assert (=> d!17283 (= res!39194 (not lt!33305))))

(declare-fun lt!33304 () Bool)

(assert (=> d!17283 (= lt!33305 lt!33304)))

(declare-fun lt!33303 () Unit!2078)

(declare-fun e!48379 () Unit!2078)

(assert (=> d!17283 (= lt!33303 e!48379)))

(declare-fun c!11080 () Bool)

(assert (=> d!17283 (= c!11080 lt!33304)))

(assert (=> d!17283 (= lt!33304 (containsKey!137 (toList!725 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))) lt!32852))))

(assert (=> d!17283 (= (contains!723 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))) lt!32852) lt!33305)))

(declare-fun b!74010 () Bool)

(declare-fun lt!33302 () Unit!2078)

(assert (=> b!74010 (= e!48379 lt!33302)))

(assert (=> b!74010 (= lt!33302 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))) lt!32852))))

(assert (=> b!74010 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))) lt!32852))))

(declare-fun b!74011 () Bool)

(declare-fun Unit!2117 () Unit!2078)

(assert (=> b!74011 (= e!48379 Unit!2117)))

(declare-fun b!74012 () Bool)

(assert (=> b!74012 (= e!48380 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))) lt!32852)))))

(assert (= (and d!17283 c!11080) b!74010))

(assert (= (and d!17283 (not c!11080)) b!74011))

(assert (= (and d!17283 (not res!39194)) b!74012))

(declare-fun m!72955 () Bool)

(assert (=> d!17283 m!72955))

(declare-fun m!72957 () Bool)

(assert (=> b!74010 m!72957))

(declare-fun m!72959 () Bool)

(assert (=> b!74010 m!72959))

(assert (=> b!74010 m!72959))

(declare-fun m!72961 () Bool)

(assert (=> b!74010 m!72961))

(assert (=> b!74012 m!72959))

(assert (=> b!74012 m!72959))

(assert (=> b!74012 m!72961))

(assert (=> b!73377 d!17283))

(declare-fun d!17285 () Bool)

(declare-fun e!48381 () Bool)

(assert (=> d!17285 e!48381))

(declare-fun res!39195 () Bool)

(assert (=> d!17285 (=> (not res!39195) (not e!48381))))

(declare-fun lt!33308 () ListLongMap!1419)

(assert (=> d!17285 (= res!39195 (contains!723 lt!33308 (_1!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33307 () List!1478)

(assert (=> d!17285 (= lt!33308 (ListLongMap!1420 lt!33307))))

(declare-fun lt!33309 () Unit!2078)

(declare-fun lt!33306 () Unit!2078)

(assert (=> d!17285 (= lt!33309 lt!33306)))

(assert (=> d!17285 (= (getValueByKey!133 lt!33307 (_1!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17285 (= lt!33306 (lemmaContainsTupThenGetReturnValue!50 lt!33307 (_1!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17285 (= lt!33307 (insertStrictlySorted!53 (toList!725 lt!32850) (_1!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17285 (= (+!94 lt!32850 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))) lt!33308)))

(declare-fun b!74013 () Bool)

(declare-fun res!39196 () Bool)

(assert (=> b!74013 (=> (not res!39196) (not e!48381))))

(assert (=> b!74013 (= res!39196 (= (getValueByKey!133 (toList!725 lt!33308) (_1!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))))))))

(declare-fun b!74014 () Bool)

(assert (=> b!74014 (= e!48381 (contains!724 (toList!725 lt!33308) (tuple2!2123 lt!32869 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17285 res!39195) b!74013))

(assert (= (and b!74013 res!39196) b!74014))

(declare-fun m!72963 () Bool)

(assert (=> d!17285 m!72963))

(declare-fun m!72965 () Bool)

(assert (=> d!17285 m!72965))

(declare-fun m!72967 () Bool)

(assert (=> d!17285 m!72967))

(declare-fun m!72969 () Bool)

(assert (=> d!17285 m!72969))

(declare-fun m!72971 () Bool)

(assert (=> b!74013 m!72971))

(declare-fun m!72973 () Bool)

(assert (=> b!74014 m!72973))

(assert (=> b!73377 d!17285))

(declare-fun d!17287 () Bool)

(assert (=> d!17287 (= (apply!75 (+!94 lt!32867 (tuple2!2123 lt!32868 (minValue!2115 newMap!16))) lt!32866) (apply!75 lt!32867 lt!32866))))

(declare-fun lt!33310 () Unit!2078)

(assert (=> d!17287 (= lt!33310 (choose!419 lt!32867 lt!32868 (minValue!2115 newMap!16) lt!32866))))

(declare-fun e!48382 () Bool)

(assert (=> d!17287 e!48382))

(declare-fun res!39197 () Bool)

(assert (=> d!17287 (=> (not res!39197) (not e!48382))))

(assert (=> d!17287 (= res!39197 (contains!723 lt!32867 lt!32866))))

(assert (=> d!17287 (= (addApplyDifferent!51 lt!32867 lt!32868 (minValue!2115 newMap!16) lt!32866) lt!33310)))

(declare-fun b!74015 () Bool)

(assert (=> b!74015 (= e!48382 (not (= lt!32866 lt!32868)))))

(assert (= (and d!17287 res!39197) b!74015))

(assert (=> d!17287 m!71739))

(assert (=> d!17287 m!71763))

(assert (=> d!17287 m!71743))

(declare-fun m!72975 () Bool)

(assert (=> d!17287 m!72975))

(assert (=> d!17287 m!71739))

(declare-fun m!72977 () Bool)

(assert (=> d!17287 m!72977))

(assert (=> b!73377 d!17287))

(declare-fun d!17289 () Bool)

(declare-fun e!48386 () Bool)

(assert (=> d!17289 e!48386))

(declare-fun res!39198 () Bool)

(assert (=> d!17289 (=> (not res!39198) (not e!48386))))

(declare-fun lt!33312 () ListLongMap!1419)

(assert (=> d!17289 (= res!39198 (not (contains!723 lt!33312 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48384 () ListLongMap!1419)

(assert (=> d!17289 (= lt!33312 e!48384)))

(declare-fun c!11083 () Bool)

(assert (=> d!17289 (= c!11083 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17289 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17289 (= (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33312)))

(declare-fun b!74016 () Bool)

(declare-fun e!48388 () ListLongMap!1419)

(assert (=> b!74016 (= e!48384 e!48388)))

(declare-fun c!11081 () Bool)

(assert (=> b!74016 (= c!11081 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74017 () Bool)

(assert (=> b!74017 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> b!74017 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (_values!2196 newMap!16))))))

(declare-fun e!48389 () Bool)

(assert (=> b!74017 (= e!48389 (= (apply!75 lt!33312 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6538 () Bool)

(declare-fun call!6541 () ListLongMap!1419)

(assert (=> bm!6538 (= call!6541 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16)))))

(declare-fun b!74018 () Bool)

(declare-fun e!48383 () Bool)

(assert (=> b!74018 (= e!48383 e!48389)))

(assert (=> b!74018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun res!39201 () Bool)

(assert (=> b!74018 (= res!39201 (contains!723 lt!33312 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74018 (=> (not res!39201) (not e!48389))))

(declare-fun b!74019 () Bool)

(assert (=> b!74019 (= e!48386 e!48383)))

(declare-fun c!11084 () Bool)

(declare-fun e!48385 () Bool)

(assert (=> b!74019 (= c!11084 e!48385)))

(declare-fun res!39200 () Bool)

(assert (=> b!74019 (=> (not res!39200) (not e!48385))))

(assert (=> b!74019 (= res!39200 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74020 () Bool)

(declare-fun res!39199 () Bool)

(assert (=> b!74020 (=> (not res!39199) (not e!48386))))

(assert (=> b!74020 (= res!39199 (not (contains!723 lt!33312 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74021 () Bool)

(assert (=> b!74021 (= e!48385 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74021 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74022 () Bool)

(assert (=> b!74022 (= e!48384 (ListLongMap!1420 Nil!1475))))

(declare-fun b!74023 () Bool)

(declare-fun e!48387 () Bool)

(assert (=> b!74023 (= e!48387 (isEmpty!316 lt!33312))))

(declare-fun b!74024 () Bool)

(assert (=> b!74024 (= e!48383 e!48387)))

(declare-fun c!11082 () Bool)

(assert (=> b!74024 (= c!11082 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74025 () Bool)

(assert (=> b!74025 (= e!48388 call!6541)))

(declare-fun b!74026 () Bool)

(assert (=> b!74026 (= e!48387 (= lt!33312 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16))))))

(declare-fun b!74027 () Bool)

(declare-fun lt!33315 () Unit!2078)

(declare-fun lt!33316 () Unit!2078)

(assert (=> b!74027 (= lt!33315 lt!33316)))

(declare-fun lt!33314 () V!2947)

(declare-fun lt!33317 () (_ BitVec 64))

(declare-fun lt!33313 () ListLongMap!1419)

(declare-fun lt!33311 () (_ BitVec 64))

(assert (=> b!74027 (not (contains!723 (+!94 lt!33313 (tuple2!2123 lt!33317 lt!33314)) lt!33311))))

(assert (=> b!74027 (= lt!33316 (addStillNotContains!24 lt!33313 lt!33317 lt!33314 lt!33311))))

(assert (=> b!74027 (= lt!33311 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74027 (= lt!33314 (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74027 (= lt!33317 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74027 (= lt!33313 call!6541)))

(assert (=> b!74027 (= e!48388 (+!94 call!6541 (tuple2!2123 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17289 c!11083) b!74022))

(assert (= (and d!17289 (not c!11083)) b!74016))

(assert (= (and b!74016 c!11081) b!74027))

(assert (= (and b!74016 (not c!11081)) b!74025))

(assert (= (or b!74027 b!74025) bm!6538))

(assert (= (and d!17289 res!39198) b!74020))

(assert (= (and b!74020 res!39199) b!74019))

(assert (= (and b!74019 res!39200) b!74021))

(assert (= (and b!74019 c!11084) b!74018))

(assert (= (and b!74019 (not c!11084)) b!74024))

(assert (= (and b!74018 res!39201) b!74017))

(assert (= (and b!74024 c!11082) b!74026))

(assert (= (and b!74024 (not c!11082)) b!74023))

(declare-fun b_lambda!3319 () Bool)

(assert (=> (not b_lambda!3319) (not b!74017)))

(assert (=> b!74017 t!5042))

(declare-fun b_and!4535 () Bool)

(assert (= b_and!4531 (and (=> t!5042 result!2693) b_and!4535)))

(assert (=> b!74017 t!5044))

(declare-fun b_and!4537 () Bool)

(assert (= b_and!4533 (and (=> t!5044 result!2695) b_and!4537)))

(declare-fun b_lambda!3321 () Bool)

(assert (=> (not b_lambda!3321) (not b!74027)))

(assert (=> b!74027 t!5042))

(declare-fun b_and!4539 () Bool)

(assert (= b_and!4535 (and (=> t!5042 result!2693) b_and!4539)))

(assert (=> b!74027 t!5044))

(declare-fun b_and!4541 () Bool)

(assert (= b_and!4537 (and (=> t!5044 result!2695) b_and!4541)))

(assert (=> b!74018 m!71563))

(assert (=> b!74018 m!71563))

(declare-fun m!72979 () Bool)

(assert (=> b!74018 m!72979))

(declare-fun m!72981 () Bool)

(assert (=> d!17289 m!72981))

(assert (=> d!17289 m!71705))

(assert (=> b!74016 m!71563))

(assert (=> b!74016 m!71563))

(assert (=> b!74016 m!71567))

(declare-fun m!72983 () Bool)

(assert (=> b!74020 m!72983))

(assert (=> b!74021 m!71563))

(assert (=> b!74021 m!71563))

(assert (=> b!74021 m!71567))

(declare-fun m!72985 () Bool)

(assert (=> bm!6538 m!72985))

(assert (=> b!74017 m!71715))

(assert (=> b!74017 m!71717))

(assert (=> b!74017 m!71719))

(assert (=> b!74017 m!71563))

(assert (=> b!74017 m!71715))

(assert (=> b!74017 m!71563))

(declare-fun m!72987 () Bool)

(assert (=> b!74017 m!72987))

(assert (=> b!74017 m!71717))

(assert (=> b!74026 m!72985))

(assert (=> b!74027 m!71717))

(assert (=> b!74027 m!71715))

(assert (=> b!74027 m!71717))

(assert (=> b!74027 m!71719))

(declare-fun m!72989 () Bool)

(assert (=> b!74027 m!72989))

(declare-fun m!72991 () Bool)

(assert (=> b!74027 m!72991))

(declare-fun m!72993 () Bool)

(assert (=> b!74027 m!72993))

(assert (=> b!74027 m!71715))

(assert (=> b!74027 m!71563))

(assert (=> b!74027 m!72989))

(declare-fun m!72995 () Bool)

(assert (=> b!74027 m!72995))

(declare-fun m!72997 () Bool)

(assert (=> b!74023 m!72997))

(assert (=> b!73377 d!17289))

(assert (=> d!16997 d!17021))

(assert (=> d!16997 d!17005))

(declare-fun d!17291 () Bool)

(assert (=> d!17291 (contains!723 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32673)))

(assert (=> d!17291 true))

(declare-fun _$35!318 () Unit!2078)

(assert (=> d!17291 (= (choose!418 lt!32671 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32673) _$35!318)))

(declare-fun bs!3191 () Bool)

(assert (= bs!3191 d!17291))

(assert (=> bs!3191 m!71431))

(assert (=> bs!3191 m!71431))

(assert (=> bs!3191 m!71455))

(assert (=> d!16997 d!17291))

(declare-fun d!17293 () Bool)

(declare-fun e!48391 () Bool)

(assert (=> d!17293 e!48391))

(declare-fun res!39202 () Bool)

(assert (=> d!17293 (=> res!39202 e!48391)))

(declare-fun lt!33321 () Bool)

(assert (=> d!17293 (= res!39202 (not lt!33321))))

(declare-fun lt!33320 () Bool)

(assert (=> d!17293 (= lt!33321 lt!33320)))

(declare-fun lt!33319 () Unit!2078)

(declare-fun e!48390 () Unit!2078)

(assert (=> d!17293 (= lt!33319 e!48390)))

(declare-fun c!11085 () Bool)

(assert (=> d!17293 (= c!11085 lt!33320)))

(assert (=> d!17293 (= lt!33320 (containsKey!137 (toList!725 lt!32671) lt!32673))))

(assert (=> d!17293 (= (contains!723 lt!32671 lt!32673) lt!33321)))

(declare-fun b!74029 () Bool)

(declare-fun lt!33318 () Unit!2078)

(assert (=> b!74029 (= e!48390 lt!33318)))

(assert (=> b!74029 (= lt!33318 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32671) lt!32673))))

(assert (=> b!74029 (isDefined!86 (getValueByKey!133 (toList!725 lt!32671) lt!32673))))

(declare-fun b!74030 () Bool)

(declare-fun Unit!2118 () Unit!2078)

(assert (=> b!74030 (= e!48390 Unit!2118)))

(declare-fun b!74031 () Bool)

(assert (=> b!74031 (= e!48391 (isDefined!86 (getValueByKey!133 (toList!725 lt!32671) lt!32673)))))

(assert (= (and d!17293 c!11085) b!74029))

(assert (= (and d!17293 (not c!11085)) b!74030))

(assert (= (and d!17293 (not res!39202)) b!74031))

(declare-fun m!72999 () Bool)

(assert (=> d!17293 m!72999))

(declare-fun m!73001 () Bool)

(assert (=> b!74029 m!73001))

(declare-fun m!73003 () Bool)

(assert (=> b!74029 m!73003))

(assert (=> b!74029 m!73003))

(declare-fun m!73005 () Bool)

(assert (=> b!74029 m!73005))

(assert (=> b!74031 m!73003))

(assert (=> b!74031 m!73003))

(assert (=> b!74031 m!73005))

(assert (=> d!16997 d!17293))

(declare-fun d!17295 () Bool)

(declare-fun res!39203 () Bool)

(declare-fun e!48392 () Bool)

(assert (=> d!17295 (=> res!39203 e!48392)))

(assert (=> d!17295 (= res!39203 (and ((_ is Cons!1474) (toList!725 lt!32614)) (= (_1!1072 (h!2061 (toList!725 lt!32614))) (_1!1072 lt!32542))))))

(assert (=> d!17295 (= (containsKey!137 (toList!725 lt!32614) (_1!1072 lt!32542)) e!48392)))

(declare-fun b!74032 () Bool)

(declare-fun e!48393 () Bool)

(assert (=> b!74032 (= e!48392 e!48393)))

(declare-fun res!39204 () Bool)

(assert (=> b!74032 (=> (not res!39204) (not e!48393))))

(assert (=> b!74032 (= res!39204 (and (or (not ((_ is Cons!1474) (toList!725 lt!32614))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32614))) (_1!1072 lt!32542))) ((_ is Cons!1474) (toList!725 lt!32614)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32614))) (_1!1072 lt!32542))))))

(declare-fun b!74033 () Bool)

(assert (=> b!74033 (= e!48393 (containsKey!137 (t!5035 (toList!725 lt!32614)) (_1!1072 lt!32542)))))

(assert (= (and d!17295 (not res!39203)) b!74032))

(assert (= (and b!74032 res!39204) b!74033))

(declare-fun m!73007 () Bool)

(assert (=> b!74033 m!73007))

(assert (=> d!17041 d!17295))

(declare-fun d!17297 () Bool)

(declare-fun lt!33322 () Bool)

(assert (=> d!17297 (= lt!33322 (select (content!77 lt!32609) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun e!48394 () Bool)

(assert (=> d!17297 (= lt!33322 e!48394)))

(declare-fun res!39205 () Bool)

(assert (=> d!17297 (=> (not res!39205) (not e!48394))))

(assert (=> d!17297 (= res!39205 ((_ is Cons!1474) lt!32609))))

(assert (=> d!17297 (= (contains!724 lt!32609 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))) lt!33322)))

(declare-fun b!74034 () Bool)

(declare-fun e!48395 () Bool)

(assert (=> b!74034 (= e!48394 e!48395)))

(declare-fun res!39206 () Bool)

(assert (=> b!74034 (=> res!39206 e!48395)))

(assert (=> b!74034 (= res!39206 (= (h!2061 lt!32609) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!74035 () Bool)

(assert (=> b!74035 (= e!48395 (contains!724 (t!5035 lt!32609) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(assert (= (and d!17297 res!39205) b!74034))

(assert (= (and b!74034 (not res!39206)) b!74035))

(declare-fun m!73009 () Bool)

(assert (=> d!17297 m!73009))

(declare-fun m!73011 () Bool)

(assert (=> d!17297 m!73011))

(declare-fun m!73013 () Bool)

(assert (=> b!74035 m!73013))

(assert (=> b!73464 d!17297))

(declare-fun d!17299 () Bool)

(assert (=> d!17299 (= (apply!75 lt!33069 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1142 (getValueByKey!133 (toList!725 lt!33069) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3192 () Bool)

(assert (= bs!3192 d!17299))

(assert (=> bs!3192 m!71711))

(declare-fun m!73015 () Bool)

(assert (=> bs!3192 m!73015))

(assert (=> bs!3192 m!73015))

(declare-fun m!73017 () Bool)

(assert (=> bs!3192 m!73017))

(assert (=> b!73595 d!17299))

(declare-fun d!17301 () Bool)

(declare-fun c!11086 () Bool)

(assert (=> d!17301 (= c!11086 ((_ is ValueCellFull!894) (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48396 () V!2947)

(assert (=> d!17301 (= (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48396)))

(declare-fun b!74036 () Bool)

(assert (=> b!74036 (= e!48396 (get!1140 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74037 () Bool)

(assert (=> b!74037 (= e!48396 (get!1141 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17301 c!11086) b!74036))

(assert (= (and d!17301 (not c!11086)) b!74037))

(assert (=> b!74036 m!72115))

(assert (=> b!74036 m!71267))

(declare-fun m!73019 () Bool)

(assert (=> b!74036 m!73019))

(assert (=> b!74037 m!72115))

(assert (=> b!74037 m!71267))

(declare-fun m!73021 () Bool)

(assert (=> b!74037 m!73021))

(assert (=> b!73595 d!17301))

(declare-fun d!17303 () Bool)

(assert (=> d!17303 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))

(declare-fun lt!33323 () Unit!2078)

(assert (=> d!17303 (= lt!33323 (choose!422 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))

(declare-fun e!48397 () Bool)

(assert (=> d!17303 e!48397))

(declare-fun res!39207 () Bool)

(assert (=> d!17303 (=> (not res!39207) (not e!48397))))

(assert (=> d!17303 (= res!39207 (isStrictlySorted!292 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))))))

(assert (=> d!17303 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593) lt!33323)))

(declare-fun b!74038 () Bool)

(assert (=> b!74038 (= e!48397 (containsKey!137 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))

(assert (= (and d!17303 res!39207) b!74038))

(assert (=> d!17303 m!71835))

(assert (=> d!17303 m!71835))

(assert (=> d!17303 m!71837))

(declare-fun m!73023 () Bool)

(assert (=> d!17303 m!73023))

(declare-fun m!73025 () Bool)

(assert (=> d!17303 m!73025))

(assert (=> b!74038 m!71831))

(assert (=> b!73425 d!17303))

(declare-fun d!17305 () Bool)

(assert (=> d!17305 (= (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593)) (not (isEmpty!317 (getValueByKey!133 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593))))))

(declare-fun bs!3193 () Bool)

(assert (= bs!3193 d!17305))

(assert (=> bs!3193 m!71835))

(declare-fun m!73027 () Bool)

(assert (=> bs!3193 m!73027))

(assert (=> b!73425 d!17305))

(declare-fun e!48399 () Option!139)

(declare-fun b!74041 () Bool)

(assert (=> b!74041 (= e!48399 (getValueByKey!133 (t!5035 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))) lt!32593))))

(declare-fun d!17307 () Bool)

(declare-fun c!11087 () Bool)

(assert (=> d!17307 (= c!11087 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))))) lt!32593)))))

(declare-fun e!48398 () Option!139)

(assert (=> d!17307 (= (getValueByKey!133 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))) lt!32593) e!48398)))

(declare-fun b!74040 () Bool)

(assert (=> b!74040 (= e!48398 e!48399)))

(declare-fun c!11088 () Bool)

(assert (=> b!74040 (= c!11088 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))) (not (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596))))) lt!32593))))))

(declare-fun b!74039 () Bool)

(assert (=> b!74039 (= e!48398 (Some!138 (_2!1072 (h!2061 (toList!725 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)))))))))

(declare-fun b!74042 () Bool)

(assert (=> b!74042 (= e!48399 None!137)))

(assert (= (and d!17307 c!11087) b!74039))

(assert (= (and d!17307 (not c!11087)) b!74040))

(assert (= (and b!74040 c!11088) b!74041))

(assert (= (and b!74040 (not c!11088)) b!74042))

(declare-fun m!73029 () Bool)

(assert (=> b!74041 m!73029))

(assert (=> b!73425 d!17307))

(declare-fun d!17309 () Bool)

(declare-fun res!39208 () Bool)

(declare-fun e!48400 () Bool)

(assert (=> d!17309 (=> res!39208 e!48400)))

(assert (=> d!17309 (= res!39208 (and ((_ is Cons!1474) lt!33126) (= (_1!1072 (h!2061 lt!33126)) (_1!1072 lt!32538))))))

(assert (=> d!17309 (= (containsKey!137 lt!33126 (_1!1072 lt!32538)) e!48400)))

(declare-fun b!74043 () Bool)

(declare-fun e!48401 () Bool)

(assert (=> b!74043 (= e!48400 e!48401)))

(declare-fun res!39209 () Bool)

(assert (=> b!74043 (=> (not res!39209) (not e!48401))))

(assert (=> b!74043 (= res!39209 (and (or (not ((_ is Cons!1474) lt!33126)) (bvsle (_1!1072 (h!2061 lt!33126)) (_1!1072 lt!32538))) ((_ is Cons!1474) lt!33126) (bvslt (_1!1072 (h!2061 lt!33126)) (_1!1072 lt!32538))))))

(declare-fun b!74044 () Bool)

(assert (=> b!74044 (= e!48401 (containsKey!137 (t!5035 lt!33126) (_1!1072 lt!32538)))))

(assert (= (and d!17309 (not res!39208)) b!74043))

(assert (= (and b!74043 res!39209) b!74044))

(declare-fun m!73031 () Bool)

(assert (=> b!74044 m!73031))

(assert (=> b!73679 d!17309))

(declare-fun lt!33324 () Bool)

(declare-fun d!17311 () Bool)

(assert (=> d!17311 (= lt!33324 (select (content!77 (toList!725 lt!33115)) (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48402 () Bool)

(assert (=> d!17311 (= lt!33324 e!48402)))

(declare-fun res!39210 () Bool)

(assert (=> d!17311 (=> (not res!39210) (not e!48402))))

(assert (=> d!17311 (= res!39210 ((_ is Cons!1474) (toList!725 lt!33115)))))

(assert (=> d!17311 (= (contains!724 (toList!725 lt!33115) (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33324)))

(declare-fun b!74045 () Bool)

(declare-fun e!48403 () Bool)

(assert (=> b!74045 (= e!48402 e!48403)))

(declare-fun res!39211 () Bool)

(assert (=> b!74045 (=> res!39211 e!48403)))

(assert (=> b!74045 (= res!39211 (= (h!2061 (toList!725 lt!33115)) (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74046 () Bool)

(assert (=> b!74046 (= e!48403 (contains!724 (t!5035 (toList!725 lt!33115)) (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17311 res!39210) b!74045))

(assert (= (and b!74045 (not res!39211)) b!74046))

(declare-fun m!73033 () Bool)

(assert (=> d!17311 m!73033))

(declare-fun m!73035 () Bool)

(assert (=> d!17311 m!73035))

(declare-fun m!73037 () Bool)

(assert (=> b!74046 m!73037))

(assert (=> b!73661 d!17311))

(declare-fun d!17313 () Bool)

(assert (=> d!17313 (= (get!1142 (getValueByKey!133 (toList!725 lt!32674) lt!32678)) (v!2534 (getValueByKey!133 (toList!725 lt!32674) lt!32678)))))

(assert (=> d!17023 d!17313))

(declare-fun b!74049 () Bool)

(declare-fun e!48405 () Option!139)

(assert (=> b!74049 (= e!48405 (getValueByKey!133 (t!5035 (toList!725 lt!32674)) lt!32678))))

(declare-fun d!17315 () Bool)

(declare-fun c!11089 () Bool)

(assert (=> d!17315 (= c!11089 (and ((_ is Cons!1474) (toList!725 lt!32674)) (= (_1!1072 (h!2061 (toList!725 lt!32674))) lt!32678)))))

(declare-fun e!48404 () Option!139)

(assert (=> d!17315 (= (getValueByKey!133 (toList!725 lt!32674) lt!32678) e!48404)))

(declare-fun b!74048 () Bool)

(assert (=> b!74048 (= e!48404 e!48405)))

(declare-fun c!11090 () Bool)

(assert (=> b!74048 (= c!11090 (and ((_ is Cons!1474) (toList!725 lt!32674)) (not (= (_1!1072 (h!2061 (toList!725 lt!32674))) lt!32678))))))

(declare-fun b!74047 () Bool)

(assert (=> b!74047 (= e!48404 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32674)))))))

(declare-fun b!74050 () Bool)

(assert (=> b!74050 (= e!48405 None!137)))

(assert (= (and d!17315 c!11089) b!74047))

(assert (= (and d!17315 (not c!11089)) b!74048))

(assert (= (and b!74048 c!11090) b!74049))

(assert (= (and b!74048 (not c!11090)) b!74050))

(declare-fun m!73039 () Bool)

(assert (=> b!74049 m!73039))

(assert (=> d!17023 d!17315))

(declare-fun d!17317 () Bool)

(assert (=> d!17317 (isDefined!86 (getValueByKey!133 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun lt!33325 () Unit!2078)

(assert (=> d!17317 (= lt!33325 (choose!422 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun e!48406 () Bool)

(assert (=> d!17317 e!48406))

(declare-fun res!39212 () Bool)

(assert (=> d!17317 (=> (not res!39212) (not e!48406))))

(assert (=> d!17317 (= res!39212 (isStrictlySorted!292 (toList!725 e!47901)))))

(assert (=> d!17317 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33325)))

(declare-fun b!74051 () Bool)

(assert (=> b!74051 (= e!48406 (containsKey!137 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17317 res!39212) b!74051))

(assert (=> d!17317 m!71227))

(assert (=> d!17317 m!71803))

(assert (=> d!17317 m!71803))

(assert (=> d!17317 m!71805))

(assert (=> d!17317 m!71227))

(declare-fun m!73041 () Bool)

(assert (=> d!17317 m!73041))

(declare-fun m!73043 () Bool)

(assert (=> d!17317 m!73043))

(assert (=> b!74051 m!71227))

(assert (=> b!74051 m!71799))

(assert (=> b!73418 d!17317))

(declare-fun d!17319 () Bool)

(assert (=> d!17319 (= (isDefined!86 (getValueByKey!133 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) (not (isEmpty!317 (getValueByKey!133 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun bs!3194 () Bool)

(assert (= bs!3194 d!17319))

(assert (=> bs!3194 m!71803))

(declare-fun m!73045 () Bool)

(assert (=> bs!3194 m!73045))

(assert (=> b!73418 d!17319))

(declare-fun e!48408 () Option!139)

(declare-fun b!74054 () Bool)

(assert (=> b!74054 (= e!48408 (getValueByKey!133 (t!5035 (toList!725 e!47901)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun d!17321 () Bool)

(declare-fun c!11091 () Bool)

(assert (=> d!17321 (= c!11091 (and ((_ is Cons!1474) (toList!725 e!47901)) (= (_1!1072 (h!2061 (toList!725 e!47901))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun e!48407 () Option!139)

(assert (=> d!17321 (= (getValueByKey!133 (toList!725 e!47901) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48407)))

(declare-fun b!74053 () Bool)

(assert (=> b!74053 (= e!48407 e!48408)))

(declare-fun c!11092 () Bool)

(assert (=> b!74053 (= c!11092 (and ((_ is Cons!1474) (toList!725 e!47901)) (not (= (_1!1072 (h!2061 (toList!725 e!47901))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun b!74052 () Bool)

(assert (=> b!74052 (= e!48407 (Some!138 (_2!1072 (h!2061 (toList!725 e!47901)))))))

(declare-fun b!74055 () Bool)

(assert (=> b!74055 (= e!48408 None!137)))

(assert (= (and d!17321 c!11091) b!74052))

(assert (= (and d!17321 (not c!11091)) b!74053))

(assert (= (and b!74053 c!11092) b!74054))

(assert (= (and b!74053 (not c!11092)) b!74055))

(assert (=> b!74054 m!71227))

(declare-fun m!73047 () Bool)

(assert (=> b!74054 m!73047))

(assert (=> b!73418 d!17321))

(declare-fun d!17323 () Bool)

(assert (not d!17323))

(assert (=> b!73646 d!17323))

(assert (=> b!73255 d!17095))

(assert (=> b!73255 d!17097))

(declare-fun d!17325 () Bool)

(assert (=> d!17325 (= (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32687)) (v!2534 (getValueByKey!133 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32687)))))

(assert (=> d!17015 d!17325))

(declare-fun e!48410 () Option!139)

(declare-fun b!74058 () Bool)

(assert (=> b!74058 (= e!48410 (getValueByKey!133 (t!5035 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!32687))))

(declare-fun c!11093 () Bool)

(declare-fun d!17327 () Bool)

(assert (=> d!17327 (= c!11093 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32687)))))

(declare-fun e!48409 () Option!139)

(assert (=> d!17327 (= (getValueByKey!133 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32687) e!48409)))

(declare-fun b!74057 () Bool)

(assert (=> b!74057 (= e!48409 e!48410)))

(declare-fun c!11094 () Bool)

(assert (=> b!74057 (= c!11094 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (not (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32687))))))

(declare-fun b!74056 () Bool)

(assert (=> b!74056 (= e!48409 (Some!138 (_2!1072 (h!2061 (toList!725 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun b!74059 () Bool)

(assert (=> b!74059 (= e!48410 None!137)))

(assert (= (and d!17327 c!11093) b!74056))

(assert (= (and d!17327 (not c!11093)) b!74057))

(assert (= (and b!74057 c!11094) b!74058))

(assert (= (and b!74057 (not c!11094)) b!74059))

(declare-fun m!73049 () Bool)

(assert (=> b!74058 m!73049))

(assert (=> d!17015 d!17327))

(declare-fun d!17329 () Bool)

(assert (=> d!17329 (isDefined!86 (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542)))))

(declare-fun lt!33326 () Unit!2078)

(assert (=> d!17329 (= lt!33326 (choose!422 (toList!725 lt!32614) (_1!1072 lt!32542)))))

(declare-fun e!48411 () Bool)

(assert (=> d!17329 e!48411))

(declare-fun res!39213 () Bool)

(assert (=> d!17329 (=> (not res!39213) (not e!48411))))

(assert (=> d!17329 (= res!39213 (isStrictlySorted!292 (toList!725 lt!32614)))))

(assert (=> d!17329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32614) (_1!1072 lt!32542)) lt!33326)))

(declare-fun b!74060 () Bool)

(assert (=> b!74060 (= e!48411 (containsKey!137 (toList!725 lt!32614) (_1!1072 lt!32542)))))

(assert (= (and d!17329 res!39213) b!74060))

(assert (=> d!17329 m!71375))

(assert (=> d!17329 m!71375))

(assert (=> d!17329 m!72323))

(declare-fun m!73051 () Bool)

(assert (=> d!17329 m!73051))

(declare-fun m!73053 () Bool)

(assert (=> d!17329 m!73053))

(assert (=> b!74060 m!72319))

(assert (=> b!73693 d!17329))

(declare-fun d!17331 () Bool)

(assert (=> d!17331 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32614) (_1!1072 lt!32542)))))))

(declare-fun bs!3195 () Bool)

(assert (= bs!3195 d!17331))

(assert (=> bs!3195 m!71375))

(declare-fun m!73055 () Bool)

(assert (=> bs!3195 m!73055))

(assert (=> b!73693 d!17331))

(assert (=> b!73693 d!16979))

(declare-fun b!74061 () Bool)

(declare-fun e!48412 () (_ BitVec 32))

(declare-fun call!6542 () (_ BitVec 32))

(assert (=> b!74061 (= e!48412 call!6542)))

(declare-fun b!74062 () Bool)

(declare-fun e!48413 () (_ BitVec 32))

(assert (=> b!74062 (= e!48413 #b00000000000000000000000000000000)))

(declare-fun bm!6539 () Bool)

(assert (=> bm!6539 (= call!6542 (arrayCountValidKeys!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun d!17333 () Bool)

(declare-fun lt!33327 () (_ BitVec 32))

(assert (=> d!17333 (and (bvsge lt!33327 #b00000000000000000000000000000000) (bvsle lt!33327 (bvsub (size!2097 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!17333 (= lt!33327 e!48413)))

(declare-fun c!11095 () Bool)

(assert (=> d!17333 (= c!11095 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17333 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2097 (_keys!3865 newMap!16)) (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17333 (= (arrayCountValidKeys!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))) lt!33327)))

(declare-fun b!74063 () Bool)

(assert (=> b!74063 (= e!48413 e!48412)))

(declare-fun c!11096 () Bool)

(assert (=> b!74063 (= c!11096 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74064 () Bool)

(assert (=> b!74064 (= e!48412 (bvadd #b00000000000000000000000000000001 call!6542))))

(assert (= (and d!17333 c!11095) b!74062))

(assert (= (and d!17333 (not c!11095)) b!74063))

(assert (= (and b!74063 c!11096) b!74064))

(assert (= (and b!74063 (not c!11096)) b!74061))

(assert (= (or b!74064 b!74061) bm!6539))

(declare-fun m!73057 () Bool)

(assert (=> bm!6539 m!73057))

(assert (=> b!74063 m!72761))

(assert (=> b!74063 m!72761))

(assert (=> b!74063 m!72763))

(assert (=> bm!6451 d!17333))

(declare-fun d!17335 () Bool)

(declare-fun e!48415 () Bool)

(assert (=> d!17335 e!48415))

(declare-fun res!39214 () Bool)

(assert (=> d!17335 (=> res!39214 e!48415)))

(declare-fun lt!33331 () Bool)

(assert (=> d!17335 (= res!39214 (not lt!33331))))

(declare-fun lt!33330 () Bool)

(assert (=> d!17335 (= lt!33331 lt!33330)))

(declare-fun lt!33329 () Unit!2078)

(declare-fun e!48414 () Unit!2078)

(assert (=> d!17335 (= lt!33329 e!48414)))

(declare-fun c!11097 () Bool)

(assert (=> d!17335 (= c!11097 lt!33330)))

(assert (=> d!17335 (= lt!33330 (containsKey!137 (toList!725 lt!32860) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17335 (= (contains!723 lt!32860 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33331)))

(declare-fun b!74065 () Bool)

(declare-fun lt!33328 () Unit!2078)

(assert (=> b!74065 (= e!48414 lt!33328)))

(assert (=> b!74065 (= lt!33328 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32860) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74065 (isDefined!86 (getValueByKey!133 (toList!725 lt!32860) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74066 () Bool)

(declare-fun Unit!2119 () Unit!2078)

(assert (=> b!74066 (= e!48414 Unit!2119)))

(declare-fun b!74067 () Bool)

(assert (=> b!74067 (= e!48415 (isDefined!86 (getValueByKey!133 (toList!725 lt!32860) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17335 c!11097) b!74065))

(assert (= (and d!17335 (not c!11097)) b!74066))

(assert (= (and d!17335 (not res!39214)) b!74067))

(assert (=> d!17335 m!71563))

(declare-fun m!73059 () Bool)

(assert (=> d!17335 m!73059))

(assert (=> b!74065 m!71563))

(declare-fun m!73061 () Bool)

(assert (=> b!74065 m!73061))

(assert (=> b!74065 m!71563))

(declare-fun m!73063 () Bool)

(assert (=> b!74065 m!73063))

(assert (=> b!74065 m!73063))

(declare-fun m!73065 () Bool)

(assert (=> b!74065 m!73065))

(assert (=> b!74067 m!71563))

(assert (=> b!74067 m!73063))

(assert (=> b!74067 m!73063))

(assert (=> b!74067 m!73065))

(assert (=> b!73385 d!17335))

(declare-fun d!17337 () Bool)

(declare-fun e!48417 () Bool)

(assert (=> d!17337 e!48417))

(declare-fun res!39215 () Bool)

(assert (=> d!17337 (=> res!39215 e!48417)))

(declare-fun lt!33335 () Bool)

(assert (=> d!17337 (= res!39215 (not lt!33335))))

(declare-fun lt!33334 () Bool)

(assert (=> d!17337 (= lt!33335 lt!33334)))

(declare-fun lt!33333 () Unit!2078)

(declare-fun e!48416 () Unit!2078)

(assert (=> d!17337 (= lt!33333 e!48416)))

(declare-fun c!11098 () Bool)

(assert (=> d!17337 (= c!11098 lt!33334)))

(assert (=> d!17337 (= lt!33334 (containsKey!137 (toList!725 lt!32812) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17337 (= (contains!723 lt!32812 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33335)))

(declare-fun b!74068 () Bool)

(declare-fun lt!33332 () Unit!2078)

(assert (=> b!74068 (= e!48416 lt!33332)))

(assert (=> b!74068 (= lt!33332 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32812) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> b!74068 (isDefined!86 (getValueByKey!133 (toList!725 lt!32812) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74069 () Bool)

(declare-fun Unit!2120 () Unit!2078)

(assert (=> b!74069 (= e!48416 Unit!2120)))

(declare-fun b!74070 () Bool)

(assert (=> b!74070 (= e!48417 (isDefined!86 (getValueByKey!133 (toList!725 lt!32812) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (= (and d!17337 c!11098) b!74068))

(assert (= (and d!17337 (not c!11098)) b!74069))

(assert (= (and d!17337 (not res!39215)) b!74070))

(declare-fun m!73067 () Bool)

(assert (=> d!17337 m!73067))

(declare-fun m!73069 () Bool)

(assert (=> b!74068 m!73069))

(assert (=> b!74068 m!71609))

(assert (=> b!74068 m!71609))

(declare-fun m!73071 () Bool)

(assert (=> b!74068 m!73071))

(assert (=> b!74070 m!71609))

(assert (=> b!74070 m!71609))

(assert (=> b!74070 m!73071))

(assert (=> d!16873 d!17337))

(declare-fun b!74073 () Bool)

(declare-fun e!48419 () Option!139)

(assert (=> b!74073 (= e!48419 (getValueByKey!133 (t!5035 lt!32811) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun c!11099 () Bool)

(declare-fun d!17339 () Bool)

(assert (=> d!17339 (= c!11099 (and ((_ is Cons!1474) lt!32811) (= (_1!1072 (h!2061 lt!32811)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48418 () Option!139)

(assert (=> d!17339 (= (getValueByKey!133 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) e!48418)))

(declare-fun b!74072 () Bool)

(assert (=> b!74072 (= e!48418 e!48419)))

(declare-fun c!11100 () Bool)

(assert (=> b!74072 (= c!11100 (and ((_ is Cons!1474) lt!32811) (not (= (_1!1072 (h!2061 lt!32811)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!74071 () Bool)

(assert (=> b!74071 (= e!48418 (Some!138 (_2!1072 (h!2061 lt!32811))))))

(declare-fun b!74074 () Bool)

(assert (=> b!74074 (= e!48419 None!137)))

(assert (= (and d!17339 c!11099) b!74071))

(assert (= (and d!17339 (not c!11099)) b!74072))

(assert (= (and b!74072 c!11100) b!74073))

(assert (= (and b!74072 (not c!11100)) b!74074))

(declare-fun m!73073 () Bool)

(assert (=> b!74073 m!73073))

(assert (=> d!16873 d!17339))

(declare-fun d!17341 () Bool)

(assert (=> d!17341 (= (getValueByKey!133 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!33336 () Unit!2078)

(assert (=> d!17341 (= lt!33336 (choose!412 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun e!48420 () Bool)

(assert (=> d!17341 e!48420))

(declare-fun res!39216 () Bool)

(assert (=> d!17341 (=> (not res!39216) (not e!48420))))

(assert (=> d!17341 (= res!39216 (isStrictlySorted!292 lt!32811))))

(assert (=> d!17341 (= (lemmaContainsTupThenGetReturnValue!50 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33336)))

(declare-fun b!74075 () Bool)

(declare-fun res!39217 () Bool)

(assert (=> b!74075 (=> (not res!39217) (not e!48420))))

(assert (=> b!74075 (= res!39217 (containsKey!137 lt!32811 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74076 () Bool)

(assert (=> b!74076 (= e!48420 (contains!724 lt!32811 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (= (and d!17341 res!39216) b!74075))

(assert (= (and b!74075 res!39217) b!74076))

(assert (=> d!17341 m!71603))

(declare-fun m!73075 () Bool)

(assert (=> d!17341 m!73075))

(declare-fun m!73077 () Bool)

(assert (=> d!17341 m!73077))

(declare-fun m!73079 () Bool)

(assert (=> b!74075 m!73079))

(declare-fun m!73081 () Bool)

(assert (=> b!74076 m!73081))

(assert (=> d!16873 d!17341))

(declare-fun b!74077 () Bool)

(declare-fun e!48423 () List!1478)

(declare-fun call!6543 () List!1478)

(assert (=> b!74077 (= e!48423 call!6543)))

(declare-fun b!74078 () Bool)

(declare-fun e!48425 () List!1478)

(declare-fun call!6544 () List!1478)

(assert (=> b!74078 (= e!48425 call!6544)))

(declare-fun b!74079 () Bool)

(declare-fun e!48421 () List!1478)

(declare-fun call!6545 () List!1478)

(assert (=> b!74079 (= e!48421 call!6545)))

(declare-fun b!74080 () Bool)

(declare-fun e!48422 () List!1478)

(declare-fun c!11104 () Bool)

(declare-fun c!11102 () Bool)

(assert (=> b!74080 (= e!48422 (ite c!11104 (t!5035 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (ite c!11102 (Cons!1474 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (t!5035 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) Nil!1475)))))

(declare-fun b!74081 () Bool)

(assert (=> b!74081 (= e!48421 e!48423)))

(assert (=> b!74081 (= c!11104 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun bm!6540 () Bool)

(assert (=> bm!6540 (= call!6544 call!6543)))

(declare-fun bm!6541 () Bool)

(declare-fun c!11101 () Bool)

(assert (=> bm!6541 (= call!6545 ($colon$colon!66 e!48422 (ite c!11101 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun c!11103 () Bool)

(assert (=> bm!6541 (= c!11103 c!11101)))

(declare-fun b!74082 () Bool)

(declare-fun res!39219 () Bool)

(declare-fun e!48424 () Bool)

(assert (=> b!74082 (=> (not res!39219) (not e!48424))))

(declare-fun lt!33337 () List!1478)

(assert (=> b!74082 (= res!39219 (containsKey!137 lt!33337 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun bm!6542 () Bool)

(assert (=> bm!6542 (= call!6543 call!6545)))

(declare-fun b!74083 () Bool)

(assert (=> b!74083 (= e!48424 (contains!724 lt!33337 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!74084 () Bool)

(assert (=> b!74084 (= e!48425 call!6544)))

(declare-fun b!74085 () Bool)

(assert (=> b!74085 (= e!48422 (insertStrictlySorted!53 (t!5035 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74086 () Bool)

(assert (=> b!74086 (= c!11102 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (bvsgt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> b!74086 (= e!48423 e!48425)))

(declare-fun d!17343 () Bool)

(assert (=> d!17343 e!48424))

(declare-fun res!39218 () Bool)

(assert (=> d!17343 (=> (not res!39218) (not e!48424))))

(assert (=> d!17343 (= res!39218 (isStrictlySorted!292 lt!33337))))

(assert (=> d!17343 (= lt!33337 e!48421)))

(assert (=> d!17343 (= c!11101 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!17343 (isStrictlySorted!292 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17343 (= (insertStrictlySorted!53 (toList!725 (+!94 lt!32540 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33337)))

(assert (= (and d!17343 c!11101) b!74079))

(assert (= (and d!17343 (not c!11101)) b!74081))

(assert (= (and b!74081 c!11104) b!74077))

(assert (= (and b!74081 (not c!11104)) b!74086))

(assert (= (and b!74086 c!11102) b!74084))

(assert (= (and b!74086 (not c!11102)) b!74078))

(assert (= (or b!74084 b!74078) bm!6540))

(assert (= (or b!74077 bm!6540) bm!6542))

(assert (= (or b!74079 bm!6542) bm!6541))

(assert (= (and bm!6541 c!11103) b!74085))

(assert (= (and bm!6541 (not c!11103)) b!74080))

(assert (= (and d!17343 res!39218) b!74082))

(assert (= (and b!74082 res!39219) b!74083))

(declare-fun m!73083 () Bool)

(assert (=> bm!6541 m!73083))

(declare-fun m!73085 () Bool)

(assert (=> b!74085 m!73085))

(declare-fun m!73087 () Bool)

(assert (=> b!74083 m!73087))

(declare-fun m!73089 () Bool)

(assert (=> d!17343 m!73089))

(declare-fun m!73091 () Bool)

(assert (=> d!17343 m!73091))

(declare-fun m!73093 () Bool)

(assert (=> b!74082 m!73093))

(assert (=> d!16873 d!17343))

(declare-fun d!17345 () Bool)

(declare-fun c!11107 () Bool)

(assert (=> d!17345 (= c!11107 ((_ is Nil!1475) (toList!725 lt!32622)))))

(declare-fun e!48428 () (InoxSet tuple2!2122))

(assert (=> d!17345 (= (content!77 (toList!725 lt!32622)) e!48428)))

(declare-fun b!74091 () Bool)

(assert (=> b!74091 (= e!48428 ((as const (Array tuple2!2122 Bool)) false))))

(declare-fun b!74092 () Bool)

(assert (=> b!74092 (= e!48428 ((_ map or) (store ((as const (Array tuple2!2122 Bool)) false) (h!2061 (toList!725 lt!32622)) true) (content!77 (t!5035 (toList!725 lt!32622)))))))

(assert (= (and d!17345 c!11107) b!74091))

(assert (= (and d!17345 (not c!11107)) b!74092))

(declare-fun m!73095 () Bool)

(assert (=> b!74092 m!73095))

(assert (=> b!74092 m!72785))

(assert (=> d!16981 d!17345))

(declare-fun d!17347 () Bool)

(assert (=> d!17347 (= (apply!75 lt!32914 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32914) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3196 () Bool)

(assert (= bs!3196 d!17347))

(declare-fun m!73097 () Bool)

(assert (=> bs!3196 m!73097))

(assert (=> bs!3196 m!73097))

(declare-fun m!73099 () Bool)

(assert (=> bs!3196 m!73099))

(assert (=> b!73444 d!17347))

(declare-fun d!17349 () Bool)

(declare-fun e!48429 () Bool)

(assert (=> d!17349 e!48429))

(declare-fun res!39220 () Bool)

(assert (=> d!17349 (=> (not res!39220) (not e!48429))))

(declare-fun lt!33340 () ListLongMap!1419)

(assert (=> d!17349 (= res!39220 (contains!723 lt!33340 (_1!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(declare-fun lt!33339 () List!1478)

(assert (=> d!17349 (= lt!33340 (ListLongMap!1420 lt!33339))))

(declare-fun lt!33341 () Unit!2078)

(declare-fun lt!33338 () Unit!2078)

(assert (=> d!17349 (= lt!33341 lt!33338)))

(assert (=> d!17349 (= (getValueByKey!133 lt!33339 (_1!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17349 (= lt!33338 (lemmaContainsTupThenGetReturnValue!50 lt!33339 (_1!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17349 (= lt!33339 (insertStrictlySorted!53 (toList!725 lt!32937) (_1!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17349 (= (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!33340)))

(declare-fun b!74093 () Bool)

(declare-fun res!39221 () Bool)

(assert (=> b!74093 (=> (not res!39221) (not e!48429))))

(assert (=> b!74093 (= res!39221 (= (getValueByKey!133 (toList!725 lt!33340) (_1!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))))))))

(declare-fun b!74094 () Bool)

(assert (=> b!74094 (= e!48429 (contains!724 (toList!725 lt!33340) (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))))))

(assert (= (and d!17349 res!39220) b!74093))

(assert (= (and b!74093 res!39221) b!74094))

(declare-fun m!73101 () Bool)

(assert (=> d!17349 m!73101))

(declare-fun m!73103 () Bool)

(assert (=> d!17349 m!73103))

(declare-fun m!73105 () Bool)

(assert (=> d!17349 m!73105))

(declare-fun m!73107 () Bool)

(assert (=> d!17349 m!73107))

(declare-fun m!73109 () Bool)

(assert (=> b!74093 m!73109))

(declare-fun m!73111 () Bool)

(assert (=> b!74094 m!73111))

(assert (=> b!73490 d!17349))

(declare-fun d!17351 () Bool)

(declare-fun e!48430 () Bool)

(assert (=> d!17351 e!48430))

(declare-fun res!39222 () Bool)

(assert (=> d!17351 (=> (not res!39222) (not e!48430))))

(declare-fun lt!33344 () ListLongMap!1419)

(assert (=> d!17351 (= res!39222 (contains!723 lt!33344 (_1!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))))))

(declare-fun lt!33343 () List!1478)

(assert (=> d!17351 (= lt!33344 (ListLongMap!1420 lt!33343))))

(declare-fun lt!33345 () Unit!2078)

(declare-fun lt!33342 () Unit!2078)

(assert (=> d!17351 (= lt!33345 lt!33342)))

(assert (=> d!17351 (= (getValueByKey!133 lt!33343 (_1!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))))))

(assert (=> d!17351 (= lt!33342 (lemmaContainsTupThenGetReturnValue!50 lt!33343 (_1!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))))))

(assert (=> d!17351 (= lt!33343 (insertStrictlySorted!53 (toList!725 lt!32954) (_1!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))))))

(assert (=> d!17351 (= (+!94 lt!32954 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))) lt!33344)))

(declare-fun b!74095 () Bool)

(declare-fun res!39223 () Bool)

(assert (=> b!74095 (=> (not res!39223) (not e!48430))))

(assert (=> b!74095 (= res!39223 (= (getValueByKey!133 (toList!725 lt!33344) (_1!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))))))))

(declare-fun b!74096 () Bool)

(assert (=> b!74096 (= e!48430 (contains!724 (toList!725 lt!33344) (tuple2!2123 lt!32955 (minValue!2115 newMap!16))))))

(assert (= (and d!17351 res!39222) b!74095))

(assert (= (and b!74095 res!39223) b!74096))

(declare-fun m!73113 () Bool)

(assert (=> d!17351 m!73113))

(declare-fun m!73115 () Bool)

(assert (=> d!17351 m!73115))

(declare-fun m!73117 () Bool)

(assert (=> d!17351 m!73117))

(declare-fun m!73119 () Bool)

(assert (=> d!17351 m!73119))

(declare-fun m!73121 () Bool)

(assert (=> b!74095 m!73121))

(declare-fun m!73123 () Bool)

(assert (=> b!74096 m!73123))

(assert (=> b!73490 d!17351))

(declare-fun d!17353 () Bool)

(assert (=> d!17353 (= (apply!75 lt!32951 lt!32950) (get!1142 (getValueByKey!133 (toList!725 lt!32951) lt!32950)))))

(declare-fun bs!3197 () Bool)

(assert (= bs!3197 d!17353))

(declare-fun m!73125 () Bool)

(assert (=> bs!3197 m!73125))

(assert (=> bs!3197 m!73125))

(declare-fun m!73127 () Bool)

(assert (=> bs!3197 m!73127))

(assert (=> b!73490 d!17353))

(declare-fun d!17355 () Bool)

(assert (=> d!17355 (= (apply!75 (+!94 lt!32951 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!32950) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32951 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) lt!32950)))))

(declare-fun bs!3198 () Bool)

(assert (= bs!3198 d!17355))

(declare-fun m!73129 () Bool)

(assert (=> bs!3198 m!73129))

(assert (=> bs!3198 m!73129))

(declare-fun m!73131 () Bool)

(assert (=> bs!3198 m!73131))

(assert (=> b!73490 d!17355))

(declare-fun d!17357 () Bool)

(assert (=> d!17357 (= (apply!75 (+!94 lt!32954 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))) lt!32953) (apply!75 lt!32954 lt!32953))))

(declare-fun lt!33346 () Unit!2078)

(assert (=> d!17357 (= lt!33346 (choose!419 lt!32954 lt!32955 (minValue!2115 newMap!16) lt!32953))))

(declare-fun e!48431 () Bool)

(assert (=> d!17357 e!48431))

(declare-fun res!39224 () Bool)

(assert (=> d!17357 (=> (not res!39224) (not e!48431))))

(assert (=> d!17357 (= res!39224 (contains!723 lt!32954 lt!32953))))

(assert (=> d!17357 (= (addApplyDifferent!51 lt!32954 lt!32955 (minValue!2115 newMap!16) lt!32953) lt!33346)))

(declare-fun b!74097 () Bool)

(assert (=> b!74097 (= e!48431 (not (= lt!32953 lt!32955)))))

(assert (= (and d!17357 res!39224) b!74097))

(assert (=> d!17357 m!71967))

(assert (=> d!17357 m!71991))

(assert (=> d!17357 m!71971))

(declare-fun m!73133 () Bool)

(assert (=> d!17357 m!73133))

(assert (=> d!17357 m!71967))

(declare-fun m!73135 () Bool)

(assert (=> d!17357 m!73135))

(assert (=> b!73490 d!17357))

(declare-fun d!17359 () Bool)

(declare-fun e!48435 () Bool)

(assert (=> d!17359 e!48435))

(declare-fun res!39225 () Bool)

(assert (=> d!17359 (=> (not res!39225) (not e!48435))))

(declare-fun lt!33348 () ListLongMap!1419)

(assert (=> d!17359 (= res!39225 (not (contains!723 lt!33348 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48433 () ListLongMap!1419)

(assert (=> d!17359 (= lt!33348 e!48433)))

(declare-fun c!11110 () Bool)

(assert (=> d!17359 (= c!11110 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17359 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17359 (= (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33348)))

(declare-fun b!74098 () Bool)

(declare-fun e!48437 () ListLongMap!1419)

(assert (=> b!74098 (= e!48433 e!48437)))

(declare-fun c!11108 () Bool)

(assert (=> b!74098 (= c!11108 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74099 () Bool)

(assert (=> b!74099 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> b!74099 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (ite c!10872 (_values!2196 newMap!16) lt!32777))))))

(declare-fun e!48438 () Bool)

(assert (=> b!74099 (= e!48438 (= (apply!75 lt!33348 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!6546 () ListLongMap!1419)

(declare-fun bm!6543 () Bool)

(assert (=> bm!6543 (= call!6546 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16)))))

(declare-fun b!74100 () Bool)

(declare-fun e!48432 () Bool)

(assert (=> b!74100 (= e!48432 e!48438)))

(assert (=> b!74100 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun res!39228 () Bool)

(assert (=> b!74100 (= res!39228 (contains!723 lt!33348 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74100 (=> (not res!39228) (not e!48438))))

(declare-fun b!74101 () Bool)

(assert (=> b!74101 (= e!48435 e!48432)))

(declare-fun c!11111 () Bool)

(declare-fun e!48434 () Bool)

(assert (=> b!74101 (= c!11111 e!48434)))

(declare-fun res!39227 () Bool)

(assert (=> b!74101 (=> (not res!39227) (not e!48434))))

(assert (=> b!74101 (= res!39227 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74102 () Bool)

(declare-fun res!39226 () Bool)

(assert (=> b!74102 (=> (not res!39226) (not e!48435))))

(assert (=> b!74102 (= res!39226 (not (contains!723 lt!33348 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74103 () Bool)

(assert (=> b!74103 (= e!48434 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74103 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74104 () Bool)

(assert (=> b!74104 (= e!48433 (ListLongMap!1420 Nil!1475))))

(declare-fun b!74105 () Bool)

(declare-fun e!48436 () Bool)

(assert (=> b!74105 (= e!48436 (isEmpty!316 lt!33348))))

(declare-fun b!74106 () Bool)

(assert (=> b!74106 (= e!48432 e!48436)))

(declare-fun c!11109 () Bool)

(assert (=> b!74106 (= c!11109 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74107 () Bool)

(assert (=> b!74107 (= e!48437 call!6546)))

(declare-fun b!74108 () Bool)

(assert (=> b!74108 (= e!48436 (= lt!33348 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (ite c!10872 (_values!2196 newMap!16) lt!32777) (mask!6180 newMap!16) (ite (and c!10872 c!10871) lt!32768 (extraKeys!2072 newMap!16)) (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16))))))

(declare-fun b!74109 () Bool)

(declare-fun lt!33351 () Unit!2078)

(declare-fun lt!33352 () Unit!2078)

(assert (=> b!74109 (= lt!33351 lt!33352)))

(declare-fun lt!33353 () (_ BitVec 64))

(declare-fun lt!33350 () V!2947)

(declare-fun lt!33347 () (_ BitVec 64))

(declare-fun lt!33349 () ListLongMap!1419)

(assert (=> b!74109 (not (contains!723 (+!94 lt!33349 (tuple2!2123 lt!33353 lt!33350)) lt!33347))))

(assert (=> b!74109 (= lt!33352 (addStillNotContains!24 lt!33349 lt!33353 lt!33350 lt!33347))))

(assert (=> b!74109 (= lt!33347 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74109 (= lt!33350 (get!1139 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74109 (= lt!33353 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74109 (= lt!33349 call!6546)))

(assert (=> b!74109 (= e!48437 (+!94 call!6546 (tuple2!2123 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (get!1139 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17359 c!11110) b!74104))

(assert (= (and d!17359 (not c!11110)) b!74098))

(assert (= (and b!74098 c!11108) b!74109))

(assert (= (and b!74098 (not c!11108)) b!74107))

(assert (= (or b!74109 b!74107) bm!6543))

(assert (= (and d!17359 res!39225) b!74102))

(assert (= (and b!74102 res!39226) b!74101))

(assert (= (and b!74101 res!39227) b!74103))

(assert (= (and b!74101 c!11111) b!74100))

(assert (= (and b!74101 (not c!11111)) b!74106))

(assert (= (and b!74100 res!39228) b!74099))

(assert (= (and b!74106 c!11109) b!74108))

(assert (= (and b!74106 (not c!11109)) b!74105))

(declare-fun b_lambda!3323 () Bool)

(assert (=> (not b_lambda!3323) (not b!74099)))

(assert (=> b!74099 t!5042))

(declare-fun b_and!4543 () Bool)

(assert (= b_and!4539 (and (=> t!5042 result!2693) b_and!4543)))

(assert (=> b!74099 t!5044))

(declare-fun b_and!4545 () Bool)

(assert (= b_and!4541 (and (=> t!5044 result!2695) b_and!4545)))

(declare-fun b_lambda!3325 () Bool)

(assert (=> (not b_lambda!3325) (not b!74109)))

(assert (=> b!74109 t!5042))

(declare-fun b_and!4547 () Bool)

(assert (= b_and!4543 (and (=> t!5042 result!2693) b_and!4547)))

(assert (=> b!74109 t!5044))

(declare-fun b_and!4549 () Bool)

(assert (= b_and!4545 (and (=> t!5044 result!2695) b_and!4549)))

(assert (=> b!74100 m!71563))

(assert (=> b!74100 m!71563))

(declare-fun m!73137 () Bool)

(assert (=> b!74100 m!73137))

(declare-fun m!73139 () Bool)

(assert (=> d!17359 m!73139))

(assert (=> d!17359 m!71705))

(assert (=> b!74098 m!71563))

(assert (=> b!74098 m!71563))

(assert (=> b!74098 m!71567))

(declare-fun m!73141 () Bool)

(assert (=> b!74102 m!73141))

(assert (=> b!74103 m!71563))

(assert (=> b!74103 m!71563))

(assert (=> b!74103 m!71567))

(declare-fun m!73143 () Bool)

(assert (=> bm!6543 m!73143))

(assert (=> b!74099 m!71945))

(assert (=> b!74099 m!71717))

(assert (=> b!74099 m!71947))

(assert (=> b!74099 m!71563))

(assert (=> b!74099 m!71945))

(assert (=> b!74099 m!71563))

(declare-fun m!73145 () Bool)

(assert (=> b!74099 m!73145))

(assert (=> b!74099 m!71717))

(assert (=> b!74108 m!73143))

(assert (=> b!74109 m!71717))

(assert (=> b!74109 m!71945))

(assert (=> b!74109 m!71717))

(assert (=> b!74109 m!71947))

(declare-fun m!73147 () Bool)

(assert (=> b!74109 m!73147))

(declare-fun m!73149 () Bool)

(assert (=> b!74109 m!73149))

(declare-fun m!73151 () Bool)

(assert (=> b!74109 m!73151))

(assert (=> b!74109 m!71945))

(assert (=> b!74109 m!71563))

(assert (=> b!74109 m!73147))

(declare-fun m!73153 () Bool)

(assert (=> b!74109 m!73153))

(declare-fun m!73155 () Bool)

(assert (=> b!74105 m!73155))

(assert (=> b!73490 d!17359))

(declare-fun d!17361 () Bool)

(declare-fun e!48439 () Bool)

(assert (=> d!17361 e!48439))

(declare-fun res!39229 () Bool)

(assert (=> d!17361 (=> (not res!39229) (not e!48439))))

(declare-fun lt!33356 () ListLongMap!1419)

(assert (=> d!17361 (= res!39229 (contains!723 lt!33356 (_1!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))))))

(declare-fun lt!33355 () List!1478)

(assert (=> d!17361 (= lt!33356 (ListLongMap!1420 lt!33355))))

(declare-fun lt!33357 () Unit!2078)

(declare-fun lt!33354 () Unit!2078)

(assert (=> d!17361 (= lt!33357 lt!33354)))

(assert (=> d!17361 (= (getValueByKey!133 lt!33355 (_1!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))))))

(assert (=> d!17361 (= lt!33354 (lemmaContainsTupThenGetReturnValue!50 lt!33355 (_1!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))))))

(assert (=> d!17361 (= lt!33355 (insertStrictlySorted!53 (toList!725 lt!32940) (_1!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))) (_2!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))))))

(assert (=> d!17361 (= (+!94 lt!32940 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))) lt!33356)))

(declare-fun b!74110 () Bool)

(declare-fun res!39230 () Bool)

(assert (=> b!74110 (=> (not res!39230) (not e!48439))))

(assert (=> b!74110 (= res!39230 (= (getValueByKey!133 (toList!725 lt!33356) (_1!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))) (Some!138 (_2!1072 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))))))))

(declare-fun b!74111 () Bool)

(assert (=> b!74111 (= e!48439 (contains!724 (toList!725 lt!33356) (tuple2!2123 lt!32945 (minValue!2115 newMap!16))))))

(assert (= (and d!17361 res!39229) b!74110))

(assert (= (and b!74110 res!39230) b!74111))

(declare-fun m!73157 () Bool)

(assert (=> d!17361 m!73157))

(declare-fun m!73159 () Bool)

(assert (=> d!17361 m!73159))

(declare-fun m!73161 () Bool)

(assert (=> d!17361 m!73161))

(declare-fun m!73163 () Bool)

(assert (=> d!17361 m!73163))

(declare-fun m!73165 () Bool)

(assert (=> b!74110 m!73165))

(declare-fun m!73167 () Bool)

(assert (=> b!74111 m!73167))

(assert (=> b!73490 d!17361))

(declare-fun d!17363 () Bool)

(assert (=> d!17363 (= (apply!75 (+!94 lt!32940 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))) lt!32944) (apply!75 lt!32940 lt!32944))))

(declare-fun lt!33358 () Unit!2078)

(assert (=> d!17363 (= lt!33358 (choose!419 lt!32940 lt!32945 (minValue!2115 newMap!16) lt!32944))))

(declare-fun e!48440 () Bool)

(assert (=> d!17363 e!48440))

(declare-fun res!39231 () Bool)

(assert (=> d!17363 (=> (not res!39231) (not e!48440))))

(assert (=> d!17363 (= res!39231 (contains!723 lt!32940 lt!32944))))

(assert (=> d!17363 (= (addApplyDifferent!51 lt!32940 lt!32945 (minValue!2115 newMap!16) lt!32944) lt!33358)))

(declare-fun b!74112 () Bool)

(assert (=> b!74112 (= e!48440 (not (= lt!32944 lt!32945)))))

(assert (= (and d!17363 res!39231) b!74112))

(assert (=> d!17363 m!71977))

(assert (=> d!17363 m!71979))

(assert (=> d!17363 m!71973))

(declare-fun m!73169 () Bool)

(assert (=> d!17363 m!73169))

(assert (=> d!17363 m!71977))

(declare-fun m!73171 () Bool)

(assert (=> d!17363 m!73171))

(assert (=> b!73490 d!17363))

(declare-fun d!17365 () Bool)

(assert (=> d!17365 (= (apply!75 (+!94 lt!32951 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!32950) (apply!75 lt!32951 lt!32950))))

(declare-fun lt!33359 () Unit!2078)

(assert (=> d!17365 (= lt!33359 (choose!419 lt!32951 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) lt!32950))))

(declare-fun e!48441 () Bool)

(assert (=> d!17365 e!48441))

(declare-fun res!39232 () Bool)

(assert (=> d!17365 (=> (not res!39232) (not e!48441))))

(assert (=> d!17365 (= res!39232 (contains!723 lt!32951 lt!32950))))

(assert (=> d!17365 (= (addApplyDifferent!51 lt!32951 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) lt!32950) lt!33359)))

(declare-fun b!74113 () Bool)

(assert (=> b!74113 (= e!48441 (not (= lt!32950 lt!32949)))))

(assert (= (and d!17365 res!39232) b!74113))

(assert (=> d!17365 m!71983))

(assert (=> d!17365 m!71985))

(assert (=> d!17365 m!71993))

(declare-fun m!73173 () Bool)

(assert (=> d!17365 m!73173))

(assert (=> d!17365 m!71983))

(declare-fun m!73175 () Bool)

(assert (=> d!17365 m!73175))

(assert (=> b!73490 d!17365))

(declare-fun d!17367 () Bool)

(assert (=> d!17367 (= (apply!75 (+!94 lt!32954 (tuple2!2123 lt!32955 (minValue!2115 newMap!16))) lt!32953) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32954 (tuple2!2123 lt!32955 (minValue!2115 newMap!16)))) lt!32953)))))

(declare-fun bs!3199 () Bool)

(assert (= bs!3199 d!17367))

(declare-fun m!73177 () Bool)

(assert (=> bs!3199 m!73177))

(assert (=> bs!3199 m!73177))

(declare-fun m!73179 () Bool)

(assert (=> bs!3199 m!73179))

(assert (=> b!73490 d!17367))

(declare-fun d!17369 () Bool)

(declare-fun e!48443 () Bool)

(assert (=> d!17369 e!48443))

(declare-fun res!39233 () Bool)

(assert (=> d!17369 (=> res!39233 e!48443)))

(declare-fun lt!33363 () Bool)

(assert (=> d!17369 (= res!39233 (not lt!33363))))

(declare-fun lt!33362 () Bool)

(assert (=> d!17369 (= lt!33363 lt!33362)))

(declare-fun lt!33361 () Unit!2078)

(declare-fun e!48442 () Unit!2078)

(assert (=> d!17369 (= lt!33361 e!48442)))

(declare-fun c!11112 () Bool)

(assert (=> d!17369 (= c!11112 lt!33362)))

(assert (=> d!17369 (= lt!33362 (containsKey!137 (toList!725 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) lt!32939))))

(assert (=> d!17369 (= (contains!723 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!32939) lt!33363)))

(declare-fun b!74114 () Bool)

(declare-fun lt!33360 () Unit!2078)

(assert (=> b!74114 (= e!48442 lt!33360)))

(assert (=> b!74114 (= lt!33360 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) lt!32939))))

(assert (=> b!74114 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) lt!32939))))

(declare-fun b!74115 () Bool)

(declare-fun Unit!2121 () Unit!2078)

(assert (=> b!74115 (= e!48442 Unit!2121)))

(declare-fun b!74116 () Bool)

(assert (=> b!74116 (= e!48443 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) lt!32939)))))

(assert (= (and d!17369 c!11112) b!74114))

(assert (= (and d!17369 (not c!11112)) b!74115))

(assert (= (and d!17369 (not res!39233)) b!74116))

(declare-fun m!73181 () Bool)

(assert (=> d!17369 m!73181))

(declare-fun m!73183 () Bool)

(assert (=> b!74114 m!73183))

(declare-fun m!73185 () Bool)

(assert (=> b!74114 m!73185))

(assert (=> b!74114 m!73185))

(declare-fun m!73187 () Bool)

(assert (=> b!74114 m!73187))

(assert (=> b!74116 m!73185))

(assert (=> b!74116 m!73185))

(assert (=> b!74116 m!73187))

(assert (=> b!73490 d!17369))

(declare-fun d!17371 () Bool)

(assert (=> d!17371 (= (apply!75 lt!32940 lt!32944) (get!1142 (getValueByKey!133 (toList!725 lt!32940) lt!32944)))))

(declare-fun bs!3200 () Bool)

(assert (= bs!3200 d!17371))

(declare-fun m!73189 () Bool)

(assert (=> bs!3200 m!73189))

(assert (=> bs!3200 m!73189))

(declare-fun m!73191 () Bool)

(assert (=> bs!3200 m!73191))

(assert (=> b!73490 d!17371))

(declare-fun d!17373 () Bool)

(assert (=> d!17373 (= (apply!75 (+!94 lt!32940 (tuple2!2123 lt!32945 (minValue!2115 newMap!16))) lt!32944) (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32940 (tuple2!2123 lt!32945 (minValue!2115 newMap!16)))) lt!32944)))))

(declare-fun bs!3201 () Bool)

(assert (= bs!3201 d!17373))

(declare-fun m!73193 () Bool)

(assert (=> bs!3201 m!73193))

(assert (=> bs!3201 m!73193))

(declare-fun m!73195 () Bool)

(assert (=> bs!3201 m!73195))

(assert (=> b!73490 d!17373))

(declare-fun d!17375 () Bool)

(assert (=> d!17375 (contains!723 (+!94 lt!32937 (tuple2!2123 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!32939)))

(declare-fun lt!33364 () Unit!2078)

(assert (=> d!17375 (= lt!33364 (choose!418 lt!32937 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) lt!32939))))

(assert (=> d!17375 (contains!723 lt!32937 lt!32939)))

(assert (=> d!17375 (= (addStillContains!51 lt!32937 lt!32956 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)) lt!32939) lt!33364)))

(declare-fun bs!3202 () Bool)

(assert (= bs!3202 d!17375))

(assert (=> bs!3202 m!71965))

(assert (=> bs!3202 m!71965))

(assert (=> bs!3202 m!71989))

(declare-fun m!73197 () Bool)

(assert (=> bs!3202 m!73197))

(declare-fun m!73199 () Bool)

(assert (=> bs!3202 m!73199))

(assert (=> b!73490 d!17375))

(declare-fun d!17377 () Bool)

(declare-fun e!48444 () Bool)

(assert (=> d!17377 e!48444))

(declare-fun res!39234 () Bool)

(assert (=> d!17377 (=> (not res!39234) (not e!48444))))

(declare-fun lt!33367 () ListLongMap!1419)

(assert (=> d!17377 (= res!39234 (contains!723 lt!33367 (_1!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(declare-fun lt!33366 () List!1478)

(assert (=> d!17377 (= lt!33367 (ListLongMap!1420 lt!33366))))

(declare-fun lt!33368 () Unit!2078)

(declare-fun lt!33365 () Unit!2078)

(assert (=> d!17377 (= lt!33368 lt!33365)))

(assert (=> d!17377 (= (getValueByKey!133 lt!33366 (_1!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17377 (= lt!33365 (lemmaContainsTupThenGetReturnValue!50 lt!33366 (_1!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17377 (= lt!33366 (insertStrictlySorted!53 (toList!725 lt!32951) (_1!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17377 (= (+!94 lt!32951 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))) lt!33367)))

(declare-fun b!74117 () Bool)

(declare-fun res!39235 () Bool)

(assert (=> b!74117 (=> (not res!39235) (not e!48444))))

(assert (=> b!74117 (= res!39235 (= (getValueByKey!133 (toList!725 lt!33367) (_1!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))))))))

(declare-fun b!74118 () Bool)

(assert (=> b!74118 (= e!48444 (contains!724 (toList!725 lt!33367) (tuple2!2123 lt!32949 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16)))))))

(assert (= (and d!17377 res!39234) b!74117))

(assert (= (and b!74117 res!39235) b!74118))

(declare-fun m!73201 () Bool)

(assert (=> d!17377 m!73201))

(declare-fun m!73203 () Bool)

(assert (=> d!17377 m!73203))

(declare-fun m!73205 () Bool)

(assert (=> d!17377 m!73205))

(declare-fun m!73207 () Bool)

(assert (=> d!17377 m!73207))

(declare-fun m!73209 () Bool)

(assert (=> b!74117 m!73209))

(declare-fun m!73211 () Bool)

(assert (=> b!74118 m!73211))

(assert (=> b!73490 d!17377))

(declare-fun d!17379 () Bool)

(assert (=> d!17379 (= (apply!75 lt!32954 lt!32953) (get!1142 (getValueByKey!133 (toList!725 lt!32954) lt!32953)))))

(declare-fun bs!3203 () Bool)

(assert (= bs!3203 d!17379))

(declare-fun m!73213 () Bool)

(assert (=> bs!3203 m!73213))

(assert (=> bs!3203 m!73213))

(declare-fun m!73215 () Bool)

(assert (=> bs!3203 m!73215))

(assert (=> b!73490 d!17379))

(declare-fun b!74121 () Bool)

(declare-fun e!48446 () Option!139)

(assert (=> b!74121 (= e!48446 (getValueByKey!133 (t!5035 (toList!725 lt!32812)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun d!17381 () Bool)

(declare-fun c!11113 () Bool)

(assert (=> d!17381 (= c!11113 (and ((_ is Cons!1474) (toList!725 lt!32812)) (= (_1!1072 (h!2061 (toList!725 lt!32812))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48445 () Option!139)

(assert (=> d!17381 (= (getValueByKey!133 (toList!725 lt!32812) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) e!48445)))

(declare-fun b!74120 () Bool)

(assert (=> b!74120 (= e!48445 e!48446)))

(declare-fun c!11114 () Bool)

(assert (=> b!74120 (= c!11114 (and ((_ is Cons!1474) (toList!725 lt!32812)) (not (= (_1!1072 (h!2061 (toList!725 lt!32812))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!74119 () Bool)

(assert (=> b!74119 (= e!48445 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32812)))))))

(declare-fun b!74122 () Bool)

(assert (=> b!74122 (= e!48446 None!137)))

(assert (= (and d!17381 c!11113) b!74119))

(assert (= (and d!17381 (not c!11113)) b!74120))

(assert (= (and b!74120 c!11114) b!74121))

(assert (= (and b!74120 (not c!11114)) b!74122))

(declare-fun m!73217 () Bool)

(assert (=> b!74121 m!73217))

(assert (=> b!73282 d!17381))

(declare-fun d!17383 () Bool)

(assert (=> d!17383 (isDefined!86 (getValueByKey!133 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun lt!33369 () Unit!2078)

(assert (=> d!17383 (= lt!33369 (choose!422 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun e!48447 () Bool)

(assert (=> d!17383 e!48447))

(declare-fun res!39236 () Bool)

(assert (=> d!17383 (=> (not res!39236) (not e!48447))))

(assert (=> d!17383 (= res!39236 (isStrictlySorted!292 (toList!725 call!6430)))))

(assert (=> d!17383 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33369)))

(declare-fun b!74123 () Bool)

(assert (=> b!74123 (= e!48447 (containsKey!137 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17383 res!39236) b!74123))

(assert (=> d!17383 m!71227))

(assert (=> d!17383 m!71941))

(assert (=> d!17383 m!71941))

(assert (=> d!17383 m!71943))

(assert (=> d!17383 m!71227))

(declare-fun m!73219 () Bool)

(assert (=> d!17383 m!73219))

(declare-fun m!73221 () Bool)

(assert (=> d!17383 m!73221))

(assert (=> b!74123 m!71227))

(assert (=> b!74123 m!71937))

(assert (=> b!73477 d!17383))

(declare-fun d!17385 () Bool)

(assert (=> d!17385 (= (isDefined!86 (getValueByKey!133 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) (not (isEmpty!317 (getValueByKey!133 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun bs!3204 () Bool)

(assert (= bs!3204 d!17385))

(assert (=> bs!3204 m!71941))

(declare-fun m!73223 () Bool)

(assert (=> bs!3204 m!73223))

(assert (=> b!73477 d!17385))

(declare-fun e!48449 () Option!139)

(declare-fun b!74126 () Bool)

(assert (=> b!74126 (= e!48449 (getValueByKey!133 (t!5035 (toList!725 call!6430)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun c!11115 () Bool)

(declare-fun d!17387 () Bool)

(assert (=> d!17387 (= c!11115 (and ((_ is Cons!1474) (toList!725 call!6430)) (= (_1!1072 (h!2061 (toList!725 call!6430))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun e!48448 () Option!139)

(assert (=> d!17387 (= (getValueByKey!133 (toList!725 call!6430) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48448)))

(declare-fun b!74125 () Bool)

(assert (=> b!74125 (= e!48448 e!48449)))

(declare-fun c!11116 () Bool)

(assert (=> b!74125 (= c!11116 (and ((_ is Cons!1474) (toList!725 call!6430)) (not (= (_1!1072 (h!2061 (toList!725 call!6430))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun b!74124 () Bool)

(assert (=> b!74124 (= e!48448 (Some!138 (_2!1072 (h!2061 (toList!725 call!6430)))))))

(declare-fun b!74127 () Bool)

(assert (=> b!74127 (= e!48449 None!137)))

(assert (= (and d!17387 c!11115) b!74124))

(assert (= (and d!17387 (not c!11115)) b!74125))

(assert (= (and b!74125 c!11116) b!74126))

(assert (= (and b!74125 (not c!11116)) b!74127))

(assert (=> b!74126 m!71227))

(declare-fun m!73225 () Bool)

(assert (=> b!74126 m!73225))

(assert (=> b!73477 d!17387))

(declare-fun d!17389 () Bool)

(declare-fun res!39237 () Bool)

(declare-fun e!48450 () Bool)

(assert (=> d!17389 (=> res!39237 e!48450)))

(assert (=> d!17389 (= res!39237 (and ((_ is Cons!1474) (toList!725 lt!32681)) (= (_1!1072 (h!2061 (toList!725 lt!32681))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17389 (= (containsKey!137 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48450)))

(declare-fun b!74128 () Bool)

(declare-fun e!48451 () Bool)

(assert (=> b!74128 (= e!48450 e!48451)))

(declare-fun res!39238 () Bool)

(assert (=> b!74128 (=> (not res!39238) (not e!48451))))

(assert (=> b!74128 (= res!39238 (and (or (not ((_ is Cons!1474) (toList!725 lt!32681))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32681))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1474) (toList!725 lt!32681)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32681))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74129 () Bool)

(assert (=> b!74129 (= e!48451 (containsKey!137 (t!5035 (toList!725 lt!32681)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17389 (not res!39237)) b!74128))

(assert (= (and b!74128 res!39238) b!74129))

(assert (=> b!74129 m!71327))

(declare-fun m!73227 () Bool)

(assert (=> b!74129 m!73227))

(assert (=> d!16869 d!17389))

(declare-fun d!17391 () Bool)

(declare-fun e!48453 () Bool)

(assert (=> d!17391 e!48453))

(declare-fun res!39239 () Bool)

(assert (=> d!17391 (=> res!39239 e!48453)))

(declare-fun lt!33373 () Bool)

(assert (=> d!17391 (= res!39239 (not lt!33373))))

(declare-fun lt!33372 () Bool)

(assert (=> d!17391 (= lt!33373 lt!33372)))

(declare-fun lt!33371 () Unit!2078)

(declare-fun e!48452 () Unit!2078)

(assert (=> d!17391 (= lt!33371 e!48452)))

(declare-fun c!11117 () Bool)

(assert (=> d!17391 (= c!11117 lt!33372)))

(assert (=> d!17391 (= lt!33372 (containsKey!137 (toList!725 lt!32914) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17391 (= (contains!723 lt!32914 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33373)))

(declare-fun b!74130 () Bool)

(declare-fun lt!33370 () Unit!2078)

(assert (=> b!74130 (= e!48452 lt!33370)))

(assert (=> b!74130 (= lt!33370 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32914) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74130 (isDefined!86 (getValueByKey!133 (toList!725 lt!32914) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74131 () Bool)

(declare-fun Unit!2122 () Unit!2078)

(assert (=> b!74131 (= e!48452 Unit!2122)))

(declare-fun b!74132 () Bool)

(assert (=> b!74132 (= e!48453 (isDefined!86 (getValueByKey!133 (toList!725 lt!32914) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17391 c!11117) b!74130))

(assert (= (and d!17391 (not c!11117)) b!74131))

(assert (= (and d!17391 (not res!39239)) b!74132))

(declare-fun m!73229 () Bool)

(assert (=> d!17391 m!73229))

(declare-fun m!73231 () Bool)

(assert (=> b!74130 m!73231))

(assert (=> b!74130 m!73097))

(assert (=> b!74130 m!73097))

(declare-fun m!73233 () Bool)

(assert (=> b!74130 m!73233))

(assert (=> b!74132 m!73097))

(assert (=> b!74132 m!73097))

(assert (=> b!74132 m!73233))

(assert (=> bm!6473 d!17391))

(declare-fun d!17393 () Bool)

(declare-fun e!48455 () Bool)

(assert (=> d!17393 e!48455))

(declare-fun res!39240 () Bool)

(assert (=> d!17393 (=> res!39240 e!48455)))

(declare-fun lt!33377 () Bool)

(assert (=> d!17393 (= res!39240 (not lt!33377))))

(declare-fun lt!33376 () Bool)

(assert (=> d!17393 (= lt!33377 lt!33376)))

(declare-fun lt!33375 () Unit!2078)

(declare-fun e!48454 () Unit!2078)

(assert (=> d!17393 (= lt!33375 e!48454)))

(declare-fun c!11118 () Bool)

(assert (=> d!17393 (= c!11118 lt!33376)))

(assert (=> d!17393 (= lt!33376 (containsKey!137 (toList!725 lt!32828) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17393 (= (contains!723 lt!32828 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33377)))

(declare-fun b!74133 () Bool)

(declare-fun lt!33374 () Unit!2078)

(assert (=> b!74133 (= e!48454 lt!33374)))

(assert (=> b!74133 (= lt!33374 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32828) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> b!74133 (isDefined!86 (getValueByKey!133 (toList!725 lt!32828) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74134 () Bool)

(declare-fun Unit!2123 () Unit!2078)

(assert (=> b!74134 (= e!48454 Unit!2123)))

(declare-fun b!74135 () Bool)

(assert (=> b!74135 (= e!48455 (isDefined!86 (getValueByKey!133 (toList!725 lt!32828) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (= (and d!17393 c!11118) b!74133))

(assert (= (and d!17393 (not c!11118)) b!74134))

(assert (= (and d!17393 (not res!39240)) b!74135))

(declare-fun m!73235 () Bool)

(assert (=> d!17393 m!73235))

(declare-fun m!73237 () Bool)

(assert (=> b!74133 m!73237))

(assert (=> b!74133 m!71657))

(assert (=> b!74133 m!71657))

(declare-fun m!73239 () Bool)

(assert (=> b!74133 m!73239))

(assert (=> b!74135 m!71657))

(assert (=> b!74135 m!71657))

(assert (=> b!74135 m!73239))

(assert (=> d!16881 d!17393))

(declare-fun e!48457 () Option!139)

(declare-fun b!74138 () Bool)

(assert (=> b!74138 (= e!48457 (getValueByKey!133 (t!5035 lt!32827) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun c!11119 () Bool)

(declare-fun d!17395 () Bool)

(assert (=> d!17395 (= c!11119 (and ((_ is Cons!1474) lt!32827) (= (_1!1072 (h!2061 lt!32827)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48456 () Option!139)

(assert (=> d!17395 (= (getValueByKey!133 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) e!48456)))

(declare-fun b!74137 () Bool)

(assert (=> b!74137 (= e!48456 e!48457)))

(declare-fun c!11120 () Bool)

(assert (=> b!74137 (= c!11120 (and ((_ is Cons!1474) lt!32827) (not (= (_1!1072 (h!2061 lt!32827)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!74136 () Bool)

(assert (=> b!74136 (= e!48456 (Some!138 (_2!1072 (h!2061 lt!32827))))))

(declare-fun b!74139 () Bool)

(assert (=> b!74139 (= e!48457 None!137)))

(assert (= (and d!17395 c!11119) b!74136))

(assert (= (and d!17395 (not c!11119)) b!74137))

(assert (= (and b!74137 c!11120) b!74138))

(assert (= (and b!74137 (not c!11120)) b!74139))

(declare-fun m!73241 () Bool)

(assert (=> b!74138 m!73241))

(assert (=> d!16881 d!17395))

(declare-fun d!17397 () Bool)

(assert (=> d!17397 (= (getValueByKey!133 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!33378 () Unit!2078)

(assert (=> d!17397 (= lt!33378 (choose!412 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun e!48458 () Bool)

(assert (=> d!17397 e!48458))

(declare-fun res!39241 () Bool)

(assert (=> d!17397 (=> (not res!39241) (not e!48458))))

(assert (=> d!17397 (= res!39241 (isStrictlySorted!292 lt!32827))))

(assert (=> d!17397 (= (lemmaContainsTupThenGetReturnValue!50 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33378)))

(declare-fun b!74140 () Bool)

(declare-fun res!39242 () Bool)

(assert (=> b!74140 (=> (not res!39242) (not e!48458))))

(assert (=> b!74140 (= res!39242 (containsKey!137 lt!32827 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74141 () Bool)

(assert (=> b!74141 (= e!48458 (contains!724 lt!32827 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (= (and d!17397 res!39241) b!74140))

(assert (= (and b!74140 res!39242) b!74141))

(assert (=> d!17397 m!71651))

(declare-fun m!73243 () Bool)

(assert (=> d!17397 m!73243))

(declare-fun m!73245 () Bool)

(assert (=> d!17397 m!73245))

(declare-fun m!73247 () Bool)

(assert (=> b!74140 m!73247))

(declare-fun m!73249 () Bool)

(assert (=> b!74141 m!73249))

(assert (=> d!16881 d!17397))

(declare-fun b!74142 () Bool)

(declare-fun e!48461 () List!1478)

(declare-fun call!6547 () List!1478)

(assert (=> b!74142 (= e!48461 call!6547)))

(declare-fun b!74143 () Bool)

(declare-fun e!48463 () List!1478)

(declare-fun call!6548 () List!1478)

(assert (=> b!74143 (= e!48463 call!6548)))

(declare-fun b!74144 () Bool)

(declare-fun e!48459 () List!1478)

(declare-fun call!6549 () List!1478)

(assert (=> b!74144 (= e!48459 call!6549)))

(declare-fun b!74145 () Bool)

(declare-fun c!11124 () Bool)

(declare-fun c!11122 () Bool)

(declare-fun e!48460 () List!1478)

(assert (=> b!74145 (= e!48460 (ite c!11124 (t!5035 (toList!725 call!6433)) (ite c!11122 (Cons!1474 (h!2061 (toList!725 call!6433)) (t!5035 (toList!725 call!6433))) Nil!1475)))))

(declare-fun b!74146 () Bool)

(assert (=> b!74146 (= e!48459 e!48461)))

(assert (=> b!74146 (= c!11124 (and ((_ is Cons!1474) (toList!725 call!6433)) (= (_1!1072 (h!2061 (toList!725 call!6433))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun bm!6544 () Bool)

(assert (=> bm!6544 (= call!6548 call!6547)))

(declare-fun c!11121 () Bool)

(declare-fun bm!6545 () Bool)

(assert (=> bm!6545 (= call!6549 ($colon$colon!66 e!48460 (ite c!11121 (h!2061 (toList!725 call!6433)) (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun c!11123 () Bool)

(assert (=> bm!6545 (= c!11123 c!11121)))

(declare-fun b!74147 () Bool)

(declare-fun res!39244 () Bool)

(declare-fun e!48462 () Bool)

(assert (=> b!74147 (=> (not res!39244) (not e!48462))))

(declare-fun lt!33379 () List!1478)

(assert (=> b!74147 (= res!39244 (containsKey!137 lt!33379 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun bm!6546 () Bool)

(assert (=> bm!6546 (= call!6547 call!6549)))

(declare-fun b!74148 () Bool)

(assert (=> b!74148 (= e!48462 (contains!724 lt!33379 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!74149 () Bool)

(assert (=> b!74149 (= e!48463 call!6548)))

(declare-fun b!74150 () Bool)

(assert (=> b!74150 (= e!48460 (insertStrictlySorted!53 (t!5035 (toList!725 call!6433)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74151 () Bool)

(assert (=> b!74151 (= c!11122 (and ((_ is Cons!1474) (toList!725 call!6433)) (bvsgt (_1!1072 (h!2061 (toList!725 call!6433))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> b!74151 (= e!48461 e!48463)))

(declare-fun d!17399 () Bool)

(assert (=> d!17399 e!48462))

(declare-fun res!39243 () Bool)

(assert (=> d!17399 (=> (not res!39243) (not e!48462))))

(assert (=> d!17399 (= res!39243 (isStrictlySorted!292 lt!33379))))

(assert (=> d!17399 (= lt!33379 e!48459)))

(assert (=> d!17399 (= c!11121 (and ((_ is Cons!1474) (toList!725 call!6433)) (bvslt (_1!1072 (h!2061 (toList!725 call!6433))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!17399 (isStrictlySorted!292 (toList!725 call!6433))))

(assert (=> d!17399 (= (insertStrictlySorted!53 (toList!725 call!6433) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33379)))

(assert (= (and d!17399 c!11121) b!74144))

(assert (= (and d!17399 (not c!11121)) b!74146))

(assert (= (and b!74146 c!11124) b!74142))

(assert (= (and b!74146 (not c!11124)) b!74151))

(assert (= (and b!74151 c!11122) b!74149))

(assert (= (and b!74151 (not c!11122)) b!74143))

(assert (= (or b!74149 b!74143) bm!6544))

(assert (= (or b!74142 bm!6544) bm!6546))

(assert (= (or b!74144 bm!6546) bm!6545))

(assert (= (and bm!6545 c!11123) b!74150))

(assert (= (and bm!6545 (not c!11123)) b!74145))

(assert (= (and d!17399 res!39243) b!74147))

(assert (= (and b!74147 res!39244) b!74148))

(declare-fun m!73251 () Bool)

(assert (=> bm!6545 m!73251))

(declare-fun m!73253 () Bool)

(assert (=> b!74150 m!73253))

(declare-fun m!73255 () Bool)

(assert (=> b!74148 m!73255))

(declare-fun m!73257 () Bool)

(assert (=> d!17399 m!73257))

(declare-fun m!73259 () Bool)

(assert (=> d!17399 m!73259))

(declare-fun m!73261 () Bool)

(assert (=> b!74147 m!73261))

(assert (=> d!16881 d!17399))

(assert (=> b!73561 d!17075))

(assert (=> b!73561 d!17077))

(declare-fun d!17401 () Bool)

(assert (=> d!17401 (= (get!1142 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2534 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16977 d!17401))

(declare-fun b!74154 () Bool)

(declare-fun e!48465 () Option!139)

(assert (=> b!74154 (= e!48465 (getValueByKey!133 (t!5035 (toList!725 lt!32681)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!17403 () Bool)

(declare-fun c!11125 () Bool)

(assert (=> d!17403 (= c!11125 (and ((_ is Cons!1474) (toList!725 lt!32681)) (= (_1!1072 (h!2061 (toList!725 lt!32681))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!48464 () Option!139)

(assert (=> d!17403 (= (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48464)))

(declare-fun b!74153 () Bool)

(assert (=> b!74153 (= e!48464 e!48465)))

(declare-fun c!11126 () Bool)

(assert (=> b!74153 (= c!11126 (and ((_ is Cons!1474) (toList!725 lt!32681)) (not (= (_1!1072 (h!2061 (toList!725 lt!32681))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!74152 () Bool)

(assert (=> b!74152 (= e!48464 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32681)))))))

(declare-fun b!74155 () Bool)

(assert (=> b!74155 (= e!48465 None!137)))

(assert (= (and d!17403 c!11125) b!74152))

(assert (= (and d!17403 (not c!11125)) b!74153))

(assert (= (and b!74153 c!11126) b!74154))

(assert (= (and b!74153 (not c!11126)) b!74155))

(assert (=> b!74154 m!71327))

(declare-fun m!73263 () Bool)

(assert (=> b!74154 m!73263))

(assert (=> d!16977 d!17403))

(declare-fun d!17405 () Bool)

(declare-fun c!11127 () Bool)

(assert (=> d!17405 (= c!11127 ((_ is Nil!1475) (toList!725 lt!32614)))))

(declare-fun e!48466 () (InoxSet tuple2!2122))

(assert (=> d!17405 (= (content!77 (toList!725 lt!32614)) e!48466)))

(declare-fun b!74156 () Bool)

(assert (=> b!74156 (= e!48466 ((as const (Array tuple2!2122 Bool)) false))))

(declare-fun b!74157 () Bool)

(assert (=> b!74157 (= e!48466 ((_ map or) (store ((as const (Array tuple2!2122 Bool)) false) (h!2061 (toList!725 lt!32614)) true) (content!77 (t!5035 (toList!725 lt!32614)))))))

(assert (= (and d!17405 c!11127) b!74156))

(assert (= (and d!17405 (not c!11127)) b!74157))

(declare-fun m!73265 () Bool)

(assert (=> b!74157 m!73265))

(assert (=> b!74157 m!72527))

(assert (=> d!16889 d!17405))

(declare-fun d!17407 () Bool)

(assert (=> d!17407 (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))

(declare-fun lt!33382 () Unit!2078)

(declare-fun choose!423 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2078)

(assert (=> d!17407 (= lt!33382 (choose!423 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17407 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17407 (= (lemmaArrayContainsKeyThenInListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33382)))

(declare-fun bs!3205 () Bool)

(assert (= bs!3205 d!17407))

(assert (=> bs!3205 m!71415))

(assert (=> bs!3205 m!71415))

(assert (=> bs!3205 m!71227))

(assert (=> bs!3205 m!72027))

(assert (=> bs!3205 m!71227))

(declare-fun m!73267 () Bool)

(assert (=> bs!3205 m!73267))

(assert (=> bs!3205 m!71705))

(assert (=> b!73549 d!17407))

(declare-fun d!17409 () Bool)

(declare-fun e!48468 () Bool)

(assert (=> d!17409 e!48468))

(declare-fun res!39245 () Bool)

(assert (=> d!17409 (=> res!39245 e!48468)))

(declare-fun lt!33386 () Bool)

(assert (=> d!17409 (= res!39245 (not lt!33386))))

(declare-fun lt!33385 () Bool)

(assert (=> d!17409 (= lt!33386 lt!33385)))

(declare-fun lt!33384 () Unit!2078)

(declare-fun e!48467 () Unit!2078)

(assert (=> d!17409 (= lt!33384 e!48467)))

(declare-fun c!11128 () Bool)

(assert (=> d!17409 (= c!11128 lt!33385)))

(assert (=> d!17409 (= lt!33385 (containsKey!137 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17409 (= (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33386)))

(declare-fun b!74158 () Bool)

(declare-fun lt!33383 () Unit!2078)

(assert (=> b!74158 (= e!48467 lt!33383)))

(assert (=> b!74158 (= lt!33383 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!74158 (isDefined!86 (getValueByKey!133 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!74159 () Bool)

(declare-fun Unit!2124 () Unit!2078)

(assert (=> b!74159 (= e!48467 Unit!2124)))

(declare-fun b!74160 () Bool)

(assert (=> b!74160 (= e!48468 (isDefined!86 (getValueByKey!133 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (= (and d!17409 c!11128) b!74158))

(assert (= (and d!17409 (not c!11128)) b!74159))

(assert (= (and d!17409 (not res!39245)) b!74160))

(assert (=> d!17409 m!71227))

(declare-fun m!73269 () Bool)

(assert (=> d!17409 m!73269))

(assert (=> b!74158 m!71227))

(declare-fun m!73271 () Bool)

(assert (=> b!74158 m!73271))

(assert (=> b!74158 m!71227))

(declare-fun m!73273 () Bool)

(assert (=> b!74158 m!73273))

(assert (=> b!74158 m!73273))

(declare-fun m!73275 () Bool)

(assert (=> b!74158 m!73275))

(assert (=> b!74160 m!71227))

(assert (=> b!74160 m!73273))

(assert (=> b!74160 m!73273))

(assert (=> b!74160 m!73275))

(assert (=> b!73549 d!17409))

(assert (=> b!73549 d!16903))

(declare-fun b!74163 () Bool)

(declare-fun e!48470 () Option!139)

(assert (=> b!74163 (= e!48470 (getValueByKey!133 (t!5035 (t!5035 (toList!725 lt!32610))) (_1!1072 lt!32542)))))

(declare-fun d!17411 () Bool)

(declare-fun c!11129 () Bool)

(assert (=> d!17411 (= c!11129 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32610))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32610)))) (_1!1072 lt!32542))))))

(declare-fun e!48469 () Option!139)

(assert (=> d!17411 (= (getValueByKey!133 (t!5035 (toList!725 lt!32610)) (_1!1072 lt!32542)) e!48469)))

(declare-fun b!74162 () Bool)

(assert (=> b!74162 (= e!48469 e!48470)))

(declare-fun c!11130 () Bool)

(assert (=> b!74162 (= c!11130 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32610))) (not (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32610)))) (_1!1072 lt!32542)))))))

(declare-fun b!74161 () Bool)

(assert (=> b!74161 (= e!48469 (Some!138 (_2!1072 (h!2061 (t!5035 (toList!725 lt!32610))))))))

(declare-fun b!74164 () Bool)

(assert (=> b!74164 (= e!48470 None!137)))

(assert (= (and d!17411 c!11129) b!74161))

(assert (= (and d!17411 (not c!11129)) b!74162))

(assert (= (and b!74162 c!11130) b!74163))

(assert (= (and b!74162 (not c!11130)) b!74164))

(declare-fun m!73277 () Bool)

(assert (=> b!74163 m!73277))

(assert (=> b!73720 d!17411))

(declare-fun b!74165 () Bool)

(declare-fun e!48472 () Bool)

(assert (=> b!74165 (= e!48472 (contains!725 (ite c!10877 (Cons!1475 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1476) Nil!1476) (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74166 () Bool)

(declare-fun e!48471 () Bool)

(declare-fun call!6550 () Bool)

(assert (=> b!74166 (= e!48471 call!6550)))

(declare-fun b!74167 () Bool)

(declare-fun e!48473 () Bool)

(declare-fun e!48474 () Bool)

(assert (=> b!74167 (= e!48473 e!48474)))

(declare-fun res!39248 () Bool)

(assert (=> b!74167 (=> (not res!39248) (not e!48474))))

(assert (=> b!74167 (= res!39248 (not e!48472))))

(declare-fun res!39247 () Bool)

(assert (=> b!74167 (=> (not res!39247) (not e!48472))))

(assert (=> b!74167 (= res!39247 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74168 () Bool)

(assert (=> b!74168 (= e!48474 e!48471)))

(declare-fun c!11131 () Bool)

(assert (=> b!74168 (= c!11131 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74169 () Bool)

(assert (=> b!74169 (= e!48471 call!6550)))

(declare-fun d!17413 () Bool)

(declare-fun res!39246 () Bool)

(assert (=> d!17413 (=> res!39246 e!48473)))

(assert (=> d!17413 (= res!39246 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17413 (= (arrayNoDuplicates!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10877 (Cons!1475 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1476) Nil!1476)) e!48473)))

(declare-fun bm!6547 () Bool)

(assert (=> bm!6547 (= call!6550 (arrayNoDuplicates!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11131 (Cons!1475 (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10877 (Cons!1475 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1476) Nil!1476)) (ite c!10877 (Cons!1475 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1476) Nil!1476))))))

(assert (= (and d!17413 (not res!39246)) b!74167))

(assert (= (and b!74167 res!39247) b!74165))

(assert (= (and b!74167 res!39248) b!74168))

(assert (= (and b!74168 c!11131) b!74166))

(assert (= (and b!74168 (not c!11131)) b!74169))

(assert (= (or b!74166 b!74169) bm!6547))

(assert (=> b!74165 m!72761))

(assert (=> b!74165 m!72761))

(declare-fun m!73279 () Bool)

(assert (=> b!74165 m!73279))

(assert (=> b!74167 m!72761))

(assert (=> b!74167 m!72761))

(assert (=> b!74167 m!72763))

(assert (=> b!74168 m!72761))

(assert (=> b!74168 m!72761))

(assert (=> b!74168 m!72763))

(assert (=> bm!6547 m!72761))

(declare-fun m!73281 () Bool)

(assert (=> bm!6547 m!73281))

(assert (=> bm!6448 d!17413))

(declare-fun d!17415 () Bool)

(declare-fun lt!33387 () Bool)

(assert (=> d!17415 (= lt!33387 (select (content!77 lt!32617) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun e!48475 () Bool)

(assert (=> d!17415 (= lt!33387 e!48475)))

(declare-fun res!39249 () Bool)

(assert (=> d!17415 (=> (not res!39249) (not e!48475))))

(assert (=> d!17415 (= res!39249 ((_ is Cons!1474) lt!32617))))

(assert (=> d!17415 (= (contains!724 lt!32617 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))) lt!33387)))

(declare-fun b!74170 () Bool)

(declare-fun e!48476 () Bool)

(assert (=> b!74170 (= e!48475 e!48476)))

(declare-fun res!39250 () Bool)

(assert (=> b!74170 (=> res!39250 e!48476)))

(assert (=> b!74170 (= res!39250 (= (h!2061 lt!32617) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!74171 () Bool)

(assert (=> b!74171 (= e!48476 (contains!724 (t!5035 lt!32617) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(assert (= (and d!17415 res!39249) b!74170))

(assert (= (and b!74170 (not res!39250)) b!74171))

(declare-fun m!73283 () Bool)

(assert (=> d!17415 m!73283))

(declare-fun m!73285 () Bool)

(assert (=> d!17415 m!73285))

(declare-fun m!73287 () Bool)

(assert (=> b!74171 m!73287))

(assert (=> b!73673 d!17415))

(assert (=> d!16993 d!16907))

(declare-fun b!74188 () Bool)

(declare-fun res!39261 () Bool)

(declare-fun lt!33390 () SeekEntryResult!236)

(assert (=> b!74188 (= res!39261 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!33390)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48488 () Bool)

(assert (=> b!74188 (=> (not res!39261) (not e!48488))))

(declare-fun b!74189 () Bool)

(declare-fun e!48487 () Bool)

(declare-fun call!6556 () Bool)

(assert (=> b!74189 (= e!48487 (not call!6556))))

(declare-fun b!74190 () Bool)

(declare-fun e!48486 () Bool)

(declare-fun e!48485 () Bool)

(assert (=> b!74190 (= e!48486 e!48485)))

(declare-fun c!11137 () Bool)

(assert (=> b!74190 (= c!11137 ((_ is MissingVacant!236) lt!33390))))

(declare-fun b!74191 () Bool)

(assert (=> b!74191 (= e!48485 ((_ is Undefined!236) lt!33390))))

(declare-fun call!6555 () Bool)

(declare-fun bm!6552 () Bool)

(declare-fun c!11136 () Bool)

(assert (=> bm!6552 (= call!6555 (inRange!0 (ite c!11136 (index!3075 lt!33390) (index!3078 lt!33390)) (mask!6180 newMap!16)))))

(declare-fun b!74192 () Bool)

(declare-fun res!39262 () Bool)

(assert (=> b!74192 (=> (not res!39262) (not e!48487))))

(assert (=> b!74192 (= res!39262 call!6555)))

(assert (=> b!74192 (= e!48485 e!48487)))

(declare-fun d!17417 () Bool)

(assert (=> d!17417 e!48486))

(assert (=> d!17417 (= c!11136 ((_ is MissingZero!236) lt!33390))))

(assert (=> d!17417 (= lt!33390 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!17417 true))

(declare-fun _$34!807 () Unit!2078)

(assert (=> d!17417 (= (choose!417 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) _$34!807)))

(declare-fun b!74193 () Bool)

(assert (=> b!74193 (= e!48486 e!48488)))

(declare-fun res!39259 () Bool)

(assert (=> b!74193 (= res!39259 call!6555)))

(assert (=> b!74193 (=> (not res!39259) (not e!48488))))

(declare-fun b!74194 () Bool)

(declare-fun res!39260 () Bool)

(assert (=> b!74194 (=> (not res!39260) (not e!48487))))

(assert (=> b!74194 (= res!39260 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!33390)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6553 () Bool)

(assert (=> bm!6553 (= call!6556 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!74195 () Bool)

(assert (=> b!74195 (= e!48488 (not call!6556))))

(assert (= (and d!17417 c!11136) b!74193))

(assert (= (and d!17417 (not c!11136)) b!74190))

(assert (= (and b!74193 res!39259) b!74188))

(assert (= (and b!74188 res!39261) b!74195))

(assert (= (and b!74190 c!11137) b!74192))

(assert (= (and b!74190 (not c!11137)) b!74191))

(assert (= (and b!74192 res!39262) b!74194))

(assert (= (and b!74194 res!39260) b!74189))

(assert (= (or b!74193 b!74192) bm!6552))

(assert (= (or b!74195 b!74189) bm!6553))

(declare-fun m!73289 () Bool)

(assert (=> b!74188 m!73289))

(assert (=> bm!6553 m!71227))

(assert (=> bm!6553 m!71505))

(declare-fun m!73291 () Bool)

(assert (=> bm!6552 m!73291))

(declare-fun m!73293 () Bool)

(assert (=> b!74194 m!73293))

(assert (=> d!17417 m!71227))

(assert (=> d!17417 m!71501))

(assert (=> d!16993 d!17417))

(assert (=> d!16993 d!17069))

(declare-fun d!17419 () Bool)

(declare-fun e!48490 () Bool)

(assert (=> d!17419 e!48490))

(declare-fun res!39263 () Bool)

(assert (=> d!17419 (=> res!39263 e!48490)))

(declare-fun lt!33394 () Bool)

(assert (=> d!17419 (= res!39263 (not lt!33394))))

(declare-fun lt!33393 () Bool)

(assert (=> d!17419 (= lt!33394 lt!33393)))

(declare-fun lt!33392 () Unit!2078)

(declare-fun e!48489 () Unit!2078)

(assert (=> d!17419 (= lt!33392 e!48489)))

(declare-fun c!11138 () Bool)

(assert (=> d!17419 (= c!11138 lt!33393)))

(assert (=> d!17419 (= lt!33393 (containsKey!137 (toList!725 lt!32685) lt!32684))))

(assert (=> d!17419 (= (contains!723 lt!32685 lt!32684) lt!33394)))

(declare-fun b!74196 () Bool)

(declare-fun lt!33391 () Unit!2078)

(assert (=> b!74196 (= e!48489 lt!33391)))

(assert (=> b!74196 (= lt!33391 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32685) lt!32684))))

(assert (=> b!74196 (isDefined!86 (getValueByKey!133 (toList!725 lt!32685) lt!32684))))

(declare-fun b!74197 () Bool)

(declare-fun Unit!2125 () Unit!2078)

(assert (=> b!74197 (= e!48489 Unit!2125)))

(declare-fun b!74198 () Bool)

(assert (=> b!74198 (= e!48490 (isDefined!86 (getValueByKey!133 (toList!725 lt!32685) lt!32684)))))

(assert (= (and d!17419 c!11138) b!74196))

(assert (= (and d!17419 (not c!11138)) b!74197))

(assert (= (and d!17419 (not res!39263)) b!74198))

(declare-fun m!73295 () Bool)

(assert (=> d!17419 m!73295))

(declare-fun m!73297 () Bool)

(assert (=> b!74196 m!73297))

(assert (=> b!74196 m!72217))

(assert (=> b!74196 m!72217))

(declare-fun m!73299 () Bool)

(assert (=> b!74196 m!73299))

(assert (=> b!74198 m!72217))

(assert (=> b!74198 m!72217))

(assert (=> b!74198 m!73299))

(assert (=> d!17011 d!17419))

(assert (=> d!17011 d!17019))

(declare-fun d!17421 () Bool)

(assert (=> d!17421 (= (apply!75 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32684) (apply!75 lt!32685 lt!32684))))

(assert (=> d!17421 true))

(declare-fun _$34!810 () Unit!2078)

(assert (=> d!17421 (= (choose!419 lt!32685 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32684) _$34!810)))

(declare-fun bs!3206 () Bool)

(assert (= bs!3206 d!17421))

(assert (=> bs!3206 m!71449))

(assert (=> bs!3206 m!71449))

(assert (=> bs!3206 m!71451))

(assert (=> bs!3206 m!71459))

(assert (=> d!17011 d!17421))

(assert (=> d!17011 d!17009))

(assert (=> d!17011 d!17017))

(assert (=> d!16899 d!16907))

(declare-fun d!17423 () Bool)

(declare-fun e!48493 () Bool)

(assert (=> d!17423 e!48493))

(declare-fun res!39268 () Bool)

(assert (=> d!17423 (=> (not res!39268) (not e!48493))))

(declare-fun lt!33397 () SeekEntryResult!236)

(assert (=> d!17423 (= res!39268 ((_ is Found!236) lt!33397))))

(assert (=> d!17423 (= lt!33397 (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!17423 true))

(declare-fun _$33!60 () Unit!2078)

(assert (=> d!17423 (= (choose!413 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) _$33!60)))

(declare-fun b!74204 () Bool)

(declare-fun res!39269 () Bool)

(assert (=> b!74204 (=> (not res!39269) (not e!48493))))

(assert (=> b!74204 (= res!39269 (inRange!0 (index!3076 lt!33397) (mask!6180 newMap!16)))))

(declare-fun b!74205 () Bool)

(assert (=> b!74205 (= e!48493 (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!33397)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17423 res!39268) b!74204))

(assert (= (and b!74204 res!39269) b!74205))

(assert (=> d!17423 m!71227))

(assert (=> d!17423 m!71501))

(declare-fun m!73301 () Bool)

(assert (=> b!74204 m!73301))

(declare-fun m!73303 () Bool)

(assert (=> b!74205 m!73303))

(assert (=> d!16899 d!17423))

(assert (=> d!16899 d!17069))

(declare-fun d!17425 () Bool)

(declare-fun lt!33398 () Bool)

(assert (=> d!17425 (= lt!33398 (select (content!77 (toList!725 lt!32828)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun e!48494 () Bool)

(assert (=> d!17425 (= lt!33398 e!48494)))

(declare-fun res!39270 () Bool)

(assert (=> d!17425 (=> (not res!39270) (not e!48494))))

(assert (=> d!17425 (= res!39270 ((_ is Cons!1474) (toList!725 lt!32828)))))

(assert (=> d!17425 (= (contains!724 (toList!725 lt!32828) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!33398)))

(declare-fun b!74206 () Bool)

(declare-fun e!48495 () Bool)

(assert (=> b!74206 (= e!48494 e!48495)))

(declare-fun res!39271 () Bool)

(assert (=> b!74206 (=> res!39271 e!48495)))

(assert (=> b!74206 (= res!39271 (= (h!2061 (toList!725 lt!32828)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun b!74207 () Bool)

(assert (=> b!74207 (= e!48495 (contains!724 (t!5035 (toList!725 lt!32828)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!17425 res!39270) b!74206))

(assert (= (and b!74206 (not res!39271)) b!74207))

(declare-fun m!73305 () Bool)

(assert (=> d!17425 m!73305))

(declare-fun m!73307 () Bool)

(assert (=> d!17425 m!73307))

(declare-fun m!73309 () Bool)

(assert (=> b!74207 m!73309))

(assert (=> b!73291 d!17425))

(declare-fun b!74208 () Bool)

(declare-fun e!48496 () (_ BitVec 32))

(declare-fun call!6557 () (_ BitVec 32))

(assert (=> b!74208 (= e!48496 call!6557)))

(declare-fun b!74209 () Bool)

(declare-fun e!48497 () (_ BitVec 32))

(assert (=> b!74209 (= e!48497 #b00000000000000000000000000000000)))

(declare-fun bm!6554 () Bool)

(assert (=> bm!6554 (= call!6557 (arrayCountValidKeys!0 (_keys!3865 (_2!1073 lt!32791)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(declare-fun d!17427 () Bool)

(declare-fun lt!33399 () (_ BitVec 32))

(assert (=> d!17427 (and (bvsge lt!33399 #b00000000000000000000000000000000) (bvsle lt!33399 (bvsub (size!2097 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(assert (=> d!17427 (= lt!33399 e!48497)))

(declare-fun c!11139 () Bool)

(assert (=> d!17427 (= c!11139 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(assert (=> d!17427 (and (bvsle #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2097 (_keys!3865 (_2!1073 lt!32791))) (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(assert (=> d!17427 (= (arrayCountValidKeys!0 (_keys!3865 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))) lt!33399)))

(declare-fun b!74210 () Bool)

(assert (=> b!74210 (= e!48497 e!48496)))

(declare-fun c!11140 () Bool)

(assert (=> b!74210 (= c!11140 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(declare-fun b!74211 () Bool)

(assert (=> b!74211 (= e!48496 (bvadd #b00000000000000000000000000000001 call!6557))))

(assert (= (and d!17427 c!11139) b!74209))

(assert (= (and d!17427 (not c!11139)) b!74210))

(assert (= (and b!74210 c!11140) b!74211))

(assert (= (and b!74210 (not c!11140)) b!74208))

(assert (= (or b!74211 b!74208) bm!6554))

(declare-fun m!73311 () Bool)

(assert (=> bm!6554 m!73311))

(declare-fun m!73313 () Bool)

(assert (=> b!74210 m!73313))

(assert (=> b!74210 m!73313))

(declare-fun m!73315 () Bool)

(assert (=> b!74210 m!73315))

(assert (=> b!73453 d!17427))

(declare-fun d!17429 () Bool)

(assert (=> d!17429 (= (apply!75 lt!32860 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32860) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3207 () Bool)

(assert (= bs!3207 d!17429))

(assert (=> bs!3207 m!72749))

(assert (=> bs!3207 m!72749))

(declare-fun m!73317 () Bool)

(assert (=> bs!3207 m!73317))

(assert (=> b!73378 d!17429))

(declare-fun b!74214 () Bool)

(declare-fun e!48499 () Option!139)

(assert (=> b!74214 (= e!48499 (getValueByKey!133 (t!5035 (toList!725 lt!32883)) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17431 () Bool)

(declare-fun c!11141 () Bool)

(assert (=> d!17431 (= c!11141 (and ((_ is Cons!1474) (toList!725 lt!32883)) (= (_1!1072 (h!2061 (toList!725 lt!32883))) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48498 () Option!139)

(assert (=> d!17431 (= (getValueByKey!133 (toList!725 lt!32883) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48498)))

(declare-fun b!74213 () Bool)

(assert (=> b!74213 (= e!48498 e!48499)))

(declare-fun c!11142 () Bool)

(assert (=> b!74213 (= c!11142 (and ((_ is Cons!1474) (toList!725 lt!32883)) (not (= (_1!1072 (h!2061 (toList!725 lt!32883))) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74212 () Bool)

(assert (=> b!74212 (= e!48498 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32883)))))))

(declare-fun b!74215 () Bool)

(assert (=> b!74215 (= e!48499 None!137)))

(assert (= (and d!17431 c!11141) b!74212))

(assert (= (and d!17431 (not c!11141)) b!74213))

(assert (= (and b!74213 c!11142) b!74214))

(assert (= (and b!74213 (not c!11142)) b!74215))

(declare-fun m!73319 () Bool)

(assert (=> b!74214 m!73319))

(assert (=> b!73416 d!17431))

(declare-fun b!74216 () Bool)

(declare-fun e!48503 () Bool)

(declare-fun e!48505 () Bool)

(assert (=> b!74216 (= e!48503 e!48505)))

(declare-fun res!39274 () Bool)

(declare-fun call!6563 () Bool)

(assert (=> b!74216 (= res!39274 call!6563)))

(assert (=> b!74216 (=> (not res!39274) (not e!48505))))

(declare-fun b!74217 () Bool)

(declare-fun e!48506 () Bool)

(assert (=> b!74217 (= e!48506 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74218 () Bool)

(declare-fun c!11148 () Bool)

(assert (=> b!74218 (= c!11148 (and (not (= (bvand lt!32775 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32775 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48510 () ListLongMap!1419)

(declare-fun e!48512 () ListLongMap!1419)

(assert (=> b!74218 (= e!48510 e!48512)))

(declare-fun bm!6555 () Bool)

(declare-fun call!6558 () ListLongMap!1419)

(declare-fun call!6561 () ListLongMap!1419)

(assert (=> bm!6555 (= call!6558 call!6561)))

(declare-fun b!74219 () Bool)

(declare-fun res!39275 () Bool)

(declare-fun e!48500 () Bool)

(assert (=> b!74219 (=> (not res!39275) (not e!48500))))

(declare-fun e!48501 () Bool)

(assert (=> b!74219 (= res!39275 e!48501)))

(declare-fun res!39280 () Bool)

(assert (=> b!74219 (=> res!39280 e!48501)))

(assert (=> b!74219 (= res!39280 (not e!48506))))

(declare-fun res!39278 () Bool)

(assert (=> b!74219 (=> (not res!39278) (not e!48506))))

(assert (=> b!74219 (= res!39278 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6556 () Bool)

(declare-fun call!6559 () Bool)

(declare-fun lt!33410 () ListLongMap!1419)

(assert (=> bm!6556 (= call!6559 (contains!723 lt!33410 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74220 () Bool)

(declare-fun res!39272 () Bool)

(assert (=> b!74220 (=> (not res!39272) (not e!48500))))

(assert (=> b!74220 (= res!39272 e!48503)))

(declare-fun c!11146 () Bool)

(assert (=> b!74220 (= c!11146 (not (= (bvand lt!32775 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6557 () Bool)

(declare-fun call!6564 () ListLongMap!1419)

(declare-fun call!6562 () ListLongMap!1419)

(assert (=> bm!6557 (= call!6564 call!6562)))

(declare-fun b!74221 () Bool)

(declare-fun e!48502 () Unit!2078)

(declare-fun Unit!2126 () Unit!2078)

(assert (=> b!74221 (= e!48502 Unit!2126)))

(declare-fun b!74222 () Bool)

(declare-fun e!48507 () Bool)

(assert (=> b!74222 (= e!48500 e!48507)))

(declare-fun c!11144 () Bool)

(assert (=> b!74222 (= c!11144 (not (= (bvand lt!32775 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74223 () Bool)

(assert (=> b!74223 (= e!48512 call!6564)))

(declare-fun bm!6558 () Bool)

(declare-fun call!6560 () ListLongMap!1419)

(assert (=> bm!6558 (= call!6560 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74224 () Bool)

(assert (=> b!74224 (= e!48507 (not call!6559))))

(declare-fun b!74225 () Bool)

(declare-fun e!48504 () ListLongMap!1419)

(assert (=> b!74225 (= e!48504 (+!94 call!6562 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)))))

(declare-fun b!74226 () Bool)

(declare-fun lt!33406 () Unit!2078)

(assert (=> b!74226 (= e!48502 lt!33406)))

(declare-fun lt!33400 () ListLongMap!1419)

(assert (=> b!74226 (= lt!33400 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33419 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33419 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33402 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33402 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33415 () Unit!2078)

(assert (=> b!74226 (= lt!33415 (addStillContains!51 lt!33400 lt!33419 (zeroValue!2115 newMap!16) lt!33402))))

(assert (=> b!74226 (contains!723 (+!94 lt!33400 (tuple2!2123 lt!33419 (zeroValue!2115 newMap!16))) lt!33402)))

(declare-fun lt!33405 () Unit!2078)

(assert (=> b!74226 (= lt!33405 lt!33415)))

(declare-fun lt!33403 () ListLongMap!1419)

(assert (=> b!74226 (= lt!33403 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33408 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33408 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33407 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33407 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33401 () Unit!2078)

(assert (=> b!74226 (= lt!33401 (addApplyDifferent!51 lt!33403 lt!33408 lt!32533 lt!33407))))

(assert (=> b!74226 (= (apply!75 (+!94 lt!33403 (tuple2!2123 lt!33408 lt!32533)) lt!33407) (apply!75 lt!33403 lt!33407))))

(declare-fun lt!33411 () Unit!2078)

(assert (=> b!74226 (= lt!33411 lt!33401)))

(declare-fun lt!33414 () ListLongMap!1419)

(assert (=> b!74226 (= lt!33414 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33412 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33412 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33413 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33413 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33420 () Unit!2078)

(assert (=> b!74226 (= lt!33420 (addApplyDifferent!51 lt!33414 lt!33412 (zeroValue!2115 newMap!16) lt!33413))))

(assert (=> b!74226 (= (apply!75 (+!94 lt!33414 (tuple2!2123 lt!33412 (zeroValue!2115 newMap!16))) lt!33413) (apply!75 lt!33414 lt!33413))))

(declare-fun lt!33409 () Unit!2078)

(assert (=> b!74226 (= lt!33409 lt!33420)))

(declare-fun lt!33417 () ListLongMap!1419)

(assert (=> b!74226 (= lt!33417 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33418 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33418 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33416 () (_ BitVec 64))

(assert (=> b!74226 (= lt!33416 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74226 (= lt!33406 (addApplyDifferent!51 lt!33417 lt!33418 lt!32533 lt!33416))))

(assert (=> b!74226 (= (apply!75 (+!94 lt!33417 (tuple2!2123 lt!33418 lt!32533)) lt!33416) (apply!75 lt!33417 lt!33416))))

(declare-fun b!74227 () Bool)

(declare-fun e!48508 () Bool)

(assert (=> b!74227 (= e!48508 (= (apply!75 lt!33410 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32533))))

(declare-fun b!74228 () Bool)

(assert (=> b!74228 (= e!48505 (= (apply!75 lt!33410 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74229 () Bool)

(assert (=> b!74229 (= e!48512 call!6558)))

(declare-fun bm!6559 () Bool)

(declare-fun c!11143 () Bool)

(declare-fun c!11147 () Bool)

(assert (=> bm!6559 (= call!6562 (+!94 (ite c!11143 call!6560 (ite c!11147 call!6561 call!6558)) (ite (or c!11143 c!11147) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(declare-fun b!74230 () Bool)

(assert (=> b!74230 (= e!48504 e!48510)))

(assert (=> b!74230 (= c!11147 (and (not (= (bvand lt!32775 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32775 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74231 () Bool)

(declare-fun e!48511 () Bool)

(assert (=> b!74231 (= e!48511 (= (apply!75 lt!33410 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (_values!2196 newMap!16))))))

(assert (=> b!74231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74232 () Bool)

(assert (=> b!74232 (= e!48507 e!48508)))

(declare-fun res!39279 () Bool)

(assert (=> b!74232 (= res!39279 call!6559)))

(assert (=> b!74232 (=> (not res!39279) (not e!48508))))

(declare-fun d!17433 () Bool)

(assert (=> d!17433 e!48500))

(declare-fun res!39276 () Bool)

(assert (=> d!17433 (=> (not res!39276) (not e!48500))))

(assert (=> d!17433 (= res!39276 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!33421 () ListLongMap!1419)

(assert (=> d!17433 (= lt!33410 lt!33421)))

(declare-fun lt!33404 () Unit!2078)

(assert (=> d!17433 (= lt!33404 e!48502)))

(declare-fun c!11145 () Bool)

(declare-fun e!48509 () Bool)

(assert (=> d!17433 (= c!11145 e!48509)))

(declare-fun res!39273 () Bool)

(assert (=> d!17433 (=> (not res!39273) (not e!48509))))

(assert (=> d!17433 (= res!39273 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17433 (= lt!33421 e!48504)))

(assert (=> d!17433 (= c!11143 (and (not (= (bvand lt!32775 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32775 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17433 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17433 (= (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33410)))

(declare-fun b!74233 () Bool)

(assert (=> b!74233 (= e!48503 (not call!6563))))

(declare-fun b!74234 () Bool)

(assert (=> b!74234 (= e!48501 e!48511)))

(declare-fun res!39277 () Bool)

(assert (=> b!74234 (=> (not res!39277) (not e!48511))))

(assert (=> b!74234 (= res!39277 (contains!723 lt!33410 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6560 () Bool)

(assert (=> bm!6560 (= call!6563 (contains!723 lt!33410 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6561 () Bool)

(assert (=> bm!6561 (= call!6561 call!6560)))

(declare-fun b!74235 () Bool)

(assert (=> b!74235 (= e!48510 call!6564)))

(declare-fun b!74236 () Bool)

(assert (=> b!74236 (= e!48509 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17433 c!11143) b!74225))

(assert (= (and d!17433 (not c!11143)) b!74230))

(assert (= (and b!74230 c!11147) b!74235))

(assert (= (and b!74230 (not c!11147)) b!74218))

(assert (= (and b!74218 c!11148) b!74223))

(assert (= (and b!74218 (not c!11148)) b!74229))

(assert (= (or b!74223 b!74229) bm!6555))

(assert (= (or b!74235 bm!6555) bm!6561))

(assert (= (or b!74235 b!74223) bm!6557))

(assert (= (or b!74225 bm!6561) bm!6558))

(assert (= (or b!74225 bm!6557) bm!6559))

(assert (= (and d!17433 res!39273) b!74236))

(assert (= (and d!17433 c!11145) b!74226))

(assert (= (and d!17433 (not c!11145)) b!74221))

(assert (= (and d!17433 res!39276) b!74219))

(assert (= (and b!74219 res!39278) b!74217))

(assert (= (and b!74219 (not res!39280)) b!74234))

(assert (= (and b!74234 res!39277) b!74231))

(assert (= (and b!74219 res!39275) b!74220))

(assert (= (and b!74220 c!11146) b!74216))

(assert (= (and b!74220 (not c!11146)) b!74233))

(assert (= (and b!74216 res!39274) b!74228))

(assert (= (or b!74216 b!74233) bm!6560))

(assert (= (and b!74220 res!39272) b!74222))

(assert (= (and b!74222 c!11144) b!74232))

(assert (= (and b!74222 (not c!11144)) b!74224))

(assert (= (and b!74232 res!39279) b!74227))

(assert (= (or b!74232 b!74224) bm!6556))

(declare-fun b_lambda!3327 () Bool)

(assert (=> (not b_lambda!3327) (not b!74231)))

(assert (=> b!74231 t!5042))

(declare-fun b_and!4551 () Bool)

(assert (= b_and!4547 (and (=> t!5042 result!2693) b_and!4551)))

(assert (=> b!74231 t!5044))

(declare-fun b_and!4553 () Bool)

(assert (= b_and!4549 (and (=> t!5044 result!2695) b_and!4553)))

(assert (=> b!74231 m!71563))

(assert (=> b!74231 m!71715))

(assert (=> b!74231 m!71717))

(assert (=> b!74231 m!71719))

(assert (=> b!74231 m!71563))

(declare-fun m!73321 () Bool)

(assert (=> b!74231 m!73321))

(assert (=> b!74231 m!71717))

(assert (=> b!74231 m!71715))

(declare-fun m!73323 () Bool)

(assert (=> bm!6558 m!73323))

(assert (=> d!17433 m!71705))

(declare-fun m!73325 () Bool)

(assert (=> bm!6556 m!73325))

(declare-fun m!73327 () Bool)

(assert (=> bm!6560 m!73327))

(declare-fun m!73329 () Bool)

(assert (=> bm!6559 m!73329))

(declare-fun m!73331 () Bool)

(assert (=> b!74228 m!73331))

(assert (=> b!74217 m!71563))

(assert (=> b!74217 m!71563))

(assert (=> b!74217 m!71567))

(assert (=> b!74236 m!71563))

(assert (=> b!74236 m!71563))

(assert (=> b!74236 m!71567))

(declare-fun m!73333 () Bool)

(assert (=> b!74225 m!73333))

(declare-fun m!73335 () Bool)

(assert (=> b!74227 m!73335))

(declare-fun m!73337 () Bool)

(assert (=> b!74226 m!73337))

(declare-fun m!73339 () Bool)

(assert (=> b!74226 m!73339))

(assert (=> b!74226 m!73323))

(declare-fun m!73341 () Bool)

(assert (=> b!74226 m!73341))

(assert (=> b!74226 m!71563))

(declare-fun m!73343 () Bool)

(assert (=> b!74226 m!73343))

(declare-fun m!73345 () Bool)

(assert (=> b!74226 m!73345))

(declare-fun m!73347 () Bool)

(assert (=> b!74226 m!73347))

(declare-fun m!73349 () Bool)

(assert (=> b!74226 m!73349))

(declare-fun m!73351 () Bool)

(assert (=> b!74226 m!73351))

(declare-fun m!73353 () Bool)

(assert (=> b!74226 m!73353))

(declare-fun m!73355 () Bool)

(assert (=> b!74226 m!73355))

(declare-fun m!73357 () Bool)

(assert (=> b!74226 m!73357))

(assert (=> b!74226 m!73355))

(declare-fun m!73359 () Bool)

(assert (=> b!74226 m!73359))

(assert (=> b!74226 m!73337))

(declare-fun m!73361 () Bool)

(assert (=> b!74226 m!73361))

(assert (=> b!74226 m!73349))

(assert (=> b!74226 m!73339))

(declare-fun m!73363 () Bool)

(assert (=> b!74226 m!73363))

(declare-fun m!73365 () Bool)

(assert (=> b!74226 m!73365))

(assert (=> b!74234 m!71563))

(assert (=> b!74234 m!71563))

(declare-fun m!73367 () Bool)

(assert (=> b!74234 m!73367))

(assert (=> d!16955 d!17433))

(assert (=> d!16955 d!16903))

(declare-fun d!17435 () Bool)

(declare-fun e!48513 () Bool)

(assert (=> d!17435 e!48513))

(declare-fun res!39281 () Bool)

(assert (=> d!17435 (=> (not res!39281) (not e!48513))))

(declare-fun lt!33424 () ListLongMap!1419)

(assert (=> d!17435 (= res!39281 (contains!723 lt!33424 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(declare-fun lt!33423 () List!1478)

(assert (=> d!17435 (= lt!33424 (ListLongMap!1420 lt!33423))))

(declare-fun lt!33425 () Unit!2078)

(declare-fun lt!33422 () Unit!2078)

(assert (=> d!17435 (= lt!33425 lt!33422)))

(assert (=> d!17435 (= (getValueByKey!133 lt!33423 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(assert (=> d!17435 (= lt!33422 (lemmaContainsTupThenGetReturnValue!50 lt!33423 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(assert (=> d!17435 (= lt!33423 (insertStrictlySorted!53 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))))))

(assert (=> d!17435 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) lt!33424)))

(declare-fun b!74237 () Bool)

(declare-fun res!39282 () Bool)

(assert (=> b!74237 (=> (not res!39282) (not e!48513))))

(assert (=> b!74237 (= res!39282 (= (getValueByKey!133 (toList!725 lt!33424) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)))))))

(declare-fun b!74238 () Bool)

(assert (=> b!74238 (= e!48513 (contains!724 (toList!725 lt!33424) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)))))

(assert (= (and d!17435 res!39281) b!74237))

(assert (= (and b!74237 res!39282) b!74238))

(declare-fun m!73369 () Bool)

(assert (=> d!17435 m!73369))

(declare-fun m!73371 () Bool)

(assert (=> d!17435 m!73371))

(declare-fun m!73373 () Bool)

(assert (=> d!17435 m!73373))

(declare-fun m!73375 () Bool)

(assert (=> d!17435 m!73375))

(declare-fun m!73377 () Bool)

(assert (=> b!74237 m!73377))

(declare-fun m!73379 () Bool)

(assert (=> b!74238 m!73379))

(assert (=> d!16955 d!17435))

(declare-fun d!17437 () Bool)

(assert (=> d!17437 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32533)) (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32775 (zeroValue!2115 newMap!16) lt!32533 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17437 true))

(declare-fun _$8!64 () Unit!2078)

(assert (=> d!17437 (= (choose!415 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32775 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32533 (defaultEntry!2213 newMap!16)) _$8!64)))

(declare-fun bs!3208 () Bool)

(assert (= bs!3208 d!17437))

(assert (=> bs!3208 m!71415))

(assert (=> bs!3208 m!71415))

(assert (=> bs!3208 m!72011))

(assert (=> bs!3208 m!72009))

(assert (=> d!16955 d!17437))

(assert (=> d!16955 d!17069))

(declare-fun d!17439 () Bool)

(declare-fun lt!33426 () Bool)

(assert (=> d!17439 (= lt!33426 (select (content!77 lt!32931) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun e!48514 () Bool)

(assert (=> d!17439 (= lt!33426 e!48514)))

(declare-fun res!39283 () Bool)

(assert (=> d!17439 (=> (not res!39283) (not e!48514))))

(assert (=> d!17439 (= res!39283 ((_ is Cons!1474) lt!32931))))

(assert (=> d!17439 (= (contains!724 lt!32931 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))) lt!33426)))

(declare-fun b!74239 () Bool)

(declare-fun e!48515 () Bool)

(assert (=> b!74239 (= e!48514 e!48515)))

(declare-fun res!39284 () Bool)

(assert (=> b!74239 (=> res!39284 e!48515)))

(assert (=> b!74239 (= res!39284 (= (h!2061 lt!32931) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!74240 () Bool)

(assert (=> b!74240 (= e!48515 (contains!724 (t!5035 lt!32931) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(assert (= (and d!17439 res!39283) b!74239))

(assert (= (and b!74239 (not res!39284)) b!74240))

(declare-fun m!73381 () Bool)

(assert (=> d!17439 m!73381))

(declare-fun m!73383 () Bool)

(assert (=> d!17439 m!73383))

(declare-fun m!73385 () Bool)

(assert (=> b!74240 m!73385))

(assert (=> b!73471 d!17439))

(declare-fun d!17441 () Bool)

(assert (=> d!17441 (= (content!78 Nil!1476) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!16995 d!17441))

(declare-fun d!17443 () Bool)

(declare-fun e!48519 () Bool)

(assert (=> d!17443 e!48519))

(declare-fun res!39285 () Bool)

(assert (=> d!17443 (=> (not res!39285) (not e!48519))))

(declare-fun lt!33428 () ListLongMap!1419)

(assert (=> d!17443 (= res!39285 (not (contains!723 lt!33428 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48517 () ListLongMap!1419)

(assert (=> d!17443 (= lt!33428 e!48517)))

(declare-fun c!11151 () Bool)

(assert (=> d!17443 (= c!11151 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!17443 (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992))))))

(assert (=> d!17443 (= (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))) lt!33428)))

(declare-fun b!74241 () Bool)

(declare-fun e!48521 () ListLongMap!1419)

(assert (=> b!74241 (= e!48517 e!48521)))

(declare-fun c!11149 () Bool)

(assert (=> b!74241 (= c!11149 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!74242 () Bool)

(assert (=> b!74242 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> b!74242 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48522 () Bool)

(assert (=> b!74242 (= e!48522 (= (apply!75 lt!33428 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6562 () Bool)

(declare-fun call!6565 () ListLongMap!1419)

(assert (=> bm!6562 (= call!6565 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!74243 () Bool)

(declare-fun e!48516 () Bool)

(assert (=> b!74243 (= e!48516 e!48522)))

(assert (=> b!74243 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun res!39288 () Bool)

(assert (=> b!74243 (= res!39288 (contains!723 lt!33428 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!74243 (=> (not res!39288) (not e!48522))))

(declare-fun b!74244 () Bool)

(assert (=> b!74244 (= e!48519 e!48516)))

(declare-fun c!11152 () Bool)

(declare-fun e!48518 () Bool)

(assert (=> b!74244 (= c!11152 e!48518)))

(declare-fun res!39287 () Bool)

(assert (=> b!74244 (=> (not res!39287) (not e!48518))))

(assert (=> b!74244 (= res!39287 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74245 () Bool)

(declare-fun res!39286 () Bool)

(assert (=> b!74245 (=> (not res!39286) (not e!48519))))

(assert (=> b!74245 (= res!39286 (not (contains!723 lt!33428 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74246 () Bool)

(assert (=> b!74246 (= e!48518 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!74246 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!74247 () Bool)

(assert (=> b!74247 (= e!48517 (ListLongMap!1420 Nil!1475))))

(declare-fun b!74248 () Bool)

(declare-fun e!48520 () Bool)

(assert (=> b!74248 (= e!48520 (isEmpty!316 lt!33428))))

(declare-fun b!74249 () Bool)

(assert (=> b!74249 (= e!48516 e!48520)))

(declare-fun c!11150 () Bool)

(assert (=> b!74249 (= c!11150 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74250 () Bool)

(assert (=> b!74250 (= e!48521 call!6565)))

(declare-fun b!74251 () Bool)

(assert (=> b!74251 (= e!48520 (= lt!33428 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (_values!2196 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992))) (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) (zeroValue!2115 (v!2530 (underlying!260 thiss!992))) (minValue!2115 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74252 () Bool)

(declare-fun lt!33431 () Unit!2078)

(declare-fun lt!33432 () Unit!2078)

(assert (=> b!74252 (= lt!33431 lt!33432)))

(declare-fun lt!33427 () (_ BitVec 64))

(declare-fun lt!33430 () V!2947)

(declare-fun lt!33429 () ListLongMap!1419)

(declare-fun lt!33433 () (_ BitVec 64))

(assert (=> b!74252 (not (contains!723 (+!94 lt!33429 (tuple2!2123 lt!33433 lt!33430)) lt!33427))))

(assert (=> b!74252 (= lt!33432 (addStillNotContains!24 lt!33429 lt!33433 lt!33430 lt!33427))))

(assert (=> b!74252 (= lt!33427 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74252 (= lt!33430 (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74252 (= lt!33433 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!74252 (= lt!33429 call!6565)))

(assert (=> b!74252 (= e!48521 (+!94 call!6565 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17443 c!11151) b!74247))

(assert (= (and d!17443 (not c!11151)) b!74241))

(assert (= (and b!74241 c!11149) b!74252))

(assert (= (and b!74241 (not c!11149)) b!74250))

(assert (= (or b!74252 b!74250) bm!6562))

(assert (= (and d!17443 res!39285) b!74245))

(assert (= (and b!74245 res!39286) b!74244))

(assert (= (and b!74244 res!39287) b!74246))

(assert (= (and b!74244 c!11152) b!74243))

(assert (= (and b!74244 (not c!11152)) b!74249))

(assert (= (and b!74243 res!39288) b!74242))

(assert (= (and b!74249 c!11150) b!74251))

(assert (= (and b!74249 (not c!11150)) b!74248))

(declare-fun b_lambda!3329 () Bool)

(assert (=> (not b_lambda!3329) (not b!74242)))

(assert (=> b!74242 t!5032))

(declare-fun b_and!4555 () Bool)

(assert (= b_and!4551 (and (=> t!5032 result!2679) b_and!4555)))

(assert (=> b!74242 t!5034))

(declare-fun b_and!4557 () Bool)

(assert (= b_and!4553 (and (=> t!5034 result!2683) b_and!4557)))

(declare-fun b_lambda!3331 () Bool)

(assert (=> (not b_lambda!3331) (not b!74252)))

(assert (=> b!74252 t!5032))

(declare-fun b_and!4559 () Bool)

(assert (= b_and!4555 (and (=> t!5032 result!2679) b_and!4559)))

(assert (=> b!74252 t!5034))

(declare-fun b_and!4561 () Bool)

(assert (= b_and!4557 (and (=> t!5034 result!2683) b_and!4561)))

(declare-fun m!73387 () Bool)

(assert (=> b!74243 m!73387))

(assert (=> b!74243 m!73387))

(declare-fun m!73389 () Bool)

(assert (=> b!74243 m!73389))

(declare-fun m!73391 () Bool)

(assert (=> d!17443 m!73391))

(assert (=> d!17443 m!71223))

(assert (=> b!74241 m!73387))

(assert (=> b!74241 m!73387))

(declare-fun m!73393 () Bool)

(assert (=> b!74241 m!73393))

(declare-fun m!73395 () Bool)

(assert (=> b!74245 m!73395))

(assert (=> b!74246 m!73387))

(assert (=> b!74246 m!73387))

(assert (=> b!74246 m!73393))

(declare-fun m!73397 () Bool)

(assert (=> bm!6562 m!73397))

(declare-fun m!73399 () Bool)

(assert (=> b!74242 m!73399))

(assert (=> b!74242 m!71267))

(declare-fun m!73401 () Bool)

(assert (=> b!74242 m!73401))

(assert (=> b!74242 m!73387))

(assert (=> b!74242 m!73399))

(assert (=> b!74242 m!73387))

(declare-fun m!73403 () Bool)

(assert (=> b!74242 m!73403))

(assert (=> b!74242 m!71267))

(assert (=> b!74251 m!73397))

(assert (=> b!74252 m!71267))

(assert (=> b!74252 m!73399))

(assert (=> b!74252 m!71267))

(assert (=> b!74252 m!73401))

(declare-fun m!73405 () Bool)

(assert (=> b!74252 m!73405))

(declare-fun m!73407 () Bool)

(assert (=> b!74252 m!73407))

(declare-fun m!73409 () Bool)

(assert (=> b!74252 m!73409))

(assert (=> b!74252 m!73399))

(assert (=> b!74252 m!73387))

(assert (=> b!74252 m!73405))

(declare-fun m!73411 () Bool)

(assert (=> b!74252 m!73411))

(declare-fun m!73413 () Bool)

(assert (=> b!74248 m!73413))

(assert (=> bm!6501 d!17443))

(declare-fun d!17445 () Bool)

(declare-fun lt!33434 () Bool)

(assert (=> d!17445 (= lt!33434 (select (content!77 lt!32843) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun e!48523 () Bool)

(assert (=> d!17445 (= lt!33434 e!48523)))

(declare-fun res!39289 () Bool)

(assert (=> d!17445 (=> (not res!39289) (not e!48523))))

(assert (=> d!17445 (= res!39289 ((_ is Cons!1474) lt!32843))))

(assert (=> d!17445 (= (contains!724 lt!32843 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))) lt!33434)))

(declare-fun b!74253 () Bool)

(declare-fun e!48524 () Bool)

(assert (=> b!74253 (= e!48523 e!48524)))

(declare-fun res!39290 () Bool)

(assert (=> b!74253 (=> res!39290 e!48524)))

(assert (=> b!74253 (= res!39290 (= (h!2061 lt!32843) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!74254 () Bool)

(assert (=> b!74254 (= e!48524 (contains!724 (t!5035 lt!32843) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(assert (= (and d!17445 res!39289) b!74253))

(assert (= (and b!74253 (not res!39290)) b!74254))

(declare-fun m!73415 () Bool)

(assert (=> d!17445 m!73415))

(declare-fun m!73417 () Bool)

(assert (=> d!17445 m!73417))

(declare-fun m!73419 () Bool)

(assert (=> b!74254 m!73419))

(assert (=> b!73355 d!17445))

(declare-fun d!17447 () Bool)

(assert (=> d!17447 (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33435 () Unit!2078)

(assert (=> d!17447 (= lt!33435 (choose!422 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48525 () Bool)

(assert (=> d!17447 e!48525))

(declare-fun res!39291 () Bool)

(assert (=> d!17447 (=> (not res!39291) (not e!48525))))

(assert (=> d!17447 (= res!39291 (isStrictlySorted!292 (toList!725 lt!32681)))))

(assert (=> d!17447 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33435)))

(declare-fun b!74255 () Bool)

(assert (=> b!74255 (= e!48525 (containsKey!137 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17447 res!39291) b!74255))

(assert (=> d!17447 m!71327))

(assert (=> d!17447 m!71597))

(assert (=> d!17447 m!71597))

(assert (=> d!17447 m!71599))

(assert (=> d!17447 m!71327))

(declare-fun m!73421 () Bool)

(assert (=> d!17447 m!73421))

(assert (=> d!17447 m!72391))

(assert (=> b!74255 m!71327))

(assert (=> b!74255 m!71593))

(assert (=> b!73279 d!17447))

(declare-fun d!17449 () Bool)

(assert (=> d!17449 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32681) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3209 () Bool)

(assert (= bs!3209 d!17449))

(assert (=> bs!3209 m!71597))

(declare-fun m!73423 () Bool)

(assert (=> bs!3209 m!73423))

(assert (=> b!73279 d!17449))

(assert (=> b!73279 d!17403))

(declare-fun b!74258 () Bool)

(declare-fun e!48527 () Option!139)

(assert (=> b!74258 (= e!48527 (getValueByKey!133 (t!5035 (toList!725 lt!32895)) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun c!11153 () Bool)

(declare-fun d!17451 () Bool)

(assert (=> d!17451 (= c!11153 (and ((_ is Cons!1474) (toList!725 lt!32895)) (= (_1!1072 (h!2061 (toList!725 lt!32895))) (_1!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(declare-fun e!48526 () Option!139)

(assert (=> d!17451 (= (getValueByKey!133 (toList!725 lt!32895) (_1!1072 (tuple2!2123 lt!32599 lt!32596))) e!48526)))

(declare-fun b!74257 () Bool)

(assert (=> b!74257 (= e!48526 e!48527)))

(declare-fun c!11154 () Bool)

(assert (=> b!74257 (= c!11154 (and ((_ is Cons!1474) (toList!725 lt!32895)) (not (= (_1!1072 (h!2061 (toList!725 lt!32895))) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))))

(declare-fun b!74256 () Bool)

(assert (=> b!74256 (= e!48526 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32895)))))))

(declare-fun b!74259 () Bool)

(assert (=> b!74259 (= e!48527 None!137)))

(assert (= (and d!17451 c!11153) b!74256))

(assert (= (and d!17451 (not c!11153)) b!74257))

(assert (= (and b!74257 c!11154) b!74258))

(assert (= (and b!74257 (not c!11154)) b!74259))

(declare-fun m!73425 () Bool)

(assert (=> b!74258 m!73425))

(assert (=> b!73423 d!17451))

(declare-fun d!17453 () Bool)

(declare-fun e!48529 () Bool)

(assert (=> d!17453 e!48529))

(declare-fun res!39292 () Bool)

(assert (=> d!17453 (=> res!39292 e!48529)))

(declare-fun lt!33439 () Bool)

(assert (=> d!17453 (= res!39292 (not lt!33439))))

(declare-fun lt!33438 () Bool)

(assert (=> d!17453 (= lt!33439 lt!33438)))

(declare-fun lt!33437 () Unit!2078)

(declare-fun e!48528 () Unit!2078)

(assert (=> d!17453 (= lt!33437 e!48528)))

(declare-fun c!11155 () Bool)

(assert (=> d!17453 (= c!11155 lt!33438)))

(assert (=> d!17453 (= lt!33438 (containsKey!137 (toList!725 lt!32947) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17453 (= (contains!723 lt!32947 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33439)))

(declare-fun b!74260 () Bool)

(declare-fun lt!33436 () Unit!2078)

(assert (=> b!74260 (= e!48528 lt!33436)))

(assert (=> b!74260 (= lt!33436 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32947) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74260 (isDefined!86 (getValueByKey!133 (toList!725 lt!32947) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74261 () Bool)

(declare-fun Unit!2127 () Unit!2078)

(assert (=> b!74261 (= e!48528 Unit!2127)))

(declare-fun b!74262 () Bool)

(assert (=> b!74262 (= e!48529 (isDefined!86 (getValueByKey!133 (toList!725 lt!32947) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17453 c!11155) b!74260))

(assert (= (and d!17453 (not c!11155)) b!74261))

(assert (= (and d!17453 (not res!39292)) b!74262))

(assert (=> d!17453 m!71563))

(declare-fun m!73427 () Bool)

(assert (=> d!17453 m!73427))

(assert (=> b!74260 m!71563))

(declare-fun m!73429 () Bool)

(assert (=> b!74260 m!73429))

(assert (=> b!74260 m!71563))

(declare-fun m!73431 () Bool)

(assert (=> b!74260 m!73431))

(assert (=> b!74260 m!73431))

(declare-fun m!73433 () Bool)

(assert (=> b!74260 m!73433))

(assert (=> b!74262 m!71563))

(assert (=> b!74262 m!73431))

(assert (=> b!74262 m!73431))

(assert (=> b!74262 m!73433))

(assert (=> b!73498 d!17453))

(declare-fun d!17455 () Bool)

(assert (=> d!17455 (= (size!2101 newMap!16) (bvadd (_size!397 newMap!16) (bvsdiv (bvadd (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!73587 d!17455))

(declare-fun b!74265 () Bool)

(declare-fun e!48531 () Option!139)

(assert (=> b!74265 (= e!48531 (getValueByKey!133 (t!5035 (t!5035 lt!32613)) (_1!1072 lt!32542)))))

(declare-fun d!17457 () Bool)

(declare-fun c!11156 () Bool)

(assert (=> d!17457 (= c!11156 (and ((_ is Cons!1474) (t!5035 lt!32613)) (= (_1!1072 (h!2061 (t!5035 lt!32613))) (_1!1072 lt!32542))))))

(declare-fun e!48530 () Option!139)

(assert (=> d!17457 (= (getValueByKey!133 (t!5035 lt!32613) (_1!1072 lt!32542)) e!48530)))

(declare-fun b!74264 () Bool)

(assert (=> b!74264 (= e!48530 e!48531)))

(declare-fun c!11157 () Bool)

(assert (=> b!74264 (= c!11157 (and ((_ is Cons!1474) (t!5035 lt!32613)) (not (= (_1!1072 (h!2061 (t!5035 lt!32613))) (_1!1072 lt!32542)))))))

(declare-fun b!74263 () Bool)

(assert (=> b!74263 (= e!48530 (Some!138 (_2!1072 (h!2061 (t!5035 lt!32613)))))))

(declare-fun b!74266 () Bool)

(assert (=> b!74266 (= e!48531 None!137)))

(assert (= (and d!17457 c!11156) b!74263))

(assert (= (and d!17457 (not c!11156)) b!74264))

(assert (= (and b!74264 c!11157) b!74265))

(assert (= (and b!74264 (not c!11157)) b!74266))

(declare-fun m!73435 () Bool)

(assert (=> b!74265 m!73435))

(assert (=> b!73698 d!17457))

(assert (=> b!73302 d!17061))

(declare-fun d!17459 () Bool)

(declare-fun e!48533 () Bool)

(assert (=> d!17459 e!48533))

(declare-fun res!39293 () Bool)

(assert (=> d!17459 (=> res!39293 e!48533)))

(declare-fun lt!33443 () Bool)

(assert (=> d!17459 (= res!39293 (not lt!33443))))

(declare-fun lt!33442 () Bool)

(assert (=> d!17459 (= lt!33443 lt!33442)))

(declare-fun lt!33441 () Unit!2078)

(declare-fun e!48532 () Unit!2078)

(assert (=> d!17459 (= lt!33441 e!48532)))

(declare-fun c!11158 () Bool)

(assert (=> d!17459 (= c!11158 lt!33442)))

(assert (=> d!17459 (= lt!33442 (containsKey!137 (toList!725 lt!33069) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!17459 (= (contains!723 lt!33069 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!33443)))

(declare-fun b!74267 () Bool)

(declare-fun lt!33440 () Unit!2078)

(assert (=> b!74267 (= e!48532 lt!33440)))

(assert (=> b!74267 (= lt!33440 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33069) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!74267 (isDefined!86 (getValueByKey!133 (toList!725 lt!33069) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!74268 () Bool)

(declare-fun Unit!2128 () Unit!2078)

(assert (=> b!74268 (= e!48532 Unit!2128)))

(declare-fun b!74269 () Bool)

(assert (=> b!74269 (= e!48533 (isDefined!86 (getValueByKey!133 (toList!725 lt!33069) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!17459 c!11158) b!74267))

(assert (= (and d!17459 (not c!11158)) b!74268))

(assert (= (and d!17459 (not res!39293)) b!74269))

(assert (=> d!17459 m!71711))

(declare-fun m!73437 () Bool)

(assert (=> d!17459 m!73437))

(assert (=> b!74267 m!71711))

(declare-fun m!73439 () Bool)

(assert (=> b!74267 m!73439))

(assert (=> b!74267 m!71711))

(assert (=> b!74267 m!73015))

(assert (=> b!74267 m!73015))

(declare-fun m!73441 () Bool)

(assert (=> b!74267 m!73441))

(assert (=> b!74269 m!71711))

(assert (=> b!74269 m!73015))

(assert (=> b!74269 m!73015))

(assert (=> b!74269 m!73441))

(assert (=> b!73596 d!17459))

(assert (=> b!73427 d!17305))

(assert (=> b!73427 d!17307))

(declare-fun d!17461 () Bool)

(assert (=> d!17461 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!33063 #b00000000000000000000000000000000)))

(declare-fun lt!33446 () Unit!2078)

(declare-fun choose!13 (array!3895 (_ BitVec 64) (_ BitVec 32)) Unit!2078)

(assert (=> d!17461 (= lt!33446 (choose!13 (_keys!3865 newMap!16) lt!33063 #b00000000000000000000000000000000))))

(assert (=> d!17461 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!17461 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 newMap!16) lt!33063 #b00000000000000000000000000000000) lt!33446)))

(declare-fun bs!3210 () Bool)

(assert (= bs!3210 d!17461))

(assert (=> bs!3210 m!72087))

(declare-fun m!73443 () Bool)

(assert (=> bs!3210 m!73443))

(assert (=> b!73573 d!17461))

(declare-fun d!17463 () Bool)

(declare-fun res!39294 () Bool)

(declare-fun e!48534 () Bool)

(assert (=> d!17463 (=> res!39294 e!48534)))

(assert (=> d!17463 (= res!39294 (= (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) lt!33063))))

(assert (=> d!17463 (= (arrayContainsKey!0 (_keys!3865 newMap!16) lt!33063 #b00000000000000000000000000000000) e!48534)))

(declare-fun b!74270 () Bool)

(declare-fun e!48535 () Bool)

(assert (=> b!74270 (= e!48534 e!48535)))

(declare-fun res!39295 () Bool)

(assert (=> b!74270 (=> (not res!39295) (not e!48535))))

(assert (=> b!74270 (= res!39295 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74271 () Bool)

(assert (=> b!74271 (= e!48535 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!33063 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17463 (not res!39294)) b!74270))

(assert (= (and b!74270 res!39295) b!74271))

(assert (=> d!17463 m!71563))

(declare-fun m!73445 () Bool)

(assert (=> b!74271 m!73445))

(assert (=> b!73573 d!17463))

(declare-fun b!74272 () Bool)

(declare-fun c!11160 () Bool)

(declare-fun lt!33447 () (_ BitVec 64))

(assert (=> b!74272 (= c!11160 (= lt!33447 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48536 () SeekEntryResult!236)

(declare-fun e!48537 () SeekEntryResult!236)

(assert (=> b!74272 (= e!48536 e!48537)))

(declare-fun b!74273 () Bool)

(declare-fun lt!33448 () SeekEntryResult!236)

(assert (=> b!74273 (= e!48537 (MissingZero!236 (index!3077 lt!33448)))))

(declare-fun d!17465 () Bool)

(declare-fun lt!33449 () SeekEntryResult!236)

(assert (=> d!17465 (and (or ((_ is Undefined!236) lt!33449) (not ((_ is Found!236) lt!33449)) (and (bvsge (index!3076 lt!33449) #b00000000000000000000000000000000) (bvslt (index!3076 lt!33449) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!33449) ((_ is Found!236) lt!33449) (not ((_ is MissingZero!236) lt!33449)) (and (bvsge (index!3075 lt!33449) #b00000000000000000000000000000000) (bvslt (index!3075 lt!33449) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!33449) ((_ is Found!236) lt!33449) ((_ is MissingZero!236) lt!33449) (not ((_ is MissingVacant!236) lt!33449)) (and (bvsge (index!3078 lt!33449) #b00000000000000000000000000000000) (bvslt (index!3078 lt!33449) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!33449) (ite ((_ is Found!236) lt!33449) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!33449)) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!236) lt!33449) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3075 lt!33449)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!236) lt!33449) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!33449)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48538 () SeekEntryResult!236)

(assert (=> d!17465 (= lt!33449 e!48538)))

(declare-fun c!11161 () Bool)

(assert (=> d!17465 (= c!11161 (and ((_ is Intermediate!236) lt!33448) (undefined!1048 lt!33448)))))

(assert (=> d!17465 (= lt!33448 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (mask!6180 newMap!16)) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!17465 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17465 (= (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!33449)))

(declare-fun b!74274 () Bool)

(assert (=> b!74274 (= e!48537 (seekKeyOrZeroReturnVacant!0 (x!11152 lt!33448) (index!3077 lt!33448) (index!3077 lt!33448) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!74275 () Bool)

(assert (=> b!74275 (= e!48538 Undefined!236)))

(declare-fun b!74276 () Bool)

(assert (=> b!74276 (= e!48538 e!48536)))

(assert (=> b!74276 (= lt!33447 (select (arr!1859 (_keys!3865 newMap!16)) (index!3077 lt!33448)))))

(declare-fun c!11159 () Bool)

(assert (=> b!74276 (= c!11159 (= lt!33447 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74277 () Bool)

(assert (=> b!74277 (= e!48536 (Found!236 (index!3077 lt!33448)))))

(assert (= (and d!17465 c!11161) b!74275))

(assert (= (and d!17465 (not c!11161)) b!74276))

(assert (= (and b!74276 c!11159) b!74277))

(assert (= (and b!74276 (not c!11159)) b!74272))

(assert (= (and b!74272 c!11160) b!74273))

(assert (= (and b!74272 (not c!11160)) b!74274))

(declare-fun m!73447 () Bool)

(assert (=> d!17465 m!73447))

(declare-fun m!73449 () Bool)

(assert (=> d!17465 m!73449))

(assert (=> d!17465 m!71705))

(assert (=> d!17465 m!71563))

(declare-fun m!73451 () Bool)

(assert (=> d!17465 m!73451))

(assert (=> d!17465 m!73451))

(assert (=> d!17465 m!71563))

(declare-fun m!73453 () Bool)

(assert (=> d!17465 m!73453))

(declare-fun m!73455 () Bool)

(assert (=> d!17465 m!73455))

(assert (=> b!74274 m!71563))

(declare-fun m!73457 () Bool)

(assert (=> b!74274 m!73457))

(declare-fun m!73459 () Bool)

(assert (=> b!74276 m!73459))

(assert (=> b!73573 d!17465))

(declare-fun d!17467 () Bool)

(declare-fun e!48540 () Bool)

(assert (=> d!17467 e!48540))

(declare-fun res!39296 () Bool)

(assert (=> d!17467 (=> res!39296 e!48540)))

(declare-fun lt!33453 () Bool)

(assert (=> d!17467 (= res!39296 (not lt!33453))))

(declare-fun lt!33452 () Bool)

(assert (=> d!17467 (= lt!33453 lt!33452)))

(declare-fun lt!33451 () Unit!2078)

(declare-fun e!48539 () Unit!2078)

(assert (=> d!17467 (= lt!33451 e!48539)))

(declare-fun c!11162 () Bool)

(assert (=> d!17467 (= c!11162 lt!33452)))

(assert (=> d!17467 (= lt!33452 (containsKey!137 (toList!725 lt!32860) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17467 (= (contains!723 lt!32860 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33453)))

(declare-fun b!74278 () Bool)

(declare-fun lt!33450 () Unit!2078)

(assert (=> b!74278 (= e!48539 lt!33450)))

(assert (=> b!74278 (= lt!33450 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32860) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74278 (isDefined!86 (getValueByKey!133 (toList!725 lt!32860) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74279 () Bool)

(declare-fun Unit!2129 () Unit!2078)

(assert (=> b!74279 (= e!48539 Unit!2129)))

(declare-fun b!74280 () Bool)

(assert (=> b!74280 (= e!48540 (isDefined!86 (getValueByKey!133 (toList!725 lt!32860) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17467 c!11162) b!74278))

(assert (= (and d!17467 (not c!11162)) b!74279))

(assert (= (and d!17467 (not res!39296)) b!74280))

(declare-fun m!73461 () Bool)

(assert (=> d!17467 m!73461))

(declare-fun m!73463 () Bool)

(assert (=> b!74278 m!73463))

(declare-fun m!73465 () Bool)

(assert (=> b!74278 m!73465))

(assert (=> b!74278 m!73465))

(declare-fun m!73467 () Bool)

(assert (=> b!74278 m!73467))

(assert (=> b!74280 m!73465))

(assert (=> b!74280 m!73465))

(assert (=> b!74280 m!73467))

(assert (=> bm!6466 d!17467))

(declare-fun d!17469 () Bool)

(assert (=> d!17469 (= (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73503 d!17469))

(assert (=> b!73310 d!17227))

(assert (=> b!73310 d!16905))

(declare-fun d!17471 () Bool)

(declare-fun res!39297 () Bool)

(declare-fun e!48541 () Bool)

(assert (=> d!17471 (=> res!39297 e!48541)))

(assert (=> d!17471 (= res!39297 (or ((_ is Nil!1475) lt!32931) ((_ is Nil!1475) (t!5035 lt!32931))))))

(assert (=> d!17471 (= (isStrictlySorted!292 lt!32931) e!48541)))

(declare-fun b!74281 () Bool)

(declare-fun e!48542 () Bool)

(assert (=> b!74281 (= e!48541 e!48542)))

(declare-fun res!39298 () Bool)

(assert (=> b!74281 (=> (not res!39298) (not e!48542))))

(assert (=> b!74281 (= res!39298 (bvslt (_1!1072 (h!2061 lt!32931)) (_1!1072 (h!2061 (t!5035 lt!32931)))))))

(declare-fun b!74282 () Bool)

(assert (=> b!74282 (= e!48542 (isStrictlySorted!292 (t!5035 lt!32931)))))

(assert (= (and d!17471 (not res!39297)) b!74281))

(assert (= (and b!74281 res!39298) b!74282))

(declare-fun m!73469 () Bool)

(assert (=> b!74282 m!73469))

(assert (=> d!16941 d!17471))

(declare-fun d!17473 () Bool)

(declare-fun res!39299 () Bool)

(declare-fun e!48543 () Bool)

(assert (=> d!17473 (=> res!39299 e!48543)))

(assert (=> d!17473 (= res!39299 (or ((_ is Nil!1475) (toList!725 (+!94 lt!32540 lt!32538))) ((_ is Nil!1475) (t!5035 (toList!725 (+!94 lt!32540 lt!32538))))))))

(assert (=> d!17473 (= (isStrictlySorted!292 (toList!725 (+!94 lt!32540 lt!32538))) e!48543)))

(declare-fun b!74283 () Bool)

(declare-fun e!48544 () Bool)

(assert (=> b!74283 (= e!48543 e!48544)))

(declare-fun res!39300 () Bool)

(assert (=> b!74283 (=> (not res!39300) (not e!48544))))

(assert (=> b!74283 (= res!39300 (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32540 lt!32538)))) (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))))))))

(declare-fun b!74284 () Bool)

(assert (=> b!74284 (= e!48544 (isStrictlySorted!292 (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))))))

(assert (= (and d!17473 (not res!39299)) b!74283))

(assert (= (and b!74283 res!39300) b!74284))

(declare-fun m!73471 () Bool)

(assert (=> b!74284 m!73471))

(assert (=> d!16941 d!17473))

(assert (=> b!73604 d!17443))

(declare-fun d!17475 () Bool)

(assert (=> d!17475 (= (apply!75 lt!32947 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32947) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3211 () Bool)

(assert (= bs!3211 d!17475))

(assert (=> bs!3211 m!72777))

(assert (=> bs!3211 m!72777))

(declare-fun m!73473 () Bool)

(assert (=> bs!3211 m!73473))

(assert (=> b!73491 d!17475))

(declare-fun d!17477 () Bool)

(declare-fun e!48546 () Bool)

(assert (=> d!17477 e!48546))

(declare-fun res!39301 () Bool)

(assert (=> d!17477 (=> res!39301 e!48546)))

(declare-fun lt!33457 () Bool)

(assert (=> d!17477 (= res!39301 (not lt!33457))))

(declare-fun lt!33456 () Bool)

(assert (=> d!17477 (= lt!33457 lt!33456)))

(declare-fun lt!33455 () Unit!2078)

(declare-fun e!48545 () Unit!2078)

(assert (=> d!17477 (= lt!33455 e!48545)))

(declare-fun c!11163 () Bool)

(assert (=> d!17477 (= c!11163 lt!33456)))

(assert (=> d!17477 (= lt!33456 (containsKey!137 (toList!725 lt!32895) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(assert (=> d!17477 (= (contains!723 lt!32895 (_1!1072 (tuple2!2123 lt!32599 lt!32596))) lt!33457)))

(declare-fun b!74285 () Bool)

(declare-fun lt!33454 () Unit!2078)

(assert (=> b!74285 (= e!48545 lt!33454)))

(assert (=> b!74285 (= lt!33454 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32895) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(assert (=> b!74285 (isDefined!86 (getValueByKey!133 (toList!725 lt!32895) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun b!74286 () Bool)

(declare-fun Unit!2130 () Unit!2078)

(assert (=> b!74286 (= e!48545 Unit!2130)))

(declare-fun b!74287 () Bool)

(assert (=> b!74287 (= e!48546 (isDefined!86 (getValueByKey!133 (toList!725 lt!32895) (_1!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(assert (= (and d!17477 c!11163) b!74285))

(assert (= (and d!17477 (not c!11163)) b!74286))

(assert (= (and d!17477 (not res!39301)) b!74287))

(declare-fun m!73475 () Bool)

(assert (=> d!17477 m!73475))

(declare-fun m!73477 () Bool)

(assert (=> b!74285 m!73477))

(assert (=> b!74285 m!71827))

(assert (=> b!74285 m!71827))

(declare-fun m!73479 () Bool)

(assert (=> b!74285 m!73479))

(assert (=> b!74287 m!71827))

(assert (=> b!74287 m!71827))

(assert (=> b!74287 m!73479))

(assert (=> d!16925 d!17477))

(declare-fun e!48548 () Option!139)

(declare-fun b!74290 () Bool)

(assert (=> b!74290 (= e!48548 (getValueByKey!133 (t!5035 lt!32894) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun c!11164 () Bool)

(declare-fun d!17479 () Bool)

(assert (=> d!17479 (= c!11164 (and ((_ is Cons!1474) lt!32894) (= (_1!1072 (h!2061 lt!32894)) (_1!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(declare-fun e!48547 () Option!139)

(assert (=> d!17479 (= (getValueByKey!133 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596))) e!48547)))

(declare-fun b!74289 () Bool)

(assert (=> b!74289 (= e!48547 e!48548)))

(declare-fun c!11165 () Bool)

(assert (=> b!74289 (= c!11165 (and ((_ is Cons!1474) lt!32894) (not (= (_1!1072 (h!2061 lt!32894)) (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))))

(declare-fun b!74288 () Bool)

(assert (=> b!74288 (= e!48547 (Some!138 (_2!1072 (h!2061 lt!32894))))))

(declare-fun b!74291 () Bool)

(assert (=> b!74291 (= e!48548 None!137)))

(assert (= (and d!17479 c!11164) b!74288))

(assert (= (and d!17479 (not c!11164)) b!74289))

(assert (= (and b!74289 c!11165) b!74290))

(assert (= (and b!74289 (not c!11165)) b!74291))

(declare-fun m!73481 () Bool)

(assert (=> b!74290 m!73481))

(assert (=> d!16925 d!17479))

(declare-fun d!17481 () Bool)

(assert (=> d!17481 (= (getValueByKey!133 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596))) (Some!138 (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun lt!33458 () Unit!2078)

(assert (=> d!17481 (= lt!33458 (choose!412 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun e!48549 () Bool)

(assert (=> d!17481 e!48549))

(declare-fun res!39302 () Bool)

(assert (=> d!17481 (=> (not res!39302) (not e!48549))))

(assert (=> d!17481 (= res!39302 (isStrictlySorted!292 lt!32894))))

(assert (=> d!17481 (= (lemmaContainsTupThenGetReturnValue!50 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))) lt!33458)))

(declare-fun b!74292 () Bool)

(declare-fun res!39303 () Bool)

(assert (=> b!74292 (=> (not res!39303) (not e!48549))))

(assert (=> b!74292 (= res!39303 (containsKey!137 lt!32894 (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun b!74293 () Bool)

(assert (=> b!74293 (= e!48549 (contains!724 lt!32894 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(assert (= (and d!17481 res!39302) b!74292))

(assert (= (and b!74292 res!39303) b!74293))

(assert (=> d!17481 m!71821))

(declare-fun m!73483 () Bool)

(assert (=> d!17481 m!73483))

(declare-fun m!73485 () Bool)

(assert (=> d!17481 m!73485))

(declare-fun m!73487 () Bool)

(assert (=> b!74292 m!73487))

(declare-fun m!73489 () Bool)

(assert (=> b!74293 m!73489))

(assert (=> d!16925 d!17481))

(declare-fun b!74294 () Bool)

(declare-fun e!48552 () List!1478)

(declare-fun call!6566 () List!1478)

(assert (=> b!74294 (= e!48552 call!6566)))

(declare-fun b!74295 () Bool)

(declare-fun e!48554 () List!1478)

(declare-fun call!6567 () List!1478)

(assert (=> b!74295 (= e!48554 call!6567)))

(declare-fun b!74296 () Bool)

(declare-fun e!48550 () List!1478)

(declare-fun call!6568 () List!1478)

(assert (=> b!74296 (= e!48550 call!6568)))

(declare-fun c!11169 () Bool)

(declare-fun c!11167 () Bool)

(declare-fun e!48551 () List!1478)

(declare-fun b!74297 () Bool)

(assert (=> b!74297 (= e!48551 (ite c!11169 (t!5035 (toList!725 lt!32595)) (ite c!11167 (Cons!1474 (h!2061 (toList!725 lt!32595)) (t!5035 (toList!725 lt!32595))) Nil!1475)))))

(declare-fun b!74298 () Bool)

(assert (=> b!74298 (= e!48550 e!48552)))

(assert (=> b!74298 (= c!11169 (and ((_ is Cons!1474) (toList!725 lt!32595)) (= (_1!1072 (h!2061 (toList!725 lt!32595))) (_1!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(declare-fun bm!6563 () Bool)

(assert (=> bm!6563 (= call!6567 call!6566)))

(declare-fun c!11166 () Bool)

(declare-fun bm!6564 () Bool)

(assert (=> bm!6564 (= call!6568 ($colon$colon!66 e!48551 (ite c!11166 (h!2061 (toList!725 lt!32595)) (tuple2!2123 (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))))

(declare-fun c!11168 () Bool)

(assert (=> bm!6564 (= c!11168 c!11166)))

(declare-fun b!74299 () Bool)

(declare-fun res!39305 () Bool)

(declare-fun e!48553 () Bool)

(assert (=> b!74299 (=> (not res!39305) (not e!48553))))

(declare-fun lt!33459 () List!1478)

(assert (=> b!74299 (= res!39305 (containsKey!137 lt!33459 (_1!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun bm!6565 () Bool)

(assert (=> bm!6565 (= call!6566 call!6568)))

(declare-fun b!74300 () Bool)

(assert (=> b!74300 (= e!48553 (contains!724 lt!33459 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(declare-fun b!74301 () Bool)

(assert (=> b!74301 (= e!48554 call!6567)))

(declare-fun b!74302 () Bool)

(assert (=> b!74302 (= e!48551 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32595)) (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))))))

(declare-fun b!74303 () Bool)

(assert (=> b!74303 (= c!11167 (and ((_ is Cons!1474) (toList!725 lt!32595)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32595))) (_1!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(assert (=> b!74303 (= e!48552 e!48554)))

(declare-fun d!17483 () Bool)

(assert (=> d!17483 e!48553))

(declare-fun res!39304 () Bool)

(assert (=> d!17483 (=> (not res!39304) (not e!48553))))

(assert (=> d!17483 (= res!39304 (isStrictlySorted!292 lt!33459))))

(assert (=> d!17483 (= lt!33459 e!48550)))

(assert (=> d!17483 (= c!11166 (and ((_ is Cons!1474) (toList!725 lt!32595)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32595))) (_1!1072 (tuple2!2123 lt!32599 lt!32596)))))))

(assert (=> d!17483 (isStrictlySorted!292 (toList!725 lt!32595))))

(assert (=> d!17483 (= (insertStrictlySorted!53 (toList!725 lt!32595) (_1!1072 (tuple2!2123 lt!32599 lt!32596)) (_2!1072 (tuple2!2123 lt!32599 lt!32596))) lt!33459)))

(assert (= (and d!17483 c!11166) b!74296))

(assert (= (and d!17483 (not c!11166)) b!74298))

(assert (= (and b!74298 c!11169) b!74294))

(assert (= (and b!74298 (not c!11169)) b!74303))

(assert (= (and b!74303 c!11167) b!74301))

(assert (= (and b!74303 (not c!11167)) b!74295))

(assert (= (or b!74301 b!74295) bm!6563))

(assert (= (or b!74294 bm!6563) bm!6565))

(assert (= (or b!74296 bm!6565) bm!6564))

(assert (= (and bm!6564 c!11168) b!74302))

(assert (= (and bm!6564 (not c!11168)) b!74297))

(assert (= (and d!17483 res!39304) b!74299))

(assert (= (and b!74299 res!39305) b!74300))

(declare-fun m!73491 () Bool)

(assert (=> bm!6564 m!73491))

(declare-fun m!73493 () Bool)

(assert (=> b!74302 m!73493))

(declare-fun m!73495 () Bool)

(assert (=> b!74300 m!73495))

(declare-fun m!73497 () Bool)

(assert (=> d!17483 m!73497))

(declare-fun m!73499 () Bool)

(assert (=> d!17483 m!73499))

(declare-fun m!73501 () Bool)

(assert (=> b!74299 m!73501))

(assert (=> d!16925 d!17483))

(declare-fun d!17485 () Bool)

(declare-fun lt!33460 () Bool)

(assert (=> d!17485 (= lt!33460 (select (content!77 (toList!725 lt!32812)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun e!48555 () Bool)

(assert (=> d!17485 (= lt!33460 e!48555)))

(declare-fun res!39306 () Bool)

(assert (=> d!17485 (=> (not res!39306) (not e!48555))))

(assert (=> d!17485 (= res!39306 ((_ is Cons!1474) (toList!725 lt!32812)))))

(assert (=> d!17485 (= (contains!724 (toList!725 lt!32812) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!33460)))

(declare-fun b!74304 () Bool)

(declare-fun e!48556 () Bool)

(assert (=> b!74304 (= e!48555 e!48556)))

(declare-fun res!39307 () Bool)

(assert (=> b!74304 (=> res!39307 e!48556)))

(assert (=> b!74304 (= res!39307 (= (h!2061 (toList!725 lt!32812)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun b!74305 () Bool)

(assert (=> b!74305 (= e!48556 (contains!724 (t!5035 (toList!725 lt!32812)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!17485 res!39306) b!74304))

(assert (= (and b!74304 (not res!39307)) b!74305))

(declare-fun m!73503 () Bool)

(assert (=> d!17485 m!73503))

(declare-fun m!73505 () Bool)

(assert (=> d!17485 m!73505))

(declare-fun m!73507 () Bool)

(assert (=> b!74305 m!73507))

(assert (=> b!73283 d!17485))

(declare-fun b!74306 () Bool)

(declare-fun e!48557 () (_ BitVec 32))

(declare-fun call!6569 () (_ BitVec 32))

(assert (=> b!74306 (= e!48557 call!6569)))

(declare-fun b!74307 () Bool)

(declare-fun e!48558 () (_ BitVec 32))

(assert (=> b!74307 (= e!48558 #b00000000000000000000000000000000)))

(declare-fun bm!6566 () Bool)

(assert (=> bm!6566 (= call!6569 (arrayCountValidKeys!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun d!17487 () Bool)

(declare-fun lt!33461 () (_ BitVec 32))

(assert (=> d!17487 (and (bvsge lt!33461 #b00000000000000000000000000000000) (bvsle lt!33461 (bvsub (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!17487 (= lt!33461 e!48558)))

(declare-fun c!11170 () Bool)

(assert (=> d!17487 (= c!11170 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!17487 (and (bvsle #b00000000000000000000000000000000 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!17487 (= (arrayCountValidKeys!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))) lt!33461)))

(declare-fun b!74308 () Bool)

(assert (=> b!74308 (= e!48558 e!48557)))

(declare-fun c!11171 () Bool)

(assert (=> b!74308 (= c!11171 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74309 () Bool)

(assert (=> b!74309 (= e!48557 (bvadd #b00000000000000000000000000000001 call!6569))))

(assert (= (and d!17487 c!11170) b!74307))

(assert (= (and d!17487 (not c!11170)) b!74308))

(assert (= (and b!74308 c!11171) b!74309))

(assert (= (and b!74308 (not c!11171)) b!74306))

(assert (= (or b!74309 b!74306) bm!6566))

(declare-fun m!73509 () Bool)

(assert (=> bm!6566 m!73509))

(declare-fun m!73511 () Bool)

(assert (=> b!74308 m!73511))

(assert (=> b!74308 m!73511))

(declare-fun m!73513 () Bool)

(assert (=> b!74308 m!73513))

(assert (=> b!73267 d!17487))

(assert (=> b!73616 d!17207))

(assert (=> b!73616 d!17121))

(declare-fun b!74312 () Bool)

(declare-fun e!48560 () Option!139)

(assert (=> b!74312 (= e!48560 (getValueByKey!133 (t!5035 (t!5035 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun d!17489 () Bool)

(declare-fun c!11172 () Bool)

(assert (=> d!17489 (= c!11172 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32541))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32541)))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun e!48559 () Option!139)

(assert (=> d!17489 (= (getValueByKey!133 (t!5035 (toList!725 lt!32541)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48559)))

(declare-fun b!74311 () Bool)

(assert (=> b!74311 (= e!48559 e!48560)))

(declare-fun c!11173 () Bool)

(assert (=> b!74311 (= c!11173 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32541))) (not (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32541)))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(declare-fun b!74310 () Bool)

(assert (=> b!74310 (= e!48559 (Some!138 (_2!1072 (h!2061 (t!5035 (toList!725 lt!32541))))))))

(declare-fun b!74313 () Bool)

(assert (=> b!74313 (= e!48560 None!137)))

(assert (= (and d!17489 c!11172) b!74310))

(assert (= (and d!17489 (not c!11172)) b!74311))

(assert (= (and b!74311 c!11173) b!74312))

(assert (= (and b!74311 (not c!11173)) b!74313))

(assert (=> b!74312 m!71227))

(declare-fun m!73515 () Bool)

(assert (=> b!74312 m!73515))

(assert (=> b!73576 d!17489))

(declare-fun d!17491 () Bool)

(declare-fun c!11174 () Bool)

(assert (=> d!17491 (= c!11174 ((_ is Nil!1475) (toList!725 lt!32610)))))

(declare-fun e!48561 () (InoxSet tuple2!2122))

(assert (=> d!17491 (= (content!77 (toList!725 lt!32610)) e!48561)))

(declare-fun b!74314 () Bool)

(assert (=> b!74314 (= e!48561 ((as const (Array tuple2!2122 Bool)) false))))

(declare-fun b!74315 () Bool)

(assert (=> b!74315 (= e!48561 ((_ map or) (store ((as const (Array tuple2!2122 Bool)) false) (h!2061 (toList!725 lt!32610)) true) (content!77 (t!5035 (toList!725 lt!32610)))))))

(assert (= (and d!17491 c!11174) b!74314))

(assert (= (and d!17491 (not c!11174)) b!74315))

(declare-fun m!73517 () Bool)

(assert (=> b!74315 m!73517))

(assert (=> b!74315 m!72877))

(assert (=> d!16943 d!17491))

(declare-fun d!17493 () Bool)

(declare-fun e!48563 () Bool)

(assert (=> d!17493 e!48563))

(declare-fun res!39308 () Bool)

(assert (=> d!17493 (=> res!39308 e!48563)))

(declare-fun lt!33465 () Bool)

(assert (=> d!17493 (= res!39308 (not lt!33465))))

(declare-fun lt!33464 () Bool)

(assert (=> d!17493 (= lt!33465 lt!33464)))

(declare-fun lt!33463 () Unit!2078)

(declare-fun e!48562 () Unit!2078)

(assert (=> d!17493 (= lt!33463 e!48562)))

(declare-fun c!11175 () Bool)

(assert (=> d!17493 (= c!11175 lt!33464)))

(assert (=> d!17493 (= lt!33464 (containsKey!137 (toList!725 lt!32883) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17493 (= (contains!723 lt!32883 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33465)))

(declare-fun b!74316 () Bool)

(declare-fun lt!33462 () Unit!2078)

(assert (=> b!74316 (= e!48562 lt!33462)))

(assert (=> b!74316 (= lt!33462 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32883) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!74316 (isDefined!86 (getValueByKey!133 (toList!725 lt!32883) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74317 () Bool)

(declare-fun Unit!2131 () Unit!2078)

(assert (=> b!74317 (= e!48562 Unit!2131)))

(declare-fun b!74318 () Bool)

(assert (=> b!74318 (= e!48563 (isDefined!86 (getValueByKey!133 (toList!725 lt!32883) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17493 c!11175) b!74316))

(assert (= (and d!17493 (not c!11175)) b!74317))

(assert (= (and d!17493 (not res!39308)) b!74318))

(declare-fun m!73519 () Bool)

(assert (=> d!17493 m!73519))

(declare-fun m!73521 () Bool)

(assert (=> b!74316 m!73521))

(assert (=> b!74316 m!71795))

(assert (=> b!74316 m!71795))

(declare-fun m!73523 () Bool)

(assert (=> b!74316 m!73523))

(assert (=> b!74318 m!71795))

(assert (=> b!74318 m!71795))

(assert (=> b!74318 m!73523))

(assert (=> d!16919 d!17493))

(declare-fun b!74321 () Bool)

(declare-fun e!48565 () Option!139)

(assert (=> b!74321 (= e!48565 (getValueByKey!133 (t!5035 lt!32882) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17495 () Bool)

(declare-fun c!11176 () Bool)

(assert (=> d!17495 (= c!11176 (and ((_ is Cons!1474) lt!32882) (= (_1!1072 (h!2061 lt!32882)) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48564 () Option!139)

(assert (=> d!17495 (= (getValueByKey!133 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48564)))

(declare-fun b!74320 () Bool)

(assert (=> b!74320 (= e!48564 e!48565)))

(declare-fun c!11177 () Bool)

(assert (=> b!74320 (= c!11177 (and ((_ is Cons!1474) lt!32882) (not (= (_1!1072 (h!2061 lt!32882)) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74319 () Bool)

(assert (=> b!74319 (= e!48564 (Some!138 (_2!1072 (h!2061 lt!32882))))))

(declare-fun b!74322 () Bool)

(assert (=> b!74322 (= e!48565 None!137)))

(assert (= (and d!17495 c!11176) b!74319))

(assert (= (and d!17495 (not c!11176)) b!74320))

(assert (= (and b!74320 c!11177) b!74321))

(assert (= (and b!74320 (not c!11177)) b!74322))

(declare-fun m!73525 () Bool)

(assert (=> b!74321 m!73525))

(assert (=> d!16919 d!17495))

(declare-fun d!17497 () Bool)

(assert (=> d!17497 (= (getValueByKey!133 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33466 () Unit!2078)

(assert (=> d!17497 (= lt!33466 (choose!412 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48566 () Bool)

(assert (=> d!17497 e!48566))

(declare-fun res!39309 () Bool)

(assert (=> d!17497 (=> (not res!39309) (not e!48566))))

(assert (=> d!17497 (= res!39309 (isStrictlySorted!292 lt!32882))))

(assert (=> d!17497 (= (lemmaContainsTupThenGetReturnValue!50 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33466)))

(declare-fun b!74323 () Bool)

(declare-fun res!39310 () Bool)

(assert (=> b!74323 (=> (not res!39310) (not e!48566))))

(assert (=> b!74323 (= res!39310 (containsKey!137 lt!32882 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74324 () Bool)

(assert (=> b!74324 (= e!48566 (contains!724 lt!32882 (tuple2!2123 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17497 res!39309) b!74323))

(assert (= (and b!74323 res!39310) b!74324))

(assert (=> d!17497 m!71789))

(declare-fun m!73527 () Bool)

(assert (=> d!17497 m!73527))

(declare-fun m!73529 () Bool)

(assert (=> d!17497 m!73529))

(declare-fun m!73531 () Bool)

(assert (=> b!74323 m!73531))

(declare-fun m!73533 () Bool)

(assert (=> b!74324 m!73533))

(assert (=> d!16919 d!17497))

(declare-fun b!74325 () Bool)

(declare-fun e!48569 () List!1478)

(declare-fun call!6570 () List!1478)

(assert (=> b!74325 (= e!48569 call!6570)))

(declare-fun b!74326 () Bool)

(declare-fun e!48571 () List!1478)

(declare-fun call!6571 () List!1478)

(assert (=> b!74326 (= e!48571 call!6571)))

(declare-fun b!74327 () Bool)

(declare-fun e!48567 () List!1478)

(declare-fun call!6572 () List!1478)

(assert (=> b!74327 (= e!48567 call!6572)))

(declare-fun b!74328 () Bool)

(declare-fun c!11181 () Bool)

(declare-fun e!48568 () List!1478)

(declare-fun c!11179 () Bool)

(assert (=> b!74328 (= e!48568 (ite c!11181 (t!5035 (toList!725 call!6373)) (ite c!11179 (Cons!1474 (h!2061 (toList!725 call!6373)) (t!5035 (toList!725 call!6373))) Nil!1475)))))

(declare-fun b!74329 () Bool)

(assert (=> b!74329 (= e!48567 e!48569)))

(assert (=> b!74329 (= c!11181 (and ((_ is Cons!1474) (toList!725 call!6373)) (= (_1!1072 (h!2061 (toList!725 call!6373))) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6567 () Bool)

(assert (=> bm!6567 (= call!6571 call!6570)))

(declare-fun c!11178 () Bool)

(declare-fun bm!6568 () Bool)

(assert (=> bm!6568 (= call!6572 ($colon$colon!66 e!48568 (ite c!11178 (h!2061 (toList!725 call!6373)) (tuple2!2123 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11180 () Bool)

(assert (=> bm!6568 (= c!11180 c!11178)))

(declare-fun b!74330 () Bool)

(declare-fun res!39312 () Bool)

(declare-fun e!48570 () Bool)

(assert (=> b!74330 (=> (not res!39312) (not e!48570))))

(declare-fun lt!33467 () List!1478)

(assert (=> b!74330 (= res!39312 (containsKey!137 lt!33467 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6569 () Bool)

(assert (=> bm!6569 (= call!6570 call!6572)))

(declare-fun b!74331 () Bool)

(assert (=> b!74331 (= e!48570 (contains!724 lt!33467 (tuple2!2123 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74332 () Bool)

(assert (=> b!74332 (= e!48571 call!6571)))

(declare-fun b!74333 () Bool)

(assert (=> b!74333 (= e!48568 (insertStrictlySorted!53 (t!5035 (toList!725 call!6373)) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74334 () Bool)

(assert (=> b!74334 (= c!11179 (and ((_ is Cons!1474) (toList!725 call!6373)) (bvsgt (_1!1072 (h!2061 (toList!725 call!6373))) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!74334 (= e!48569 e!48571)))

(declare-fun d!17499 () Bool)

(assert (=> d!17499 e!48570))

(declare-fun res!39311 () Bool)

(assert (=> d!17499 (=> (not res!39311) (not e!48570))))

(assert (=> d!17499 (= res!39311 (isStrictlySorted!292 lt!33467))))

(assert (=> d!17499 (= lt!33467 e!48567)))

(assert (=> d!17499 (= c!11178 (and ((_ is Cons!1474) (toList!725 call!6373)) (bvslt (_1!1072 (h!2061 (toList!725 call!6373))) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17499 (isStrictlySorted!292 (toList!725 call!6373))))

(assert (=> d!17499 (= (insertStrictlySorted!53 (toList!725 call!6373) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33467)))

(assert (= (and d!17499 c!11178) b!74327))

(assert (= (and d!17499 (not c!11178)) b!74329))

(assert (= (and b!74329 c!11181) b!74325))

(assert (= (and b!74329 (not c!11181)) b!74334))

(assert (= (and b!74334 c!11179) b!74332))

(assert (= (and b!74334 (not c!11179)) b!74326))

(assert (= (or b!74332 b!74326) bm!6567))

(assert (= (or b!74325 bm!6567) bm!6569))

(assert (= (or b!74327 bm!6569) bm!6568))

(assert (= (and bm!6568 c!11180) b!74333))

(assert (= (and bm!6568 (not c!11180)) b!74328))

(assert (= (and d!17499 res!39311) b!74330))

(assert (= (and b!74330 res!39312) b!74331))

(declare-fun m!73535 () Bool)

(assert (=> bm!6568 m!73535))

(declare-fun m!73537 () Bool)

(assert (=> b!74333 m!73537))

(declare-fun m!73539 () Bool)

(assert (=> b!74331 m!73539))

(declare-fun m!73541 () Bool)

(assert (=> d!17499 m!73541))

(declare-fun m!73543 () Bool)

(assert (=> d!17499 m!73543))

(declare-fun m!73545 () Bool)

(assert (=> b!74330 m!73545))

(assert (=> d!16919 d!17499))

(declare-fun d!17501 () Bool)

(declare-fun lt!33468 () Bool)

(assert (=> d!17501 (= lt!33468 (select (content!77 (toList!725 lt!32883)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48572 () Bool)

(assert (=> d!17501 (= lt!33468 e!48572)))

(declare-fun res!39313 () Bool)

(assert (=> d!17501 (=> (not res!39313) (not e!48572))))

(assert (=> d!17501 (= res!39313 ((_ is Cons!1474) (toList!725 lt!32883)))))

(assert (=> d!17501 (= (contains!724 (toList!725 lt!32883) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33468)))

(declare-fun b!74335 () Bool)

(declare-fun e!48573 () Bool)

(assert (=> b!74335 (= e!48572 e!48573)))

(declare-fun res!39314 () Bool)

(assert (=> b!74335 (=> res!39314 e!48573)))

(assert (=> b!74335 (= res!39314 (= (h!2061 (toList!725 lt!32883)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74336 () Bool)

(assert (=> b!74336 (= e!48573 (contains!724 (t!5035 (toList!725 lt!32883)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17501 res!39313) b!74335))

(assert (= (and b!74335 (not res!39314)) b!74336))

(declare-fun m!73547 () Bool)

(assert (=> d!17501 m!73547))

(declare-fun m!73549 () Bool)

(assert (=> d!17501 m!73549))

(declare-fun m!73551 () Bool)

(assert (=> b!74336 m!73551))

(assert (=> b!73417 d!17501))

(declare-fun d!17503 () Bool)

(declare-fun res!39316 () Bool)

(declare-fun e!48576 () Bool)

(assert (=> d!17503 (=> res!39316 e!48576)))

(assert (=> d!17503 (= res!39316 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(assert (=> d!17503 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791))) e!48576)))

(declare-fun b!74337 () Bool)

(declare-fun e!48575 () Bool)

(assert (=> b!74337 (= e!48576 e!48575)))

(declare-fun c!11182 () Bool)

(assert (=> b!74337 (= c!11182 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(declare-fun b!74338 () Bool)

(declare-fun e!48574 () Bool)

(declare-fun call!6573 () Bool)

(assert (=> b!74338 (= e!48574 call!6573)))

(declare-fun bm!6570 () Bool)

(assert (=> bm!6570 (= call!6573 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791))))))

(declare-fun b!74339 () Bool)

(assert (=> b!74339 (= e!48575 call!6573)))

(declare-fun b!74340 () Bool)

(assert (=> b!74340 (= e!48575 e!48574)))

(declare-fun lt!33470 () (_ BitVec 64))

(assert (=> b!74340 (= lt!33470 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000))))

(declare-fun lt!33469 () Unit!2078)

(assert (=> b!74340 (= lt!33469 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 (_2!1073 lt!32791)) lt!33470 #b00000000000000000000000000000000))))

(assert (=> b!74340 (arrayContainsKey!0 (_keys!3865 (_2!1073 lt!32791)) lt!33470 #b00000000000000000000000000000000)))

(declare-fun lt!33471 () Unit!2078)

(assert (=> b!74340 (= lt!33471 lt!33469)))

(declare-fun res!39315 () Bool)

(assert (=> b!74340 (= res!39315 (= (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000) (_keys!3865 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791))) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!74340 (=> (not res!39315) (not e!48574))))

(assert (= (and d!17503 (not res!39316)) b!74337))

(assert (= (and b!74337 c!11182) b!74340))

(assert (= (and b!74337 (not c!11182)) b!74339))

(assert (= (and b!74340 res!39315) b!74338))

(assert (= (or b!74338 b!74339) bm!6570))

(assert (=> b!74337 m!73313))

(assert (=> b!74337 m!73313))

(assert (=> b!74337 m!73315))

(declare-fun m!73553 () Bool)

(assert (=> bm!6570 m!73553))

(assert (=> b!74340 m!73313))

(declare-fun m!73555 () Bool)

(assert (=> b!74340 m!73555))

(declare-fun m!73557 () Bool)

(assert (=> b!74340 m!73557))

(assert (=> b!74340 m!73313))

(declare-fun m!73559 () Bool)

(assert (=> b!74340 m!73559))

(assert (=> b!73454 d!17503))

(assert (=> d!16939 d!16937))

(declare-fun d!17505 () Bool)

(assert (=> d!17505 (= (getValueByKey!133 lt!32609 (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542)))))

(assert (=> d!17505 true))

(declare-fun _$22!386 () Unit!2078)

(assert (=> d!17505 (= (choose!412 lt!32609 (_1!1072 lt!32542) (_2!1072 lt!32542)) _$22!386)))

(declare-fun bs!3212 () Bool)

(assert (= bs!3212 d!17505))

(assert (=> bs!3212 m!71357))

(assert (=> d!16939 d!17505))

(declare-fun d!17507 () Bool)

(declare-fun res!39317 () Bool)

(declare-fun e!48577 () Bool)

(assert (=> d!17507 (=> res!39317 e!48577)))

(assert (=> d!17507 (= res!39317 (or ((_ is Nil!1475) lt!32609) ((_ is Nil!1475) (t!5035 lt!32609))))))

(assert (=> d!17507 (= (isStrictlySorted!292 lt!32609) e!48577)))

(declare-fun b!74341 () Bool)

(declare-fun e!48578 () Bool)

(assert (=> b!74341 (= e!48577 e!48578)))

(declare-fun res!39318 () Bool)

(assert (=> b!74341 (=> (not res!39318) (not e!48578))))

(assert (=> b!74341 (= res!39318 (bvslt (_1!1072 (h!2061 lt!32609)) (_1!1072 (h!2061 (t!5035 lt!32609)))))))

(declare-fun b!74342 () Bool)

(assert (=> b!74342 (= e!48578 (isStrictlySorted!292 (t!5035 lt!32609)))))

(assert (= (and d!17507 (not res!39317)) b!74341))

(assert (= (and b!74341 res!39318) b!74342))

(declare-fun m!73561 () Bool)

(assert (=> b!74342 m!73561))

(assert (=> d!16939 d!17507))

(declare-fun d!17509 () Bool)

(assert (=> d!17509 (= (apply!75 lt!32860 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32860) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3213 () Bool)

(assert (= bs!3213 d!17509))

(assert (=> bs!3213 m!73465))

(assert (=> bs!3213 m!73465))

(declare-fun m!73563 () Bool)

(assert (=> bs!3213 m!73563))

(assert (=> b!73379 d!17509))

(declare-fun b!74343 () Bool)

(declare-fun e!48582 () Bool)

(declare-fun e!48584 () Bool)

(assert (=> b!74343 (= e!48582 e!48584)))

(declare-fun res!39321 () Bool)

(declare-fun call!6579 () Bool)

(assert (=> b!74343 (= res!39321 call!6579)))

(assert (=> b!74343 (=> (not res!39321) (not e!48584))))

(declare-fun b!74344 () Bool)

(declare-fun e!48585 () Bool)

(assert (=> b!74344 (= e!48585 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(declare-fun b!74345 () Bool)

(declare-fun c!11188 () Bool)

(assert (=> b!74345 (= c!11188 (and (not (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48589 () ListLongMap!1419)

(declare-fun e!48591 () ListLongMap!1419)

(assert (=> b!74345 (= e!48589 e!48591)))

(declare-fun bm!6571 () Bool)

(declare-fun call!6574 () ListLongMap!1419)

(declare-fun call!6577 () ListLongMap!1419)

(assert (=> bm!6571 (= call!6574 call!6577)))

(declare-fun b!74346 () Bool)

(declare-fun res!39322 () Bool)

(declare-fun e!48579 () Bool)

(assert (=> b!74346 (=> (not res!39322) (not e!48579))))

(declare-fun e!48580 () Bool)

(assert (=> b!74346 (= res!39322 e!48580)))

(declare-fun res!39327 () Bool)

(assert (=> b!74346 (=> res!39327 e!48580)))

(assert (=> b!74346 (= res!39327 (not e!48585))))

(declare-fun res!39325 () Bool)

(assert (=> b!74346 (=> (not res!39325) (not e!48585))))

(assert (=> b!74346 (= res!39325 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(declare-fun bm!6572 () Bool)

(declare-fun call!6575 () Bool)

(declare-fun lt!33482 () ListLongMap!1419)

(assert (=> bm!6572 (= call!6575 (contains!723 lt!33482 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74347 () Bool)

(declare-fun res!39319 () Bool)

(assert (=> b!74347 (=> (not res!39319) (not e!48579))))

(assert (=> b!74347 (= res!39319 e!48582)))

(declare-fun c!11186 () Bool)

(assert (=> b!74347 (= c!11186 (not (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6573 () Bool)

(declare-fun call!6580 () ListLongMap!1419)

(declare-fun call!6578 () ListLongMap!1419)

(assert (=> bm!6573 (= call!6580 call!6578)))

(declare-fun b!74348 () Bool)

(declare-fun e!48581 () Unit!2078)

(declare-fun Unit!2132 () Unit!2078)

(assert (=> b!74348 (= e!48581 Unit!2132)))

(declare-fun b!74349 () Bool)

(declare-fun e!48586 () Bool)

(assert (=> b!74349 (= e!48579 e!48586)))

(declare-fun c!11184 () Bool)

(assert (=> b!74349 (= c!11184 (not (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74350 () Bool)

(assert (=> b!74350 (= e!48591 call!6580)))

(declare-fun bm!6574 () Bool)

(declare-fun call!6576 () ListLongMap!1419)

(assert (=> bm!6574 (= call!6576 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))))))

(declare-fun b!74351 () Bool)

(assert (=> b!74351 (= e!48586 (not call!6575))))

(declare-fun b!74352 () Bool)

(declare-fun e!48583 () ListLongMap!1419)

(assert (=> b!74352 (= e!48583 (+!94 call!6578 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (_2!1073 lt!32791)))))))

(declare-fun b!74353 () Bool)

(declare-fun lt!33478 () Unit!2078)

(assert (=> b!74353 (= e!48581 lt!33478)))

(declare-fun lt!33472 () ListLongMap!1419)

(assert (=> b!74353 (= lt!33472 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))))))

(declare-fun lt!33491 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33491 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33474 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33474 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000))))

(declare-fun lt!33487 () Unit!2078)

(assert (=> b!74353 (= lt!33487 (addStillContains!51 lt!33472 lt!33491 (zeroValue!2115 (_2!1073 lt!32791)) lt!33474))))

(assert (=> b!74353 (contains!723 (+!94 lt!33472 (tuple2!2123 lt!33491 (zeroValue!2115 (_2!1073 lt!32791)))) lt!33474)))

(declare-fun lt!33477 () Unit!2078)

(assert (=> b!74353 (= lt!33477 lt!33487)))

(declare-fun lt!33475 () ListLongMap!1419)

(assert (=> b!74353 (= lt!33475 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))))))

(declare-fun lt!33480 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33480 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33479 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33479 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000))))

(declare-fun lt!33473 () Unit!2078)

(assert (=> b!74353 (= lt!33473 (addApplyDifferent!51 lt!33475 lt!33480 (minValue!2115 (_2!1073 lt!32791)) lt!33479))))

(assert (=> b!74353 (= (apply!75 (+!94 lt!33475 (tuple2!2123 lt!33480 (minValue!2115 (_2!1073 lt!32791)))) lt!33479) (apply!75 lt!33475 lt!33479))))

(declare-fun lt!33483 () Unit!2078)

(assert (=> b!74353 (= lt!33483 lt!33473)))

(declare-fun lt!33486 () ListLongMap!1419)

(assert (=> b!74353 (= lt!33486 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))))))

(declare-fun lt!33484 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33484 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33485 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33485 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000))))

(declare-fun lt!33492 () Unit!2078)

(assert (=> b!74353 (= lt!33492 (addApplyDifferent!51 lt!33486 lt!33484 (zeroValue!2115 (_2!1073 lt!32791)) lt!33485))))

(assert (=> b!74353 (= (apply!75 (+!94 lt!33486 (tuple2!2123 lt!33484 (zeroValue!2115 (_2!1073 lt!32791)))) lt!33485) (apply!75 lt!33486 lt!33485))))

(declare-fun lt!33481 () Unit!2078)

(assert (=> b!74353 (= lt!33481 lt!33492)))

(declare-fun lt!33489 () ListLongMap!1419)

(assert (=> b!74353 (= lt!33489 (getCurrentListMapNoExtraKeys!59 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))))))

(declare-fun lt!33490 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33490 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33488 () (_ BitVec 64))

(assert (=> b!74353 (= lt!33488 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000))))

(assert (=> b!74353 (= lt!33478 (addApplyDifferent!51 lt!33489 lt!33490 (minValue!2115 (_2!1073 lt!32791)) lt!33488))))

(assert (=> b!74353 (= (apply!75 (+!94 lt!33489 (tuple2!2123 lt!33490 (minValue!2115 (_2!1073 lt!32791)))) lt!33488) (apply!75 lt!33489 lt!33488))))

(declare-fun b!74354 () Bool)

(declare-fun e!48587 () Bool)

(assert (=> b!74354 (= e!48587 (= (apply!75 lt!33482 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 (_2!1073 lt!32791))))))

(declare-fun b!74355 () Bool)

(assert (=> b!74355 (= e!48584 (= (apply!75 lt!33482 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 (_2!1073 lt!32791))))))

(declare-fun b!74356 () Bool)

(assert (=> b!74356 (= e!48591 call!6574)))

(declare-fun c!11187 () Bool)

(declare-fun c!11183 () Bool)

(declare-fun bm!6575 () Bool)

(assert (=> bm!6575 (= call!6578 (+!94 (ite c!11183 call!6576 (ite c!11187 call!6577 call!6574)) (ite (or c!11183 c!11187) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (_2!1073 lt!32791))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (_2!1073 lt!32791))))))))

(declare-fun b!74357 () Bool)

(assert (=> b!74357 (= e!48583 e!48589)))

(assert (=> b!74357 (= c!11187 (and (not (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74358 () Bool)

(declare-fun e!48590 () Bool)

(assert (=> b!74358 (= e!48590 (= (apply!75 lt!33482 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (_values!2196 (_2!1073 lt!32791))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 (_2!1073 lt!32791)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74358 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (_values!2196 (_2!1073 lt!32791)))))))

(assert (=> b!74358 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(declare-fun b!74359 () Bool)

(assert (=> b!74359 (= e!48586 e!48587)))

(declare-fun res!39326 () Bool)

(assert (=> b!74359 (= res!39326 call!6575)))

(assert (=> b!74359 (=> (not res!39326) (not e!48587))))

(declare-fun d!17511 () Bool)

(assert (=> d!17511 e!48579))

(declare-fun res!39323 () Bool)

(assert (=> d!17511 (=> (not res!39323) (not e!48579))))

(assert (=> d!17511 (= res!39323 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))))

(declare-fun lt!33493 () ListLongMap!1419)

(assert (=> d!17511 (= lt!33482 lt!33493)))

(declare-fun lt!33476 () Unit!2078)

(assert (=> d!17511 (= lt!33476 e!48581)))

(declare-fun c!11185 () Bool)

(declare-fun e!48588 () Bool)

(assert (=> d!17511 (= c!11185 e!48588)))

(declare-fun res!39320 () Bool)

(assert (=> d!17511 (=> (not res!39320) (not e!48588))))

(assert (=> d!17511 (= res!39320 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(assert (=> d!17511 (= lt!33493 e!48583)))

(assert (=> d!17511 (= c!11183 (and (not (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17511 (validMask!0 (mask!6180 (_2!1073 lt!32791)))))

(assert (=> d!17511 (= (getCurrentListMap!422 (_keys!3865 (_2!1073 lt!32791)) (_values!2196 (_2!1073 lt!32791)) (mask!6180 (_2!1073 lt!32791)) (extraKeys!2072 (_2!1073 lt!32791)) (zeroValue!2115 (_2!1073 lt!32791)) (minValue!2115 (_2!1073 lt!32791)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!32791))) lt!33482)))

(declare-fun b!74360 () Bool)

(assert (=> b!74360 (= e!48582 (not call!6579))))

(declare-fun b!74361 () Bool)

(assert (=> b!74361 (= e!48580 e!48590)))

(declare-fun res!39324 () Bool)

(assert (=> b!74361 (=> (not res!39324) (not e!48590))))

(assert (=> b!74361 (= res!39324 (contains!723 lt!33482 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(assert (=> b!74361 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(declare-fun bm!6576 () Bool)

(assert (=> bm!6576 (= call!6579 (contains!723 lt!33482 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6577 () Bool)

(assert (=> bm!6577 (= call!6577 call!6576)))

(declare-fun b!74362 () Bool)

(assert (=> b!74362 (= e!48589 call!6580)))

(declare-fun b!74363 () Bool)

(assert (=> b!74363 (= e!48588 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(assert (= (and d!17511 c!11183) b!74352))

(assert (= (and d!17511 (not c!11183)) b!74357))

(assert (= (and b!74357 c!11187) b!74362))

(assert (= (and b!74357 (not c!11187)) b!74345))

(assert (= (and b!74345 c!11188) b!74350))

(assert (= (and b!74345 (not c!11188)) b!74356))

(assert (= (or b!74350 b!74356) bm!6571))

(assert (= (or b!74362 bm!6571) bm!6577))

(assert (= (or b!74362 b!74350) bm!6573))

(assert (= (or b!74352 bm!6577) bm!6574))

(assert (= (or b!74352 bm!6573) bm!6575))

(assert (= (and d!17511 res!39320) b!74363))

(assert (= (and d!17511 c!11185) b!74353))

(assert (= (and d!17511 (not c!11185)) b!74348))

(assert (= (and d!17511 res!39323) b!74346))

(assert (= (and b!74346 res!39325) b!74344))

(assert (= (and b!74346 (not res!39327)) b!74361))

(assert (= (and b!74361 res!39324) b!74358))

(assert (= (and b!74346 res!39322) b!74347))

(assert (= (and b!74347 c!11186) b!74343))

(assert (= (and b!74347 (not c!11186)) b!74360))

(assert (= (and b!74343 res!39321) b!74355))

(assert (= (or b!74343 b!74360) bm!6576))

(assert (= (and b!74347 res!39319) b!74349))

(assert (= (and b!74349 c!11184) b!74359))

(assert (= (and b!74349 (not c!11184)) b!74351))

(assert (= (and b!74359 res!39326) b!74354))

(assert (= (or b!74359 b!74351) bm!6572))

(declare-fun b_lambda!3333 () Bool)

(assert (=> (not b_lambda!3333) (not b!74358)))

(declare-fun tb!1541 () Bool)

(declare-fun t!5047 () Bool)

(assert (=> (and b!72873 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 (_2!1073 lt!32791))) t!5047) tb!1541))

(declare-fun result!2697 () Bool)

(assert (=> tb!1541 (= result!2697 tp_is_empty!2475)))

(assert (=> b!74358 t!5047))

(declare-fun b_and!4563 () Bool)

(assert (= b_and!4559 (and (=> t!5047 result!2697) b_and!4563)))

(declare-fun tb!1543 () Bool)

(declare-fun t!5049 () Bool)

(assert (=> (and b!72882 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (_2!1073 lt!32791))) t!5049) tb!1543))

(declare-fun result!2699 () Bool)

(assert (= result!2699 result!2697))

(assert (=> b!74358 t!5049))

(declare-fun b_and!4565 () Bool)

(assert (= b_and!4561 (and (=> t!5049 result!2699) b_and!4565)))

(assert (=> b!74358 m!73313))

(declare-fun m!73565 () Bool)

(assert (=> b!74358 m!73565))

(declare-fun m!73567 () Bool)

(assert (=> b!74358 m!73567))

(declare-fun m!73569 () Bool)

(assert (=> b!74358 m!73569))

(assert (=> b!74358 m!73313))

(declare-fun m!73571 () Bool)

(assert (=> b!74358 m!73571))

(assert (=> b!74358 m!73567))

(assert (=> b!74358 m!73565))

(declare-fun m!73573 () Bool)

(assert (=> bm!6574 m!73573))

(declare-fun m!73575 () Bool)

(assert (=> d!17511 m!73575))

(declare-fun m!73577 () Bool)

(assert (=> bm!6572 m!73577))

(declare-fun m!73579 () Bool)

(assert (=> bm!6576 m!73579))

(declare-fun m!73581 () Bool)

(assert (=> bm!6575 m!73581))

(declare-fun m!73583 () Bool)

(assert (=> b!74355 m!73583))

(assert (=> b!74344 m!73313))

(assert (=> b!74344 m!73313))

(assert (=> b!74344 m!73315))

(assert (=> b!74363 m!73313))

(assert (=> b!74363 m!73313))

(assert (=> b!74363 m!73315))

(declare-fun m!73585 () Bool)

(assert (=> b!74352 m!73585))

(declare-fun m!73587 () Bool)

(assert (=> b!74354 m!73587))

(declare-fun m!73589 () Bool)

(assert (=> b!74353 m!73589))

(declare-fun m!73591 () Bool)

(assert (=> b!74353 m!73591))

(assert (=> b!74353 m!73573))

(declare-fun m!73593 () Bool)

(assert (=> b!74353 m!73593))

(assert (=> b!74353 m!73313))

(declare-fun m!73595 () Bool)

(assert (=> b!74353 m!73595))

(declare-fun m!73597 () Bool)

(assert (=> b!74353 m!73597))

(declare-fun m!73599 () Bool)

(assert (=> b!74353 m!73599))

(declare-fun m!73601 () Bool)

(assert (=> b!74353 m!73601))

(declare-fun m!73603 () Bool)

(assert (=> b!74353 m!73603))

(declare-fun m!73605 () Bool)

(assert (=> b!74353 m!73605))

(declare-fun m!73607 () Bool)

(assert (=> b!74353 m!73607))

(declare-fun m!73609 () Bool)

(assert (=> b!74353 m!73609))

(assert (=> b!74353 m!73607))

(declare-fun m!73611 () Bool)

(assert (=> b!74353 m!73611))

(assert (=> b!74353 m!73589))

(declare-fun m!73613 () Bool)

(assert (=> b!74353 m!73613))

(assert (=> b!74353 m!73601))

(assert (=> b!74353 m!73591))

(declare-fun m!73615 () Bool)

(assert (=> b!74353 m!73615))

(declare-fun m!73617 () Bool)

(assert (=> b!74353 m!73617))

(assert (=> b!74361 m!73313))

(assert (=> b!74361 m!73313))

(declare-fun m!73619 () Bool)

(assert (=> b!74361 m!73619))

(assert (=> d!16989 d!17511))

(declare-fun d!17513 () Bool)

(assert (=> d!17513 (= (apply!75 lt!32947 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1142 (getValueByKey!133 (toList!725 lt!32947) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3214 () Bool)

(assert (= bs!3214 d!17513))

(declare-fun m!73621 () Bool)

(assert (=> bs!3214 m!73621))

(assert (=> bs!3214 m!73621))

(declare-fun m!73623 () Bool)

(assert (=> bs!3214 m!73623))

(assert (=> b!73492 d!17513))

(declare-fun e!48593 () Option!139)

(declare-fun b!74366 () Bool)

(assert (=> b!74366 (= e!48593 (getValueByKey!133 (t!5035 (toList!725 lt!32824)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun d!17515 () Bool)

(declare-fun c!11189 () Bool)

(assert (=> d!17515 (= c!11189 (and ((_ is Cons!1474) (toList!725 lt!32824)) (= (_1!1072 (h!2061 (toList!725 lt!32824))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48592 () Option!139)

(assert (=> d!17515 (= (getValueByKey!133 (toList!725 lt!32824) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) e!48592)))

(declare-fun b!74365 () Bool)

(assert (=> b!74365 (= e!48592 e!48593)))

(declare-fun c!11190 () Bool)

(assert (=> b!74365 (= c!11190 (and ((_ is Cons!1474) (toList!725 lt!32824)) (not (= (_1!1072 (h!2061 (toList!725 lt!32824))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!74364 () Bool)

(assert (=> b!74364 (= e!48592 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32824)))))))

(declare-fun b!74367 () Bool)

(assert (=> b!74367 (= e!48593 None!137)))

(assert (= (and d!17515 c!11189) b!74364))

(assert (= (and d!17515 (not c!11189)) b!74365))

(assert (= (and b!74365 c!11190) b!74366))

(assert (= (and b!74365 (not c!11190)) b!74367))

(declare-fun m!73625 () Bool)

(assert (=> b!74366 m!73625))

(assert (=> b!73288 d!17515))

(declare-fun b!74370 () Bool)

(declare-fun e!48595 () Option!139)

(assert (=> b!74370 (= e!48595 (getValueByKey!133 (t!5035 (toList!725 lt!33111)) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun c!11191 () Bool)

(declare-fun d!17517 () Bool)

(assert (=> d!17517 (= c!11191 (and ((_ is Cons!1474) (toList!725 lt!33111)) (= (_1!1072 (h!2061 (toList!725 lt!33111))) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48594 () Option!139)

(assert (=> d!17517 (= (getValueByKey!133 (toList!725 lt!33111) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48594)))

(declare-fun b!74369 () Bool)

(assert (=> b!74369 (= e!48594 e!48595)))

(declare-fun c!11192 () Bool)

(assert (=> b!74369 (= c!11192 (and ((_ is Cons!1474) (toList!725 lt!33111)) (not (= (_1!1072 (h!2061 (toList!725 lt!33111))) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74368 () Bool)

(assert (=> b!74368 (= e!48594 (Some!138 (_2!1072 (h!2061 (toList!725 lt!33111)))))))

(declare-fun b!74371 () Bool)

(assert (=> b!74371 (= e!48595 None!137)))

(assert (= (and d!17517 c!11191) b!74368))

(assert (= (and d!17517 (not c!11191)) b!74369))

(assert (= (and b!74369 c!11192) b!74370))

(assert (= (and b!74369 (not c!11192)) b!74371))

(declare-fun m!73627 () Bool)

(assert (=> b!74370 m!73627))

(assert (=> b!73658 d!17517))

(assert (=> d!16931 d!17069))

(assert (=> b!73479 d!17385))

(assert (=> b!73479 d!17387))

(assert (=> b!73265 d!16847))

(declare-fun d!17519 () Bool)

(declare-fun e!48597 () Bool)

(assert (=> d!17519 e!48597))

(declare-fun res!39328 () Bool)

(assert (=> d!17519 (=> res!39328 e!48597)))

(declare-fun lt!33497 () Bool)

(assert (=> d!17519 (= res!39328 (not lt!33497))))

(declare-fun lt!33496 () Bool)

(assert (=> d!17519 (= lt!33497 lt!33496)))

(declare-fun lt!33495 () Unit!2078)

(declare-fun e!48596 () Unit!2078)

(assert (=> d!17519 (= lt!33495 e!48596)))

(declare-fun c!11193 () Bool)

(assert (=> d!17519 (= c!11193 lt!33496)))

(assert (=> d!17519 (= lt!33496 (containsKey!137 (toList!725 lt!32947) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17519 (= (contains!723 lt!32947 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33497)))

(declare-fun b!74372 () Bool)

(declare-fun lt!33494 () Unit!2078)

(assert (=> b!74372 (= e!48596 lt!33494)))

(assert (=> b!74372 (= lt!33494 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32947) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74372 (isDefined!86 (getValueByKey!133 (toList!725 lt!32947) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74373 () Bool)

(declare-fun Unit!2133 () Unit!2078)

(assert (=> b!74373 (= e!48596 Unit!2133)))

(declare-fun b!74374 () Bool)

(assert (=> b!74374 (= e!48597 (isDefined!86 (getValueByKey!133 (toList!725 lt!32947) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17519 c!11193) b!74372))

(assert (= (and d!17519 (not c!11193)) b!74373))

(assert (= (and d!17519 (not res!39328)) b!74374))

(declare-fun m!73629 () Bool)

(assert (=> d!17519 m!73629))

(declare-fun m!73631 () Bool)

(assert (=> b!74372 m!73631))

(assert (=> b!74372 m!73621))

(assert (=> b!74372 m!73621))

(declare-fun m!73633 () Bool)

(assert (=> b!74372 m!73633))

(assert (=> b!74374 m!73621))

(assert (=> b!74374 m!73621))

(assert (=> b!74374 m!73633))

(assert (=> bm!6483 d!17519))

(declare-fun b!74377 () Bool)

(declare-fun e!48599 () Option!139)

(assert (=> b!74377 (= e!48599 (getValueByKey!133 (t!5035 (t!5035 (toList!725 lt!32622))) (_1!1072 lt!32538)))))

(declare-fun d!17521 () Bool)

(declare-fun c!11194 () Bool)

(assert (=> d!17521 (= c!11194 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32622))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32622)))) (_1!1072 lt!32538))))))

(declare-fun e!48598 () Option!139)

(assert (=> d!17521 (= (getValueByKey!133 (t!5035 (toList!725 lt!32622)) (_1!1072 lt!32538)) e!48598)))

(declare-fun b!74376 () Bool)

(assert (=> b!74376 (= e!48598 e!48599)))

(declare-fun c!11195 () Bool)

(assert (=> b!74376 (= c!11195 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32622))) (not (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32622)))) (_1!1072 lt!32538)))))))

(declare-fun b!74375 () Bool)

(assert (=> b!74375 (= e!48598 (Some!138 (_2!1072 (h!2061 (t!5035 (toList!725 lt!32622))))))))

(declare-fun b!74378 () Bool)

(assert (=> b!74378 (= e!48599 None!137)))

(assert (= (and d!17521 c!11194) b!74375))

(assert (= (and d!17521 (not c!11194)) b!74376))

(assert (= (and b!74376 c!11195) b!74377))

(assert (= (and b!74376 (not c!11195)) b!74378))

(declare-fun m!73635 () Bool)

(assert (=> b!74377 m!73635))

(assert (=> b!73390 d!17521))

(declare-fun d!17523 () Bool)

(declare-fun lt!33498 () Bool)

(assert (=> d!17523 (= lt!33498 (select (content!77 lt!33126) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun e!48600 () Bool)

(assert (=> d!17523 (= lt!33498 e!48600)))

(declare-fun res!39329 () Bool)

(assert (=> d!17523 (=> (not res!39329) (not e!48600))))

(assert (=> d!17523 (= res!39329 ((_ is Cons!1474) lt!33126))))

(assert (=> d!17523 (= (contains!724 lt!33126 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))) lt!33498)))

(declare-fun b!74379 () Bool)

(declare-fun e!48601 () Bool)

(assert (=> b!74379 (= e!48600 e!48601)))

(declare-fun res!39330 () Bool)

(assert (=> b!74379 (=> res!39330 e!48601)))

(assert (=> b!74379 (= res!39330 (= (h!2061 lt!33126) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!74380 () Bool)

(assert (=> b!74380 (= e!48601 (contains!724 (t!5035 lt!33126) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(assert (= (and d!17523 res!39329) b!74379))

(assert (= (and b!74379 (not res!39330)) b!74380))

(declare-fun m!73637 () Bool)

(assert (=> d!17523 m!73637))

(declare-fun m!73639 () Bool)

(assert (=> d!17523 m!73639))

(declare-fun m!73641 () Bool)

(assert (=> b!74380 m!73641))

(assert (=> b!73680 d!17523))

(declare-fun d!17525 () Bool)

(assert (=> d!17525 (= (get!1140 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2529 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73304 d!17525))

(declare-fun d!17527 () Bool)

(declare-fun res!39331 () Bool)

(declare-fun e!48602 () Bool)

(assert (=> d!17527 (=> res!39331 e!48602)))

(assert (=> d!17527 (= res!39331 (or ((_ is Nil!1475) lt!33126) ((_ is Nil!1475) (t!5035 lt!33126))))))

(assert (=> d!17527 (= (isStrictlySorted!292 lt!33126) e!48602)))

(declare-fun b!74381 () Bool)

(declare-fun e!48603 () Bool)

(assert (=> b!74381 (= e!48602 e!48603)))

(declare-fun res!39332 () Bool)

(assert (=> b!74381 (=> (not res!39332) (not e!48603))))

(assert (=> b!74381 (= res!39332 (bvslt (_1!1072 (h!2061 lt!33126)) (_1!1072 (h!2061 (t!5035 lt!33126)))))))

(declare-fun b!74382 () Bool)

(assert (=> b!74382 (= e!48603 (isStrictlySorted!292 (t!5035 lt!33126)))))

(assert (= (and d!17527 (not res!39331)) b!74381))

(assert (= (and b!74381 res!39332) b!74382))

(declare-fun m!73643 () Bool)

(assert (=> b!74382 m!73643))

(assert (=> d!17033 d!17527))

(declare-fun d!17529 () Bool)

(declare-fun res!39333 () Bool)

(declare-fun e!48604 () Bool)

(assert (=> d!17529 (=> res!39333 e!48604)))

(assert (=> d!17529 (= res!39333 (or ((_ is Nil!1475) (toList!725 lt!32540)) ((_ is Nil!1475) (t!5035 (toList!725 lt!32540)))))))

(assert (=> d!17529 (= (isStrictlySorted!292 (toList!725 lt!32540)) e!48604)))

(declare-fun b!74383 () Bool)

(declare-fun e!48605 () Bool)

(assert (=> b!74383 (= e!48604 e!48605)))

(declare-fun res!39334 () Bool)

(assert (=> b!74383 (=> (not res!39334) (not e!48605))))

(assert (=> b!74383 (= res!39334 (bvslt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540))))))))

(declare-fun b!74384 () Bool)

(assert (=> b!74384 (= e!48605 (isStrictlySorted!292 (t!5035 (toList!725 lt!32540))))))

(assert (= (and d!17529 (not res!39333)) b!74383))

(assert (= (and b!74383 res!39334) b!74384))

(assert (=> b!74384 m!72501))

(assert (=> d!17033 d!17529))

(assert (=> b!73420 d!17319))

(assert (=> b!73420 d!17321))

(declare-fun d!17531 () Bool)

(declare-fun res!39335 () Bool)

(declare-fun e!48606 () Bool)

(assert (=> d!17531 (=> res!39335 e!48606)))

(assert (=> d!17531 (= res!39335 (and ((_ is Cons!1474) (toList!725 call!6442)) (= (_1!1072 (h!2061 (toList!725 call!6442))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))))

(assert (=> d!17531 (= (containsKey!137 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))) e!48606)))

(declare-fun b!74385 () Bool)

(declare-fun e!48607 () Bool)

(assert (=> b!74385 (= e!48606 e!48607)))

(declare-fun res!39336 () Bool)

(assert (=> b!74385 (=> (not res!39336) (not e!48607))))

(assert (=> b!74385 (= res!39336 (and (or (not ((_ is Cons!1474) (toList!725 call!6442))) (bvsle (_1!1072 (h!2061 (toList!725 call!6442))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))) ((_ is Cons!1474) (toList!725 call!6442)) (bvslt (_1!1072 (h!2061 (toList!725 call!6442))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))))

(declare-fun b!74386 () Bool)

(assert (=> b!74386 (= e!48607 (containsKey!137 (t!5035 (toList!725 call!6442)) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (= (and d!17531 (not res!39335)) b!74385))

(assert (= (and b!74385 res!39336) b!74386))

(assert (=> b!74386 m!71521))

(declare-fun m!73645 () Bool)

(assert (=> b!74386 m!73645))

(assert (=> d!17035 d!17531))

(assert (=> b!73588 d!17455))

(declare-fun d!17533 () Bool)

(assert (=> d!17533 (= ($colon$colon!66 e!48185 (ite c!10994 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542)))) (Cons!1474 (ite c!10994 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))) e!48185))))

(assert (=> bm!6512 d!17533))

(declare-fun lt!33499 () Bool)

(declare-fun d!17535 () Bool)

(assert (=> d!17535 (= lt!33499 (select (content!77 (toList!725 lt!32895)) (tuple2!2123 lt!32599 lt!32596)))))

(declare-fun e!48608 () Bool)

(assert (=> d!17535 (= lt!33499 e!48608)))

(declare-fun res!39337 () Bool)

(assert (=> d!17535 (=> (not res!39337) (not e!48608))))

(assert (=> d!17535 (= res!39337 ((_ is Cons!1474) (toList!725 lt!32895)))))

(assert (=> d!17535 (= (contains!724 (toList!725 lt!32895) (tuple2!2123 lt!32599 lt!32596)) lt!33499)))

(declare-fun b!74387 () Bool)

(declare-fun e!48609 () Bool)

(assert (=> b!74387 (= e!48608 e!48609)))

(declare-fun res!39338 () Bool)

(assert (=> b!74387 (=> res!39338 e!48609)))

(assert (=> b!74387 (= res!39338 (= (h!2061 (toList!725 lt!32895)) (tuple2!2123 lt!32599 lt!32596)))))

(declare-fun b!74388 () Bool)

(assert (=> b!74388 (= e!48609 (contains!724 (t!5035 (toList!725 lt!32895)) (tuple2!2123 lt!32599 lt!32596)))))

(assert (= (and d!17535 res!39337) b!74387))

(assert (= (and b!74387 (not res!39338)) b!74388))

(declare-fun m!73647 () Bool)

(assert (=> d!17535 m!73647))

(declare-fun m!73649 () Bool)

(assert (=> d!17535 m!73649))

(declare-fun m!73651 () Bool)

(assert (=> b!74388 m!73651))

(assert (=> b!73424 d!17535))

(declare-fun d!17537 () Bool)

(assert (=> d!17537 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (getCurrentListMap!422 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17537 true))

(declare-fun _$5!80 () Unit!2078)

(assert (=> d!17537 (= (choose!421 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)) _$5!80)))

(declare-fun bs!3215 () Bool)

(assert (= bs!3215 d!17537))

(assert (=> bs!3215 m!71415))

(assert (=> bs!3215 m!71415))

(assert (=> bs!3215 m!72021))

(assert (=> bs!3215 m!71509))

(assert (=> bs!3215 m!72317))

(assert (=> d!17039 d!17537))

(assert (=> d!17039 d!17069))

(declare-fun d!17539 () Bool)

(assert (=> d!17539 (= (isEmpty!318 (toList!725 lt!32594)) ((_ is Nil!1475) (toList!725 lt!32594)))))

(assert (=> d!16987 d!17539))

(declare-fun d!17541 () Bool)

(declare-fun e!48610 () Bool)

(assert (=> d!17541 e!48610))

(declare-fun res!39339 () Bool)

(assert (=> d!17541 (=> (not res!39339) (not e!48610))))

(declare-fun lt!33502 () ListLongMap!1419)

(assert (=> d!17541 (= res!39339 (contains!723 lt!33502 (_1!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(declare-fun lt!33501 () List!1478)

(assert (=> d!17541 (= lt!33502 (ListLongMap!1420 lt!33501))))

(declare-fun lt!33503 () Unit!2078)

(declare-fun lt!33500 () Unit!2078)

(assert (=> d!17541 (= lt!33503 lt!33500)))

(assert (=> d!17541 (= (getValueByKey!133 lt!33501 (_1!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))) (Some!138 (_2!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(assert (=> d!17541 (= lt!33500 (lemmaContainsTupThenGetReturnValue!50 lt!33501 (_1!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (_2!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(assert (=> d!17541 (= lt!33501 (insertStrictlySorted!53 (toList!725 (ite c!10928 call!6473 (ite c!10932 call!6474 call!6471))) (_1!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (_2!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(assert (=> d!17541 (= (+!94 (ite c!10928 call!6473 (ite c!10932 call!6474 call!6471)) (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) lt!33502)))

(declare-fun b!74389 () Bool)

(declare-fun res!39340 () Bool)

(assert (=> b!74389 (=> (not res!39340) (not e!48610))))

(assert (=> b!74389 (= res!39340 (= (getValueByKey!133 (toList!725 lt!33502) (_1!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))) (Some!138 (_2!1072 (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))))

(declare-fun b!74390 () Bool)

(assert (=> b!74390 (= e!48610 (contains!724 (toList!725 lt!33502) (ite (or c!10928 c!10932) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (= (and d!17541 res!39339) b!74389))

(assert (= (and b!74389 res!39340) b!74390))

(declare-fun m!73653 () Bool)

(assert (=> d!17541 m!73653))

(declare-fun m!73655 () Bool)

(assert (=> d!17541 m!73655))

(declare-fun m!73657 () Bool)

(assert (=> d!17541 m!73657))

(declare-fun m!73659 () Bool)

(assert (=> d!17541 m!73659))

(declare-fun m!73661 () Bool)

(assert (=> b!74389 m!73661))

(declare-fun m!73663 () Bool)

(assert (=> b!74390 m!73663))

(assert (=> bm!6472 d!17541))

(assert (=> b!73695 d!17331))

(assert (=> b!73695 d!16979))

(declare-fun d!17543 () Bool)

(declare-fun e!48612 () Bool)

(assert (=> d!17543 e!48612))

(declare-fun res!39341 () Bool)

(assert (=> d!17543 (=> res!39341 e!48612)))

(declare-fun lt!33507 () Bool)

(assert (=> d!17543 (= res!39341 (not lt!33507))))

(declare-fun lt!33506 () Bool)

(assert (=> d!17543 (= lt!33507 lt!33506)))

(declare-fun lt!33505 () Unit!2078)

(declare-fun e!48611 () Unit!2078)

(assert (=> d!17543 (= lt!33505 e!48611)))

(declare-fun c!11196 () Bool)

(assert (=> d!17543 (= c!11196 lt!33506)))

(assert (=> d!17543 (= lt!33506 (containsKey!137 (toList!725 lt!32824) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17543 (= (contains!723 lt!32824 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33507)))

(declare-fun b!74391 () Bool)

(declare-fun lt!33504 () Unit!2078)

(assert (=> b!74391 (= e!48611 lt!33504)))

(assert (=> b!74391 (= lt!33504 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32824) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> b!74391 (isDefined!86 (getValueByKey!133 (toList!725 lt!32824) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74392 () Bool)

(declare-fun Unit!2134 () Unit!2078)

(assert (=> b!74392 (= e!48611 Unit!2134)))

(declare-fun b!74393 () Bool)

(assert (=> b!74393 (= e!48612 (isDefined!86 (getValueByKey!133 (toList!725 lt!32824) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (= (and d!17543 c!11196) b!74391))

(assert (= (and d!17543 (not c!11196)) b!74392))

(assert (= (and d!17543 (not res!39341)) b!74393))

(declare-fun m!73665 () Bool)

(assert (=> d!17543 m!73665))

(declare-fun m!73667 () Bool)

(assert (=> b!74391 m!73667))

(assert (=> b!74391 m!71645))

(assert (=> b!74391 m!71645))

(declare-fun m!73669 () Bool)

(assert (=> b!74391 m!73669))

(assert (=> b!74393 m!71645))

(assert (=> b!74393 m!71645))

(assert (=> b!74393 m!73669))

(assert (=> d!16879 d!17543))

(declare-fun b!74396 () Bool)

(declare-fun e!48614 () Option!139)

(assert (=> b!74396 (= e!48614 (getValueByKey!133 (t!5035 lt!32823) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun c!11197 () Bool)

(declare-fun d!17545 () Bool)

(assert (=> d!17545 (= c!11197 (and ((_ is Cons!1474) lt!32823) (= (_1!1072 (h!2061 lt!32823)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun e!48613 () Option!139)

(assert (=> d!17545 (= (getValueByKey!133 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) e!48613)))

(declare-fun b!74395 () Bool)

(assert (=> b!74395 (= e!48613 e!48614)))

(declare-fun c!11198 () Bool)

(assert (=> b!74395 (= c!11198 (and ((_ is Cons!1474) lt!32823) (not (= (_1!1072 (h!2061 lt!32823)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun b!74394 () Bool)

(assert (=> b!74394 (= e!48613 (Some!138 (_2!1072 (h!2061 lt!32823))))))

(declare-fun b!74397 () Bool)

(assert (=> b!74397 (= e!48614 None!137)))

(assert (= (and d!17545 c!11197) b!74394))

(assert (= (and d!17545 (not c!11197)) b!74395))

(assert (= (and b!74395 c!11198) b!74396))

(assert (= (and b!74395 (not c!11198)) b!74397))

(declare-fun m!73671 () Bool)

(assert (=> b!74396 m!73671))

(assert (=> d!16879 d!17545))

(declare-fun d!17547 () Bool)

(assert (=> d!17547 (= (getValueByKey!133 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!33508 () Unit!2078)

(assert (=> d!17547 (= lt!33508 (choose!412 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun e!48615 () Bool)

(assert (=> d!17547 e!48615))

(declare-fun res!39342 () Bool)

(assert (=> d!17547 (=> (not res!39342) (not e!48615))))

(assert (=> d!17547 (= res!39342 (isStrictlySorted!292 lt!32823))))

(assert (=> d!17547 (= (lemmaContainsTupThenGetReturnValue!50 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33508)))

(declare-fun b!74398 () Bool)

(declare-fun res!39343 () Bool)

(assert (=> b!74398 (=> (not res!39343) (not e!48615))))

(assert (=> b!74398 (= res!39343 (containsKey!137 lt!32823 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74399 () Bool)

(assert (=> b!74399 (= e!48615 (contains!724 lt!32823 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (= (and d!17547 res!39342) b!74398))

(assert (= (and b!74398 res!39343) b!74399))

(assert (=> d!17547 m!71639))

(declare-fun m!73673 () Bool)

(assert (=> d!17547 m!73673))

(declare-fun m!73675 () Bool)

(assert (=> d!17547 m!73675))

(declare-fun m!73677 () Bool)

(assert (=> b!74398 m!73677))

(declare-fun m!73679 () Bool)

(assert (=> b!74399 m!73679))

(assert (=> d!16879 d!17547))

(declare-fun b!74400 () Bool)

(declare-fun e!48618 () List!1478)

(declare-fun call!6581 () List!1478)

(assert (=> b!74400 (= e!48618 call!6581)))

(declare-fun b!74401 () Bool)

(declare-fun e!48620 () List!1478)

(declare-fun call!6582 () List!1478)

(assert (=> b!74401 (= e!48620 call!6582)))

(declare-fun b!74402 () Bool)

(declare-fun e!48616 () List!1478)

(declare-fun call!6583 () List!1478)

(assert (=> b!74402 (= e!48616 call!6583)))

(declare-fun e!48617 () List!1478)

(declare-fun c!11202 () Bool)

(declare-fun b!74403 () Bool)

(declare-fun c!11200 () Bool)

(assert (=> b!74403 (= e!48617 (ite c!11202 (t!5035 (toList!725 lt!32540)) (ite c!11200 (Cons!1474 (h!2061 (toList!725 lt!32540)) (t!5035 (toList!725 lt!32540))) Nil!1475)))))

(declare-fun b!74404 () Bool)

(assert (=> b!74404 (= e!48616 e!48618)))

(assert (=> b!74404 (= c!11202 (and ((_ is Cons!1474) (toList!725 lt!32540)) (= (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun bm!6578 () Bool)

(assert (=> bm!6578 (= call!6582 call!6581)))

(declare-fun c!11199 () Bool)

(declare-fun bm!6579 () Bool)

(assert (=> bm!6579 (= call!6583 ($colon$colon!66 e!48617 (ite c!11199 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))))

(declare-fun c!11201 () Bool)

(assert (=> bm!6579 (= c!11201 c!11199)))

(declare-fun b!74405 () Bool)

(declare-fun res!39345 () Bool)

(declare-fun e!48619 () Bool)

(assert (=> b!74405 (=> (not res!39345) (not e!48619))))

(declare-fun lt!33509 () List!1478)

(assert (=> b!74405 (= res!39345 (containsKey!137 lt!33509 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun bm!6580 () Bool)

(assert (=> bm!6580 (= call!6581 call!6583)))

(declare-fun b!74406 () Bool)

(assert (=> b!74406 (= e!48619 (contains!724 lt!33509 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!74407 () Bool)

(assert (=> b!74407 (= e!48620 call!6582)))

(declare-fun b!74408 () Bool)

(assert (=> b!74408 (= e!48617 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32540)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun b!74409 () Bool)

(assert (=> b!74409 (= c!11200 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> b!74409 (= e!48618 e!48620)))

(declare-fun d!17549 () Bool)

(assert (=> d!17549 e!48619))

(declare-fun res!39344 () Bool)

(assert (=> d!17549 (=> (not res!39344) (not e!48619))))

(assert (=> d!17549 (= res!39344 (isStrictlySorted!292 lt!33509))))

(assert (=> d!17549 (= lt!33509 e!48616)))

(assert (=> d!17549 (= c!11199 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(assert (=> d!17549 (isStrictlySorted!292 (toList!725 lt!32540))))

(assert (=> d!17549 (= (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) lt!33509)))

(assert (= (and d!17549 c!11199) b!74402))

(assert (= (and d!17549 (not c!11199)) b!74404))

(assert (= (and b!74404 c!11202) b!74400))

(assert (= (and b!74404 (not c!11202)) b!74409))

(assert (= (and b!74409 c!11200) b!74407))

(assert (= (and b!74409 (not c!11200)) b!74401))

(assert (= (or b!74407 b!74401) bm!6578))

(assert (= (or b!74400 bm!6578) bm!6580))

(assert (= (or b!74402 bm!6580) bm!6579))

(assert (= (and bm!6579 c!11201) b!74408))

(assert (= (and bm!6579 (not c!11201)) b!74403))

(assert (= (and d!17549 res!39344) b!74405))

(assert (= (and b!74405 res!39345) b!74406))

(declare-fun m!73681 () Bool)

(assert (=> bm!6579 m!73681))

(declare-fun m!73683 () Bool)

(assert (=> b!74408 m!73683))

(declare-fun m!73685 () Bool)

(assert (=> b!74406 m!73685))

(declare-fun m!73687 () Bool)

(assert (=> d!17549 m!73687))

(assert (=> d!17549 m!72297))

(declare-fun m!73689 () Bool)

(assert (=> b!74405 m!73689))

(assert (=> d!16879 d!17549))

(declare-fun d!17551 () Bool)

(declare-fun e!48622 () Bool)

(assert (=> d!17551 e!48622))

(declare-fun res!39346 () Bool)

(assert (=> d!17551 (=> res!39346 e!48622)))

(declare-fun lt!33513 () Bool)

(assert (=> d!17551 (= res!39346 (not lt!33513))))

(declare-fun lt!33512 () Bool)

(assert (=> d!17551 (= lt!33513 lt!33512)))

(declare-fun lt!33511 () Unit!2078)

(declare-fun e!48621 () Unit!2078)

(assert (=> d!17551 (= lt!33511 e!48621)))

(declare-fun c!11203 () Bool)

(assert (=> d!17551 (= c!11203 lt!33512)))

(assert (=> d!17551 (= lt!33512 (containsKey!137 (toList!725 lt!33111) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17551 (= (contains!723 lt!33111 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33513)))

(declare-fun b!74410 () Bool)

(declare-fun lt!33510 () Unit!2078)

(assert (=> b!74410 (= e!48621 lt!33510)))

(assert (=> b!74410 (= lt!33510 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33111) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!74410 (isDefined!86 (getValueByKey!133 (toList!725 lt!33111) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74411 () Bool)

(declare-fun Unit!2135 () Unit!2078)

(assert (=> b!74411 (= e!48621 Unit!2135)))

(declare-fun b!74412 () Bool)

(assert (=> b!74412 (= e!48622 (isDefined!86 (getValueByKey!133 (toList!725 lt!33111) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17551 c!11203) b!74410))

(assert (= (and d!17551 (not c!11203)) b!74411))

(assert (= (and d!17551 (not res!39346)) b!74412))

(declare-fun m!73691 () Bool)

(assert (=> d!17551 m!73691))

(declare-fun m!73693 () Bool)

(assert (=> b!74410 m!73693))

(assert (=> b!74410 m!72233))

(assert (=> b!74410 m!72233))

(declare-fun m!73695 () Bool)

(assert (=> b!74410 m!73695))

(assert (=> b!74412 m!72233))

(assert (=> b!74412 m!72233))

(assert (=> b!74412 m!73695))

(assert (=> d!17013 d!17551))

(declare-fun e!48624 () Option!139)

(declare-fun b!74415 () Bool)

(assert (=> b!74415 (= e!48624 (getValueByKey!133 (t!5035 lt!33110) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17553 () Bool)

(declare-fun c!11204 () Bool)

(assert (=> d!17553 (= c!11204 (and ((_ is Cons!1474) lt!33110) (= (_1!1072 (h!2061 lt!33110)) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48623 () Option!139)

(assert (=> d!17553 (= (getValueByKey!133 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48623)))

(declare-fun b!74414 () Bool)

(assert (=> b!74414 (= e!48623 e!48624)))

(declare-fun c!11205 () Bool)

(assert (=> b!74414 (= c!11205 (and ((_ is Cons!1474) lt!33110) (not (= (_1!1072 (h!2061 lt!33110)) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74413 () Bool)

(assert (=> b!74413 (= e!48623 (Some!138 (_2!1072 (h!2061 lt!33110))))))

(declare-fun b!74416 () Bool)

(assert (=> b!74416 (= e!48624 None!137)))

(assert (= (and d!17553 c!11204) b!74413))

(assert (= (and d!17553 (not c!11204)) b!74414))

(assert (= (and b!74414 c!11205) b!74415))

(assert (= (and b!74414 (not c!11205)) b!74416))

(declare-fun m!73697 () Bool)

(assert (=> b!74415 m!73697))

(assert (=> d!17013 d!17553))

(declare-fun d!17555 () Bool)

(assert (=> d!17555 (= (getValueByKey!133 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33514 () Unit!2078)

(assert (=> d!17555 (= lt!33514 (choose!412 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48625 () Bool)

(assert (=> d!17555 e!48625))

(declare-fun res!39347 () Bool)

(assert (=> d!17555 (=> (not res!39347) (not e!48625))))

(assert (=> d!17555 (= res!39347 (isStrictlySorted!292 lt!33110))))

(assert (=> d!17555 (= (lemmaContainsTupThenGetReturnValue!50 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33514)))

(declare-fun b!74417 () Bool)

(declare-fun res!39348 () Bool)

(assert (=> b!74417 (=> (not res!39348) (not e!48625))))

(assert (=> b!74417 (= res!39348 (containsKey!137 lt!33110 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74418 () Bool)

(assert (=> b!74418 (= e!48625 (contains!724 lt!33110 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17555 res!39347) b!74417))

(assert (= (and b!74417 res!39348) b!74418))

(assert (=> d!17555 m!72227))

(declare-fun m!73699 () Bool)

(assert (=> d!17555 m!73699))

(declare-fun m!73701 () Bool)

(assert (=> d!17555 m!73701))

(declare-fun m!73703 () Bool)

(assert (=> b!74417 m!73703))

(declare-fun m!73705 () Bool)

(assert (=> b!74418 m!73705))

(assert (=> d!17013 d!17555))

(declare-fun b!74419 () Bool)

(declare-fun e!48628 () List!1478)

(declare-fun call!6584 () List!1478)

(assert (=> b!74419 (= e!48628 call!6584)))

(declare-fun b!74420 () Bool)

(declare-fun e!48630 () List!1478)

(declare-fun call!6585 () List!1478)

(assert (=> b!74420 (= e!48630 call!6585)))

(declare-fun b!74421 () Bool)

(declare-fun e!48626 () List!1478)

(declare-fun call!6586 () List!1478)

(assert (=> b!74421 (= e!48626 call!6586)))

(declare-fun c!11209 () Bool)

(declare-fun c!11207 () Bool)

(declare-fun b!74422 () Bool)

(declare-fun e!48627 () List!1478)

(assert (=> b!74422 (= e!48627 (ite c!11209 (t!5035 (toList!725 lt!32688)) (ite c!11207 (Cons!1474 (h!2061 (toList!725 lt!32688)) (t!5035 (toList!725 lt!32688))) Nil!1475)))))

(declare-fun b!74423 () Bool)

(assert (=> b!74423 (= e!48626 e!48628)))

(assert (=> b!74423 (= c!11209 (and ((_ is Cons!1474) (toList!725 lt!32688)) (= (_1!1072 (h!2061 (toList!725 lt!32688))) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6581 () Bool)

(assert (=> bm!6581 (= call!6585 call!6584)))

(declare-fun bm!6582 () Bool)

(declare-fun c!11206 () Bool)

(assert (=> bm!6582 (= call!6586 ($colon$colon!66 e!48627 (ite c!11206 (h!2061 (toList!725 lt!32688)) (tuple2!2123 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11208 () Bool)

(assert (=> bm!6582 (= c!11208 c!11206)))

(declare-fun b!74424 () Bool)

(declare-fun res!39350 () Bool)

(declare-fun e!48629 () Bool)

(assert (=> b!74424 (=> (not res!39350) (not e!48629))))

(declare-fun lt!33515 () List!1478)

(assert (=> b!74424 (= res!39350 (containsKey!137 lt!33515 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6583 () Bool)

(assert (=> bm!6583 (= call!6584 call!6586)))

(declare-fun b!74425 () Bool)

(assert (=> b!74425 (= e!48629 (contains!724 lt!33515 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74426 () Bool)

(assert (=> b!74426 (= e!48630 call!6585)))

(declare-fun b!74427 () Bool)

(assert (=> b!74427 (= e!48627 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32688)) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74428 () Bool)

(assert (=> b!74428 (= c!11207 (and ((_ is Cons!1474) (toList!725 lt!32688)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32688))) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!74428 (= e!48628 e!48630)))

(declare-fun d!17557 () Bool)

(assert (=> d!17557 e!48629))

(declare-fun res!39349 () Bool)

(assert (=> d!17557 (=> (not res!39349) (not e!48629))))

(assert (=> d!17557 (= res!39349 (isStrictlySorted!292 lt!33515))))

(assert (=> d!17557 (= lt!33515 e!48626)))

(assert (=> d!17557 (= c!11206 (and ((_ is Cons!1474) (toList!725 lt!32688)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32688))) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17557 (isStrictlySorted!292 (toList!725 lt!32688))))

(assert (=> d!17557 (= (insertStrictlySorted!53 (toList!725 lt!32688) (_1!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33515)))

(assert (= (and d!17557 c!11206) b!74421))

(assert (= (and d!17557 (not c!11206)) b!74423))

(assert (= (and b!74423 c!11209) b!74419))

(assert (= (and b!74423 (not c!11209)) b!74428))

(assert (= (and b!74428 c!11207) b!74426))

(assert (= (and b!74428 (not c!11207)) b!74420))

(assert (= (or b!74426 b!74420) bm!6581))

(assert (= (or b!74419 bm!6581) bm!6583))

(assert (= (or b!74421 bm!6583) bm!6582))

(assert (= (and bm!6582 c!11208) b!74427))

(assert (= (and bm!6582 (not c!11208)) b!74422))

(assert (= (and d!17557 res!39349) b!74424))

(assert (= (and b!74424 res!39350) b!74425))

(declare-fun m!73707 () Bool)

(assert (=> bm!6582 m!73707))

(declare-fun m!73709 () Bool)

(assert (=> b!74427 m!73709))

(declare-fun m!73711 () Bool)

(assert (=> b!74425 m!73711))

(declare-fun m!73713 () Bool)

(assert (=> d!17557 m!73713))

(declare-fun m!73715 () Bool)

(assert (=> d!17557 m!73715))

(declare-fun m!73717 () Bool)

(assert (=> b!74424 m!73717))

(assert (=> d!17013 d!17557))

(declare-fun d!17559 () Bool)

(assert (=> d!17559 (isDefined!86 (getValueByKey!133 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(declare-fun lt!33516 () Unit!2078)

(assert (=> d!17559 (= lt!33516 (choose!422 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(declare-fun e!48631 () Bool)

(assert (=> d!17559 e!48631))

(declare-fun res!39351 () Bool)

(assert (=> d!17559 (=> (not res!39351) (not e!48631))))

(assert (=> d!17559 (= res!39351 (isStrictlySorted!292 (toList!725 call!6442)))))

(assert (=> d!17559 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))) lt!33516)))

(declare-fun b!74429 () Bool)

(assert (=> b!74429 (= e!48631 (containsKey!137 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (= (and d!17559 res!39351) b!74429))

(assert (=> d!17559 m!71521))

(assert (=> d!17559 m!72305))

(assert (=> d!17559 m!72305))

(assert (=> d!17559 m!72307))

(assert (=> d!17559 m!71521))

(declare-fun m!73719 () Bool)

(assert (=> d!17559 m!73719))

(declare-fun m!73721 () Bool)

(assert (=> d!17559 m!73721))

(assert (=> b!74429 m!71521))

(assert (=> b!74429 m!72301))

(assert (=> b!73684 d!17559))

(declare-fun d!17561 () Bool)

(assert (=> d!17561 (= (isDefined!86 (getValueByKey!133 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))) (not (isEmpty!317 (getValueByKey!133 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))))

(declare-fun bs!3216 () Bool)

(assert (= bs!3216 d!17561))

(assert (=> bs!3216 m!72305))

(declare-fun m!73723 () Bool)

(assert (=> bs!3216 m!73723))

(assert (=> b!73684 d!17561))

(declare-fun e!48633 () Option!139)

(declare-fun b!74432 () Bool)

(assert (=> b!74432 (= e!48633 (getValueByKey!133 (t!5035 (toList!725 call!6442)) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(declare-fun c!11210 () Bool)

(declare-fun d!17563 () Bool)

(assert (=> d!17563 (= c!11210 (and ((_ is Cons!1474) (toList!725 call!6442)) (= (_1!1072 (h!2061 (toList!725 call!6442))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))))

(declare-fun e!48632 () Option!139)

(assert (=> d!17563 (= (getValueByKey!133 (toList!725 call!6442) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))) e!48632)))

(declare-fun b!74431 () Bool)

(assert (=> b!74431 (= e!48632 e!48633)))

(declare-fun c!11211 () Bool)

(assert (=> b!74431 (= c!11211 (and ((_ is Cons!1474) (toList!725 call!6442)) (not (= (_1!1072 (h!2061 (toList!725 call!6442))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))))

(declare-fun b!74430 () Bool)

(assert (=> b!74430 (= e!48632 (Some!138 (_2!1072 (h!2061 (toList!725 call!6442)))))))

(declare-fun b!74433 () Bool)

(assert (=> b!74433 (= e!48633 None!137)))

(assert (= (and d!17563 c!11210) b!74430))

(assert (= (and d!17563 (not c!11210)) b!74431))

(assert (= (and b!74431 c!11211) b!74432))

(assert (= (and b!74431 (not c!11211)) b!74433))

(assert (=> b!74432 m!71521))

(declare-fun m!73725 () Bool)

(assert (=> b!74432 m!73725))

(assert (=> b!73684 d!17563))

(assert (=> d!17031 d!17029))

(declare-fun d!17565 () Bool)

(assert (=> d!17565 (= (getValueByKey!133 lt!32617 (_1!1072 lt!32538)) (Some!138 (_2!1072 lt!32538)))))

(assert (=> d!17565 true))

(declare-fun _$22!387 () Unit!2078)

(assert (=> d!17565 (= (choose!412 lt!32617 (_1!1072 lt!32538) (_2!1072 lt!32538)) _$22!387)))

(declare-fun bs!3217 () Bool)

(assert (= bs!3217 d!17565))

(assert (=> bs!3217 m!71381))

(assert (=> d!17031 d!17565))

(declare-fun d!17567 () Bool)

(declare-fun res!39352 () Bool)

(declare-fun e!48634 () Bool)

(assert (=> d!17567 (=> res!39352 e!48634)))

(assert (=> d!17567 (= res!39352 (or ((_ is Nil!1475) lt!32617) ((_ is Nil!1475) (t!5035 lt!32617))))))

(assert (=> d!17567 (= (isStrictlySorted!292 lt!32617) e!48634)))

(declare-fun b!74434 () Bool)

(declare-fun e!48635 () Bool)

(assert (=> b!74434 (= e!48634 e!48635)))

(declare-fun res!39353 () Bool)

(assert (=> b!74434 (=> (not res!39353) (not e!48635))))

(assert (=> b!74434 (= res!39353 (bvslt (_1!1072 (h!2061 lt!32617)) (_1!1072 (h!2061 (t!5035 lt!32617)))))))

(declare-fun b!74435 () Bool)

(assert (=> b!74435 (= e!48635 (isStrictlySorted!292 (t!5035 lt!32617)))))

(assert (= (and d!17567 (not res!39352)) b!74434))

(assert (= (and b!74434 res!39353) b!74435))

(declare-fun m!73727 () Bool)

(assert (=> b!74435 m!73727))

(assert (=> d!17031 d!17567))

(declare-fun b!74438 () Bool)

(declare-fun e!48637 () Option!139)

(assert (=> b!74438 (= e!48637 (getValueByKey!133 (t!5035 (t!5035 lt!32621)) (_1!1072 lt!32538)))))

(declare-fun d!17569 () Bool)

(declare-fun c!11212 () Bool)

(assert (=> d!17569 (= c!11212 (and ((_ is Cons!1474) (t!5035 lt!32621)) (= (_1!1072 (h!2061 (t!5035 lt!32621))) (_1!1072 lt!32538))))))

(declare-fun e!48636 () Option!139)

(assert (=> d!17569 (= (getValueByKey!133 (t!5035 lt!32621) (_1!1072 lt!32538)) e!48636)))

(declare-fun b!74437 () Bool)

(assert (=> b!74437 (= e!48636 e!48637)))

(declare-fun c!11213 () Bool)

(assert (=> b!74437 (= c!11213 (and ((_ is Cons!1474) (t!5035 lt!32621)) (not (= (_1!1072 (h!2061 (t!5035 lt!32621))) (_1!1072 lt!32538)))))))

(declare-fun b!74436 () Bool)

(assert (=> b!74436 (= e!48636 (Some!138 (_2!1072 (h!2061 (t!5035 lt!32621)))))))

(declare-fun b!74439 () Bool)

(assert (=> b!74439 (= e!48637 None!137)))

(assert (= (and d!17569 c!11212) b!74436))

(assert (= (and d!17569 (not c!11212)) b!74437))

(assert (= (and b!74437 c!11213) b!74438))

(assert (= (and b!74437 (not c!11213)) b!74439))

(declare-fun m!73729 () Bool)

(assert (=> b!74438 m!73729))

(assert (=> b!73321 d!17569))

(declare-fun b!74440 () Bool)

(declare-fun e!48640 () List!1478)

(declare-fun call!6587 () List!1478)

(assert (=> b!74440 (= e!48640 call!6587)))

(declare-fun b!74441 () Bool)

(declare-fun e!48642 () List!1478)

(declare-fun call!6588 () List!1478)

(assert (=> b!74441 (= e!48642 call!6588)))

(declare-fun b!74442 () Bool)

(declare-fun e!48638 () List!1478)

(declare-fun call!6589 () List!1478)

(assert (=> b!74442 (= e!48638 call!6589)))

(declare-fun e!48639 () List!1478)

(declare-fun c!11215 () Bool)

(declare-fun c!11217 () Bool)

(declare-fun b!74443 () Bool)

(assert (=> b!74443 (= e!48639 (ite c!11217 (t!5035 (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (ite c!11215 (Cons!1474 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (t!5035 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))))) Nil!1475)))))

(declare-fun b!74444 () Bool)

(assert (=> b!74444 (= e!48638 e!48640)))

(assert (=> b!74444 (= c!11217 (and ((_ is Cons!1474) (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (= (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))))) (_1!1072 lt!32538))))))

(declare-fun bm!6584 () Bool)

(assert (=> bm!6584 (= call!6588 call!6587)))

(declare-fun bm!6585 () Bool)

(declare-fun c!11214 () Bool)

(assert (=> bm!6585 (= call!6589 ($colon$colon!66 e!48639 (ite c!11214 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538)))))))

(declare-fun c!11216 () Bool)

(assert (=> bm!6585 (= c!11216 c!11214)))

(declare-fun b!74445 () Bool)

(declare-fun res!39355 () Bool)

(declare-fun e!48641 () Bool)

(assert (=> b!74445 (=> (not res!39355) (not e!48641))))

(declare-fun lt!33517 () List!1478)

(assert (=> b!74445 (= res!39355 (containsKey!137 lt!33517 (_1!1072 lt!32538)))))

(declare-fun bm!6586 () Bool)

(assert (=> bm!6586 (= call!6587 call!6589)))

(declare-fun b!74446 () Bool)

(assert (=> b!74446 (= e!48641 (contains!724 lt!33517 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!74447 () Bool)

(assert (=> b!74447 (= e!48642 call!6588)))

(declare-fun b!74448 () Bool)

(assert (=> b!74448 (= e!48639 (insertStrictlySorted!53 (t!5035 (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(declare-fun b!74449 () Bool)

(assert (=> b!74449 (= c!11215 (and ((_ is Cons!1474) (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (bvsgt (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))))) (_1!1072 lt!32538))))))

(assert (=> b!74449 (= e!48640 e!48642)))

(declare-fun d!17571 () Bool)

(assert (=> d!17571 e!48641))

(declare-fun res!39354 () Bool)

(assert (=> d!17571 (=> (not res!39354) (not e!48641))))

(assert (=> d!17571 (= res!39354 (isStrictlySorted!292 lt!33517))))

(assert (=> d!17571 (= lt!33517 e!48638)))

(assert (=> d!17571 (= c!11214 (and ((_ is Cons!1474) (t!5035 (toList!725 (+!94 lt!32540 lt!32542)))) (bvslt (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))))) (_1!1072 lt!32538))))))

(assert (=> d!17571 (isStrictlySorted!292 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))))))

(assert (=> d!17571 (= (insertStrictlySorted!53 (t!5035 (toList!725 (+!94 lt!32540 lt!32542))) (_1!1072 lt!32538) (_2!1072 lt!32538)) lt!33517)))

(assert (= (and d!17571 c!11214) b!74442))

(assert (= (and d!17571 (not c!11214)) b!74444))

(assert (= (and b!74444 c!11217) b!74440))

(assert (= (and b!74444 (not c!11217)) b!74449))

(assert (= (and b!74449 c!11215) b!74447))

(assert (= (and b!74449 (not c!11215)) b!74441))

(assert (= (or b!74447 b!74441) bm!6584))

(assert (= (or b!74440 bm!6584) bm!6586))

(assert (= (or b!74442 bm!6586) bm!6585))

(assert (= (and bm!6585 c!11216) b!74448))

(assert (= (and bm!6585 (not c!11216)) b!74443))

(assert (= (and d!17571 res!39354) b!74445))

(assert (= (and b!74445 res!39355) b!74446))

(declare-fun m!73731 () Bool)

(assert (=> bm!6585 m!73731))

(declare-fun m!73733 () Bool)

(assert (=> b!74448 m!73733))

(declare-fun m!73735 () Bool)

(assert (=> b!74446 m!73735))

(declare-fun m!73737 () Bool)

(assert (=> d!17571 m!73737))

(assert (=> d!17571 m!72589))

(declare-fun m!73739 () Bool)

(assert (=> b!74445 m!73739))

(assert (=> b!73357 d!17571))

(assert (=> b!73605 d!17301))

(declare-fun d!17573 () Bool)

(declare-fun e!48643 () Bool)

(assert (=> d!17573 e!48643))

(declare-fun res!39356 () Bool)

(assert (=> d!17573 (=> (not res!39356) (not e!48643))))

(declare-fun lt!33520 () ListLongMap!1419)

(assert (=> d!17573 (= res!39356 (contains!723 lt!33520 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33519 () List!1478)

(assert (=> d!17573 (= lt!33520 (ListLongMap!1420 lt!33519))))

(declare-fun lt!33521 () Unit!2078)

(declare-fun lt!33518 () Unit!2078)

(assert (=> d!17573 (= lt!33521 lt!33518)))

(assert (=> d!17573 (= (getValueByKey!133 lt!33519 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17573 (= lt!33518 (lemmaContainsTupThenGetReturnValue!50 lt!33519 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17573 (= lt!33519 (insertStrictlySorted!53 (toList!725 call!6504) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17573 (= (+!94 call!6504 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33520)))

(declare-fun b!74450 () Bool)

(declare-fun res!39357 () Bool)

(assert (=> b!74450 (=> (not res!39357) (not e!48643))))

(assert (=> b!74450 (= res!39357 (= (getValueByKey!133 (toList!725 lt!33520) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74451 () Bool)

(assert (=> b!74451 (= e!48643 (contains!724 (toList!725 lt!33520) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17573 res!39356) b!74450))

(assert (= (and b!74450 res!39357) b!74451))

(declare-fun m!73741 () Bool)

(assert (=> d!17573 m!73741))

(declare-fun m!73743 () Bool)

(assert (=> d!17573 m!73743))

(declare-fun m!73745 () Bool)

(assert (=> d!17573 m!73745))

(declare-fun m!73747 () Bool)

(assert (=> d!17573 m!73747))

(declare-fun m!73749 () Bool)

(assert (=> b!74450 m!73749))

(declare-fun m!73751 () Bool)

(assert (=> b!74451 m!73751))

(assert (=> b!73605 d!17573))

(declare-fun d!17575 () Bool)

(declare-fun e!48644 () Bool)

(assert (=> d!17575 e!48644))

(declare-fun res!39358 () Bool)

(assert (=> d!17575 (=> (not res!39358) (not e!48644))))

(declare-fun lt!33524 () ListLongMap!1419)

(assert (=> d!17575 (= res!39358 (contains!723 lt!33524 (_1!1072 (tuple2!2123 lt!33074 lt!33071))))))

(declare-fun lt!33523 () List!1478)

(assert (=> d!17575 (= lt!33524 (ListLongMap!1420 lt!33523))))

(declare-fun lt!33525 () Unit!2078)

(declare-fun lt!33522 () Unit!2078)

(assert (=> d!17575 (= lt!33525 lt!33522)))

(assert (=> d!17575 (= (getValueByKey!133 lt!33523 (_1!1072 (tuple2!2123 lt!33074 lt!33071))) (Some!138 (_2!1072 (tuple2!2123 lt!33074 lt!33071))))))

(assert (=> d!17575 (= lt!33522 (lemmaContainsTupThenGetReturnValue!50 lt!33523 (_1!1072 (tuple2!2123 lt!33074 lt!33071)) (_2!1072 (tuple2!2123 lt!33074 lt!33071))))))

(assert (=> d!17575 (= lt!33523 (insertStrictlySorted!53 (toList!725 lt!33070) (_1!1072 (tuple2!2123 lt!33074 lt!33071)) (_2!1072 (tuple2!2123 lt!33074 lt!33071))))))

(assert (=> d!17575 (= (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071)) lt!33524)))

(declare-fun b!74452 () Bool)

(declare-fun res!39359 () Bool)

(assert (=> b!74452 (=> (not res!39359) (not e!48644))))

(assert (=> b!74452 (= res!39359 (= (getValueByKey!133 (toList!725 lt!33524) (_1!1072 (tuple2!2123 lt!33074 lt!33071))) (Some!138 (_2!1072 (tuple2!2123 lt!33074 lt!33071)))))))

(declare-fun b!74453 () Bool)

(assert (=> b!74453 (= e!48644 (contains!724 (toList!725 lt!33524) (tuple2!2123 lt!33074 lt!33071)))))

(assert (= (and d!17575 res!39358) b!74452))

(assert (= (and b!74452 res!39359) b!74453))

(declare-fun m!73753 () Bool)

(assert (=> d!17575 m!73753))

(declare-fun m!73755 () Bool)

(assert (=> d!17575 m!73755))

(declare-fun m!73757 () Bool)

(assert (=> d!17575 m!73757))

(declare-fun m!73759 () Bool)

(assert (=> d!17575 m!73759))

(declare-fun m!73761 () Bool)

(assert (=> b!74452 m!73761))

(declare-fun m!73763 () Bool)

(assert (=> b!74453 m!73763))

(assert (=> b!73605 d!17575))

(declare-fun d!17577 () Bool)

(declare-fun e!48646 () Bool)

(assert (=> d!17577 e!48646))

(declare-fun res!39360 () Bool)

(assert (=> d!17577 (=> res!39360 e!48646)))

(declare-fun lt!33529 () Bool)

(assert (=> d!17577 (= res!39360 (not lt!33529))))

(declare-fun lt!33528 () Bool)

(assert (=> d!17577 (= lt!33529 lt!33528)))

(declare-fun lt!33527 () Unit!2078)

(declare-fun e!48645 () Unit!2078)

(assert (=> d!17577 (= lt!33527 e!48645)))

(declare-fun c!11218 () Bool)

(assert (=> d!17577 (= c!11218 lt!33528)))

(assert (=> d!17577 (= lt!33528 (containsKey!137 (toList!725 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071))) lt!33068))))

(assert (=> d!17577 (= (contains!723 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071)) lt!33068) lt!33529)))

(declare-fun b!74454 () Bool)

(declare-fun lt!33526 () Unit!2078)

(assert (=> b!74454 (= e!48645 lt!33526)))

(assert (=> b!74454 (= lt!33526 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071))) lt!33068))))

(assert (=> b!74454 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071))) lt!33068))))

(declare-fun b!74455 () Bool)

(declare-fun Unit!2136 () Unit!2078)

(assert (=> b!74455 (= e!48645 Unit!2136)))

(declare-fun b!74456 () Bool)

(assert (=> b!74456 (= e!48646 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071))) lt!33068)))))

(assert (= (and d!17577 c!11218) b!74454))

(assert (= (and d!17577 (not c!11218)) b!74455))

(assert (= (and d!17577 (not res!39360)) b!74456))

(declare-fun m!73765 () Bool)

(assert (=> d!17577 m!73765))

(declare-fun m!73767 () Bool)

(assert (=> b!74454 m!73767))

(declare-fun m!73769 () Bool)

(assert (=> b!74454 m!73769))

(assert (=> b!74454 m!73769))

(declare-fun m!73771 () Bool)

(assert (=> b!74454 m!73771))

(assert (=> b!74456 m!73769))

(assert (=> b!74456 m!73769))

(assert (=> b!74456 m!73771))

(assert (=> b!73605 d!17577))

(declare-fun d!17579 () Bool)

(assert (=> d!17579 (not (contains!723 (+!94 lt!33070 (tuple2!2123 lt!33074 lt!33071)) lt!33068))))

(declare-fun lt!33530 () Unit!2078)

(assert (=> d!17579 (= lt!33530 (choose!414 lt!33070 lt!33074 lt!33071 lt!33068))))

(declare-fun e!48647 () Bool)

(assert (=> d!17579 e!48647))

(declare-fun res!39361 () Bool)

(assert (=> d!17579 (=> (not res!39361) (not e!48647))))

(assert (=> d!17579 (= res!39361 (not (contains!723 lt!33070 lt!33068)))))

(assert (=> d!17579 (= (addStillNotContains!24 lt!33070 lt!33074 lt!33071 lt!33068) lt!33530)))

(declare-fun b!74457 () Bool)

(assert (=> b!74457 (= e!48647 (not (= lt!33074 lt!33068)))))

(assert (= (and d!17579 res!39361) b!74457))

(assert (=> d!17579 m!72121))

(assert (=> d!17579 m!72121))

(assert (=> d!17579 m!72127))

(declare-fun m!73773 () Bool)

(assert (=> d!17579 m!73773))

(declare-fun m!73775 () Bool)

(assert (=> d!17579 m!73775))

(assert (=> b!73605 d!17579))

(assert (=> b!73504 d!17469))

(declare-fun d!17581 () Bool)

(declare-fun e!48649 () Bool)

(assert (=> d!17581 e!48649))

(declare-fun res!39362 () Bool)

(assert (=> d!17581 (=> res!39362 e!48649)))

(declare-fun lt!33534 () Bool)

(assert (=> d!17581 (= res!39362 (not lt!33534))))

(declare-fun lt!33533 () Bool)

(assert (=> d!17581 (= lt!33534 lt!33533)))

(declare-fun lt!33532 () Unit!2078)

(declare-fun e!48648 () Unit!2078)

(assert (=> d!17581 (= lt!33532 e!48648)))

(declare-fun c!11219 () Bool)

(assert (=> d!17581 (= c!11219 lt!33533)))

(assert (=> d!17581 (= lt!33533 (containsKey!137 (toList!725 (map!1151 (_2!1073 lt!33051))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17581 (= (contains!723 (map!1151 (_2!1073 lt!33051)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33534)))

(declare-fun b!74458 () Bool)

(declare-fun lt!33531 () Unit!2078)

(assert (=> b!74458 (= e!48648 lt!33531)))

(assert (=> b!74458 (= lt!33531 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (map!1151 (_2!1073 lt!33051))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> b!74458 (isDefined!86 (getValueByKey!133 (toList!725 (map!1151 (_2!1073 lt!33051))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!74459 () Bool)

(declare-fun Unit!2137 () Unit!2078)

(assert (=> b!74459 (= e!48648 Unit!2137)))

(declare-fun b!74460 () Bool)

(assert (=> b!74460 (= e!48649 (isDefined!86 (getValueByKey!133 (toList!725 (map!1151 (_2!1073 lt!33051))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (= (and d!17581 c!11219) b!74458))

(assert (= (and d!17581 (not c!11219)) b!74459))

(assert (= (and d!17581 (not res!39362)) b!74460))

(assert (=> d!17581 m!71227))

(declare-fun m!73777 () Bool)

(assert (=> d!17581 m!73777))

(assert (=> b!74458 m!71227))

(declare-fun m!73779 () Bool)

(assert (=> b!74458 m!73779))

(assert (=> b!74458 m!71227))

(declare-fun m!73781 () Bool)

(assert (=> b!74458 m!73781))

(assert (=> b!74458 m!73781))

(declare-fun m!73783 () Bool)

(assert (=> b!74458 m!73783))

(assert (=> b!74460 m!71227))

(assert (=> b!74460 m!73781))

(assert (=> b!74460 m!73781))

(assert (=> b!74460 m!73783))

(assert (=> b!73551 d!17581))

(declare-fun d!17583 () Bool)

(assert (=> d!17583 (= (map!1151 (_2!1073 lt!33051)) (getCurrentListMap!422 (_keys!3865 (_2!1073 lt!33051)) (_values!2196 (_2!1073 lt!33051)) (mask!6180 (_2!1073 lt!33051)) (extraKeys!2072 (_2!1073 lt!33051)) (zeroValue!2115 (_2!1073 lt!33051)) (minValue!2115 (_2!1073 lt!33051)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1073 lt!33051))))))

(declare-fun bs!3218 () Bool)

(assert (= bs!3218 d!17583))

(declare-fun m!73785 () Bool)

(assert (=> bs!3218 m!73785))

(assert (=> b!73551 d!17583))

(declare-fun d!17585 () Bool)

(declare-fun res!39363 () Bool)

(declare-fun e!48650 () Bool)

(assert (=> d!17585 (=> res!39363 e!48650)))

(assert (=> d!17585 (= res!39363 (and ((_ is Cons!1474) lt!32613) (= (_1!1072 (h!2061 lt!32613)) (_1!1072 lt!32542))))))

(assert (=> d!17585 (= (containsKey!137 lt!32613 (_1!1072 lt!32542)) e!48650)))

(declare-fun b!74461 () Bool)

(declare-fun e!48651 () Bool)

(assert (=> b!74461 (= e!48650 e!48651)))

(declare-fun res!39364 () Bool)

(assert (=> b!74461 (=> (not res!39364) (not e!48651))))

(assert (=> b!74461 (= res!39364 (and (or (not ((_ is Cons!1474) lt!32613)) (bvsle (_1!1072 (h!2061 lt!32613)) (_1!1072 lt!32542))) ((_ is Cons!1474) lt!32613) (bvslt (_1!1072 (h!2061 lt!32613)) (_1!1072 lt!32542))))))

(declare-fun b!74462 () Bool)

(assert (=> b!74462 (= e!48651 (containsKey!137 (t!5035 lt!32613) (_1!1072 lt!32542)))))

(assert (= (and d!17585 (not res!39363)) b!74461))

(assert (= (and b!74461 res!39364) b!74462))

(declare-fun m!73787 () Bool)

(assert (=> b!74462 m!73787))

(assert (=> b!73700 d!17585))

(declare-fun d!17587 () Bool)

(declare-fun res!39366 () Bool)

(declare-fun e!48654 () Bool)

(assert (=> d!17587 (=> res!39366 e!48654)))

(assert (=> d!17587 (= res!39366 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!17587 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992)))) e!48654)))

(declare-fun b!74463 () Bool)

(declare-fun e!48653 () Bool)

(assert (=> b!74463 (= e!48654 e!48653)))

(declare-fun c!11220 () Bool)

(assert (=> b!74463 (= c!11220 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74464 () Bool)

(declare-fun e!48652 () Bool)

(declare-fun call!6590 () Bool)

(assert (=> b!74464 (= e!48652 call!6590)))

(declare-fun bm!6587 () Bool)

(assert (=> bm!6587 (= call!6590 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!74465 () Bool)

(assert (=> b!74465 (= e!48653 call!6590)))

(declare-fun b!74466 () Bool)

(assert (=> b!74466 (= e!48653 e!48652)))

(declare-fun lt!33536 () (_ BitVec 64))

(assert (=> b!74466 (= lt!33536 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!33535 () Unit!2078)

(assert (=> b!74466 (= lt!33535 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) lt!33536 #b00000000000000000000000000000000))))

(assert (=> b!74466 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) lt!33536 #b00000000000000000000000000000000)))

(declare-fun lt!33537 () Unit!2078)

(assert (=> b!74466 (= lt!33537 lt!33535)))

(declare-fun res!39365 () Bool)

(assert (=> b!74466 (= res!39365 (= (seekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000) (_keys!3865 (v!2530 (underlying!260 thiss!992))) (mask!6180 (v!2530 (underlying!260 thiss!992)))) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!74466 (=> (not res!39365) (not e!48652))))

(assert (= (and d!17587 (not res!39366)) b!74463))

(assert (= (and b!74463 c!11220) b!74466))

(assert (= (and b!74463 (not c!11220)) b!74465))

(assert (= (and b!74466 res!39365) b!74464))

(assert (= (or b!74464 b!74465) bm!6587))

(assert (=> b!74463 m!73511))

(assert (=> b!74463 m!73511))

(assert (=> b!74463 m!73513))

(declare-fun m!73789 () Bool)

(assert (=> bm!6587 m!73789))

(assert (=> b!74466 m!73511))

(declare-fun m!73791 () Bool)

(assert (=> b!74466 m!73791))

(declare-fun m!73793 () Bool)

(assert (=> b!74466 m!73793))

(assert (=> b!74466 m!73511))

(declare-fun m!73795 () Bool)

(assert (=> b!74466 m!73795))

(assert (=> b!73268 d!17587))

(assert (=> b!73433 d!17061))

(declare-fun d!17589 () Bool)

(assert (=> d!17589 (= (get!1142 (getValueByKey!133 (toList!725 lt!32685) lt!32684)) (v!2534 (getValueByKey!133 (toList!725 lt!32685) lt!32684)))))

(assert (=> d!17009 d!17589))

(declare-fun b!74469 () Bool)

(declare-fun e!48656 () Option!139)

(assert (=> b!74469 (= e!48656 (getValueByKey!133 (t!5035 (toList!725 lt!32685)) lt!32684))))

(declare-fun d!17591 () Bool)

(declare-fun c!11221 () Bool)

(assert (=> d!17591 (= c!11221 (and ((_ is Cons!1474) (toList!725 lt!32685)) (= (_1!1072 (h!2061 (toList!725 lt!32685))) lt!32684)))))

(declare-fun e!48655 () Option!139)

(assert (=> d!17591 (= (getValueByKey!133 (toList!725 lt!32685) lt!32684) e!48655)))

(declare-fun b!74468 () Bool)

(assert (=> b!74468 (= e!48655 e!48656)))

(declare-fun c!11222 () Bool)

(assert (=> b!74468 (= c!11222 (and ((_ is Cons!1474) (toList!725 lt!32685)) (not (= (_1!1072 (h!2061 (toList!725 lt!32685))) lt!32684))))))

(declare-fun b!74467 () Bool)

(assert (=> b!74467 (= e!48655 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32685)))))))

(declare-fun b!74470 () Bool)

(assert (=> b!74470 (= e!48656 None!137)))

(assert (= (and d!17591 c!11221) b!74467))

(assert (= (and d!17591 (not c!11221)) b!74468))

(assert (= (and b!74468 c!11222) b!74469))

(assert (= (and b!74468 (not c!11222)) b!74470))

(declare-fun m!73797 () Bool)

(assert (=> b!74469 m!73797))

(assert (=> d!17009 d!17591))

(declare-fun d!17593 () Bool)

(declare-fun e!48657 () Bool)

(assert (=> d!17593 e!48657))

(declare-fun res!39367 () Bool)

(assert (=> d!17593 (=> (not res!39367) (not e!48657))))

(declare-fun lt!33540 () ListLongMap!1419)

(assert (=> d!17593 (= res!39367 (contains!723 lt!33540 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!33539 () List!1478)

(assert (=> d!17593 (= lt!33540 (ListLongMap!1420 lt!33539))))

(declare-fun lt!33541 () Unit!2078)

(declare-fun lt!33538 () Unit!2078)

(assert (=> d!17593 (= lt!33541 lt!33538)))

(assert (=> d!17593 (= (getValueByKey!133 lt!33539 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17593 (= lt!33538 (lemmaContainsTupThenGetReturnValue!50 lt!33539 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17593 (= lt!33539 (insertStrictlySorted!53 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17593 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!33540)))

(declare-fun b!74471 () Bool)

(declare-fun res!39368 () Bool)

(assert (=> b!74471 (=> (not res!39368) (not e!48657))))

(assert (=> b!74471 (= res!39368 (= (getValueByKey!133 (toList!725 lt!33540) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!74472 () Bool)

(assert (=> b!74472 (= e!48657 (contains!724 (toList!725 lt!33540) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!17593 res!39367) b!74471))

(assert (= (and b!74471 res!39368) b!74472))

(declare-fun m!73799 () Bool)

(assert (=> d!17593 m!73799))

(declare-fun m!73801 () Bool)

(assert (=> d!17593 m!73801))

(declare-fun m!73803 () Bool)

(assert (=> d!17593 m!73803))

(declare-fun m!73805 () Bool)

(assert (=> d!17593 m!73805))

(declare-fun m!73807 () Bool)

(assert (=> b!74471 m!73807))

(declare-fun m!73809 () Bool)

(assert (=> b!74472 m!73809))

(assert (=> b!73692 d!17593))

(assert (=> b!73692 d!16903))

(declare-fun b!74473 () Bool)

(declare-fun e!48661 () Bool)

(declare-fun e!48663 () Bool)

(assert (=> b!74473 (= e!48661 e!48663)))

(declare-fun res!39371 () Bool)

(declare-fun call!6596 () Bool)

(assert (=> b!74473 (= res!39371 call!6596)))

(assert (=> b!74473 (=> (not res!39371) (not e!48663))))

(declare-fun b!74474 () Bool)

(declare-fun e!48664 () Bool)

(assert (=> b!74474 (= e!48664 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74475 () Bool)

(declare-fun c!11228 () Bool)

(assert (=> b!74475 (= c!11228 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48668 () ListLongMap!1419)

(declare-fun e!48670 () ListLongMap!1419)

(assert (=> b!74475 (= e!48668 e!48670)))

(declare-fun bm!6588 () Bool)

(declare-fun call!6591 () ListLongMap!1419)

(declare-fun call!6594 () ListLongMap!1419)

(assert (=> bm!6588 (= call!6591 call!6594)))

(declare-fun b!74476 () Bool)

(declare-fun res!39372 () Bool)

(declare-fun e!48658 () Bool)

(assert (=> b!74476 (=> (not res!39372) (not e!48658))))

(declare-fun e!48659 () Bool)

(assert (=> b!74476 (= res!39372 e!48659)))

(declare-fun res!39377 () Bool)

(assert (=> b!74476 (=> res!39377 e!48659)))

(assert (=> b!74476 (= res!39377 (not e!48664))))

(declare-fun res!39375 () Bool)

(assert (=> b!74476 (=> (not res!39375) (not e!48664))))

(assert (=> b!74476 (= res!39375 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6589 () Bool)

(declare-fun call!6592 () Bool)

(declare-fun lt!33552 () ListLongMap!1419)

(assert (=> bm!6589 (= call!6592 (contains!723 lt!33552 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74477 () Bool)

(declare-fun res!39369 () Bool)

(assert (=> b!74477 (=> (not res!39369) (not e!48658))))

(assert (=> b!74477 (= res!39369 e!48661)))

(declare-fun c!11226 () Bool)

(assert (=> b!74477 (= c!11226 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6590 () Bool)

(declare-fun call!6597 () ListLongMap!1419)

(declare-fun call!6595 () ListLongMap!1419)

(assert (=> bm!6590 (= call!6597 call!6595)))

(declare-fun b!74478 () Bool)

(declare-fun e!48660 () Unit!2078)

(declare-fun Unit!2138 () Unit!2078)

(assert (=> b!74478 (= e!48660 Unit!2138)))

(declare-fun b!74479 () Bool)

(declare-fun e!48665 () Bool)

(assert (=> b!74479 (= e!48658 e!48665)))

(declare-fun c!11224 () Bool)

(assert (=> b!74479 (= c!11224 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74480 () Bool)

(assert (=> b!74480 (= e!48670 call!6597)))

(declare-fun call!6593 () ListLongMap!1419)

(declare-fun bm!6591 () Bool)

(assert (=> bm!6591 (= call!6593 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74481 () Bool)

(assert (=> b!74481 (= e!48665 (not call!6592))))

(declare-fun b!74482 () Bool)

(declare-fun e!48662 () ListLongMap!1419)

(assert (=> b!74482 (= e!48662 (+!94 call!6595 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!74483 () Bool)

(declare-fun lt!33548 () Unit!2078)

(assert (=> b!74483 (= e!48660 lt!33548)))

(declare-fun lt!33542 () ListLongMap!1419)

(assert (=> b!74483 (= lt!33542 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33561 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33561 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33544 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33544 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33557 () Unit!2078)

(assert (=> b!74483 (= lt!33557 (addStillContains!51 lt!33542 lt!33561 (zeroValue!2115 newMap!16) lt!33544))))

(assert (=> b!74483 (contains!723 (+!94 lt!33542 (tuple2!2123 lt!33561 (zeroValue!2115 newMap!16))) lt!33544)))

(declare-fun lt!33547 () Unit!2078)

(assert (=> b!74483 (= lt!33547 lt!33557)))

(declare-fun lt!33545 () ListLongMap!1419)

(assert (=> b!74483 (= lt!33545 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33550 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33550 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33549 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33549 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33543 () Unit!2078)

(assert (=> b!74483 (= lt!33543 (addApplyDifferent!51 lt!33545 lt!33550 (minValue!2115 newMap!16) lt!33549))))

(assert (=> b!74483 (= (apply!75 (+!94 lt!33545 (tuple2!2123 lt!33550 (minValue!2115 newMap!16))) lt!33549) (apply!75 lt!33545 lt!33549))))

(declare-fun lt!33553 () Unit!2078)

(assert (=> b!74483 (= lt!33553 lt!33543)))

(declare-fun lt!33556 () ListLongMap!1419)

(assert (=> b!74483 (= lt!33556 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33554 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33554 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33555 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33555 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33562 () Unit!2078)

(assert (=> b!74483 (= lt!33562 (addApplyDifferent!51 lt!33556 lt!33554 (zeroValue!2115 newMap!16) lt!33555))))

(assert (=> b!74483 (= (apply!75 (+!94 lt!33556 (tuple2!2123 lt!33554 (zeroValue!2115 newMap!16))) lt!33555) (apply!75 lt!33556 lt!33555))))

(declare-fun lt!33551 () Unit!2078)

(assert (=> b!74483 (= lt!33551 lt!33562)))

(declare-fun lt!33559 () ListLongMap!1419)

(assert (=> b!74483 (= lt!33559 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33560 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33560 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33558 () (_ BitVec 64))

(assert (=> b!74483 (= lt!33558 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74483 (= lt!33548 (addApplyDifferent!51 lt!33559 lt!33560 (minValue!2115 newMap!16) lt!33558))))

(assert (=> b!74483 (= (apply!75 (+!94 lt!33559 (tuple2!2123 lt!33560 (minValue!2115 newMap!16))) lt!33558) (apply!75 lt!33559 lt!33558))))

(declare-fun b!74484 () Bool)

(declare-fun e!48666 () Bool)

(assert (=> b!74484 (= e!48666 (= (apply!75 lt!33552 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74485 () Bool)

(assert (=> b!74485 (= e!48663 (= (apply!75 lt!33552 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74486 () Bool)

(assert (=> b!74486 (= e!48670 call!6591)))

(declare-fun c!11223 () Bool)

(declare-fun bm!6592 () Bool)

(declare-fun c!11227 () Bool)

(assert (=> bm!6592 (= call!6595 (+!94 (ite c!11223 call!6593 (ite c!11227 call!6594 call!6591)) (ite (or c!11223 c!11227) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74487 () Bool)

(assert (=> b!74487 (= e!48662 e!48668)))

(assert (=> b!74487 (= c!11227 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!48669 () Bool)

(declare-fun b!74488 () Bool)

(assert (=> b!74488 (= e!48669 (= (apply!75 lt!33552 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))))))

(assert (=> b!74488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74489 () Bool)

(assert (=> b!74489 (= e!48665 e!48666)))

(declare-fun res!39376 () Bool)

(assert (=> b!74489 (= res!39376 call!6592)))

(assert (=> b!74489 (=> (not res!39376) (not e!48666))))

(declare-fun d!17595 () Bool)

(assert (=> d!17595 e!48658))

(declare-fun res!39373 () Bool)

(assert (=> d!17595 (=> (not res!39373) (not e!48658))))

(assert (=> d!17595 (= res!39373 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!33563 () ListLongMap!1419)

(assert (=> d!17595 (= lt!33552 lt!33563)))

(declare-fun lt!33546 () Unit!2078)

(assert (=> d!17595 (= lt!33546 e!48660)))

(declare-fun c!11225 () Bool)

(declare-fun e!48667 () Bool)

(assert (=> d!17595 (= c!11225 e!48667)))

(declare-fun res!39370 () Bool)

(assert (=> d!17595 (=> (not res!39370) (not e!48667))))

(assert (=> d!17595 (= res!39370 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17595 (= lt!33563 e!48662)))

(assert (=> d!17595 (= c!11223 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17595 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17595 (= (getCurrentListMap!422 (_keys!3865 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33552)))

(declare-fun b!74490 () Bool)

(assert (=> b!74490 (= e!48661 (not call!6596))))

(declare-fun b!74491 () Bool)

(assert (=> b!74491 (= e!48659 e!48669)))

(declare-fun res!39374 () Bool)

(assert (=> b!74491 (=> (not res!39374) (not e!48669))))

(assert (=> b!74491 (= res!39374 (contains!723 lt!33552 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74491 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6593 () Bool)

(assert (=> bm!6593 (= call!6596 (contains!723 lt!33552 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6594 () Bool)

(assert (=> bm!6594 (= call!6594 call!6593)))

(declare-fun b!74492 () Bool)

(assert (=> b!74492 (= e!48668 call!6597)))

(declare-fun b!74493 () Bool)

(assert (=> b!74493 (= e!48667 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17595 c!11223) b!74482))

(assert (= (and d!17595 (not c!11223)) b!74487))

(assert (= (and b!74487 c!11227) b!74492))

(assert (= (and b!74487 (not c!11227)) b!74475))

(assert (= (and b!74475 c!11228) b!74480))

(assert (= (and b!74475 (not c!11228)) b!74486))

(assert (= (or b!74480 b!74486) bm!6588))

(assert (= (or b!74492 bm!6588) bm!6594))

(assert (= (or b!74492 b!74480) bm!6590))

(assert (= (or b!74482 bm!6594) bm!6591))

(assert (= (or b!74482 bm!6590) bm!6592))

(assert (= (and d!17595 res!39370) b!74493))

(assert (= (and d!17595 c!11225) b!74483))

(assert (= (and d!17595 (not c!11225)) b!74478))

(assert (= (and d!17595 res!39373) b!74476))

(assert (= (and b!74476 res!39375) b!74474))

(assert (= (and b!74476 (not res!39377)) b!74491))

(assert (= (and b!74491 res!39374) b!74488))

(assert (= (and b!74476 res!39372) b!74477))

(assert (= (and b!74477 c!11226) b!74473))

(assert (= (and b!74477 (not c!11226)) b!74490))

(assert (= (and b!74473 res!39371) b!74485))

(assert (= (or b!74473 b!74490) bm!6593))

(assert (= (and b!74477 res!39369) b!74479))

(assert (= (and b!74479 c!11224) b!74489))

(assert (= (and b!74479 (not c!11224)) b!74481))

(assert (= (and b!74489 res!39376) b!74484))

(assert (= (or b!74489 b!74481) bm!6589))

(declare-fun b_lambda!3335 () Bool)

(assert (=> (not b_lambda!3335) (not b!74488)))

(assert (=> b!74488 t!5042))

(declare-fun b_and!4567 () Bool)

(assert (= b_and!4563 (and (=> t!5042 result!2693) b_and!4567)))

(assert (=> b!74488 t!5044))

(declare-fun b_and!4569 () Bool)

(assert (= b_and!4565 (and (=> t!5044 result!2695) b_and!4569)))

(assert (=> b!74488 m!71563))

(declare-fun m!73811 () Bool)

(assert (=> b!74488 m!73811))

(assert (=> b!74488 m!71717))

(declare-fun m!73813 () Bool)

(assert (=> b!74488 m!73813))

(assert (=> b!74488 m!71563))

(declare-fun m!73815 () Bool)

(assert (=> b!74488 m!73815))

(assert (=> b!74488 m!71717))

(assert (=> b!74488 m!73811))

(declare-fun m!73817 () Bool)

(assert (=> bm!6591 m!73817))

(assert (=> d!17595 m!71705))

(declare-fun m!73819 () Bool)

(assert (=> bm!6589 m!73819))

(declare-fun m!73821 () Bool)

(assert (=> bm!6593 m!73821))

(declare-fun m!73823 () Bool)

(assert (=> bm!6592 m!73823))

(declare-fun m!73825 () Bool)

(assert (=> b!74485 m!73825))

(assert (=> b!74474 m!71563))

(assert (=> b!74474 m!71563))

(assert (=> b!74474 m!71567))

(assert (=> b!74493 m!71563))

(assert (=> b!74493 m!71563))

(assert (=> b!74493 m!71567))

(declare-fun m!73827 () Bool)

(assert (=> b!74482 m!73827))

(declare-fun m!73829 () Bool)

(assert (=> b!74484 m!73829))

(declare-fun m!73831 () Bool)

(assert (=> b!74483 m!73831))

(declare-fun m!73833 () Bool)

(assert (=> b!74483 m!73833))

(assert (=> b!74483 m!73817))

(declare-fun m!73835 () Bool)

(assert (=> b!74483 m!73835))

(assert (=> b!74483 m!71563))

(declare-fun m!73837 () Bool)

(assert (=> b!74483 m!73837))

(declare-fun m!73839 () Bool)

(assert (=> b!74483 m!73839))

(declare-fun m!73841 () Bool)

(assert (=> b!74483 m!73841))

(declare-fun m!73843 () Bool)

(assert (=> b!74483 m!73843))

(declare-fun m!73845 () Bool)

(assert (=> b!74483 m!73845))

(declare-fun m!73847 () Bool)

(assert (=> b!74483 m!73847))

(declare-fun m!73849 () Bool)

(assert (=> b!74483 m!73849))

(declare-fun m!73851 () Bool)

(assert (=> b!74483 m!73851))

(assert (=> b!74483 m!73849))

(declare-fun m!73853 () Bool)

(assert (=> b!74483 m!73853))

(assert (=> b!74483 m!73831))

(declare-fun m!73855 () Bool)

(assert (=> b!74483 m!73855))

(assert (=> b!74483 m!73843))

(assert (=> b!74483 m!73833))

(declare-fun m!73857 () Bool)

(assert (=> b!74483 m!73857))

(declare-fun m!73859 () Bool)

(assert (=> b!74483 m!73859))

(assert (=> b!74491 m!71563))

(assert (=> b!74491 m!71563))

(declare-fun m!73861 () Bool)

(assert (=> b!74491 m!73861))

(assert (=> b!73692 d!17595))

(declare-fun b!74496 () Bool)

(declare-fun e!48672 () Option!139)

(assert (=> b!74496 (= e!48672 (getValueByKey!133 (t!5035 (toList!725 lt!32891)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!17597 () Bool)

(declare-fun c!11229 () Bool)

(assert (=> d!17597 (= c!11229 (and ((_ is Cons!1474) (toList!725 lt!32891)) (= (_1!1072 (h!2061 (toList!725 lt!32891))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!48671 () Option!139)

(assert (=> d!17597 (= (getValueByKey!133 (toList!725 lt!32891) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48671)))

(declare-fun b!74495 () Bool)

(assert (=> b!74495 (= e!48671 e!48672)))

(declare-fun c!11230 () Bool)

(assert (=> b!74495 (= c!11230 (and ((_ is Cons!1474) (toList!725 lt!32891)) (not (= (_1!1072 (h!2061 (toList!725 lt!32891))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!74494 () Bool)

(assert (=> b!74494 (= e!48671 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32891)))))))

(declare-fun b!74497 () Bool)

(assert (=> b!74497 (= e!48672 None!137)))

(assert (= (and d!17597 c!11229) b!74494))

(assert (= (and d!17597 (not c!11229)) b!74495))

(assert (= (and b!74495 c!11230) b!74496))

(assert (= (and b!74495 (not c!11230)) b!74497))

(declare-fun m!73863 () Bool)

(assert (=> b!74496 m!73863))

(assert (=> b!73421 d!17597))

(declare-fun b!74498 () Bool)

(declare-fun e!48675 () List!1478)

(declare-fun call!6598 () List!1478)

(assert (=> b!74498 (= e!48675 call!6598)))

(declare-fun b!74499 () Bool)

(declare-fun e!48677 () List!1478)

(declare-fun call!6599 () List!1478)

(assert (=> b!74499 (= e!48677 call!6599)))

(declare-fun b!74500 () Bool)

(declare-fun e!48673 () List!1478)

(declare-fun call!6600 () List!1478)

(assert (=> b!74500 (= e!48673 call!6600)))

(declare-fun b!74501 () Bool)

(declare-fun c!11234 () Bool)

(declare-fun e!48674 () List!1478)

(declare-fun c!11232 () Bool)

(assert (=> b!74501 (= e!48674 (ite c!11234 (t!5035 (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (ite c!11232 (Cons!1474 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (t!5035 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))))) Nil!1475)))))

(declare-fun b!74502 () Bool)

(assert (=> b!74502 (= e!48673 e!48675)))

(assert (=> b!74502 (= c!11234 (and ((_ is Cons!1474) (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (= (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))))) (_1!1072 lt!32542))))))

(declare-fun bm!6595 () Bool)

(assert (=> bm!6595 (= call!6599 call!6598)))

(declare-fun c!11231 () Bool)

(declare-fun bm!6596 () Bool)

(assert (=> bm!6596 (= call!6600 ($colon$colon!66 e!48674 (ite c!11231 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542)))))))

(declare-fun c!11233 () Bool)

(assert (=> bm!6596 (= c!11233 c!11231)))

(declare-fun b!74503 () Bool)

(declare-fun res!39379 () Bool)

(declare-fun e!48676 () Bool)

(assert (=> b!74503 (=> (not res!39379) (not e!48676))))

(declare-fun lt!33564 () List!1478)

(assert (=> b!74503 (= res!39379 (containsKey!137 lt!33564 (_1!1072 lt!32542)))))

(declare-fun bm!6597 () Bool)

(assert (=> bm!6597 (= call!6598 call!6600)))

(declare-fun b!74504 () Bool)

(assert (=> b!74504 (= e!48676 (contains!724 lt!33564 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!74505 () Bool)

(assert (=> b!74505 (= e!48677 call!6599)))

(declare-fun b!74506 () Bool)

(assert (=> b!74506 (= e!48674 (insertStrictlySorted!53 (t!5035 (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (_1!1072 lt!32542) (_2!1072 lt!32542)))))

(declare-fun b!74507 () Bool)

(assert (=> b!74507 (= c!11232 (and ((_ is Cons!1474) (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (bvsgt (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))))) (_1!1072 lt!32542))))))

(assert (=> b!74507 (= e!48675 e!48677)))

(declare-fun d!17599 () Bool)

(assert (=> d!17599 e!48676))

(declare-fun res!39378 () Bool)

(assert (=> d!17599 (=> (not res!39378) (not e!48676))))

(assert (=> d!17599 (= res!39378 (isStrictlySorted!292 lt!33564))))

(assert (=> d!17599 (= lt!33564 e!48673)))

(assert (=> d!17599 (= c!11231 (and ((_ is Cons!1474) (t!5035 (toList!725 (+!94 lt!32540 lt!32538)))) (bvslt (_1!1072 (h!2061 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))))) (_1!1072 lt!32542))))))

(assert (=> d!17599 (isStrictlySorted!292 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))))))

(assert (=> d!17599 (= (insertStrictlySorted!53 (t!5035 (toList!725 (+!94 lt!32540 lt!32538))) (_1!1072 lt!32542) (_2!1072 lt!32542)) lt!33564)))

(assert (= (and d!17599 c!11231) b!74500))

(assert (= (and d!17599 (not c!11231)) b!74502))

(assert (= (and b!74502 c!11234) b!74498))

(assert (= (and b!74502 (not c!11234)) b!74507))

(assert (= (and b!74507 c!11232) b!74505))

(assert (= (and b!74507 (not c!11232)) b!74499))

(assert (= (or b!74505 b!74499) bm!6595))

(assert (= (or b!74498 bm!6595) bm!6597))

(assert (= (or b!74500 bm!6597) bm!6596))

(assert (= (and bm!6596 c!11233) b!74506))

(assert (= (and bm!6596 (not c!11233)) b!74501))

(assert (= (and d!17599 res!39378) b!74503))

(assert (= (and b!74503 res!39379) b!74504))

(declare-fun m!73865 () Bool)

(assert (=> bm!6596 m!73865))

(declare-fun m!73867 () Bool)

(assert (=> b!74506 m!73867))

(declare-fun m!73869 () Bool)

(assert (=> b!74504 m!73869))

(declare-fun m!73871 () Bool)

(assert (=> d!17599 m!73871))

(assert (=> d!17599 m!73471))

(declare-fun m!73873 () Bool)

(assert (=> b!74503 m!73873))

(assert (=> b!73473 d!17599))

(declare-fun d!17601 () Bool)

(assert (=> d!17601 (= (get!1142 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2534 (getValueByKey!133 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17059 d!17601))

(assert (=> d!17059 d!17077))

(declare-fun b!74508 () Bool)

(declare-fun e!48679 () Bool)

(assert (=> b!74508 (= e!48679 (contains!725 Nil!1476 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(declare-fun b!74509 () Bool)

(declare-fun e!48678 () Bool)

(declare-fun call!6601 () Bool)

(assert (=> b!74509 (= e!48678 call!6601)))

(declare-fun b!74510 () Bool)

(declare-fun e!48680 () Bool)

(declare-fun e!48681 () Bool)

(assert (=> b!74510 (= e!48680 e!48681)))

(declare-fun res!39382 () Bool)

(assert (=> b!74510 (=> (not res!39382) (not e!48681))))

(assert (=> b!74510 (= res!39382 (not e!48679))))

(declare-fun res!39381 () Bool)

(assert (=> b!74510 (=> (not res!39381) (not e!48679))))

(assert (=> b!74510 (= res!39381 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(declare-fun b!74511 () Bool)

(assert (=> b!74511 (= e!48681 e!48678)))

(declare-fun c!11235 () Bool)

(assert (=> b!74511 (= c!11235 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000)))))

(declare-fun b!74512 () Bool)

(assert (=> b!74512 (= e!48678 call!6601)))

(declare-fun d!17603 () Bool)

(declare-fun res!39380 () Bool)

(assert (=> d!17603 (=> res!39380 e!48680)))

(assert (=> d!17603 (= res!39380 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!32791)))))))

(assert (=> d!17603 (= (arrayNoDuplicates!0 (_keys!3865 (_2!1073 lt!32791)) #b00000000000000000000000000000000 Nil!1476) e!48680)))

(declare-fun bm!6598 () Bool)

(assert (=> bm!6598 (= call!6601 (arrayNoDuplicates!0 (_keys!3865 (_2!1073 lt!32791)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11235 (Cons!1475 (select (arr!1859 (_keys!3865 (_2!1073 lt!32791))) #b00000000000000000000000000000000) Nil!1476) Nil!1476)))))

(assert (= (and d!17603 (not res!39380)) b!74510))

(assert (= (and b!74510 res!39381) b!74508))

(assert (= (and b!74510 res!39382) b!74511))

(assert (= (and b!74511 c!11235) b!74509))

(assert (= (and b!74511 (not c!11235)) b!74512))

(assert (= (or b!74509 b!74512) bm!6598))

(assert (=> b!74508 m!73313))

(assert (=> b!74508 m!73313))

(declare-fun m!73875 () Bool)

(assert (=> b!74508 m!73875))

(assert (=> b!74510 m!73313))

(assert (=> b!74510 m!73313))

(assert (=> b!74510 m!73315))

(assert (=> b!74511 m!73313))

(assert (=> b!74511 m!73313))

(assert (=> b!74511 m!73315))

(assert (=> bm!6598 m!73313))

(declare-fun m!73877 () Bool)

(assert (=> bm!6598 m!73877))

(assert (=> b!73455 d!17603))

(declare-fun lt!33565 () Bool)

(declare-fun d!17605 () Bool)

(assert (=> d!17605 (= lt!33565 (select (content!77 (toList!725 lt!32824)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun e!48682 () Bool)

(assert (=> d!17605 (= lt!33565 e!48682)))

(declare-fun res!39383 () Bool)

(assert (=> d!17605 (=> (not res!39383) (not e!48682))))

(assert (=> d!17605 (= res!39383 ((_ is Cons!1474) (toList!725 lt!32824)))))

(assert (=> d!17605 (= (contains!724 (toList!725 lt!32824) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!33565)))

(declare-fun b!74513 () Bool)

(declare-fun e!48683 () Bool)

(assert (=> b!74513 (= e!48682 e!48683)))

(declare-fun res!39384 () Bool)

(assert (=> b!74513 (=> res!39384 e!48683)))

(assert (=> b!74513 (= res!39384 (= (h!2061 (toList!725 lt!32824)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(declare-fun b!74514 () Bool)

(assert (=> b!74514 (= e!48683 (contains!724 (t!5035 (toList!725 lt!32824)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!17605 res!39383) b!74513))

(assert (= (and b!74513 (not res!39384)) b!74514))

(declare-fun m!73879 () Bool)

(assert (=> d!17605 m!73879))

(declare-fun m!73881 () Bool)

(assert (=> d!17605 m!73881))

(declare-fun m!73883 () Bool)

(assert (=> b!74514 m!73883))

(assert (=> b!73289 d!17605))

(declare-fun d!17607 () Bool)

(declare-fun res!39385 () Bool)

(declare-fun e!48684 () Bool)

(assert (=> d!17607 (=> res!39385 e!48684)))

(assert (=> d!17607 (= res!39385 (and ((_ is Cons!1474) (toList!725 lt!32594)) (= (_1!1072 (h!2061 (toList!725 lt!32594))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17607 (= (containsKey!137 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000) e!48684)))

(declare-fun b!74515 () Bool)

(declare-fun e!48685 () Bool)

(assert (=> b!74515 (= e!48684 e!48685)))

(declare-fun res!39386 () Bool)

(assert (=> b!74515 (=> (not res!39386) (not e!48685))))

(assert (=> b!74515 (= res!39386 (and (or (not ((_ is Cons!1474) (toList!725 lt!32594))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32594))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1474) (toList!725 lt!32594)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32594))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74516 () Bool)

(assert (=> b!74516 (= e!48685 (containsKey!137 (t!5035 (toList!725 lt!32594)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17607 (not res!39385)) b!74515))

(assert (= (and b!74515 res!39386) b!74516))

(declare-fun m!73885 () Bool)

(assert (=> b!74516 m!73885))

(assert (=> d!17049 d!17607))

(declare-fun b!74519 () Bool)

(declare-fun e!48687 () Option!139)

(assert (=> b!74519 (= e!48687 (getValueByKey!133 (t!5035 (t!5035 (toList!725 lt!32618))) (_1!1072 lt!32538)))))

(declare-fun d!17609 () Bool)

(declare-fun c!11236 () Bool)

(assert (=> d!17609 (= c!11236 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32618))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32618)))) (_1!1072 lt!32538))))))

(declare-fun e!48686 () Option!139)

(assert (=> d!17609 (= (getValueByKey!133 (t!5035 (toList!725 lt!32618)) (_1!1072 lt!32538)) e!48686)))

(declare-fun b!74518 () Bool)

(assert (=> b!74518 (= e!48686 e!48687)))

(declare-fun c!11237 () Bool)

(assert (=> b!74518 (= c!11237 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32618))) (not (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32618)))) (_1!1072 lt!32538)))))))

(declare-fun b!74517 () Bool)

(assert (=> b!74517 (= e!48686 (Some!138 (_2!1072 (h!2061 (t!5035 (toList!725 lt!32618))))))))

(declare-fun b!74520 () Bool)

(assert (=> b!74520 (= e!48687 None!137)))

(assert (= (and d!17609 c!11236) b!74517))

(assert (= (and d!17609 (not c!11236)) b!74518))

(assert (= (and b!74518 c!11237) b!74519))

(assert (= (and b!74518 (not c!11237)) b!74520))

(declare-fun m!73887 () Bool)

(assert (=> b!74519 m!73887))

(assert (=> b!73592 d!17609))

(assert (=> b!73452 d!17061))

(declare-fun d!17611 () Bool)

(declare-fun lt!33566 () Bool)

(assert (=> d!17611 (= lt!33566 (select (content!77 (toList!725 lt!33111)) (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48688 () Bool)

(assert (=> d!17611 (= lt!33566 e!48688)))

(declare-fun res!39387 () Bool)

(assert (=> d!17611 (=> (not res!39387) (not e!48688))))

(assert (=> d!17611 (= res!39387 ((_ is Cons!1474) (toList!725 lt!33111)))))

(assert (=> d!17611 (= (contains!724 (toList!725 lt!33111) (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33566)))

(declare-fun b!74521 () Bool)

(declare-fun e!48689 () Bool)

(assert (=> b!74521 (= e!48688 e!48689)))

(declare-fun res!39388 () Bool)

(assert (=> b!74521 (=> res!39388 e!48689)))

(assert (=> b!74521 (= res!39388 (= (h!2061 (toList!725 lt!33111)) (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74522 () Bool)

(assert (=> b!74522 (= e!48689 (contains!724 (t!5035 (toList!725 lt!33111)) (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17611 res!39387) b!74521))

(assert (= (and b!74521 (not res!39388)) b!74522))

(declare-fun m!73889 () Bool)

(assert (=> d!17611 m!73889))

(declare-fun m!73891 () Bool)

(assert (=> d!17611 m!73891))

(declare-fun m!73893 () Bool)

(assert (=> b!74522 m!73893))

(assert (=> b!73659 d!17611))

(declare-fun d!17613 () Bool)

(assert (=> d!17613 (= (isEmpty!317 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) (not ((_ is Some!138) (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))))

(assert (=> d!16965 d!17613))

(declare-fun d!17615 () Bool)

(assert (=> d!17615 (= (get!1141 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73305 d!17615))

(declare-fun d!17617 () Bool)

(declare-fun res!39389 () Bool)

(declare-fun e!48690 () Bool)

(assert (=> d!17617 (=> res!39389 e!48690)))

(assert (=> d!17617 (= res!39389 (and ((_ is Cons!1474) lt!33142) (= (_1!1072 (h!2061 lt!33142)) (_1!1072 lt!32542))))))

(assert (=> d!17617 (= (containsKey!137 lt!33142 (_1!1072 lt!32542)) e!48690)))

(declare-fun b!74523 () Bool)

(declare-fun e!48691 () Bool)

(assert (=> b!74523 (= e!48690 e!48691)))

(declare-fun res!39390 () Bool)

(assert (=> b!74523 (=> (not res!39390) (not e!48691))))

(assert (=> b!74523 (= res!39390 (and (or (not ((_ is Cons!1474) lt!33142)) (bvsle (_1!1072 (h!2061 lt!33142)) (_1!1072 lt!32542))) ((_ is Cons!1474) lt!33142) (bvslt (_1!1072 (h!2061 lt!33142)) (_1!1072 lt!32542))))))

(declare-fun b!74524 () Bool)

(assert (=> b!74524 (= e!48691 (containsKey!137 (t!5035 lt!33142) (_1!1072 lt!32542)))))

(assert (= (and d!17617 (not res!39389)) b!74523))

(assert (= (and b!74523 res!39390) b!74524))

(declare-fun m!73895 () Bool)

(assert (=> b!74524 m!73895))

(assert (=> b!73707 d!17617))

(assert (=> b!73281 d!17449))

(assert (=> b!73281 d!17403))

(declare-fun d!17619 () Bool)

(declare-fun e!48693 () Bool)

(assert (=> d!17619 e!48693))

(declare-fun res!39391 () Bool)

(assert (=> d!17619 (=> res!39391 e!48693)))

(declare-fun lt!33570 () Bool)

(assert (=> d!17619 (= res!39391 (not lt!33570))))

(declare-fun lt!33569 () Bool)

(assert (=> d!17619 (= lt!33570 lt!33569)))

(declare-fun lt!33568 () Unit!2078)

(declare-fun e!48692 () Unit!2078)

(assert (=> d!17619 (= lt!33568 e!48692)))

(declare-fun c!11238 () Bool)

(assert (=> d!17619 (= c!11238 lt!33569)))

(assert (=> d!17619 (= lt!33569 (containsKey!137 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (=> d!17619 (= (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))) lt!33570)))

(declare-fun b!74525 () Bool)

(declare-fun lt!33567 () Unit!2078)

(assert (=> b!74525 (= e!48692 lt!33567)))

(assert (=> b!74525 (= lt!33567 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(assert (=> b!74525 (isDefined!86 (getValueByKey!133 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789))))))

(declare-fun b!74526 () Bool)

(declare-fun Unit!2139 () Unit!2078)

(assert (=> b!74526 (= e!48692 Unit!2139)))

(declare-fun b!74527 () Bool)

(assert (=> b!74527 (= e!48693 (isDefined!86 (getValueByKey!133 (toList!725 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))))

(assert (= (and d!17619 c!11238) b!74525))

(assert (= (and d!17619 (not c!11238)) b!74526))

(assert (= (and d!17619 (not res!39391)) b!74527))

(assert (=> d!17619 m!71521))

(declare-fun m!73897 () Bool)

(assert (=> d!17619 m!73897))

(assert (=> b!74525 m!71521))

(declare-fun m!73899 () Bool)

(assert (=> b!74525 m!73899))

(assert (=> b!74525 m!71521))

(declare-fun m!73901 () Bool)

(assert (=> b!74525 m!73901))

(assert (=> b!74525 m!73901))

(declare-fun m!73903 () Bool)

(assert (=> b!74525 m!73903))

(assert (=> b!74527 m!71521))

(assert (=> b!74527 m!73901))

(assert (=> b!74527 m!73901))

(assert (=> b!74527 m!73903))

(assert (=> b!73689 d!17619))

(declare-fun b!74528 () Bool)

(declare-fun e!48697 () Bool)

(declare-fun e!48699 () Bool)

(assert (=> b!74528 (= e!48697 e!48699)))

(declare-fun res!39394 () Bool)

(declare-fun call!6607 () Bool)

(assert (=> b!74528 (= res!39394 call!6607)))

(assert (=> b!74528 (=> (not res!39394) (not e!48699))))

(declare-fun b!74529 () Bool)

(declare-fun e!48700 () Bool)

(assert (=> b!74529 (= e!48700 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74530 () Bool)

(declare-fun c!11244 () Bool)

(assert (=> b!74530 (= c!11244 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48704 () ListLongMap!1419)

(declare-fun e!48706 () ListLongMap!1419)

(assert (=> b!74530 (= e!48704 e!48706)))

(declare-fun bm!6599 () Bool)

(declare-fun call!6602 () ListLongMap!1419)

(declare-fun call!6605 () ListLongMap!1419)

(assert (=> bm!6599 (= call!6602 call!6605)))

(declare-fun b!74531 () Bool)

(declare-fun res!39395 () Bool)

(declare-fun e!48694 () Bool)

(assert (=> b!74531 (=> (not res!39395) (not e!48694))))

(declare-fun e!48695 () Bool)

(assert (=> b!74531 (= res!39395 e!48695)))

(declare-fun res!39400 () Bool)

(assert (=> b!74531 (=> res!39400 e!48695)))

(assert (=> b!74531 (= res!39400 (not e!48700))))

(declare-fun res!39398 () Bool)

(assert (=> b!74531 (=> (not res!39398) (not e!48700))))

(assert (=> b!74531 (= res!39398 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6600 () Bool)

(declare-fun call!6603 () Bool)

(declare-fun lt!33581 () ListLongMap!1419)

(assert (=> bm!6600 (= call!6603 (contains!723 lt!33581 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74532 () Bool)

(declare-fun res!39392 () Bool)

(assert (=> b!74532 (=> (not res!39392) (not e!48694))))

(assert (=> b!74532 (= res!39392 e!48697)))

(declare-fun c!11242 () Bool)

(assert (=> b!74532 (= c!11242 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6601 () Bool)

(declare-fun call!6608 () ListLongMap!1419)

(declare-fun call!6606 () ListLongMap!1419)

(assert (=> bm!6601 (= call!6608 call!6606)))

(declare-fun b!74533 () Bool)

(declare-fun e!48696 () Unit!2078)

(declare-fun Unit!2140 () Unit!2078)

(assert (=> b!74533 (= e!48696 Unit!2140)))

(declare-fun b!74534 () Bool)

(declare-fun e!48701 () Bool)

(assert (=> b!74534 (= e!48694 e!48701)))

(declare-fun c!11240 () Bool)

(assert (=> b!74534 (= c!11240 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74535 () Bool)

(assert (=> b!74535 (= e!48706 call!6608)))

(declare-fun bm!6602 () Bool)

(declare-fun call!6604 () ListLongMap!1419)

(assert (=> bm!6602 (= call!6604 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74536 () Bool)

(assert (=> b!74536 (= e!48701 (not call!6603))))

(declare-fun b!74537 () Bool)

(declare-fun e!48698 () ListLongMap!1419)

(assert (=> b!74537 (= e!48698 (+!94 call!6606 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!74538 () Bool)

(declare-fun lt!33577 () Unit!2078)

(assert (=> b!74538 (= e!48696 lt!33577)))

(declare-fun lt!33571 () ListLongMap!1419)

(assert (=> b!74538 (= lt!33571 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33590 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33590 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33573 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33573 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33586 () Unit!2078)

(assert (=> b!74538 (= lt!33586 (addStillContains!51 lt!33571 lt!33590 (zeroValue!2115 newMap!16) lt!33573))))

(assert (=> b!74538 (contains!723 (+!94 lt!33571 (tuple2!2123 lt!33590 (zeroValue!2115 newMap!16))) lt!33573)))

(declare-fun lt!33576 () Unit!2078)

(assert (=> b!74538 (= lt!33576 lt!33586)))

(declare-fun lt!33574 () ListLongMap!1419)

(assert (=> b!74538 (= lt!33574 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33579 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33579 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33578 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33578 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33572 () Unit!2078)

(assert (=> b!74538 (= lt!33572 (addApplyDifferent!51 lt!33574 lt!33579 (minValue!2115 newMap!16) lt!33578))))

(assert (=> b!74538 (= (apply!75 (+!94 lt!33574 (tuple2!2123 lt!33579 (minValue!2115 newMap!16))) lt!33578) (apply!75 lt!33574 lt!33578))))

(declare-fun lt!33582 () Unit!2078)

(assert (=> b!74538 (= lt!33582 lt!33572)))

(declare-fun lt!33585 () ListLongMap!1419)

(assert (=> b!74538 (= lt!33585 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33583 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33583 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33584 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33584 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33591 () Unit!2078)

(assert (=> b!74538 (= lt!33591 (addApplyDifferent!51 lt!33585 lt!33583 (zeroValue!2115 newMap!16) lt!33584))))

(assert (=> b!74538 (= (apply!75 (+!94 lt!33585 (tuple2!2123 lt!33583 (zeroValue!2115 newMap!16))) lt!33584) (apply!75 lt!33585 lt!33584))))

(declare-fun lt!33580 () Unit!2078)

(assert (=> b!74538 (= lt!33580 lt!33591)))

(declare-fun lt!33588 () ListLongMap!1419)

(assert (=> b!74538 (= lt!33588 (getCurrentListMapNoExtraKeys!59 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33589 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33589 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33587 () (_ BitVec 64))

(assert (=> b!74538 (= lt!33587 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74538 (= lt!33577 (addApplyDifferent!51 lt!33588 lt!33589 (minValue!2115 newMap!16) lt!33587))))

(assert (=> b!74538 (= (apply!75 (+!94 lt!33588 (tuple2!2123 lt!33589 (minValue!2115 newMap!16))) lt!33587) (apply!75 lt!33588 lt!33587))))

(declare-fun b!74539 () Bool)

(declare-fun e!48702 () Bool)

(assert (=> b!74539 (= e!48702 (= (apply!75 lt!33581 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74540 () Bool)

(assert (=> b!74540 (= e!48699 (= (apply!75 lt!33581 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74541 () Bool)

(assert (=> b!74541 (= e!48706 call!6602)))

(declare-fun bm!6603 () Bool)

(declare-fun c!11243 () Bool)

(declare-fun c!11239 () Bool)

(assert (=> bm!6603 (= call!6606 (+!94 (ite c!11239 call!6604 (ite c!11243 call!6605 call!6602)) (ite (or c!11239 c!11243) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74542 () Bool)

(assert (=> b!74542 (= e!48698 e!48704)))

(assert (=> b!74542 (= c!11243 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!48705 () Bool)

(declare-fun b!74543 () Bool)

(assert (=> b!74543 (= e!48705 (= (apply!75 lt!33581 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 lt!32777) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74543 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 lt!32777)))))

(assert (=> b!74543 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74544 () Bool)

(assert (=> b!74544 (= e!48701 e!48702)))

(declare-fun res!39399 () Bool)

(assert (=> b!74544 (= res!39399 call!6603)))

(assert (=> b!74544 (=> (not res!39399) (not e!48702))))

(declare-fun d!17621 () Bool)

(assert (=> d!17621 e!48694))

(declare-fun res!39396 () Bool)

(assert (=> d!17621 (=> (not res!39396) (not e!48694))))

(assert (=> d!17621 (= res!39396 (or (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun lt!33592 () ListLongMap!1419)

(assert (=> d!17621 (= lt!33581 lt!33592)))

(declare-fun lt!33575 () Unit!2078)

(assert (=> d!17621 (= lt!33575 e!48696)))

(declare-fun c!11241 () Bool)

(declare-fun e!48703 () Bool)

(assert (=> d!17621 (= c!11241 e!48703)))

(declare-fun res!39393 () Bool)

(assert (=> d!17621 (=> (not res!39393) (not e!48703))))

(assert (=> d!17621 (= res!39393 (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17621 (= lt!33592 e!48698)))

(assert (=> d!17621 (= c!11239 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17621 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17621 (= (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33581)))

(declare-fun b!74545 () Bool)

(assert (=> b!74545 (= e!48697 (not call!6607))))

(declare-fun b!74546 () Bool)

(assert (=> b!74546 (= e!48695 e!48705)))

(declare-fun res!39397 () Bool)

(assert (=> b!74546 (=> (not res!39397) (not e!48705))))

(assert (=> b!74546 (= res!39397 (contains!723 lt!33581 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74546 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(declare-fun bm!6604 () Bool)

(assert (=> bm!6604 (= call!6607 (contains!723 lt!33581 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6605 () Bool)

(assert (=> bm!6605 (= call!6605 call!6604)))

(declare-fun b!74547 () Bool)

(assert (=> b!74547 (= e!48704 call!6608)))

(declare-fun b!74548 () Bool)

(assert (=> b!74548 (= e!48703 (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17621 c!11239) b!74537))

(assert (= (and d!17621 (not c!11239)) b!74542))

(assert (= (and b!74542 c!11243) b!74547))

(assert (= (and b!74542 (not c!11243)) b!74530))

(assert (= (and b!74530 c!11244) b!74535))

(assert (= (and b!74530 (not c!11244)) b!74541))

(assert (= (or b!74535 b!74541) bm!6599))

(assert (= (or b!74547 bm!6599) bm!6605))

(assert (= (or b!74547 b!74535) bm!6601))

(assert (= (or b!74537 bm!6605) bm!6602))

(assert (= (or b!74537 bm!6601) bm!6603))

(assert (= (and d!17621 res!39393) b!74548))

(assert (= (and d!17621 c!11241) b!74538))

(assert (= (and d!17621 (not c!11241)) b!74533))

(assert (= (and d!17621 res!39396) b!74531))

(assert (= (and b!74531 res!39398) b!74529))

(assert (= (and b!74531 (not res!39400)) b!74546))

(assert (= (and b!74546 res!39397) b!74543))

(assert (= (and b!74531 res!39395) b!74532))

(assert (= (and b!74532 c!11242) b!74528))

(assert (= (and b!74532 (not c!11242)) b!74545))

(assert (= (and b!74528 res!39394) b!74540))

(assert (= (or b!74528 b!74545) bm!6604))

(assert (= (and b!74532 res!39392) b!74534))

(assert (= (and b!74534 c!11240) b!74544))

(assert (= (and b!74534 (not c!11240)) b!74536))

(assert (= (and b!74544 res!39399) b!74539))

(assert (= (or b!74544 b!74536) bm!6600))

(declare-fun b_lambda!3337 () Bool)

(assert (=> (not b_lambda!3337) (not b!74543)))

(assert (=> b!74543 t!5042))

(declare-fun b_and!4571 () Bool)

(assert (= b_and!4567 (and (=> t!5042 result!2693) b_and!4571)))

(assert (=> b!74543 t!5044))

(declare-fun b_and!4573 () Bool)

(assert (= b_and!4569 (and (=> t!5044 result!2695) b_and!4573)))

(assert (=> b!74543 m!71563))

(declare-fun m!73905 () Bool)

(assert (=> b!74543 m!73905))

(assert (=> b!74543 m!71717))

(declare-fun m!73907 () Bool)

(assert (=> b!74543 m!73907))

(assert (=> b!74543 m!71563))

(declare-fun m!73909 () Bool)

(assert (=> b!74543 m!73909))

(assert (=> b!74543 m!71717))

(assert (=> b!74543 m!73905))

(declare-fun m!73911 () Bool)

(assert (=> bm!6602 m!73911))

(assert (=> d!17621 m!71705))

(declare-fun m!73913 () Bool)

(assert (=> bm!6600 m!73913))

(declare-fun m!73915 () Bool)

(assert (=> bm!6604 m!73915))

(declare-fun m!73917 () Bool)

(assert (=> bm!6603 m!73917))

(declare-fun m!73919 () Bool)

(assert (=> b!74540 m!73919))

(assert (=> b!74529 m!71563))

(assert (=> b!74529 m!71563))

(assert (=> b!74529 m!71567))

(assert (=> b!74548 m!71563))

(assert (=> b!74548 m!71563))

(assert (=> b!74548 m!71567))

(declare-fun m!73921 () Bool)

(assert (=> b!74537 m!73921))

(declare-fun m!73923 () Bool)

(assert (=> b!74539 m!73923))

(declare-fun m!73925 () Bool)

(assert (=> b!74538 m!73925))

(declare-fun m!73927 () Bool)

(assert (=> b!74538 m!73927))

(assert (=> b!74538 m!73911))

(declare-fun m!73929 () Bool)

(assert (=> b!74538 m!73929))

(assert (=> b!74538 m!71563))

(declare-fun m!73931 () Bool)

(assert (=> b!74538 m!73931))

(declare-fun m!73933 () Bool)

(assert (=> b!74538 m!73933))

(declare-fun m!73935 () Bool)

(assert (=> b!74538 m!73935))

(declare-fun m!73937 () Bool)

(assert (=> b!74538 m!73937))

(declare-fun m!73939 () Bool)

(assert (=> b!74538 m!73939))

(declare-fun m!73941 () Bool)

(assert (=> b!74538 m!73941))

(declare-fun m!73943 () Bool)

(assert (=> b!74538 m!73943))

(declare-fun m!73945 () Bool)

(assert (=> b!74538 m!73945))

(assert (=> b!74538 m!73943))

(declare-fun m!73947 () Bool)

(assert (=> b!74538 m!73947))

(assert (=> b!74538 m!73925))

(declare-fun m!73949 () Bool)

(assert (=> b!74538 m!73949))

(assert (=> b!74538 m!73937))

(assert (=> b!74538 m!73927))

(declare-fun m!73951 () Bool)

(assert (=> b!74538 m!73951))

(declare-fun m!73953 () Bool)

(assert (=> b!74538 m!73953))

(assert (=> b!74546 m!71563))

(assert (=> b!74546 m!71563))

(declare-fun m!73955 () Bool)

(assert (=> b!74546 m!73955))

(assert (=> b!73689 d!17621))

(declare-fun d!17623 () Bool)

(assert (=> d!17623 (= (inRange!0 (ite c!10960 (index!3076 lt!33023) (ite c!10957 (index!3075 lt!33028) (index!3078 lt!33028))) (mask!6180 newMap!16)) (and (bvsge (ite c!10960 (index!3076 lt!33023) (ite c!10957 (index!3075 lt!33028) (index!3078 lt!33028))) #b00000000000000000000000000000000) (bvslt (ite c!10960 (index!3076 lt!33023) (ite c!10957 (index!3075 lt!33028) (index!3078 lt!33028))) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6497 d!17623))

(declare-fun d!17625 () Bool)

(declare-fun res!39401 () Bool)

(declare-fun e!48707 () Bool)

(assert (=> d!17625 (=> res!39401 e!48707)))

(assert (=> d!17625 (= res!39401 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32541))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32541)))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(assert (=> d!17625 (= (containsKey!137 (t!5035 (toList!725 lt!32541)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) e!48707)))

(declare-fun b!74549 () Bool)

(declare-fun e!48708 () Bool)

(assert (=> b!74549 (= e!48707 e!48708)))

(declare-fun res!39402 () Bool)

(assert (=> b!74549 (=> (not res!39402) (not e!48708))))

(assert (=> b!74549 (= res!39402 (and (or (not ((_ is Cons!1474) (t!5035 (toList!725 lt!32541)))) (bvsle (_1!1072 (h!2061 (t!5035 (toList!725 lt!32541)))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))) ((_ is Cons!1474) (t!5035 (toList!725 lt!32541))) (bvslt (_1!1072 (h!2061 (t!5035 (toList!725 lt!32541)))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355))))))

(declare-fun b!74550 () Bool)

(assert (=> b!74550 (= e!48708 (containsKey!137 (t!5035 (t!5035 (toList!725 lt!32541))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (= (and d!17625 (not res!39401)) b!74549))

(assert (= (and b!74549 res!39402) b!74550))

(assert (=> b!74550 m!71227))

(declare-fun m!73957 () Bool)

(assert (=> b!74550 m!73957))

(assert (=> b!73415 d!17625))

(assert (=> d!16903 d!17069))

(declare-fun d!17627 () Bool)

(declare-fun lt!33593 () Bool)

(assert (=> d!17627 (= lt!33593 (select (content!78 Nil!1476) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48709 () Bool)

(assert (=> d!17627 (= lt!33593 e!48709)))

(declare-fun res!39403 () Bool)

(assert (=> d!17627 (=> (not res!39403) (not e!48709))))

(assert (=> d!17627 (= res!39403 ((_ is Cons!1475) Nil!1476))))

(assert (=> d!17627 (= (contains!725 Nil!1476 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33593)))

(declare-fun b!74551 () Bool)

(declare-fun e!48710 () Bool)

(assert (=> b!74551 (= e!48709 e!48710)))

(declare-fun res!39404 () Bool)

(assert (=> b!74551 (=> res!39404 e!48710)))

(assert (=> b!74551 (= res!39404 (= (h!2062 Nil!1476) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74552 () Bool)

(assert (=> b!74552 (= e!48710 (contains!725 (t!5036 Nil!1476) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17627 res!39403) b!74551))

(assert (= (and b!74551 (not res!39404)) b!74552))

(assert (=> d!17627 m!72171))

(assert (=> d!17627 m!71563))

(declare-fun m!73959 () Bool)

(assert (=> d!17627 m!73959))

(assert (=> b!74552 m!71563))

(declare-fun m!73961 () Bool)

(assert (=> b!74552 m!73961))

(assert (=> b!73256 d!17627))

(assert (=> d!16947 d!17069))

(declare-fun d!17629 () Bool)

(assert (=> d!17629 (= (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32678)) (v!2534 (getValueByKey!133 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32678)))))

(assert (=> d!17007 d!17629))

(declare-fun b!74555 () Bool)

(declare-fun e!48712 () Option!139)

(assert (=> b!74555 (= e!48712 (getValueByKey!133 (t!5035 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!32678))))

(declare-fun c!11245 () Bool)

(declare-fun d!17631 () Bool)

(assert (=> d!17631 (= c!11245 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32678)))))

(declare-fun e!48711 () Option!139)

(assert (=> d!17631 (= (getValueByKey!133 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32678) e!48711)))

(declare-fun b!74554 () Bool)

(assert (=> b!74554 (= e!48711 e!48712)))

(declare-fun c!11246 () Bool)

(assert (=> b!74554 (= c!11246 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (not (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32678))))))

(declare-fun b!74553 () Bool)

(assert (=> b!74553 (= e!48711 (Some!138 (_2!1072 (h!2061 (toList!725 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun b!74556 () Bool)

(assert (=> b!74556 (= e!48712 None!137)))

(assert (= (and d!17631 c!11245) b!74553))

(assert (= (and d!17631 (not c!11245)) b!74554))

(assert (= (and b!74554 c!11246) b!74555))

(assert (= (and b!74554 (not c!11246)) b!74556))

(declare-fun m!73963 () Bool)

(assert (=> b!74555 m!73963))

(assert (=> d!17007 d!17631))

(declare-fun d!17633 () Bool)

(declare-fun e!48714 () Bool)

(assert (=> d!17633 e!48714))

(declare-fun res!39405 () Bool)

(assert (=> d!17633 (=> res!39405 e!48714)))

(declare-fun lt!33597 () Bool)

(assert (=> d!17633 (= res!39405 (not lt!33597))))

(declare-fun lt!33596 () Bool)

(assert (=> d!17633 (= lt!33597 lt!33596)))

(declare-fun lt!33595 () Unit!2078)

(declare-fun e!48713 () Unit!2078)

(assert (=> d!17633 (= lt!33595 e!48713)))

(declare-fun c!11247 () Bool)

(assert (=> d!17633 (= c!11247 lt!33596)))

(assert (=> d!17633 (= lt!33596 (containsKey!137 (toList!725 lt!33069) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17633 (= (contains!723 lt!33069 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33597)))

(declare-fun b!74557 () Bool)

(declare-fun lt!33594 () Unit!2078)

(assert (=> b!74557 (= e!48713 lt!33594)))

(assert (=> b!74557 (= lt!33594 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33069) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74557 (isDefined!86 (getValueByKey!133 (toList!725 lt!33069) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74558 () Bool)

(declare-fun Unit!2141 () Unit!2078)

(assert (=> b!74558 (= e!48713 Unit!2141)))

(declare-fun b!74559 () Bool)

(assert (=> b!74559 (= e!48714 (isDefined!86 (getValueByKey!133 (toList!725 lt!33069) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17633 c!11247) b!74557))

(assert (= (and d!17633 (not c!11247)) b!74558))

(assert (= (and d!17633 (not res!39405)) b!74559))

(declare-fun m!73965 () Bool)

(assert (=> d!17633 m!73965))

(declare-fun m!73967 () Bool)

(assert (=> b!74557 m!73967))

(declare-fun m!73969 () Bool)

(assert (=> b!74557 m!73969))

(assert (=> b!74557 m!73969))

(declare-fun m!73971 () Bool)

(assert (=> b!74557 m!73971))

(assert (=> b!74559 m!73969))

(assert (=> b!74559 m!73969))

(assert (=> b!74559 m!73971))

(assert (=> b!73598 d!17633))

(declare-fun d!17635 () Bool)

(assert (=> d!17635 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33598 () Unit!2078)

(assert (=> d!17635 (= lt!33598 (choose!422 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48715 () Bool)

(assert (=> d!17635 e!48715))

(declare-fun res!39406 () Bool)

(assert (=> d!17635 (=> (not res!39406) (not e!48715))))

(assert (=> d!17635 (= res!39406 (isStrictlySorted!292 (toList!725 lt!32594)))))

(assert (=> d!17635 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33598)))

(declare-fun b!74560 () Bool)

(assert (=> b!74560 (= e!48715 (containsKey!137 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17635 res!39406) b!74560))

(assert (=> d!17635 m!72349))

(assert (=> d!17635 m!72349))

(assert (=> d!17635 m!72351))

(declare-fun m!73973 () Bool)

(assert (=> d!17635 m!73973))

(assert (=> d!17635 m!72487))

(assert (=> b!74560 m!72345))

(assert (=> b!73712 d!17635))

(declare-fun d!17637 () Bool)

(assert (=> d!17637 (= (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!133 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3219 () Bool)

(assert (= bs!3219 d!17637))

(assert (=> bs!3219 m!72349))

(declare-fun m!73975 () Bool)

(assert (=> bs!3219 m!73975))

(assert (=> b!73712 d!17637))

(declare-fun b!74563 () Bool)

(declare-fun e!48717 () Option!139)

(assert (=> b!74563 (= e!48717 (getValueByKey!133 (t!5035 (toList!725 lt!32594)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17639 () Bool)

(declare-fun c!11248 () Bool)

(assert (=> d!17639 (= c!11248 (and ((_ is Cons!1474) (toList!725 lt!32594)) (= (_1!1072 (h!2061 (toList!725 lt!32594))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48716 () Option!139)

(assert (=> d!17639 (= (getValueByKey!133 (toList!725 lt!32594) #b0000000000000000000000000000000000000000000000000000000000000000) e!48716)))

(declare-fun b!74562 () Bool)

(assert (=> b!74562 (= e!48716 e!48717)))

(declare-fun c!11249 () Bool)

(assert (=> b!74562 (= c!11249 (and ((_ is Cons!1474) (toList!725 lt!32594)) (not (= (_1!1072 (h!2061 (toList!725 lt!32594))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74561 () Bool)

(assert (=> b!74561 (= e!48716 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32594)))))))

(declare-fun b!74564 () Bool)

(assert (=> b!74564 (= e!48717 None!137)))

(assert (= (and d!17639 c!11248) b!74561))

(assert (= (and d!17639 (not c!11248)) b!74562))

(assert (= (and b!74562 c!11249) b!74563))

(assert (= (and b!74562 (not c!11249)) b!74564))

(declare-fun m!73977 () Bool)

(assert (=> b!74563 m!73977))

(assert (=> b!73712 d!17639))

(declare-fun b!74565 () Bool)

(declare-fun e!48720 () List!1478)

(declare-fun call!6609 () List!1478)

(assert (=> b!74565 (= e!48720 call!6609)))

(declare-fun b!74566 () Bool)

(declare-fun e!48722 () List!1478)

(declare-fun call!6610 () List!1478)

(assert (=> b!74566 (= e!48722 call!6610)))

(declare-fun b!74567 () Bool)

(declare-fun e!48718 () List!1478)

(declare-fun call!6611 () List!1478)

(assert (=> b!74567 (= e!48718 call!6611)))

(declare-fun e!48719 () List!1478)

(declare-fun b!74568 () Bool)

(declare-fun c!11253 () Bool)

(declare-fun c!11251 () Bool)

(assert (=> b!74568 (= e!48719 (ite c!11253 (t!5035 (t!5035 (toList!725 lt!32540))) (ite c!11251 (Cons!1474 (h!2061 (t!5035 (toList!725 lt!32540))) (t!5035 (t!5035 (toList!725 lt!32540)))) Nil!1475)))))

(declare-fun b!74569 () Bool)

(assert (=> b!74569 (= e!48718 e!48720)))

(assert (=> b!74569 (= c!11253 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32540))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540)))) (_1!1072 lt!32538))))))

(declare-fun bm!6606 () Bool)

(assert (=> bm!6606 (= call!6610 call!6609)))

(declare-fun bm!6607 () Bool)

(declare-fun c!11250 () Bool)

(assert (=> bm!6607 (= call!6611 ($colon$colon!66 e!48719 (ite c!11250 (h!2061 (t!5035 (toList!725 lt!32540))) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538)))))))

(declare-fun c!11252 () Bool)

(assert (=> bm!6607 (= c!11252 c!11250)))

(declare-fun b!74570 () Bool)

(declare-fun res!39408 () Bool)

(declare-fun e!48721 () Bool)

(assert (=> b!74570 (=> (not res!39408) (not e!48721))))

(declare-fun lt!33599 () List!1478)

(assert (=> b!74570 (= res!39408 (containsKey!137 lt!33599 (_1!1072 lt!32538)))))

(declare-fun bm!6608 () Bool)

(assert (=> bm!6608 (= call!6609 call!6611)))

(declare-fun b!74571 () Bool)

(assert (=> b!74571 (= e!48721 (contains!724 lt!33599 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!74572 () Bool)

(assert (=> b!74572 (= e!48722 call!6610)))

(declare-fun b!74573 () Bool)

(assert (=> b!74573 (= e!48719 (insertStrictlySorted!53 (t!5035 (t!5035 (toList!725 lt!32540))) (_1!1072 lt!32538) (_2!1072 lt!32538)))))

(declare-fun b!74574 () Bool)

(assert (=> b!74574 (= c!11251 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32540))) (bvsgt (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540)))) (_1!1072 lt!32538))))))

(assert (=> b!74574 (= e!48720 e!48722)))

(declare-fun d!17641 () Bool)

(assert (=> d!17641 e!48721))

(declare-fun res!39407 () Bool)

(assert (=> d!17641 (=> (not res!39407) (not e!48721))))

(assert (=> d!17641 (= res!39407 (isStrictlySorted!292 lt!33599))))

(assert (=> d!17641 (= lt!33599 e!48718)))

(assert (=> d!17641 (= c!11250 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32540))) (bvslt (_1!1072 (h!2061 (t!5035 (toList!725 lt!32540)))) (_1!1072 lt!32538))))))

(assert (=> d!17641 (isStrictlySorted!292 (t!5035 (toList!725 lt!32540)))))

(assert (=> d!17641 (= (insertStrictlySorted!53 (t!5035 (toList!725 lt!32540)) (_1!1072 lt!32538) (_2!1072 lt!32538)) lt!33599)))

(assert (= (and d!17641 c!11250) b!74567))

(assert (= (and d!17641 (not c!11250)) b!74569))

(assert (= (and b!74569 c!11253) b!74565))

(assert (= (and b!74569 (not c!11253)) b!74574))

(assert (= (and b!74574 c!11251) b!74572))

(assert (= (and b!74574 (not c!11251)) b!74566))

(assert (= (or b!74572 b!74566) bm!6606))

(assert (= (or b!74565 bm!6606) bm!6608))

(assert (= (or b!74567 bm!6608) bm!6607))

(assert (= (and bm!6607 c!11252) b!74573))

(assert (= (and bm!6607 (not c!11252)) b!74568))

(assert (= (and d!17641 res!39407) b!74570))

(assert (= (and b!74570 res!39408) b!74571))

(declare-fun m!73979 () Bool)

(assert (=> bm!6607 m!73979))

(declare-fun m!73981 () Bool)

(assert (=> b!74573 m!73981))

(declare-fun m!73983 () Bool)

(assert (=> b!74571 m!73983))

(declare-fun m!73985 () Bool)

(assert (=> d!17641 m!73985))

(assert (=> d!17641 m!72501))

(declare-fun m!73987 () Bool)

(assert (=> b!74570 m!73987))

(assert (=> b!73682 d!17641))

(assert (=> bm!6494 d!16907))

(assert (=> d!16929 d!16927))

(assert (=> d!16929 d!16925))

(declare-fun d!17643 () Bool)

(assert (=> d!17643 (not (contains!723 (+!94 lt!32595 (tuple2!2123 lt!32599 lt!32596)) lt!32593))))

(assert (=> d!17643 true))

(declare-fun _$36!301 () Unit!2078)

(assert (=> d!17643 (= (choose!414 lt!32595 lt!32599 lt!32596 lt!32593) _$36!301)))

(declare-fun bs!3220 () Bool)

(assert (= bs!3220 d!17643))

(assert (=> bs!3220 m!71345))

(assert (=> bs!3220 m!71345))

(assert (=> bs!3220 m!71351))

(assert (=> d!16929 d!17643))

(declare-fun d!17645 () Bool)

(declare-fun e!48724 () Bool)

(assert (=> d!17645 e!48724))

(declare-fun res!39409 () Bool)

(assert (=> d!17645 (=> res!39409 e!48724)))

(declare-fun lt!33603 () Bool)

(assert (=> d!17645 (= res!39409 (not lt!33603))))

(declare-fun lt!33602 () Bool)

(assert (=> d!17645 (= lt!33603 lt!33602)))

(declare-fun lt!33601 () Unit!2078)

(declare-fun e!48723 () Unit!2078)

(assert (=> d!17645 (= lt!33601 e!48723)))

(declare-fun c!11254 () Bool)

(assert (=> d!17645 (= c!11254 lt!33602)))

(assert (=> d!17645 (= lt!33602 (containsKey!137 (toList!725 lt!32595) lt!32593))))

(assert (=> d!17645 (= (contains!723 lt!32595 lt!32593) lt!33603)))

(declare-fun b!74576 () Bool)

(declare-fun lt!33600 () Unit!2078)

(assert (=> b!74576 (= e!48723 lt!33600)))

(assert (=> b!74576 (= lt!33600 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32595) lt!32593))))

(assert (=> b!74576 (isDefined!86 (getValueByKey!133 (toList!725 lt!32595) lt!32593))))

(declare-fun b!74577 () Bool)

(declare-fun Unit!2142 () Unit!2078)

(assert (=> b!74577 (= e!48723 Unit!2142)))

(declare-fun b!74578 () Bool)

(assert (=> b!74578 (= e!48724 (isDefined!86 (getValueByKey!133 (toList!725 lt!32595) lt!32593)))))

(assert (= (and d!17645 c!11254) b!74576))

(assert (= (and d!17645 (not c!11254)) b!74577))

(assert (= (and d!17645 (not res!39409)) b!74578))

(declare-fun m!73989 () Bool)

(assert (=> d!17645 m!73989))

(declare-fun m!73991 () Bool)

(assert (=> b!74576 m!73991))

(declare-fun m!73993 () Bool)

(assert (=> b!74576 m!73993))

(assert (=> b!74576 m!73993))

(declare-fun m!73995 () Bool)

(assert (=> b!74576 m!73995))

(assert (=> b!74578 m!73993))

(assert (=> b!74578 m!73993))

(assert (=> b!74578 m!73995))

(assert (=> d!16929 d!17645))

(declare-fun b!74579 () Bool)

(declare-fun e!48726 () Bool)

(assert (=> b!74579 (= e!48726 (contains!725 Nil!1476 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74580 () Bool)

(declare-fun e!48725 () Bool)

(declare-fun call!6612 () Bool)

(assert (=> b!74580 (= e!48725 call!6612)))

(declare-fun b!74581 () Bool)

(declare-fun e!48727 () Bool)

(declare-fun e!48728 () Bool)

(assert (=> b!74581 (= e!48727 e!48728)))

(declare-fun res!39412 () Bool)

(assert (=> b!74581 (=> (not res!39412) (not e!48728))))

(assert (=> b!74581 (= res!39412 (not e!48726))))

(declare-fun res!39411 () Bool)

(assert (=> b!74581 (=> (not res!39411) (not e!48726))))

(assert (=> b!74581 (= res!39411 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74582 () Bool)

(assert (=> b!74582 (= e!48728 e!48725)))

(declare-fun c!11255 () Bool)

(assert (=> b!74582 (= c!11255 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74583 () Bool)

(assert (=> b!74583 (= e!48725 call!6612)))

(declare-fun d!17647 () Bool)

(declare-fun res!39410 () Bool)

(assert (=> d!17647 (=> res!39410 e!48727)))

(assert (=> d!17647 (= res!39410 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!17647 (= (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000 Nil!1476) e!48727)))

(declare-fun bm!6609 () Bool)

(assert (=> bm!6609 (= call!6612 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11255 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) #b00000000000000000000000000000000) Nil!1476) Nil!1476)))))

(assert (= (and d!17647 (not res!39410)) b!74581))

(assert (= (and b!74581 res!39411) b!74579))

(assert (= (and b!74581 res!39412) b!74582))

(assert (= (and b!74582 c!11255) b!74580))

(assert (= (and b!74582 (not c!11255)) b!74583))

(assert (= (or b!74580 b!74583) bm!6609))

(assert (=> b!74579 m!73511))

(assert (=> b!74579 m!73511))

(declare-fun m!73997 () Bool)

(assert (=> b!74579 m!73997))

(assert (=> b!74581 m!73511))

(assert (=> b!74581 m!73511))

(assert (=> b!74581 m!73513))

(assert (=> b!74582 m!73511))

(assert (=> b!74582 m!73511))

(assert (=> b!74582 m!73513))

(assert (=> bm!6609 m!73511))

(declare-fun m!73999 () Bool)

(assert (=> bm!6609 m!73999))

(assert (=> b!73269 d!17647))

(declare-fun d!17649 () Bool)

(declare-fun e!48730 () Bool)

(assert (=> d!17649 e!48730))

(declare-fun res!39413 () Bool)

(assert (=> d!17649 (=> res!39413 e!48730)))

(declare-fun lt!33607 () Bool)

(assert (=> d!17649 (= res!39413 (not lt!33607))))

(declare-fun lt!33606 () Bool)

(assert (=> d!17649 (= lt!33607 lt!33606)))

(declare-fun lt!33605 () Unit!2078)

(declare-fun e!48729 () Unit!2078)

(assert (=> d!17649 (= lt!33605 e!48729)))

(declare-fun c!11256 () Bool)

(assert (=> d!17649 (= c!11256 lt!33606)))

(assert (=> d!17649 (= lt!33606 (containsKey!137 (toList!725 lt!32891) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17649 (= (contains!723 lt!32891 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33607)))

(declare-fun b!74584 () Bool)

(declare-fun lt!33604 () Unit!2078)

(assert (=> b!74584 (= e!48729 lt!33604)))

(assert (=> b!74584 (= lt!33604 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32891) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!74584 (isDefined!86 (getValueByKey!133 (toList!725 lt!32891) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74585 () Bool)

(declare-fun Unit!2143 () Unit!2078)

(assert (=> b!74585 (= e!48729 Unit!2143)))

(declare-fun b!74586 () Bool)

(assert (=> b!74586 (= e!48730 (isDefined!86 (getValueByKey!133 (toList!725 lt!32891) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17649 c!11256) b!74584))

(assert (= (and d!17649 (not c!11256)) b!74585))

(assert (= (and d!17649 (not res!39413)) b!74586))

(declare-fun m!74001 () Bool)

(assert (=> d!17649 m!74001))

(declare-fun m!74003 () Bool)

(assert (=> b!74584 m!74003))

(assert (=> b!74584 m!71815))

(assert (=> b!74584 m!71815))

(declare-fun m!74005 () Bool)

(assert (=> b!74584 m!74005))

(assert (=> b!74586 m!71815))

(assert (=> b!74586 m!71815))

(assert (=> b!74586 m!74005))

(assert (=> d!16923 d!17649))

(declare-fun b!74589 () Bool)

(declare-fun e!48732 () Option!139)

(assert (=> b!74589 (= e!48732 (getValueByKey!133 (t!5035 lt!32890) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!11257 () Bool)

(declare-fun d!17651 () Bool)

(assert (=> d!17651 (= c!11257 (and ((_ is Cons!1474) lt!32890) (= (_1!1072 (h!2061 lt!32890)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!48731 () Option!139)

(assert (=> d!17651 (= (getValueByKey!133 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48731)))

(declare-fun b!74588 () Bool)

(assert (=> b!74588 (= e!48731 e!48732)))

(declare-fun c!11258 () Bool)

(assert (=> b!74588 (= c!11258 (and ((_ is Cons!1474) lt!32890) (not (= (_1!1072 (h!2061 lt!32890)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!74587 () Bool)

(assert (=> b!74587 (= e!48731 (Some!138 (_2!1072 (h!2061 lt!32890))))))

(declare-fun b!74590 () Bool)

(assert (=> b!74590 (= e!48732 None!137)))

(assert (= (and d!17651 c!11257) b!74587))

(assert (= (and d!17651 (not c!11257)) b!74588))

(assert (= (and b!74588 c!11258) b!74589))

(assert (= (and b!74588 (not c!11258)) b!74590))

(declare-fun m!74007 () Bool)

(assert (=> b!74589 m!74007))

(assert (=> d!16923 d!17651))

(declare-fun d!17653 () Bool)

(assert (=> d!17653 (= (getValueByKey!133 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33608 () Unit!2078)

(assert (=> d!17653 (= lt!33608 (choose!412 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48733 () Bool)

(assert (=> d!17653 e!48733))

(declare-fun res!39414 () Bool)

(assert (=> d!17653 (=> (not res!39414) (not e!48733))))

(assert (=> d!17653 (= res!39414 (isStrictlySorted!292 lt!32890))))

(assert (=> d!17653 (= (lemmaContainsTupThenGetReturnValue!50 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33608)))

(declare-fun b!74591 () Bool)

(declare-fun res!39415 () Bool)

(assert (=> b!74591 (=> (not res!39415) (not e!48733))))

(assert (=> b!74591 (= res!39415 (containsKey!137 lt!32890 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74592 () Bool)

(assert (=> b!74592 (= e!48733 (contains!724 lt!32890 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17653 res!39414) b!74591))

(assert (= (and b!74591 res!39415) b!74592))

(assert (=> d!17653 m!71809))

(declare-fun m!74009 () Bool)

(assert (=> d!17653 m!74009))

(declare-fun m!74011 () Bool)

(assert (=> d!17653 m!74011))

(declare-fun m!74013 () Bool)

(assert (=> b!74591 m!74013))

(declare-fun m!74015 () Bool)

(assert (=> b!74592 m!74015))

(assert (=> d!16923 d!17653))

(declare-fun b!74593 () Bool)

(declare-fun e!48736 () List!1478)

(declare-fun call!6613 () List!1478)

(assert (=> b!74593 (= e!48736 call!6613)))

(declare-fun b!74594 () Bool)

(declare-fun e!48738 () List!1478)

(declare-fun call!6614 () List!1478)

(assert (=> b!74594 (= e!48738 call!6614)))

(declare-fun b!74595 () Bool)

(declare-fun e!48734 () List!1478)

(declare-fun call!6615 () List!1478)

(assert (=> b!74595 (= e!48734 call!6615)))

(declare-fun e!48735 () List!1478)

(declare-fun b!74596 () Bool)

(declare-fun c!11262 () Bool)

(declare-fun c!11260 () Bool)

(assert (=> b!74596 (= e!48735 (ite c!11262 (t!5035 (toList!725 call!6354)) (ite c!11260 (Cons!1474 (h!2061 (toList!725 call!6354)) (t!5035 (toList!725 call!6354))) Nil!1475)))))

(declare-fun b!74597 () Bool)

(assert (=> b!74597 (= e!48734 e!48736)))

(assert (=> b!74597 (= c!11262 (and ((_ is Cons!1474) (toList!725 call!6354)) (= (_1!1072 (h!2061 (toList!725 call!6354))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!6610 () Bool)

(assert (=> bm!6610 (= call!6614 call!6613)))

(declare-fun bm!6611 () Bool)

(declare-fun c!11259 () Bool)

(assert (=> bm!6611 (= call!6615 ($colon$colon!66 e!48735 (ite c!11259 (h!2061 (toList!725 call!6354)) (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!11261 () Bool)

(assert (=> bm!6611 (= c!11261 c!11259)))

(declare-fun b!74598 () Bool)

(declare-fun res!39417 () Bool)

(declare-fun e!48737 () Bool)

(assert (=> b!74598 (=> (not res!39417) (not e!48737))))

(declare-fun lt!33609 () List!1478)

(assert (=> b!74598 (= res!39417 (containsKey!137 lt!33609 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!6612 () Bool)

(assert (=> bm!6612 (= call!6613 call!6615)))

(declare-fun b!74599 () Bool)

(assert (=> b!74599 (= e!48737 (contains!724 lt!33609 (tuple2!2123 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74600 () Bool)

(assert (=> b!74600 (= e!48738 call!6614)))

(declare-fun b!74601 () Bool)

(assert (=> b!74601 (= e!48735 (insertStrictlySorted!53 (t!5035 (toList!725 call!6354)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74602 () Bool)

(assert (=> b!74602 (= c!11260 (and ((_ is Cons!1474) (toList!725 call!6354)) (bvsgt (_1!1072 (h!2061 (toList!725 call!6354))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!74602 (= e!48736 e!48738)))

(declare-fun d!17655 () Bool)

(assert (=> d!17655 e!48737))

(declare-fun res!39416 () Bool)

(assert (=> d!17655 (=> (not res!39416) (not e!48737))))

(assert (=> d!17655 (= res!39416 (isStrictlySorted!292 lt!33609))))

(assert (=> d!17655 (= lt!33609 e!48734)))

(assert (=> d!17655 (= c!11259 (and ((_ is Cons!1474) (toList!725 call!6354)) (bvslt (_1!1072 (h!2061 (toList!725 call!6354))) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17655 (isStrictlySorted!292 (toList!725 call!6354))))

(assert (=> d!17655 (= (insertStrictlySorted!53 (toList!725 call!6354) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33609)))

(assert (= (and d!17655 c!11259) b!74595))

(assert (= (and d!17655 (not c!11259)) b!74597))

(assert (= (and b!74597 c!11262) b!74593))

(assert (= (and b!74597 (not c!11262)) b!74602))

(assert (= (and b!74602 c!11260) b!74600))

(assert (= (and b!74602 (not c!11260)) b!74594))

(assert (= (or b!74600 b!74594) bm!6610))

(assert (= (or b!74593 bm!6610) bm!6612))

(assert (= (or b!74595 bm!6612) bm!6611))

(assert (= (and bm!6611 c!11261) b!74601))

(assert (= (and bm!6611 (not c!11261)) b!74596))

(assert (= (and d!17655 res!39416) b!74598))

(assert (= (and b!74598 res!39417) b!74599))

(declare-fun m!74017 () Bool)

(assert (=> bm!6611 m!74017))

(declare-fun m!74019 () Bool)

(assert (=> b!74601 m!74019))

(declare-fun m!74021 () Bool)

(assert (=> b!74599 m!74021))

(declare-fun m!74023 () Bool)

(assert (=> d!17655 m!74023))

(declare-fun m!74025 () Bool)

(assert (=> d!17655 m!74025))

(declare-fun m!74027 () Bool)

(assert (=> b!74598 m!74027))

(assert (=> d!16923 d!17655))

(declare-fun d!17657 () Bool)

(declare-fun lt!33610 () Bool)

(assert (=> d!17657 (= lt!33610 (select (content!77 lt!32613) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun e!48739 () Bool)

(assert (=> d!17657 (= lt!33610 e!48739)))

(declare-fun res!39418 () Bool)

(assert (=> d!17657 (=> (not res!39418) (not e!48739))))

(assert (=> d!17657 (= res!39418 ((_ is Cons!1474) lt!32613))))

(assert (=> d!17657 (= (contains!724 lt!32613 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))) lt!33610)))

(declare-fun b!74603 () Bool)

(declare-fun e!48740 () Bool)

(assert (=> b!74603 (= e!48739 e!48740)))

(declare-fun res!39419 () Bool)

(assert (=> b!74603 (=> res!39419 e!48740)))

(assert (=> b!74603 (= res!39419 (= (h!2061 lt!32613) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!74604 () Bool)

(assert (=> b!74604 (= e!48740 (contains!724 (t!5035 lt!32613) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(assert (= (and d!17657 res!39418) b!74603))

(assert (= (and b!74603 (not res!39419)) b!74604))

(declare-fun m!74029 () Bool)

(assert (=> d!17657 m!74029))

(declare-fun m!74031 () Bool)

(assert (=> d!17657 m!74031))

(declare-fun m!74033 () Bool)

(assert (=> b!74604 m!74033))

(assert (=> b!73701 d!17657))

(assert (=> b!73717 d!16911))

(declare-fun b!74605 () Bool)

(declare-fun e!48742 () Bool)

(assert (=> b!74605 (= e!48742 (contains!725 (ite c!10948 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!74606 () Bool)

(declare-fun e!48741 () Bool)

(declare-fun call!6616 () Bool)

(assert (=> b!74606 (= e!48741 call!6616)))

(declare-fun b!74607 () Bool)

(declare-fun e!48743 () Bool)

(declare-fun e!48744 () Bool)

(assert (=> b!74607 (= e!48743 e!48744)))

(declare-fun res!39422 () Bool)

(assert (=> b!74607 (=> (not res!39422) (not e!48744))))

(assert (=> b!74607 (= res!39422 (not e!48742))))

(declare-fun res!39421 () Bool)

(assert (=> b!74607 (=> (not res!39421) (not e!48742))))

(assert (=> b!74607 (= res!39421 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!74608 () Bool)

(assert (=> b!74608 (= e!48744 e!48741)))

(declare-fun c!11263 () Bool)

(assert (=> b!74608 (= c!11263 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!74609 () Bool)

(assert (=> b!74609 (= e!48741 call!6616)))

(declare-fun d!17659 () Bool)

(declare-fun res!39420 () Bool)

(assert (=> d!17659 (=> res!39420 e!48743)))

(assert (=> d!17659 (= res!39420 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(assert (=> d!17659 (= (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10948 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476))) e!48743)))

(declare-fun bm!6613 () Bool)

(assert (=> bm!6613 (= call!6616 (arrayNoDuplicates!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11263 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10948 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476))) (ite c!10948 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)) (ite c!10830 (Cons!1475 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) Nil!1476) Nil!1476)))))))

(assert (= (and d!17659 (not res!39420)) b!74607))

(assert (= (and b!74607 res!39421) b!74605))

(assert (= (and b!74607 res!39422) b!74608))

(assert (= (and b!74608 c!11263) b!74606))

(assert (= (and b!74608 (not c!11263)) b!74609))

(assert (= (or b!74606 b!74609) bm!6613))

(declare-fun m!74035 () Bool)

(assert (=> b!74605 m!74035))

(assert (=> b!74605 m!74035))

(declare-fun m!74037 () Bool)

(assert (=> b!74605 m!74037))

(assert (=> b!74607 m!74035))

(assert (=> b!74607 m!74035))

(declare-fun m!74039 () Bool)

(assert (=> b!74607 m!74039))

(assert (=> b!74608 m!74035))

(assert (=> b!74608 m!74035))

(assert (=> b!74608 m!74039))

(assert (=> bm!6613 m!74035))

(declare-fun m!74041 () Bool)

(assert (=> bm!6613 m!74041))

(assert (=> bm!6485 d!17659))

(assert (=> b!73552 d!16993))

(declare-fun d!17661 () Bool)

(declare-fun e!48745 () Bool)

(assert (=> d!17661 e!48745))

(declare-fun res!39423 () Bool)

(assert (=> d!17661 (=> (not res!39423) (not e!48745))))

(declare-fun lt!33613 () ListLongMap!1419)

(assert (=> d!17661 (= res!39423 (contains!723 lt!33613 (_1!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun lt!33612 () List!1478)

(assert (=> d!17661 (= lt!33613 (ListLongMap!1420 lt!33612))))

(declare-fun lt!33614 () Unit!2078)

(declare-fun lt!33611 () Unit!2078)

(assert (=> d!17661 (= lt!33614 lt!33611)))

(assert (=> d!17661 (= (getValueByKey!133 lt!33612 (_1!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17661 (= lt!33611 (lemmaContainsTupThenGetReturnValue!50 lt!33612 (_1!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17661 (= lt!33612 (insertStrictlySorted!53 (toList!725 (ite c!10942 call!6483 (ite c!10946 call!6484 call!6481))) (_1!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17661 (= (+!94 (ite c!10942 call!6483 (ite c!10946 call!6484 call!6481)) (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) lt!33613)))

(declare-fun b!74610 () Bool)

(declare-fun res!39424 () Bool)

(assert (=> b!74610 (=> (not res!39424) (not e!48745))))

(assert (=> b!74610 (= res!39424 (= (getValueByKey!133 (toList!725 lt!33613) (_1!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))))

(declare-fun b!74611 () Bool)

(assert (=> b!74611 (= e!48745 (contains!724 (toList!725 lt!33613) (ite (or c!10942 c!10946) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10872 c!10871) lt!32533 (zeroValue!2115 newMap!16))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (= (and d!17661 res!39423) b!74610))

(assert (= (and b!74610 res!39424) b!74611))

(declare-fun m!74043 () Bool)

(assert (=> d!17661 m!74043))

(declare-fun m!74045 () Bool)

(assert (=> d!17661 m!74045))

(declare-fun m!74047 () Bool)

(assert (=> d!17661 m!74047))

(declare-fun m!74049 () Bool)

(assert (=> d!17661 m!74049))

(declare-fun m!74051 () Bool)

(assert (=> b!74610 m!74051))

(declare-fun m!74053 () Bool)

(assert (=> b!74611 m!74053))

(assert (=> bm!6482 d!17661))

(declare-fun b!74614 () Bool)

(declare-fun e!48747 () Option!139)

(assert (=> b!74614 (= e!48747 (getValueByKey!133 (t!5035 (toList!725 lt!32820)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17663 () Bool)

(declare-fun c!11264 () Bool)

(assert (=> d!17663 (= c!11264 (and ((_ is Cons!1474) (toList!725 lt!32820)) (= (_1!1072 (h!2061 (toList!725 lt!32820))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48746 () Option!139)

(assert (=> d!17663 (= (getValueByKey!133 (toList!725 lt!32820) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48746)))

(declare-fun b!74613 () Bool)

(assert (=> b!74613 (= e!48746 e!48747)))

(declare-fun c!11265 () Bool)

(assert (=> b!74613 (= c!11265 (and ((_ is Cons!1474) (toList!725 lt!32820)) (not (= (_1!1072 (h!2061 (toList!725 lt!32820))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74612 () Bool)

(assert (=> b!74612 (= e!48746 (Some!138 (_2!1072 (h!2061 (toList!725 lt!32820)))))))

(declare-fun b!74615 () Bool)

(assert (=> b!74615 (= e!48747 None!137)))

(assert (= (and d!17663 c!11264) b!74612))

(assert (= (and d!17663 (not c!11264)) b!74613))

(assert (= (and b!74613 c!11265) b!74614))

(assert (= (and b!74613 (not c!11265)) b!74615))

(declare-fun m!74055 () Bool)

(assert (=> b!74614 m!74055))

(assert (=> b!73286 d!17663))

(declare-fun d!17665 () Bool)

(declare-fun res!39425 () Bool)

(declare-fun e!48748 () Bool)

(assert (=> d!17665 (=> (not res!39425) (not e!48748))))

(assert (=> d!17665 (= res!39425 (simpleValid!51 (_2!1073 lt!33051)))))

(assert (=> d!17665 (= (valid!289 (_2!1073 lt!33051)) e!48748)))

(declare-fun b!74616 () Bool)

(declare-fun res!39426 () Bool)

(assert (=> b!74616 (=> (not res!39426) (not e!48748))))

(assert (=> b!74616 (= res!39426 (= (arrayCountValidKeys!0 (_keys!3865 (_2!1073 lt!33051)) #b00000000000000000000000000000000 (size!2097 (_keys!3865 (_2!1073 lt!33051)))) (_size!397 (_2!1073 lt!33051))))))

(declare-fun b!74617 () Bool)

(declare-fun res!39427 () Bool)

(assert (=> b!74617 (=> (not res!39427) (not e!48748))))

(assert (=> b!74617 (= res!39427 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (_2!1073 lt!33051)) (mask!6180 (_2!1073 lt!33051))))))

(declare-fun b!74618 () Bool)

(assert (=> b!74618 (= e!48748 (arrayNoDuplicates!0 (_keys!3865 (_2!1073 lt!33051)) #b00000000000000000000000000000000 Nil!1476))))

(assert (= (and d!17665 res!39425) b!74616))

(assert (= (and b!74616 res!39426) b!74617))

(assert (= (and b!74617 res!39427) b!74618))

(declare-fun m!74057 () Bool)

(assert (=> d!17665 m!74057))

(declare-fun m!74059 () Bool)

(assert (=> b!74616 m!74059))

(declare-fun m!74061 () Bool)

(assert (=> b!74617 m!74061))

(declare-fun m!74063 () Bool)

(assert (=> b!74618 m!74063))

(assert (=> b!73557 d!17665))

(assert (=> b!73368 d!17061))

(declare-fun d!17667 () Bool)

(declare-fun res!39428 () Bool)

(declare-fun e!48749 () Bool)

(assert (=> d!17667 (=> res!39428 e!48749)))

(assert (=> d!17667 (= res!39428 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32673)))))

(assert (=> d!17667 (= (containsKey!137 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673) e!48749)))

(declare-fun b!74619 () Bool)

(declare-fun e!48750 () Bool)

(assert (=> b!74619 (= e!48749 e!48750)))

(declare-fun res!39429 () Bool)

(assert (=> b!74619 (=> (not res!39429) (not e!48750))))

(assert (=> b!74619 (= res!39429 (and (or (not ((_ is Cons!1474) (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) (bvsle (_1!1072 (h!2061 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32673)) ((_ is Cons!1474) (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (bvslt (_1!1072 (h!2061 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32673)))))

(declare-fun b!74620 () Bool)

(assert (=> b!74620 (= e!48750 (containsKey!137 (t!5035 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!32673))))

(assert (= (and d!17667 (not res!39428)) b!74619))

(assert (= (and b!74619 res!39429) b!74620))

(declare-fun m!74065 () Bool)

(assert (=> b!74620 m!74065))

(assert (=> d!17021 d!17667))

(declare-fun lt!33615 () Bool)

(declare-fun d!17669 () Bool)

(assert (=> d!17669 (= lt!33615 (select (content!77 (toList!725 lt!32891)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!48751 () Bool)

(assert (=> d!17669 (= lt!33615 e!48751)))

(declare-fun res!39430 () Bool)

(assert (=> d!17669 (=> (not res!39430) (not e!48751))))

(assert (=> d!17669 (= res!39430 ((_ is Cons!1474) (toList!725 lt!32891)))))

(assert (=> d!17669 (= (contains!724 (toList!725 lt!32891) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33615)))

(declare-fun b!74621 () Bool)

(declare-fun e!48752 () Bool)

(assert (=> b!74621 (= e!48751 e!48752)))

(declare-fun res!39431 () Bool)

(assert (=> b!74621 (=> res!39431 e!48752)))

(assert (=> b!74621 (= res!39431 (= (h!2061 (toList!725 lt!32891)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!74622 () Bool)

(assert (=> b!74622 (= e!48752 (contains!724 (t!5035 (toList!725 lt!32891)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1139 (select (arr!1860 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17669 res!39430) b!74621))

(assert (= (and b!74621 (not res!39431)) b!74622))

(declare-fun m!74067 () Bool)

(assert (=> d!17669 m!74067))

(declare-fun m!74069 () Bool)

(assert (=> d!17669 m!74069))

(declare-fun m!74071 () Bool)

(assert (=> b!74622 m!74071))

(assert (=> b!73422 d!17669))

(declare-fun d!17671 () Bool)

(declare-fun e!48753 () Bool)

(assert (=> d!17671 e!48753))

(declare-fun res!39432 () Bool)

(assert (=> d!17671 (=> (not res!39432) (not e!48753))))

(declare-fun lt!33618 () ListLongMap!1419)

(assert (=> d!17671 (= res!39432 (contains!723 lt!33618 (_1!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun lt!33617 () List!1478)

(assert (=> d!17671 (= lt!33618 (ListLongMap!1420 lt!33617))))

(declare-fun lt!33619 () Unit!2078)

(declare-fun lt!33616 () Unit!2078)

(assert (=> d!17671 (= lt!33619 lt!33616)))

(assert (=> d!17671 (= (getValueByKey!133 lt!33617 (_1!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17671 (= lt!33616 (lemmaContainsTupThenGetReturnValue!50 lt!33617 (_1!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17671 (= lt!33617 (insertStrictlySorted!53 (toList!725 (ite c!10909 call!6466 (ite c!10913 call!6467 call!6464))) (_1!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17671 (= (+!94 (ite c!10909 call!6466 (ite c!10913 call!6467 call!6464)) (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) lt!33618)))

(declare-fun b!74623 () Bool)

(declare-fun res!39433 () Bool)

(assert (=> b!74623 (=> (not res!39433) (not e!48753))))

(assert (=> b!74623 (= res!39433 (= (getValueByKey!133 (toList!725 lt!33618) (_1!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))))

(declare-fun b!74624 () Bool)

(assert (=> b!74624 (= e!48753 (contains!724 (toList!725 lt!33618) (ite (or c!10909 c!10913) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (= (and d!17671 res!39432) b!74623))

(assert (= (and b!74623 res!39433) b!74624))

(declare-fun m!74073 () Bool)

(assert (=> d!17671 m!74073))

(declare-fun m!74075 () Bool)

(assert (=> d!17671 m!74075))

(declare-fun m!74077 () Bool)

(assert (=> d!17671 m!74077))

(declare-fun m!74079 () Bool)

(assert (=> d!17671 m!74079))

(declare-fun m!74081 () Bool)

(assert (=> b!74623 m!74081))

(declare-fun m!74083 () Bool)

(assert (=> b!74624 m!74083))

(assert (=> bm!6465 d!17671))

(declare-fun b!74627 () Bool)

(declare-fun e!48755 () Option!139)

(assert (=> b!74627 (= e!48755 (getValueByKey!133 (t!5035 (t!5035 (toList!725 lt!32614))) (_1!1072 lt!32542)))))

(declare-fun d!17673 () Bool)

(declare-fun c!11266 () Bool)

(assert (=> d!17673 (= c!11266 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32614))) (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32614)))) (_1!1072 lt!32542))))))

(declare-fun e!48754 () Option!139)

(assert (=> d!17673 (= (getValueByKey!133 (t!5035 (toList!725 lt!32614)) (_1!1072 lt!32542)) e!48754)))

(declare-fun b!74626 () Bool)

(assert (=> b!74626 (= e!48754 e!48755)))

(declare-fun c!11267 () Bool)

(assert (=> b!74626 (= c!11267 (and ((_ is Cons!1474) (t!5035 (toList!725 lt!32614))) (not (= (_1!1072 (h!2061 (t!5035 (toList!725 lt!32614)))) (_1!1072 lt!32542)))))))

(declare-fun b!74625 () Bool)

(assert (=> b!74625 (= e!48754 (Some!138 (_2!1072 (h!2061 (t!5035 (toList!725 lt!32614))))))))

(declare-fun b!74628 () Bool)

(assert (=> b!74628 (= e!48755 None!137)))

(assert (= (and d!17673 c!11266) b!74625))

(assert (= (and d!17673 (not c!11266)) b!74626))

(assert (= (and b!74626 c!11267) b!74627))

(assert (= (and b!74626 (not c!11267)) b!74628))

(declare-fun m!74085 () Bool)

(assert (=> b!74627 m!74085))

(assert (=> b!73608 d!17673))

(assert (=> bm!6471 d!17159))

(assert (=> b!73481 d!17061))

(assert (=> b!73387 d!17061))

(assert (=> b!73599 d!17197))

(declare-fun d!17675 () Bool)

(declare-fun e!48757 () Bool)

(assert (=> d!17675 e!48757))

(declare-fun res!39434 () Bool)

(assert (=> d!17675 (=> res!39434 e!48757)))

(declare-fun lt!33623 () Bool)

(assert (=> d!17675 (= res!39434 (not lt!33623))))

(declare-fun lt!33622 () Bool)

(assert (=> d!17675 (= lt!33623 lt!33622)))

(declare-fun lt!33621 () Unit!2078)

(declare-fun e!48756 () Unit!2078)

(assert (=> d!17675 (= lt!33621 e!48756)))

(declare-fun c!11268 () Bool)

(assert (=> d!17675 (= c!11268 lt!33622)))

(assert (=> d!17675 (= lt!33622 (containsKey!137 (toList!725 lt!32820) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17675 (= (contains!723 lt!32820 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33623)))

(declare-fun b!74629 () Bool)

(declare-fun lt!33620 () Unit!2078)

(assert (=> b!74629 (= e!48756 lt!33620)))

(assert (=> b!74629 (= lt!33620 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32820) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!74629 (isDefined!86 (getValueByKey!133 (toList!725 lt!32820) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74630 () Bool)

(declare-fun Unit!2144 () Unit!2078)

(assert (=> b!74630 (= e!48756 Unit!2144)))

(declare-fun b!74631 () Bool)

(assert (=> b!74631 (= e!48757 (isDefined!86 (getValueByKey!133 (toList!725 lt!32820) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17675 c!11268) b!74629))

(assert (= (and d!17675 (not c!11268)) b!74630))

(assert (= (and d!17675 (not res!39434)) b!74631))

(declare-fun m!74087 () Bool)

(assert (=> d!17675 m!74087))

(declare-fun m!74089 () Bool)

(assert (=> b!74629 m!74089))

(assert (=> b!74629 m!71633))

(assert (=> b!74629 m!71633))

(declare-fun m!74091 () Bool)

(assert (=> b!74629 m!74091))

(assert (=> b!74631 m!71633))

(assert (=> b!74631 m!71633))

(assert (=> b!74631 m!74091))

(assert (=> d!16877 d!17675))

(declare-fun b!74634 () Bool)

(declare-fun e!48759 () Option!139)

(assert (=> b!74634 (= e!48759 (getValueByKey!133 (t!5035 lt!32819) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17677 () Bool)

(declare-fun c!11269 () Bool)

(assert (=> d!17677 (= c!11269 (and ((_ is Cons!1474) lt!32819) (= (_1!1072 (h!2061 lt!32819)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48758 () Option!139)

(assert (=> d!17677 (= (getValueByKey!133 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48758)))

(declare-fun b!74633 () Bool)

(assert (=> b!74633 (= e!48758 e!48759)))

(declare-fun c!11270 () Bool)

(assert (=> b!74633 (= c!11270 (and ((_ is Cons!1474) lt!32819) (not (= (_1!1072 (h!2061 lt!32819)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74632 () Bool)

(assert (=> b!74632 (= e!48758 (Some!138 (_2!1072 (h!2061 lt!32819))))))

(declare-fun b!74635 () Bool)

(assert (=> b!74635 (= e!48759 None!137)))

(assert (= (and d!17677 c!11269) b!74632))

(assert (= (and d!17677 (not c!11269)) b!74633))

(assert (= (and b!74633 c!11270) b!74634))

(assert (= (and b!74633 (not c!11270)) b!74635))

(declare-fun m!74093 () Bool)

(assert (=> b!74634 m!74093))

(assert (=> d!16877 d!17677))

(declare-fun d!17679 () Bool)

(assert (=> d!17679 (= (getValueByKey!133 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33624 () Unit!2078)

(assert (=> d!17679 (= lt!33624 (choose!412 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48760 () Bool)

(assert (=> d!17679 e!48760))

(declare-fun res!39435 () Bool)

(assert (=> d!17679 (=> (not res!39435) (not e!48760))))

(assert (=> d!17679 (= res!39435 (isStrictlySorted!292 lt!32819))))

(assert (=> d!17679 (= (lemmaContainsTupThenGetReturnValue!50 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33624)))

(declare-fun b!74636 () Bool)

(declare-fun res!39436 () Bool)

(assert (=> b!74636 (=> (not res!39436) (not e!48760))))

(assert (=> b!74636 (= res!39436 (containsKey!137 lt!32819 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74637 () Bool)

(assert (=> b!74637 (= e!48760 (contains!724 lt!32819 (tuple2!2123 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17679 res!39435) b!74636))

(assert (= (and b!74636 res!39436) b!74637))

(assert (=> d!17679 m!71627))

(declare-fun m!74095 () Bool)

(assert (=> d!17679 m!74095))

(declare-fun m!74097 () Bool)

(assert (=> d!17679 m!74097))

(declare-fun m!74099 () Bool)

(assert (=> b!74636 m!74099))

(declare-fun m!74101 () Bool)

(assert (=> b!74637 m!74101))

(assert (=> d!16877 d!17679))

(declare-fun b!74638 () Bool)

(declare-fun e!48763 () List!1478)

(declare-fun call!6617 () List!1478)

(assert (=> b!74638 (= e!48763 call!6617)))

(declare-fun b!74639 () Bool)

(declare-fun e!48765 () List!1478)

(declare-fun call!6618 () List!1478)

(assert (=> b!74639 (= e!48765 call!6618)))

(declare-fun b!74640 () Bool)

(declare-fun e!48761 () List!1478)

(declare-fun call!6619 () List!1478)

(assert (=> b!74640 (= e!48761 call!6619)))

(declare-fun c!11272 () Bool)

(declare-fun c!11274 () Bool)

(declare-fun b!74641 () Bool)

(declare-fun e!48762 () List!1478)

(assert (=> b!74641 (= e!48762 (ite c!11274 (t!5035 (toList!725 lt!32540)) (ite c!11272 (Cons!1474 (h!2061 (toList!725 lt!32540)) (t!5035 (toList!725 lt!32540))) Nil!1475)))))

(declare-fun b!74642 () Bool)

(assert (=> b!74642 (= e!48761 e!48763)))

(assert (=> b!74642 (= c!11274 (and ((_ is Cons!1474) (toList!725 lt!32540)) (= (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6614 () Bool)

(assert (=> bm!6614 (= call!6618 call!6617)))

(declare-fun bm!6615 () Bool)

(declare-fun c!11271 () Bool)

(assert (=> bm!6615 (= call!6619 ($colon$colon!66 e!48762 (ite c!11271 (h!2061 (toList!725 lt!32540)) (tuple2!2123 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11273 () Bool)

(assert (=> bm!6615 (= c!11273 c!11271)))

(declare-fun b!74643 () Bool)

(declare-fun res!39438 () Bool)

(declare-fun e!48764 () Bool)

(assert (=> b!74643 (=> (not res!39438) (not e!48764))))

(declare-fun lt!33625 () List!1478)

(assert (=> b!74643 (= res!39438 (containsKey!137 lt!33625 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6616 () Bool)

(assert (=> bm!6616 (= call!6617 call!6619)))

(declare-fun b!74644 () Bool)

(assert (=> b!74644 (= e!48764 (contains!724 lt!33625 (tuple2!2123 (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74645 () Bool)

(assert (=> b!74645 (= e!48765 call!6618)))

(declare-fun b!74646 () Bool)

(assert (=> b!74646 (= e!48762 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32540)) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74647 () Bool)

(assert (=> b!74647 (= c!11272 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!74647 (= e!48763 e!48765)))

(declare-fun d!17681 () Bool)

(assert (=> d!17681 e!48764))

(declare-fun res!39437 () Bool)

(assert (=> d!17681 (=> (not res!39437) (not e!48764))))

(assert (=> d!17681 (= res!39437 (isStrictlySorted!292 lt!33625))))

(assert (=> d!17681 (= lt!33625 e!48761)))

(assert (=> d!17681 (= c!11271 (and ((_ is Cons!1474) (toList!725 lt!32540)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32540))) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17681 (isStrictlySorted!292 (toList!725 lt!32540))))

(assert (=> d!17681 (= (insertStrictlySorted!53 (toList!725 lt!32540) (_1!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33625)))

(assert (= (and d!17681 c!11271) b!74640))

(assert (= (and d!17681 (not c!11271)) b!74642))

(assert (= (and b!74642 c!11274) b!74638))

(assert (= (and b!74642 (not c!11274)) b!74647))

(assert (= (and b!74647 c!11272) b!74645))

(assert (= (and b!74647 (not c!11272)) b!74639))

(assert (= (or b!74645 b!74639) bm!6614))

(assert (= (or b!74638 bm!6614) bm!6616))

(assert (= (or b!74640 bm!6616) bm!6615))

(assert (= (and bm!6615 c!11273) b!74646))

(assert (= (and bm!6615 (not c!11273)) b!74641))

(assert (= (and d!17681 res!39437) b!74643))

(assert (= (and b!74643 res!39438) b!74644))

(declare-fun m!74103 () Bool)

(assert (=> bm!6615 m!74103))

(declare-fun m!74105 () Bool)

(assert (=> b!74646 m!74105))

(declare-fun m!74107 () Bool)

(assert (=> b!74644 m!74107))

(declare-fun m!74109 () Bool)

(assert (=> d!17681 m!74109))

(assert (=> d!17681 m!72297))

(declare-fun m!74111 () Bool)

(assert (=> b!74643 m!74111))

(assert (=> d!16877 d!17681))

(declare-fun d!17683 () Bool)

(declare-fun res!39439 () Bool)

(declare-fun e!48766 () Bool)

(assert (=> d!17683 (=> res!39439 e!48766)))

(assert (=> d!17683 (= res!39439 (and ((_ is Cons!1474) (toList!725 lt!32610)) (= (_1!1072 (h!2061 (toList!725 lt!32610))) (_1!1072 lt!32542))))))

(assert (=> d!17683 (= (containsKey!137 (toList!725 lt!32610) (_1!1072 lt!32542)) e!48766)))

(declare-fun b!74648 () Bool)

(declare-fun e!48767 () Bool)

(assert (=> b!74648 (= e!48766 e!48767)))

(declare-fun res!39440 () Bool)

(assert (=> b!74648 (=> (not res!39440) (not e!48767))))

(assert (=> b!74648 (= res!39440 (and (or (not ((_ is Cons!1474) (toList!725 lt!32610))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32610))) (_1!1072 lt!32542))) ((_ is Cons!1474) (toList!725 lt!32610)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32610))) (_1!1072 lt!32542))))))

(declare-fun b!74649 () Bool)

(assert (=> b!74649 (= e!48767 (containsKey!137 (t!5035 (toList!725 lt!32610)) (_1!1072 lt!32542)))))

(assert (= (and d!17683 (not res!39439)) b!74648))

(assert (= (and b!74648 res!39440) b!74649))

(declare-fun m!74113 () Bool)

(assert (=> b!74649 m!74113))

(assert (=> d!16935 d!17683))

(declare-fun b!74650 () Bool)

(declare-fun res!39444 () Bool)

(declare-fun e!48768 () Bool)

(assert (=> b!74650 (=> (not res!39444) (not e!48768))))

(assert (=> b!74650 (= res!39444 (and (= (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992)))) (bvadd (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001)) (= (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (size!2098 (_values!2196 (v!2530 (underlying!260 thiss!992))))) (bvsge (_size!397 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!397 (v!2530 (underlying!260 thiss!992))) (bvadd (mask!6180 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!17685 () Bool)

(declare-fun res!39442 () Bool)

(assert (=> d!17685 (=> (not res!39442) (not e!48768))))

(assert (=> d!17685 (= res!39442 (validMask!0 (mask!6180 (v!2530 (underlying!260 thiss!992)))))))

(assert (=> d!17685 (= (simpleValid!51 (v!2530 (underlying!260 thiss!992))) e!48768)))

(declare-fun b!74651 () Bool)

(declare-fun res!39441 () Bool)

(assert (=> b!74651 (=> (not res!39441) (not e!48768))))

(assert (=> b!74651 (= res!39441 (bvsge (size!2101 (v!2530 (underlying!260 thiss!992))) (_size!397 (v!2530 (underlying!260 thiss!992)))))))

(declare-fun b!74653 () Bool)

(assert (=> b!74653 (= e!48768 (and (bvsge (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!397 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!74652 () Bool)

(declare-fun res!39443 () Bool)

(assert (=> b!74652 (=> (not res!39443) (not e!48768))))

(assert (=> b!74652 (= res!39443 (= (size!2101 (v!2530 (underlying!260 thiss!992))) (bvadd (_size!397 (v!2530 (underlying!260 thiss!992))) (bvsdiv (bvadd (extraKeys!2072 (v!2530 (underlying!260 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!17685 res!39442) b!74650))

(assert (= (and b!74650 res!39444) b!74651))

(assert (= (and b!74651 res!39441) b!74652))

(assert (= (and b!74652 res!39443) b!74653))

(assert (=> d!17685 m!71223))

(declare-fun m!74115 () Bool)

(assert (=> b!74651 m!74115))

(assert (=> b!74652 m!74115))

(assert (=> d!16863 d!17685))

(assert (=> b!73500 d!17061))

(declare-fun d!17687 () Bool)

(declare-fun lt!33626 () Bool)

(assert (=> d!17687 (= lt!33626 (select (content!77 (t!5035 (toList!725 lt!32618))) lt!32538))))

(declare-fun e!48769 () Bool)

(assert (=> d!17687 (= lt!33626 e!48769)))

(declare-fun res!39445 () Bool)

(assert (=> d!17687 (=> (not res!39445) (not e!48769))))

(assert (=> d!17687 (= res!39445 ((_ is Cons!1474) (t!5035 (toList!725 lt!32618))))))

(assert (=> d!17687 (= (contains!724 (t!5035 (toList!725 lt!32618)) lt!32538) lt!33626)))

(declare-fun b!74654 () Bool)

(declare-fun e!48770 () Bool)

(assert (=> b!74654 (= e!48769 e!48770)))

(declare-fun res!39446 () Bool)

(assert (=> b!74654 (=> res!39446 e!48770)))

(assert (=> b!74654 (= res!39446 (= (h!2061 (t!5035 (toList!725 lt!32618))) lt!32538))))

(declare-fun b!74655 () Bool)

(assert (=> b!74655 (= e!48770 (contains!724 (t!5035 (t!5035 (toList!725 lt!32618))) lt!32538))))

(assert (= (and d!17687 res!39445) b!74654))

(assert (= (and b!74654 (not res!39446)) b!74655))

(declare-fun m!74117 () Bool)

(assert (=> d!17687 m!74117))

(declare-fun m!74119 () Bool)

(assert (=> d!17687 m!74119))

(declare-fun m!74121 () Bool)

(assert (=> b!74655 m!74121))

(assert (=> b!73275 d!17687))

(declare-fun b!74656 () Bool)

(declare-fun res!39450 () Bool)

(declare-fun e!48771 () Bool)

(assert (=> b!74656 (=> (not res!39450) (not e!48771))))

(assert (=> b!74656 (= res!39450 (and (= (size!2098 (_values!2196 (_2!1073 lt!32791))) (bvadd (mask!6180 (_2!1073 lt!32791)) #b00000000000000000000000000000001)) (= (size!2097 (_keys!3865 (_2!1073 lt!32791))) (size!2098 (_values!2196 (_2!1073 lt!32791)))) (bvsge (_size!397 (_2!1073 lt!32791)) #b00000000000000000000000000000000) (bvsle (_size!397 (_2!1073 lt!32791)) (bvadd (mask!6180 (_2!1073 lt!32791)) #b00000000000000000000000000000001))))))

(declare-fun d!17689 () Bool)

(declare-fun res!39448 () Bool)

(assert (=> d!17689 (=> (not res!39448) (not e!48771))))

(assert (=> d!17689 (= res!39448 (validMask!0 (mask!6180 (_2!1073 lt!32791))))))

(assert (=> d!17689 (= (simpleValid!51 (_2!1073 lt!32791)) e!48771)))

(declare-fun b!74657 () Bool)

(declare-fun res!39447 () Bool)

(assert (=> b!74657 (=> (not res!39447) (not e!48771))))

(assert (=> b!74657 (= res!39447 (bvsge (size!2101 (_2!1073 lt!32791)) (_size!397 (_2!1073 lt!32791))))))

(declare-fun b!74659 () Bool)

(assert (=> b!74659 (= e!48771 (and (bvsge (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000011) (bvsge (_vacant!397 (_2!1073 lt!32791)) #b00000000000000000000000000000000)))))

(declare-fun b!74658 () Bool)

(declare-fun res!39449 () Bool)

(assert (=> b!74658 (=> (not res!39449) (not e!48771))))

(assert (=> b!74658 (= res!39449 (= (size!2101 (_2!1073 lt!32791)) (bvadd (_size!397 (_2!1073 lt!32791)) (bvsdiv (bvadd (extraKeys!2072 (_2!1073 lt!32791)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!17689 res!39448) b!74656))

(assert (= (and b!74656 res!39450) b!74657))

(assert (= (and b!74657 res!39447) b!74658))

(assert (= (and b!74658 res!39449) b!74659))

(assert (=> d!17689 m!73575))

(declare-fun m!74123 () Bool)

(assert (=> b!74657 m!74123))

(assert (=> b!74658 m!74123))

(assert (=> d!16933 d!17689))

(declare-fun d!17691 () Bool)

(assert (=> d!17691 (isDefined!86 (getValueByKey!133 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))

(declare-fun lt!33627 () Unit!2078)

(assert (=> d!17691 (= lt!33627 (choose!422 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))

(declare-fun e!48772 () Bool)

(assert (=> d!17691 e!48772))

(declare-fun res!39451 () Bool)

(assert (=> d!17691 (=> (not res!39451) (not e!48772))))

(assert (=> d!17691 (= res!39451 (isStrictlySorted!292 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17691 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673) lt!33627)))

(declare-fun b!74660 () Bool)

(assert (=> b!74660 (= e!48772 (containsKey!137 (toList!725 (+!94 lt!32671 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32673))))

(assert (= (and d!17691 res!39451) b!74660))

(assert (=> d!17691 m!72261))

(assert (=> d!17691 m!72261))

(assert (=> d!17691 m!72263))

(declare-fun m!74125 () Bool)

(assert (=> d!17691 m!74125))

(declare-fun m!74127 () Bool)

(assert (=> d!17691 m!74127))

(assert (=> b!74660 m!72257))

(assert (=> b!73662 d!17691))

(assert (=> b!73662 d!17105))

(assert (=> b!73662 d!17107))

(declare-fun d!17693 () Bool)

(declare-fun res!39452 () Bool)

(declare-fun e!48773 () Bool)

(assert (=> d!17693 (=> res!39452 e!48773)))

(assert (=> d!17693 (= res!39452 (and ((_ is Cons!1474) lt!32621) (= (_1!1072 (h!2061 lt!32621)) (_1!1072 lt!32538))))))

(assert (=> d!17693 (= (containsKey!137 lt!32621 (_1!1072 lt!32538)) e!48773)))

(declare-fun b!74661 () Bool)

(declare-fun e!48774 () Bool)

(assert (=> b!74661 (= e!48773 e!48774)))

(declare-fun res!39453 () Bool)

(assert (=> b!74661 (=> (not res!39453) (not e!48774))))

(assert (=> b!74661 (= res!39453 (and (or (not ((_ is Cons!1474) lt!32621)) (bvsle (_1!1072 (h!2061 lt!32621)) (_1!1072 lt!32538))) ((_ is Cons!1474) lt!32621) (bvslt (_1!1072 (h!2061 lt!32621)) (_1!1072 lt!32538))))))

(declare-fun b!74662 () Bool)

(assert (=> b!74662 (= e!48774 (containsKey!137 (t!5035 lt!32621) (_1!1072 lt!32538)))))

(assert (= (and d!17693 (not res!39452)) b!74661))

(assert (= (and b!74661 res!39453) b!74662))

(declare-fun m!74129 () Bool)

(assert (=> b!74662 m!74129))

(assert (=> b!73327 d!17693))

(declare-fun d!17695 () Bool)

(declare-fun e!48776 () Bool)

(assert (=> d!17695 e!48776))

(declare-fun res!39454 () Bool)

(assert (=> d!17695 (=> res!39454 e!48776)))

(declare-fun lt!33631 () Bool)

(assert (=> d!17695 (= res!39454 (not lt!33631))))

(declare-fun lt!33630 () Bool)

(assert (=> d!17695 (= lt!33631 lt!33630)))

(declare-fun lt!33629 () Unit!2078)

(declare-fun e!48775 () Unit!2078)

(assert (=> d!17695 (= lt!33629 e!48775)))

(declare-fun c!11275 () Bool)

(assert (=> d!17695 (= c!11275 lt!33630)))

(assert (=> d!17695 (= lt!33630 (containsKey!137 (toList!725 lt!32674) lt!32678))))

(assert (=> d!17695 (= (contains!723 lt!32674 lt!32678) lt!33631)))

(declare-fun b!74663 () Bool)

(declare-fun lt!33628 () Unit!2078)

(assert (=> b!74663 (= e!48775 lt!33628)))

(assert (=> b!74663 (= lt!33628 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32674) lt!32678))))

(assert (=> b!74663 (isDefined!86 (getValueByKey!133 (toList!725 lt!32674) lt!32678))))

(declare-fun b!74664 () Bool)

(declare-fun Unit!2145 () Unit!2078)

(assert (=> b!74664 (= e!48775 Unit!2145)))

(declare-fun b!74665 () Bool)

(assert (=> b!74665 (= e!48776 (isDefined!86 (getValueByKey!133 (toList!725 lt!32674) lt!32678)))))

(assert (= (and d!17695 c!11275) b!74663))

(assert (= (and d!17695 (not c!11275)) b!74664))

(assert (= (and d!17695 (not res!39454)) b!74665))

(declare-fun m!74131 () Bool)

(assert (=> d!17695 m!74131))

(declare-fun m!74133 () Bool)

(assert (=> b!74663 m!74133))

(assert (=> b!74663 m!72265))

(assert (=> b!74663 m!72265))

(declare-fun m!74135 () Bool)

(assert (=> b!74663 m!74135))

(assert (=> b!74665 m!72265))

(assert (=> b!74665 m!72265))

(assert (=> b!74665 m!74135))

(assert (=> d!17003 d!17695))

(assert (=> d!17003 d!16999))

(declare-fun d!17697 () Bool)

(assert (=> d!17697 (= (apply!75 (+!94 lt!32674 (tuple2!2123 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32678) (apply!75 lt!32674 lt!32678))))

(assert (=> d!17697 true))

(declare-fun _$34!811 () Unit!2078)

(assert (=> d!17697 (= (choose!419 lt!32674 lt!32679 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32678) _$34!811)))

(declare-fun bs!3221 () Bool)

(assert (= bs!3221 d!17697))

(assert (=> bs!3221 m!71443))

(assert (=> bs!3221 m!71443))

(assert (=> bs!3221 m!71445))

(assert (=> bs!3221 m!71439))

(assert (=> d!17003 d!17697))

(assert (=> d!17003 d!17023))

(assert (=> d!17003 d!17007))

(assert (=> d!16871 d!16875))

(assert (=> d!16871 d!16879))

(assert (=> d!16871 d!16873))

(assert (=> d!16871 d!16877))

(declare-fun d!17699 () Bool)

(declare-fun res!39455 () Bool)

(declare-fun e!48777 () Bool)

(assert (=> d!17699 (=> res!39455 e!48777)))

(assert (=> d!17699 (= res!39455 (and ((_ is Cons!1474) (toList!725 lt!32594)) (= (_1!1072 (h!2061 (toList!725 lt!32594))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17699 (= (containsKey!137 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48777)))

(declare-fun b!74666 () Bool)

(declare-fun e!48778 () Bool)

(assert (=> b!74666 (= e!48777 e!48778)))

(declare-fun res!39456 () Bool)

(assert (=> b!74666 (=> (not res!39456) (not e!48778))))

(assert (=> b!74666 (= res!39456 (and (or (not ((_ is Cons!1474) (toList!725 lt!32594))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32594))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1474) (toList!725 lt!32594)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32594))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74667 () Bool)

(assert (=> b!74667 (= e!48778 (containsKey!137 (t!5035 (toList!725 lt!32594)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17699 (not res!39455)) b!74666))

(assert (= (and b!74666 res!39456) b!74667))

(assert (=> b!74667 m!71327))

(declare-fun m!74137 () Bool)

(assert (=> b!74667 m!74137))

(assert (=> d!16867 d!17699))

(assert (=> b!73686 d!17561))

(assert (=> b!73686 d!17563))

(declare-fun d!17701 () Bool)

(assert (=> d!17701 (= (apply!75 lt!32914 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (getValueByKey!133 (toList!725 lt!32914) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3222 () Bool)

(assert (= bs!3222 d!17701))

(assert (=> bs!3222 m!71563))

(assert (=> bs!3222 m!72795))

(assert (=> bs!3222 m!72795))

(declare-fun m!74139 () Bool)

(assert (=> bs!3222 m!74139))

(assert (=> b!73447 d!17701))

(declare-fun c!11276 () Bool)

(declare-fun d!17703 () Bool)

(assert (=> d!17703 (= c!11276 ((_ is ValueCellFull!894) (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!48779 () V!2947)

(assert (=> d!17703 (= (get!1139 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48779)))

(declare-fun b!74668 () Bool)

(assert (=> b!74668 (= e!48779 (get!1140 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74669 () Bool)

(assert (=> b!74669 (= e!48779 (get!1141 (select (arr!1860 (ite (or c!10872 c!10866) (_values!2196 newMap!16) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (index!3076 lt!32789) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17703 c!11276) b!74668))

(assert (= (and d!17703 (not c!11276)) b!74669))

(assert (=> b!74668 m!71843))

(assert (=> b!74668 m!71717))

(declare-fun m!74141 () Bool)

(assert (=> b!74668 m!74141))

(assert (=> b!74669 m!71843))

(assert (=> b!74669 m!71717))

(declare-fun m!74143 () Bool)

(assert (=> b!74669 m!74143))

(assert (=> b!73447 d!17703))

(declare-fun d!17705 () Bool)

(assert (=> d!17705 (= (inRange!0 (ite c!10981 (index!3075 lt!33088) (index!3078 lt!33088)) (mask!6180 newMap!16)) (and (bvsge (ite c!10981 (index!3075 lt!33088) (index!3078 lt!33088)) #b00000000000000000000000000000000) (bvslt (ite c!10981 (index!3075 lt!33088) (index!3078 lt!33088)) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6506 d!17705))

(declare-fun d!17707 () Bool)

(assert (=> d!17707 (= (get!1142 (getValueByKey!133 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32684)) (v!2534 (getValueByKey!133 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32684)))))

(assert (=> d!17019 d!17707))

(declare-fun e!48781 () Option!139)

(declare-fun b!74672 () Bool)

(assert (=> b!74672 (= e!48781 (getValueByKey!133 (t!5035 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!32684))))

(declare-fun d!17709 () Bool)

(declare-fun c!11277 () Bool)

(assert (=> d!17709 (= c!11277 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32684)))))

(declare-fun e!48780 () Option!139)

(assert (=> d!17709 (= (getValueByKey!133 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!32684) e!48780)))

(declare-fun b!74671 () Bool)

(assert (=> b!74671 (= e!48780 e!48781)))

(declare-fun c!11278 () Bool)

(assert (=> b!74671 (= c!11278 (and ((_ is Cons!1474) (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))) (not (= (_1!1072 (h!2061 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))) lt!32684))))))

(declare-fun b!74670 () Bool)

(assert (=> b!74670 (= e!48780 (Some!138 (_2!1072 (h!2061 (toList!725 (+!94 lt!32685 (tuple2!2123 lt!32683 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun b!74673 () Bool)

(assert (=> b!74673 (= e!48781 None!137)))

(assert (= (and d!17709 c!11277) b!74670))

(assert (= (and d!17709 (not c!11277)) b!74671))

(assert (= (and b!74671 c!11278) b!74672))

(assert (= (and b!74671 (not c!11278)) b!74673))

(declare-fun m!74145 () Bool)

(assert (=> b!74672 m!74145))

(assert (=> d!17019 d!17709))

(declare-fun d!17711 () Bool)

(declare-fun lt!33632 () Bool)

(assert (=> d!17711 (= lt!33632 (select (content!77 (toList!725 lt!32820)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun e!48782 () Bool)

(assert (=> d!17711 (= lt!33632 e!48782)))

(declare-fun res!39457 () Bool)

(assert (=> d!17711 (=> (not res!39457) (not e!48782))))

(assert (=> d!17711 (= res!39457 ((_ is Cons!1474) (toList!725 lt!32820)))))

(assert (=> d!17711 (= (contains!724 (toList!725 lt!32820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!33632)))

(declare-fun b!74674 () Bool)

(declare-fun e!48783 () Bool)

(assert (=> b!74674 (= e!48782 e!48783)))

(declare-fun res!39458 () Bool)

(assert (=> b!74674 (=> res!39458 e!48783)))

(assert (=> b!74674 (= res!39458 (= (h!2061 (toList!725 lt!32820)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74675 () Bool)

(assert (=> b!74675 (= e!48783 (contains!724 (t!5035 (toList!725 lt!32820)) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))

(assert (= (and d!17711 res!39457) b!74674))

(assert (= (and b!74674 (not res!39458)) b!74675))

(declare-fun m!74147 () Bool)

(assert (=> d!17711 m!74147))

(declare-fun m!74149 () Bool)

(assert (=> d!17711 m!74149))

(declare-fun m!74151 () Bool)

(assert (=> b!74675 m!74151))

(assert (=> b!73287 d!17711))

(declare-fun d!17713 () Bool)

(declare-fun e!48785 () Bool)

(assert (=> d!17713 e!48785))

(declare-fun res!39459 () Bool)

(assert (=> d!17713 (=> res!39459 e!48785)))

(declare-fun lt!33636 () Bool)

(assert (=> d!17713 (= res!39459 (not lt!33636))))

(declare-fun lt!33635 () Bool)

(assert (=> d!17713 (= lt!33636 lt!33635)))

(declare-fun lt!33634 () Unit!2078)

(declare-fun e!48784 () Unit!2078)

(assert (=> d!17713 (= lt!33634 e!48784)))

(declare-fun c!11279 () Bool)

(assert (=> d!17713 (= c!11279 lt!33635)))

(assert (=> d!17713 (= lt!33635 (containsKey!137 (toList!725 lt!33152) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17713 (= (contains!723 lt!33152 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!33636)))

(declare-fun b!74676 () Bool)

(declare-fun lt!33633 () Unit!2078)

(assert (=> b!74676 (= e!48784 lt!33633)))

(assert (=> b!74676 (= lt!33633 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33152) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!74676 (isDefined!86 (getValueByKey!133 (toList!725 lt!33152) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74677 () Bool)

(declare-fun Unit!2146 () Unit!2078)

(assert (=> b!74677 (= e!48784 Unit!2146)))

(declare-fun b!74678 () Bool)

(assert (=> b!74678 (= e!48785 (isDefined!86 (getValueByKey!133 (toList!725 lt!33152) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(assert (= (and d!17713 c!11279) b!74676))

(assert (= (and d!17713 (not c!11279)) b!74677))

(assert (= (and d!17713 (not res!39459)) b!74678))

(declare-fun m!74153 () Bool)

(assert (=> d!17713 m!74153))

(declare-fun m!74155 () Bool)

(assert (=> b!74676 m!74155))

(assert (=> b!74676 m!72367))

(assert (=> b!74676 m!72367))

(declare-fun m!74157 () Bool)

(assert (=> b!74676 m!74157))

(assert (=> b!74678 m!72367))

(assert (=> b!74678 m!72367))

(assert (=> b!74678 m!74157))

(assert (=> d!17057 d!17713))

(declare-fun b!74681 () Bool)

(declare-fun e!48787 () Option!139)

(assert (=> b!74681 (= e!48787 (getValueByKey!133 (t!5035 lt!33151) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun c!11280 () Bool)

(declare-fun d!17715 () Bool)

(assert (=> d!17715 (= c!11280 (and ((_ is Cons!1474) lt!33151) (= (_1!1072 (h!2061 lt!33151)) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun e!48786 () Option!139)

(assert (=> d!17715 (= (getValueByKey!133 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) e!48786)))

(declare-fun b!74680 () Bool)

(assert (=> b!74680 (= e!48786 e!48787)))

(declare-fun c!11281 () Bool)

(assert (=> b!74680 (= c!11281 (and ((_ is Cons!1474) lt!33151) (not (= (_1!1072 (h!2061 lt!33151)) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun b!74679 () Bool)

(assert (=> b!74679 (= e!48786 (Some!138 (_2!1072 (h!2061 lt!33151))))))

(declare-fun b!74682 () Bool)

(assert (=> b!74682 (= e!48787 None!137)))

(assert (= (and d!17715 c!11280) b!74679))

(assert (= (and d!17715 (not c!11280)) b!74680))

(assert (= (and b!74680 c!11281) b!74681))

(assert (= (and b!74680 (not c!11281)) b!74682))

(declare-fun m!74159 () Bool)

(assert (=> b!74681 m!74159))

(assert (=> d!17057 d!17715))

(declare-fun d!17717 () Bool)

(assert (=> d!17717 (= (getValueByKey!133 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) (Some!138 (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun lt!33637 () Unit!2078)

(assert (=> d!17717 (= lt!33637 (choose!412 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48788 () Bool)

(assert (=> d!17717 e!48788))

(declare-fun res!39460 () Bool)

(assert (=> d!17717 (=> (not res!39460) (not e!48788))))

(assert (=> d!17717 (= res!39460 (isStrictlySorted!292 lt!33151))))

(assert (=> d!17717 (= (lemmaContainsTupThenGetReturnValue!50 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!33637)))

(declare-fun b!74683 () Bool)

(declare-fun res!39461 () Bool)

(assert (=> b!74683 (=> (not res!39461) (not e!48788))))

(assert (=> b!74683 (= res!39461 (containsKey!137 lt!33151 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74684 () Bool)

(assert (=> b!74684 (= e!48788 (contains!724 lt!33151 (tuple2!2123 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(assert (= (and d!17717 res!39460) b!74683))

(assert (= (and b!74683 res!39461) b!74684))

(assert (=> d!17717 m!72361))

(declare-fun m!74161 () Bool)

(assert (=> d!17717 m!74161))

(declare-fun m!74163 () Bool)

(assert (=> d!17717 m!74163))

(declare-fun m!74165 () Bool)

(assert (=> b!74683 m!74165))

(declare-fun m!74167 () Bool)

(assert (=> b!74684 m!74167))

(assert (=> d!17057 d!17717))

(declare-fun b!74685 () Bool)

(declare-fun e!48791 () List!1478)

(declare-fun call!6620 () List!1478)

(assert (=> b!74685 (= e!48791 call!6620)))

(declare-fun b!74686 () Bool)

(declare-fun e!48793 () List!1478)

(declare-fun call!6621 () List!1478)

(assert (=> b!74686 (= e!48793 call!6621)))

(declare-fun b!74687 () Bool)

(declare-fun e!48789 () List!1478)

(declare-fun call!6622 () List!1478)

(assert (=> b!74687 (= e!48789 call!6622)))

(declare-fun c!11283 () Bool)

(declare-fun b!74688 () Bool)

(declare-fun c!11285 () Bool)

(declare-fun e!48790 () List!1478)

(assert (=> b!74688 (= e!48790 (ite c!11285 (t!5035 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (ite c!11283 (Cons!1474 (h!2061 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (t!5035 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))))) Nil!1475)))))

(declare-fun b!74689 () Bool)

(assert (=> b!74689 (= e!48789 e!48791)))

(assert (=> b!74689 (= c!11285 (and ((_ is Cons!1474) (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (= (_1!1072 (h!2061 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun bm!6617 () Bool)

(assert (=> bm!6617 (= call!6621 call!6620)))

(declare-fun bm!6618 () Bool)

(declare-fun c!11282 () Bool)

(assert (=> bm!6618 (= call!6622 ($colon$colon!66 e!48790 (ite c!11282 (h!2061 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (tuple2!2123 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun c!11284 () Bool)

(assert (=> bm!6618 (= c!11284 c!11282)))

(declare-fun b!74690 () Bool)

(declare-fun res!39463 () Bool)

(declare-fun e!48792 () Bool)

(assert (=> b!74690 (=> (not res!39463) (not e!48792))))

(declare-fun lt!33638 () List!1478)

(assert (=> b!74690 (= res!39463 (containsKey!137 lt!33638 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6619 () Bool)

(assert (=> bm!6619 (= call!6620 call!6622)))

(declare-fun b!74691 () Bool)

(assert (=> b!74691 (= e!48792 (contains!724 lt!33638 (tuple2!2123 (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74692 () Bool)

(assert (=> b!74692 (= e!48793 call!6621)))

(declare-fun b!74693 () Bool)

(assert (=> b!74693 (= e!48790 (insertStrictlySorted!53 (t!5035 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74694 () Bool)

(assert (=> b!74694 (= c!11283 (and ((_ is Cons!1474) (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (bvsgt (_1!1072 (h!2061 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(assert (=> b!74694 (= e!48791 e!48793)))

(declare-fun d!17719 () Bool)

(assert (=> d!17719 e!48792))

(declare-fun res!39462 () Bool)

(assert (=> d!17719 (=> (not res!39462) (not e!48792))))

(assert (=> d!17719 (= res!39462 (isStrictlySorted!292 lt!33638))))

(assert (=> d!17719 (= lt!33638 e!48789)))

(assert (=> d!17719 (= c!11282 (and ((_ is Cons!1474) (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369)))) (bvslt (_1!1072 (h!2061 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(assert (=> d!17719 (isStrictlySorted!292 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))))))

(assert (=> d!17719 (= (insertStrictlySorted!53 (toList!725 (ite c!10816 call!6371 (ite c!10820 call!6372 call!6369))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) (_2!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) lt!33638)))

(assert (= (and d!17719 c!11282) b!74687))

(assert (= (and d!17719 (not c!11282)) b!74689))

(assert (= (and b!74689 c!11285) b!74685))

(assert (= (and b!74689 (not c!11285)) b!74694))

(assert (= (and b!74694 c!11283) b!74692))

(assert (= (and b!74694 (not c!11283)) b!74686))

(assert (= (or b!74692 b!74686) bm!6617))

(assert (= (or b!74685 bm!6617) bm!6619))

(assert (= (or b!74687 bm!6619) bm!6618))

(assert (= (and bm!6618 c!11284) b!74693))

(assert (= (and bm!6618 (not c!11284)) b!74688))

(assert (= (and d!17719 res!39462) b!74690))

(assert (= (and b!74690 res!39463) b!74691))

(declare-fun m!74169 () Bool)

(assert (=> bm!6618 m!74169))

(declare-fun m!74171 () Bool)

(assert (=> b!74693 m!74171))

(declare-fun m!74173 () Bool)

(assert (=> b!74691 m!74173))

(declare-fun m!74175 () Bool)

(assert (=> d!17719 m!74175))

(declare-fun m!74177 () Bool)

(assert (=> d!17719 m!74177))

(declare-fun m!74179 () Bool)

(assert (=> b!74690 m!74179))

(assert (=> d!17057 d!17719))

(declare-fun d!17721 () Bool)

(assert (=> d!17721 (isDefined!86 (getValueByKey!133 (toList!725 lt!32610) (_1!1072 lt!32542)))))

(declare-fun lt!33639 () Unit!2078)

(assert (=> d!17721 (= lt!33639 (choose!422 (toList!725 lt!32610) (_1!1072 lt!32542)))))

(declare-fun e!48794 () Bool)

(assert (=> d!17721 e!48794))

(declare-fun res!39464 () Bool)

(assert (=> d!17721 (=> (not res!39464) (not e!48794))))

(assert (=> d!17721 (= res!39464 (isStrictlySorted!292 (toList!725 lt!32610)))))

(assert (=> d!17721 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32610) (_1!1072 lt!32542)) lt!33639)))

(declare-fun b!74695 () Bool)

(assert (=> b!74695 (= e!48794 (containsKey!137 (toList!725 lt!32610) (_1!1072 lt!32542)))))

(assert (= (and d!17721 res!39464) b!74695))

(assert (=> d!17721 m!71363))

(assert (=> d!17721 m!71363))

(assert (=> d!17721 m!71907))

(declare-fun m!74181 () Bool)

(assert (=> d!17721 m!74181))

(declare-fun m!74183 () Bool)

(assert (=> d!17721 m!74183))

(assert (=> b!74695 m!71903))

(assert (=> b!73456 d!17721))

(assert (=> b!73456 d!17125))

(assert (=> b!73456 d!17055))

(declare-fun d!17723 () Bool)

(declare-fun res!39465 () Bool)

(declare-fun e!48795 () Bool)

(assert (=> d!17723 (=> res!39465 e!48795)))

(assert (=> d!17723 (= res!39465 (and ((_ is Cons!1474) (toList!725 lt!32618)) (= (_1!1072 (h!2061 (toList!725 lt!32618))) (_1!1072 lt!32538))))))

(assert (=> d!17723 (= (containsKey!137 (toList!725 lt!32618) (_1!1072 lt!32538)) e!48795)))

(declare-fun b!74696 () Bool)

(declare-fun e!48796 () Bool)

(assert (=> b!74696 (= e!48795 e!48796)))

(declare-fun res!39466 () Bool)

(assert (=> b!74696 (=> (not res!39466) (not e!48796))))

(assert (=> b!74696 (= res!39466 (and (or (not ((_ is Cons!1474) (toList!725 lt!32618))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32618))) (_1!1072 lt!32538))) ((_ is Cons!1474) (toList!725 lt!32618)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32618))) (_1!1072 lt!32538))))))

(declare-fun b!74697 () Bool)

(assert (=> b!74697 (= e!48796 (containsKey!137 (t!5035 (toList!725 lt!32618)) (_1!1072 lt!32538)))))

(assert (= (and d!17723 (not res!39465)) b!74696))

(assert (= (and b!74696 res!39466) b!74697))

(declare-fun m!74185 () Bool)

(assert (=> b!74697 m!74185))

(assert (=> d!17027 d!17723))

(assert (=> b!73553 d!17583))

(declare-fun d!17725 () Bool)

(declare-fun e!48797 () Bool)

(assert (=> d!17725 e!48797))

(declare-fun res!39467 () Bool)

(assert (=> d!17725 (=> (not res!39467) (not e!48797))))

(declare-fun lt!33642 () ListLongMap!1419)

(assert (=> d!17725 (= res!39467 (contains!723 lt!33642 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(declare-fun lt!33641 () List!1478)

(assert (=> d!17725 (= lt!33642 (ListLongMap!1420 lt!33641))))

(declare-fun lt!33643 () Unit!2078)

(declare-fun lt!33640 () Unit!2078)

(assert (=> d!17725 (= lt!33643 lt!33640)))

(assert (=> d!17725 (= (getValueByKey!133 lt!33641 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17725 (= lt!33640 (lemmaContainsTupThenGetReturnValue!50 lt!33641 (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17725 (= lt!33641 (insertStrictlySorted!53 (toList!725 (map!1151 newMap!16)) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))))))

(assert (=> d!17725 (= (+!94 (map!1151 newMap!16) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) lt!33642)))

(declare-fun b!74698 () Bool)

(declare-fun res!39468 () Bool)

(assert (=> b!74698 (=> (not res!39468) (not e!48797))))

(assert (=> b!74698 (= res!39468 (= (getValueByKey!133 (toList!725 lt!33642) (_1!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533))) (Some!138 (_2!1072 (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))))

(declare-fun b!74699 () Bool)

(assert (=> b!74699 (= e!48797 (contains!724 (toList!725 lt!33642) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)))))

(assert (= (and d!17725 res!39467) b!74698))

(assert (= (and b!74698 res!39468) b!74699))

(declare-fun m!74187 () Bool)

(assert (=> d!17725 m!74187))

(declare-fun m!74189 () Bool)

(assert (=> d!17725 m!74189))

(declare-fun m!74191 () Bool)

(assert (=> d!17725 m!74191))

(declare-fun m!74193 () Bool)

(assert (=> d!17725 m!74193))

(declare-fun m!74195 () Bool)

(assert (=> b!74698 m!74195))

(declare-fun m!74197 () Bool)

(assert (=> b!74699 m!74197))

(assert (=> b!73553 d!17725))

(assert (=> b!73553 d!16831))

(declare-fun e!48799 () Option!139)

(declare-fun b!74702 () Bool)

(assert (=> b!74702 (= e!48799 (getValueByKey!133 (t!5035 (toList!725 lt!33152)) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun c!11286 () Bool)

(declare-fun d!17727 () Bool)

(assert (=> d!17727 (= c!11286 (and ((_ is Cons!1474) (toList!725 lt!33152)) (= (_1!1072 (h!2061 (toList!725 lt!33152))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun e!48798 () Option!139)

(assert (=> d!17727 (= (getValueByKey!133 (toList!725 lt!33152) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))) e!48798)))

(declare-fun b!74701 () Bool)

(assert (=> b!74701 (= e!48798 e!48799)))

(declare-fun c!11287 () Bool)

(assert (=> b!74701 (= c!11287 (and ((_ is Cons!1474) (toList!725 lt!33152)) (not (= (_1!1072 (h!2061 (toList!725 lt!33152))) (_1!1072 (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992))))))))))))

(declare-fun b!74700 () Bool)

(assert (=> b!74700 (= e!48798 (Some!138 (_2!1072 (h!2061 (toList!725 lt!33152)))))))

(declare-fun b!74703 () Bool)

(assert (=> b!74703 (= e!48799 None!137)))

(assert (= (and d!17727 c!11286) b!74700))

(assert (= (and d!17727 (not c!11286)) b!74701))

(assert (= (and b!74701 c!11287) b!74702))

(assert (= (and b!74701 (not c!11287)) b!74703))

(declare-fun m!74199 () Bool)

(assert (=> b!74702 m!74199))

(assert (=> b!73722 d!17727))

(declare-fun d!17729 () Bool)

(declare-fun c!11288 () Bool)

(assert (=> d!17729 (= c!11288 ((_ is Nil!1475) (toList!725 lt!32618)))))

(declare-fun e!48800 () (InoxSet tuple2!2122))

(assert (=> d!17729 (= (content!77 (toList!725 lt!32618)) e!48800)))

(declare-fun b!74704 () Bool)

(assert (=> b!74704 (= e!48800 ((as const (Array tuple2!2122 Bool)) false))))

(declare-fun b!74705 () Bool)

(assert (=> b!74705 (= e!48800 ((_ map or) (store ((as const (Array tuple2!2122 Bool)) false) (h!2061 (toList!725 lt!32618)) true) (content!77 (t!5035 (toList!725 lt!32618)))))))

(assert (= (and d!17729 c!11288) b!74704))

(assert (= (and d!17729 (not c!11288)) b!74705))

(declare-fun m!74201 () Bool)

(assert (=> b!74705 m!74201))

(assert (=> b!74705 m!74117))

(assert (=> d!16865 d!17729))

(declare-fun d!17731 () Bool)

(declare-fun lt!33644 () Bool)

(assert (=> d!17731 (= lt!33644 (select (content!77 lt!33142) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun e!48801 () Bool)

(assert (=> d!17731 (= lt!33644 e!48801)))

(declare-fun res!39469 () Bool)

(assert (=> d!17731 (=> (not res!39469) (not e!48801))))

(assert (=> d!17731 (= res!39469 ((_ is Cons!1474) lt!33142))))

(assert (=> d!17731 (= (contains!724 lt!33142 (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))) lt!33644)))

(declare-fun b!74706 () Bool)

(declare-fun e!48802 () Bool)

(assert (=> b!74706 (= e!48801 e!48802)))

(declare-fun res!39470 () Bool)

(assert (=> b!74706 (=> res!39470 e!48802)))

(assert (=> b!74706 (= res!39470 (= (h!2061 lt!33142) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(declare-fun b!74707 () Bool)

(assert (=> b!74707 (= e!48802 (contains!724 (t!5035 lt!33142) (tuple2!2123 (_1!1072 lt!32542) (_2!1072 lt!32542))))))

(assert (= (and d!17731 res!39469) b!74706))

(assert (= (and b!74706 (not res!39470)) b!74707))

(declare-fun m!74203 () Bool)

(assert (=> d!17731 m!74203))

(declare-fun m!74205 () Bool)

(assert (=> d!17731 m!74205))

(declare-fun m!74207 () Bool)

(assert (=> b!74707 m!74207))

(assert (=> b!73708 d!17731))

(assert (=> d!17053 d!16965))

(assert (=> d!17053 d!16967))

(declare-fun d!17733 () Bool)

(assert (=> d!17733 (isDefined!86 (getValueByKey!133 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17733 true))

(declare-fun _$12!323 () Unit!2078)

(assert (=> d!17733 (= (choose!422 (toList!725 lt!32541) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) _$12!323)))

(declare-fun bs!3223 () Bool)

(assert (= bs!3223 d!17733))

(assert (=> bs!3223 m!71227))

(assert (=> bs!3223 m!71493))

(assert (=> bs!3223 m!71493))

(assert (=> bs!3223 m!71495))

(assert (=> d!17053 d!17733))

(declare-fun d!17735 () Bool)

(declare-fun res!39471 () Bool)

(declare-fun e!48803 () Bool)

(assert (=> d!17735 (=> res!39471 e!48803)))

(assert (=> d!17735 (= res!39471 (or ((_ is Nil!1475) (toList!725 lt!32541)) ((_ is Nil!1475) (t!5035 (toList!725 lt!32541)))))))

(assert (=> d!17735 (= (isStrictlySorted!292 (toList!725 lt!32541)) e!48803)))

(declare-fun b!74708 () Bool)

(declare-fun e!48804 () Bool)

(assert (=> b!74708 (= e!48803 e!48804)))

(declare-fun res!39472 () Bool)

(assert (=> b!74708 (=> (not res!39472) (not e!48804))))

(assert (=> b!74708 (= res!39472 (bvslt (_1!1072 (h!2061 (toList!725 lt!32541))) (_1!1072 (h!2061 (t!5035 (toList!725 lt!32541))))))))

(declare-fun b!74709 () Bool)

(assert (=> b!74709 (= e!48804 (isStrictlySorted!292 (t!5035 (toList!725 lt!32541))))))

(assert (= (and d!17735 (not res!39471)) b!74708))

(assert (= (and b!74708 res!39472) b!74709))

(declare-fun m!74209 () Bool)

(assert (=> b!74709 m!74209))

(assert (=> d!17053 d!17735))

(declare-fun d!17737 () Bool)

(assert (=> d!17737 (isDefined!86 (getValueByKey!133 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33645 () Unit!2078)

(assert (=> d!17737 (= lt!33645 (choose!422 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48805 () Bool)

(assert (=> d!17737 e!48805))

(declare-fun res!39473 () Bool)

(assert (=> d!17737 (=> (not res!39473) (not e!48805))))

(assert (=> d!17737 (= res!39473 (isStrictlySorted!292 (toList!725 lt!32594)))))

(assert (=> d!17737 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33645)))

(declare-fun b!74710 () Bool)

(assert (=> b!74710 (= e!48805 (containsKey!137 (toList!725 lt!32594) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17737 res!39473) b!74710))

(assert (=> d!17737 m!71327))

(assert (=> d!17737 m!71589))

(assert (=> d!17737 m!71589))

(assert (=> d!17737 m!71591))

(assert (=> d!17737 m!71327))

(declare-fun m!74211 () Bool)

(assert (=> d!17737 m!74211))

(assert (=> d!17737 m!72487))

(assert (=> b!74710 m!71327))

(assert (=> b!74710 m!71585))

(assert (=> b!73276 d!17737))

(assert (=> b!73276 d!17141))

(assert (=> b!73276 d!17111))

(declare-fun d!17739 () Bool)

(declare-fun res!39474 () Bool)

(declare-fun e!48806 () Bool)

(assert (=> d!17739 (=> res!39474 e!48806)))

(assert (=> d!17739 (= res!39474 (or ((_ is Nil!1475) lt!33142) ((_ is Nil!1475) (t!5035 lt!33142))))))

(assert (=> d!17739 (= (isStrictlySorted!292 lt!33142) e!48806)))

(declare-fun b!74711 () Bool)

(declare-fun e!48807 () Bool)

(assert (=> b!74711 (= e!48806 e!48807)))

(declare-fun res!39475 () Bool)

(assert (=> b!74711 (=> (not res!39475) (not e!48807))))

(assert (=> b!74711 (= res!39475 (bvslt (_1!1072 (h!2061 lt!33142)) (_1!1072 (h!2061 (t!5035 lt!33142)))))))

(declare-fun b!74712 () Bool)

(assert (=> b!74712 (= e!48807 (isStrictlySorted!292 (t!5035 lt!33142)))))

(assert (= (and d!17739 (not res!39474)) b!74711))

(assert (= (and b!74711 res!39475) b!74712))

(declare-fun m!74213 () Bool)

(assert (=> b!74712 m!74213))

(assert (=> d!17047 d!17739))

(assert (=> d!17047 d!17529))

(declare-fun d!17741 () Bool)

(assert (=> d!17741 (= (inRange!0 (index!3076 lt!32849) (mask!6180 newMap!16)) (and (bvsge (index!3076 lt!32849) #b00000000000000000000000000000000) (bvslt (index!3076 lt!32849) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!73363 d!17741))

(assert (=> b!73258 d!17061))

(assert (=> b!73546 d!16899))

(assert (=> b!73714 d!17637))

(assert (=> b!73714 d!17639))

(declare-fun d!17743 () Bool)

(assert (=> d!17743 (isDefined!86 (getValueByKey!133 (toList!725 lt!32618) (_1!1072 lt!32538)))))

(declare-fun lt!33646 () Unit!2078)

(assert (=> d!17743 (= lt!33646 (choose!422 (toList!725 lt!32618) (_1!1072 lt!32538)))))

(declare-fun e!48808 () Bool)

(assert (=> d!17743 e!48808))

(declare-fun res!39476 () Bool)

(assert (=> d!17743 (=> (not res!39476) (not e!48808))))

(assert (=> d!17743 (= res!39476 (isStrictlySorted!292 (toList!725 lt!32618)))))

(assert (=> d!17743 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32618) (_1!1072 lt!32538)) lt!33646)))

(declare-fun b!74713 () Bool)

(assert (=> b!74713 (= e!48808 (containsKey!137 (toList!725 lt!32618) (_1!1072 lt!32538)))))

(assert (= (and d!17743 res!39476) b!74713))

(assert (=> d!17743 m!71387))

(assert (=> d!17743 m!71387))

(assert (=> d!17743 m!72277))

(declare-fun m!74215 () Bool)

(assert (=> d!17743 m!74215))

(declare-fun m!74217 () Bool)

(assert (=> d!17743 m!74217))

(assert (=> b!74713 m!72273))

(assert (=> b!73665 d!17743))

(assert (=> b!73665 d!17215))

(assert (=> b!73665 d!16973))

(assert (=> d!17045 d!17043))

(declare-fun d!17745 () Bool)

(assert (=> d!17745 (= (getValueByKey!133 lt!32613 (_1!1072 lt!32542)) (Some!138 (_2!1072 lt!32542)))))

(assert (=> d!17745 true))

(declare-fun _$22!388 () Unit!2078)

(assert (=> d!17745 (= (choose!412 lt!32613 (_1!1072 lt!32542) (_2!1072 lt!32542)) _$22!388)))

(declare-fun bs!3224 () Bool)

(assert (= bs!3224 d!17745))

(assert (=> bs!3224 m!71369))

(assert (=> d!17045 d!17745))

(declare-fun d!17747 () Bool)

(declare-fun res!39477 () Bool)

(declare-fun e!48809 () Bool)

(assert (=> d!17747 (=> res!39477 e!48809)))

(assert (=> d!17747 (= res!39477 (or ((_ is Nil!1475) lt!32613) ((_ is Nil!1475) (t!5035 lt!32613))))))

(assert (=> d!17747 (= (isStrictlySorted!292 lt!32613) e!48809)))

(declare-fun b!74714 () Bool)

(declare-fun e!48810 () Bool)

(assert (=> b!74714 (= e!48809 e!48810)))

(declare-fun res!39478 () Bool)

(assert (=> b!74714 (=> (not res!39478) (not e!48810))))

(assert (=> b!74714 (= res!39478 (bvslt (_1!1072 (h!2061 lt!32613)) (_1!1072 (h!2061 (t!5035 lt!32613)))))))

(declare-fun b!74715 () Bool)

(assert (=> b!74715 (= e!48810 (isStrictlySorted!292 (t!5035 lt!32613)))))

(assert (= (and d!17747 (not res!39477)) b!74714))

(assert (= (and b!74714 res!39478) b!74715))

(declare-fun m!74219 () Bool)

(assert (=> b!74715 m!74219))

(assert (=> d!17045 d!17747))

(assert (=> bm!6464 d!17289))

(declare-fun b!74718 () Bool)

(declare-fun e!48812 () Option!139)

(assert (=> b!74718 (= e!48812 (getValueByKey!133 (t!5035 (t!5035 lt!32609)) (_1!1072 lt!32542)))))

(declare-fun d!17749 () Bool)

(declare-fun c!11289 () Bool)

(assert (=> d!17749 (= c!11289 (and ((_ is Cons!1474) (t!5035 lt!32609)) (= (_1!1072 (h!2061 (t!5035 lt!32609))) (_1!1072 lt!32542))))))

(declare-fun e!48811 () Option!139)

(assert (=> d!17749 (= (getValueByKey!133 (t!5035 lt!32609) (_1!1072 lt!32542)) e!48811)))

(declare-fun b!74717 () Bool)

(assert (=> b!74717 (= e!48811 e!48812)))

(declare-fun c!11290 () Bool)

(assert (=> b!74717 (= c!11290 (and ((_ is Cons!1474) (t!5035 lt!32609)) (not (= (_1!1072 (h!2061 (t!5035 lt!32609))) (_1!1072 lt!32542)))))))

(declare-fun b!74716 () Bool)

(assert (=> b!74716 (= e!48811 (Some!138 (_2!1072 (h!2061 (t!5035 lt!32609)))))))

(declare-fun b!74719 () Bool)

(assert (=> b!74719 (= e!48812 None!137)))

(assert (= (and d!17749 c!11289) b!74716))

(assert (= (and d!17749 (not c!11289)) b!74717))

(assert (= (and b!74717 c!11290) b!74718))

(assert (= (and b!74717 (not c!11290)) b!74719))

(declare-fun m!74221 () Bool)

(assert (=> b!74718 m!74221))

(assert (=> b!73461 d!17749))

(declare-fun d!17751 () Bool)

(declare-fun res!39479 () Bool)

(declare-fun e!48813 () Bool)

(assert (=> d!17751 (=> res!39479 e!48813)))

(assert (=> d!17751 (= res!39479 (= (select (arr!1859 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17751 (= (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!48813)))

(declare-fun b!74720 () Bool)

(declare-fun e!48814 () Bool)

(assert (=> b!74720 (= e!48813 e!48814)))

(declare-fun res!39480 () Bool)

(assert (=> b!74720 (=> (not res!39480) (not e!48814))))

(assert (=> b!74720 (= res!39480 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun b!74721 () Bool)

(assert (=> b!74721 (= e!48814 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17751 (not res!39479)) b!74720))

(assert (= (and b!74720 res!39480) b!74721))

(assert (=> d!17751 m!72761))

(assert (=> b!74721 m!71227))

(declare-fun m!74223 () Bool)

(assert (=> b!74721 m!74223))

(assert (=> b!73507 d!17751))

(declare-fun d!17753 () Bool)

(declare-fun lt!33647 () Bool)

(assert (=> d!17753 (= lt!33647 (select (content!77 lt!32621) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun e!48815 () Bool)

(assert (=> d!17753 (= lt!33647 e!48815)))

(declare-fun res!39481 () Bool)

(assert (=> d!17753 (=> (not res!39481) (not e!48815))))

(assert (=> d!17753 (= res!39481 ((_ is Cons!1474) lt!32621))))

(assert (=> d!17753 (= (contains!724 lt!32621 (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))) lt!33647)))

(declare-fun b!74722 () Bool)

(declare-fun e!48816 () Bool)

(assert (=> b!74722 (= e!48815 e!48816)))

(declare-fun res!39482 () Bool)

(assert (=> b!74722 (=> res!39482 e!48816)))

(assert (=> b!74722 (= res!39482 (= (h!2061 lt!32621) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(declare-fun b!74723 () Bool)

(assert (=> b!74723 (= e!48816 (contains!724 (t!5035 lt!32621) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))))))

(assert (= (and d!17753 res!39481) b!74722))

(assert (= (and b!74722 (not res!39482)) b!74723))

(declare-fun m!74225 () Bool)

(assert (=> d!17753 m!74225))

(declare-fun m!74227 () Bool)

(assert (=> d!17753 m!74227))

(declare-fun m!74229 () Bool)

(assert (=> b!74723 m!74229))

(assert (=> b!73328 d!17753))

(assert (=> bm!6481 d!17359))

(declare-fun d!17755 () Bool)

(assert (=> d!17755 (= (apply!75 (+!94 lt!32688 (tuple2!2123 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))))) lt!32687) (apply!75 lt!32688 lt!32687))))

(assert (=> d!17755 true))

(declare-fun _$34!812 () Unit!2078)

(assert (=> d!17755 (= (choose!419 lt!32688 lt!32689 (minValue!2115 (v!2530 (underlying!260 thiss!992))) lt!32687) _$34!812)))

(declare-fun bs!3225 () Bool)

(assert (= bs!3225 d!17755))

(assert (=> bs!3225 m!71433))

(assert (=> bs!3225 m!71433))

(assert (=> bs!3225 m!71457))

(assert (=> bs!3225 m!71437))

(assert (=> d!17001 d!17755))

(declare-fun d!17757 () Bool)

(declare-fun e!48818 () Bool)

(assert (=> d!17757 e!48818))

(declare-fun res!39483 () Bool)

(assert (=> d!17757 (=> res!39483 e!48818)))

(declare-fun lt!33651 () Bool)

(assert (=> d!17757 (= res!39483 (not lt!33651))))

(declare-fun lt!33650 () Bool)

(assert (=> d!17757 (= lt!33651 lt!33650)))

(declare-fun lt!33649 () Unit!2078)

(declare-fun e!48817 () Unit!2078)

(assert (=> d!17757 (= lt!33649 e!48817)))

(declare-fun c!11291 () Bool)

(assert (=> d!17757 (= c!11291 lt!33650)))

(assert (=> d!17757 (= lt!33650 (containsKey!137 (toList!725 lt!32688) lt!32687))))

(assert (=> d!17757 (= (contains!723 lt!32688 lt!32687) lt!33651)))

(declare-fun b!74724 () Bool)

(declare-fun lt!33648 () Unit!2078)

(assert (=> b!74724 (= e!48817 lt!33648)))

(assert (=> b!74724 (= lt!33648 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32688) lt!32687))))

(assert (=> b!74724 (isDefined!86 (getValueByKey!133 (toList!725 lt!32688) lt!32687))))

(declare-fun b!74725 () Bool)

(declare-fun Unit!2147 () Unit!2078)

(assert (=> b!74725 (= e!48817 Unit!2147)))

(declare-fun b!74726 () Bool)

(assert (=> b!74726 (= e!48818 (isDefined!86 (getValueByKey!133 (toList!725 lt!32688) lt!32687)))))

(assert (= (and d!17757 c!11291) b!74724))

(assert (= (and d!17757 (not c!11291)) b!74725))

(assert (= (and d!17757 (not res!39483)) b!74726))

(declare-fun m!74231 () Bool)

(assert (=> d!17757 m!74231))

(declare-fun m!74233 () Bool)

(assert (=> b!74724 m!74233))

(assert (=> b!74724 m!72269))

(assert (=> b!74724 m!72269))

(declare-fun m!74235 () Bool)

(assert (=> b!74724 m!74235))

(assert (=> b!74726 m!72269))

(assert (=> b!74726 m!72269))

(assert (=> b!74726 m!74235))

(assert (=> d!17001 d!17757))

(assert (=> d!17001 d!17025))

(assert (=> d!17001 d!17013))

(assert (=> d!17001 d!17015))

(declare-fun b!74729 () Bool)

(declare-fun e!48820 () Option!139)

(assert (=> b!74729 (= e!48820 (getValueByKey!133 (t!5035 (toList!725 lt!33106)) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17759 () Bool)

(declare-fun c!11292 () Bool)

(assert (=> d!17759 (= c!11292 (and ((_ is Cons!1474) (toList!725 lt!33106)) (= (_1!1072 (h!2061 (toList!725 lt!33106))) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48819 () Option!139)

(assert (=> d!17759 (= (getValueByKey!133 (toList!725 lt!33106) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48819)))

(declare-fun b!74728 () Bool)

(assert (=> b!74728 (= e!48819 e!48820)))

(declare-fun c!11293 () Bool)

(assert (=> b!74728 (= c!11293 (and ((_ is Cons!1474) (toList!725 lt!33106)) (not (= (_1!1072 (h!2061 (toList!725 lt!33106))) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74727 () Bool)

(assert (=> b!74727 (= e!48819 (Some!138 (_2!1072 (h!2061 (toList!725 lt!33106)))))))

(declare-fun b!74730 () Bool)

(assert (=> b!74730 (= e!48820 None!137)))

(assert (= (and d!17759 c!11292) b!74727))

(assert (= (and d!17759 (not c!11292)) b!74728))

(assert (= (and b!74728 c!11293) b!74729))

(assert (= (and b!74728 (not c!11293)) b!74730))

(declare-fun m!74237 () Bool)

(assert (=> b!74729 m!74237))

(assert (=> b!73655 d!17759))

(assert (=> d!16917 d!16847))

(declare-fun d!17761 () Bool)

(assert (=> d!17761 (= (apply!75 lt!32947 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (getValueByKey!133 (toList!725 lt!32947) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3226 () Bool)

(assert (= bs!3226 d!17761))

(assert (=> bs!3226 m!71563))

(assert (=> bs!3226 m!73431))

(assert (=> bs!3226 m!73431))

(declare-fun m!74239 () Bool)

(assert (=> bs!3226 m!74239))

(assert (=> b!73495 d!17761))

(declare-fun d!17763 () Bool)

(declare-fun c!11294 () Bool)

(assert (=> d!17763 (= c!11294 ((_ is ValueCellFull!894) (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000)))))

(declare-fun e!48821 () V!2947)

(assert (=> d!17763 (= (get!1139 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48821)))

(declare-fun b!74731 () Bool)

(assert (=> b!74731 (= e!48821 (get!1140 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74732 () Bool)

(assert (=> b!74732 (= e!48821 (get!1141 (select (arr!1860 (ite c!10872 (_values!2196 newMap!16) lt!32777)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17763 c!11294) b!74731))

(assert (= (and d!17763 (not c!11294)) b!74732))

(assert (=> b!74731 m!71945))

(assert (=> b!74731 m!71717))

(declare-fun m!74241 () Bool)

(assert (=> b!74731 m!74241))

(assert (=> b!74732 m!71945))

(assert (=> b!74732 m!71717))

(declare-fun m!74243 () Bool)

(assert (=> b!74732 m!74243))

(assert (=> b!73495 d!17763))

(declare-fun b!74745 () Bool)

(declare-fun e!48828 () SeekEntryResult!236)

(declare-fun e!48829 () SeekEntryResult!236)

(assert (=> b!74745 (= e!48828 e!48829)))

(declare-fun lt!33656 () (_ BitVec 64))

(declare-fun c!11302 () Bool)

(assert (=> b!74745 (= c!11302 (= lt!33656 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!74746 () Bool)

(assert (=> b!74746 (= e!48828 Undefined!236)))

(declare-fun b!74748 () Bool)

(declare-fun c!11303 () Bool)

(assert (=> b!74748 (= c!11303 (= lt!33656 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48830 () SeekEntryResult!236)

(assert (=> b!74748 (= e!48829 e!48830)))

(declare-fun b!74749 () Bool)

(assert (=> b!74749 (= e!48829 (Found!236 (index!3077 lt!32879)))))

(declare-fun b!74750 () Bool)

(assert (=> b!74750 (= e!48830 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11152 lt!32879) #b00000000000000000000000000000001) (nextIndex!0 (index!3077 lt!32879) (x!11152 lt!32879) (mask!6180 newMap!16)) (index!3077 lt!32879) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!74747 () Bool)

(assert (=> b!74747 (= e!48830 (MissingVacant!236 (index!3077 lt!32879)))))

(declare-fun lt!33657 () SeekEntryResult!236)

(declare-fun d!17765 () Bool)

(assert (=> d!17765 (and (or ((_ is Undefined!236) lt!33657) (not ((_ is Found!236) lt!33657)) (and (bvsge (index!3076 lt!33657) #b00000000000000000000000000000000) (bvslt (index!3076 lt!33657) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!33657) ((_ is Found!236) lt!33657) (not ((_ is MissingVacant!236) lt!33657)) (not (= (index!3078 lt!33657) (index!3077 lt!32879))) (and (bvsge (index!3078 lt!33657) #b00000000000000000000000000000000) (bvslt (index!3078 lt!33657) (size!2097 (_keys!3865 newMap!16))))) (or ((_ is Undefined!236) lt!33657) (ite ((_ is Found!236) lt!33657) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!33657)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (and ((_ is MissingVacant!236) lt!33657) (= (index!3078 lt!33657) (index!3077 lt!32879)) (= (select (arr!1859 (_keys!3865 newMap!16)) (index!3078 lt!33657)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!17765 (= lt!33657 e!48828)))

(declare-fun c!11301 () Bool)

(assert (=> d!17765 (= c!11301 (bvsge (x!11152 lt!32879) #b01111111111111111111111111111110))))

(assert (=> d!17765 (= lt!33656 (select (arr!1859 (_keys!3865 newMap!16)) (index!3077 lt!32879)))))

(assert (=> d!17765 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17765 (= (seekKeyOrZeroReturnVacant!0 (x!11152 lt!32879) (index!3077 lt!32879) (index!3077 lt!32879) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!33657)))

(assert (= (and d!17765 c!11301) b!74746))

(assert (= (and d!17765 (not c!11301)) b!74745))

(assert (= (and b!74745 c!11302) b!74749))

(assert (= (and b!74745 (not c!11302)) b!74748))

(assert (= (and b!74748 c!11303) b!74747))

(assert (= (and b!74748 (not c!11303)) b!74750))

(declare-fun m!74245 () Bool)

(assert (=> b!74750 m!74245))

(assert (=> b!74750 m!74245))

(assert (=> b!74750 m!71227))

(declare-fun m!74247 () Bool)

(assert (=> b!74750 m!74247))

(declare-fun m!74249 () Bool)

(assert (=> d!17765 m!74249))

(declare-fun m!74251 () Bool)

(assert (=> d!17765 m!74251))

(assert (=> d!17765 m!71783))

(assert (=> d!17765 m!71705))

(assert (=> b!73406 d!17765))

(declare-fun d!17767 () Bool)

(declare-fun e!48832 () Bool)

(assert (=> d!17767 e!48832))

(declare-fun res!39484 () Bool)

(assert (=> d!17767 (=> res!39484 e!48832)))

(declare-fun lt!33661 () Bool)

(assert (=> d!17767 (= res!39484 (not lt!33661))))

(declare-fun lt!33660 () Bool)

(assert (=> d!17767 (= lt!33661 lt!33660)))

(declare-fun lt!33659 () Unit!2078)

(declare-fun e!48831 () Unit!2078)

(assert (=> d!17767 (= lt!33659 e!48831)))

(declare-fun c!11304 () Bool)

(assert (=> d!17767 (= c!11304 lt!33660)))

(assert (=> d!17767 (= lt!33660 (containsKey!137 (toList!725 lt!32914) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17767 (= (contains!723 lt!32914 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33661)))

(declare-fun b!74751 () Bool)

(declare-fun lt!33658 () Unit!2078)

(assert (=> b!74751 (= e!48831 lt!33658)))

(assert (=> b!74751 (= lt!33658 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!32914) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74751 (isDefined!86 (getValueByKey!133 (toList!725 lt!32914) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74752 () Bool)

(declare-fun Unit!2148 () Unit!2078)

(assert (=> b!74752 (= e!48831 Unit!2148)))

(declare-fun b!74753 () Bool)

(assert (=> b!74753 (= e!48832 (isDefined!86 (getValueByKey!133 (toList!725 lt!32914) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17767 c!11304) b!74751))

(assert (= (and d!17767 (not c!11304)) b!74752))

(assert (= (and d!17767 (not res!39484)) b!74753))

(declare-fun m!74253 () Bool)

(assert (=> d!17767 m!74253))

(declare-fun m!74255 () Bool)

(assert (=> b!74751 m!74255))

(assert (=> b!74751 m!72757))

(assert (=> b!74751 m!72757))

(declare-fun m!74257 () Bool)

(assert (=> b!74751 m!74257))

(assert (=> b!74753 m!72757))

(assert (=> b!74753 m!72757))

(assert (=> b!74753 m!74257))

(assert (=> bm!6469 d!17767))

(declare-fun d!17769 () Bool)

(declare-fun res!39485 () Bool)

(declare-fun e!48833 () Bool)

(assert (=> d!17769 (=> res!39485 e!48833)))

(assert (=> d!17769 (= res!39485 (and ((_ is Cons!1474) (toList!725 lt!32594)) (= (_1!1072 (h!2061 (toList!725 lt!32594))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17769 (= (containsKey!137 (toList!725 lt!32594) #b1000000000000000000000000000000000000000000000000000000000000000) e!48833)))

(declare-fun b!74754 () Bool)

(declare-fun e!48834 () Bool)

(assert (=> b!74754 (= e!48833 e!48834)))

(declare-fun res!39486 () Bool)

(assert (=> b!74754 (=> (not res!39486) (not e!48834))))

(assert (=> b!74754 (= res!39486 (and (or (not ((_ is Cons!1474) (toList!725 lt!32594))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32594))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1474) (toList!725 lt!32594)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32594))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74755 () Bool)

(assert (=> b!74755 (= e!48834 (containsKey!137 (t!5035 (toList!725 lt!32594)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17769 (not res!39485)) b!74754))

(assert (= (and b!74754 res!39486) b!74755))

(declare-fun m!74259 () Bool)

(assert (=> b!74755 m!74259))

(assert (=> d!16857 d!17769))

(assert (=> d!16969 d!17069))

(declare-fun d!17771 () Bool)

(declare-fun e!48835 () Bool)

(assert (=> d!17771 e!48835))

(declare-fun res!39487 () Bool)

(assert (=> d!17771 (=> (not res!39487) (not e!48835))))

(declare-fun lt!33664 () ListLongMap!1419)

(assert (=> d!17771 (= res!39487 (contains!723 lt!33664 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(declare-fun lt!33663 () List!1478)

(assert (=> d!17771 (= lt!33664 (ListLongMap!1420 lt!33663))))

(declare-fun lt!33665 () Unit!2078)

(declare-fun lt!33662 () Unit!2078)

(assert (=> d!17771 (= lt!33665 lt!33662)))

(assert (=> d!17771 (= (getValueByKey!133 lt!33663 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17771 (= lt!33662 (lemmaContainsTupThenGetReturnValue!50 lt!33663 (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17771 (= lt!33663 (insertStrictlySorted!53 (toList!725 call!6475) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))))))

(assert (=> d!17771 (= (+!94 call!6475 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))) lt!33664)))

(declare-fun b!74756 () Bool)

(declare-fun res!39488 () Bool)

(assert (=> b!74756 (=> (not res!39488) (not e!48835))))

(assert (=> b!74756 (= res!39488 (= (getValueByKey!133 (toList!725 lt!33664) (_1!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16))))) (Some!138 (_2!1072 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))))

(declare-fun b!74757 () Bool)

(assert (=> b!74757 (= e!48835 (contains!724 (toList!725 lt!33664) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10872 (ite c!10871 (minValue!2115 newMap!16) lt!32533) (minValue!2115 newMap!16)))))))

(assert (= (and d!17771 res!39487) b!74756))

(assert (= (and b!74756 res!39488) b!74757))

(declare-fun m!74261 () Bool)

(assert (=> d!17771 m!74261))

(declare-fun m!74263 () Bool)

(assert (=> d!17771 m!74263))

(declare-fun m!74265 () Bool)

(assert (=> d!17771 m!74265))

(declare-fun m!74267 () Bool)

(assert (=> d!17771 m!74267))

(declare-fun m!74269 () Bool)

(assert (=> b!74756 m!74269))

(declare-fun m!74271 () Bool)

(assert (=> b!74757 m!74271))

(assert (=> b!73441 d!17771))

(assert (=> b!73570 d!17061))

(declare-fun d!17773 () Bool)

(declare-fun e!48838 () Bool)

(assert (=> d!17773 e!48838))

(declare-fun res!39491 () Bool)

(assert (=> d!17773 (=> (not res!39491) (not e!48838))))

(assert (=> d!17773 (= res!39491 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 (_keys!3865 newMap!16)))))))

(declare-fun lt!33668 () Unit!2078)

(declare-fun choose!41 (array!3895 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1479) Unit!2078)

(assert (=> d!17773 (= lt!33668 (choose!41 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) lt!33047 lt!33049))))

(assert (=> d!17773 (bvslt (size!2097 (_keys!3865 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!17773 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3865 newMap!16) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) lt!33047 lt!33049) lt!33668)))

(declare-fun b!74760 () Bool)

(assert (=> b!74760 (= e!48838 (arrayNoDuplicates!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) lt!33047 lt!33049))))

(assert (= (and d!17773 res!39491) b!74760))

(assert (=> d!17773 m!71227))

(declare-fun m!74273 () Bool)

(assert (=> d!17773 m!74273))

(assert (=> b!74760 m!72045))

(assert (=> b!74760 m!72039))

(assert (=> d!16959 d!17773))

(declare-fun d!17775 () Bool)

(declare-fun e!48839 () Bool)

(assert (=> d!17775 e!48839))

(declare-fun res!39492 () Bool)

(assert (=> d!17775 (=> (not res!39492) (not e!48839))))

(assert (=> d!17775 (= res!39492 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 lt!33050))))))

(declare-fun lt!33669 () Unit!2078)

(assert (=> d!17775 (= lt!33669 (choose!420 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (defaultEntry!2213 newMap!16)))))

(assert (=> d!17775 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17775 (= (lemmaValidKeyInArrayIsInListMap!85 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (defaultEntry!2213 newMap!16)) lt!33669)))

(declare-fun b!74761 () Bool)

(assert (=> b!74761 (= e!48839 (contains!723 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 lt!33050) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(assert (= (and d!17775 res!39492) b!74761))

(declare-fun m!74275 () Bool)

(assert (=> d!17775 m!74275))

(assert (=> d!17775 m!71705))

(assert (=> b!74761 m!72049))

(declare-fun m!74277 () Bool)

(assert (=> b!74761 m!74277))

(assert (=> b!74761 m!72049))

(assert (=> b!74761 m!74277))

(declare-fun m!74279 () Bool)

(assert (=> b!74761 m!74279))

(assert (=> d!16959 d!17775))

(assert (=> d!16959 d!16839))

(assert (=> d!16959 d!16953))

(declare-fun b!74771 () Bool)

(declare-fun res!39504 () Bool)

(declare-fun e!48844 () Bool)

(assert (=> b!74771 (=> (not res!39504) (not e!48844))))

(assert (=> b!74771 (= res!39504 (validKeyInArray!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(declare-fun b!74773 () Bool)

(declare-fun e!48845 () Bool)

(assert (=> b!74773 (= e!48845 (= (arrayCountValidKeys!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!74772 () Bool)

(assert (=> b!74772 (= e!48844 (bvslt (size!2097 (_keys!3865 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!17777 () Bool)

(assert (=> d!17777 e!48845))

(declare-fun res!39502 () Bool)

(assert (=> d!17777 (=> (not res!39502) (not e!48845))))

(assert (=> d!17777 (= res!39502 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 (_keys!3865 newMap!16)))))))

(declare-fun lt!33672 () Unit!2078)

(declare-fun choose!1 (array!3895 (_ BitVec 32) (_ BitVec 64)) Unit!2078)

(assert (=> d!17777 (= lt!33672 (choose!1 (_keys!3865 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17777 e!48844))

(declare-fun res!39503 () Bool)

(assert (=> d!17777 (=> (not res!39503) (not e!48844))))

(assert (=> d!17777 (= res!39503 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 (_keys!3865 newMap!16)))))))

(assert (=> d!17777 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3865 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) lt!33672)))

(declare-fun b!74770 () Bool)

(declare-fun res!39501 () Bool)

(assert (=> b!74770 (=> (not res!39501) (not e!48844))))

(assert (=> b!74770 (= res!39501 (not (validKeyInArray!0 (select (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))))

(assert (= (and d!17777 res!39503) b!74770))

(assert (= (and b!74770 res!39501) b!74771))

(assert (= (and b!74771 res!39504) b!74772))

(assert (= (and d!17777 res!39502) b!74773))

(assert (=> b!74771 m!71227))

(assert (=> b!74771 m!71485))

(assert (=> b!74773 m!72045))

(assert (=> b!74773 m!72031))

(assert (=> b!74773 m!71465))

(assert (=> d!17777 m!71227))

(declare-fun m!74281 () Bool)

(assert (=> d!17777 m!74281))

(declare-fun m!74283 () Bool)

(assert (=> b!74770 m!74283))

(assert (=> b!74770 m!74283))

(declare-fun m!74285 () Bool)

(assert (=> b!74770 m!74285))

(assert (=> d!16959 d!17777))

(declare-fun d!17779 () Bool)

(assert (=> d!17779 (arrayContainsKey!0 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!33673 () Unit!2078)

(assert (=> d!17779 (= lt!33673 (choose!13 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))

(assert (=> d!17779 (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000)))

(assert (=> d!17779 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))) lt!33673)))

(declare-fun bs!3227 () Bool)

(assert (= bs!3227 d!17779))

(assert (=> bs!3227 m!71227))

(assert (=> bs!3227 m!72019))

(assert (=> bs!3227 m!71227))

(declare-fun m!74287 () Bool)

(assert (=> bs!3227 m!74287))

(assert (=> d!16959 d!17779))

(declare-fun b!74774 () Bool)

(declare-fun e!48846 () (_ BitVec 32))

(declare-fun call!6623 () (_ BitVec 32))

(assert (=> b!74774 (= e!48846 call!6623)))

(declare-fun b!74775 () Bool)

(declare-fun e!48847 () (_ BitVec 32))

(assert (=> b!74775 (= e!48847 #b00000000000000000000000000000000)))

(declare-fun bm!6620 () Bool)

(assert (=> bm!6620 (= call!6623 (arrayCountValidKeys!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 (_keys!3865 newMap!16))))))

(declare-fun d!17781 () Bool)

(declare-fun lt!33674 () (_ BitVec 32))

(assert (=> d!17781 (and (bvsge lt!33674 #b00000000000000000000000000000000) (bvsle lt!33674 (bvsub (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!17781 (= lt!33674 e!48847)))

(declare-fun c!11305 () Bool)

(assert (=> d!17781 (= c!11305 (bvsge #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))))))

(assert (=> d!17781 (and (bvsle #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2097 (_keys!3865 newMap!16)) (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(assert (=> d!17781 (= (arrayCountValidKeys!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) #b00000000000000000000000000000000 (size!2097 (_keys!3865 newMap!16))) lt!33674)))

(declare-fun b!74776 () Bool)

(assert (=> b!74776 (= e!48847 e!48846)))

(declare-fun c!11306 () Bool)

(assert (=> b!74776 (= c!11306 (validKeyInArray!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74777 () Bool)

(assert (=> b!74777 (= e!48846 (bvadd #b00000000000000000000000000000001 call!6623))))

(assert (= (and d!17781 c!11305) b!74775))

(assert (= (and d!17781 (not c!11305)) b!74776))

(assert (= (and b!74776 c!11306) b!74777))

(assert (= (and b!74776 (not c!11306)) b!74774))

(assert (= (or b!74777 b!74774) bm!6620))

(declare-fun m!74289 () Bool)

(assert (=> bm!6620 m!74289))

(declare-fun m!74291 () Bool)

(assert (=> b!74776 m!74291))

(assert (=> b!74776 m!74291))

(declare-fun m!74293 () Bool)

(assert (=> b!74776 m!74293))

(assert (=> d!16959 d!17781))

(declare-fun b!74778 () Bool)

(declare-fun e!48851 () Bool)

(declare-fun e!48853 () Bool)

(assert (=> b!74778 (= e!48851 e!48853)))

(declare-fun res!39507 () Bool)

(declare-fun call!6629 () Bool)

(assert (=> b!74778 (= res!39507 call!6629)))

(assert (=> b!74778 (=> (not res!39507) (not e!48853))))

(declare-fun b!74779 () Bool)

(declare-fun e!48854 () Bool)

(assert (=> b!74779 (= e!48854 (validKeyInArray!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74780 () Bool)

(declare-fun c!11312 () Bool)

(assert (=> b!74780 (= c!11312 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48858 () ListLongMap!1419)

(declare-fun e!48860 () ListLongMap!1419)

(assert (=> b!74780 (= e!48858 e!48860)))

(declare-fun bm!6621 () Bool)

(declare-fun call!6624 () ListLongMap!1419)

(declare-fun call!6627 () ListLongMap!1419)

(assert (=> bm!6621 (= call!6624 call!6627)))

(declare-fun b!74781 () Bool)

(declare-fun res!39508 () Bool)

(declare-fun e!48848 () Bool)

(assert (=> b!74781 (=> (not res!39508) (not e!48848))))

(declare-fun e!48849 () Bool)

(assert (=> b!74781 (= res!39508 e!48849)))

(declare-fun res!39513 () Bool)

(assert (=> b!74781 (=> res!39513 e!48849)))

(assert (=> b!74781 (= res!39513 (not e!48854))))

(declare-fun res!39511 () Bool)

(assert (=> b!74781 (=> (not res!39511) (not e!48854))))

(assert (=> b!74781 (= res!39511 (bvslt #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun bm!6622 () Bool)

(declare-fun call!6625 () Bool)

(declare-fun lt!33685 () ListLongMap!1419)

(assert (=> bm!6622 (= call!6625 (contains!723 lt!33685 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74782 () Bool)

(declare-fun res!39505 () Bool)

(assert (=> b!74782 (=> (not res!39505) (not e!48848))))

(assert (=> b!74782 (= res!39505 e!48851)))

(declare-fun c!11310 () Bool)

(assert (=> b!74782 (= c!11310 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6623 () Bool)

(declare-fun call!6630 () ListLongMap!1419)

(declare-fun call!6628 () ListLongMap!1419)

(assert (=> bm!6623 (= call!6630 call!6628)))

(declare-fun b!74783 () Bool)

(declare-fun e!48850 () Unit!2078)

(declare-fun Unit!2149 () Unit!2078)

(assert (=> b!74783 (= e!48850 Unit!2149)))

(declare-fun b!74784 () Bool)

(declare-fun e!48855 () Bool)

(assert (=> b!74784 (= e!48848 e!48855)))

(declare-fun c!11308 () Bool)

(assert (=> b!74784 (= c!11308 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74785 () Bool)

(assert (=> b!74785 (= e!48860 call!6630)))

(declare-fun call!6626 () ListLongMap!1419)

(declare-fun bm!6624 () Bool)

(assert (=> bm!6624 (= call!6626 (getCurrentListMapNoExtraKeys!59 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74786 () Bool)

(assert (=> b!74786 (= e!48855 (not call!6625))))

(declare-fun b!74787 () Bool)

(declare-fun e!48852 () ListLongMap!1419)

(assert (=> b!74787 (= e!48852 (+!94 call!6628 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!74788 () Bool)

(declare-fun lt!33681 () Unit!2078)

(assert (=> b!74788 (= e!48850 lt!33681)))

(declare-fun lt!33675 () ListLongMap!1419)

(assert (=> b!74788 (= lt!33675 (getCurrentListMapNoExtraKeys!59 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33694 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33694 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33677 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33677 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33690 () Unit!2078)

(assert (=> b!74788 (= lt!33690 (addStillContains!51 lt!33675 lt!33694 (zeroValue!2115 newMap!16) lt!33677))))

(assert (=> b!74788 (contains!723 (+!94 lt!33675 (tuple2!2123 lt!33694 (zeroValue!2115 newMap!16))) lt!33677)))

(declare-fun lt!33680 () Unit!2078)

(assert (=> b!74788 (= lt!33680 lt!33690)))

(declare-fun lt!33678 () ListLongMap!1419)

(assert (=> b!74788 (= lt!33678 (getCurrentListMapNoExtraKeys!59 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33683 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33683 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33682 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33682 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33676 () Unit!2078)

(assert (=> b!74788 (= lt!33676 (addApplyDifferent!51 lt!33678 lt!33683 (minValue!2115 newMap!16) lt!33682))))

(assert (=> b!74788 (= (apply!75 (+!94 lt!33678 (tuple2!2123 lt!33683 (minValue!2115 newMap!16))) lt!33682) (apply!75 lt!33678 lt!33682))))

(declare-fun lt!33686 () Unit!2078)

(assert (=> b!74788 (= lt!33686 lt!33676)))

(declare-fun lt!33689 () ListLongMap!1419)

(assert (=> b!74788 (= lt!33689 (getCurrentListMapNoExtraKeys!59 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33687 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33687 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33688 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33688 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33695 () Unit!2078)

(assert (=> b!74788 (= lt!33695 (addApplyDifferent!51 lt!33689 lt!33687 (zeroValue!2115 newMap!16) lt!33688))))

(assert (=> b!74788 (= (apply!75 (+!94 lt!33689 (tuple2!2123 lt!33687 (zeroValue!2115 newMap!16))) lt!33688) (apply!75 lt!33689 lt!33688))))

(declare-fun lt!33684 () Unit!2078)

(assert (=> b!74788 (= lt!33684 lt!33695)))

(declare-fun lt!33692 () ListLongMap!1419)

(assert (=> b!74788 (= lt!33692 (getCurrentListMapNoExtraKeys!59 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33693 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33693 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33691 () (_ BitVec 64))

(assert (=> b!74788 (= lt!33691 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!74788 (= lt!33681 (addApplyDifferent!51 lt!33692 lt!33693 (minValue!2115 newMap!16) lt!33691))))

(assert (=> b!74788 (= (apply!75 (+!94 lt!33692 (tuple2!2123 lt!33693 (minValue!2115 newMap!16))) lt!33691) (apply!75 lt!33692 lt!33691))))

(declare-fun b!74789 () Bool)

(declare-fun e!48856 () Bool)

(assert (=> b!74789 (= e!48856 (= (apply!75 lt!33685 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74790 () Bool)

(assert (=> b!74790 (= e!48853 (= (apply!75 lt!33685 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74791 () Bool)

(assert (=> b!74791 (= e!48860 call!6624)))

(declare-fun bm!6625 () Bool)

(declare-fun c!11311 () Bool)

(declare-fun c!11307 () Bool)

(assert (=> bm!6625 (= call!6628 (+!94 (ite c!11307 call!6626 (ite c!11311 call!6627 call!6624)) (ite (or c!11307 c!11311) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74792 () Bool)

(assert (=> b!74792 (= e!48852 e!48858)))

(assert (=> b!74792 (= c!11311 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74793 () Bool)

(declare-fun e!48859 () Bool)

(assert (=> b!74793 (= e!48859 (= (apply!75 lt!33685 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74793 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))))))))

(assert (=> b!74793 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun b!74794 () Bool)

(assert (=> b!74794 (= e!48855 e!48856)))

(declare-fun res!39512 () Bool)

(assert (=> b!74794 (= res!39512 call!6625)))

(assert (=> b!74794 (=> (not res!39512) (not e!48856))))

(declare-fun d!17783 () Bool)

(assert (=> d!17783 e!48848))

(declare-fun res!39509 () Bool)

(assert (=> d!17783 (=> (not res!39509) (not e!48848))))

(assert (=> d!17783 (= res!39509 (or (bvsge #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))))

(declare-fun lt!33696 () ListLongMap!1419)

(assert (=> d!17783 (= lt!33685 lt!33696)))

(declare-fun lt!33679 () Unit!2078)

(assert (=> d!17783 (= lt!33679 e!48850)))

(declare-fun c!11309 () Bool)

(declare-fun e!48857 () Bool)

(assert (=> d!17783 (= c!11309 e!48857)))

(declare-fun res!39506 () Bool)

(assert (=> d!17783 (=> (not res!39506) (not e!48857))))

(assert (=> d!17783 (= res!39506 (bvslt #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(assert (=> d!17783 (= lt!33696 e!48852)))

(assert (=> d!17783 (= c!11307 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17783 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17783 (= (getCurrentListMap!422 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33685)))

(declare-fun b!74795 () Bool)

(assert (=> b!74795 (= e!48851 (not call!6629))))

(declare-fun b!74796 () Bool)

(assert (=> b!74796 (= e!48849 e!48859)))

(declare-fun res!39510 () Bool)

(assert (=> b!74796 (=> (not res!39510) (not e!48859))))

(assert (=> b!74796 (= res!39510 (contains!723 lt!33685 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!74796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(declare-fun bm!6626 () Bool)

(assert (=> bm!6626 (= call!6629 (contains!723 lt!33685 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6627 () Bool)

(assert (=> bm!6627 (= call!6627 call!6626)))

(declare-fun b!74797 () Bool)

(assert (=> b!74797 (= e!48858 call!6630)))

(declare-fun b!74798 () Bool)

(assert (=> b!74798 (= e!48857 (validKeyInArray!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!17783 c!11307) b!74787))

(assert (= (and d!17783 (not c!11307)) b!74792))

(assert (= (and b!74792 c!11311) b!74797))

(assert (= (and b!74792 (not c!11311)) b!74780))

(assert (= (and b!74780 c!11312) b!74785))

(assert (= (and b!74780 (not c!11312)) b!74791))

(assert (= (or b!74785 b!74791) bm!6621))

(assert (= (or b!74797 bm!6621) bm!6627))

(assert (= (or b!74797 b!74785) bm!6623))

(assert (= (or b!74787 bm!6627) bm!6624))

(assert (= (or b!74787 bm!6623) bm!6625))

(assert (= (and d!17783 res!39506) b!74798))

(assert (= (and d!17783 c!11309) b!74788))

(assert (= (and d!17783 (not c!11309)) b!74783))

(assert (= (and d!17783 res!39509) b!74781))

(assert (= (and b!74781 res!39511) b!74779))

(assert (= (and b!74781 (not res!39513)) b!74796))

(assert (= (and b!74796 res!39510) b!74793))

(assert (= (and b!74781 res!39508) b!74782))

(assert (= (and b!74782 c!11310) b!74778))

(assert (= (and b!74782 (not c!11310)) b!74795))

(assert (= (and b!74778 res!39507) b!74790))

(assert (= (or b!74778 b!74795) bm!6626))

(assert (= (and b!74782 res!39505) b!74784))

(assert (= (and b!74784 c!11308) b!74794))

(assert (= (and b!74784 (not c!11308)) b!74786))

(assert (= (and b!74794 res!39512) b!74789))

(assert (= (or b!74794 b!74786) bm!6622))

(declare-fun b_lambda!3339 () Bool)

(assert (=> (not b_lambda!3339) (not b!74793)))

(assert (=> b!74793 t!5042))

(declare-fun b_and!4575 () Bool)

(assert (= b_and!4571 (and (=> t!5042 result!2693) b_and!4575)))

(assert (=> b!74793 t!5044))

(declare-fun b_and!4577 () Bool)

(assert (= b_and!4573 (and (=> t!5044 result!2695) b_and!4577)))

(assert (=> b!74793 m!74291))

(declare-fun m!74295 () Bool)

(assert (=> b!74793 m!74295))

(assert (=> b!74793 m!71717))

(declare-fun m!74297 () Bool)

(assert (=> b!74793 m!74297))

(assert (=> b!74793 m!74291))

(declare-fun m!74299 () Bool)

(assert (=> b!74793 m!74299))

(assert (=> b!74793 m!71717))

(assert (=> b!74793 m!74295))

(declare-fun m!74301 () Bool)

(assert (=> bm!6624 m!74301))

(assert (=> d!17783 m!71705))

(declare-fun m!74303 () Bool)

(assert (=> bm!6622 m!74303))

(declare-fun m!74305 () Bool)

(assert (=> bm!6626 m!74305))

(declare-fun m!74307 () Bool)

(assert (=> bm!6625 m!74307))

(declare-fun m!74309 () Bool)

(assert (=> b!74790 m!74309))

(assert (=> b!74779 m!74291))

(assert (=> b!74779 m!74291))

(assert (=> b!74779 m!74293))

(assert (=> b!74798 m!74291))

(assert (=> b!74798 m!74291))

(assert (=> b!74798 m!74293))

(declare-fun m!74311 () Bool)

(assert (=> b!74787 m!74311))

(declare-fun m!74313 () Bool)

(assert (=> b!74789 m!74313))

(declare-fun m!74315 () Bool)

(assert (=> b!74788 m!74315))

(declare-fun m!74317 () Bool)

(assert (=> b!74788 m!74317))

(assert (=> b!74788 m!74301))

(declare-fun m!74319 () Bool)

(assert (=> b!74788 m!74319))

(assert (=> b!74788 m!74291))

(declare-fun m!74321 () Bool)

(assert (=> b!74788 m!74321))

(declare-fun m!74323 () Bool)

(assert (=> b!74788 m!74323))

(declare-fun m!74325 () Bool)

(assert (=> b!74788 m!74325))

(declare-fun m!74327 () Bool)

(assert (=> b!74788 m!74327))

(declare-fun m!74329 () Bool)

(assert (=> b!74788 m!74329))

(declare-fun m!74331 () Bool)

(assert (=> b!74788 m!74331))

(declare-fun m!74333 () Bool)

(assert (=> b!74788 m!74333))

(declare-fun m!74335 () Bool)

(assert (=> b!74788 m!74335))

(assert (=> b!74788 m!74333))

(declare-fun m!74337 () Bool)

(assert (=> b!74788 m!74337))

(assert (=> b!74788 m!74315))

(declare-fun m!74339 () Bool)

(assert (=> b!74788 m!74339))

(assert (=> b!74788 m!74327))

(assert (=> b!74788 m!74317))

(declare-fun m!74341 () Bool)

(assert (=> b!74788 m!74341))

(declare-fun m!74343 () Bool)

(assert (=> b!74788 m!74343))

(assert (=> b!74796 m!74291))

(assert (=> b!74796 m!74291))

(declare-fun m!74345 () Bool)

(assert (=> b!74796 m!74345))

(assert (=> d!16959 d!17783))

(declare-fun d!17785 () Bool)

(declare-fun e!48863 () Bool)

(assert (=> d!17785 e!48863))

(declare-fun res!39516 () Bool)

(assert (=> d!17785 (=> (not res!39516) (not e!48863))))

(assert (=> d!17785 (= res!39516 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 (_keys!3865 newMap!16))) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2098 (_values!2196 newMap!16)))))))

(declare-fun lt!33699 () Unit!2078)

(declare-fun choose!424 (array!3895 array!3897 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2078)

(assert (=> d!17785 (= lt!33699 (choose!424 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17785 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17785 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533 (defaultEntry!2213 newMap!16)) lt!33699)))

(declare-fun b!74801 () Bool)

(assert (=> b!74801 (= e!48863 (= (+!94 (getCurrentListMap!422 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2123 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) lt!32533)) (getCurrentListMap!422 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (array!3898 (store (arr!1860 (_values!2196 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (ValueCellFull!894 lt!32533)) (size!2098 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))))))

(assert (= (and d!17785 res!39516) b!74801))

(assert (=> d!17785 m!71227))

(declare-fun m!74347 () Bool)

(assert (=> d!17785 m!74347))

(assert (=> d!17785 m!71705))

(assert (=> b!74801 m!71415))

(assert (=> b!74801 m!72021))

(assert (=> b!74801 m!72035))

(assert (=> b!74801 m!72045))

(assert (=> b!74801 m!71415))

(assert (=> b!74801 m!72023))

(assert (=> d!16959 d!17785))

(declare-fun d!17787 () Bool)

(declare-fun e!48866 () Bool)

(assert (=> d!17787 e!48866))

(declare-fun res!39519 () Bool)

(assert (=> d!17787 (=> (not res!39519) (not e!48866))))

(assert (=> d!17787 (= res!39519 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 (_keys!3865 newMap!16)))))))

(declare-fun lt!33702 () Unit!2078)

(declare-fun choose!102 ((_ BitVec 64) array!3895 (_ BitVec 32) (_ BitVec 32)) Unit!2078)

(assert (=> d!17787 (= lt!33702 (choose!102 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (mask!6180 newMap!16)))))

(assert (=> d!17787 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17787 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (_keys!3865 newMap!16) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (mask!6180 newMap!16)) lt!33702)))

(declare-fun b!74804 () Bool)

(assert (=> b!74804 (= e!48866 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (mask!6180 newMap!16)))))

(assert (= (and d!17787 res!39519) b!74804))

(assert (=> d!17787 m!71227))

(declare-fun m!74349 () Bool)

(assert (=> d!17787 m!74349))

(assert (=> d!17787 m!71705))

(assert (=> b!74804 m!72045))

(assert (=> b!74804 m!72053))

(assert (=> d!16959 d!17787))

(assert (=> d!16959 d!17593))

(declare-fun e!48868 () Bool)

(declare-fun b!74805 () Bool)

(assert (=> b!74805 (= e!48868 (contains!725 lt!33049 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) lt!33047)))))

(declare-fun b!74806 () Bool)

(declare-fun e!48867 () Bool)

(declare-fun call!6631 () Bool)

(assert (=> b!74806 (= e!48867 call!6631)))

(declare-fun b!74807 () Bool)

(declare-fun e!48869 () Bool)

(declare-fun e!48870 () Bool)

(assert (=> b!74807 (= e!48869 e!48870)))

(declare-fun res!39522 () Bool)

(assert (=> b!74807 (=> (not res!39522) (not e!48870))))

(assert (=> b!74807 (= res!39522 (not e!48868))))

(declare-fun res!39521 () Bool)

(assert (=> b!74807 (=> (not res!39521) (not e!48868))))

(assert (=> b!74807 (= res!39521 (validKeyInArray!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) lt!33047)))))

(declare-fun b!74808 () Bool)

(assert (=> b!74808 (= e!48870 e!48867)))

(declare-fun c!11313 () Bool)

(assert (=> b!74808 (= c!11313 (validKeyInArray!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) lt!33047)))))

(declare-fun b!74809 () Bool)

(assert (=> b!74809 (= e!48867 call!6631)))

(declare-fun d!17789 () Bool)

(declare-fun res!39520 () Bool)

(assert (=> d!17789 (=> res!39520 e!48869)))

(assert (=> d!17789 (= res!39520 (bvsge lt!33047 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(assert (=> d!17789 (= (arrayNoDuplicates!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) lt!33047 lt!33049) e!48869)))

(declare-fun bm!6628 () Bool)

(assert (=> bm!6628 (= call!6631 (arrayNoDuplicates!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (bvadd lt!33047 #b00000000000000000000000000000001) (ite c!11313 (Cons!1475 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) lt!33047) lt!33049) lt!33049)))))

(assert (= (and d!17789 (not res!39520)) b!74807))

(assert (= (and b!74807 res!39521) b!74805))

(assert (= (and b!74807 res!39522) b!74808))

(assert (= (and b!74808 c!11313) b!74806))

(assert (= (and b!74808 (not c!11313)) b!74809))

(assert (= (or b!74806 b!74809) bm!6628))

(declare-fun m!74351 () Bool)

(assert (=> b!74805 m!74351))

(assert (=> b!74805 m!74351))

(declare-fun m!74353 () Bool)

(assert (=> b!74805 m!74353))

(assert (=> b!74807 m!74351))

(assert (=> b!74807 m!74351))

(declare-fun m!74355 () Bool)

(assert (=> b!74807 m!74355))

(assert (=> b!74808 m!74351))

(assert (=> b!74808 m!74351))

(assert (=> b!74808 m!74355))

(assert (=> bm!6628 m!74351))

(declare-fun m!74357 () Bool)

(assert (=> bm!6628 m!74357))

(assert (=> d!16959 d!17789))

(declare-fun d!17791 () Bool)

(declare-fun res!39523 () Bool)

(declare-fun e!48871 () Bool)

(assert (=> d!17791 (=> res!39523 e!48871)))

(assert (=> d!17791 (= res!39523 (= (select (arr!1859 lt!33024) #b00000000000000000000000000000000) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17791 (= (arrayContainsKey!0 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48871)))

(declare-fun b!74810 () Bool)

(declare-fun e!48872 () Bool)

(assert (=> b!74810 (= e!48871 e!48872)))

(declare-fun res!39524 () Bool)

(assert (=> b!74810 (=> (not res!39524) (not e!48872))))

(assert (=> b!74810 (= res!39524 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2097 lt!33024)))))

(declare-fun b!74811 () Bool)

(assert (=> b!74811 (= e!48872 (arrayContainsKey!0 lt!33024 (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17791 (not res!39523)) b!74810))

(assert (= (and b!74810 res!39524) b!74811))

(declare-fun m!74359 () Bool)

(assert (=> d!17791 m!74359))

(assert (=> b!74811 m!71227))

(declare-fun m!74361 () Bool)

(assert (=> b!74811 m!74361))

(assert (=> d!16959 d!17791))

(declare-fun d!17793 () Bool)

(assert (=> d!17793 (= (arrayCountValidKeys!0 lt!33034 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!33705 () Unit!2078)

(declare-fun choose!2 (array!3895 (_ BitVec 32)) Unit!2078)

(assert (=> d!17793 (= lt!33705 (choose!2 lt!33034 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))

(declare-fun e!48875 () Bool)

(assert (=> d!17793 e!48875))

(declare-fun res!39529 () Bool)

(assert (=> d!17793 (=> (not res!39529) (not e!48875))))

(assert (=> d!17793 (= res!39529 (and (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvslt (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (size!2097 lt!33034))))))

(assert (=> d!17793 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!33034 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))) lt!33705)))

(declare-fun b!74816 () Bool)

(declare-fun res!39530 () Bool)

(assert (=> b!74816 (=> (not res!39530) (not e!48875))))

(assert (=> b!74816 (= res!39530 (validKeyInArray!0 (select (arr!1859 lt!33034) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(declare-fun b!74817 () Bool)

(assert (=> b!74817 (= e!48875 (bvslt (size!2097 lt!33034) #b01111111111111111111111111111111))))

(assert (= (and d!17793 res!39529) b!74816))

(assert (= (and b!74816 res!39530) b!74817))

(assert (=> d!17793 m!72025))

(declare-fun m!74363 () Bool)

(assert (=> d!17793 m!74363))

(declare-fun m!74365 () Bool)

(assert (=> b!74816 m!74365))

(assert (=> b!74816 m!74365))

(declare-fun m!74367 () Bool)

(assert (=> b!74816 m!74367))

(assert (=> d!16959 d!17793))

(declare-fun d!17795 () Bool)

(declare-fun res!39532 () Bool)

(declare-fun e!48878 () Bool)

(assert (=> d!17795 (=> res!39532 e!48878)))

(assert (=> d!17795 (= res!39532 (bvsge #b00000000000000000000000000000000 (size!2097 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))))))))

(assert (=> d!17795 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (mask!6180 newMap!16)) e!48878)))

(declare-fun b!74818 () Bool)

(declare-fun e!48877 () Bool)

(assert (=> b!74818 (= e!48878 e!48877)))

(declare-fun c!11314 () Bool)

(assert (=> b!74818 (= c!11314 (validKeyInArray!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74819 () Bool)

(declare-fun e!48876 () Bool)

(declare-fun call!6632 () Bool)

(assert (=> b!74819 (= e!48876 call!6632)))

(declare-fun bm!6629 () Bool)

(assert (=> bm!6629 (= call!6632 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (mask!6180 newMap!16)))))

(declare-fun b!74820 () Bool)

(assert (=> b!74820 (= e!48877 call!6632)))

(declare-fun b!74821 () Bool)

(assert (=> b!74821 (= e!48877 e!48876)))

(declare-fun lt!33707 () (_ BitVec 64))

(assert (=> b!74821 (= lt!33707 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33706 () Unit!2078)

(assert (=> b!74821 (= lt!33706 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) lt!33707 #b00000000000000000000000000000000))))

(assert (=> b!74821 (arrayContainsKey!0 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) lt!33707 #b00000000000000000000000000000000)))

(declare-fun lt!33708 () Unit!2078)

(assert (=> b!74821 (= lt!33708 lt!33706)))

(declare-fun res!39531 () Bool)

(assert (=> b!74821 (= res!39531 (= (seekEntryOrOpen!0 (select (arr!1859 (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000) (array!3896 (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (size!2097 (_keys!3865 newMap!16))) (mask!6180 newMap!16)) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!74821 (=> (not res!39531) (not e!48876))))

(assert (= (and d!17795 (not res!39532)) b!74818))

(assert (= (and b!74818 c!11314) b!74821))

(assert (= (and b!74818 (not c!11314)) b!74820))

(assert (= (and b!74821 res!39531) b!74819))

(assert (= (or b!74819 b!74820) bm!6629))

(assert (=> b!74818 m!74291))

(assert (=> b!74818 m!74291))

(assert (=> b!74818 m!74293))

(declare-fun m!74369 () Bool)

(assert (=> bm!6629 m!74369))

(assert (=> b!74821 m!74291))

(declare-fun m!74371 () Bool)

(assert (=> b!74821 m!74371))

(declare-fun m!74373 () Bool)

(assert (=> b!74821 m!74373))

(assert (=> b!74821 m!74291))

(declare-fun m!74375 () Bool)

(assert (=> b!74821 m!74375))

(assert (=> d!16959 d!17795))

(declare-fun b!74822 () Bool)

(declare-fun e!48879 () (_ BitVec 32))

(declare-fun call!6633 () (_ BitVec 32))

(assert (=> b!74822 (= e!48879 call!6633)))

(declare-fun b!74823 () Bool)

(declare-fun e!48880 () (_ BitVec 32))

(assert (=> b!74823 (= e!48880 #b00000000000000000000000000000000)))

(declare-fun bm!6630 () Bool)

(assert (=> bm!6630 (= call!6633 (arrayCountValidKeys!0 lt!33034 (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001) (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001)))))

(declare-fun d!17797 () Bool)

(declare-fun lt!33709 () (_ BitVec 32))

(assert (=> d!17797 (and (bvsge lt!33709 #b00000000000000000000000000000000) (bvsle lt!33709 (bvsub (size!2097 lt!33034) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(assert (=> d!17797 (= lt!33709 e!48880)))

(declare-fun c!11315 () Bool)

(assert (=> d!17797 (= c!11315 (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001)))))

(assert (=> d!17797 (and (bvsle (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001)) (bvsge (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001) (size!2097 lt!33034)))))

(assert (=> d!17797 (= (arrayCountValidKeys!0 lt!33034 (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (bvadd (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) #b00000000000000000000000000000001)) lt!33709)))

(declare-fun b!74824 () Bool)

(assert (=> b!74824 (= e!48880 e!48879)))

(declare-fun c!11316 () Bool)

(assert (=> b!74824 (= c!11316 (validKeyInArray!0 (select (arr!1859 lt!33034) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(declare-fun b!74825 () Bool)

(assert (=> b!74825 (= e!48879 (bvadd #b00000000000000000000000000000001 call!6633))))

(assert (= (and d!17797 c!11315) b!74823))

(assert (= (and d!17797 (not c!11315)) b!74824))

(assert (= (and b!74824 c!11316) b!74825))

(assert (= (and b!74824 (not c!11316)) b!74822))

(assert (= (or b!74825 b!74822) bm!6630))

(declare-fun m!74377 () Bool)

(assert (=> bm!6630 m!74377))

(assert (=> b!74824 m!74365))

(assert (=> b!74824 m!74365))

(assert (=> b!74824 m!74367))

(assert (=> d!16959 d!17797))

(assert (=> d!16959 d!17409))

(assert (=> d!16959 d!16903))

(declare-fun b!74826 () Bool)

(declare-fun e!48884 () Bool)

(declare-fun e!48886 () Bool)

(assert (=> b!74826 (= e!48884 e!48886)))

(declare-fun res!39535 () Bool)

(declare-fun call!6639 () Bool)

(assert (=> b!74826 (= res!39535 call!6639)))

(assert (=> b!74826 (=> (not res!39535) (not e!48886))))

(declare-fun b!74827 () Bool)

(declare-fun e!48887 () Bool)

(assert (=> b!74827 (= e!48887 (validKeyInArray!0 (select (arr!1859 lt!33050) #b00000000000000000000000000000000)))))

(declare-fun b!74828 () Bool)

(declare-fun c!11322 () Bool)

(assert (=> b!74828 (= c!11322 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!48891 () ListLongMap!1419)

(declare-fun e!48893 () ListLongMap!1419)

(assert (=> b!74828 (= e!48891 e!48893)))

(declare-fun bm!6631 () Bool)

(declare-fun call!6634 () ListLongMap!1419)

(declare-fun call!6637 () ListLongMap!1419)

(assert (=> bm!6631 (= call!6634 call!6637)))

(declare-fun b!74829 () Bool)

(declare-fun res!39536 () Bool)

(declare-fun e!48881 () Bool)

(assert (=> b!74829 (=> (not res!39536) (not e!48881))))

(declare-fun e!48882 () Bool)

(assert (=> b!74829 (= res!39536 e!48882)))

(declare-fun res!39541 () Bool)

(assert (=> b!74829 (=> res!39541 e!48882)))

(assert (=> b!74829 (= res!39541 (not e!48887))))

(declare-fun res!39539 () Bool)

(assert (=> b!74829 (=> (not res!39539) (not e!48887))))

(assert (=> b!74829 (= res!39539 (bvslt #b00000000000000000000000000000000 (size!2097 lt!33050)))))

(declare-fun bm!6632 () Bool)

(declare-fun call!6635 () Bool)

(declare-fun lt!33720 () ListLongMap!1419)

(assert (=> bm!6632 (= call!6635 (contains!723 lt!33720 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74830 () Bool)

(declare-fun res!39533 () Bool)

(assert (=> b!74830 (=> (not res!39533) (not e!48881))))

(assert (=> b!74830 (= res!39533 e!48884)))

(declare-fun c!11320 () Bool)

(assert (=> b!74830 (= c!11320 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6633 () Bool)

(declare-fun call!6640 () ListLongMap!1419)

(declare-fun call!6638 () ListLongMap!1419)

(assert (=> bm!6633 (= call!6640 call!6638)))

(declare-fun b!74831 () Bool)

(declare-fun e!48883 () Unit!2078)

(declare-fun Unit!2150 () Unit!2078)

(assert (=> b!74831 (= e!48883 Unit!2150)))

(declare-fun b!74832 () Bool)

(declare-fun e!48888 () Bool)

(assert (=> b!74832 (= e!48881 e!48888)))

(declare-fun c!11318 () Bool)

(assert (=> b!74832 (= c!11318 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74833 () Bool)

(assert (=> b!74833 (= e!48893 call!6640)))

(declare-fun bm!6634 () Bool)

(declare-fun call!6636 () ListLongMap!1419)

(assert (=> bm!6634 (= call!6636 (getCurrentListMapNoExtraKeys!59 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74834 () Bool)

(assert (=> b!74834 (= e!48888 (not call!6635))))

(declare-fun b!74835 () Bool)

(declare-fun e!48885 () ListLongMap!1419)

(assert (=> b!74835 (= e!48885 (+!94 call!6638 (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(declare-fun b!74836 () Bool)

(declare-fun lt!33716 () Unit!2078)

(assert (=> b!74836 (= e!48883 lt!33716)))

(declare-fun lt!33710 () ListLongMap!1419)

(assert (=> b!74836 (= lt!33710 (getCurrentListMapNoExtraKeys!59 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33729 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33729 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33712 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33712 (select (arr!1859 lt!33050) #b00000000000000000000000000000000))))

(declare-fun lt!33725 () Unit!2078)

(assert (=> b!74836 (= lt!33725 (addStillContains!51 lt!33710 lt!33729 (zeroValue!2115 newMap!16) lt!33712))))

(assert (=> b!74836 (contains!723 (+!94 lt!33710 (tuple2!2123 lt!33729 (zeroValue!2115 newMap!16))) lt!33712)))

(declare-fun lt!33715 () Unit!2078)

(assert (=> b!74836 (= lt!33715 lt!33725)))

(declare-fun lt!33713 () ListLongMap!1419)

(assert (=> b!74836 (= lt!33713 (getCurrentListMapNoExtraKeys!59 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33718 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33718 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33717 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33717 (select (arr!1859 lt!33050) #b00000000000000000000000000000000))))

(declare-fun lt!33711 () Unit!2078)

(assert (=> b!74836 (= lt!33711 (addApplyDifferent!51 lt!33713 lt!33718 (minValue!2115 newMap!16) lt!33717))))

(assert (=> b!74836 (= (apply!75 (+!94 lt!33713 (tuple2!2123 lt!33718 (minValue!2115 newMap!16))) lt!33717) (apply!75 lt!33713 lt!33717))))

(declare-fun lt!33721 () Unit!2078)

(assert (=> b!74836 (= lt!33721 lt!33711)))

(declare-fun lt!33724 () ListLongMap!1419)

(assert (=> b!74836 (= lt!33724 (getCurrentListMapNoExtraKeys!59 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33722 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33722 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33723 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33723 (select (arr!1859 lt!33050) #b00000000000000000000000000000000))))

(declare-fun lt!33730 () Unit!2078)

(assert (=> b!74836 (= lt!33730 (addApplyDifferent!51 lt!33724 lt!33722 (zeroValue!2115 newMap!16) lt!33723))))

(assert (=> b!74836 (= (apply!75 (+!94 lt!33724 (tuple2!2123 lt!33722 (zeroValue!2115 newMap!16))) lt!33723) (apply!75 lt!33724 lt!33723))))

(declare-fun lt!33719 () Unit!2078)

(assert (=> b!74836 (= lt!33719 lt!33730)))

(declare-fun lt!33727 () ListLongMap!1419)

(assert (=> b!74836 (= lt!33727 (getCurrentListMapNoExtraKeys!59 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33728 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33728 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33726 () (_ BitVec 64))

(assert (=> b!74836 (= lt!33726 (select (arr!1859 lt!33050) #b00000000000000000000000000000000))))

(assert (=> b!74836 (= lt!33716 (addApplyDifferent!51 lt!33727 lt!33728 (minValue!2115 newMap!16) lt!33726))))

(assert (=> b!74836 (= (apply!75 (+!94 lt!33727 (tuple2!2123 lt!33728 (minValue!2115 newMap!16))) lt!33726) (apply!75 lt!33727 lt!33726))))

(declare-fun b!74837 () Bool)

(declare-fun e!48889 () Bool)

(assert (=> b!74837 (= e!48889 (= (apply!75 lt!33720 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74838 () Bool)

(assert (=> b!74838 (= e!48886 (= (apply!75 lt!33720 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74839 () Bool)

(assert (=> b!74839 (= e!48893 call!6634)))

(declare-fun bm!6635 () Bool)

(declare-fun c!11321 () Bool)

(declare-fun c!11317 () Bool)

(assert (=> bm!6635 (= call!6638 (+!94 (ite c!11317 call!6636 (ite c!11321 call!6637 call!6634)) (ite (or c!11317 c!11321) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74840 () Bool)

(assert (=> b!74840 (= e!48885 e!48891)))

(assert (=> b!74840 (= c!11321 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!48892 () Bool)

(declare-fun b!74841 () Bool)

(assert (=> b!74841 (= e!48892 (= (apply!75 lt!33720 (select (arr!1859 lt!33050) #b00000000000000000000000000000000)) (get!1139 (select (arr!1860 lt!33042) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74841 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2098 lt!33042)))))

(assert (=> b!74841 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 lt!33050)))))

(declare-fun b!74842 () Bool)

(assert (=> b!74842 (= e!48888 e!48889)))

(declare-fun res!39540 () Bool)

(assert (=> b!74842 (= res!39540 call!6635)))

(assert (=> b!74842 (=> (not res!39540) (not e!48889))))

(declare-fun d!17799 () Bool)

(assert (=> d!17799 e!48881))

(declare-fun res!39537 () Bool)

(assert (=> d!17799 (=> (not res!39537) (not e!48881))))

(assert (=> d!17799 (= res!39537 (or (bvsge #b00000000000000000000000000000000 (size!2097 lt!33050)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 lt!33050)))))))

(declare-fun lt!33731 () ListLongMap!1419)

(assert (=> d!17799 (= lt!33720 lt!33731)))

(declare-fun lt!33714 () Unit!2078)

(assert (=> d!17799 (= lt!33714 e!48883)))

(declare-fun c!11319 () Bool)

(declare-fun e!48890 () Bool)

(assert (=> d!17799 (= c!11319 e!48890)))

(declare-fun res!39534 () Bool)

(assert (=> d!17799 (=> (not res!39534) (not e!48890))))

(assert (=> d!17799 (= res!39534 (bvslt #b00000000000000000000000000000000 (size!2097 lt!33050)))))

(assert (=> d!17799 (= lt!33731 e!48885)))

(assert (=> d!17799 (= c!11317 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17799 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17799 (= (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33720)))

(declare-fun b!74843 () Bool)

(assert (=> b!74843 (= e!48884 (not call!6639))))

(declare-fun b!74844 () Bool)

(assert (=> b!74844 (= e!48882 e!48892)))

(declare-fun res!39538 () Bool)

(assert (=> b!74844 (=> (not res!39538) (not e!48892))))

(assert (=> b!74844 (= res!39538 (contains!723 lt!33720 (select (arr!1859 lt!33050) #b00000000000000000000000000000000)))))

(assert (=> b!74844 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 lt!33050)))))

(declare-fun bm!6636 () Bool)

(assert (=> bm!6636 (= call!6639 (contains!723 lt!33720 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6637 () Bool)

(assert (=> bm!6637 (= call!6637 call!6636)))

(declare-fun b!74845 () Bool)

(assert (=> b!74845 (= e!48891 call!6640)))

(declare-fun b!74846 () Bool)

(assert (=> b!74846 (= e!48890 (validKeyInArray!0 (select (arr!1859 lt!33050) #b00000000000000000000000000000000)))))

(assert (= (and d!17799 c!11317) b!74835))

(assert (= (and d!17799 (not c!11317)) b!74840))

(assert (= (and b!74840 c!11321) b!74845))

(assert (= (and b!74840 (not c!11321)) b!74828))

(assert (= (and b!74828 c!11322) b!74833))

(assert (= (and b!74828 (not c!11322)) b!74839))

(assert (= (or b!74833 b!74839) bm!6631))

(assert (= (or b!74845 bm!6631) bm!6637))

(assert (= (or b!74845 b!74833) bm!6633))

(assert (= (or b!74835 bm!6637) bm!6634))

(assert (= (or b!74835 bm!6633) bm!6635))

(assert (= (and d!17799 res!39534) b!74846))

(assert (= (and d!17799 c!11319) b!74836))

(assert (= (and d!17799 (not c!11319)) b!74831))

(assert (= (and d!17799 res!39537) b!74829))

(assert (= (and b!74829 res!39539) b!74827))

(assert (= (and b!74829 (not res!39541)) b!74844))

(assert (= (and b!74844 res!39538) b!74841))

(assert (= (and b!74829 res!39536) b!74830))

(assert (= (and b!74830 c!11320) b!74826))

(assert (= (and b!74830 (not c!11320)) b!74843))

(assert (= (and b!74826 res!39535) b!74838))

(assert (= (or b!74826 b!74843) bm!6636))

(assert (= (and b!74830 res!39533) b!74832))

(assert (= (and b!74832 c!11318) b!74842))

(assert (= (and b!74832 (not c!11318)) b!74834))

(assert (= (and b!74842 res!39540) b!74837))

(assert (= (or b!74842 b!74834) bm!6632))

(declare-fun b_lambda!3341 () Bool)

(assert (=> (not b_lambda!3341) (not b!74841)))

(assert (=> b!74841 t!5042))

(declare-fun b_and!4579 () Bool)

(assert (= b_and!4575 (and (=> t!5042 result!2693) b_and!4579)))

(assert (=> b!74841 t!5044))

(declare-fun b_and!4581 () Bool)

(assert (= b_and!4577 (and (=> t!5044 result!2695) b_and!4581)))

(declare-fun m!74379 () Bool)

(assert (=> b!74841 m!74379))

(declare-fun m!74381 () Bool)

(assert (=> b!74841 m!74381))

(assert (=> b!74841 m!71717))

(declare-fun m!74383 () Bool)

(assert (=> b!74841 m!74383))

(assert (=> b!74841 m!74379))

(declare-fun m!74385 () Bool)

(assert (=> b!74841 m!74385))

(assert (=> b!74841 m!71717))

(assert (=> b!74841 m!74381))

(declare-fun m!74387 () Bool)

(assert (=> bm!6634 m!74387))

(assert (=> d!17799 m!71705))

(declare-fun m!74389 () Bool)

(assert (=> bm!6632 m!74389))

(declare-fun m!74391 () Bool)

(assert (=> bm!6636 m!74391))

(declare-fun m!74393 () Bool)

(assert (=> bm!6635 m!74393))

(declare-fun m!74395 () Bool)

(assert (=> b!74838 m!74395))

(assert (=> b!74827 m!74379))

(assert (=> b!74827 m!74379))

(declare-fun m!74397 () Bool)

(assert (=> b!74827 m!74397))

(assert (=> b!74846 m!74379))

(assert (=> b!74846 m!74379))

(assert (=> b!74846 m!74397))

(declare-fun m!74399 () Bool)

(assert (=> b!74835 m!74399))

(declare-fun m!74401 () Bool)

(assert (=> b!74837 m!74401))

(declare-fun m!74403 () Bool)

(assert (=> b!74836 m!74403))

(declare-fun m!74405 () Bool)

(assert (=> b!74836 m!74405))

(assert (=> b!74836 m!74387))

(declare-fun m!74407 () Bool)

(assert (=> b!74836 m!74407))

(assert (=> b!74836 m!74379))

(declare-fun m!74409 () Bool)

(assert (=> b!74836 m!74409))

(declare-fun m!74411 () Bool)

(assert (=> b!74836 m!74411))

(declare-fun m!74413 () Bool)

(assert (=> b!74836 m!74413))

(declare-fun m!74415 () Bool)

(assert (=> b!74836 m!74415))

(declare-fun m!74417 () Bool)

(assert (=> b!74836 m!74417))

(declare-fun m!74419 () Bool)

(assert (=> b!74836 m!74419))

(declare-fun m!74421 () Bool)

(assert (=> b!74836 m!74421))

(declare-fun m!74423 () Bool)

(assert (=> b!74836 m!74423))

(assert (=> b!74836 m!74421))

(declare-fun m!74425 () Bool)

(assert (=> b!74836 m!74425))

(assert (=> b!74836 m!74403))

(declare-fun m!74427 () Bool)

(assert (=> b!74836 m!74427))

(assert (=> b!74836 m!74415))

(assert (=> b!74836 m!74405))

(declare-fun m!74429 () Bool)

(assert (=> b!74836 m!74429))

(declare-fun m!74431 () Bool)

(assert (=> b!74836 m!74431))

(assert (=> b!74844 m!74379))

(assert (=> b!74844 m!74379))

(declare-fun m!74433 () Bool)

(assert (=> b!74844 m!74433))

(assert (=> d!16959 d!17799))

(declare-fun d!17801 () Bool)

(declare-fun e!48895 () Bool)

(assert (=> d!17801 e!48895))

(declare-fun res!39542 () Bool)

(assert (=> d!17801 (=> res!39542 e!48895)))

(declare-fun lt!33735 () Bool)

(assert (=> d!17801 (= res!39542 (not lt!33735))))

(declare-fun lt!33734 () Bool)

(assert (=> d!17801 (= lt!33735 lt!33734)))

(declare-fun lt!33733 () Unit!2078)

(declare-fun e!48894 () Unit!2078)

(assert (=> d!17801 (= lt!33733 e!48894)))

(declare-fun c!11323 () Bool)

(assert (=> d!17801 (= c!11323 lt!33734)))

(assert (=> d!17801 (= lt!33734 (containsKey!137 (toList!725 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(assert (=> d!17801 (= (contains!723 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))) lt!33735)))

(declare-fun b!74847 () Bool)

(declare-fun lt!33732 () Unit!2078)

(assert (=> b!74847 (= e!48894 lt!33732)))

(assert (=> b!74847 (= lt!33732 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(assert (=> b!74847 (isDefined!86 (getValueByKey!133 (toList!725 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)))))))

(declare-fun b!74848 () Bool)

(declare-fun Unit!2151 () Unit!2078)

(assert (=> b!74848 (= e!48894 Unit!2151)))

(declare-fun b!74849 () Bool)

(assert (=> b!74849 (= e!48895 (isDefined!86 (getValueByKey!133 (toList!725 (getCurrentListMap!422 lt!33050 lt!33042 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1859 (_keys!3865 newMap!16)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)) (ite c!10865 (index!3078 lt!32789) (index!3075 lt!32789))))))))

(assert (= (and d!17801 c!11323) b!74847))

(assert (= (and d!17801 (not c!11323)) b!74848))

(assert (= (and d!17801 (not res!39542)) b!74849))

(assert (=> d!17801 m!72033))

(declare-fun m!74435 () Bool)

(assert (=> d!17801 m!74435))

(assert (=> b!74847 m!72033))

(declare-fun m!74437 () Bool)

(assert (=> b!74847 m!74437))

(assert (=> b!74847 m!72033))

(declare-fun m!74439 () Bool)

(assert (=> b!74847 m!74439))

(assert (=> b!74847 m!74439))

(declare-fun m!74441 () Bool)

(assert (=> b!74847 m!74441))

(assert (=> b!74849 m!72033))

(assert (=> b!74849 m!74439))

(assert (=> b!74849 m!74439))

(assert (=> b!74849 m!74441))

(assert (=> d!16959 d!17801))

(assert (=> d!16959 d!16883))

(declare-fun lt!33736 () Bool)

(declare-fun d!17803 () Bool)

(assert (=> d!17803 (= lt!33736 (select (content!77 (toList!725 lt!33152)) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48896 () Bool)

(assert (=> d!17803 (= lt!33736 e!48896)))

(declare-fun res!39543 () Bool)

(assert (=> d!17803 (=> (not res!39543) (not e!48896))))

(assert (=> d!17803 (= res!39543 ((_ is Cons!1474) (toList!725 lt!33152)))))

(assert (=> d!17803 (= (contains!724 (toList!725 lt!33152) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33736)))

(declare-fun b!74850 () Bool)

(declare-fun e!48897 () Bool)

(assert (=> b!74850 (= e!48896 e!48897)))

(declare-fun res!39544 () Bool)

(assert (=> b!74850 (=> res!39544 e!48897)))

(assert (=> b!74850 (= res!39544 (= (h!2061 (toList!725 lt!33152)) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74851 () Bool)

(assert (=> b!74851 (= e!48897 (contains!724 (t!5035 (toList!725 lt!33152)) (ite (or c!10816 c!10820) (tuple2!2123 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))) (tuple2!2123 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (= (and d!17803 res!39543) b!74850))

(assert (= (and b!74850 (not res!39544)) b!74851))

(declare-fun m!74443 () Bool)

(assert (=> d!17803 m!74443))

(declare-fun m!74445 () Bool)

(assert (=> d!17803 m!74445))

(declare-fun m!74447 () Bool)

(assert (=> b!74851 m!74447))

(assert (=> b!73723 d!17803))

(declare-fun d!17805 () Bool)

(declare-fun e!48899 () Bool)

(assert (=> d!17805 e!48899))

(declare-fun res!39545 () Bool)

(assert (=> d!17805 (=> res!39545 e!48899)))

(declare-fun lt!33740 () Bool)

(assert (=> d!17805 (= res!39545 (not lt!33740))))

(declare-fun lt!33739 () Bool)

(assert (=> d!17805 (= lt!33740 lt!33739)))

(declare-fun lt!33738 () Unit!2078)

(declare-fun e!48898 () Unit!2078)

(assert (=> d!17805 (= lt!33738 e!48898)))

(declare-fun c!11324 () Bool)

(assert (=> d!17805 (= c!11324 lt!33739)))

(assert (=> d!17805 (= lt!33739 (containsKey!137 (toList!725 lt!33106) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> d!17805 (= (contains!723 lt!33106 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33740)))

(declare-fun b!74852 () Bool)

(declare-fun lt!33737 () Unit!2078)

(assert (=> b!74852 (= e!48898 lt!33737)))

(assert (=> b!74852 (= lt!33737 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!725 lt!33106) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(assert (=> b!74852 (isDefined!86 (getValueByKey!133 (toList!725 lt!33106) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74853 () Bool)

(declare-fun Unit!2152 () Unit!2078)

(assert (=> b!74853 (= e!48898 Unit!2152)))

(declare-fun b!74854 () Bool)

(assert (=> b!74854 (= e!48899 (isDefined!86 (getValueByKey!133 (toList!725 lt!33106) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17805 c!11324) b!74852))

(assert (= (and d!17805 (not c!11324)) b!74853))

(assert (= (and d!17805 (not res!39545)) b!74854))

(declare-fun m!74449 () Bool)

(assert (=> d!17805 m!74449))

(declare-fun m!74451 () Bool)

(assert (=> b!74852 m!74451))

(assert (=> b!74852 m!72209))

(assert (=> b!74852 m!72209))

(declare-fun m!74453 () Bool)

(assert (=> b!74852 m!74453))

(assert (=> b!74854 m!72209))

(assert (=> b!74854 m!72209))

(assert (=> b!74854 m!74453))

(assert (=> d!17005 d!17805))

(declare-fun b!74857 () Bool)

(declare-fun e!48901 () Option!139)

(assert (=> b!74857 (= e!48901 (getValueByKey!133 (t!5035 lt!33105) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun d!17807 () Bool)

(declare-fun c!11325 () Bool)

(assert (=> d!17807 (= c!11325 (and ((_ is Cons!1474) lt!33105) (= (_1!1072 (h!2061 lt!33105)) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun e!48900 () Option!139)

(assert (=> d!17807 (= (getValueByKey!133 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) e!48900)))

(declare-fun b!74856 () Bool)

(assert (=> b!74856 (= e!48900 e!48901)))

(declare-fun c!11326 () Bool)

(assert (=> b!74856 (= c!11326 (and ((_ is Cons!1474) lt!33105) (not (= (_1!1072 (h!2061 lt!33105)) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun b!74855 () Bool)

(assert (=> b!74855 (= e!48900 (Some!138 (_2!1072 (h!2061 lt!33105))))))

(declare-fun b!74858 () Bool)

(assert (=> b!74858 (= e!48901 None!137)))

(assert (= (and d!17807 c!11325) b!74855))

(assert (= (and d!17807 (not c!11325)) b!74856))

(assert (= (and b!74856 c!11326) b!74857))

(assert (= (and b!74856 (not c!11326)) b!74858))

(declare-fun m!74455 () Bool)

(assert (=> b!74857 m!74455))

(assert (=> d!17005 d!17807))

(declare-fun d!17809 () Bool)

(assert (=> d!17809 (= (getValueByKey!133 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) (Some!138 (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun lt!33741 () Unit!2078)

(assert (=> d!17809 (= lt!33741 (choose!412 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun e!48902 () Bool)

(assert (=> d!17809 e!48902))

(declare-fun res!39546 () Bool)

(assert (=> d!17809 (=> (not res!39546) (not e!48902))))

(assert (=> d!17809 (= res!39546 (isStrictlySorted!292 lt!33105))))

(assert (=> d!17809 (= (lemmaContainsTupThenGetReturnValue!50 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33741)))

(declare-fun b!74859 () Bool)

(declare-fun res!39547 () Bool)

(assert (=> b!74859 (=> (not res!39547) (not e!48902))))

(assert (=> b!74859 (= res!39547 (containsKey!137 lt!33105 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74860 () Bool)

(assert (=> b!74860 (= e!48902 (contains!724 lt!33105 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (= (and d!17809 res!39546) b!74859))

(assert (= (and b!74859 res!39547) b!74860))

(assert (=> d!17809 m!72203))

(declare-fun m!74457 () Bool)

(assert (=> d!17809 m!74457))

(declare-fun m!74459 () Bool)

(assert (=> d!17809 m!74459))

(declare-fun m!74461 () Bool)

(assert (=> b!74859 m!74461))

(declare-fun m!74463 () Bool)

(assert (=> b!74860 m!74463))

(assert (=> d!17005 d!17809))

(declare-fun b!74861 () Bool)

(declare-fun e!48905 () List!1478)

(declare-fun call!6641 () List!1478)

(assert (=> b!74861 (= e!48905 call!6641)))

(declare-fun b!74862 () Bool)

(declare-fun e!48907 () List!1478)

(declare-fun call!6642 () List!1478)

(assert (=> b!74862 (= e!48907 call!6642)))

(declare-fun b!74863 () Bool)

(declare-fun e!48903 () List!1478)

(declare-fun call!6643 () List!1478)

(assert (=> b!74863 (= e!48903 call!6643)))

(declare-fun e!48904 () List!1478)

(declare-fun c!11330 () Bool)

(declare-fun c!11328 () Bool)

(declare-fun b!74864 () Bool)

(assert (=> b!74864 (= e!48904 (ite c!11330 (t!5035 (toList!725 lt!32671)) (ite c!11328 (Cons!1474 (h!2061 (toList!725 lt!32671)) (t!5035 (toList!725 lt!32671))) Nil!1475)))))

(declare-fun b!74865 () Bool)

(assert (=> b!74865 (= e!48903 e!48905)))

(assert (=> b!74865 (= c!11330 (and ((_ is Cons!1474) (toList!725 lt!32671)) (= (_1!1072 (h!2061 (toList!725 lt!32671))) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun bm!6638 () Bool)

(assert (=> bm!6638 (= call!6642 call!6641)))

(declare-fun bm!6639 () Bool)

(declare-fun c!11327 () Bool)

(assert (=> bm!6639 (= call!6643 ($colon$colon!66 e!48904 (ite c!11327 (h!2061 (toList!725 lt!32671)) (tuple2!2123 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))))

(declare-fun c!11329 () Bool)

(assert (=> bm!6639 (= c!11329 c!11327)))

(declare-fun b!74866 () Bool)

(declare-fun res!39549 () Bool)

(declare-fun e!48906 () Bool)

(assert (=> b!74866 (=> (not res!39549) (not e!48906))))

(declare-fun lt!33742 () List!1478)

(assert (=> b!74866 (= res!39549 (containsKey!137 lt!33742 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun bm!6640 () Bool)

(assert (=> bm!6640 (= call!6641 call!6643)))

(declare-fun b!74867 () Bool)

(assert (=> b!74867 (= e!48906 (contains!724 lt!33742 (tuple2!2123 (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(declare-fun b!74868 () Bool)

(assert (=> b!74868 (= e!48907 call!6642)))

(declare-fun b!74869 () Bool)

(assert (=> b!74869 (= e!48904 (insertStrictlySorted!53 (t!5035 (toList!725 lt!32671)) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))))))

(declare-fun b!74870 () Bool)

(assert (=> b!74870 (= c!11328 (and ((_ is Cons!1474) (toList!725 lt!32671)) (bvsgt (_1!1072 (h!2061 (toList!725 lt!32671))) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> b!74870 (= e!48905 e!48907)))

(declare-fun d!17811 () Bool)

(assert (=> d!17811 e!48906))

(declare-fun res!39548 () Bool)

(assert (=> d!17811 (=> (not res!39548) (not e!48906))))

(assert (=> d!17811 (= res!39548 (isStrictlySorted!292 lt!33742))))

(assert (=> d!17811 (= lt!33742 e!48903)))

(assert (=> d!17811 (= c!11327 (and ((_ is Cons!1474) (toList!725 lt!32671)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32671))) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))))))))

(assert (=> d!17811 (isStrictlySorted!292 (toList!725 lt!32671))))

(assert (=> d!17811 (= (insertStrictlySorted!53 (toList!725 lt!32671) (_1!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992))))) (_2!1072 (tuple2!2123 lt!32690 (zeroValue!2115 (v!2530 (underlying!260 thiss!992)))))) lt!33742)))

(assert (= (and d!17811 c!11327) b!74863))

(assert (= (and d!17811 (not c!11327)) b!74865))

(assert (= (and b!74865 c!11330) b!74861))

(assert (= (and b!74865 (not c!11330)) b!74870))

(assert (= (and b!74870 c!11328) b!74868))

(assert (= (and b!74870 (not c!11328)) b!74862))

(assert (= (or b!74868 b!74862) bm!6638))

(assert (= (or b!74861 bm!6638) bm!6640))

(assert (= (or b!74863 bm!6640) bm!6639))

(assert (= (and bm!6639 c!11329) b!74869))

(assert (= (and bm!6639 (not c!11329)) b!74864))

(assert (= (and d!17811 res!39548) b!74866))

(assert (= (and b!74866 res!39549) b!74867))

(declare-fun m!74465 () Bool)

(assert (=> bm!6639 m!74465))

(declare-fun m!74467 () Bool)

(assert (=> b!74869 m!74467))

(declare-fun m!74469 () Bool)

(assert (=> b!74867 m!74469))

(declare-fun m!74471 () Bool)

(assert (=> d!17811 m!74471))

(declare-fun m!74473 () Bool)

(assert (=> d!17811 m!74473))

(declare-fun m!74475 () Bool)

(assert (=> b!74866 m!74475))

(assert (=> d!17005 d!17811))

(declare-fun d!17813 () Bool)

(declare-fun res!39550 () Bool)

(declare-fun e!48908 () Bool)

(assert (=> d!17813 (=> res!39550 e!48908)))

(assert (=> d!17813 (= res!39550 (= (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355)))))

(assert (=> d!17813 (= (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!48908)))

(declare-fun b!74871 () Bool)

(declare-fun e!48909 () Bool)

(assert (=> b!74871 (= e!48908 e!48909)))

(declare-fun res!39551 () Bool)

(assert (=> b!74871 (=> (not res!39551) (not e!48909))))

(assert (=> b!74871 (= res!39551 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_keys!3865 (v!2530 (underlying!260 thiss!992))))))))

(declare-fun b!74872 () Bool)

(assert (=> b!74872 (= e!48909 (arrayContainsKey!0 (_keys!3865 (v!2530 (underlying!260 thiss!992))) (select (arr!1859 (_keys!3865 (v!2530 (underlying!260 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17813 (not res!39550)) b!74871))

(assert (= (and b!74871 res!39551) b!74872))

(assert (=> d!17813 m!73387))

(assert (=> b!74872 m!71227))

(declare-fun m!74477 () Bool)

(assert (=> b!74872 m!74477))

(assert (=> b!73366 d!17813))

(declare-fun d!17815 () Bool)

(declare-fun res!39552 () Bool)

(declare-fun e!48910 () Bool)

(assert (=> d!17815 (=> res!39552 e!48910)))

(assert (=> d!17815 (= res!39552 (and ((_ is Cons!1474) (toList!725 lt!32681)) (= (_1!1072 (h!2061 (toList!725 lt!32681))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17815 (= (containsKey!137 (toList!725 lt!32681) #b0000000000000000000000000000000000000000000000000000000000000000) e!48910)))

(declare-fun b!74873 () Bool)

(declare-fun e!48911 () Bool)

(assert (=> b!74873 (= e!48910 e!48911)))

(declare-fun res!39553 () Bool)

(assert (=> b!74873 (=> (not res!39553) (not e!48911))))

(assert (=> b!74873 (= res!39553 (and (or (not ((_ is Cons!1474) (toList!725 lt!32681))) (bvsle (_1!1072 (h!2061 (toList!725 lt!32681))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1474) (toList!725 lt!32681)) (bvslt (_1!1072 (h!2061 (toList!725 lt!32681))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74874 () Bool)

(assert (=> b!74874 (= e!48911 (containsKey!137 (t!5035 (toList!725 lt!32681)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17815 (not res!39552)) b!74873))

(assert (= (and b!74873 res!39553) b!74874))

(declare-fun m!74479 () Bool)

(assert (=> b!74874 m!74479))

(assert (=> d!16961 d!17815))

(declare-fun d!17817 () Bool)

(assert (=> d!17817 (contains!723 (getCurrentListMap!422 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1859 (_keys!3865 newMap!16)) (index!3076 lt!32789)))))

(assert (=> d!17817 true))

(declare-fun _$16!96 () Unit!2078)

(assert (=> d!17817 (= (choose!420 (_keys!3865 newMap!16) lt!32777 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3076 lt!32789) (defaultEntry!2213 newMap!16)) _$16!96)))

(declare-fun bs!3228 () Bool)

(assert (= bs!3228 d!17817))

(assert (=> bs!3228 m!72311))

(assert (=> bs!3228 m!71521))

(assert (=> bs!3228 m!72311))

(assert (=> bs!3228 m!71521))

(assert (=> bs!3228 m!72313))

(assert (=> d!17037 d!17817))

(assert (=> d!17037 d!17069))

(declare-fun d!17819 () Bool)

(assert (=> d!17819 (= (apply!75 lt!32860 (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (getValueByKey!133 (toList!725 lt!32860) (select (arr!1859 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3229 () Bool)

(assert (= bs!3229 d!17819))

(assert (=> bs!3229 m!71563))

(assert (=> bs!3229 m!73063))

(assert (=> bs!3229 m!73063))

(declare-fun m!74481 () Bool)

(assert (=> bs!3229 m!74481))

(assert (=> b!73382 d!17819))

(declare-fun d!17821 () Bool)

(declare-fun c!11331 () Bool)

(assert (=> d!17821 (= c!11331 ((_ is ValueCellFull!894) (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48912 () V!2947)

(assert (=> d!17821 (= (get!1139 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48912)))

(declare-fun b!74875 () Bool)

(assert (=> b!74875 (= e!48912 (get!1140 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74876 () Bool)

(assert (=> b!74876 (= e!48912 (get!1141 (select (arr!1860 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17821 c!11331) b!74875))

(assert (= (and d!17821 (not c!11331)) b!74876))

(assert (=> b!74875 m!71715))

(assert (=> b!74875 m!71717))

(declare-fun m!74483 () Bool)

(assert (=> b!74875 m!74483))

(assert (=> b!74876 m!71715))

(assert (=> b!74876 m!71717))

(declare-fun m!74485 () Bool)

(assert (=> b!74876 m!74485))

(assert (=> b!73382 d!17821))

(declare-fun d!17823 () Bool)

(assert (=> d!17823 (= ($colon$colon!66 e!47980 (ite c!10905 (h!2061 (toList!725 (+!94 lt!32540 lt!32542))) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538)))) (Cons!1474 (ite c!10905 (h!2061 (toList!725 (+!94 lt!32540 lt!32542))) (tuple2!2123 (_1!1072 lt!32538) (_2!1072 lt!32538))) e!47980))))

(assert (=> bm!6459 d!17823))

(declare-fun b!74879 () Bool)

(declare-fun e!48914 () Option!139)

(assert (=> b!74879 (= e!48914 (getValueByKey!133 (t!5035 (t!5035 lt!32617)) (_1!1072 lt!32538)))))

(declare-fun d!17825 () Bool)

(declare-fun c!11332 () Bool)

(assert (=> d!17825 (= c!11332 (and ((_ is Cons!1474) (t!5035 lt!32617)) (= (_1!1072 (h!2061 (t!5035 lt!32617))) (_1!1072 lt!32538))))))

(declare-fun e!48913 () Option!139)

(assert (=> d!17825 (= (getValueByKey!133 (t!5035 lt!32617) (_1!1072 lt!32538)) e!48913)))

(declare-fun b!74878 () Bool)

(assert (=> b!74878 (= e!48913 e!48914)))

(declare-fun c!11333 () Bool)

(assert (=> b!74878 (= c!11333 (and ((_ is Cons!1474) (t!5035 lt!32617)) (not (= (_1!1072 (h!2061 (t!5035 lt!32617))) (_1!1072 lt!32538)))))))

(declare-fun b!74877 () Bool)

(assert (=> b!74877 (= e!48913 (Some!138 (_2!1072 (h!2061 (t!5035 lt!32617)))))))

(declare-fun b!74880 () Bool)

(assert (=> b!74880 (= e!48914 None!137)))

(assert (= (and d!17825 c!11332) b!74877))

(assert (= (and d!17825 (not c!11332)) b!74878))

(assert (= (and b!74878 c!11333) b!74879))

(assert (= (and b!74878 (not c!11333)) b!74880))

(declare-fun m!74487 () Bool)

(assert (=> b!74879 m!74487))

(assert (=> b!73670 d!17825))

(declare-fun b!74882 () Bool)

(declare-fun e!48916 () Bool)

(assert (=> b!74882 (= e!48916 tp_is_empty!2475)))

(declare-fun mapNonEmpty!3185 () Bool)

(declare-fun mapRes!3185 () Bool)

(declare-fun tp!8549 () Bool)

(declare-fun e!48915 () Bool)

(assert (=> mapNonEmpty!3185 (= mapRes!3185 (and tp!8549 e!48915))))

(declare-fun mapRest!3185 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapValue!3185 () ValueCell!894)

(declare-fun mapKey!3185 () (_ BitVec 32))

(assert (=> mapNonEmpty!3185 (= mapRest!3184 (store mapRest!3185 mapKey!3185 mapValue!3185))))

(declare-fun condMapEmpty!3185 () Bool)

(declare-fun mapDefault!3185 () ValueCell!894)

(assert (=> mapNonEmpty!3184 (= condMapEmpty!3185 (= mapRest!3184 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3185)))))

(assert (=> mapNonEmpty!3184 (= tp!8548 (and e!48916 mapRes!3185))))

(declare-fun mapIsEmpty!3185 () Bool)

(assert (=> mapIsEmpty!3185 mapRes!3185))

(declare-fun b!74881 () Bool)

(assert (=> b!74881 (= e!48915 tp_is_empty!2475)))

(assert (= (and mapNonEmpty!3184 condMapEmpty!3185) mapIsEmpty!3185))

(assert (= (and mapNonEmpty!3184 (not condMapEmpty!3185)) mapNonEmpty!3185))

(assert (= (and mapNonEmpty!3185 ((_ is ValueCellFull!894) mapValue!3185)) b!74881))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!894) mapDefault!3185)) b!74882))

(declare-fun m!74489 () Bool)

(assert (=> mapNonEmpty!3185 m!74489))

(declare-fun b!74884 () Bool)

(declare-fun e!48918 () Bool)

(assert (=> b!74884 (= e!48918 tp_is_empty!2475)))

(declare-fun mapNonEmpty!3186 () Bool)

(declare-fun mapRes!3186 () Bool)

(declare-fun tp!8550 () Bool)

(declare-fun e!48917 () Bool)

(assert (=> mapNonEmpty!3186 (= mapRes!3186 (and tp!8550 e!48917))))

(declare-fun mapValue!3186 () ValueCell!894)

(declare-fun mapRest!3186 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapKey!3186 () (_ BitVec 32))

(assert (=> mapNonEmpty!3186 (= mapRest!3183 (store mapRest!3186 mapKey!3186 mapValue!3186))))

(declare-fun condMapEmpty!3186 () Bool)

(declare-fun mapDefault!3186 () ValueCell!894)

(assert (=> mapNonEmpty!3183 (= condMapEmpty!3186 (= mapRest!3183 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3186)))))

(assert (=> mapNonEmpty!3183 (= tp!8547 (and e!48918 mapRes!3186))))

(declare-fun mapIsEmpty!3186 () Bool)

(assert (=> mapIsEmpty!3186 mapRes!3186))

(declare-fun b!74883 () Bool)

(assert (=> b!74883 (= e!48917 tp_is_empty!2475)))

(assert (= (and mapNonEmpty!3183 condMapEmpty!3186) mapIsEmpty!3186))

(assert (= (and mapNonEmpty!3183 (not condMapEmpty!3186)) mapNonEmpty!3186))

(assert (= (and mapNonEmpty!3186 ((_ is ValueCellFull!894) mapValue!3186)) b!74883))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!894) mapDefault!3186)) b!74884))

(declare-fun m!74491 () Bool)

(assert (=> mapNonEmpty!3186 m!74491))

(declare-fun b_lambda!3343 () Bool)

(assert (= b_lambda!3315 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3343)))

(declare-fun b_lambda!3345 () Bool)

(assert (= b_lambda!3325 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3345)))

(declare-fun b_lambda!3347 () Bool)

(assert (= b_lambda!3321 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3347)))

(declare-fun b_lambda!3349 () Bool)

(assert (= b_lambda!3327 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3349)))

(declare-fun b_lambda!3351 () Bool)

(assert (= b_lambda!3331 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3351)))

(declare-fun b_lambda!3353 () Bool)

(assert (= b_lambda!3335 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3353)))

(declare-fun b_lambda!3355 () Bool)

(assert (= b_lambda!3313 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3355)))

(declare-fun b_lambda!3357 () Bool)

(assert (= b_lambda!3317 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3357)))

(declare-fun b_lambda!3359 () Bool)

(assert (= b_lambda!3341 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3359)))

(declare-fun b_lambda!3361 () Bool)

(assert (= b_lambda!3337 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3361)))

(declare-fun b_lambda!3363 () Bool)

(assert (= b_lambda!3323 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3363)))

(declare-fun b_lambda!3365 () Bool)

(assert (= b_lambda!3339 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3365)))

(declare-fun b_lambda!3367 () Bool)

(assert (= b_lambda!3329 (or (and b!72873 b_free!2117) (and b!72882 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))))) b_lambda!3367)))

(declare-fun b_lambda!3369 () Bool)

(assert (= b_lambda!3319 (or (and b!72873 b_free!2117 (= (defaultEntry!2213 (v!2530 (underlying!260 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72882 b_free!2119) b_lambda!3369)))

(check-sat (not d!17783) (not bm!6613) (not b!74599) (not d!17349) (not b!73803) (not b!74171) (not b!73871) (not d!17177) (not b!74092) (not d!17369) (not bm!6634) (not b!74607) (not b!74285) (not b!74228) (not d!17223) (not b!74352) (not b!73841) (not b!74519) (not b!74699) (not d!17355) (not b!74841) (not b!73778) (not bm!6521) (not b!74267) (not b!73870) (not b!74514) (not b!73809) (not d!17505) (not bm!6575) (not b!74109) (not d!17657) (not bm!6520) (not d!17425) (not b!74165) (not b!74044) (not b!74496) (not d!17757) (not b!74649) (not d!17269) (not b!74196) (not b!74838) (not b!74003) (not b!74300) (not b_lambda!3347) (not bm!6639) (not b_lambda!3363) (not b!74552) (not b!73856) (not b!74148) (not b_lambda!3361) (not b!74660) (not d!17605) (not b_lambda!3345) (not b!74849) (not d!17329) (not d!17275) (not b!74008) (not bm!6525) (not b!74331) (not b!74037) (not d!17399) (not b!73918) (not b!74058) (not d!17685) (not b!74141) (not d!17635) (not b!73805) (not b!74484) (not b!74458) (not b!74060) (not b!74014) (not d!17775) (not d!17417) (not b!74236) (not b!73963) (not d!17575) (not b!73995) (not d!17779) (not b!73849) (not d!17611) (not d!17571) (not b!73823) (not b!74158) (not b!73921) (not b!73857) (not b!74617) (not b!74482) (not b!73889) (not b!74724) (not bm!6589) (not d!17731) (not b!74770) (not b!73969) (not bm!6622) (not b!74605) (not b!74508) (not b!74323) (not b!74415) (not b!74636) (not b!74755) (not bm!6576) (not bm!6530) (not b!73904) (not d!17319) (not b!74358) (not d!17093) (not b!73938) (not b!74560) (not b!74204) (not b!74546) (not d!17089) (not b!74697) (not b!73806) (not b!74425) (not d!17649) (not d!17215) b_and!4579 (not b!74618) (not d!17485) (not d!17679) (not b!73900) (not bm!6574) (not d!17801) (not d!17773) (not b!73943) (not b!74418) (not b!74629) (not d!17095) (not b!74705) (not d!17421) (not bm!6534) (not d!17205) (not d!17117) (not b!74299) (not bm!6522) (not b!74448) (not d!17237) (not d!17675) (not d!17133) (not d!17537) (not b!74246) (not bm!6587) (not bm!6562) (not d!17445) (not b!74634) (not bm!6556) (not bm!6545) (not b!74138) (not b!74130) (not b!73970) (not b!73851) (not b!74851) (not b!74527) (not bm!6618) (not b!74010) (not bm!6528) (not b!73779) (not bm!6615) (not b!74816) (not bm!6591) (not b!74033) (not b!74586) (not b!73903) (not b!73892) (not b!74874) (not b!74592) (not bm!6558) (not b!74198) (not b!74624) (not d!17493) (not d!17289) (not b!74446) (not d!17375) (not b!73751) (not b!74511) (not d!17653) (not b!74847) (not d!17519) (not b!74723) (not b!74779) (not b!74876) (not d!17535) (not b!74133) (not d!17305) (not d!17439) (not b!74114) (not b!74684) (not b!74718) (not b!74668) (not b!74333) (not d!17255) (not bm!6632) (not d!17593) (not b!74729) (not b!73827) (not d!17465) (not b!74773) (not b!74651) (not d!17277) (not b!74023) (not b!74390) (not b!74691) (not bm!6554) (not b!74157) (not b_lambda!3287) (not b!73759) (not bm!6585) (not d!17583) (not b!73866) (not b!73793) (not d!17153) (not bm!6538) (not d!17437) (not d!17139) (not b!74604) (not b!74013) (not b!74340) (not b!74836) (not bm!6543) (not d!17669) (not d!17213) (not d!17299) (not b!74637) (not b!74710) (not b!73771) (not b!74462) (not b!73766) (not b!73864) (not b!74324) (not b!74875) (not b!74672) (not b!74293) (not d!17207) (not d!17619) (not b!74068) (not d!17397) (not b!74214) (not d!17745) (not b!74036) (not b!74292) (not d!17687) (not b!73924) (not b!74846) (not b!74210) (not d!17447) (not b!74038) (not b!74073) (not b!74405) (not b!73905) (not b!74732) (not d!17167) (not b!74557) (not b!74657) (not d!17551) (not d!17391) (not d!17665) (not b!74065) (not bm!6539) (not b!74503) (not d!17557) (not b!74538) (not b!73888) (not b!74591) (not d!17171) (not b!74121) (not bm!6628) (not d!17337) (not d!17407) (not b!74789) (not bm!6532) (not b!73984) (not b!74075) (not bm!6629) (not bm!6566) (not b!74111) (not d!17541) (not d!17499) (not bm!6593) (not d!17423) (not d!17599) (not b!74007) (not b!74616) (not b!74721) (not b!74312) (not bm!6547) (not b!74652) (not d!17219) (not b!74302) (not b!74168) (not d!17513) (not b!74377) (not b!74110) (not d!17193) (not b!74798) (not bm!6579) (not b!74522) (not b!74132) (not d!17135) (not b_next!2117) (not b!74683) (not b!74669) (not b!73906) (not b!74623) (not b!74135) (not b!74282) (not b!74123) (not d!17065) (not bm!6624) (not bm!6568) (not b!73890) (not d!17549) (not d!17155) (not b!74485) (not b!74344) (not b!74818) (not b!74610) (not d!17641) (not d!17259) (not b!74316) (not d!17181) (not d!17279) (not b!74237) (not b!74363) (not b!74753) (not d!17461) (not b!74255) (not b!74646) (not b!74094) (not b_lambda!3351) (not b!74548) (not b!74424) (not d!17697) (not b!74054) (not d!17449) (not b_lambda!3349) (not b!74471) (not d!17159) (not d!17753) (not d!17261) (not b!74103) (not b!74555) (not b!74576) (not b!73762) (not b!74469) (not d!17689) (not b!74252) (not b!74655) (not b_lambda!3369) (not b!74245) (not b!74713) (not b!74370) (not b!74667) (not d!17579) (not d!17459) (not d!17221) (not b!73961) (not b!74811) (not d!17085) (not d!17409) (not d!17755) (not d!17543) (not b!74463) (not b!74427) (not bm!6611) (not b!73959) (not b!74570) (not d!17227) (not b!74450) (not b!74308) (not d!17817) (not b!73897) (not b!74035) (not b!73910) (not d!17637) (not b_lambda!3355) (not d!17257) (not b!74472) (not b!74031) (not b!74096) (not d!17435) (not d!17433) (not d!17263) (not b!74354) (not b!74269) (not d!17187) (not b!74067) (not b!73876) (not bm!6570) (not b!74408) (not b!74330) (not d!17453) (not b!74012) (not b!74867) (not b!74506) (not b!74805) (not d!17655) (not b!74451) (not d!17201) (not b!74529) (not bm!6603) (not b!74643) (not b!74483) (not b!74452) (not b!73784) (not b_lambda!3307) (not b!74712) (not d!17429) (not b!74389) (not b!74589) (not b!74801) (not b!74488) (not b!73958) (not b!73997) (not b!74160) (not d!17547) (not d!17799) (not b!74093) (not d!17253) (not b!74493) (not d!17393) (not b!74070) (not b!74844) (not b!74374) (not b!74051) (not b!74573) (not b!74445) (not b!74029) (not b!73930) (not d!17671) (not b!74771) (not d!17523) (not b!74866) (not b!74274) (not d!17803) (not d!17681) (not b!74382) (not b!73845) (not b!74432) (not b!73936) (not bm!6518) (not b!74353) (not d!17331) (not b!74393) (not d!17467) (not d!17287) (not b!73894) (not b!74243) (not b!73873) (not d!17083) (not bm!6553) (not d!17819) (not b!73895) (not b!74234) (not d!17087) (not d!17183) (not b!74336) (not b!73953) (not bm!6620) (not mapNonEmpty!3186) (not b!74399) (not b!73939) (not b!73947) (not b!74406) (not bm!6602) (not d!17209) (not b!74537) (not bm!6515) (not d!17363) (not b!74750) (not b!73915) (not b!74248) (not d!17075) (not b!74049) (not b!74280) (not b!74702) (not d!17777) (not b!73957) (not b!74001) (not b!74620) (not b!74879) (not b!74454) (not d!17091) (not b!74041) (not d!17271) (not b!73798) (not d!17733) (not d!17241) (not d!17161) (not d!17645) (not b!74337) (not b!74412) (not d!17311) (not d!17767) (not b!74027) (not b!74366) (not d!17383) (not b_lambda!3333) (not d!17719) (not b!73990) (not b!74761) (not b!74821) (not d!17721) (not d!17165) (not b!74584) (not d!17351) (not b!73956) (not b!74757) (not b!73772) (not bm!6536) (not b!73817) (not d!17371) (not b_lambda!3303) (not d!17283) (not d!17245) (not b!74271) (not d!17163) (not d!17415) (not d!17379) (not b!74578) (not b_lambda!3291) (not b!73804) (not d!17335) tp_is_empty!2475 (not d!17373) (not d!17581) (not d!17247) (not b!74217) (not d!17761) (not d!17725) (not b!74807) (not d!17291) (not b!74510) (not b!74384) (not b!74675) (not b!74284) (not b!74167) (not b!74154) (not d!17771) (not b!74543) (not b!74824) (not b!74835) (not b!74018) (not b!74707) (not b!74491) (not d!17179) (not d!17595) (not d!17443) (not b!74698) (not b!73891) (not b!74869) (not d!17497) (not b!73908) (not b!74085) (not b!74207) (not d!17079) (not b!73985) (not d!17785) (not b!74117) (not b!74776) (not bm!6592) (not b!73831) (not d!17691) (not bm!6609) (not b!74571) (not b!74396) (not b!74082) (not b!74466) (not b!73975) (not d!17071) (not b!74417) (not d!17125) (not d!17661) (not b!74410) (not b!74258) (not d!17225) (not d!17073) (not b!74857) (not d!17157) (not d!17385) (not d!17511) (not d!17765) (not b!73795) (not b!74582) (not bm!6560) (not b!74608) (not d!17475) (not d!17265) (not d!17419) (not b_lambda!3289) (not b!74460) (not b!74860) (not d!17105) (not b!74678) (not b!74006) (not b!73901) (not bm!6635) (not bm!6600) (not d!17737) (not d!17787) (not d!17509) (not b!74020) (not d!17317) (not b!73885) (not b!74681) (not b!74108) (not d!17365) (not b!74147) (not b!73949) (not b!74262) (not b!74540) (not b_lambda!3365) (not b!74017) (not b!73972) (not b!74026) (not b!74550) (not b!74231) (not b!73933) (not b!74225) (not b!74827) (not d!17347) (not b!73863) (not b!74525) (not d!17297) (not d!17099) (not b!74391) (not b!74676) (not b!73987) (not b!74016) (not bm!6541) (not d!17621) (not b!73794) (not b!74579) (not d!17481) (not b!74355) (not b!73941) (not b_next!2119) (not b!74658) (not b!74622) (not b_lambda!3309) (not b!73911) (not d!17809) (not d!17805) (not b!74240) (not b!74150) (not b!74105) (not b_lambda!3357) (not d!17359) (not b!74361) (not b!74662) (not d!17743) (not b!74063) (not b!74663) (not b!74693) (not d!17573) (not b!73816) (not b!74760) (not b!74140) (not b!74116) (not b!73942) (not bm!6564) (not b!74238) (not d!17559) (not b!74429) (not b!74241) (not b!74787) (not bm!6596) (not b!74731) (not b!73965) (not b!74837) (not b!73978) (not b!74083) (not b!74315) (not b!73954) (not d!17273) (not b_lambda!3367) (not d!17129) (not b!74046) (not d!17501) (not b!74665) (not d!17341) (not d!17173) (not b!73977) (not b!74539) (not d!17137) (not d!17643) (not b!74386) (not d!17293) (not b!74808) (not b!74242) (not d!17483) (not b!74598) (not bm!6604) (not b_lambda!3359) (not d!17561) (not b!74342) (not d!17191) (not b!74380) (not bm!6630) (not b!74627) (not b!74790) (not d!17343) (not d!17367) (not d!17141) (not b!74859) (not b!74227) (not d!17127) (not b!74102) (not b_lambda!3305) (not b!74474) (not b!73730) (not b!73946) (not b!74318) (not b_lambda!3311) (not b!73854) (not d!17577) (not b!74644) (not d!17711) (not bm!6572) (not d!17713) (not b!74788) (not b!73769) (not b!73848) (not mapNonEmpty!3185) (not b!74854) (not b!74388) (not d!17695) (not b!74021) (not bm!6598) (not d!17811) (not b!74559) (not bm!6626) (not d!17281) (not b!73993) (not b!74852) (not b!74260) (not bm!6582) (not b!74453) (not b!74804) (not d!17565) (not bm!6625) (not b!74709) (not d!17701) (not b!74287) (not b!74095) (not b!74321) (not bm!6636) (not b!74796) (not b!74002) (not b!74581) (not d!17203) (not d!17717) (not b!73967) (not b!74524) (not d!17249) (not b!73869) (not b!73835) (not b!73781) (not b_lambda!3343) (not b!74872) (not b!74726) (not d!17793) (not b!74398) (not b!74251) (not b!74456) (not b!74793) (not b_lambda!3353) (not b!73838) (not d!17353) (not b!74100) (not b!74099) (not b!73931) (not b!73801) (not b!74278) (not d!17377) (not b!73923) (not d!17285) b_and!4581 (not b!74695) (not d!17633) (not d!17175) (not b!73764) (not b!74504) (not b_lambda!3279) (not b!74372) (not b!74601) (not b!73999) (not b!74614) (not b!74438) (not b!74129) (not d!17267) (not b!74254) (not b!74076) (not b!74756) (not b!74009) (not d!17169) (not b!74226) (not b!74265) (not b!74126) (not b!73879) (not b!74290) (not b!74690) (not b!73951) (not b!74751) (not b!74516) (not d!17627) (not b!74118) (not b!74098) (not d!17357) (not d!17477) (not b!74563) (not b!74305) (not b!74163) (not b!73819) (not b!74715) (not d!17555) (not bm!6607) (not b!73916) (not b!74435) (not b!74611) (not b!73887) (not b!73792) (not d!17361) (not d!17303) (not b!73902) (not bm!6559) (not bm!6552) (not b!74631))
(check-sat b_and!4579 b_and!4581 (not b_next!2117) (not b_next!2119))
