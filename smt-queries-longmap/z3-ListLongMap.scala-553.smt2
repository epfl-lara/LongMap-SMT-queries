; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14710 () Bool)

(assert start!14710)

(declare-fun b!139297 () Bool)

(declare-fun b_free!3029 () Bool)

(declare-fun b_next!3029 () Bool)

(assert (=> b!139297 (= b_free!3029 (not b_next!3029))))

(declare-fun tp!11557 () Bool)

(declare-fun b_and!8695 () Bool)

(assert (=> b!139297 (= tp!11557 b_and!8695)))

(declare-fun b!139291 () Bool)

(declare-fun b_free!3031 () Bool)

(declare-fun b_next!3031 () Bool)

(assert (=> b!139291 (= b_free!3031 (not b_next!3031))))

(declare-fun tp!11559 () Bool)

(declare-fun b_and!8697 () Bool)

(assert (=> b!139291 (= tp!11559 b_and!8697)))

(declare-fun b!139285 () Bool)

(declare-fun e!90867 () Bool)

(declare-fun e!90866 () Bool)

(declare-fun mapRes!4833 () Bool)

(assert (=> b!139285 (= e!90867 (and e!90866 mapRes!4833))))

(declare-fun condMapEmpty!4834 () Bool)

(declare-datatypes ((V!3555 0))(
  ( (V!3556 (val!1510 Int)) )
))
(declare-datatypes ((array!4897 0))(
  ( (array!4898 (arr!2315 (Array (_ BitVec 32) (_ BitVec 64))) (size!2587 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1122 0))(
  ( (ValueCellFull!1122 (v!3279 V!3555)) (EmptyCell!1122) )
))
(declare-datatypes ((array!4899 0))(
  ( (array!4900 (arr!2316 (Array (_ BitVec 32) ValueCell!1122)) (size!2588 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1152 0))(
  ( (LongMapFixedSize!1153 (defaultEntry!2940 Int) (mask!7280 (_ BitVec 32)) (extraKeys!2695 (_ BitVec 32)) (zeroValue!2790 V!3555) (minValue!2790 V!3555) (_size!625 (_ BitVec 32)) (_keys!4699 array!4897) (_values!2923 array!4899) (_vacant!625 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!938 0))(
  ( (Cell!939 (v!3280 LongMapFixedSize!1152)) )
))
(declare-datatypes ((LongMap!938 0))(
  ( (LongMap!939 (underlying!480 Cell!938)) )
))
(declare-fun thiss!992 () LongMap!938)

(declare-fun mapDefault!4834 () ValueCell!1122)

(assert (=> b!139285 (= condMapEmpty!4834 (= (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4834)))))

(declare-fun b!139286 () Bool)

(declare-fun res!66632 () Bool)

(declare-fun e!90869 () Bool)

(assert (=> b!139286 (=> (not res!66632) (not e!90869))))

(declare-fun newMap!16 () LongMapFixedSize!1152)

(declare-fun valid!556 (LongMapFixedSize!1152) Bool)

(assert (=> b!139286 (= res!66632 (valid!556 newMap!16))))

(declare-fun b!139287 () Bool)

(declare-fun res!66634 () Bool)

(assert (=> b!139287 (=> (not res!66634) (not e!90869))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!139287 (= res!66634 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!139288 () Bool)

(declare-fun e!90868 () Bool)

(declare-fun e!90871 () Bool)

(assert (=> b!139288 (= e!90868 e!90871)))

(declare-fun b!139289 () Bool)

(declare-fun e!90872 () Bool)

(declare-fun tp_is_empty!2931 () Bool)

(assert (=> b!139289 (= e!90872 tp_is_empty!2931)))

(declare-fun b!139290 () Bool)

(declare-fun res!66631 () Bool)

(assert (=> b!139290 (=> (not res!66631) (not e!90869))))

(assert (=> b!139290 (= res!66631 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7280 newMap!16)) (_size!625 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun e!90875 () Bool)

(declare-fun e!90864 () Bool)

(declare-fun array_inv!1453 (array!4897) Bool)

(declare-fun array_inv!1454 (array!4899) Bool)

(assert (=> b!139291 (= e!90864 (and tp!11559 tp_is_empty!2931 (array_inv!1453 (_keys!4699 newMap!16)) (array_inv!1454 (_values!2923 newMap!16)) e!90875))))

(declare-fun b!139292 () Bool)

(declare-fun e!90878 () Bool)

(declare-fun e!90870 () Bool)

(assert (=> b!139292 (= e!90878 e!90870)))

(declare-fun res!66630 () Bool)

(assert (=> b!139292 (=> (not res!66630) (not e!90870))))

(declare-datatypes ((tuple2!2698 0))(
  ( (tuple2!2699 (_1!1360 (_ BitVec 64)) (_2!1360 V!3555)) )
))
(declare-datatypes ((List!1745 0))(
  ( (Nil!1742) (Cons!1741 (h!2348 tuple2!2698) (t!6329 List!1745)) )
))
(declare-datatypes ((ListLongMap!1745 0))(
  ( (ListLongMap!1746 (toList!888 List!1745)) )
))
(declare-fun lt!72825 () ListLongMap!1745)

(declare-fun contains!923 (ListLongMap!1745 (_ BitVec 64)) Bool)

(assert (=> b!139292 (= res!66630 (contains!923 lt!72825 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2700 0))(
  ( (tuple2!2701 (_1!1361 Bool) (_2!1361 LongMapFixedSize!1152)) )
))
(declare-fun lt!72824 () tuple2!2700)

(declare-fun update!211 (LongMapFixedSize!1152 (_ BitVec 64) V!3555) tuple2!2700)

(declare-fun get!1528 (ValueCell!1122 V!3555) V!3555)

(declare-fun dynLambda!442 (Int (_ BitVec 64)) V!3555)

(assert (=> b!139292 (= lt!72824 (update!211 newMap!16 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun res!66633 () Bool)

(assert (=> start!14710 (=> (not res!66633) (not e!90869))))

(declare-fun valid!557 (LongMap!938) Bool)

(assert (=> start!14710 (= res!66633 (valid!557 thiss!992))))

(assert (=> start!14710 e!90869))

(assert (=> start!14710 e!90868))

(assert (=> start!14710 true))

(assert (=> start!14710 e!90864))

(declare-fun mapIsEmpty!4833 () Bool)

(declare-fun mapRes!4834 () Bool)

(assert (=> mapIsEmpty!4833 mapRes!4834))

(declare-fun mapNonEmpty!4833 () Bool)

(declare-fun tp!11560 () Bool)

(declare-fun e!90874 () Bool)

(assert (=> mapNonEmpty!4833 (= mapRes!4834 (and tp!11560 e!90874))))

(declare-fun mapKey!4834 () (_ BitVec 32))

(declare-fun mapRest!4833 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapValue!4833 () ValueCell!1122)

(assert (=> mapNonEmpty!4833 (= (arr!2316 (_values!2923 newMap!16)) (store mapRest!4833 mapKey!4834 mapValue!4833))))

(declare-fun b!139293 () Bool)

(declare-fun e!90877 () Bool)

(assert (=> b!139293 (= e!90871 e!90877)))

(declare-fun b!139294 () Bool)

(assert (=> b!139294 (= e!90875 (and e!90872 mapRes!4834))))

(declare-fun condMapEmpty!4833 () Bool)

(declare-fun mapDefault!4833 () ValueCell!1122)

(assert (=> b!139294 (= condMapEmpty!4833 (= (arr!2316 (_values!2923 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4833)))))

(declare-fun b!139295 () Bool)

(assert (=> b!139295 (= e!90874 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4834 () Bool)

(assert (=> mapIsEmpty!4834 mapRes!4833))

(declare-fun b!139296 () Bool)

(assert (=> b!139296 (= e!90870 (not (or (bvsge (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b01111111111111111111111111111111) (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))))

(declare-datatypes ((List!1746 0))(
  ( (Nil!1743) (Cons!1742 (h!2349 (_ BitVec 64)) (t!6330 List!1746)) )
))
(declare-fun arrayNoDuplicates!0 (array!4897 (_ BitVec 32) List!1746) Bool)

(assert (=> b!139296 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) from!355 Nil!1743)))

(declare-datatypes ((Unit!4373 0))(
  ( (Unit!4374) )
))
(declare-fun lt!72827 () Unit!4373)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4897 (_ BitVec 32) (_ BitVec 32)) Unit!4373)

(assert (=> b!139296 (= lt!72827 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-fun arrayContainsKey!0 (array!4897 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!139296 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!72823 () Unit!4373)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!139 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4373)

(assert (=> b!139296 (= lt!72823 (lemmaListMapContainsThenArrayContainsFrom!139 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(assert (=> b!139297 (= e!90877 (and tp!11557 tp_is_empty!2931 (array_inv!1453 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (array_inv!1454 (_values!2923 (v!3280 (underlying!480 thiss!992)))) e!90867))))

(declare-fun b!139298 () Bool)

(assert (=> b!139298 (= e!90866 tp_is_empty!2931)))

(declare-fun b!139299 () Bool)

(assert (=> b!139299 (= e!90869 e!90878)))

(declare-fun res!66635 () Bool)

(assert (=> b!139299 (=> (not res!66635) (not e!90878))))

(declare-fun lt!72826 () ListLongMap!1745)

(assert (=> b!139299 (= res!66635 (and (= lt!72826 lt!72825) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1442 (LongMapFixedSize!1152) ListLongMap!1745)

(assert (=> b!139299 (= lt!72825 (map!1442 newMap!16))))

(declare-fun getCurrentListMap!561 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) ListLongMap!1745)

(assert (=> b!139299 (= lt!72826 (getCurrentListMap!561 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!139300 () Bool)

(declare-fun e!90876 () Bool)

(assert (=> b!139300 (= e!90876 tp_is_empty!2931)))

(declare-fun mapNonEmpty!4834 () Bool)

(declare-fun tp!11558 () Bool)

(assert (=> mapNonEmpty!4834 (= mapRes!4833 (and tp!11558 e!90876))))

(declare-fun mapRest!4834 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4833 () (_ BitVec 32))

(declare-fun mapValue!4834 () ValueCell!1122)

(assert (=> mapNonEmpty!4834 (= (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (store mapRest!4834 mapKey!4833 mapValue!4834))))

(assert (= (and start!14710 res!66633) b!139287))

(assert (= (and b!139287 res!66634) b!139286))

(assert (= (and b!139286 res!66632) b!139290))

(assert (= (and b!139290 res!66631) b!139299))

(assert (= (and b!139299 res!66635) b!139292))

(assert (= (and b!139292 res!66630) b!139296))

(assert (= (and b!139285 condMapEmpty!4834) mapIsEmpty!4834))

(assert (= (and b!139285 (not condMapEmpty!4834)) mapNonEmpty!4834))

(get-info :version)

(assert (= (and mapNonEmpty!4834 ((_ is ValueCellFull!1122) mapValue!4834)) b!139300))

(assert (= (and b!139285 ((_ is ValueCellFull!1122) mapDefault!4834)) b!139298))

(assert (= b!139297 b!139285))

(assert (= b!139293 b!139297))

(assert (= b!139288 b!139293))

(assert (= start!14710 b!139288))

(assert (= (and b!139294 condMapEmpty!4833) mapIsEmpty!4833))

(assert (= (and b!139294 (not condMapEmpty!4833)) mapNonEmpty!4833))

(assert (= (and mapNonEmpty!4833 ((_ is ValueCellFull!1122) mapValue!4833)) b!139295))

(assert (= (and b!139294 ((_ is ValueCellFull!1122) mapDefault!4833)) b!139289))

(assert (= b!139291 b!139294))

(assert (= start!14710 b!139291))

(declare-fun b_lambda!6227 () Bool)

(assert (=> (not b_lambda!6227) (not b!139292)))

(declare-fun t!6326 () Bool)

(declare-fun tb!2545 () Bool)

(assert (=> (and b!139297 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) t!6326) tb!2545))

(declare-fun result!4177 () Bool)

(assert (=> tb!2545 (= result!4177 tp_is_empty!2931)))

(assert (=> b!139292 t!6326))

(declare-fun b_and!8699 () Bool)

(assert (= b_and!8695 (and (=> t!6326 result!4177) b_and!8699)))

(declare-fun t!6328 () Bool)

(declare-fun tb!2547 () Bool)

(assert (=> (and b!139291 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) t!6328) tb!2547))

(declare-fun result!4181 () Bool)

(assert (= result!4181 result!4177))

(assert (=> b!139292 t!6328))

(declare-fun b_and!8701 () Bool)

(assert (= b_and!8697 (and (=> t!6328 result!4181) b_and!8701)))

(declare-fun m!166009 () Bool)

(assert (=> b!139296 m!166009))

(declare-fun m!166011 () Bool)

(assert (=> b!139296 m!166011))

(declare-fun m!166013 () Bool)

(assert (=> b!139296 m!166013))

(declare-fun m!166015 () Bool)

(assert (=> b!139296 m!166015))

(assert (=> b!139296 m!166013))

(assert (=> b!139296 m!166013))

(declare-fun m!166017 () Bool)

(assert (=> b!139296 m!166017))

(declare-fun m!166019 () Bool)

(assert (=> mapNonEmpty!4833 m!166019))

(assert (=> b!139299 m!166013))

(declare-fun m!166021 () Bool)

(assert (=> b!139299 m!166021))

(declare-fun m!166023 () Bool)

(assert (=> b!139299 m!166023))

(declare-fun m!166025 () Bool)

(assert (=> b!139292 m!166025))

(declare-fun m!166027 () Bool)

(assert (=> b!139292 m!166027))

(declare-fun m!166029 () Bool)

(assert (=> b!139292 m!166029))

(assert (=> b!139292 m!166013))

(assert (=> b!139292 m!166027))

(assert (=> b!139292 m!166013))

(declare-fun m!166031 () Bool)

(assert (=> b!139292 m!166031))

(assert (=> b!139292 m!166013))

(assert (=> b!139292 m!166029))

(declare-fun m!166033 () Bool)

(assert (=> b!139292 m!166033))

(assert (=> b!139292 m!166025))

(declare-fun m!166035 () Bool)

(assert (=> b!139291 m!166035))

(declare-fun m!166037 () Bool)

(assert (=> b!139291 m!166037))

(declare-fun m!166039 () Bool)

(assert (=> mapNonEmpty!4834 m!166039))

(declare-fun m!166041 () Bool)

(assert (=> b!139286 m!166041))

(declare-fun m!166043 () Bool)

(assert (=> start!14710 m!166043))

(declare-fun m!166045 () Bool)

(assert (=> b!139297 m!166045))

(declare-fun m!166047 () Bool)

(assert (=> b!139297 m!166047))

(check-sat (not b_next!3029) tp_is_empty!2931 (not start!14710) b_and!8699 (not b_lambda!6227) (not b_next!3031) (not b!139297) (not b!139296) (not b!139292) (not b!139299) (not mapNonEmpty!4834) (not b!139286) (not mapNonEmpty!4833) b_and!8701 (not b!139291))
(check-sat b_and!8699 b_and!8701 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun b_lambda!6231 () Bool)

(assert (= b_lambda!6227 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6231)))

(check-sat (not b_next!3029) tp_is_empty!2931 (not start!14710) (not b_next!3031) (not b!139297) (not b!139296) (not b!139292) (not b!139299) (not mapNonEmpty!4834) (not b!139286) (not mapNonEmpty!4833) (not b_lambda!6231) b_and!8699 b_and!8701 (not b!139291))
(check-sat b_and!8699 b_and!8701 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!43275 () Bool)

(assert (=> d!43275 (= (array_inv!1453 (_keys!4699 newMap!16)) (bvsge (size!2587 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139291 d!43275))

(declare-fun d!43277 () Bool)

(assert (=> d!43277 (= (array_inv!1454 (_values!2923 newMap!16)) (bvsge (size!2588 (_values!2923 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139291 d!43277))

(declare-fun d!43279 () Bool)

(declare-fun res!66660 () Bool)

(declare-fun e!90926 () Bool)

(assert (=> d!43279 (=> (not res!66660) (not e!90926))))

(declare-fun simpleValid!96 (LongMapFixedSize!1152) Bool)

(assert (=> d!43279 (= res!66660 (simpleValid!96 newMap!16))))

(assert (=> d!43279 (= (valid!556 newMap!16) e!90926)))

(declare-fun b!139359 () Bool)

(declare-fun res!66661 () Bool)

(assert (=> b!139359 (=> (not res!66661) (not e!90926))))

(declare-fun arrayCountValidKeys!0 (array!4897 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!139359 (= res!66661 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (_size!625 newMap!16)))))

(declare-fun b!139360 () Bool)

(declare-fun res!66662 () Bool)

(assert (=> b!139360 (=> (not res!66662) (not e!90926))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4897 (_ BitVec 32)) Bool)

(assert (=> b!139360 (= res!66662 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139361 () Bool)

(assert (=> b!139361 (= e!90926 (arrayNoDuplicates!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 Nil!1743))))

(assert (= (and d!43279 res!66660) b!139359))

(assert (= (and b!139359 res!66661) b!139360))

(assert (= (and b!139360 res!66662) b!139361))

(declare-fun m!166089 () Bool)

(assert (=> d!43279 m!166089))

(declare-fun m!166091 () Bool)

(assert (=> b!139359 m!166091))

(declare-fun m!166093 () Bool)

(assert (=> b!139360 m!166093))

(declare-fun m!166095 () Bool)

(assert (=> b!139361 m!166095))

(assert (=> b!139286 d!43279))

(declare-fun d!43281 () Bool)

(assert (=> d!43281 (= (map!1442 newMap!16) (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bs!5814 () Bool)

(assert (= bs!5814 d!43281))

(declare-fun m!166097 () Bool)

(assert (=> bs!5814 m!166097))

(assert (=> b!139299 d!43281))

(declare-fun b!139404 () Bool)

(declare-fun e!90961 () Unit!4373)

(declare-fun lt!72908 () Unit!4373)

(assert (=> b!139404 (= e!90961 lt!72908)))

(declare-fun lt!72902 () ListLongMap!1745)

(declare-fun getCurrentListMapNoExtraKeys!145 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) ListLongMap!1745)

(assert (=> b!139404 (= lt!72902 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun lt!72904 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72904 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!72903 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72903 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!72906 () Unit!4373)

(declare-fun addStillContains!96 (ListLongMap!1745 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4373)

(assert (=> b!139404 (= lt!72906 (addStillContains!96 lt!72902 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72903))))

(declare-fun +!179 (ListLongMap!1745 tuple2!2698) ListLongMap!1745)

(assert (=> b!139404 (contains!923 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72903)))

(declare-fun lt!72897 () Unit!4373)

(assert (=> b!139404 (= lt!72897 lt!72906)))

(declare-fun lt!72905 () ListLongMap!1745)

(assert (=> b!139404 (= lt!72905 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun lt!72901 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72901 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!72900 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72900 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!72896 () Unit!4373)

(declare-fun addApplyDifferent!96 (ListLongMap!1745 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4373)

(assert (=> b!139404 (= lt!72896 (addApplyDifferent!96 lt!72905 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72900))))

(declare-fun apply!120 (ListLongMap!1745 (_ BitVec 64)) V!3555)

(assert (=> b!139404 (= (apply!120 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72900) (apply!120 lt!72905 lt!72900))))

(declare-fun lt!72892 () Unit!4373)

(assert (=> b!139404 (= lt!72892 lt!72896)))

(declare-fun lt!72887 () ListLongMap!1745)

(assert (=> b!139404 (= lt!72887 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun lt!72891 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72891 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!72888 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72888 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!72899 () Unit!4373)

(assert (=> b!139404 (= lt!72899 (addApplyDifferent!96 lt!72887 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72888))))

(assert (=> b!139404 (= (apply!120 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72888) (apply!120 lt!72887 lt!72888))))

(declare-fun lt!72895 () Unit!4373)

(assert (=> b!139404 (= lt!72895 lt!72899)))

(declare-fun lt!72889 () ListLongMap!1745)

(assert (=> b!139404 (= lt!72889 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun lt!72890 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72890 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!72894 () (_ BitVec 64))

(assert (=> b!139404 (= lt!72894 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!139404 (= lt!72908 (addApplyDifferent!96 lt!72889 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72894))))

(assert (=> b!139404 (= (apply!120 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72894) (apply!120 lt!72889 lt!72894))))

(declare-fun b!139405 () Bool)

(declare-fun e!90965 () ListLongMap!1745)

(declare-fun call!15401 () ListLongMap!1745)

(assert (=> b!139405 (= e!90965 call!15401)))

(declare-fun b!139406 () Bool)

(declare-fun e!90953 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!139406 (= e!90953 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139407 () Bool)

(declare-fun e!90957 () Bool)

(declare-fun call!15406 () Bool)

(assert (=> b!139407 (= e!90957 (not call!15406))))

(declare-fun b!139408 () Bool)

(declare-fun e!90960 () Bool)

(declare-fun lt!72907 () ListLongMap!1745)

(assert (=> b!139408 (= e!90960 (= (apply!120 lt!72907 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139408 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!139408 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun bm!15398 () Bool)

(assert (=> bm!15398 (= call!15406 (contains!923 lt!72907 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15399 () Bool)

(declare-fun call!15405 () ListLongMap!1745)

(assert (=> bm!15399 (= call!15401 call!15405)))

(declare-fun b!139410 () Bool)

(declare-fun e!90958 () Bool)

(declare-fun call!15403 () Bool)

(assert (=> b!139410 (= e!90958 (not call!15403))))

(declare-fun b!139411 () Bool)

(declare-fun e!90956 () Bool)

(assert (=> b!139411 (= e!90956 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139412 () Bool)

(declare-fun res!66681 () Bool)

(declare-fun e!90954 () Bool)

(assert (=> b!139412 (=> (not res!66681) (not e!90954))))

(assert (=> b!139412 (= res!66681 e!90958)))

(declare-fun c!26027 () Bool)

(assert (=> b!139412 (= c!26027 (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139413 () Bool)

(declare-fun res!66686 () Bool)

(assert (=> b!139413 (=> (not res!66686) (not e!90954))))

(declare-fun e!90964 () Bool)

(assert (=> b!139413 (= res!66686 e!90964)))

(declare-fun res!66685 () Bool)

(assert (=> b!139413 (=> res!66685 e!90964)))

(assert (=> b!139413 (= res!66685 (not e!90956))))

(declare-fun res!66682 () Bool)

(assert (=> b!139413 (=> (not res!66682) (not e!90956))))

(assert (=> b!139413 (= res!66682 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139414 () Bool)

(declare-fun e!90962 () Bool)

(assert (=> b!139414 (= e!90962 (= (apply!120 lt!72907 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!139415 () Bool)

(declare-fun e!90963 () ListLongMap!1745)

(assert (=> b!139415 (= e!90963 (+!179 call!15405 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139416 () Bool)

(declare-fun e!90955 () ListLongMap!1745)

(declare-fun call!15407 () ListLongMap!1745)

(assert (=> b!139416 (= e!90955 call!15407)))

(declare-fun b!139417 () Bool)

(assert (=> b!139417 (= e!90954 e!90957)))

(declare-fun c!26023 () Bool)

(assert (=> b!139417 (= c!26023 (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139418 () Bool)

(declare-fun c!26025 () Bool)

(assert (=> b!139418 (= c!26025 (and (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139418 (= e!90965 e!90955)))

(declare-fun b!139419 () Bool)

(assert (=> b!139419 (= e!90963 e!90965)))

(declare-fun c!26026 () Bool)

(assert (=> b!139419 (= c!26026 (and (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139420 () Bool)

(assert (=> b!139420 (= e!90955 call!15401)))

(declare-fun b!139421 () Bool)

(assert (=> b!139421 (= e!90964 e!90960)))

(declare-fun res!66689 () Bool)

(assert (=> b!139421 (=> (not res!66689) (not e!90960))))

(assert (=> b!139421 (= res!66689 (contains!923 lt!72907 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139421 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139409 () Bool)

(assert (=> b!139409 (= e!90957 e!90962)))

(declare-fun res!66683 () Bool)

(assert (=> b!139409 (= res!66683 call!15406)))

(assert (=> b!139409 (=> (not res!66683) (not e!90962))))

(declare-fun d!43283 () Bool)

(assert (=> d!43283 e!90954))

(declare-fun res!66687 () Bool)

(assert (=> d!43283 (=> (not res!66687) (not e!90954))))

(assert (=> d!43283 (= res!66687 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun lt!72898 () ListLongMap!1745)

(assert (=> d!43283 (= lt!72907 lt!72898)))

(declare-fun lt!72893 () Unit!4373)

(assert (=> d!43283 (= lt!72893 e!90961)))

(declare-fun c!26022 () Bool)

(assert (=> d!43283 (= c!26022 e!90953)))

(declare-fun res!66688 () Bool)

(assert (=> d!43283 (=> (not res!66688) (not e!90953))))

(assert (=> d!43283 (= res!66688 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43283 (= lt!72898 e!90963)))

(declare-fun c!26024 () Bool)

(assert (=> d!43283 (= c!26024 (and (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> d!43283 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!43283 (= (getCurrentListMap!561 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) lt!72907)))

(declare-fun b!139422 () Bool)

(declare-fun e!90959 () Bool)

(assert (=> b!139422 (= e!90959 (= (apply!120 lt!72907 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun bm!15400 () Bool)

(declare-fun call!15402 () ListLongMap!1745)

(declare-fun call!15404 () ListLongMap!1745)

(assert (=> bm!15400 (= call!15402 call!15404)))

(declare-fun bm!15401 () Bool)

(assert (=> bm!15401 (= call!15407 call!15402)))

(declare-fun b!139423 () Bool)

(assert (=> b!139423 (= e!90958 e!90959)))

(declare-fun res!66684 () Bool)

(assert (=> b!139423 (= res!66684 call!15403)))

(assert (=> b!139423 (=> (not res!66684) (not e!90959))))

(declare-fun bm!15402 () Bool)

(assert (=> bm!15402 (= call!15404 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun bm!15403 () Bool)

(assert (=> bm!15403 (= call!15405 (+!179 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!139424 () Bool)

(declare-fun Unit!4377 () Unit!4373)

(assert (=> b!139424 (= e!90961 Unit!4377)))

(declare-fun bm!15404 () Bool)

(assert (=> bm!15404 (= call!15403 (contains!923 lt!72907 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43283 c!26024) b!139415))

(assert (= (and d!43283 (not c!26024)) b!139419))

(assert (= (and b!139419 c!26026) b!139405))

(assert (= (and b!139419 (not c!26026)) b!139418))

(assert (= (and b!139418 c!26025) b!139420))

(assert (= (and b!139418 (not c!26025)) b!139416))

(assert (= (or b!139420 b!139416) bm!15401))

(assert (= (or b!139405 bm!15401) bm!15400))

(assert (= (or b!139405 b!139420) bm!15399))

(assert (= (or b!139415 bm!15400) bm!15402))

(assert (= (or b!139415 bm!15399) bm!15403))

(assert (= (and d!43283 res!66688) b!139406))

(assert (= (and d!43283 c!26022) b!139404))

(assert (= (and d!43283 (not c!26022)) b!139424))

(assert (= (and d!43283 res!66687) b!139413))

(assert (= (and b!139413 res!66682) b!139411))

(assert (= (and b!139413 (not res!66685)) b!139421))

(assert (= (and b!139421 res!66689) b!139408))

(assert (= (and b!139413 res!66686) b!139412))

(assert (= (and b!139412 c!26027) b!139423))

(assert (= (and b!139412 (not c!26027)) b!139410))

(assert (= (and b!139423 res!66684) b!139422))

(assert (= (or b!139423 b!139410) bm!15404))

(assert (= (and b!139412 res!66681) b!139417))

(assert (= (and b!139417 c!26023) b!139409))

(assert (= (and b!139417 (not c!26023)) b!139407))

(assert (= (and b!139409 res!66683) b!139414))

(assert (= (or b!139409 b!139407) bm!15398))

(declare-fun b_lambda!6233 () Bool)

(assert (=> (not b_lambda!6233) (not b!139408)))

(assert (=> b!139408 t!6326))

(declare-fun b_and!8711 () Bool)

(assert (= b_and!8699 (and (=> t!6326 result!4177) b_and!8711)))

(assert (=> b!139408 t!6328))

(declare-fun b_and!8713 () Bool)

(assert (= b_and!8701 (and (=> t!6328 result!4181) b_and!8713)))

(declare-fun m!166099 () Bool)

(assert (=> b!139404 m!166099))

(declare-fun m!166101 () Bool)

(assert (=> b!139404 m!166101))

(declare-fun m!166103 () Bool)

(assert (=> b!139404 m!166103))

(declare-fun m!166105 () Bool)

(assert (=> b!139404 m!166105))

(declare-fun m!166107 () Bool)

(assert (=> b!139404 m!166107))

(declare-fun m!166109 () Bool)

(assert (=> b!139404 m!166109))

(declare-fun m!166111 () Bool)

(assert (=> b!139404 m!166111))

(declare-fun m!166113 () Bool)

(assert (=> b!139404 m!166113))

(declare-fun m!166115 () Bool)

(assert (=> b!139404 m!166115))

(declare-fun m!166117 () Bool)

(assert (=> b!139404 m!166117))

(declare-fun m!166119 () Bool)

(assert (=> b!139404 m!166119))

(assert (=> b!139404 m!166109))

(assert (=> b!139404 m!166117))

(declare-fun m!166121 () Bool)

(assert (=> b!139404 m!166121))

(declare-fun m!166123 () Bool)

(assert (=> b!139404 m!166123))

(assert (=> b!139404 m!166107))

(declare-fun m!166125 () Bool)

(assert (=> b!139404 m!166125))

(declare-fun m!166127 () Bool)

(assert (=> b!139404 m!166127))

(declare-fun m!166129 () Bool)

(assert (=> b!139404 m!166129))

(assert (=> b!139404 m!166127))

(declare-fun m!166131 () Bool)

(assert (=> b!139404 m!166131))

(declare-fun m!166133 () Bool)

(assert (=> b!139414 m!166133))

(declare-fun m!166135 () Bool)

(assert (=> bm!15398 m!166135))

(declare-fun m!166137 () Bool)

(assert (=> d!43283 m!166137))

(assert (=> b!139421 m!166121))

(assert (=> b!139421 m!166121))

(declare-fun m!166139 () Bool)

(assert (=> b!139421 m!166139))

(assert (=> b!139406 m!166121))

(assert (=> b!139406 m!166121))

(declare-fun m!166141 () Bool)

(assert (=> b!139406 m!166141))

(assert (=> bm!15402 m!166099))

(declare-fun m!166143 () Bool)

(assert (=> b!139415 m!166143))

(declare-fun m!166145 () Bool)

(assert (=> b!139422 m!166145))

(assert (=> b!139411 m!166121))

(assert (=> b!139411 m!166121))

(assert (=> b!139411 m!166141))

(declare-fun m!166147 () Bool)

(assert (=> bm!15403 m!166147))

(declare-fun m!166149 () Bool)

(assert (=> bm!15404 m!166149))

(assert (=> b!139408 m!166121))

(declare-fun m!166151 () Bool)

(assert (=> b!139408 m!166151))

(assert (=> b!139408 m!166027))

(declare-fun m!166153 () Bool)

(assert (=> b!139408 m!166153))

(assert (=> b!139408 m!166121))

(declare-fun m!166155 () Bool)

(assert (=> b!139408 m!166155))

(assert (=> b!139408 m!166027))

(assert (=> b!139408 m!166151))

(assert (=> b!139299 d!43283))

(declare-fun d!43285 () Bool)

(assert (=> d!43285 (= (array_inv!1453 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvsge (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139297 d!43285))

(declare-fun d!43287 () Bool)

(assert (=> d!43287 (= (array_inv!1454 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvsge (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139297 d!43287))

(declare-fun c!26030 () Bool)

(declare-fun call!15410 () Bool)

(declare-fun bm!15407 () Bool)

(assert (=> bm!15407 (= call!15410 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))))

(declare-fun b!139435 () Bool)

(declare-fun e!90977 () Bool)

(assert (=> b!139435 (= e!90977 call!15410)))

(declare-fun b!139437 () Bool)

(assert (=> b!139437 (= e!90977 call!15410)))

(declare-fun b!139438 () Bool)

(declare-fun e!90974 () Bool)

(declare-fun e!90975 () Bool)

(assert (=> b!139438 (= e!90974 e!90975)))

(declare-fun res!66697 () Bool)

(assert (=> b!139438 (=> (not res!66697) (not e!90975))))

(declare-fun e!90976 () Bool)

(assert (=> b!139438 (= res!66697 (not e!90976))))

(declare-fun res!66698 () Bool)

(assert (=> b!139438 (=> (not res!66698) (not e!90976))))

(assert (=> b!139438 (= res!66698 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139439 () Bool)

(assert (=> b!139439 (= e!90975 e!90977)))

(assert (=> b!139439 (= c!26030 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun d!43289 () Bool)

(declare-fun res!66696 () Bool)

(assert (=> d!43289 (=> res!66696 e!90974)))

(assert (=> d!43289 (= res!66696 (bvsge from!355 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43289 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) from!355 Nil!1743) e!90974)))

(declare-fun b!139436 () Bool)

(declare-fun contains!924 (List!1746 (_ BitVec 64)) Bool)

(assert (=> b!139436 (= e!90976 (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43289 (not res!66696)) b!139438))

(assert (= (and b!139438 res!66698) b!139436))

(assert (= (and b!139438 res!66697) b!139439))

(assert (= (and b!139439 c!26030) b!139435))

(assert (= (and b!139439 (not c!26030)) b!139437))

(assert (= (or b!139435 b!139437) bm!15407))

(assert (=> bm!15407 m!166013))

(declare-fun m!166157 () Bool)

(assert (=> bm!15407 m!166157))

(assert (=> b!139438 m!166013))

(assert (=> b!139438 m!166013))

(declare-fun m!166159 () Bool)

(assert (=> b!139438 m!166159))

(assert (=> b!139439 m!166013))

(assert (=> b!139439 m!166013))

(assert (=> b!139439 m!166159))

(assert (=> b!139436 m!166013))

(assert (=> b!139436 m!166013))

(declare-fun m!166161 () Bool)

(assert (=> b!139436 m!166161))

(assert (=> b!139296 d!43289))

(declare-fun d!43291 () Bool)

(assert (=> d!43291 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) from!355 Nil!1743)))

(declare-fun lt!72911 () Unit!4373)

(declare-fun choose!39 (array!4897 (_ BitVec 32) (_ BitVec 32)) Unit!4373)

(assert (=> d!43291 (= lt!72911 (choose!39 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!43291 (bvslt (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!43291 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 from!355) lt!72911)))

(declare-fun bs!5815 () Bool)

(assert (= bs!5815 d!43291))

(assert (=> bs!5815 m!166011))

(declare-fun m!166163 () Bool)

(assert (=> bs!5815 m!166163))

(assert (=> b!139296 d!43291))

(declare-fun d!43293 () Bool)

(declare-fun res!66703 () Bool)

(declare-fun e!90982 () Bool)

(assert (=> d!43293 (=> res!66703 e!90982)))

(assert (=> d!43293 (= res!66703 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43293 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!90982)))

(declare-fun b!139444 () Bool)

(declare-fun e!90983 () Bool)

(assert (=> b!139444 (= e!90982 e!90983)))

(declare-fun res!66704 () Bool)

(assert (=> b!139444 (=> (not res!66704) (not e!90983))))

(assert (=> b!139444 (= res!66704 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139445 () Bool)

(assert (=> b!139445 (= e!90983 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!43293 (not res!66703)) b!139444))

(assert (= (and b!139444 res!66704) b!139445))

(assert (=> d!43293 m!166121))

(assert (=> b!139445 m!166013))

(declare-fun m!166165 () Bool)

(assert (=> b!139445 m!166165))

(assert (=> b!139296 d!43293))

(declare-fun d!43295 () Bool)

(declare-fun e!90986 () Bool)

(assert (=> d!43295 e!90986))

(declare-fun c!26033 () Bool)

(assert (=> d!43295 (= c!26033 (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!72914 () Unit!4373)

(declare-fun choose!855 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4373)

(assert (=> d!43295 (= lt!72914 (choose!855 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(assert (=> d!43295 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!43295 (= (lemmaListMapContainsThenArrayContainsFrom!139 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) lt!72914)))

(declare-fun b!139450 () Bool)

(assert (=> b!139450 (= e!90986 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!139451 () Bool)

(assert (=> b!139451 (= e!90986 (ite (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43295 c!26033) b!139450))

(assert (= (and d!43295 (not c!26033)) b!139451))

(assert (=> d!43295 m!166013))

(declare-fun m!166167 () Bool)

(assert (=> d!43295 m!166167))

(assert (=> d!43295 m!166137))

(assert (=> b!139450 m!166013))

(assert (=> b!139450 m!166017))

(assert (=> b!139296 d!43295))

(declare-fun d!43297 () Bool)

(declare-fun e!90991 () Bool)

(assert (=> d!43297 e!90991))

(declare-fun res!66707 () Bool)

(assert (=> d!43297 (=> res!66707 e!90991)))

(declare-fun lt!72925 () Bool)

(assert (=> d!43297 (= res!66707 (not lt!72925))))

(declare-fun lt!72923 () Bool)

(assert (=> d!43297 (= lt!72925 lt!72923)))

(declare-fun lt!72924 () Unit!4373)

(declare-fun e!90992 () Unit!4373)

(assert (=> d!43297 (= lt!72924 e!90992)))

(declare-fun c!26036 () Bool)

(assert (=> d!43297 (= c!26036 lt!72923)))

(declare-fun containsKey!180 (List!1745 (_ BitVec 64)) Bool)

(assert (=> d!43297 (= lt!72923 (containsKey!180 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43297 (= (contains!923 lt!72825 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!72925)))

(declare-fun b!139458 () Bool)

(declare-fun lt!72926 () Unit!4373)

(assert (=> b!139458 (= e!90992 lt!72926)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!128 (List!1745 (_ BitVec 64)) Unit!4373)

(assert (=> b!139458 (= lt!72926 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-datatypes ((Option!182 0))(
  ( (Some!181 (v!3284 V!3555)) (None!180) )
))
(declare-fun isDefined!129 (Option!182) Bool)

(declare-fun getValueByKey!176 (List!1745 (_ BitVec 64)) Option!182)

(assert (=> b!139458 (isDefined!129 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139459 () Bool)

(declare-fun Unit!4378 () Unit!4373)

(assert (=> b!139459 (= e!90992 Unit!4378)))

(declare-fun b!139460 () Bool)

(assert (=> b!139460 (= e!90991 (isDefined!129 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (= (and d!43297 c!26036) b!139458))

(assert (= (and d!43297 (not c!26036)) b!139459))

(assert (= (and d!43297 (not res!66707)) b!139460))

(assert (=> d!43297 m!166013))

(declare-fun m!166169 () Bool)

(assert (=> d!43297 m!166169))

(assert (=> b!139458 m!166013))

(declare-fun m!166171 () Bool)

(assert (=> b!139458 m!166171))

(assert (=> b!139458 m!166013))

(declare-fun m!166173 () Bool)

(assert (=> b!139458 m!166173))

(assert (=> b!139458 m!166173))

(declare-fun m!166175 () Bool)

(assert (=> b!139458 m!166175))

(assert (=> b!139460 m!166013))

(assert (=> b!139460 m!166173))

(assert (=> b!139460 m!166173))

(assert (=> b!139460 m!166175))

(assert (=> b!139292 d!43297))

(declare-datatypes ((SeekEntryResult!279 0))(
  ( (MissingZero!279 (index!3279 (_ BitVec 32))) (Found!279 (index!3280 (_ BitVec 32))) (Intermediate!279 (undefined!1091 Bool) (index!3281 (_ BitVec 32)) (x!16136 (_ BitVec 32))) (Undefined!279) (MissingVacant!279 (index!3282 (_ BitVec 32))) )
))
(declare-fun lt!73007 () SeekEntryResult!279)

(declare-fun lt!73003 () SeekEntryResult!279)

(declare-fun c!26061 () Bool)

(declare-fun c!26067 () Bool)

(declare-fun c!26062 () Bool)

(declare-fun c!26066 () Bool)

(declare-fun bm!15456 () Bool)

(declare-fun c!26069 () Bool)

(declare-fun lt!72993 () SeekEntryResult!279)

(declare-fun call!15464 () Bool)

(declare-fun lt!72982 () SeekEntryResult!279)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!15456 (= call!15464 (inRange!0 (ite c!26062 (ite c!26067 (index!3280 lt!73007) (ite c!26066 (index!3279 lt!72982) (index!3282 lt!72982))) (ite c!26061 (index!3280 lt!72993) (ite c!26069 (index!3279 lt!73003) (index!3282 lt!73003)))) (mask!7280 newMap!16)))))

(declare-fun b!139537 () Bool)

(declare-fun res!66744 () Bool)

(assert (=> b!139537 (= res!66744 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73003)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91052 () Bool)

(assert (=> b!139537 (=> (not res!66744) (not e!91052))))

(declare-fun b!139538 () Bool)

(declare-fun res!66740 () Bool)

(declare-fun call!15473 () Bool)

(assert (=> b!139538 (= res!66740 call!15473)))

(declare-fun e!91036 () Bool)

(assert (=> b!139538 (=> (not res!66740) (not e!91036))))

(declare-fun bm!15457 () Bool)

(declare-fun call!15472 () SeekEntryResult!279)

(declare-fun call!15467 () SeekEntryResult!279)

(assert (=> bm!15457 (= call!15472 call!15467)))

(declare-fun call!15465 () ListLongMap!1745)

(declare-fun b!139539 () Bool)

(declare-fun call!15459 () ListLongMap!1745)

(declare-fun e!91044 () Bool)

(assert (=> b!139539 (= e!91044 (= call!15465 (+!179 call!15459 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15458 () Bool)

(declare-fun call!15461 () Unit!4373)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4373)

(assert (=> bm!15458 (= call!15461 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(declare-fun b!139540 () Bool)

(declare-fun e!91051 () Bool)

(declare-fun call!15480 () Bool)

(assert (=> b!139540 (= e!91051 (not call!15480))))

(declare-fun b!139541 () Bool)

(declare-fun lt!73005 () Unit!4373)

(declare-fun lt!72990 () Unit!4373)

(assert (=> b!139541 (= lt!73005 lt!72990)))

(declare-fun call!15474 () Bool)

(assert (=> b!139541 call!15474))

(declare-fun lt!72983 () array!4899)

(declare-fun lt!72999 () SeekEntryResult!279)

(declare-fun lemmaValidKeyInArrayIsInListMap!126 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) Unit!4373)

(assert (=> b!139541 (= lt!72990 (lemmaValidKeyInArrayIsInListMap!126 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139541 (= lt!72983 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))

(declare-fun lt!73002 () Unit!4373)

(declare-fun lt!73004 () Unit!4373)

(assert (=> b!139541 (= lt!73002 lt!73004)))

(declare-fun call!15470 () ListLongMap!1745)

(assert (=> b!139541 (= call!15470 (getCurrentListMap!561 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4373)

(assert (=> b!139541 (= lt!73004 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(declare-fun lt!72986 () Unit!4373)

(declare-fun e!91041 () Unit!4373)

(assert (=> b!139541 (= lt!72986 e!91041)))

(declare-fun call!15479 () ListLongMap!1745)

(assert (=> b!139541 (= c!26061 (contains!923 call!15479 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91033 () tuple2!2700)

(assert (=> b!139541 (= e!91033 (tuple2!2701 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (_size!625 newMap!16) (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (_vacant!625 newMap!16))))))

(declare-fun b!139542 () Bool)

(declare-fun c!26068 () Bool)

(assert (=> b!139542 (= c!26068 ((_ is MissingVacant!279) lt!73003))))

(declare-fun e!91048 () Bool)

(declare-fun e!91046 () Bool)

(assert (=> b!139542 (= e!91048 e!91046)))

(declare-fun b!139543 () Bool)

(declare-fun lt!73000 () tuple2!2700)

(declare-fun call!15460 () tuple2!2700)

(assert (=> b!139543 (= lt!73000 call!15460)))

(assert (=> b!139543 (= e!91033 (tuple2!2701 (_1!1361 lt!73000) (_2!1361 lt!73000)))))

(declare-fun b!139544 () Bool)

(declare-fun e!91043 () tuple2!2700)

(declare-fun lt!72984 () tuple2!2700)

(assert (=> b!139544 (= e!91043 (tuple2!2701 (_1!1361 lt!72984) (_2!1361 lt!72984)))))

(assert (=> b!139544 (= lt!72984 call!15460)))

(declare-fun b!139545 () Bool)

(declare-fun e!91039 () Unit!4373)

(declare-fun lt!72996 () Unit!4373)

(assert (=> b!139545 (= e!91039 lt!72996)))

(assert (=> b!139545 (= lt!72996 call!15461)))

(assert (=> b!139545 (= lt!72982 call!15472)))

(assert (=> b!139545 (= c!26066 ((_ is MissingZero!279) lt!72982))))

(declare-fun e!91045 () Bool)

(assert (=> b!139545 e!91045))

(declare-fun bm!15459 () Bool)

(declare-fun call!15475 () ListLongMap!1745)

(assert (=> bm!15459 (= call!15475 call!15479)))

(declare-fun b!139546 () Bool)

(declare-fun c!26072 () Bool)

(assert (=> b!139546 (= c!26072 ((_ is MissingVacant!279) lt!72982))))

(declare-fun e!91047 () Bool)

(assert (=> b!139546 (= e!91045 e!91047)))

(declare-fun bm!15460 () Bool)

(assert (=> bm!15460 (= call!15473 call!15464)))

(declare-fun bm!15461 () Bool)

(declare-fun call!15471 () Unit!4373)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4373)

(assert (=> bm!15461 (= call!15471 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15462 () Bool)

(declare-fun call!15468 () Bool)

(assert (=> bm!15462 (= call!15468 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!15463 () Bool)

(declare-fun call!15478 () ListLongMap!1745)

(declare-fun c!26071 () Bool)

(declare-fun c!26064 () Bool)

(assert (=> bm!15463 (= call!15470 (+!179 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15464 () Bool)

(declare-fun call!15469 () Bool)

(assert (=> bm!15464 (= call!15469 call!15464)))

(declare-fun e!91040 () Bool)

(declare-fun b!139547 () Bool)

(assert (=> b!139547 (= e!91040 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73007)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139548 () Bool)

(declare-fun res!66745 () Bool)

(assert (=> b!139548 (= res!66745 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!72982)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91034 () Bool)

(assert (=> b!139548 (=> (not res!66745) (not e!91034))))

(declare-fun bm!15465 () Bool)

(assert (=> bm!15465 (= call!15480 call!15468)))

(declare-fun b!139549 () Bool)

(assert (=> b!139549 (= e!91036 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72993)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139550 () Bool)

(declare-fun lt!72997 () Unit!4373)

(declare-fun lt!72998 () Unit!4373)

(assert (=> b!139550 (= lt!72997 lt!72998)))

(declare-fun call!15462 () ListLongMap!1745)

(assert (=> b!139550 (= call!15462 call!15478)))

(declare-fun lt!72995 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!65 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4373)

(assert (=> b!139550 (= lt!72998 (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72995 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139550 (= lt!72995 (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!91050 () tuple2!2700)

(assert (=> b!139550 (= e!91050 (tuple2!2701 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (_size!625 newMap!16) (_keys!4699 newMap!16) (_values!2923 newMap!16) (_vacant!625 newMap!16))))))

(declare-fun b!139551 () Bool)

(declare-fun Unit!4379 () Unit!4373)

(assert (=> b!139551 (= e!91039 Unit!4379)))

(declare-fun lt!72987 () Unit!4373)

(assert (=> b!139551 (= lt!72987 call!15471)))

(assert (=> b!139551 (= lt!73007 call!15472)))

(declare-fun res!66742 () Bool)

(assert (=> b!139551 (= res!66742 ((_ is Found!279) lt!73007))))

(assert (=> b!139551 (=> (not res!66742) (not e!91040))))

(assert (=> b!139551 e!91040))

(declare-fun lt!73006 () Unit!4373)

(assert (=> b!139551 (= lt!73006 lt!72987)))

(assert (=> b!139551 false))

(declare-fun b!139552 () Bool)

(declare-fun res!66743 () Bool)

(declare-fun e!91037 () Bool)

(assert (=> b!139552 (=> (not res!66743) (not e!91037))))

(declare-fun call!15482 () Bool)

(assert (=> b!139552 (= res!66743 call!15482)))

(assert (=> b!139552 (= e!91048 e!91037)))

(declare-fun b!139553 () Bool)

(declare-fun e!91049 () tuple2!2700)

(declare-fun e!91038 () tuple2!2700)

(assert (=> b!139553 (= e!91049 e!91038)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4897 (_ BitVec 32)) SeekEntryResult!279)

(assert (=> b!139553 (= lt!72999 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> b!139553 (= c!26062 ((_ is Undefined!279) lt!72999))))

(declare-fun b!139554 () Bool)

(declare-fun e!91035 () Bool)

(assert (=> b!139554 (= e!91035 (= call!15459 call!15465))))

(declare-fun b!139555 () Bool)

(declare-fun res!66737 () Bool)

(assert (=> b!139555 (=> (not res!66737) (not e!91037))))

(assert (=> b!139555 (= res!66737 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!73003)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139556 () Bool)

(declare-fun e!91042 () Bool)

(assert (=> b!139556 (= e!91042 e!91035)))

(declare-fun c!26065 () Bool)

(declare-fun lt!72992 () tuple2!2700)

(assert (=> b!139556 (= c!26065 (_1!1361 lt!72992))))

(declare-fun b!139557 () Bool)

(assert (=> b!139557 (= e!91047 e!91034)))

(declare-fun res!66746 () Bool)

(declare-fun call!15466 () Bool)

(assert (=> b!139557 (= res!66746 call!15466)))

(assert (=> b!139557 (=> (not res!66746) (not e!91034))))

(declare-fun b!139558 () Bool)

(assert (=> b!139558 (= e!91046 e!91052)))

(declare-fun res!66748 () Bool)

(assert (=> b!139558 (= res!66748 call!15482)))

(assert (=> b!139558 (=> (not res!66748) (not e!91052))))

(declare-fun d!43299 () Bool)

(assert (=> d!43299 e!91042))

(declare-fun res!66747 () Bool)

(assert (=> d!43299 (=> (not res!66747) (not e!91042))))

(assert (=> d!43299 (= res!66747 (valid!556 (_2!1361 lt!72992)))))

(assert (=> d!43299 (= lt!72992 e!91049)))

(assert (=> d!43299 (= c!26064 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvneg (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43299 (valid!556 newMap!16)))

(assert (=> d!43299 (= (update!211 newMap!16 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!72992)))

(declare-fun bm!15466 () Bool)

(declare-fun c!26063 () Bool)

(declare-fun updateHelperNewKey!65 (LongMapFixedSize!1152 (_ BitVec 64) V!3555 (_ BitVec 32)) tuple2!2700)

(assert (=> bm!15466 (= call!15460 (updateHelperNewKey!65 newMap!16 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(declare-fun bm!15467 () Bool)

(declare-fun call!15477 () ListLongMap!1745)

(assert (=> bm!15467 (= call!15477 (getCurrentListMap!561 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!139559 () Bool)

(declare-fun lt!72981 () Unit!4373)

(assert (=> b!139559 (= e!91041 lt!72981)))

(assert (=> b!139559 (= lt!72981 call!15471)))

(declare-fun call!15476 () SeekEntryResult!279)

(assert (=> b!139559 (= lt!72993 call!15476)))

(declare-fun res!66749 () Bool)

(assert (=> b!139559 (= res!66749 ((_ is Found!279) lt!72993))))

(assert (=> b!139559 (=> (not res!66749) (not e!91036))))

(assert (=> b!139559 e!91036))

(declare-fun b!139560 () Bool)

(assert (=> b!139560 (= e!91035 e!91044)))

(declare-fun res!66741 () Bool)

(assert (=> b!139560 (= res!66741 (contains!923 call!15465 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!139560 (=> (not res!66741) (not e!91044))))

(declare-fun b!139561 () Bool)

(assert (=> b!139561 (= e!91043 e!91033)))

(declare-fun c!26070 () Bool)

(assert (=> b!139561 (= c!26070 ((_ is MissingZero!279) lt!72999))))

(declare-fun bm!15468 () Bool)

(assert (=> bm!15468 (= call!15465 (map!1442 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))

(declare-fun b!139562 () Bool)

(declare-fun lt!72988 () Unit!4373)

(declare-fun lt!72985 () Unit!4373)

(assert (=> b!139562 (= lt!72988 lt!72985)))

(assert (=> b!139562 (= call!15462 call!15475)))

(declare-fun lt!72994 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4373)

(assert (=> b!139562 (= lt!72985 (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139562 (= lt!72994 (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!139562 (= e!91050 (tuple2!2701 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!625 newMap!16) (_keys!4699 newMap!16) (_values!2923 newMap!16) (_vacant!625 newMap!16))))))

(declare-fun b!139563 () Bool)

(declare-fun res!66739 () Bool)

(assert (=> b!139563 (=> (not res!66739) (not e!91051))))

(assert (=> b!139563 (= res!66739 call!15466)))

(assert (=> b!139563 (= e!91045 e!91051)))

(declare-fun bm!15469 () Bool)

(assert (=> bm!15469 (= call!15476 call!15467)))

(declare-fun bm!15470 () Bool)

(assert (=> bm!15470 (= call!15478 call!15477)))

(declare-fun b!139564 () Bool)

(declare-fun lt!73001 () Unit!4373)

(assert (=> b!139564 (= lt!73001 e!91039)))

(assert (=> b!139564 (= c!26067 call!15474)))

(assert (=> b!139564 (= e!91038 (tuple2!2701 false newMap!16))))

(declare-fun bm!15471 () Bool)

(declare-fun call!15463 () ListLongMap!1745)

(assert (=> bm!15471 (= call!15463 call!15477)))

(declare-fun b!139565 () Bool)

(assert (=> b!139565 (= e!91046 ((_ is Undefined!279) lt!73003))))

(declare-fun b!139566 () Bool)

(assert (=> b!139566 (= e!91034 (not call!15480))))

(declare-fun b!139567 () Bool)

(declare-fun call!15481 () Bool)

(assert (=> b!139567 (= e!91037 (not call!15481))))

(declare-fun b!139568 () Bool)

(assert (=> b!139568 (= e!91049 e!91050)))

(assert (=> b!139568 (= c!26071 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15472 () Bool)

(assert (=> bm!15472 (= call!15466 call!15469)))

(declare-fun b!139569 () Bool)

(assert (=> b!139569 (= e!91052 (not call!15481))))

(declare-fun b!139570 () Bool)

(declare-fun res!66736 () Bool)

(assert (=> b!139570 (=> (not res!66736) (not e!91051))))

(assert (=> b!139570 (= res!66736 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!72982)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139571 () Bool)

(assert (=> b!139571 (= e!91047 ((_ is Undefined!279) lt!72982))))

(declare-fun bm!15473 () Bool)

(assert (=> bm!15473 (= call!15467 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun bm!15474 () Bool)

(assert (=> bm!15474 (= call!15481 call!15468)))

(declare-fun b!139572 () Bool)

(declare-fun res!66738 () Bool)

(assert (=> b!139572 (= res!66738 call!15469)))

(assert (=> b!139572 (=> (not res!66738) (not e!91040))))

(declare-fun bm!15475 () Bool)

(assert (=> bm!15475 (= call!15459 (map!1442 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))

(declare-fun bm!15476 () Bool)

(assert (=> bm!15476 (= call!15482 call!15473)))

(declare-fun b!139573 () Bool)

(assert (=> b!139573 (= c!26063 ((_ is MissingVacant!279) lt!72999))))

(assert (=> b!139573 (= e!91038 e!91043)))

(declare-fun bm!15477 () Bool)

(assert (=> bm!15477 (= call!15479 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!139574 () Bool)

(declare-fun Unit!4380 () Unit!4373)

(assert (=> b!139574 (= e!91041 Unit!4380)))

(declare-fun lt!72991 () Unit!4373)

(assert (=> b!139574 (= lt!72991 call!15461)))

(assert (=> b!139574 (= lt!73003 call!15476)))

(assert (=> b!139574 (= c!26069 ((_ is MissingZero!279) lt!73003))))

(assert (=> b!139574 e!91048))

(declare-fun lt!72989 () Unit!4373)

(assert (=> b!139574 (= lt!72989 lt!72991)))

(assert (=> b!139574 false))

(declare-fun bm!15478 () Bool)

(assert (=> bm!15478 (= call!15462 call!15470)))

(declare-fun bm!15479 () Bool)

(assert (=> bm!15479 (= call!15474 (contains!923 call!15463 (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!43299 c!26064) b!139568))

(assert (= (and d!43299 (not c!26064)) b!139553))

(assert (= (and b!139568 c!26071) b!139550))

(assert (= (and b!139568 (not c!26071)) b!139562))

(assert (= (or b!139550 b!139562) bm!15459))

(assert (= (or b!139550 b!139562) bm!15470))

(assert (= (or b!139550 b!139562) bm!15478))

(assert (= (and b!139553 c!26062) b!139564))

(assert (= (and b!139553 (not c!26062)) b!139573))

(assert (= (and b!139564 c!26067) b!139551))

(assert (= (and b!139564 (not c!26067)) b!139545))

(assert (= (and b!139551 res!66742) b!139572))

(assert (= (and b!139572 res!66738) b!139547))

(assert (= (and b!139545 c!26066) b!139563))

(assert (= (and b!139545 (not c!26066)) b!139546))

(assert (= (and b!139563 res!66739) b!139570))

(assert (= (and b!139570 res!66736) b!139540))

(assert (= (and b!139546 c!26072) b!139557))

(assert (= (and b!139546 (not c!26072)) b!139571))

(assert (= (and b!139557 res!66746) b!139548))

(assert (= (and b!139548 res!66745) b!139566))

(assert (= (or b!139563 b!139557) bm!15472))

(assert (= (or b!139540 b!139566) bm!15465))

(assert (= (or b!139572 bm!15472) bm!15464))

(assert (= (or b!139551 b!139545) bm!15457))

(assert (= (and b!139573 c!26063) b!139544))

(assert (= (and b!139573 (not c!26063)) b!139561))

(assert (= (and b!139561 c!26070) b!139543))

(assert (= (and b!139561 (not c!26070)) b!139541))

(assert (= (and b!139541 c!26061) b!139559))

(assert (= (and b!139541 (not c!26061)) b!139574))

(assert (= (and b!139559 res!66749) b!139538))

(assert (= (and b!139538 res!66740) b!139549))

(assert (= (and b!139574 c!26069) b!139552))

(assert (= (and b!139574 (not c!26069)) b!139542))

(assert (= (and b!139552 res!66743) b!139555))

(assert (= (and b!139555 res!66737) b!139567))

(assert (= (and b!139542 c!26068) b!139558))

(assert (= (and b!139542 (not c!26068)) b!139565))

(assert (= (and b!139558 res!66748) b!139537))

(assert (= (and b!139537 res!66744) b!139569))

(assert (= (or b!139552 b!139558) bm!15476))

(assert (= (or b!139567 b!139569) bm!15474))

(assert (= (or b!139538 bm!15476) bm!15460))

(assert (= (or b!139559 b!139574) bm!15469))

(assert (= (or b!139544 b!139543) bm!15466))

(assert (= (or bm!15457 bm!15469) bm!15473))

(assert (= (or b!139551 b!139559) bm!15461))

(assert (= (or bm!15464 bm!15460) bm!15456))

(assert (= (or bm!15465 bm!15474) bm!15462))

(assert (= (or b!139545 b!139574) bm!15458))

(assert (= (or b!139564 b!139541) bm!15471))

(assert (= (or b!139564 b!139541) bm!15479))

(assert (= (or bm!15470 bm!15471) bm!15467))

(assert (= (or bm!15459 b!139541) bm!15477))

(assert (= (or bm!15478 b!139541) bm!15463))

(assert (= (and d!43299 res!66747) b!139556))

(assert (= (and b!139556 c!26065) b!139560))

(assert (= (and b!139556 (not c!26065)) b!139554))

(assert (= (and b!139560 res!66741) b!139539))

(assert (= (or b!139560 b!139539 b!139554) bm!15468))

(assert (= (or b!139539 b!139554) bm!15475))

(declare-fun m!166177 () Bool)

(assert (=> b!139570 m!166177))

(assert (=> b!139550 m!166029))

(declare-fun m!166179 () Bool)

(assert (=> b!139550 m!166179))

(assert (=> b!139560 m!166013))

(declare-fun m!166181 () Bool)

(assert (=> b!139560 m!166181))

(assert (=> b!139562 m!166029))

(declare-fun m!166183 () Bool)

(assert (=> b!139562 m!166183))

(declare-fun m!166185 () Bool)

(assert (=> b!139549 m!166185))

(declare-fun m!166187 () Bool)

(assert (=> d!43299 m!166187))

(assert (=> d!43299 m!166041))

(declare-fun m!166189 () Bool)

(assert (=> bm!15477 m!166189))

(declare-fun m!166191 () Bool)

(assert (=> b!139547 m!166191))

(declare-fun m!166193 () Bool)

(assert (=> bm!15456 m!166193))

(declare-fun m!166195 () Bool)

(assert (=> b!139537 m!166195))

(declare-fun m!166197 () Bool)

(assert (=> bm!15467 m!166197))

(declare-fun m!166199 () Bool)

(assert (=> bm!15479 m!166199))

(declare-fun m!166201 () Bool)

(assert (=> bm!15479 m!166201))

(assert (=> bm!15473 m!166013))

(declare-fun m!166203 () Bool)

(assert (=> bm!15473 m!166203))

(declare-fun m!166205 () Bool)

(assert (=> b!139555 m!166205))

(assert (=> bm!15461 m!166013))

(declare-fun m!166207 () Bool)

(assert (=> bm!15461 m!166207))

(assert (=> bm!15458 m!166013))

(declare-fun m!166209 () Bool)

(assert (=> bm!15458 m!166209))

(assert (=> bm!15466 m!166013))

(assert (=> bm!15466 m!166029))

(declare-fun m!166211 () Bool)

(assert (=> bm!15466 m!166211))

(assert (=> b!139553 m!166013))

(assert (=> b!139553 m!166203))

(assert (=> bm!15462 m!166013))

(declare-fun m!166213 () Bool)

(assert (=> bm!15462 m!166213))

(declare-fun m!166215 () Bool)

(assert (=> b!139539 m!166215))

(declare-fun m!166217 () Bool)

(assert (=> b!139541 m!166217))

(assert (=> b!139541 m!166013))

(assert (=> b!139541 m!166029))

(declare-fun m!166219 () Bool)

(assert (=> b!139541 m!166219))

(declare-fun m!166221 () Bool)

(assert (=> b!139541 m!166221))

(declare-fun m!166223 () Bool)

(assert (=> b!139541 m!166223))

(assert (=> b!139541 m!166013))

(declare-fun m!166225 () Bool)

(assert (=> b!139541 m!166225))

(declare-fun m!166227 () Bool)

(assert (=> bm!15468 m!166227))

(declare-fun m!166229 () Bool)

(assert (=> bm!15463 m!166229))

(declare-fun m!166231 () Bool)

(assert (=> b!139548 m!166231))

(declare-fun m!166233 () Bool)

(assert (=> bm!15475 m!166233))

(assert (=> b!139292 d!43299))

(declare-fun d!43301 () Bool)

(declare-fun c!26075 () Bool)

(assert (=> d!43301 (= c!26075 ((_ is ValueCellFull!1122) (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91055 () V!3555)

(assert (=> d!43301 (= (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91055)))

(declare-fun b!139579 () Bool)

(declare-fun get!1529 (ValueCell!1122 V!3555) V!3555)

(assert (=> b!139579 (= e!91055 (get!1529 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139580 () Bool)

(declare-fun get!1530 (ValueCell!1122 V!3555) V!3555)

(assert (=> b!139580 (= e!91055 (get!1530 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43301 c!26075) b!139579))

(assert (= (and d!43301 (not c!26075)) b!139580))

(assert (=> b!139579 m!166025))

(assert (=> b!139579 m!166027))

(declare-fun m!166235 () Bool)

(assert (=> b!139579 m!166235))

(assert (=> b!139580 m!166025))

(assert (=> b!139580 m!166027))

(declare-fun m!166237 () Bool)

(assert (=> b!139580 m!166237))

(assert (=> b!139292 d!43301))

(declare-fun d!43303 () Bool)

(assert (=> d!43303 (= (valid!557 thiss!992) (valid!556 (v!3280 (underlying!480 thiss!992))))))

(declare-fun bs!5816 () Bool)

(assert (= bs!5816 d!43303))

(declare-fun m!166239 () Bool)

(assert (=> bs!5816 m!166239))

(assert (=> start!14710 d!43303))

(declare-fun mapNonEmpty!4843 () Bool)

(declare-fun mapRes!4843 () Bool)

(declare-fun tp!11575 () Bool)

(declare-fun e!91060 () Bool)

(assert (=> mapNonEmpty!4843 (= mapRes!4843 (and tp!11575 e!91060))))

(declare-fun mapRest!4843 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4843 () (_ BitVec 32))

(declare-fun mapValue!4843 () ValueCell!1122)

(assert (=> mapNonEmpty!4843 (= mapRest!4833 (store mapRest!4843 mapKey!4843 mapValue!4843))))

(declare-fun b!139587 () Bool)

(assert (=> b!139587 (= e!91060 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4843 () Bool)

(assert (=> mapIsEmpty!4843 mapRes!4843))

(declare-fun condMapEmpty!4843 () Bool)

(declare-fun mapDefault!4843 () ValueCell!1122)

(assert (=> mapNonEmpty!4833 (= condMapEmpty!4843 (= mapRest!4833 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4843)))))

(declare-fun e!91061 () Bool)

(assert (=> mapNonEmpty!4833 (= tp!11560 (and e!91061 mapRes!4843))))

(declare-fun b!139588 () Bool)

(assert (=> b!139588 (= e!91061 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4833 condMapEmpty!4843) mapIsEmpty!4843))

(assert (= (and mapNonEmpty!4833 (not condMapEmpty!4843)) mapNonEmpty!4843))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1122) mapValue!4843)) b!139587))

(assert (= (and mapNonEmpty!4833 ((_ is ValueCellFull!1122) mapDefault!4843)) b!139588))

(declare-fun m!166241 () Bool)

(assert (=> mapNonEmpty!4843 m!166241))

(declare-fun mapNonEmpty!4844 () Bool)

(declare-fun mapRes!4844 () Bool)

(declare-fun tp!11576 () Bool)

(declare-fun e!91062 () Bool)

(assert (=> mapNonEmpty!4844 (= mapRes!4844 (and tp!11576 e!91062))))

(declare-fun mapKey!4844 () (_ BitVec 32))

(declare-fun mapRest!4844 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapValue!4844 () ValueCell!1122)

(assert (=> mapNonEmpty!4844 (= mapRest!4834 (store mapRest!4844 mapKey!4844 mapValue!4844))))

(declare-fun b!139589 () Bool)

(assert (=> b!139589 (= e!91062 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4844 () Bool)

(assert (=> mapIsEmpty!4844 mapRes!4844))

(declare-fun condMapEmpty!4844 () Bool)

(declare-fun mapDefault!4844 () ValueCell!1122)

(assert (=> mapNonEmpty!4834 (= condMapEmpty!4844 (= mapRest!4834 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4844)))))

(declare-fun e!91063 () Bool)

(assert (=> mapNonEmpty!4834 (= tp!11558 (and e!91063 mapRes!4844))))

(declare-fun b!139590 () Bool)

(assert (=> b!139590 (= e!91063 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4834 condMapEmpty!4844) mapIsEmpty!4844))

(assert (= (and mapNonEmpty!4834 (not condMapEmpty!4844)) mapNonEmpty!4844))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1122) mapValue!4844)) b!139589))

(assert (= (and mapNonEmpty!4834 ((_ is ValueCellFull!1122) mapDefault!4844)) b!139590))

(declare-fun m!166243 () Bool)

(assert (=> mapNonEmpty!4844 m!166243))

(declare-fun b_lambda!6235 () Bool)

(assert (= b_lambda!6233 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6235)))

(check-sat (not bm!15462) (not bm!15461) (not d!43299) (not b!139460) (not b!139579) (not b!139360) (not b_next!3031) (not b!139404) (not b!139411) (not b!139414) (not d!43283) (not d!43291) (not b!139421) (not b_next!3029) (not b!139415) (not d!43297) (not b!139562) tp_is_empty!2931 (not b_lambda!6235) (not bm!15473) (not b_lambda!6231) (not d!43279) (not b!139550) (not bm!15407) (not bm!15456) (not b!139539) (not b!139450) (not bm!15477) (not d!43295) b_and!8711 (not b!139436) (not b!139445) (not bm!15475) (not mapNonEmpty!4844) (not b!139541) (not d!43281) (not bm!15458) (not b!139458) (not mapNonEmpty!4843) (not bm!15468) (not b!139553) (not bm!15402) (not b!139438) (not b!139580) (not d!43303) (not bm!15404) (not b!139408) (not bm!15463) (not b!139439) (not bm!15479) (not b!139422) (not b!139361) (not b!139406) b_and!8713 (not b!139560) (not bm!15466) (not b!139359) (not bm!15398) (not bm!15403) (not bm!15467))
(check-sat b_and!8711 b_and!8713 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!43305 () Bool)

(declare-fun e!91066 () Bool)

(assert (=> d!43305 e!91066))

(declare-fun res!66754 () Bool)

(assert (=> d!43305 (=> (not res!66754) (not e!91066))))

(declare-fun lt!73019 () ListLongMap!1745)

(assert (=> d!43305 (= res!66754 (contains!923 lt!73019 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73016 () List!1745)

(assert (=> d!43305 (= lt!73019 (ListLongMap!1746 lt!73016))))

(declare-fun lt!73017 () Unit!4373)

(declare-fun lt!73018 () Unit!4373)

(assert (=> d!43305 (= lt!73017 lt!73018)))

(assert (=> d!43305 (= (getValueByKey!176 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!90 (List!1745 (_ BitVec 64) V!3555) Unit!4373)

(assert (=> d!43305 (= lt!73018 (lemmaContainsTupThenGetReturnValue!90 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun insertStrictlySorted!93 (List!1745 (_ BitVec 64) V!3555) List!1745)

(assert (=> d!43305 (= lt!73016 (insertStrictlySorted!93 (toList!888 call!15459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43305 (= (+!179 call!15459 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73019)))

(declare-fun b!139595 () Bool)

(declare-fun res!66755 () Bool)

(assert (=> b!139595 (=> (not res!66755) (not e!91066))))

(assert (=> b!139595 (= res!66755 (= (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!139596 () Bool)

(declare-fun contains!925 (List!1745 tuple2!2698) Bool)

(assert (=> b!139596 (= e!91066 (contains!925 (toList!888 lt!73019) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43305 res!66754) b!139595))

(assert (= (and b!139595 res!66755) b!139596))

(declare-fun m!166245 () Bool)

(assert (=> d!43305 m!166245))

(declare-fun m!166247 () Bool)

(assert (=> d!43305 m!166247))

(declare-fun m!166249 () Bool)

(assert (=> d!43305 m!166249))

(declare-fun m!166251 () Bool)

(assert (=> d!43305 m!166251))

(declare-fun m!166253 () Bool)

(assert (=> b!139595 m!166253))

(declare-fun m!166255 () Bool)

(assert (=> b!139596 m!166255))

(assert (=> b!139539 d!43305))

(declare-fun d!43307 () Bool)

(declare-fun e!91067 () Bool)

(assert (=> d!43307 e!91067))

(declare-fun res!66756 () Bool)

(assert (=> d!43307 (=> (not res!66756) (not e!91067))))

(declare-fun lt!73023 () ListLongMap!1745)

(assert (=> d!43307 (= res!66756 (contains!923 lt!73023 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73020 () List!1745)

(assert (=> d!43307 (= lt!73023 (ListLongMap!1746 lt!73020))))

(declare-fun lt!73021 () Unit!4373)

(declare-fun lt!73022 () Unit!4373)

(assert (=> d!43307 (= lt!73021 lt!73022)))

(assert (=> d!43307 (= (getValueByKey!176 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43307 (= lt!73022 (lemmaContainsTupThenGetReturnValue!90 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43307 (= lt!73020 (insertStrictlySorted!93 (toList!888 call!15405) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43307 (= (+!179 call!15405 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73023)))

(declare-fun b!139597 () Bool)

(declare-fun res!66757 () Bool)

(assert (=> b!139597 (=> (not res!66757) (not e!91067))))

(assert (=> b!139597 (= res!66757 (= (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139598 () Bool)

(assert (=> b!139598 (= e!91067 (contains!925 (toList!888 lt!73023) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43307 res!66756) b!139597))

(assert (= (and b!139597 res!66757) b!139598))

(declare-fun m!166257 () Bool)

(assert (=> d!43307 m!166257))

(declare-fun m!166259 () Bool)

(assert (=> d!43307 m!166259))

(declare-fun m!166261 () Bool)

(assert (=> d!43307 m!166261))

(declare-fun m!166263 () Bool)

(assert (=> d!43307 m!166263))

(declare-fun m!166265 () Bool)

(assert (=> b!139597 m!166265))

(declare-fun m!166267 () Bool)

(assert (=> b!139598 m!166267))

(assert (=> b!139415 d!43307))

(declare-fun d!43309 () Bool)

(assert (=> d!43309 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139406 d!43309))

(declare-fun d!43311 () Bool)

(declare-fun get!1531 (Option!182) V!3555)

(assert (=> d!43311 (= (apply!120 lt!72889 lt!72894) (get!1531 (getValueByKey!176 (toList!888 lt!72889) lt!72894)))))

(declare-fun bs!5817 () Bool)

(assert (= bs!5817 d!43311))

(declare-fun m!166269 () Bool)

(assert (=> bs!5817 m!166269))

(assert (=> bs!5817 m!166269))

(declare-fun m!166271 () Bool)

(assert (=> bs!5817 m!166271))

(assert (=> b!139404 d!43311))

(declare-fun d!43313 () Bool)

(declare-fun e!91068 () Bool)

(assert (=> d!43313 e!91068))

(declare-fun res!66758 () Bool)

(assert (=> d!43313 (=> (not res!66758) (not e!91068))))

(declare-fun lt!73027 () ListLongMap!1745)

(assert (=> d!43313 (= res!66758 (contains!923 lt!73027 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73024 () List!1745)

(assert (=> d!43313 (= lt!73027 (ListLongMap!1746 lt!73024))))

(declare-fun lt!73025 () Unit!4373)

(declare-fun lt!73026 () Unit!4373)

(assert (=> d!43313 (= lt!73025 lt!73026)))

(assert (=> d!43313 (= (getValueByKey!176 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43313 (= lt!73026 (lemmaContainsTupThenGetReturnValue!90 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43313 (= lt!73024 (insertStrictlySorted!93 (toList!888 lt!72889) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43313 (= (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73027)))

(declare-fun b!139599 () Bool)

(declare-fun res!66759 () Bool)

(assert (=> b!139599 (=> (not res!66759) (not e!91068))))

(assert (=> b!139599 (= res!66759 (= (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139600 () Bool)

(assert (=> b!139600 (= e!91068 (contains!925 (toList!888 lt!73027) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43313 res!66758) b!139599))

(assert (= (and b!139599 res!66759) b!139600))

(declare-fun m!166273 () Bool)

(assert (=> d!43313 m!166273))

(declare-fun m!166275 () Bool)

(assert (=> d!43313 m!166275))

(declare-fun m!166277 () Bool)

(assert (=> d!43313 m!166277))

(declare-fun m!166279 () Bool)

(assert (=> d!43313 m!166279))

(declare-fun m!166281 () Bool)

(assert (=> b!139599 m!166281))

(declare-fun m!166283 () Bool)

(assert (=> b!139600 m!166283))

(assert (=> b!139404 d!43313))

(declare-fun d!43315 () Bool)

(declare-fun e!91069 () Bool)

(assert (=> d!43315 e!91069))

(declare-fun res!66760 () Bool)

(assert (=> d!43315 (=> (not res!66760) (not e!91069))))

(declare-fun lt!73031 () ListLongMap!1745)

(assert (=> d!43315 (= res!66760 (contains!923 lt!73031 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73028 () List!1745)

(assert (=> d!43315 (= lt!73031 (ListLongMap!1746 lt!73028))))

(declare-fun lt!73029 () Unit!4373)

(declare-fun lt!73030 () Unit!4373)

(assert (=> d!43315 (= lt!73029 lt!73030)))

(assert (=> d!43315 (= (getValueByKey!176 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43315 (= lt!73030 (lemmaContainsTupThenGetReturnValue!90 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43315 (= lt!73028 (insertStrictlySorted!93 (toList!888 lt!72905) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43315 (= (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73031)))

(declare-fun b!139601 () Bool)

(declare-fun res!66761 () Bool)

(assert (=> b!139601 (=> (not res!66761) (not e!91069))))

(assert (=> b!139601 (= res!66761 (= (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139602 () Bool)

(assert (=> b!139602 (= e!91069 (contains!925 (toList!888 lt!73031) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43315 res!66760) b!139601))

(assert (= (and b!139601 res!66761) b!139602))

(declare-fun m!166285 () Bool)

(assert (=> d!43315 m!166285))

(declare-fun m!166287 () Bool)

(assert (=> d!43315 m!166287))

(declare-fun m!166289 () Bool)

(assert (=> d!43315 m!166289))

(declare-fun m!166291 () Bool)

(assert (=> d!43315 m!166291))

(declare-fun m!166293 () Bool)

(assert (=> b!139601 m!166293))

(declare-fun m!166295 () Bool)

(assert (=> b!139602 m!166295))

(assert (=> b!139404 d!43315))

(declare-fun d!43317 () Bool)

(assert (=> d!43317 (= (apply!120 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72888) (apply!120 lt!72887 lt!72888))))

(declare-fun lt!73034 () Unit!4373)

(declare-fun choose!856 (ListLongMap!1745 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4373)

(assert (=> d!43317 (= lt!73034 (choose!856 lt!72887 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72888))))

(declare-fun e!91072 () Bool)

(assert (=> d!43317 e!91072))

(declare-fun res!66764 () Bool)

(assert (=> d!43317 (=> (not res!66764) (not e!91072))))

(assert (=> d!43317 (= res!66764 (contains!923 lt!72887 lt!72888))))

(assert (=> d!43317 (= (addApplyDifferent!96 lt!72887 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72888) lt!73034)))

(declare-fun b!139606 () Bool)

(assert (=> b!139606 (= e!91072 (not (= lt!72888 lt!72891)))))

(assert (= (and d!43317 res!66764) b!139606))

(assert (=> d!43317 m!166123))

(declare-fun m!166297 () Bool)

(assert (=> d!43317 m!166297))

(declare-fun m!166299 () Bool)

(assert (=> d!43317 m!166299))

(assert (=> d!43317 m!166109))

(assert (=> d!43317 m!166109))

(assert (=> d!43317 m!166111))

(assert (=> b!139404 d!43317))

(declare-fun b!139631 () Bool)

(declare-fun lt!73055 () Unit!4373)

(declare-fun lt!73051 () Unit!4373)

(assert (=> b!139631 (= lt!73055 lt!73051)))

(declare-fun lt!73053 () (_ BitVec 64))

(declare-fun lt!73050 () V!3555)

(declare-fun lt!73049 () (_ BitVec 64))

(declare-fun lt!73054 () ListLongMap!1745)

(assert (=> b!139631 (not (contains!923 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)) lt!73049))))

(declare-fun addStillNotContains!64 (ListLongMap!1745 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4373)

(assert (=> b!139631 (= lt!73051 (addStillNotContains!64 lt!73054 lt!73053 lt!73050 lt!73049))))

(assert (=> b!139631 (= lt!73049 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!139631 (= lt!73050 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!139631 (= lt!73053 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!15485 () ListLongMap!1745)

(assert (=> b!139631 (= lt!73054 call!15485)))

(declare-fun e!91087 () ListLongMap!1745)

(assert (=> b!139631 (= e!91087 (+!179 call!15485 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!139633 () Bool)

(declare-fun e!91089 () ListLongMap!1745)

(assert (=> b!139633 (= e!91089 (ListLongMap!1746 Nil!1742))))

(declare-fun b!139634 () Bool)

(declare-fun e!91093 () Bool)

(declare-fun e!91088 () Bool)

(assert (=> b!139634 (= e!91093 e!91088)))

(assert (=> b!139634 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun res!66776 () Bool)

(declare-fun lt!73052 () ListLongMap!1745)

(assert (=> b!139634 (= res!66776 (contains!923 lt!73052 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139634 (=> (not res!66776) (not e!91088))))

(declare-fun b!139635 () Bool)

(declare-fun res!66773 () Bool)

(declare-fun e!91092 () Bool)

(assert (=> b!139635 (=> (not res!66773) (not e!91092))))

(assert (=> b!139635 (= res!66773 (not (contains!923 lt!73052 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139636 () Bool)

(declare-fun e!91090 () Bool)

(assert (=> b!139636 (= e!91093 e!91090)))

(declare-fun c!26086 () Bool)

(assert (=> b!139636 (= c!26086 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139637 () Bool)

(assert (=> b!139637 (= e!91089 e!91087)))

(declare-fun c!26087 () Bool)

(assert (=> b!139637 (= c!26087 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139638 () Bool)

(declare-fun e!91091 () Bool)

(assert (=> b!139638 (= e!91091 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139638 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun bm!15482 () Bool)

(assert (=> bm!15482 (= call!15485 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!139639 () Bool)

(assert (=> b!139639 (= e!91090 (= lt!73052 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139640 () Bool)

(assert (=> b!139640 (= e!91092 e!91093)))

(declare-fun c!26084 () Bool)

(assert (=> b!139640 (= c!26084 e!91091)))

(declare-fun res!66775 () Bool)

(assert (=> b!139640 (=> (not res!66775) (not e!91091))))

(assert (=> b!139640 (= res!66775 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun d!43319 () Bool)

(assert (=> d!43319 e!91092))

(declare-fun res!66774 () Bool)

(assert (=> d!43319 (=> (not res!66774) (not e!91092))))

(assert (=> d!43319 (= res!66774 (not (contains!923 lt!73052 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43319 (= lt!73052 e!91089)))

(declare-fun c!26085 () Bool)

(assert (=> d!43319 (= c!26085 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43319 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!43319 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) lt!73052)))

(declare-fun b!139632 () Bool)

(declare-fun isEmpty!417 (ListLongMap!1745) Bool)

(assert (=> b!139632 (= e!91090 (isEmpty!417 lt!73052))))

(declare-fun b!139641 () Bool)

(assert (=> b!139641 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!139641 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!139641 (= e!91088 (= (apply!120 lt!73052 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!139642 () Bool)

(assert (=> b!139642 (= e!91087 call!15485)))

(assert (= (and d!43319 c!26085) b!139633))

(assert (= (and d!43319 (not c!26085)) b!139637))

(assert (= (and b!139637 c!26087) b!139631))

(assert (= (and b!139637 (not c!26087)) b!139642))

(assert (= (or b!139631 b!139642) bm!15482))

(assert (= (and d!43319 res!66774) b!139635))

(assert (= (and b!139635 res!66773) b!139640))

(assert (= (and b!139640 res!66775) b!139638))

(assert (= (and b!139640 c!26084) b!139634))

(assert (= (and b!139640 (not c!26084)) b!139636))

(assert (= (and b!139634 res!66776) b!139641))

(assert (= (and b!139636 c!26086) b!139639))

(assert (= (and b!139636 (not c!26086)) b!139632))

(declare-fun b_lambda!6237 () Bool)

(assert (=> (not b_lambda!6237) (not b!139631)))

(assert (=> b!139631 t!6326))

(declare-fun b_and!8715 () Bool)

(assert (= b_and!8711 (and (=> t!6326 result!4177) b_and!8715)))

(assert (=> b!139631 t!6328))

(declare-fun b_and!8717 () Bool)

(assert (= b_and!8713 (and (=> t!6328 result!4181) b_and!8717)))

(declare-fun b_lambda!6239 () Bool)

(assert (=> (not b_lambda!6239) (not b!139641)))

(assert (=> b!139641 t!6326))

(declare-fun b_and!8719 () Bool)

(assert (= b_and!8715 (and (=> t!6326 result!4177) b_and!8719)))

(assert (=> b!139641 t!6328))

(declare-fun b_and!8721 () Bool)

(assert (= b_and!8717 (and (=> t!6328 result!4181) b_and!8721)))

(declare-fun m!166301 () Bool)

(assert (=> b!139635 m!166301))

(assert (=> b!139637 m!166121))

(assert (=> b!139637 m!166121))

(assert (=> b!139637 m!166141))

(declare-fun m!166303 () Bool)

(assert (=> d!43319 m!166303))

(assert (=> d!43319 m!166137))

(assert (=> b!139631 m!166027))

(declare-fun m!166305 () Bool)

(assert (=> b!139631 m!166305))

(declare-fun m!166307 () Bool)

(assert (=> b!139631 m!166307))

(assert (=> b!139631 m!166305))

(assert (=> b!139631 m!166151))

(declare-fun m!166309 () Bool)

(assert (=> b!139631 m!166309))

(assert (=> b!139631 m!166151))

(assert (=> b!139631 m!166027))

(assert (=> b!139631 m!166153))

(declare-fun m!166311 () Bool)

(assert (=> b!139631 m!166311))

(assert (=> b!139631 m!166121))

(assert (=> b!139638 m!166121))

(assert (=> b!139638 m!166121))

(assert (=> b!139638 m!166141))

(declare-fun m!166313 () Bool)

(assert (=> bm!15482 m!166313))

(declare-fun m!166315 () Bool)

(assert (=> b!139632 m!166315))

(assert (=> b!139641 m!166027))

(assert (=> b!139641 m!166121))

(declare-fun m!166317 () Bool)

(assert (=> b!139641 m!166317))

(assert (=> b!139641 m!166151))

(assert (=> b!139641 m!166151))

(assert (=> b!139641 m!166027))

(assert (=> b!139641 m!166153))

(assert (=> b!139641 m!166121))

(assert (=> b!139634 m!166121))

(assert (=> b!139634 m!166121))

(declare-fun m!166319 () Bool)

(assert (=> b!139634 m!166319))

(assert (=> b!139639 m!166313))

(assert (=> b!139404 d!43319))

(declare-fun d!43321 () Bool)

(assert (=> d!43321 (= (apply!120 lt!72905 lt!72900) (get!1531 (getValueByKey!176 (toList!888 lt!72905) lt!72900)))))

(declare-fun bs!5818 () Bool)

(assert (= bs!5818 d!43321))

(declare-fun m!166321 () Bool)

(assert (=> bs!5818 m!166321))

(assert (=> bs!5818 m!166321))

(declare-fun m!166323 () Bool)

(assert (=> bs!5818 m!166323))

(assert (=> b!139404 d!43321))

(declare-fun d!43323 () Bool)

(assert (=> d!43323 (= (apply!120 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72888) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72888)))))

(declare-fun bs!5819 () Bool)

(assert (= bs!5819 d!43323))

(declare-fun m!166325 () Bool)

(assert (=> bs!5819 m!166325))

(assert (=> bs!5819 m!166325))

(declare-fun m!166327 () Bool)

(assert (=> bs!5819 m!166327))

(assert (=> b!139404 d!43323))

(declare-fun d!43325 () Bool)

(declare-fun e!91094 () Bool)

(assert (=> d!43325 e!91094))

(declare-fun res!66777 () Bool)

(assert (=> d!43325 (=> (not res!66777) (not e!91094))))

(declare-fun lt!73059 () ListLongMap!1745)

(assert (=> d!43325 (= res!66777 (contains!923 lt!73059 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73056 () List!1745)

(assert (=> d!43325 (= lt!73059 (ListLongMap!1746 lt!73056))))

(declare-fun lt!73057 () Unit!4373)

(declare-fun lt!73058 () Unit!4373)

(assert (=> d!43325 (= lt!73057 lt!73058)))

(assert (=> d!43325 (= (getValueByKey!176 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43325 (= lt!73058 (lemmaContainsTupThenGetReturnValue!90 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43325 (= lt!73056 (insertStrictlySorted!93 (toList!888 lt!72887) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43325 (= (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73059)))

(declare-fun b!139643 () Bool)

(declare-fun res!66778 () Bool)

(assert (=> b!139643 (=> (not res!66778) (not e!91094))))

(assert (=> b!139643 (= res!66778 (= (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139644 () Bool)

(assert (=> b!139644 (= e!91094 (contains!925 (toList!888 lt!73059) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43325 res!66777) b!139643))

(assert (= (and b!139643 res!66778) b!139644))

(declare-fun m!166329 () Bool)

(assert (=> d!43325 m!166329))

(declare-fun m!166331 () Bool)

(assert (=> d!43325 m!166331))

(declare-fun m!166333 () Bool)

(assert (=> d!43325 m!166333))

(declare-fun m!166335 () Bool)

(assert (=> d!43325 m!166335))

(declare-fun m!166337 () Bool)

(assert (=> b!139643 m!166337))

(declare-fun m!166339 () Bool)

(assert (=> b!139644 m!166339))

(assert (=> b!139404 d!43325))

(declare-fun d!43327 () Bool)

(declare-fun e!91095 () Bool)

(assert (=> d!43327 e!91095))

(declare-fun res!66779 () Bool)

(assert (=> d!43327 (=> res!66779 e!91095)))

(declare-fun lt!73062 () Bool)

(assert (=> d!43327 (= res!66779 (not lt!73062))))

(declare-fun lt!73060 () Bool)

(assert (=> d!43327 (= lt!73062 lt!73060)))

(declare-fun lt!73061 () Unit!4373)

(declare-fun e!91096 () Unit!4373)

(assert (=> d!43327 (= lt!73061 e!91096)))

(declare-fun c!26088 () Bool)

(assert (=> d!43327 (= c!26088 lt!73060)))

(assert (=> d!43327 (= lt!73060 (containsKey!180 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(assert (=> d!43327 (= (contains!923 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72903) lt!73062)))

(declare-fun b!139645 () Bool)

(declare-fun lt!73063 () Unit!4373)

(assert (=> b!139645 (= e!91096 lt!73063)))

(assert (=> b!139645 (= lt!73063 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(assert (=> b!139645 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(declare-fun b!139646 () Bool)

(declare-fun Unit!4381 () Unit!4373)

(assert (=> b!139646 (= e!91096 Unit!4381)))

(declare-fun b!139647 () Bool)

(assert (=> b!139647 (= e!91095 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903)))))

(assert (= (and d!43327 c!26088) b!139645))

(assert (= (and d!43327 (not c!26088)) b!139646))

(assert (= (and d!43327 (not res!66779)) b!139647))

(declare-fun m!166341 () Bool)

(assert (=> d!43327 m!166341))

(declare-fun m!166343 () Bool)

(assert (=> b!139645 m!166343))

(declare-fun m!166345 () Bool)

(assert (=> b!139645 m!166345))

(assert (=> b!139645 m!166345))

(declare-fun m!166347 () Bool)

(assert (=> b!139645 m!166347))

(assert (=> b!139647 m!166345))

(assert (=> b!139647 m!166345))

(assert (=> b!139647 m!166347))

(assert (=> b!139404 d!43327))

(declare-fun d!43329 () Bool)

(assert (=> d!43329 (= (apply!120 lt!72887 lt!72888) (get!1531 (getValueByKey!176 (toList!888 lt!72887) lt!72888)))))

(declare-fun bs!5820 () Bool)

(assert (= bs!5820 d!43329))

(declare-fun m!166349 () Bool)

(assert (=> bs!5820 m!166349))

(assert (=> bs!5820 m!166349))

(declare-fun m!166351 () Bool)

(assert (=> bs!5820 m!166351))

(assert (=> b!139404 d!43329))

(declare-fun d!43331 () Bool)

(assert (=> d!43331 (= (apply!120 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72894) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72894)))))

(declare-fun bs!5821 () Bool)

(assert (= bs!5821 d!43331))

(declare-fun m!166353 () Bool)

(assert (=> bs!5821 m!166353))

(assert (=> bs!5821 m!166353))

(declare-fun m!166355 () Bool)

(assert (=> bs!5821 m!166355))

(assert (=> b!139404 d!43331))

(declare-fun d!43333 () Bool)

(declare-fun e!91097 () Bool)

(assert (=> d!43333 e!91097))

(declare-fun res!66780 () Bool)

(assert (=> d!43333 (=> (not res!66780) (not e!91097))))

(declare-fun lt!73067 () ListLongMap!1745)

(assert (=> d!43333 (= res!66780 (contains!923 lt!73067 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73064 () List!1745)

(assert (=> d!43333 (= lt!73067 (ListLongMap!1746 lt!73064))))

(declare-fun lt!73065 () Unit!4373)

(declare-fun lt!73066 () Unit!4373)

(assert (=> d!43333 (= lt!73065 lt!73066)))

(assert (=> d!43333 (= (getValueByKey!176 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43333 (= lt!73066 (lemmaContainsTupThenGetReturnValue!90 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43333 (= lt!73064 (insertStrictlySorted!93 (toList!888 lt!72902) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43333 (= (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73067)))

(declare-fun b!139648 () Bool)

(declare-fun res!66781 () Bool)

(assert (=> b!139648 (=> (not res!66781) (not e!91097))))

(assert (=> b!139648 (= res!66781 (= (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139649 () Bool)

(assert (=> b!139649 (= e!91097 (contains!925 (toList!888 lt!73067) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43333 res!66780) b!139648))

(assert (= (and b!139648 res!66781) b!139649))

(declare-fun m!166357 () Bool)

(assert (=> d!43333 m!166357))

(declare-fun m!166359 () Bool)

(assert (=> d!43333 m!166359))

(declare-fun m!166361 () Bool)

(assert (=> d!43333 m!166361))

(declare-fun m!166363 () Bool)

(assert (=> d!43333 m!166363))

(declare-fun m!166365 () Bool)

(assert (=> b!139648 m!166365))

(declare-fun m!166367 () Bool)

(assert (=> b!139649 m!166367))

(assert (=> b!139404 d!43333))

(declare-fun d!43335 () Bool)

(assert (=> d!43335 (= (apply!120 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72894) (apply!120 lt!72889 lt!72894))))

(declare-fun lt!73068 () Unit!4373)

(assert (=> d!43335 (= lt!73068 (choose!856 lt!72889 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72894))))

(declare-fun e!91098 () Bool)

(assert (=> d!43335 e!91098))

(declare-fun res!66782 () Bool)

(assert (=> d!43335 (=> (not res!66782) (not e!91098))))

(assert (=> d!43335 (= res!66782 (contains!923 lt!72889 lt!72894))))

(assert (=> d!43335 (= (addApplyDifferent!96 lt!72889 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72894) lt!73068)))

(declare-fun b!139650 () Bool)

(assert (=> b!139650 (= e!91098 (not (= lt!72894 lt!72890)))))

(assert (= (and d!43335 res!66782) b!139650))

(assert (=> d!43335 m!166131))

(declare-fun m!166369 () Bool)

(assert (=> d!43335 m!166369))

(declare-fun m!166371 () Bool)

(assert (=> d!43335 m!166371))

(assert (=> d!43335 m!166117))

(assert (=> d!43335 m!166117))

(assert (=> d!43335 m!166119))

(assert (=> b!139404 d!43335))

(declare-fun d!43337 () Bool)

(assert (=> d!43337 (= (apply!120 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72900) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72900)))))

(declare-fun bs!5822 () Bool)

(assert (= bs!5822 d!43337))

(declare-fun m!166373 () Bool)

(assert (=> bs!5822 m!166373))

(assert (=> bs!5822 m!166373))

(declare-fun m!166375 () Bool)

(assert (=> bs!5822 m!166375))

(assert (=> b!139404 d!43337))

(declare-fun d!43339 () Bool)

(assert (=> d!43339 (= (apply!120 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72900) (apply!120 lt!72905 lt!72900))))

(declare-fun lt!73069 () Unit!4373)

(assert (=> d!43339 (= lt!73069 (choose!856 lt!72905 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72900))))

(declare-fun e!91099 () Bool)

(assert (=> d!43339 e!91099))

(declare-fun res!66783 () Bool)

(assert (=> d!43339 (=> (not res!66783) (not e!91099))))

(assert (=> d!43339 (= res!66783 (contains!923 lt!72905 lt!72900))))

(assert (=> d!43339 (= (addApplyDifferent!96 lt!72905 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72900) lt!73069)))

(declare-fun b!139651 () Bool)

(assert (=> b!139651 (= e!91099 (not (= lt!72900 lt!72901)))))

(assert (= (and d!43339 res!66783) b!139651))

(assert (=> d!43339 m!166115))

(declare-fun m!166377 () Bool)

(assert (=> d!43339 m!166377))

(declare-fun m!166379 () Bool)

(assert (=> d!43339 m!166379))

(assert (=> d!43339 m!166127))

(assert (=> d!43339 m!166127))

(assert (=> d!43339 m!166129))

(assert (=> b!139404 d!43339))

(declare-fun d!43341 () Bool)

(assert (=> d!43341 (contains!923 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72903)))

(declare-fun lt!73072 () Unit!4373)

(declare-fun choose!857 (ListLongMap!1745 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4373)

(assert (=> d!43341 (= lt!73072 (choose!857 lt!72902 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72903))))

(assert (=> d!43341 (contains!923 lt!72902 lt!72903)))

(assert (=> d!43341 (= (addStillContains!96 lt!72902 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72903) lt!73072)))

(declare-fun bs!5823 () Bool)

(assert (= bs!5823 d!43341))

(assert (=> bs!5823 m!166107))

(assert (=> bs!5823 m!166107))

(assert (=> bs!5823 m!166125))

(declare-fun m!166381 () Bool)

(assert (=> bs!5823 m!166381))

(declare-fun m!166383 () Bool)

(assert (=> bs!5823 m!166383))

(assert (=> b!139404 d!43341))

(declare-fun bm!15483 () Bool)

(declare-fun call!15486 () Bool)

(declare-fun c!26089 () Bool)

(assert (=> bm!15483 (= call!15486 (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)))))

(declare-fun b!139653 () Bool)

(declare-fun e!91103 () Bool)

(assert (=> b!139653 (= e!91103 call!15486)))

(declare-fun b!139655 () Bool)

(assert (=> b!139655 (= e!91103 call!15486)))

(declare-fun b!139656 () Bool)

(declare-fun e!91100 () Bool)

(declare-fun e!91101 () Bool)

(assert (=> b!139656 (= e!91100 e!91101)))

(declare-fun res!66785 () Bool)

(assert (=> b!139656 (=> (not res!66785) (not e!91101))))

(declare-fun e!91102 () Bool)

(assert (=> b!139656 (= res!66785 (not e!91102))))

(declare-fun res!66786 () Bool)

(assert (=> b!139656 (=> (not res!66786) (not e!91102))))

(assert (=> b!139656 (= res!66786 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139657 () Bool)

(assert (=> b!139657 (= e!91101 e!91103)))

(assert (=> b!139657 (= c!26089 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!43343 () Bool)

(declare-fun res!66784 () Bool)

(assert (=> d!43343 (=> res!66784 e!91100)))

(assert (=> d!43343 (= res!66784 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43343 (= (arrayNoDuplicates!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 Nil!1743) e!91100)))

(declare-fun b!139654 () Bool)

(assert (=> b!139654 (= e!91102 (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!43343 (not res!66784)) b!139656))

(assert (= (and b!139656 res!66786) b!139654))

(assert (= (and b!139656 res!66785) b!139657))

(assert (= (and b!139657 c!26089) b!139653))

(assert (= (and b!139657 (not c!26089)) b!139655))

(assert (= (or b!139653 b!139655) bm!15483))

(declare-fun m!166385 () Bool)

(assert (=> bm!15483 m!166385))

(declare-fun m!166387 () Bool)

(assert (=> bm!15483 m!166387))

(assert (=> b!139656 m!166385))

(assert (=> b!139656 m!166385))

(declare-fun m!166389 () Bool)

(assert (=> b!139656 m!166389))

(assert (=> b!139657 m!166385))

(assert (=> b!139657 m!166385))

(assert (=> b!139657 m!166389))

(assert (=> b!139654 m!166385))

(assert (=> b!139654 m!166385))

(declare-fun m!166391 () Bool)

(assert (=> b!139654 m!166391))

(assert (=> b!139361 d!43343))

(declare-fun b!139658 () Bool)

(declare-fun e!91112 () Unit!4373)

(declare-fun lt!73094 () Unit!4373)

(assert (=> b!139658 (= e!91112 lt!73094)))

(declare-fun lt!73088 () ListLongMap!1745)

(assert (=> b!139658 (= lt!73088 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73090 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73090 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73089 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73089 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73092 () Unit!4373)

(assert (=> b!139658 (= lt!73092 (addStillContains!96 lt!73088 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73089))))

(assert (=> b!139658 (contains!923 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73089)))

(declare-fun lt!73083 () Unit!4373)

(assert (=> b!139658 (= lt!73083 lt!73092)))

(declare-fun lt!73091 () ListLongMap!1745)

(assert (=> b!139658 (= lt!73091 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73087 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73087 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73086 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73086 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73082 () Unit!4373)

(assert (=> b!139658 (= lt!73082 (addApplyDifferent!96 lt!73091 lt!73087 (minValue!2790 newMap!16) lt!73086))))

(assert (=> b!139658 (= (apply!120 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) lt!73086) (apply!120 lt!73091 lt!73086))))

(declare-fun lt!73078 () Unit!4373)

(assert (=> b!139658 (= lt!73078 lt!73082)))

(declare-fun lt!73073 () ListLongMap!1745)

(assert (=> b!139658 (= lt!73073 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73077 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73077 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73074 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73074 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73085 () Unit!4373)

(assert (=> b!139658 (= lt!73085 (addApplyDifferent!96 lt!73073 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73074))))

(assert (=> b!139658 (= (apply!120 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73074) (apply!120 lt!73073 lt!73074))))

(declare-fun lt!73081 () Unit!4373)

(assert (=> b!139658 (= lt!73081 lt!73085)))

(declare-fun lt!73075 () ListLongMap!1745)

(assert (=> b!139658 (= lt!73075 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73076 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73076 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73080 () (_ BitVec 64))

(assert (=> b!139658 (= lt!73080 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139658 (= lt!73094 (addApplyDifferent!96 lt!73075 lt!73076 (minValue!2790 newMap!16) lt!73080))))

(assert (=> b!139658 (= (apply!120 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) lt!73080) (apply!120 lt!73075 lt!73080))))

(declare-fun b!139659 () Bool)

(declare-fun e!91116 () ListLongMap!1745)

(declare-fun call!15487 () ListLongMap!1745)

(assert (=> b!139659 (= e!91116 call!15487)))

(declare-fun b!139660 () Bool)

(declare-fun e!91104 () Bool)

(assert (=> b!139660 (= e!91104 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139661 () Bool)

(declare-fun e!91108 () Bool)

(declare-fun call!15492 () Bool)

(assert (=> b!139661 (= e!91108 (not call!15492))))

(declare-fun e!91111 () Bool)

(declare-fun b!139662 () Bool)

(declare-fun lt!73093 () ListLongMap!1745)

(assert (=> b!139662 (= e!91111 (= (apply!120 lt!73093 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139662 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983))))))

(assert (=> b!139662 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15484 () Bool)

(assert (=> bm!15484 (= call!15492 (contains!923 lt!73093 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15485 () Bool)

(declare-fun call!15491 () ListLongMap!1745)

(assert (=> bm!15485 (= call!15487 call!15491)))

(declare-fun b!139664 () Bool)

(declare-fun e!91109 () Bool)

(declare-fun call!15489 () Bool)

(assert (=> b!139664 (= e!91109 (not call!15489))))

(declare-fun b!139665 () Bool)

(declare-fun e!91107 () Bool)

(assert (=> b!139665 (= e!91107 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139666 () Bool)

(declare-fun res!66787 () Bool)

(declare-fun e!91105 () Bool)

(assert (=> b!139666 (=> (not res!66787) (not e!91105))))

(assert (=> b!139666 (= res!66787 e!91109)))

(declare-fun c!26095 () Bool)

(assert (=> b!139666 (= c!26095 (not (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139667 () Bool)

(declare-fun res!66792 () Bool)

(assert (=> b!139667 (=> (not res!66792) (not e!91105))))

(declare-fun e!91115 () Bool)

(assert (=> b!139667 (= res!66792 e!91115)))

(declare-fun res!66791 () Bool)

(assert (=> b!139667 (=> res!66791 e!91115)))

(assert (=> b!139667 (= res!66791 (not e!91107))))

(declare-fun res!66788 () Bool)

(assert (=> b!139667 (=> (not res!66788) (not e!91107))))

(assert (=> b!139667 (= res!66788 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139668 () Bool)

(declare-fun e!91113 () Bool)

(assert (=> b!139668 (= e!91113 (= (apply!120 lt!73093 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!139669 () Bool)

(declare-fun e!91114 () ListLongMap!1745)

(assert (=> b!139669 (= e!91114 (+!179 call!15491 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!139670 () Bool)

(declare-fun e!91106 () ListLongMap!1745)

(declare-fun call!15493 () ListLongMap!1745)

(assert (=> b!139670 (= e!91106 call!15493)))

(declare-fun b!139671 () Bool)

(assert (=> b!139671 (= e!91105 e!91108)))

(declare-fun c!26091 () Bool)

(assert (=> b!139671 (= c!26091 (not (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!26093 () Bool)

(declare-fun b!139672 () Bool)

(assert (=> b!139672 (= c!26093 (and (not (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139672 (= e!91116 e!91106)))

(declare-fun b!139673 () Bool)

(assert (=> b!139673 (= e!91114 e!91116)))

(declare-fun c!26094 () Bool)

(assert (=> b!139673 (= c!26094 (and (not (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139674 () Bool)

(assert (=> b!139674 (= e!91106 call!15487)))

(declare-fun b!139675 () Bool)

(assert (=> b!139675 (= e!91115 e!91111)))

(declare-fun res!66795 () Bool)

(assert (=> b!139675 (=> (not res!66795) (not e!91111))))

(assert (=> b!139675 (= res!66795 (contains!923 lt!73093 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139663 () Bool)

(assert (=> b!139663 (= e!91108 e!91113)))

(declare-fun res!66789 () Bool)

(assert (=> b!139663 (= res!66789 call!15492)))

(assert (=> b!139663 (=> (not res!66789) (not e!91113))))

(declare-fun d!43345 () Bool)

(assert (=> d!43345 e!91105))

(declare-fun res!66793 () Bool)

(assert (=> d!43345 (=> (not res!66793) (not e!91105))))

(assert (=> d!43345 (= res!66793 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73084 () ListLongMap!1745)

(assert (=> d!43345 (= lt!73093 lt!73084)))

(declare-fun lt!73079 () Unit!4373)

(assert (=> d!43345 (= lt!73079 e!91112)))

(declare-fun c!26090 () Bool)

(assert (=> d!43345 (= c!26090 e!91104)))

(declare-fun res!66794 () Bool)

(assert (=> d!43345 (=> (not res!66794) (not e!91104))))

(assert (=> d!43345 (= res!66794 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43345 (= lt!73084 e!91114)))

(declare-fun c!26092 () Bool)

(assert (=> d!43345 (= c!26092 (and (not (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43345 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43345 (= (getCurrentListMap!561 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73093)))

(declare-fun b!139676 () Bool)

(declare-fun e!91110 () Bool)

(assert (=> b!139676 (= e!91110 (= (apply!120 lt!73093 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))

(declare-fun bm!15486 () Bool)

(declare-fun call!15488 () ListLongMap!1745)

(declare-fun call!15490 () ListLongMap!1745)

(assert (=> bm!15486 (= call!15488 call!15490)))

(declare-fun bm!15487 () Bool)

(assert (=> bm!15487 (= call!15493 call!15488)))

(declare-fun b!139677 () Bool)

(assert (=> b!139677 (= e!91109 e!91110)))

(declare-fun res!66790 () Bool)

(assert (=> b!139677 (= res!66790 call!15489)))

(assert (=> b!139677 (=> (not res!66790) (not e!91110))))

(declare-fun bm!15488 () Bool)

(assert (=> bm!15488 (= call!15490 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15489 () Bool)

(assert (=> bm!15489 (= call!15491 (+!179 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!139678 () Bool)

(declare-fun Unit!4382 () Unit!4373)

(assert (=> b!139678 (= e!91112 Unit!4382)))

(declare-fun bm!15490 () Bool)

(assert (=> bm!15490 (= call!15489 (contains!923 lt!73093 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43345 c!26092) b!139669))

(assert (= (and d!43345 (not c!26092)) b!139673))

(assert (= (and b!139673 c!26094) b!139659))

(assert (= (and b!139673 (not c!26094)) b!139672))

(assert (= (and b!139672 c!26093) b!139674))

(assert (= (and b!139672 (not c!26093)) b!139670))

(assert (= (or b!139674 b!139670) bm!15487))

(assert (= (or b!139659 bm!15487) bm!15486))

(assert (= (or b!139659 b!139674) bm!15485))

(assert (= (or b!139669 bm!15486) bm!15488))

(assert (= (or b!139669 bm!15485) bm!15489))

(assert (= (and d!43345 res!66794) b!139660))

(assert (= (and d!43345 c!26090) b!139658))

(assert (= (and d!43345 (not c!26090)) b!139678))

(assert (= (and d!43345 res!66793) b!139667))

(assert (= (and b!139667 res!66788) b!139665))

(assert (= (and b!139667 (not res!66791)) b!139675))

(assert (= (and b!139675 res!66795) b!139662))

(assert (= (and b!139667 res!66792) b!139666))

(assert (= (and b!139666 c!26095) b!139677))

(assert (= (and b!139666 (not c!26095)) b!139664))

(assert (= (and b!139677 res!66790) b!139676))

(assert (= (or b!139677 b!139664) bm!15490))

(assert (= (and b!139666 res!66787) b!139671))

(assert (= (and b!139671 c!26091) b!139663))

(assert (= (and b!139671 (not c!26091)) b!139661))

(assert (= (and b!139663 res!66789) b!139668))

(assert (= (or b!139663 b!139661) bm!15484))

(declare-fun b_lambda!6241 () Bool)

(assert (=> (not b_lambda!6241) (not b!139662)))

(declare-fun tb!2553 () Bool)

(declare-fun t!6337 () Bool)

(assert (=> (and b!139297 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16)) t!6337) tb!2553))

(declare-fun result!4191 () Bool)

(assert (=> tb!2553 (= result!4191 tp_is_empty!2931)))

(assert (=> b!139662 t!6337))

(declare-fun b_and!8723 () Bool)

(assert (= b_and!8719 (and (=> t!6337 result!4191) b_and!8723)))

(declare-fun t!6339 () Bool)

(declare-fun tb!2555 () Bool)

(assert (=> (and b!139291 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 newMap!16)) t!6339) tb!2555))

(declare-fun result!4193 () Bool)

(assert (= result!4193 result!4191))

(assert (=> b!139662 t!6339))

(declare-fun b_and!8725 () Bool)

(assert (= b_and!8721 (and (=> t!6339 result!4193) b_and!8725)))

(declare-fun m!166393 () Bool)

(assert (=> b!139658 m!166393))

(declare-fun m!166395 () Bool)

(assert (=> b!139658 m!166395))

(declare-fun m!166397 () Bool)

(assert (=> b!139658 m!166397))

(declare-fun m!166399 () Bool)

(assert (=> b!139658 m!166399))

(declare-fun m!166401 () Bool)

(assert (=> b!139658 m!166401))

(declare-fun m!166403 () Bool)

(assert (=> b!139658 m!166403))

(declare-fun m!166405 () Bool)

(assert (=> b!139658 m!166405))

(declare-fun m!166407 () Bool)

(assert (=> b!139658 m!166407))

(declare-fun m!166409 () Bool)

(assert (=> b!139658 m!166409))

(declare-fun m!166411 () Bool)

(assert (=> b!139658 m!166411))

(declare-fun m!166413 () Bool)

(assert (=> b!139658 m!166413))

(assert (=> b!139658 m!166403))

(assert (=> b!139658 m!166411))

(assert (=> b!139658 m!166385))

(declare-fun m!166415 () Bool)

(assert (=> b!139658 m!166415))

(assert (=> b!139658 m!166401))

(declare-fun m!166417 () Bool)

(assert (=> b!139658 m!166417))

(declare-fun m!166419 () Bool)

(assert (=> b!139658 m!166419))

(declare-fun m!166421 () Bool)

(assert (=> b!139658 m!166421))

(assert (=> b!139658 m!166419))

(declare-fun m!166423 () Bool)

(assert (=> b!139658 m!166423))

(declare-fun m!166425 () Bool)

(assert (=> b!139668 m!166425))

(declare-fun m!166427 () Bool)

(assert (=> bm!15484 m!166427))

(declare-fun m!166429 () Bool)

(assert (=> d!43345 m!166429))

(assert (=> b!139675 m!166385))

(assert (=> b!139675 m!166385))

(declare-fun m!166431 () Bool)

(assert (=> b!139675 m!166431))

(assert (=> b!139660 m!166385))

(assert (=> b!139660 m!166385))

(assert (=> b!139660 m!166389))

(assert (=> bm!15488 m!166393))

(declare-fun m!166433 () Bool)

(assert (=> b!139669 m!166433))

(declare-fun m!166435 () Bool)

(assert (=> b!139676 m!166435))

(assert (=> b!139665 m!166385))

(assert (=> b!139665 m!166385))

(assert (=> b!139665 m!166389))

(declare-fun m!166437 () Bool)

(assert (=> bm!15489 m!166437))

(declare-fun m!166439 () Bool)

(assert (=> bm!15490 m!166439))

(assert (=> b!139662 m!166385))

(declare-fun m!166441 () Bool)

(assert (=> b!139662 m!166441))

(declare-fun m!166443 () Bool)

(assert (=> b!139662 m!166443))

(declare-fun m!166445 () Bool)

(assert (=> b!139662 m!166445))

(assert (=> b!139662 m!166385))

(declare-fun m!166447 () Bool)

(assert (=> b!139662 m!166447))

(assert (=> b!139662 m!166443))

(assert (=> b!139662 m!166441))

(assert (=> bm!15467 d!43345))

(declare-fun b!139691 () Bool)

(declare-fun c!26102 () Bool)

(declare-fun lt!73103 () (_ BitVec 64))

(assert (=> b!139691 (= c!26102 (= lt!73103 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91125 () SeekEntryResult!279)

(declare-fun e!91123 () SeekEntryResult!279)

(assert (=> b!139691 (= e!91125 e!91123)))

(declare-fun d!43347 () Bool)

(declare-fun lt!73102 () SeekEntryResult!279)

(assert (=> d!43347 (and (or ((_ is Undefined!279) lt!73102) (not ((_ is Found!279) lt!73102)) (and (bvsge (index!3280 lt!73102) #b00000000000000000000000000000000) (bvslt (index!3280 lt!73102) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73102) ((_ is Found!279) lt!73102) (not ((_ is MissingZero!279) lt!73102)) (and (bvsge (index!3279 lt!73102) #b00000000000000000000000000000000) (bvslt (index!3279 lt!73102) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73102) ((_ is Found!279) lt!73102) ((_ is MissingZero!279) lt!73102) (not ((_ is MissingVacant!279) lt!73102)) (and (bvsge (index!3282 lt!73102) #b00000000000000000000000000000000) (bvslt (index!3282 lt!73102) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73102) (ite ((_ is Found!279) lt!73102) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73102)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite ((_ is MissingZero!279) lt!73102) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!73102)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!73102) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73102)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91124 () SeekEntryResult!279)

(assert (=> d!43347 (= lt!73102 e!91124)))

(declare-fun c!26104 () Bool)

(declare-fun lt!73101 () SeekEntryResult!279)

(assert (=> d!43347 (= c!26104 (and ((_ is Intermediate!279) lt!73101) (undefined!1091 lt!73101)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4897 (_ BitVec 32)) SeekEntryResult!279)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!43347 (= lt!73101 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43347 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43347 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73102)))

(declare-fun b!139692 () Bool)

(assert (=> b!139692 (= e!91124 Undefined!279)))

(declare-fun b!139693 () Bool)

(assert (=> b!139693 (= e!91125 (Found!279 (index!3281 lt!73101)))))

(declare-fun b!139694 () Bool)

(assert (=> b!139694 (= e!91124 e!91125)))

(assert (=> b!139694 (= lt!73103 (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73101)))))

(declare-fun c!26103 () Bool)

(assert (=> b!139694 (= c!26103 (= lt!73103 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139695 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4897 (_ BitVec 32)) SeekEntryResult!279)

(assert (=> b!139695 (= e!91123 (seekKeyOrZeroReturnVacant!0 (x!16136 lt!73101) (index!3281 lt!73101) (index!3281 lt!73101) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139696 () Bool)

(assert (=> b!139696 (= e!91123 (MissingZero!279 (index!3281 lt!73101)))))

(assert (= (and d!43347 c!26104) b!139692))

(assert (= (and d!43347 (not c!26104)) b!139694))

(assert (= (and b!139694 c!26103) b!139693))

(assert (= (and b!139694 (not c!26103)) b!139691))

(assert (= (and b!139691 c!26102) b!139696))

(assert (= (and b!139691 (not c!26102)) b!139695))

(assert (=> d!43347 m!166013))

(declare-fun m!166449 () Bool)

(assert (=> d!43347 m!166449))

(assert (=> d!43347 m!166429))

(declare-fun m!166451 () Bool)

(assert (=> d!43347 m!166451))

(declare-fun m!166453 () Bool)

(assert (=> d!43347 m!166453))

(declare-fun m!166455 () Bool)

(assert (=> d!43347 m!166455))

(assert (=> d!43347 m!166449))

(assert (=> d!43347 m!166013))

(declare-fun m!166457 () Bool)

(assert (=> d!43347 m!166457))

(declare-fun m!166459 () Bool)

(assert (=> b!139694 m!166459))

(assert (=> b!139695 m!166013))

(declare-fun m!166461 () Bool)

(assert (=> b!139695 m!166461))

(assert (=> bm!15473 d!43347))

(declare-fun d!43349 () Bool)

(declare-fun res!66796 () Bool)

(declare-fun e!91126 () Bool)

(assert (=> d!43349 (=> res!66796 e!91126)))

(assert (=> d!43349 (= res!66796 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43349 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!91126)))

(declare-fun b!139697 () Bool)

(declare-fun e!91127 () Bool)

(assert (=> b!139697 (= e!91126 e!91127)))

(declare-fun res!66797 () Bool)

(assert (=> b!139697 (=> (not res!66797) (not e!91127))))

(assert (=> b!139697 (= res!66797 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!139698 () Bool)

(assert (=> b!139698 (= e!91127 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43349 (not res!66796)) b!139697))

(assert (= (and b!139697 res!66797) b!139698))

(declare-fun m!166463 () Bool)

(assert (=> d!43349 m!166463))

(assert (=> b!139698 m!166013))

(declare-fun m!166465 () Bool)

(assert (=> b!139698 m!166465))

(assert (=> b!139445 d!43349))

(declare-fun d!43351 () Bool)

(assert (=> d!43351 (= (get!1529 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!139579 d!43351))

(declare-fun b!139707 () Bool)

(declare-fun e!91132 () (_ BitVec 32))

(assert (=> b!139707 (= e!91132 #b00000000000000000000000000000000)))

(declare-fun b!139708 () Bool)

(declare-fun e!91133 () (_ BitVec 32))

(declare-fun call!15496 () (_ BitVec 32))

(assert (=> b!139708 (= e!91133 call!15496)))

(declare-fun bm!15493 () Bool)

(assert (=> bm!15493 (= call!15496 (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!43353 () Bool)

(declare-fun lt!73106 () (_ BitVec 32))

(assert (=> d!43353 (and (bvsge lt!73106 #b00000000000000000000000000000000) (bvsle lt!73106 (bvsub (size!2587 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43353 (= lt!73106 e!91132)))

(declare-fun c!26109 () Bool)

(assert (=> d!43353 (= c!26109 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43353 (and (bvsle #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 newMap!16)) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43353 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) lt!73106)))

(declare-fun b!139709 () Bool)

(assert (=> b!139709 (= e!91132 e!91133)))

(declare-fun c!26110 () Bool)

(assert (=> b!139709 (= c!26110 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139710 () Bool)

(assert (=> b!139710 (= e!91133 (bvadd #b00000000000000000000000000000001 call!15496))))

(assert (= (and d!43353 c!26109) b!139707))

(assert (= (and d!43353 (not c!26109)) b!139709))

(assert (= (and b!139709 c!26110) b!139710))

(assert (= (and b!139709 (not c!26110)) b!139708))

(assert (= (or b!139710 b!139708) bm!15493))

(declare-fun m!166467 () Bool)

(assert (=> bm!15493 m!166467))

(assert (=> b!139709 m!166385))

(assert (=> b!139709 m!166385))

(assert (=> b!139709 m!166389))

(assert (=> b!139359 d!43353))

(declare-fun d!43355 () Bool)

(assert (=> d!43355 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139439 d!43355))

(declare-fun d!43357 () Bool)

(declare-fun e!91134 () Bool)

(assert (=> d!43357 e!91134))

(declare-fun res!66798 () Bool)

(assert (=> d!43357 (=> res!66798 e!91134)))

(declare-fun lt!73109 () Bool)

(assert (=> d!43357 (= res!66798 (not lt!73109))))

(declare-fun lt!73107 () Bool)

(assert (=> d!43357 (= lt!73109 lt!73107)))

(declare-fun lt!73108 () Unit!4373)

(declare-fun e!91135 () Unit!4373)

(assert (=> d!43357 (= lt!73108 e!91135)))

(declare-fun c!26111 () Bool)

(assert (=> d!43357 (= c!26111 lt!73107)))

(assert (=> d!43357 (= lt!73107 (containsKey!180 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43357 (= (contains!923 lt!72907 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73109)))

(declare-fun b!139711 () Bool)

(declare-fun lt!73110 () Unit!4373)

(assert (=> b!139711 (= e!91135 lt!73110)))

(assert (=> b!139711 (= lt!73110 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139711 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139712 () Bool)

(declare-fun Unit!4383 () Unit!4373)

(assert (=> b!139712 (= e!91135 Unit!4383)))

(declare-fun b!139713 () Bool)

(assert (=> b!139713 (= e!91134 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43357 c!26111) b!139711))

(assert (= (and d!43357 (not c!26111)) b!139712))

(assert (= (and d!43357 (not res!66798)) b!139713))

(assert (=> d!43357 m!166121))

(declare-fun m!166469 () Bool)

(assert (=> d!43357 m!166469))

(assert (=> b!139711 m!166121))

(declare-fun m!166471 () Bool)

(assert (=> b!139711 m!166471))

(assert (=> b!139711 m!166121))

(declare-fun m!166473 () Bool)

(assert (=> b!139711 m!166473))

(assert (=> b!139711 m!166473))

(declare-fun m!166475 () Bool)

(assert (=> b!139711 m!166475))

(assert (=> b!139713 m!166121))

(assert (=> b!139713 m!166473))

(assert (=> b!139713 m!166473))

(assert (=> b!139713 m!166475))

(assert (=> b!139421 d!43357))

(declare-fun d!43359 () Bool)

(declare-fun e!91136 () Bool)

(assert (=> d!43359 e!91136))

(declare-fun res!66799 () Bool)

(assert (=> d!43359 (=> res!66799 e!91136)))

(declare-fun lt!73113 () Bool)

(assert (=> d!43359 (= res!66799 (not lt!73113))))

(declare-fun lt!73111 () Bool)

(assert (=> d!43359 (= lt!73113 lt!73111)))

(declare-fun lt!73112 () Unit!4373)

(declare-fun e!91137 () Unit!4373)

(assert (=> d!43359 (= lt!73112 e!91137)))

(declare-fun c!26112 () Bool)

(assert (=> d!43359 (= c!26112 lt!73111)))

(assert (=> d!43359 (= lt!73111 (containsKey!180 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (=> d!43359 (= (contains!923 call!15463 (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) lt!73113)))

(declare-fun b!139714 () Bool)

(declare-fun lt!73114 () Unit!4373)

(assert (=> b!139714 (= e!91137 lt!73114)))

(assert (=> b!139714 (= lt!73114 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (=> b!139714 (isDefined!129 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(declare-fun b!139715 () Bool)

(declare-fun Unit!4384 () Unit!4373)

(assert (=> b!139715 (= e!91137 Unit!4384)))

(declare-fun b!139716 () Bool)

(assert (=> b!139716 (= e!91136 (isDefined!129 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(assert (= (and d!43359 c!26112) b!139714))

(assert (= (and d!43359 (not c!26112)) b!139715))

(assert (= (and d!43359 (not res!66799)) b!139716))

(declare-fun m!166477 () Bool)

(assert (=> d!43359 m!166477))

(declare-fun m!166479 () Bool)

(assert (=> b!139714 m!166479))

(declare-fun m!166481 () Bool)

(assert (=> b!139714 m!166481))

(assert (=> b!139714 m!166481))

(declare-fun m!166483 () Bool)

(assert (=> b!139714 m!166483))

(assert (=> b!139716 m!166481))

(assert (=> b!139716 m!166481))

(assert (=> b!139716 m!166483))

(assert (=> bm!15479 d!43359))

(declare-fun d!43361 () Bool)

(declare-fun e!91138 () Bool)

(assert (=> d!43361 e!91138))

(declare-fun res!66800 () Bool)

(assert (=> d!43361 (=> res!66800 e!91138)))

(declare-fun lt!73117 () Bool)

(assert (=> d!43361 (= res!66800 (not lt!73117))))

(declare-fun lt!73115 () Bool)

(assert (=> d!43361 (= lt!73117 lt!73115)))

(declare-fun lt!73116 () Unit!4373)

(declare-fun e!91139 () Unit!4373)

(assert (=> d!43361 (= lt!73116 e!91139)))

(declare-fun c!26113 () Bool)

(assert (=> d!43361 (= c!26113 lt!73115)))

(assert (=> d!43361 (= lt!73115 (containsKey!180 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43361 (= (contains!923 lt!72907 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73117)))

(declare-fun b!139717 () Bool)

(declare-fun lt!73118 () Unit!4373)

(assert (=> b!139717 (= e!91139 lt!73118)))

(assert (=> b!139717 (= lt!73118 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139717 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139718 () Bool)

(declare-fun Unit!4385 () Unit!4373)

(assert (=> b!139718 (= e!91139 Unit!4385)))

(declare-fun b!139719 () Bool)

(assert (=> b!139719 (= e!91138 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43361 c!26113) b!139717))

(assert (= (and d!43361 (not c!26113)) b!139718))

(assert (= (and d!43361 (not res!66800)) b!139719))

(declare-fun m!166485 () Bool)

(assert (=> d!43361 m!166485))

(declare-fun m!166487 () Bool)

(assert (=> b!139717 m!166487))

(declare-fun m!166489 () Bool)

(assert (=> b!139717 m!166489))

(assert (=> b!139717 m!166489))

(declare-fun m!166491 () Bool)

(assert (=> b!139717 m!166491))

(assert (=> b!139719 m!166489))

(assert (=> b!139719 m!166489))

(assert (=> b!139719 m!166491))

(assert (=> bm!15398 d!43361))

(declare-fun d!43363 () Bool)

(assert (=> d!43363 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73121 () Unit!4373)

(declare-fun choose!858 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4373)

(assert (=> d!43363 (= lt!73121 (choose!858 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43363 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43363 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) lt!73121)))

(declare-fun bs!5824 () Bool)

(assert (= bs!5824 d!43363))

(assert (=> bs!5824 m!166097))

(assert (=> bs!5824 m!166029))

(declare-fun m!166493 () Bool)

(assert (=> bs!5824 m!166493))

(assert (=> bs!5824 m!166429))

(assert (=> bs!5824 m!166097))

(declare-fun m!166495 () Bool)

(assert (=> bs!5824 m!166495))

(assert (=> bs!5824 m!166029))

(declare-fun m!166497 () Bool)

(assert (=> bs!5824 m!166497))

(assert (=> b!139562 d!43363))

(declare-fun d!43365 () Bool)

(declare-fun e!91140 () Bool)

(assert (=> d!43365 e!91140))

(declare-fun res!66801 () Bool)

(assert (=> d!43365 (=> (not res!66801) (not e!91140))))

(declare-fun lt!73125 () ListLongMap!1745)

(assert (=> d!43365 (= res!66801 (contains!923 lt!73125 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73122 () List!1745)

(assert (=> d!43365 (= lt!73125 (ListLongMap!1746 lt!73122))))

(declare-fun lt!73123 () Unit!4373)

(declare-fun lt!73124 () Unit!4373)

(assert (=> d!43365 (= lt!73123 lt!73124)))

(assert (=> d!43365 (= (getValueByKey!176 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!181 (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43365 (= lt!73124 (lemmaContainsTupThenGetReturnValue!90 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43365 (= lt!73122 (insertStrictlySorted!93 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43365 (= (+!179 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73125)))

(declare-fun b!139720 () Bool)

(declare-fun res!66802 () Bool)

(assert (=> b!139720 (=> (not res!66802) (not e!91140))))

(assert (=> b!139720 (= res!66802 (= (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!181 (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!139721 () Bool)

(assert (=> b!139721 (= e!91140 (contains!925 (toList!888 lt!73125) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43365 res!66801) b!139720))

(assert (= (and b!139720 res!66802) b!139721))

(declare-fun m!166499 () Bool)

(assert (=> d!43365 m!166499))

(declare-fun m!166501 () Bool)

(assert (=> d!43365 m!166501))

(declare-fun m!166503 () Bool)

(assert (=> d!43365 m!166503))

(declare-fun m!166505 () Bool)

(assert (=> d!43365 m!166505))

(declare-fun m!166507 () Bool)

(assert (=> b!139720 m!166507))

(declare-fun m!166509 () Bool)

(assert (=> b!139721 m!166509))

(assert (=> bm!15463 d!43365))

(declare-fun d!43367 () Bool)

(declare-fun res!66803 () Bool)

(declare-fun e!91141 () Bool)

(assert (=> d!43367 (=> (not res!66803) (not e!91141))))

(assert (=> d!43367 (= res!66803 (simpleValid!96 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!43367 (= (valid!556 (v!3280 (underlying!480 thiss!992))) e!91141)))

(declare-fun b!139722 () Bool)

(declare-fun res!66804 () Bool)

(assert (=> b!139722 (=> (not res!66804) (not e!91141))))

(assert (=> b!139722 (= res!66804 (= (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))) (_size!625 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!139723 () Bool)

(declare-fun res!66805 () Bool)

(assert (=> b!139723 (=> (not res!66805) (not e!91141))))

(assert (=> b!139723 (= res!66805 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!139724 () Bool)

(assert (=> b!139724 (= e!91141 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 Nil!1743))))

(assert (= (and d!43367 res!66803) b!139722))

(assert (= (and b!139722 res!66804) b!139723))

(assert (= (and b!139723 res!66805) b!139724))

(declare-fun m!166511 () Bool)

(assert (=> d!43367 m!166511))

(declare-fun m!166513 () Bool)

(assert (=> b!139722 m!166513))

(declare-fun m!166515 () Bool)

(assert (=> b!139723 m!166515))

(declare-fun m!166517 () Bool)

(assert (=> b!139724 m!166517))

(assert (=> d!43303 d!43367))

(declare-fun d!43369 () Bool)

(declare-fun e!91144 () Bool)

(assert (=> d!43369 e!91144))

(declare-fun res!66810 () Bool)

(assert (=> d!43369 (=> (not res!66810) (not e!91144))))

(declare-fun lt!73130 () SeekEntryResult!279)

(assert (=> d!43369 (= res!66810 ((_ is Found!279) lt!73130))))

(assert (=> d!43369 (= lt!73130 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun lt!73131 () Unit!4373)

(declare-fun choose!859 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4373)

(assert (=> d!43369 (= lt!73131 (choose!859 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43369 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43369 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) lt!73131)))

(declare-fun b!139729 () Bool)

(declare-fun res!66811 () Bool)

(assert (=> b!139729 (=> (not res!66811) (not e!91144))))

(assert (=> b!139729 (= res!66811 (inRange!0 (index!3280 lt!73130) (mask!7280 newMap!16)))))

(declare-fun b!139730 () Bool)

(assert (=> b!139730 (= e!91144 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73130)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!139730 (and (bvsge (index!3280 lt!73130) #b00000000000000000000000000000000) (bvslt (index!3280 lt!73130) (size!2587 (_keys!4699 newMap!16))))))

(assert (= (and d!43369 res!66810) b!139729))

(assert (= (and b!139729 res!66811) b!139730))

(assert (=> d!43369 m!166013))

(assert (=> d!43369 m!166203))

(assert (=> d!43369 m!166013))

(declare-fun m!166519 () Bool)

(assert (=> d!43369 m!166519))

(assert (=> d!43369 m!166429))

(declare-fun m!166521 () Bool)

(assert (=> b!139729 m!166521))

(declare-fun m!166523 () Bool)

(assert (=> b!139730 m!166523))

(assert (=> bm!15461 d!43369))

(assert (=> bm!15402 d!43319))

(declare-fun d!43371 () Bool)

(declare-fun res!66816 () Bool)

(declare-fun e!91149 () Bool)

(assert (=> d!43371 (=> res!66816 e!91149)))

(assert (=> d!43371 (= res!66816 (and ((_ is Cons!1741) (toList!888 lt!72825)) (= (_1!1360 (h!2348 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43371 (= (containsKey!180 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91149)))

(declare-fun b!139735 () Bool)

(declare-fun e!91150 () Bool)

(assert (=> b!139735 (= e!91149 e!91150)))

(declare-fun res!66817 () Bool)

(assert (=> b!139735 (=> (not res!66817) (not e!91150))))

(assert (=> b!139735 (= res!66817 (and (or (not ((_ is Cons!1741) (toList!888 lt!72825))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (toList!888 lt!72825)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!139736 () Bool)

(assert (=> b!139736 (= e!91150 (containsKey!180 (t!6329 (toList!888 lt!72825)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43371 (not res!66816)) b!139735))

(assert (= (and b!139735 res!66817) b!139736))

(assert (=> b!139736 m!166013))

(declare-fun m!166525 () Bool)

(assert (=> b!139736 m!166525))

(assert (=> d!43297 d!43371))

(declare-fun d!43373 () Bool)

(assert (=> d!43373 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73134 () Unit!4373)

(declare-fun choose!860 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4373)

(assert (=> d!43373 (= lt!73134 (choose!860 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72995 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43373 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43373 (= (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72995 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)) lt!73134)))

(declare-fun bs!5825 () Bool)

(assert (= bs!5825 d!43373))

(assert (=> bs!5825 m!166429))

(assert (=> bs!5825 m!166097))

(declare-fun m!166527 () Bool)

(assert (=> bs!5825 m!166527))

(assert (=> bs!5825 m!166029))

(declare-fun m!166529 () Bool)

(assert (=> bs!5825 m!166529))

(assert (=> bs!5825 m!166029))

(declare-fun m!166531 () Bool)

(assert (=> bs!5825 m!166531))

(assert (=> bs!5825 m!166097))

(assert (=> b!139550 d!43373))

(declare-fun d!43375 () Bool)

(assert (=> d!43375 (= (inRange!0 (ite c!26062 (ite c!26067 (index!3280 lt!73007) (ite c!26066 (index!3279 lt!72982) (index!3282 lt!72982))) (ite c!26061 (index!3280 lt!72993) (ite c!26069 (index!3279 lt!73003) (index!3282 lt!73003)))) (mask!7280 newMap!16)) (and (bvsge (ite c!26062 (ite c!26067 (index!3280 lt!73007) (ite c!26066 (index!3279 lt!72982) (index!3282 lt!72982))) (ite c!26061 (index!3280 lt!72993) (ite c!26069 (index!3279 lt!73003) (index!3282 lt!73003)))) #b00000000000000000000000000000000) (bvslt (ite c!26062 (ite c!26067 (index!3280 lt!73007) (ite c!26066 (index!3279 lt!72982) (index!3282 lt!72982))) (ite c!26061 (index!3280 lt!72993) (ite c!26069 (index!3279 lt!73003) (index!3282 lt!73003)))) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15456 d!43375))

(assert (=> b!139411 d!43309))

(declare-fun d!43377 () Bool)

(declare-fun e!91153 () Bool)

(assert (=> d!43377 e!91153))

(declare-fun res!66820 () Bool)

(assert (=> d!43377 (=> (not res!66820) (not e!91153))))

(assert (=> d!43377 (= res!66820 (and (bvsge (index!3280 lt!72999) #b00000000000000000000000000000000) (bvslt (index!3280 lt!72999) (size!2587 (_keys!4699 newMap!16)))))))

(declare-fun lt!73137 () Unit!4373)

(declare-fun choose!861 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) Unit!4373)

(assert (=> d!43377 (= lt!73137 (choose!861 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43377 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43377 (= (lemmaValidKeyInArrayIsInListMap!126 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (defaultEntry!2940 newMap!16)) lt!73137)))

(declare-fun b!139739 () Bool)

(assert (=> b!139739 (= e!91153 (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(assert (= (and d!43377 res!66820) b!139739))

(declare-fun m!166533 () Bool)

(assert (=> d!43377 m!166533))

(assert (=> d!43377 m!166429))

(declare-fun m!166535 () Bool)

(assert (=> b!139739 m!166535))

(assert (=> b!139739 m!166199))

(assert (=> b!139739 m!166535))

(assert (=> b!139739 m!166199))

(declare-fun m!166537 () Bool)

(assert (=> b!139739 m!166537))

(assert (=> b!139541 d!43377))

(declare-fun b!139740 () Bool)

(declare-fun e!91162 () Unit!4373)

(declare-fun lt!73159 () Unit!4373)

(assert (=> b!139740 (= e!91162 lt!73159)))

(declare-fun lt!73153 () ListLongMap!1745)

(assert (=> b!139740 (= lt!73153 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73155 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73155 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73154 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73154 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73157 () Unit!4373)

(assert (=> b!139740 (= lt!73157 (addStillContains!96 lt!73153 lt!73155 (zeroValue!2790 newMap!16) lt!73154))))

(assert (=> b!139740 (contains!923 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) lt!73154)))

(declare-fun lt!73148 () Unit!4373)

(assert (=> b!139740 (= lt!73148 lt!73157)))

(declare-fun lt!73156 () ListLongMap!1745)

(assert (=> b!139740 (= lt!73156 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73152 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73152 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73151 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73151 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73147 () Unit!4373)

(assert (=> b!139740 (= lt!73147 (addApplyDifferent!96 lt!73156 lt!73152 (minValue!2790 newMap!16) lt!73151))))

(assert (=> b!139740 (= (apply!120 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) lt!73151) (apply!120 lt!73156 lt!73151))))

(declare-fun lt!73143 () Unit!4373)

(assert (=> b!139740 (= lt!73143 lt!73147)))

(declare-fun lt!73138 () ListLongMap!1745)

(assert (=> b!139740 (= lt!73138 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73142 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73142 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73139 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73139 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73150 () Unit!4373)

(assert (=> b!139740 (= lt!73150 (addApplyDifferent!96 lt!73138 lt!73142 (zeroValue!2790 newMap!16) lt!73139))))

(assert (=> b!139740 (= (apply!120 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) lt!73139) (apply!120 lt!73138 lt!73139))))

(declare-fun lt!73146 () Unit!4373)

(assert (=> b!139740 (= lt!73146 lt!73150)))

(declare-fun lt!73140 () ListLongMap!1745)

(assert (=> b!139740 (= lt!73140 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73141 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73141 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73145 () (_ BitVec 64))

(assert (=> b!139740 (= lt!73145 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139740 (= lt!73159 (addApplyDifferent!96 lt!73140 lt!73141 (minValue!2790 newMap!16) lt!73145))))

(assert (=> b!139740 (= (apply!120 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) lt!73145) (apply!120 lt!73140 lt!73145))))

(declare-fun b!139741 () Bool)

(declare-fun e!91166 () ListLongMap!1745)

(declare-fun call!15497 () ListLongMap!1745)

(assert (=> b!139741 (= e!91166 call!15497)))

(declare-fun b!139742 () Bool)

(declare-fun e!91154 () Bool)

(assert (=> b!139742 (= e!91154 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139743 () Bool)

(declare-fun e!91158 () Bool)

(declare-fun call!15502 () Bool)

(assert (=> b!139743 (= e!91158 (not call!15502))))

(declare-fun b!139744 () Bool)

(declare-fun e!91161 () Bool)

(declare-fun lt!73158 () ListLongMap!1745)

(assert (=> b!139744 (= e!91161 (= (apply!120 lt!73158 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))))

(assert (=> b!139744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15494 () Bool)

(assert (=> bm!15494 (= call!15502 (contains!923 lt!73158 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15495 () Bool)

(declare-fun call!15501 () ListLongMap!1745)

(assert (=> bm!15495 (= call!15497 call!15501)))

(declare-fun b!139746 () Bool)

(declare-fun e!91159 () Bool)

(declare-fun call!15499 () Bool)

(assert (=> b!139746 (= e!91159 (not call!15499))))

(declare-fun b!139747 () Bool)

(declare-fun e!91157 () Bool)

(assert (=> b!139747 (= e!91157 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139748 () Bool)

(declare-fun res!66821 () Bool)

(declare-fun e!91155 () Bool)

(assert (=> b!139748 (=> (not res!66821) (not e!91155))))

(assert (=> b!139748 (= res!66821 e!91159)))

(declare-fun c!26119 () Bool)

(assert (=> b!139748 (= c!26119 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139749 () Bool)

(declare-fun res!66826 () Bool)

(assert (=> b!139749 (=> (not res!66826) (not e!91155))))

(declare-fun e!91165 () Bool)

(assert (=> b!139749 (= res!66826 e!91165)))

(declare-fun res!66825 () Bool)

(assert (=> b!139749 (=> res!66825 e!91165)))

(assert (=> b!139749 (= res!66825 (not e!91157))))

(declare-fun res!66822 () Bool)

(assert (=> b!139749 (=> (not res!66822) (not e!91157))))

(assert (=> b!139749 (= res!66822 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139750 () Bool)

(declare-fun e!91163 () Bool)

(assert (=> b!139750 (= e!91163 (= (apply!120 lt!73158 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!139751 () Bool)

(declare-fun e!91164 () ListLongMap!1745)

(assert (=> b!139751 (= e!91164 (+!179 call!15501 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!139752 () Bool)

(declare-fun e!91156 () ListLongMap!1745)

(declare-fun call!15503 () ListLongMap!1745)

(assert (=> b!139752 (= e!91156 call!15503)))

(declare-fun b!139753 () Bool)

(assert (=> b!139753 (= e!91155 e!91158)))

(declare-fun c!26115 () Bool)

(assert (=> b!139753 (= c!26115 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139754 () Bool)

(declare-fun c!26117 () Bool)

(assert (=> b!139754 (= c!26117 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139754 (= e!91166 e!91156)))

(declare-fun b!139755 () Bool)

(assert (=> b!139755 (= e!91164 e!91166)))

(declare-fun c!26118 () Bool)

(assert (=> b!139755 (= c!26118 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139756 () Bool)

(assert (=> b!139756 (= e!91156 call!15497)))

(declare-fun b!139757 () Bool)

(assert (=> b!139757 (= e!91165 e!91161)))

(declare-fun res!66829 () Bool)

(assert (=> b!139757 (=> (not res!66829) (not e!91161))))

(assert (=> b!139757 (= res!66829 (contains!923 lt!73158 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139757 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139745 () Bool)

(assert (=> b!139745 (= e!91158 e!91163)))

(declare-fun res!66823 () Bool)

(assert (=> b!139745 (= res!66823 call!15502)))

(assert (=> b!139745 (=> (not res!66823) (not e!91163))))

(declare-fun d!43379 () Bool)

(assert (=> d!43379 e!91155))

(declare-fun res!66827 () Bool)

(assert (=> d!43379 (=> (not res!66827) (not e!91155))))

(assert (=> d!43379 (= res!66827 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73149 () ListLongMap!1745)

(assert (=> d!43379 (= lt!73158 lt!73149)))

(declare-fun lt!73144 () Unit!4373)

(assert (=> d!43379 (= lt!73144 e!91162)))

(declare-fun c!26114 () Bool)

(assert (=> d!43379 (= c!26114 e!91154)))

(declare-fun res!66828 () Bool)

(assert (=> d!43379 (=> (not res!66828) (not e!91154))))

(assert (=> d!43379 (= res!66828 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43379 (= lt!73149 e!91164)))

(declare-fun c!26116 () Bool)

(assert (=> d!43379 (= c!26116 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43379 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43379 (= (getCurrentListMap!561 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73158)))

(declare-fun b!139758 () Bool)

(declare-fun e!91160 () Bool)

(assert (=> b!139758 (= e!91160 (= (apply!120 lt!73158 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15496 () Bool)

(declare-fun call!15498 () ListLongMap!1745)

(declare-fun call!15500 () ListLongMap!1745)

(assert (=> bm!15496 (= call!15498 call!15500)))

(declare-fun bm!15497 () Bool)

(assert (=> bm!15497 (= call!15503 call!15498)))

(declare-fun b!139759 () Bool)

(assert (=> b!139759 (= e!91159 e!91160)))

(declare-fun res!66824 () Bool)

(assert (=> b!139759 (= res!66824 call!15499)))

(assert (=> b!139759 (=> (not res!66824) (not e!91160))))

(declare-fun bm!15498 () Bool)

(assert (=> bm!15498 (= call!15500 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15499 () Bool)

(assert (=> bm!15499 (= call!15501 (+!179 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!139760 () Bool)

(declare-fun Unit!4386 () Unit!4373)

(assert (=> b!139760 (= e!91162 Unit!4386)))

(declare-fun bm!15500 () Bool)

(assert (=> bm!15500 (= call!15499 (contains!923 lt!73158 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43379 c!26116) b!139751))

(assert (= (and d!43379 (not c!26116)) b!139755))

(assert (= (and b!139755 c!26118) b!139741))

(assert (= (and b!139755 (not c!26118)) b!139754))

(assert (= (and b!139754 c!26117) b!139756))

(assert (= (and b!139754 (not c!26117)) b!139752))

(assert (= (or b!139756 b!139752) bm!15497))

(assert (= (or b!139741 bm!15497) bm!15496))

(assert (= (or b!139741 b!139756) bm!15495))

(assert (= (or b!139751 bm!15496) bm!15498))

(assert (= (or b!139751 bm!15495) bm!15499))

(assert (= (and d!43379 res!66828) b!139742))

(assert (= (and d!43379 c!26114) b!139740))

(assert (= (and d!43379 (not c!26114)) b!139760))

(assert (= (and d!43379 res!66827) b!139749))

(assert (= (and b!139749 res!66822) b!139747))

(assert (= (and b!139749 (not res!66825)) b!139757))

(assert (= (and b!139757 res!66829) b!139744))

(assert (= (and b!139749 res!66826) b!139748))

(assert (= (and b!139748 c!26119) b!139759))

(assert (= (and b!139748 (not c!26119)) b!139746))

(assert (= (and b!139759 res!66824) b!139758))

(assert (= (or b!139759 b!139746) bm!15500))

(assert (= (and b!139748 res!66821) b!139753))

(assert (= (and b!139753 c!26115) b!139745))

(assert (= (and b!139753 (not c!26115)) b!139743))

(assert (= (and b!139745 res!66823) b!139750))

(assert (= (or b!139745 b!139743) bm!15494))

(declare-fun b_lambda!6243 () Bool)

(assert (=> (not b_lambda!6243) (not b!139744)))

(assert (=> b!139744 t!6337))

(declare-fun b_and!8727 () Bool)

(assert (= b_and!8723 (and (=> t!6337 result!4191) b_and!8727)))

(assert (=> b!139744 t!6339))

(declare-fun b_and!8729 () Bool)

(assert (= b_and!8725 (and (=> t!6339 result!4193) b_and!8729)))

(declare-fun m!166539 () Bool)

(assert (=> b!139740 m!166539))

(declare-fun m!166541 () Bool)

(assert (=> b!139740 m!166541))

(declare-fun m!166543 () Bool)

(assert (=> b!139740 m!166543))

(declare-fun m!166545 () Bool)

(assert (=> b!139740 m!166545))

(declare-fun m!166547 () Bool)

(assert (=> b!139740 m!166547))

(declare-fun m!166549 () Bool)

(assert (=> b!139740 m!166549))

(declare-fun m!166551 () Bool)

(assert (=> b!139740 m!166551))

(declare-fun m!166553 () Bool)

(assert (=> b!139740 m!166553))

(declare-fun m!166555 () Bool)

(assert (=> b!139740 m!166555))

(declare-fun m!166557 () Bool)

(assert (=> b!139740 m!166557))

(declare-fun m!166559 () Bool)

(assert (=> b!139740 m!166559))

(assert (=> b!139740 m!166549))

(assert (=> b!139740 m!166557))

(assert (=> b!139740 m!166385))

(declare-fun m!166561 () Bool)

(assert (=> b!139740 m!166561))

(assert (=> b!139740 m!166547))

(declare-fun m!166563 () Bool)

(assert (=> b!139740 m!166563))

(declare-fun m!166565 () Bool)

(assert (=> b!139740 m!166565))

(declare-fun m!166567 () Bool)

(assert (=> b!139740 m!166567))

(assert (=> b!139740 m!166565))

(declare-fun m!166569 () Bool)

(assert (=> b!139740 m!166569))

(declare-fun m!166571 () Bool)

(assert (=> b!139750 m!166571))

(declare-fun m!166573 () Bool)

(assert (=> bm!15494 m!166573))

(assert (=> d!43379 m!166429))

(assert (=> b!139757 m!166385))

(assert (=> b!139757 m!166385))

(declare-fun m!166575 () Bool)

(assert (=> b!139757 m!166575))

(assert (=> b!139742 m!166385))

(assert (=> b!139742 m!166385))

(assert (=> b!139742 m!166389))

(assert (=> bm!15498 m!166539))

(declare-fun m!166577 () Bool)

(assert (=> b!139751 m!166577))

(declare-fun m!166579 () Bool)

(assert (=> b!139758 m!166579))

(assert (=> b!139747 m!166385))

(assert (=> b!139747 m!166385))

(assert (=> b!139747 m!166389))

(declare-fun m!166581 () Bool)

(assert (=> bm!15499 m!166581))

(declare-fun m!166583 () Bool)

(assert (=> bm!15500 m!166583))

(assert (=> b!139744 m!166385))

(declare-fun m!166585 () Bool)

(assert (=> b!139744 m!166585))

(assert (=> b!139744 m!166443))

(declare-fun m!166587 () Bool)

(assert (=> b!139744 m!166587))

(assert (=> b!139744 m!166385))

(declare-fun m!166589 () Bool)

(assert (=> b!139744 m!166589))

(assert (=> b!139744 m!166443))

(assert (=> b!139744 m!166585))

(assert (=> b!139541 d!43379))

(declare-fun d!43381 () Bool)

(declare-fun e!91169 () Bool)

(assert (=> d!43381 e!91169))

(declare-fun res!66832 () Bool)

(assert (=> d!43381 (=> (not res!66832) (not e!91169))))

(assert (=> d!43381 (= res!66832 (and (bvsge (index!3280 lt!72999) #b00000000000000000000000000000000) (bvslt (index!3280 lt!72999) (size!2588 (_values!2923 newMap!16)))))))

(declare-fun lt!73162 () Unit!4373)

(declare-fun choose!862 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4373)

(assert (=> d!43381 (= lt!73162 (choose!862 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43381 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43381 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) lt!73162)))

(declare-fun b!139763 () Bool)

(assert (=> b!139763 (= e!91169 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (= (and d!43381 res!66832) b!139763))

(assert (=> d!43381 m!166013))

(assert (=> d!43381 m!166029))

(declare-fun m!166591 () Bool)

(assert (=> d!43381 m!166591))

(assert (=> d!43381 m!166429))

(assert (=> b!139763 m!166097))

(assert (=> b!139763 m!166097))

(declare-fun m!166593 () Bool)

(assert (=> b!139763 m!166593))

(assert (=> b!139763 m!166221))

(assert (=> b!139763 m!166217))

(assert (=> b!139541 d!43381))

(declare-fun d!43383 () Bool)

(declare-fun e!91170 () Bool)

(assert (=> d!43383 e!91170))

(declare-fun res!66833 () Bool)

(assert (=> d!43383 (=> res!66833 e!91170)))

(declare-fun lt!73165 () Bool)

(assert (=> d!43383 (= res!66833 (not lt!73165))))

(declare-fun lt!73163 () Bool)

(assert (=> d!43383 (= lt!73165 lt!73163)))

(declare-fun lt!73164 () Unit!4373)

(declare-fun e!91171 () Unit!4373)

(assert (=> d!43383 (= lt!73164 e!91171)))

(declare-fun c!26120 () Bool)

(assert (=> d!43383 (= c!26120 lt!73163)))

(assert (=> d!43383 (= lt!73163 (containsKey!180 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43383 (= (contains!923 call!15479 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73165)))

(declare-fun b!139764 () Bool)

(declare-fun lt!73166 () Unit!4373)

(assert (=> b!139764 (= e!91171 lt!73166)))

(assert (=> b!139764 (= lt!73166 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!139764 (isDefined!129 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139765 () Bool)

(declare-fun Unit!4387 () Unit!4373)

(assert (=> b!139765 (= e!91171 Unit!4387)))

(declare-fun b!139766 () Bool)

(assert (=> b!139766 (= e!91170 (isDefined!129 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (= (and d!43383 c!26120) b!139764))

(assert (= (and d!43383 (not c!26120)) b!139765))

(assert (= (and d!43383 (not res!66833)) b!139766))

(assert (=> d!43383 m!166013))

(declare-fun m!166595 () Bool)

(assert (=> d!43383 m!166595))

(assert (=> b!139764 m!166013))

(declare-fun m!166597 () Bool)

(assert (=> b!139764 m!166597))

(assert (=> b!139764 m!166013))

(declare-fun m!166599 () Bool)

(assert (=> b!139764 m!166599))

(assert (=> b!139764 m!166599))

(declare-fun m!166601 () Bool)

(assert (=> b!139764 m!166601))

(assert (=> b!139766 m!166013))

(assert (=> b!139766 m!166599))

(assert (=> b!139766 m!166599))

(assert (=> b!139766 m!166601))

(assert (=> b!139541 d!43383))

(assert (=> b!139438 d!43355))

(declare-fun d!43385 () Bool)

(assert (=> d!43385 (= (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992)))) (and (or (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000001111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000011111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000001111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000011111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000001111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000011111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000001111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000011111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000001111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000011111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000001111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000011111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000001111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000011111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000111111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000001111111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000011111111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000111111111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00001111111111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00011111111111111111111111111111) (= (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> d!43283 d!43385))

(declare-fun d!43387 () Bool)

(declare-fun res!66834 () Bool)

(declare-fun e!91172 () Bool)

(assert (=> d!43387 (=> (not res!66834) (not e!91172))))

(assert (=> d!43387 (= res!66834 (simpleValid!96 (_2!1361 lt!72992)))))

(assert (=> d!43387 (= (valid!556 (_2!1361 lt!72992)) e!91172)))

(declare-fun b!139767 () Bool)

(declare-fun res!66835 () Bool)

(assert (=> b!139767 (=> (not res!66835) (not e!91172))))

(assert (=> b!139767 (= res!66835 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!72992)) #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!72992)))) (_size!625 (_2!1361 lt!72992))))))

(declare-fun b!139768 () Bool)

(declare-fun res!66836 () Bool)

(assert (=> b!139768 (=> (not res!66836) (not e!91172))))

(assert (=> b!139768 (= res!66836 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))))))

(declare-fun b!139769 () Bool)

(assert (=> b!139769 (= e!91172 (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!72992)) #b00000000000000000000000000000000 Nil!1743))))

(assert (= (and d!43387 res!66834) b!139767))

(assert (= (and b!139767 res!66835) b!139768))

(assert (= (and b!139768 res!66836) b!139769))

(declare-fun m!166603 () Bool)

(assert (=> d!43387 m!166603))

(declare-fun m!166605 () Bool)

(assert (=> b!139767 m!166605))

(declare-fun m!166607 () Bool)

(assert (=> b!139768 m!166607))

(declare-fun m!166609 () Bool)

(assert (=> b!139769 m!166609))

(assert (=> d!43299 d!43387))

(assert (=> d!43299 d!43279))

(declare-fun d!43389 () Bool)

(declare-fun lt!73169 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!137 (List!1746) (InoxSet (_ BitVec 64)))

(assert (=> d!43389 (= lt!73169 (select (content!137 Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91178 () Bool)

(assert (=> d!43389 (= lt!73169 e!91178)))

(declare-fun res!66841 () Bool)

(assert (=> d!43389 (=> (not res!66841) (not e!91178))))

(assert (=> d!43389 (= res!66841 ((_ is Cons!1742) Nil!1743))))

(assert (=> d!43389 (= (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73169)))

(declare-fun b!139774 () Bool)

(declare-fun e!91177 () Bool)

(assert (=> b!139774 (= e!91178 e!91177)))

(declare-fun res!66842 () Bool)

(assert (=> b!139774 (=> res!66842 e!91177)))

(assert (=> b!139774 (= res!66842 (= (h!2349 Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139775 () Bool)

(assert (=> b!139775 (= e!91177 (contains!924 (t!6330 Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43389 res!66841) b!139774))

(assert (= (and b!139774 (not res!66842)) b!139775))

(declare-fun m!166611 () Bool)

(assert (=> d!43389 m!166611))

(assert (=> d!43389 m!166013))

(declare-fun m!166613 () Bool)

(assert (=> d!43389 m!166613))

(assert (=> b!139775 m!166013))

(declare-fun m!166615 () Bool)

(assert (=> b!139775 m!166615))

(assert (=> b!139436 d!43389))

(assert (=> b!139553 d!43347))

(declare-fun b!139792 () Bool)

(declare-fun res!66854 () Bool)

(declare-fun e!91188 () Bool)

(assert (=> b!139792 (=> (not res!66854) (not e!91188))))

(declare-fun call!15508 () Bool)

(assert (=> b!139792 (= res!66854 call!15508)))

(declare-fun e!91190 () Bool)

(assert (=> b!139792 (= e!91190 e!91188)))

(declare-fun b!139793 () Bool)

(declare-fun call!15509 () Bool)

(assert (=> b!139793 (= e!91188 (not call!15509))))

(declare-fun b!139794 () Bool)

(declare-fun e!91189 () Bool)

(assert (=> b!139794 (= e!91189 (not call!15509))))

(declare-fun b!139795 () Bool)

(declare-fun lt!73175 () SeekEntryResult!279)

(assert (=> b!139795 (= e!91190 ((_ is Undefined!279) lt!73175))))

(declare-fun d!43391 () Bool)

(declare-fun e!91187 () Bool)

(assert (=> d!43391 e!91187))

(declare-fun c!26125 () Bool)

(assert (=> d!43391 (= c!26125 ((_ is MissingZero!279) lt!73175))))

(assert (=> d!43391 (= lt!73175 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun lt!73174 () Unit!4373)

(declare-fun choose!863 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4373)

(assert (=> d!43391 (= lt!73174 (choose!863 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43391 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43391 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) lt!73174)))

(declare-fun b!139796 () Bool)

(assert (=> b!139796 (and (bvsge (index!3279 lt!73175) #b00000000000000000000000000000000) (bvslt (index!3279 lt!73175) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!66852 () Bool)

(assert (=> b!139796 (= res!66852 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!73175)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139796 (=> (not res!66852) (not e!91189))))

(declare-fun b!139797 () Bool)

(assert (=> b!139797 (= e!91187 e!91189)))

(declare-fun res!66853 () Bool)

(assert (=> b!139797 (= res!66853 call!15508)))

(assert (=> b!139797 (=> (not res!66853) (not e!91189))))

(declare-fun bm!15505 () Bool)

(assert (=> bm!15505 (= call!15508 (inRange!0 (ite c!26125 (index!3279 lt!73175) (index!3282 lt!73175)) (mask!7280 newMap!16)))))

(declare-fun bm!15506 () Bool)

(assert (=> bm!15506 (= call!15509 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!139798 () Bool)

(assert (=> b!139798 (= e!91187 e!91190)))

(declare-fun c!26126 () Bool)

(assert (=> b!139798 (= c!26126 ((_ is MissingVacant!279) lt!73175))))

(declare-fun b!139799 () Bool)

(declare-fun res!66851 () Bool)

(assert (=> b!139799 (=> (not res!66851) (not e!91188))))

(assert (=> b!139799 (= res!66851 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73175)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139799 (and (bvsge (index!3282 lt!73175) #b00000000000000000000000000000000) (bvslt (index!3282 lt!73175) (size!2587 (_keys!4699 newMap!16))))))

(assert (= (and d!43391 c!26125) b!139797))

(assert (= (and d!43391 (not c!26125)) b!139798))

(assert (= (and b!139797 res!66853) b!139796))

(assert (= (and b!139796 res!66852) b!139794))

(assert (= (and b!139798 c!26126) b!139792))

(assert (= (and b!139798 (not c!26126)) b!139795))

(assert (= (and b!139792 res!66854) b!139799))

(assert (= (and b!139799 res!66851) b!139793))

(assert (= (or b!139797 b!139792) bm!15505))

(assert (= (or b!139794 b!139793) bm!15506))

(declare-fun m!166617 () Bool)

(assert (=> b!139799 m!166617))

(assert (=> d!43391 m!166013))

(assert (=> d!43391 m!166203))

(assert (=> d!43391 m!166013))

(declare-fun m!166619 () Bool)

(assert (=> d!43391 m!166619))

(assert (=> d!43391 m!166429))

(assert (=> bm!15506 m!166013))

(assert (=> bm!15506 m!166213))

(declare-fun m!166621 () Bool)

(assert (=> bm!15505 m!166621))

(declare-fun m!166623 () Bool)

(assert (=> b!139796 m!166623))

(assert (=> bm!15458 d!43391))

(declare-fun call!15510 () Bool)

(declare-fun c!26127 () Bool)

(declare-fun bm!15507 () Bool)

(assert (=> bm!15507 (= call!15510 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))))))

(declare-fun b!139800 () Bool)

(declare-fun e!91194 () Bool)

(assert (=> b!139800 (= e!91194 call!15510)))

(declare-fun b!139802 () Bool)

(assert (=> b!139802 (= e!91194 call!15510)))

(declare-fun b!139803 () Bool)

(declare-fun e!91191 () Bool)

(declare-fun e!91192 () Bool)

(assert (=> b!139803 (= e!91191 e!91192)))

(declare-fun res!66856 () Bool)

(assert (=> b!139803 (=> (not res!66856) (not e!91192))))

(declare-fun e!91193 () Bool)

(assert (=> b!139803 (= res!66856 (not e!91193))))

(declare-fun res!66857 () Bool)

(assert (=> b!139803 (=> (not res!66857) (not e!91193))))

(assert (=> b!139803 (= res!66857 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!139804 () Bool)

(assert (=> b!139804 (= e!91192 e!91194)))

(assert (=> b!139804 (= c!26127 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!43393 () Bool)

(declare-fun res!66855 () Bool)

(assert (=> d!43393 (=> res!66855 e!91191)))

(assert (=> d!43393 (= res!66855 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43393 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) e!91191)))

(declare-fun b!139801 () Bool)

(assert (=> b!139801 (= e!91193 (contains!924 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!43393 (not res!66855)) b!139803))

(assert (= (and b!139803 res!66857) b!139801))

(assert (= (and b!139803 res!66856) b!139804))

(assert (= (and b!139804 c!26127) b!139800))

(assert (= (and b!139804 (not c!26127)) b!139802))

(assert (= (or b!139800 b!139802) bm!15507))

(declare-fun m!166625 () Bool)

(assert (=> bm!15507 m!166625))

(declare-fun m!166627 () Bool)

(assert (=> bm!15507 m!166627))

(assert (=> b!139803 m!166625))

(assert (=> b!139803 m!166625))

(declare-fun m!166629 () Bool)

(assert (=> b!139803 m!166629))

(assert (=> b!139804 m!166625))

(assert (=> b!139804 m!166625))

(assert (=> b!139804 m!166629))

(assert (=> b!139801 m!166625))

(assert (=> b!139801 m!166625))

(declare-fun m!166631 () Bool)

(assert (=> b!139801 m!166631))

(assert (=> bm!15407 d!43393))

(declare-fun d!43395 () Bool)

(assert (=> d!43395 (= (map!1442 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (getCurrentListMap!561 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun bs!5826 () Bool)

(assert (= bs!5826 d!43395))

(declare-fun m!166633 () Bool)

(assert (=> bs!5826 m!166633))

(assert (=> bm!15475 d!43395))

(declare-fun b!139839 () Bool)

(declare-fun e!91214 () Unit!4373)

(declare-fun Unit!4388 () Unit!4373)

(assert (=> b!139839 (= e!91214 Unit!4388)))

(declare-fun lt!73261 () Unit!4373)

(declare-fun lemmaArrayContainsKeyThenInListMap!45 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4373)

(assert (=> b!139839 (= lt!73261 (lemmaArrayContainsKeyThenInListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> b!139839 (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))

(declare-fun lt!73250 () Unit!4373)

(assert (=> b!139839 (= lt!73250 lt!73261)))

(assert (=> b!139839 false))

(declare-fun b!139840 () Bool)

(declare-fun res!66882 () Bool)

(declare-fun e!91217 () Bool)

(assert (=> b!139840 (=> (not res!66882) (not e!91217))))

(declare-fun call!15522 () Bool)

(assert (=> b!139840 (= res!66882 call!15522)))

(declare-fun e!91216 () Bool)

(assert (=> b!139840 (= e!91216 e!91217)))

(declare-fun call!15520 () Bool)

(declare-fun lt!73265 () SeekEntryResult!279)

(declare-fun c!26137 () Bool)

(declare-fun lt!73260 () SeekEntryResult!279)

(declare-fun c!26139 () Bool)

(declare-fun bm!15516 () Bool)

(assert (=> bm!15516 (= call!15520 (inRange!0 (ite c!26139 (index!3280 lt!73260) (ite c!26137 (index!3279 lt!73265) (index!3282 lt!73265))) (mask!7280 newMap!16)))))

(declare-fun b!139841 () Bool)

(declare-fun res!66877 () Bool)

(declare-fun e!91211 () Bool)

(assert (=> b!139841 (=> (not res!66877) (not e!91211))))

(declare-fun lt!73257 () tuple2!2700)

(assert (=> b!139841 (= res!66877 (valid!556 (_2!1361 lt!73257)))))

(declare-fun b!139842 () Bool)

(assert (=> b!139842 (= e!91211 (= (map!1442 (_2!1361 lt!73257)) (+!179 (map!1442 newMap!16) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!139843 () Bool)

(declare-fun call!15521 () Bool)

(assert (=> b!139843 (= e!91217 (not call!15521))))

(declare-fun b!139844 () Bool)

(declare-fun res!66878 () Bool)

(assert (=> b!139844 (= res!66878 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73265)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91212 () Bool)

(assert (=> b!139844 (=> (not res!66878) (not e!91212))))

(declare-fun b!139845 () Bool)

(declare-fun res!66883 () Bool)

(assert (=> b!139845 (=> (not res!66883) (not e!91217))))

(assert (=> b!139845 (= res!66883 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!73265)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139846 () Bool)

(declare-fun res!66879 () Bool)

(assert (=> b!139846 (= res!66879 call!15520)))

(declare-fun e!91218 () Bool)

(assert (=> b!139846 (=> (not res!66879) (not e!91218))))

(declare-fun b!139847 () Bool)

(declare-fun c!26136 () Bool)

(assert (=> b!139847 (= c!26136 ((_ is MissingVacant!279) lt!73265))))

(declare-fun e!91213 () Bool)

(assert (=> b!139847 (= e!91216 e!91213)))

(declare-fun bm!15517 () Bool)

(assert (=> bm!15517 (= call!15521 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun call!15519 () SeekEntryResult!279)

(declare-fun bm!15518 () Bool)

(assert (=> bm!15518 (= call!15519 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139848 () Bool)

(assert (=> b!139848 (= e!91213 ((_ is Undefined!279) lt!73265))))

(declare-fun b!139849 () Bool)

(declare-fun Unit!4389 () Unit!4373)

(assert (=> b!139849 (= e!91214 Unit!4389)))

(declare-fun b!139850 () Bool)

(assert (=> b!139850 (= e!91212 (not call!15521))))

(declare-fun b!139851 () Bool)

(declare-fun e!91215 () Unit!4373)

(declare-fun lt!73263 () Unit!4373)

(assert (=> b!139851 (= e!91215 lt!73263)))

(assert (=> b!139851 (= lt!73263 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139851 (= lt!73265 call!15519)))

(assert (=> b!139851 (= c!26137 ((_ is MissingZero!279) lt!73265))))

(assert (=> b!139851 e!91216))

(declare-fun b!139852 () Bool)

(declare-fun res!66881 () Bool)

(assert (=> b!139852 (=> (not res!66881) (not e!91211))))

(assert (=> b!139852 (= res!66881 (contains!923 (map!1442 (_2!1361 lt!73257)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139853 () Bool)

(assert (=> b!139853 (= e!91213 e!91212)))

(declare-fun res!66876 () Bool)

(assert (=> b!139853 (= res!66876 call!15522)))

(assert (=> b!139853 (=> (not res!66876) (not e!91212))))

(declare-fun b!139854 () Bool)

(assert (=> b!139854 (= e!91218 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73260)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun bm!15519 () Bool)

(assert (=> bm!15519 (= call!15522 call!15520)))

(declare-fun b!139855 () Bool)

(declare-fun Unit!4390 () Unit!4373)

(assert (=> b!139855 (= e!91215 Unit!4390)))

(declare-fun lt!73255 () Unit!4373)

(assert (=> b!139855 (= lt!73255 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139855 (= lt!73260 call!15519)))

(declare-fun res!66880 () Bool)

(assert (=> b!139855 (= res!66880 ((_ is Found!279) lt!73260))))

(assert (=> b!139855 (=> (not res!66880) (not e!91218))))

(assert (=> b!139855 e!91218))

(declare-fun lt!73249 () Unit!4373)

(assert (=> b!139855 (= lt!73249 lt!73255)))

(assert (=> b!139855 false))

(declare-fun d!43397 () Bool)

(assert (=> d!43397 e!91211))

(declare-fun res!66884 () Bool)

(assert (=> d!43397 (=> (not res!66884) (not e!91211))))

(assert (=> d!43397 (= res!66884 (_1!1361 lt!73257))))

(assert (=> d!43397 (= lt!73257 (tuple2!2701 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd (_size!625 newMap!16) #b00000000000000000000000000000001) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (_vacant!625 newMap!16))))))

(declare-fun lt!73264 () Unit!4373)

(declare-fun lt!73239 () Unit!4373)

(assert (=> d!43397 (= lt!73264 lt!73239)))

(declare-fun lt!73236 () array!4899)

(declare-fun lt!73240 () array!4897)

(assert (=> d!43397 (contains!923 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(assert (=> d!43397 (= lt!73239 (lemmaValidKeyInArrayIsInListMap!126 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43397 (= lt!73236 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))

(assert (=> d!43397 (= lt!73240 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun lt!73252 () Unit!4373)

(declare-fun lt!73247 () Unit!4373)

(assert (=> d!43397 (= lt!73252 lt!73247)))

(declare-fun lt!73246 () array!4897)

(assert (=> d!43397 (= (arrayCountValidKeys!0 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4897 (_ BitVec 32)) Unit!4373)

(assert (=> d!43397 (= lt!73247 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(assert (=> d!43397 (= lt!73246 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun lt!73242 () Unit!4373)

(declare-fun lt!73251 () Unit!4373)

(assert (=> d!43397 (= lt!73242 lt!73251)))

(declare-fun lt!73259 () array!4897)

(assert (=> d!43397 (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4897 (_ BitVec 64) (_ BitVec 32)) Unit!4373)

(assert (=> d!43397 (= lt!73251 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(assert (=> d!43397 (= lt!73259 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun lt!73244 () Unit!4373)

(declare-fun lt!73262 () Unit!4373)

(assert (=> d!43397 (= lt!73244 lt!73262)))

(assert (=> d!43397 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!45 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4373)

(assert (=> d!43397 (= lt!73262 (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73237 () Unit!4373)

(declare-fun lt!73254 () Unit!4373)

(assert (=> d!43397 (= lt!73237 lt!73254)))

(assert (=> d!43397 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4897 (_ BitVec 32) (_ BitVec 32)) Unit!4373)

(assert (=> d!43397 (= lt!73254 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (mask!7280 newMap!16)))))

(declare-fun lt!73241 () Unit!4373)

(declare-fun lt!73238 () Unit!4373)

(assert (=> d!43397 (= lt!73241 lt!73238)))

(assert (=> d!43397 (= (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4897 (_ BitVec 32) (_ BitVec 64)) Unit!4373)

(assert (=> d!43397 (= lt!73238 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun lt!73248 () Unit!4373)

(declare-fun lt!73253 () Unit!4373)

(assert (=> d!43397 (= lt!73248 lt!73253)))

(declare-fun lt!73258 () List!1746)

(declare-fun lt!73245 () (_ BitVec 32))

(assert (=> d!43397 (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73245 lt!73258)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4897 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1746) Unit!4373)

(assert (=> d!43397 (= lt!73253 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) lt!73245 lt!73258))))

(assert (=> d!43397 (= lt!73258 Nil!1743)))

(assert (=> d!43397 (= lt!73245 #b00000000000000000000000000000000)))

(declare-fun lt!73243 () Unit!4373)

(assert (=> d!43397 (= lt!73243 e!91214)))

(declare-fun c!26138 () Bool)

(assert (=> d!43397 (= c!26138 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!73256 () Unit!4373)

(assert (=> d!43397 (= lt!73256 e!91215)))

(assert (=> d!43397 (= c!26139 (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43397 (valid!556 newMap!16)))

(assert (=> d!43397 (= (updateHelperNewKey!65 newMap!16 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) lt!73257)))

(assert (= (and d!43397 c!26139) b!139855))

(assert (= (and d!43397 (not c!26139)) b!139851))

(assert (= (and b!139855 res!66880) b!139846))

(assert (= (and b!139846 res!66879) b!139854))

(assert (= (and b!139851 c!26137) b!139840))

(assert (= (and b!139851 (not c!26137)) b!139847))

(assert (= (and b!139840 res!66882) b!139845))

(assert (= (and b!139845 res!66883) b!139843))

(assert (= (and b!139847 c!26136) b!139853))

(assert (= (and b!139847 (not c!26136)) b!139848))

(assert (= (and b!139853 res!66876) b!139844))

(assert (= (and b!139844 res!66878) b!139850))

(assert (= (or b!139840 b!139853) bm!15519))

(assert (= (or b!139843 b!139850) bm!15517))

(assert (= (or b!139846 bm!15519) bm!15516))

(assert (= (or b!139855 b!139851) bm!15518))

(assert (= (and d!43397 c!26138) b!139839))

(assert (= (and d!43397 (not c!26138)) b!139849))

(assert (= (and d!43397 res!66884) b!139841))

(assert (= (and b!139841 res!66877) b!139852))

(assert (= (and b!139852 res!66881) b!139842))

(declare-fun m!166635 () Bool)

(assert (=> b!139842 m!166635))

(assert (=> b!139842 m!166021))

(assert (=> b!139842 m!166021))

(declare-fun m!166637 () Bool)

(assert (=> b!139842 m!166637))

(declare-fun m!166639 () Bool)

(assert (=> b!139841 m!166639))

(assert (=> bm!15517 m!166013))

(assert (=> bm!15517 m!166213))

(assert (=> b!139851 m!166013))

(assert (=> b!139851 m!166209))

(declare-fun m!166641 () Bool)

(assert (=> b!139845 m!166641))

(declare-fun m!166643 () Bool)

(assert (=> d!43397 m!166643))

(declare-fun m!166645 () Bool)

(assert (=> d!43397 m!166645))

(assert (=> d!43397 m!166041))

(declare-fun m!166647 () Bool)

(assert (=> d!43397 m!166647))

(assert (=> d!43397 m!166097))

(assert (=> d!43397 m!166593))

(assert (=> d!43397 m!166013))

(assert (=> d!43397 m!166029))

(declare-fun m!166649 () Bool)

(assert (=> d!43397 m!166649))

(assert (=> d!43397 m!166097))

(assert (=> d!43397 m!166013))

(declare-fun m!166651 () Bool)

(assert (=> d!43397 m!166651))

(assert (=> d!43397 m!166091))

(declare-fun m!166653 () Bool)

(assert (=> d!43397 m!166653))

(assert (=> d!43397 m!166013))

(declare-fun m!166655 () Bool)

(assert (=> d!43397 m!166655))

(declare-fun m!166657 () Bool)

(assert (=> d!43397 m!166657))

(declare-fun m!166659 () Bool)

(assert (=> d!43397 m!166659))

(declare-fun m!166661 () Bool)

(assert (=> d!43397 m!166661))

(assert (=> d!43397 m!166013))

(declare-fun m!166663 () Bool)

(assert (=> d!43397 m!166663))

(assert (=> d!43397 m!166013))

(declare-fun m!166665 () Bool)

(assert (=> d!43397 m!166665))

(declare-fun m!166667 () Bool)

(assert (=> d!43397 m!166667))

(declare-fun m!166669 () Bool)

(assert (=> d!43397 m!166669))

(declare-fun m!166671 () Bool)

(assert (=> d!43397 m!166671))

(assert (=> d!43397 m!166659))

(assert (=> d!43397 m!166013))

(assert (=> d!43397 m!166213))

(assert (=> d!43397 m!166657))

(assert (=> d!43397 m!166097))

(declare-fun m!166673 () Bool)

(assert (=> d!43397 m!166673))

(assert (=> d!43397 m!166013))

(declare-fun m!166675 () Bool)

(assert (=> d!43397 m!166675))

(declare-fun m!166677 () Bool)

(assert (=> d!43397 m!166677))

(assert (=> d!43397 m!166013))

(declare-fun m!166679 () Bool)

(assert (=> d!43397 m!166679))

(assert (=> b!139852 m!166635))

(assert (=> b!139852 m!166635))

(assert (=> b!139852 m!166013))

(declare-fun m!166681 () Bool)

(assert (=> b!139852 m!166681))

(assert (=> bm!15518 m!166013))

(assert (=> bm!15518 m!166203))

(assert (=> b!139855 m!166013))

(assert (=> b!139855 m!166207))

(declare-fun m!166683 () Bool)

(assert (=> b!139854 m!166683))

(declare-fun m!166685 () Bool)

(assert (=> b!139844 m!166685))

(assert (=> b!139839 m!166013))

(declare-fun m!166687 () Bool)

(assert (=> b!139839 m!166687))

(assert (=> b!139839 m!166097))

(assert (=> b!139839 m!166097))

(assert (=> b!139839 m!166013))

(assert (=> b!139839 m!166651))

(declare-fun m!166689 () Bool)

(assert (=> bm!15516 m!166689))

(assert (=> bm!15466 d!43397))

(declare-fun d!43399 () Bool)

(assert (=> d!43399 (= (apply!120 lt!72907 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5827 () Bool)

(assert (= bs!5827 d!43399))

(declare-fun m!166691 () Bool)

(assert (=> bs!5827 m!166691))

(assert (=> bs!5827 m!166691))

(declare-fun m!166693 () Bool)

(assert (=> bs!5827 m!166693))

(assert (=> b!139422 d!43399))

(declare-fun b!139864 () Bool)

(declare-fun e!91226 () Bool)

(declare-fun e!91227 () Bool)

(assert (=> b!139864 (= e!91226 e!91227)))

(declare-fun lt!73273 () (_ BitVec 64))

(assert (=> b!139864 (= lt!73273 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73272 () Unit!4373)

(assert (=> b!139864 (= lt!73272 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000))))

(assert (=> b!139864 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000)))

(declare-fun lt!73274 () Unit!4373)

(assert (=> b!139864 (= lt!73274 lt!73272)))

(declare-fun res!66889 () Bool)

(assert (=> b!139864 (= res!66889 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!139864 (=> (not res!66889) (not e!91227))))

(declare-fun d!43401 () Bool)

(declare-fun res!66890 () Bool)

(declare-fun e!91225 () Bool)

(assert (=> d!43401 (=> res!66890 e!91225)))

(assert (=> d!43401 (= res!66890 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43401 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 newMap!16) (mask!7280 newMap!16)) e!91225)))

(declare-fun b!139865 () Bool)

(declare-fun call!15525 () Bool)

(assert (=> b!139865 (= e!91227 call!15525)))

(declare-fun bm!15522 () Bool)

(assert (=> bm!15522 (= call!15525 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139866 () Bool)

(assert (=> b!139866 (= e!91225 e!91226)))

(declare-fun c!26142 () Bool)

(assert (=> b!139866 (= c!26142 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139867 () Bool)

(assert (=> b!139867 (= e!91226 call!15525)))

(assert (= (and d!43401 (not res!66890)) b!139866))

(assert (= (and b!139866 c!26142) b!139864))

(assert (= (and b!139866 (not c!26142)) b!139867))

(assert (= (and b!139864 res!66889) b!139865))

(assert (= (or b!139865 b!139867) bm!15522))

(assert (=> b!139864 m!166385))

(declare-fun m!166695 () Bool)

(assert (=> b!139864 m!166695))

(declare-fun m!166697 () Bool)

(assert (=> b!139864 m!166697))

(assert (=> b!139864 m!166385))

(declare-fun m!166699 () Bool)

(assert (=> b!139864 m!166699))

(declare-fun m!166701 () Bool)

(assert (=> bm!15522 m!166701))

(assert (=> b!139866 m!166385))

(assert (=> b!139866 m!166385))

(assert (=> b!139866 m!166389))

(assert (=> b!139360 d!43401))

(declare-fun b!139876 () Bool)

(declare-fun res!66902 () Bool)

(declare-fun e!91230 () Bool)

(assert (=> b!139876 (=> (not res!66902) (not e!91230))))

(assert (=> b!139876 (= res!66902 (and (= (size!2588 (_values!2923 newMap!16)) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)) (= (size!2587 (_keys!4699 newMap!16)) (size!2588 (_values!2923 newMap!16))) (bvsge (_size!625 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!625 newMap!16) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!139878 () Bool)

(declare-fun res!66901 () Bool)

(assert (=> b!139878 (=> (not res!66901) (not e!91230))))

(declare-fun size!2591 (LongMapFixedSize!1152) (_ BitVec 32))

(assert (=> b!139878 (= res!66901 (= (size!2591 newMap!16) (bvadd (_size!625 newMap!16) (bvsdiv (bvadd (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!139879 () Bool)

(assert (=> b!139879 (= e!91230 (and (bvsge (extraKeys!2695 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!625 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!43403 () Bool)

(declare-fun res!66900 () Bool)

(assert (=> d!43403 (=> (not res!66900) (not e!91230))))

(assert (=> d!43403 (= res!66900 (validMask!0 (mask!7280 newMap!16)))))

(assert (=> d!43403 (= (simpleValid!96 newMap!16) e!91230)))

(declare-fun b!139877 () Bool)

(declare-fun res!66899 () Bool)

(assert (=> b!139877 (=> (not res!66899) (not e!91230))))

(assert (=> b!139877 (= res!66899 (bvsge (size!2591 newMap!16) (_size!625 newMap!16)))))

(assert (= (and d!43403 res!66900) b!139876))

(assert (= (and b!139876 res!66902) b!139877))

(assert (= (and b!139877 res!66899) b!139878))

(assert (= (and b!139878 res!66901) b!139879))

(declare-fun m!166703 () Bool)

(assert (=> b!139878 m!166703))

(assert (=> d!43403 m!166429))

(assert (=> b!139877 m!166703))

(assert (=> d!43279 d!43403))

(declare-fun d!43405 () Bool)

(assert (=> d!43405 (= (get!1530 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139580 d!43405))

(assert (=> b!139450 d!43293))

(declare-fun d!43407 () Bool)

(declare-fun res!66903 () Bool)

(declare-fun e!91231 () Bool)

(assert (=> d!43407 (=> res!66903 e!91231)))

(assert (=> d!43407 (= res!66903 (= (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43407 (= (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91231)))

(declare-fun b!139880 () Bool)

(declare-fun e!91232 () Bool)

(assert (=> b!139880 (= e!91231 e!91232)))

(declare-fun res!66904 () Bool)

(assert (=> b!139880 (=> (not res!66904) (not e!91232))))

(assert (=> b!139880 (= res!66904 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139881 () Bool)

(assert (=> b!139881 (= e!91232 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43407 (not res!66903)) b!139880))

(assert (= (and b!139880 res!66904) b!139881))

(assert (=> d!43407 m!166385))

(assert (=> b!139881 m!166013))

(declare-fun m!166705 () Bool)

(assert (=> b!139881 m!166705))

(assert (=> bm!15462 d!43407))

(declare-fun d!43409 () Bool)

(declare-fun isEmpty!418 (Option!182) Bool)

(assert (=> d!43409 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun bs!5828 () Bool)

(assert (= bs!5828 d!43409))

(assert (=> bs!5828 m!166173))

(declare-fun m!166707 () Bool)

(assert (=> bs!5828 m!166707))

(assert (=> b!139460 d!43409))

(declare-fun b!139893 () Bool)

(declare-fun e!91238 () Option!182)

(assert (=> b!139893 (= e!91238 None!180)))

(declare-fun b!139890 () Bool)

(declare-fun e!91237 () Option!182)

(assert (=> b!139890 (= e!91237 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72825)))))))

(declare-fun b!139891 () Bool)

(assert (=> b!139891 (= e!91237 e!91238)))

(declare-fun c!26148 () Bool)

(assert (=> b!139891 (= c!26148 (and ((_ is Cons!1741) (toList!888 lt!72825)) (not (= (_1!1360 (h!2348 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun d!43411 () Bool)

(declare-fun c!26147 () Bool)

(assert (=> d!43411 (= c!26147 (and ((_ is Cons!1741) (toList!888 lt!72825)) (= (_1!1360 (h!2348 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43411 (= (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91237)))

(declare-fun b!139892 () Bool)

(assert (=> b!139892 (= e!91238 (getValueByKey!176 (t!6329 (toList!888 lt!72825)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43411 c!26147) b!139890))

(assert (= (and d!43411 (not c!26147)) b!139891))

(assert (= (and b!139891 c!26148) b!139892))

(assert (= (and b!139891 (not c!26148)) b!139893))

(assert (=> b!139892 m!166013))

(declare-fun m!166709 () Bool)

(assert (=> b!139892 m!166709))

(assert (=> b!139460 d!43411))

(assert (=> d!43291 d!43289))

(declare-fun d!43413 () Bool)

(assert (=> d!43413 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) from!355 Nil!1743)))

(assert (=> d!43413 true))

(declare-fun _$71!165 () Unit!4373)

(assert (=> d!43413 (= (choose!39 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!165)))

(declare-fun bs!5829 () Bool)

(assert (= bs!5829 d!43413))

(assert (=> bs!5829 m!166011))

(assert (=> d!43291 d!43413))

(declare-fun d!43415 () Bool)

(declare-fun e!91239 () Bool)

(assert (=> d!43415 e!91239))

(declare-fun res!66905 () Bool)

(assert (=> d!43415 (=> res!66905 e!91239)))

(declare-fun lt!73277 () Bool)

(assert (=> d!43415 (= res!66905 (not lt!73277))))

(declare-fun lt!73275 () Bool)

(assert (=> d!43415 (= lt!73277 lt!73275)))

(declare-fun lt!73276 () Unit!4373)

(declare-fun e!91240 () Unit!4373)

(assert (=> d!43415 (= lt!73276 e!91240)))

(declare-fun c!26149 () Bool)

(assert (=> d!43415 (= c!26149 lt!73275)))

(assert (=> d!43415 (= lt!73275 (containsKey!180 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43415 (= (contains!923 lt!72907 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73277)))

(declare-fun b!139894 () Bool)

(declare-fun lt!73278 () Unit!4373)

(assert (=> b!139894 (= e!91240 lt!73278)))

(assert (=> b!139894 (= lt!73278 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139894 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139895 () Bool)

(declare-fun Unit!4391 () Unit!4373)

(assert (=> b!139895 (= e!91240 Unit!4391)))

(declare-fun b!139896 () Bool)

(assert (=> b!139896 (= e!91239 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43415 c!26149) b!139894))

(assert (= (and d!43415 (not c!26149)) b!139895))

(assert (= (and d!43415 (not res!66905)) b!139896))

(declare-fun m!166711 () Bool)

(assert (=> d!43415 m!166711))

(declare-fun m!166713 () Bool)

(assert (=> b!139894 m!166713))

(assert (=> b!139894 m!166691))

(assert (=> b!139894 m!166691))

(declare-fun m!166715 () Bool)

(assert (=> b!139894 m!166715))

(assert (=> b!139896 m!166691))

(assert (=> b!139896 m!166691))

(assert (=> b!139896 m!166715))

(assert (=> bm!15404 d!43415))

(declare-fun d!43417 () Bool)

(assert (=> d!43417 (isDefined!129 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun lt!73281 () Unit!4373)

(declare-fun choose!864 (List!1745 (_ BitVec 64)) Unit!4373)

(assert (=> d!43417 (= lt!73281 (choose!864 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91243 () Bool)

(assert (=> d!43417 e!91243))

(declare-fun res!66908 () Bool)

(assert (=> d!43417 (=> (not res!66908) (not e!91243))))

(declare-fun isStrictlySorted!325 (List!1745) Bool)

(assert (=> d!43417 (= res!66908 (isStrictlySorted!325 (toList!888 lt!72825)))))

(assert (=> d!43417 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73281)))

(declare-fun b!139899 () Bool)

(assert (=> b!139899 (= e!91243 (containsKey!180 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43417 res!66908) b!139899))

(assert (=> d!43417 m!166013))

(assert (=> d!43417 m!166173))

(assert (=> d!43417 m!166173))

(assert (=> d!43417 m!166175))

(assert (=> d!43417 m!166013))

(declare-fun m!166717 () Bool)

(assert (=> d!43417 m!166717))

(declare-fun m!166719 () Bool)

(assert (=> d!43417 m!166719))

(assert (=> b!139899 m!166013))

(assert (=> b!139899 m!166169))

(assert (=> b!139458 d!43417))

(assert (=> b!139458 d!43409))

(assert (=> b!139458 d!43411))

(declare-fun d!43419 () Bool)

(assert (=> d!43419 (= (apply!120 lt!72907 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1531 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5830 () Bool)

(assert (= bs!5830 d!43419))

(assert (=> bs!5830 m!166121))

(assert (=> bs!5830 m!166473))

(assert (=> bs!5830 m!166473))

(declare-fun m!166721 () Bool)

(assert (=> bs!5830 m!166721))

(assert (=> b!139408 d!43419))

(declare-fun d!43421 () Bool)

(declare-fun c!26150 () Bool)

(assert (=> d!43421 (= c!26150 ((_ is ValueCellFull!1122) (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91244 () V!3555)

(assert (=> d!43421 (= (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91244)))

(declare-fun b!139900 () Bool)

(assert (=> b!139900 (= e!91244 (get!1529 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139901 () Bool)

(assert (=> b!139901 (= e!91244 (get!1530 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43421 c!26150) b!139900))

(assert (= (and d!43421 (not c!26150)) b!139901))

(assert (=> b!139900 m!166151))

(assert (=> b!139900 m!166027))

(declare-fun m!166723 () Bool)

(assert (=> b!139900 m!166723))

(assert (=> b!139901 m!166151))

(assert (=> b!139901 m!166027))

(declare-fun m!166725 () Bool)

(assert (=> b!139901 m!166725))

(assert (=> b!139408 d!43421))

(declare-fun d!43423 () Bool)

(declare-fun e!91245 () Bool)

(assert (=> d!43423 e!91245))

(declare-fun res!66909 () Bool)

(assert (=> d!43423 (=> (not res!66909) (not e!91245))))

(declare-fun lt!73285 () ListLongMap!1745)

(assert (=> d!43423 (= res!66909 (contains!923 lt!73285 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun lt!73282 () List!1745)

(assert (=> d!43423 (= lt!73285 (ListLongMap!1746 lt!73282))))

(declare-fun lt!73283 () Unit!4373)

(declare-fun lt!73284 () Unit!4373)

(assert (=> d!43423 (= lt!73283 lt!73284)))

(assert (=> d!43423 (= (getValueByKey!176 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (Some!181 (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43423 (= lt!73284 (lemmaContainsTupThenGetReturnValue!90 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43423 (= lt!73282 (insertStrictlySorted!93 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43423 (= (+!179 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73285)))

(declare-fun b!139902 () Bool)

(declare-fun res!66910 () Bool)

(assert (=> b!139902 (=> (not res!66910) (not e!91245))))

(assert (=> b!139902 (= res!66910 (= (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (Some!181 (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!139903 () Bool)

(assert (=> b!139903 (= e!91245 (contains!925 (toList!888 lt!73285) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43423 res!66909) b!139902))

(assert (= (and b!139902 res!66910) b!139903))

(declare-fun m!166727 () Bool)

(assert (=> d!43423 m!166727))

(declare-fun m!166729 () Bool)

(assert (=> d!43423 m!166729))

(declare-fun m!166731 () Bool)

(assert (=> d!43423 m!166731))

(declare-fun m!166733 () Bool)

(assert (=> d!43423 m!166733))

(declare-fun m!166735 () Bool)

(assert (=> b!139902 m!166735))

(declare-fun m!166737 () Bool)

(assert (=> b!139903 m!166737))

(assert (=> bm!15403 d!43423))

(declare-fun b!139904 () Bool)

(declare-fun e!91254 () Unit!4373)

(declare-fun lt!73307 () Unit!4373)

(assert (=> b!139904 (= e!91254 lt!73307)))

(declare-fun lt!73301 () ListLongMap!1745)

(assert (=> b!139904 (= lt!73301 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73303 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73303 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73302 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73302 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73305 () Unit!4373)

(assert (=> b!139904 (= lt!73305 (addStillContains!96 lt!73301 lt!73303 (zeroValue!2790 newMap!16) lt!73302))))

(assert (=> b!139904 (contains!923 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) lt!73302)))

(declare-fun lt!73296 () Unit!4373)

(assert (=> b!139904 (= lt!73296 lt!73305)))

(declare-fun lt!73304 () ListLongMap!1745)

(assert (=> b!139904 (= lt!73304 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73300 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73300 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73299 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73299 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73295 () Unit!4373)

(assert (=> b!139904 (= lt!73295 (addApplyDifferent!96 lt!73304 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73299))))

(assert (=> b!139904 (= (apply!120 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73299) (apply!120 lt!73304 lt!73299))))

(declare-fun lt!73291 () Unit!4373)

(assert (=> b!139904 (= lt!73291 lt!73295)))

(declare-fun lt!73286 () ListLongMap!1745)

(assert (=> b!139904 (= lt!73286 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73290 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73290 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73287 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73287 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73298 () Unit!4373)

(assert (=> b!139904 (= lt!73298 (addApplyDifferent!96 lt!73286 lt!73290 (zeroValue!2790 newMap!16) lt!73287))))

(assert (=> b!139904 (= (apply!120 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) lt!73287) (apply!120 lt!73286 lt!73287))))

(declare-fun lt!73294 () Unit!4373)

(assert (=> b!139904 (= lt!73294 lt!73298)))

(declare-fun lt!73288 () ListLongMap!1745)

(assert (=> b!139904 (= lt!73288 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73289 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73289 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73293 () (_ BitVec 64))

(assert (=> b!139904 (= lt!73293 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139904 (= lt!73307 (addApplyDifferent!96 lt!73288 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73293))))

(assert (=> b!139904 (= (apply!120 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73293) (apply!120 lt!73288 lt!73293))))

(declare-fun b!139905 () Bool)

(declare-fun e!91258 () ListLongMap!1745)

(declare-fun call!15526 () ListLongMap!1745)

(assert (=> b!139905 (= e!91258 call!15526)))

(declare-fun b!139906 () Bool)

(declare-fun e!91246 () Bool)

(assert (=> b!139906 (= e!91246 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139907 () Bool)

(declare-fun e!91250 () Bool)

(declare-fun call!15531 () Bool)

(assert (=> b!139907 (= e!91250 (not call!15531))))

(declare-fun b!139908 () Bool)

(declare-fun e!91253 () Bool)

(declare-fun lt!73306 () ListLongMap!1745)

(assert (=> b!139908 (= e!91253 (= (apply!120 lt!73306 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139908 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!139908 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15523 () Bool)

(assert (=> bm!15523 (= call!15531 (contains!923 lt!73306 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15524 () Bool)

(declare-fun call!15530 () ListLongMap!1745)

(assert (=> bm!15524 (= call!15526 call!15530)))

(declare-fun b!139910 () Bool)

(declare-fun e!91251 () Bool)

(declare-fun call!15528 () Bool)

(assert (=> b!139910 (= e!91251 (not call!15528))))

(declare-fun b!139911 () Bool)

(declare-fun e!91249 () Bool)

(assert (=> b!139911 (= e!91249 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139912 () Bool)

(declare-fun res!66911 () Bool)

(declare-fun e!91247 () Bool)

(assert (=> b!139912 (=> (not res!66911) (not e!91247))))

(assert (=> b!139912 (= res!66911 e!91251)))

(declare-fun c!26156 () Bool)

(assert (=> b!139912 (= c!26156 (not (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139913 () Bool)

(declare-fun res!66916 () Bool)

(assert (=> b!139913 (=> (not res!66916) (not e!91247))))

(declare-fun e!91257 () Bool)

(assert (=> b!139913 (= res!66916 e!91257)))

(declare-fun res!66915 () Bool)

(assert (=> b!139913 (=> res!66915 e!91257)))

(assert (=> b!139913 (= res!66915 (not e!91249))))

(declare-fun res!66912 () Bool)

(assert (=> b!139913 (=> (not res!66912) (not e!91249))))

(assert (=> b!139913 (= res!66912 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139914 () Bool)

(declare-fun e!91255 () Bool)

(assert (=> b!139914 (= e!91255 (= (apply!120 lt!73306 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))

(declare-fun b!139915 () Bool)

(declare-fun e!91256 () ListLongMap!1745)

(assert (=> b!139915 (= e!91256 (+!179 call!15530 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!139916 () Bool)

(declare-fun e!91248 () ListLongMap!1745)

(declare-fun call!15532 () ListLongMap!1745)

(assert (=> b!139916 (= e!91248 call!15532)))

(declare-fun b!139917 () Bool)

(assert (=> b!139917 (= e!91247 e!91250)))

(declare-fun c!26152 () Bool)

(assert (=> b!139917 (= c!26152 (not (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139918 () Bool)

(declare-fun c!26154 () Bool)

(assert (=> b!139918 (= c!26154 (and (not (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139918 (= e!91258 e!91248)))

(declare-fun b!139919 () Bool)

(assert (=> b!139919 (= e!91256 e!91258)))

(declare-fun c!26155 () Bool)

(assert (=> b!139919 (= c!26155 (and (not (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139920 () Bool)

(assert (=> b!139920 (= e!91248 call!15526)))

(declare-fun b!139921 () Bool)

(assert (=> b!139921 (= e!91257 e!91253)))

(declare-fun res!66919 () Bool)

(assert (=> b!139921 (=> (not res!66919) (not e!91253))))

(assert (=> b!139921 (= res!66919 (contains!923 lt!73306 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139921 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139909 () Bool)

(assert (=> b!139909 (= e!91250 e!91255)))

(declare-fun res!66913 () Bool)

(assert (=> b!139909 (= res!66913 call!15531)))

(assert (=> b!139909 (=> (not res!66913) (not e!91255))))

(declare-fun d!43425 () Bool)

(assert (=> d!43425 e!91247))

(declare-fun res!66917 () Bool)

(assert (=> d!43425 (=> (not res!66917) (not e!91247))))

(assert (=> d!43425 (= res!66917 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73297 () ListLongMap!1745)

(assert (=> d!43425 (= lt!73306 lt!73297)))

(declare-fun lt!73292 () Unit!4373)

(assert (=> d!43425 (= lt!73292 e!91254)))

(declare-fun c!26151 () Bool)

(assert (=> d!43425 (= c!26151 e!91246)))

(declare-fun res!66918 () Bool)

(assert (=> d!43425 (=> (not res!66918) (not e!91246))))

(assert (=> d!43425 (= res!66918 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43425 (= lt!73297 e!91256)))

(declare-fun c!26153 () Bool)

(assert (=> d!43425 (= c!26153 (and (not (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43425 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43425 (= (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73306)))

(declare-fun b!139922 () Bool)

(declare-fun e!91252 () Bool)

(assert (=> b!139922 (= e!91252 (= (apply!120 lt!73306 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15525 () Bool)

(declare-fun call!15527 () ListLongMap!1745)

(declare-fun call!15529 () ListLongMap!1745)

(assert (=> bm!15525 (= call!15527 call!15529)))

(declare-fun bm!15526 () Bool)

(assert (=> bm!15526 (= call!15532 call!15527)))

(declare-fun b!139923 () Bool)

(assert (=> b!139923 (= e!91251 e!91252)))

(declare-fun res!66914 () Bool)

(assert (=> b!139923 (= res!66914 call!15528)))

(assert (=> b!139923 (=> (not res!66914) (not e!91252))))

(declare-fun bm!15527 () Bool)

(assert (=> bm!15527 (= call!15529 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15528 () Bool)

(assert (=> bm!15528 (= call!15530 (+!179 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!139924 () Bool)

(declare-fun Unit!4392 () Unit!4373)

(assert (=> b!139924 (= e!91254 Unit!4392)))

(declare-fun bm!15529 () Bool)

(assert (=> bm!15529 (= call!15528 (contains!923 lt!73306 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43425 c!26153) b!139915))

(assert (= (and d!43425 (not c!26153)) b!139919))

(assert (= (and b!139919 c!26155) b!139905))

(assert (= (and b!139919 (not c!26155)) b!139918))

(assert (= (and b!139918 c!26154) b!139920))

(assert (= (and b!139918 (not c!26154)) b!139916))

(assert (= (or b!139920 b!139916) bm!15526))

(assert (= (or b!139905 bm!15526) bm!15525))

(assert (= (or b!139905 b!139920) bm!15524))

(assert (= (or b!139915 bm!15525) bm!15527))

(assert (= (or b!139915 bm!15524) bm!15528))

(assert (= (and d!43425 res!66918) b!139906))

(assert (= (and d!43425 c!26151) b!139904))

(assert (= (and d!43425 (not c!26151)) b!139924))

(assert (= (and d!43425 res!66917) b!139913))

(assert (= (and b!139913 res!66912) b!139911))

(assert (= (and b!139913 (not res!66915)) b!139921))

(assert (= (and b!139921 res!66919) b!139908))

(assert (= (and b!139913 res!66916) b!139912))

(assert (= (and b!139912 c!26156) b!139923))

(assert (= (and b!139912 (not c!26156)) b!139910))

(assert (= (and b!139923 res!66914) b!139922))

(assert (= (or b!139923 b!139910) bm!15529))

(assert (= (and b!139912 res!66911) b!139917))

(assert (= (and b!139917 c!26152) b!139909))

(assert (= (and b!139917 (not c!26152)) b!139907))

(assert (= (and b!139909 res!66913) b!139914))

(assert (= (or b!139909 b!139907) bm!15523))

(declare-fun b_lambda!6245 () Bool)

(assert (=> (not b_lambda!6245) (not b!139908)))

(assert (=> b!139908 t!6337))

(declare-fun b_and!8731 () Bool)

(assert (= b_and!8727 (and (=> t!6337 result!4191) b_and!8731)))

(assert (=> b!139908 t!6339))

(declare-fun b_and!8733 () Bool)

(assert (= b_and!8729 (and (=> t!6339 result!4193) b_and!8733)))

(declare-fun m!166739 () Bool)

(assert (=> b!139904 m!166739))

(declare-fun m!166741 () Bool)

(assert (=> b!139904 m!166741))

(declare-fun m!166743 () Bool)

(assert (=> b!139904 m!166743))

(declare-fun m!166745 () Bool)

(assert (=> b!139904 m!166745))

(declare-fun m!166747 () Bool)

(assert (=> b!139904 m!166747))

(declare-fun m!166749 () Bool)

(assert (=> b!139904 m!166749))

(declare-fun m!166751 () Bool)

(assert (=> b!139904 m!166751))

(declare-fun m!166753 () Bool)

(assert (=> b!139904 m!166753))

(declare-fun m!166755 () Bool)

(assert (=> b!139904 m!166755))

(declare-fun m!166757 () Bool)

(assert (=> b!139904 m!166757))

(declare-fun m!166759 () Bool)

(assert (=> b!139904 m!166759))

(assert (=> b!139904 m!166749))

(assert (=> b!139904 m!166757))

(assert (=> b!139904 m!166385))

(declare-fun m!166761 () Bool)

(assert (=> b!139904 m!166761))

(assert (=> b!139904 m!166747))

(declare-fun m!166763 () Bool)

(assert (=> b!139904 m!166763))

(declare-fun m!166765 () Bool)

(assert (=> b!139904 m!166765))

(declare-fun m!166767 () Bool)

(assert (=> b!139904 m!166767))

(assert (=> b!139904 m!166765))

(declare-fun m!166769 () Bool)

(assert (=> b!139904 m!166769))

(declare-fun m!166771 () Bool)

(assert (=> b!139914 m!166771))

(declare-fun m!166773 () Bool)

(assert (=> bm!15523 m!166773))

(assert (=> d!43425 m!166429))

(assert (=> b!139921 m!166385))

(assert (=> b!139921 m!166385))

(declare-fun m!166775 () Bool)

(assert (=> b!139921 m!166775))

(assert (=> b!139906 m!166385))

(assert (=> b!139906 m!166385))

(assert (=> b!139906 m!166389))

(assert (=> bm!15527 m!166739))

(declare-fun m!166777 () Bool)

(assert (=> b!139915 m!166777))

(declare-fun m!166779 () Bool)

(assert (=> b!139922 m!166779))

(assert (=> b!139911 m!166385))

(assert (=> b!139911 m!166385))

(assert (=> b!139911 m!166389))

(declare-fun m!166781 () Bool)

(assert (=> bm!15528 m!166781))

(declare-fun m!166783 () Bool)

(assert (=> bm!15529 m!166783))

(assert (=> b!139908 m!166385))

(declare-fun m!166785 () Bool)

(assert (=> b!139908 m!166785))

(assert (=> b!139908 m!166443))

(declare-fun m!166787 () Bool)

(assert (=> b!139908 m!166787))

(assert (=> b!139908 m!166385))

(declare-fun m!166789 () Bool)

(assert (=> b!139908 m!166789))

(assert (=> b!139908 m!166443))

(assert (=> b!139908 m!166785))

(assert (=> bm!15477 d!43425))

(declare-fun d!43427 () Bool)

(assert (=> d!43427 (= (map!1442 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (getCurrentListMap!561 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun bs!5831 () Bool)

(assert (= bs!5831 d!43427))

(declare-fun m!166791 () Bool)

(assert (=> bs!5831 m!166791))

(assert (=> bm!15468 d!43427))

(declare-fun d!43429 () Bool)

(declare-fun e!91259 () Bool)

(assert (=> d!43429 e!91259))

(declare-fun res!66920 () Bool)

(assert (=> d!43429 (=> res!66920 e!91259)))

(declare-fun lt!73310 () Bool)

(assert (=> d!43429 (= res!66920 (not lt!73310))))

(declare-fun lt!73308 () Bool)

(assert (=> d!43429 (= lt!73310 lt!73308)))

(declare-fun lt!73309 () Unit!4373)

(declare-fun e!91260 () Unit!4373)

(assert (=> d!43429 (= lt!73309 e!91260)))

(declare-fun c!26157 () Bool)

(assert (=> d!43429 (= c!26157 lt!73308)))

(assert (=> d!43429 (= lt!73308 (containsKey!180 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43429 (= (contains!923 call!15465 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73310)))

(declare-fun b!139925 () Bool)

(declare-fun lt!73311 () Unit!4373)

(assert (=> b!139925 (= e!91260 lt!73311)))

(assert (=> b!139925 (= lt!73311 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!139925 (isDefined!129 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!139926 () Bool)

(declare-fun Unit!4393 () Unit!4373)

(assert (=> b!139926 (= e!91260 Unit!4393)))

(declare-fun b!139927 () Bool)

(assert (=> b!139927 (= e!91259 (isDefined!129 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (= (and d!43429 c!26157) b!139925))

(assert (= (and d!43429 (not c!26157)) b!139926))

(assert (= (and d!43429 (not res!66920)) b!139927))

(assert (=> d!43429 m!166013))

(declare-fun m!166793 () Bool)

(assert (=> d!43429 m!166793))

(assert (=> b!139925 m!166013))

(declare-fun m!166795 () Bool)

(assert (=> b!139925 m!166795))

(assert (=> b!139925 m!166013))

(declare-fun m!166797 () Bool)

(assert (=> b!139925 m!166797))

(assert (=> b!139925 m!166797))

(declare-fun m!166799 () Bool)

(assert (=> b!139925 m!166799))

(assert (=> b!139927 m!166013))

(assert (=> b!139927 m!166797))

(assert (=> b!139927 m!166797))

(assert (=> b!139927 m!166799))

(assert (=> b!139560 d!43429))

(declare-fun d!43431 () Bool)

(declare-fun e!91263 () Bool)

(assert (=> d!43431 e!91263))

(declare-fun c!26160 () Bool)

(assert (=> d!43431 (= c!26160 (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43431 true))

(declare-fun _$29!165 () Unit!4373)

(assert (=> d!43431 (= (choose!855 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) _$29!165)))

(declare-fun b!139932 () Bool)

(assert (=> b!139932 (= e!91263 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!139933 () Bool)

(assert (=> b!139933 (= e!91263 (ite (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43431 c!26160) b!139932))

(assert (= (and d!43431 (not c!26160)) b!139933))

(assert (=> b!139932 m!166013))

(assert (=> b!139932 m!166017))

(assert (=> d!43295 d!43431))

(assert (=> d!43295 d!43385))

(declare-fun d!43433 () Bool)

(assert (=> d!43433 (= (apply!120 lt!72907 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5832 () Bool)

(assert (= bs!5832 d!43433))

(assert (=> bs!5832 m!166489))

(assert (=> bs!5832 m!166489))

(declare-fun m!166801 () Bool)

(assert (=> bs!5832 m!166801))

(assert (=> b!139414 d!43433))

(declare-fun b!139934 () Bool)

(declare-fun e!91272 () Unit!4373)

(declare-fun lt!73333 () Unit!4373)

(assert (=> b!139934 (= e!91272 lt!73333)))

(declare-fun lt!73327 () ListLongMap!1745)

(assert (=> b!139934 (= lt!73327 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73329 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73329 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73328 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73328 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73331 () Unit!4373)

(assert (=> b!139934 (= lt!73331 (addStillContains!96 lt!73327 lt!73329 (zeroValue!2790 newMap!16) lt!73328))))

(assert (=> b!139934 (contains!923 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) lt!73328)))

(declare-fun lt!73322 () Unit!4373)

(assert (=> b!139934 (= lt!73322 lt!73331)))

(declare-fun lt!73330 () ListLongMap!1745)

(assert (=> b!139934 (= lt!73330 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73326 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73326 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73325 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73325 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73321 () Unit!4373)

(assert (=> b!139934 (= lt!73321 (addApplyDifferent!96 lt!73330 lt!73326 (minValue!2790 newMap!16) lt!73325))))

(assert (=> b!139934 (= (apply!120 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) lt!73325) (apply!120 lt!73330 lt!73325))))

(declare-fun lt!73317 () Unit!4373)

(assert (=> b!139934 (= lt!73317 lt!73321)))

(declare-fun lt!73312 () ListLongMap!1745)

(assert (=> b!139934 (= lt!73312 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73316 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73316 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73313 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73313 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73324 () Unit!4373)

(assert (=> b!139934 (= lt!73324 (addApplyDifferent!96 lt!73312 lt!73316 (zeroValue!2790 newMap!16) lt!73313))))

(assert (=> b!139934 (= (apply!120 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) lt!73313) (apply!120 lt!73312 lt!73313))))

(declare-fun lt!73320 () Unit!4373)

(assert (=> b!139934 (= lt!73320 lt!73324)))

(declare-fun lt!73314 () ListLongMap!1745)

(assert (=> b!139934 (= lt!73314 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73315 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73315 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73319 () (_ BitVec 64))

(assert (=> b!139934 (= lt!73319 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139934 (= lt!73333 (addApplyDifferent!96 lt!73314 lt!73315 (minValue!2790 newMap!16) lt!73319))))

(assert (=> b!139934 (= (apply!120 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) lt!73319) (apply!120 lt!73314 lt!73319))))

(declare-fun b!139935 () Bool)

(declare-fun e!91276 () ListLongMap!1745)

(declare-fun call!15533 () ListLongMap!1745)

(assert (=> b!139935 (= e!91276 call!15533)))

(declare-fun b!139936 () Bool)

(declare-fun e!91264 () Bool)

(assert (=> b!139936 (= e!91264 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139937 () Bool)

(declare-fun e!91268 () Bool)

(declare-fun call!15538 () Bool)

(assert (=> b!139937 (= e!91268 (not call!15538))))

(declare-fun b!139938 () Bool)

(declare-fun e!91271 () Bool)

(declare-fun lt!73332 () ListLongMap!1745)

(assert (=> b!139938 (= e!91271 (= (apply!120 lt!73332 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139938 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!139938 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15530 () Bool)

(assert (=> bm!15530 (= call!15538 (contains!923 lt!73332 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15531 () Bool)

(declare-fun call!15537 () ListLongMap!1745)

(assert (=> bm!15531 (= call!15533 call!15537)))

(declare-fun b!139940 () Bool)

(declare-fun e!91269 () Bool)

(declare-fun call!15535 () Bool)

(assert (=> b!139940 (= e!91269 (not call!15535))))

(declare-fun b!139941 () Bool)

(declare-fun e!91267 () Bool)

(assert (=> b!139941 (= e!91267 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139942 () Bool)

(declare-fun res!66921 () Bool)

(declare-fun e!91265 () Bool)

(assert (=> b!139942 (=> (not res!66921) (not e!91265))))

(assert (=> b!139942 (= res!66921 e!91269)))

(declare-fun c!26166 () Bool)

(assert (=> b!139942 (= c!26166 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139943 () Bool)

(declare-fun res!66926 () Bool)

(assert (=> b!139943 (=> (not res!66926) (not e!91265))))

(declare-fun e!91275 () Bool)

(assert (=> b!139943 (= res!66926 e!91275)))

(declare-fun res!66925 () Bool)

(assert (=> b!139943 (=> res!66925 e!91275)))

(assert (=> b!139943 (= res!66925 (not e!91267))))

(declare-fun res!66922 () Bool)

(assert (=> b!139943 (=> (not res!66922) (not e!91267))))

(assert (=> b!139943 (= res!66922 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139944 () Bool)

(declare-fun e!91273 () Bool)

(assert (=> b!139944 (= e!91273 (= (apply!120 lt!73332 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!139945 () Bool)

(declare-fun e!91274 () ListLongMap!1745)

(assert (=> b!139945 (= e!91274 (+!179 call!15537 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!139946 () Bool)

(declare-fun e!91266 () ListLongMap!1745)

(declare-fun call!15539 () ListLongMap!1745)

(assert (=> b!139946 (= e!91266 call!15539)))

(declare-fun b!139947 () Bool)

(assert (=> b!139947 (= e!91265 e!91268)))

(declare-fun c!26162 () Bool)

(assert (=> b!139947 (= c!26162 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139948 () Bool)

(declare-fun c!26164 () Bool)

(assert (=> b!139948 (= c!26164 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139948 (= e!91276 e!91266)))

(declare-fun b!139949 () Bool)

(assert (=> b!139949 (= e!91274 e!91276)))

(declare-fun c!26165 () Bool)

(assert (=> b!139949 (= c!26165 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139950 () Bool)

(assert (=> b!139950 (= e!91266 call!15533)))

(declare-fun b!139951 () Bool)

(assert (=> b!139951 (= e!91275 e!91271)))

(declare-fun res!66929 () Bool)

(assert (=> b!139951 (=> (not res!66929) (not e!91271))))

(assert (=> b!139951 (= res!66929 (contains!923 lt!73332 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139951 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!139939 () Bool)

(assert (=> b!139939 (= e!91268 e!91273)))

(declare-fun res!66923 () Bool)

(assert (=> b!139939 (= res!66923 call!15538)))

(assert (=> b!139939 (=> (not res!66923) (not e!91273))))

(declare-fun d!43435 () Bool)

(assert (=> d!43435 e!91265))

(declare-fun res!66927 () Bool)

(assert (=> d!43435 (=> (not res!66927) (not e!91265))))

(assert (=> d!43435 (= res!66927 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73323 () ListLongMap!1745)

(assert (=> d!43435 (= lt!73332 lt!73323)))

(declare-fun lt!73318 () Unit!4373)

(assert (=> d!43435 (= lt!73318 e!91272)))

(declare-fun c!26161 () Bool)

(assert (=> d!43435 (= c!26161 e!91264)))

(declare-fun res!66928 () Bool)

(assert (=> d!43435 (=> (not res!66928) (not e!91264))))

(assert (=> d!43435 (= res!66928 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43435 (= lt!73323 e!91274)))

(declare-fun c!26163 () Bool)

(assert (=> d!43435 (= c!26163 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43435 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43435 (= (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73332)))

(declare-fun b!139952 () Bool)

(declare-fun e!91270 () Bool)

(assert (=> b!139952 (= e!91270 (= (apply!120 lt!73332 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15532 () Bool)

(declare-fun call!15534 () ListLongMap!1745)

(declare-fun call!15536 () ListLongMap!1745)

(assert (=> bm!15532 (= call!15534 call!15536)))

(declare-fun bm!15533 () Bool)

(assert (=> bm!15533 (= call!15539 call!15534)))

(declare-fun b!139953 () Bool)

(assert (=> b!139953 (= e!91269 e!91270)))

(declare-fun res!66924 () Bool)

(assert (=> b!139953 (= res!66924 call!15535)))

(assert (=> b!139953 (=> (not res!66924) (not e!91270))))

(declare-fun bm!15534 () Bool)

(assert (=> bm!15534 (= call!15536 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15535 () Bool)

(assert (=> bm!15535 (= call!15537 (+!179 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!139954 () Bool)

(declare-fun Unit!4394 () Unit!4373)

(assert (=> b!139954 (= e!91272 Unit!4394)))

(declare-fun bm!15536 () Bool)

(assert (=> bm!15536 (= call!15535 (contains!923 lt!73332 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43435 c!26163) b!139945))

(assert (= (and d!43435 (not c!26163)) b!139949))

(assert (= (and b!139949 c!26165) b!139935))

(assert (= (and b!139949 (not c!26165)) b!139948))

(assert (= (and b!139948 c!26164) b!139950))

(assert (= (and b!139948 (not c!26164)) b!139946))

(assert (= (or b!139950 b!139946) bm!15533))

(assert (= (or b!139935 bm!15533) bm!15532))

(assert (= (or b!139935 b!139950) bm!15531))

(assert (= (or b!139945 bm!15532) bm!15534))

(assert (= (or b!139945 bm!15531) bm!15535))

(assert (= (and d!43435 res!66928) b!139936))

(assert (= (and d!43435 c!26161) b!139934))

(assert (= (and d!43435 (not c!26161)) b!139954))

(assert (= (and d!43435 res!66927) b!139943))

(assert (= (and b!139943 res!66922) b!139941))

(assert (= (and b!139943 (not res!66925)) b!139951))

(assert (= (and b!139951 res!66929) b!139938))

(assert (= (and b!139943 res!66926) b!139942))

(assert (= (and b!139942 c!26166) b!139953))

(assert (= (and b!139942 (not c!26166)) b!139940))

(assert (= (and b!139953 res!66924) b!139952))

(assert (= (or b!139953 b!139940) bm!15536))

(assert (= (and b!139942 res!66921) b!139947))

(assert (= (and b!139947 c!26162) b!139939))

(assert (= (and b!139947 (not c!26162)) b!139937))

(assert (= (and b!139939 res!66923) b!139944))

(assert (= (or b!139939 b!139937) bm!15530))

(declare-fun b_lambda!6247 () Bool)

(assert (=> (not b_lambda!6247) (not b!139938)))

(assert (=> b!139938 t!6337))

(declare-fun b_and!8735 () Bool)

(assert (= b_and!8731 (and (=> t!6337 result!4191) b_and!8735)))

(assert (=> b!139938 t!6339))

(declare-fun b_and!8737 () Bool)

(assert (= b_and!8733 (and (=> t!6339 result!4193) b_and!8737)))

(declare-fun m!166803 () Bool)

(assert (=> b!139934 m!166803))

(declare-fun m!166805 () Bool)

(assert (=> b!139934 m!166805))

(declare-fun m!166807 () Bool)

(assert (=> b!139934 m!166807))

(declare-fun m!166809 () Bool)

(assert (=> b!139934 m!166809))

(declare-fun m!166811 () Bool)

(assert (=> b!139934 m!166811))

(declare-fun m!166813 () Bool)

(assert (=> b!139934 m!166813))

(declare-fun m!166815 () Bool)

(assert (=> b!139934 m!166815))

(declare-fun m!166817 () Bool)

(assert (=> b!139934 m!166817))

(declare-fun m!166819 () Bool)

(assert (=> b!139934 m!166819))

(declare-fun m!166821 () Bool)

(assert (=> b!139934 m!166821))

(declare-fun m!166823 () Bool)

(assert (=> b!139934 m!166823))

(assert (=> b!139934 m!166813))

(assert (=> b!139934 m!166821))

(assert (=> b!139934 m!166385))

(declare-fun m!166825 () Bool)

(assert (=> b!139934 m!166825))

(assert (=> b!139934 m!166811))

(declare-fun m!166827 () Bool)

(assert (=> b!139934 m!166827))

(declare-fun m!166829 () Bool)

(assert (=> b!139934 m!166829))

(declare-fun m!166831 () Bool)

(assert (=> b!139934 m!166831))

(assert (=> b!139934 m!166829))

(declare-fun m!166833 () Bool)

(assert (=> b!139934 m!166833))

(declare-fun m!166835 () Bool)

(assert (=> b!139944 m!166835))

(declare-fun m!166837 () Bool)

(assert (=> bm!15530 m!166837))

(assert (=> d!43435 m!166429))

(assert (=> b!139951 m!166385))

(assert (=> b!139951 m!166385))

(declare-fun m!166839 () Bool)

(assert (=> b!139951 m!166839))

(assert (=> b!139936 m!166385))

(assert (=> b!139936 m!166385))

(assert (=> b!139936 m!166389))

(assert (=> bm!15534 m!166803))

(declare-fun m!166841 () Bool)

(assert (=> b!139945 m!166841))

(declare-fun m!166843 () Bool)

(assert (=> b!139952 m!166843))

(assert (=> b!139941 m!166385))

(assert (=> b!139941 m!166385))

(assert (=> b!139941 m!166389))

(declare-fun m!166845 () Bool)

(assert (=> bm!15535 m!166845))

(declare-fun m!166847 () Bool)

(assert (=> bm!15536 m!166847))

(assert (=> b!139938 m!166385))

(assert (=> b!139938 m!166785))

(assert (=> b!139938 m!166443))

(assert (=> b!139938 m!166787))

(assert (=> b!139938 m!166385))

(declare-fun m!166849 () Bool)

(assert (=> b!139938 m!166849))

(assert (=> b!139938 m!166443))

(assert (=> b!139938 m!166785))

(assert (=> d!43281 d!43435))

(declare-fun mapNonEmpty!4845 () Bool)

(declare-fun mapRes!4845 () Bool)

(declare-fun tp!11577 () Bool)

(declare-fun e!91277 () Bool)

(assert (=> mapNonEmpty!4845 (= mapRes!4845 (and tp!11577 e!91277))))

(declare-fun mapValue!4845 () ValueCell!1122)

(declare-fun mapRest!4845 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4845 () (_ BitVec 32))

(assert (=> mapNonEmpty!4845 (= mapRest!4843 (store mapRest!4845 mapKey!4845 mapValue!4845))))

(declare-fun b!139955 () Bool)

(assert (=> b!139955 (= e!91277 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4845 () Bool)

(assert (=> mapIsEmpty!4845 mapRes!4845))

(declare-fun condMapEmpty!4845 () Bool)

(declare-fun mapDefault!4845 () ValueCell!1122)

(assert (=> mapNonEmpty!4843 (= condMapEmpty!4845 (= mapRest!4843 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4845)))))

(declare-fun e!91278 () Bool)

(assert (=> mapNonEmpty!4843 (= tp!11575 (and e!91278 mapRes!4845))))

(declare-fun b!139956 () Bool)

(assert (=> b!139956 (= e!91278 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4843 condMapEmpty!4845) mapIsEmpty!4845))

(assert (= (and mapNonEmpty!4843 (not condMapEmpty!4845)) mapNonEmpty!4845))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1122) mapValue!4845)) b!139955))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1122) mapDefault!4845)) b!139956))

(declare-fun m!166851 () Bool)

(assert (=> mapNonEmpty!4845 m!166851))

(declare-fun mapNonEmpty!4846 () Bool)

(declare-fun mapRes!4846 () Bool)

(declare-fun tp!11578 () Bool)

(declare-fun e!91279 () Bool)

(assert (=> mapNonEmpty!4846 (= mapRes!4846 (and tp!11578 e!91279))))

(declare-fun mapValue!4846 () ValueCell!1122)

(declare-fun mapKey!4846 () (_ BitVec 32))

(declare-fun mapRest!4846 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4846 (= mapRest!4844 (store mapRest!4846 mapKey!4846 mapValue!4846))))

(declare-fun b!139957 () Bool)

(assert (=> b!139957 (= e!91279 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4846 () Bool)

(assert (=> mapIsEmpty!4846 mapRes!4846))

(declare-fun condMapEmpty!4846 () Bool)

(declare-fun mapDefault!4846 () ValueCell!1122)

(assert (=> mapNonEmpty!4844 (= condMapEmpty!4846 (= mapRest!4844 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4846)))))

(declare-fun e!91280 () Bool)

(assert (=> mapNonEmpty!4844 (= tp!11576 (and e!91280 mapRes!4846))))

(declare-fun b!139958 () Bool)

(assert (=> b!139958 (= e!91280 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4844 condMapEmpty!4846) mapIsEmpty!4846))

(assert (= (and mapNonEmpty!4844 (not condMapEmpty!4846)) mapNonEmpty!4846))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1122) mapValue!4846)) b!139957))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1122) mapDefault!4846)) b!139958))

(declare-fun m!166853 () Bool)

(assert (=> mapNonEmpty!4846 m!166853))

(declare-fun b_lambda!6249 () Bool)

(assert (= b_lambda!6245 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6249)))

(declare-fun b_lambda!6251 () Bool)

(assert (= b_lambda!6243 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6251)))

(declare-fun b_lambda!6253 () Bool)

(assert (= b_lambda!6239 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6253)))

(declare-fun b_lambda!6255 () Bool)

(assert (= b_lambda!6237 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6255)))

(declare-fun b_lambda!6257 () Bool)

(assert (= b_lambda!6247 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6257)))

(declare-fun b_lambda!6259 () Bool)

(assert (= b_lambda!6241 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6259)))

(check-sat (not b!139908) (not bm!15506) (not b_lambda!6259) (not b!139851) (not b!139719) (not bm!15536) (not b!139729) (not d!43425) (not b!139596) (not bm!15517) (not bm!15494) (not d!43397) (not d!43359) (not b_next!3029) (not mapNonEmpty!4845) (not d!43429) (not b!139644) (not d!43395) (not bm!15522) (not b!139881) (not b!139601) (not b!139645) (not bm!15530) (not b!139658) (not bm!15482) tp_is_empty!2931 (not b!139775) (not b!139900) (not b!139866) (not b!139717) (not d!43333) (not b!139877) (not b_lambda!6235) (not b!139769) (not b!139648) (not b_lambda!6253) (not d!43335) (not b!139669) (not b!139852) (not bm!15535) (not b!139864) (not b!139899) (not d!43357) (not b!139757) (not bm!15527) (not d!43337) (not d!43383) (not b!139901) (not bm!15498) (not b_lambda!6231) (not b!139952) (not b!139768) (not d!43435) (not b!139921) (not b!139945) b_and!8735 (not d!43341) (not b!139911) (not b!139747) (not d!43325) (not b!139662) (not d!43315) (not b!139927) (not bm!15484) (not b!139944) (not b!139841) (not d!43373) (not b!139938) (not d!43381) (not b!139914) (not bm!15488) (not d!43307) (not b!139635) (not b!139654) (not b_lambda!6251) (not d!43313) (not b!139597) (not bm!15529) (not b!139758) (not b!139915) (not bm!15505) (not b!139936) (not b!139716) (not b!139742) (not b!139855) (not b!139656) (not b!139602) (not b!139902) (not b!139709) (not b!139695) (not d!43415) (not b!139763) (not d!43319) (not d!43321) (not b!139637) (not d!43417) (not d!43409) (not b_next!3031) (not d!43423) (not b!139842) (not mapNonEmpty!4846) (not d!43367) (not bm!15518) (not b!139922) (not d!43403) (not b!139647) (not d!43347) (not d!43339) (not d!43345) (not b!139676) (not b!139665) (not b!139839) (not d!43419) (not b!139744) (not d!43361) (not b!139675) (not b!139660) (not b!139767) (not d!43323) (not b!139632) (not b!139698) (not b!139598) (not bm!15489) (not d!43399) (not b!139600) (not b!139941) (not b!139641) (not b!139904) (not b!139643) (not d!43311) (not d!43389) (not d!43387) (not d!43379) (not d!43331) (not b!139932) (not bm!15507) (not b!139599) (not b!139736) (not bm!15500) (not b!139649) (not b!139721) (not bm!15490) (not d!43363) (not b!139878) (not b!139803) (not d!43427) (not d!43391) (not bm!15516) (not b!139750) (not d!43365) (not b!139906) (not b!139595) (not bm!15499) (not bm!15493) (not d!43327) (not b_lambda!6257) (not b!139764) (not b!139724) (not b!139634) (not b_lambda!6249) (not d!43305) (not d!43317) (not d!43369) (not b!139739) (not b!139631) (not b!139657) (not b!139722) (not b!139903) (not b!139951) (not b!139896) (not b_lambda!6255) (not b!139925) (not b!139711) (not b!139714) (not bm!15483) (not b!139713) (not b!139668) (not b!139801) (not bm!15534) (not b!139751) (not b!139894) (not bm!15523) (not b!139934) (not b!139892) (not d!43377) (not bm!15528) (not d!43413) (not d!43433) (not b!139723) (not b!139804) (not d!43329) (not b!139639) b_and!8737 (not b!139638) (not b!139740) (not b!139720) (not b!139766))
(check-sat b_and!8735 b_and!8737 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!43437 () Bool)

(declare-fun e!91281 () Bool)

(assert (=> d!43437 e!91281))

(declare-fun res!66930 () Bool)

(assert (=> d!43437 (=> res!66930 e!91281)))

(declare-fun lt!73336 () Bool)

(assert (=> d!43437 (= res!66930 (not lt!73336))))

(declare-fun lt!73334 () Bool)

(assert (=> d!43437 (= lt!73336 lt!73334)))

(declare-fun lt!73335 () Unit!4373)

(declare-fun e!91282 () Unit!4373)

(assert (=> d!43437 (= lt!73335 e!91282)))

(declare-fun c!26167 () Bool)

(assert (=> d!43437 (= c!26167 lt!73334)))

(assert (=> d!43437 (= lt!73334 (containsKey!180 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43437 (= (contains!923 lt!73027 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73336)))

(declare-fun b!139959 () Bool)

(declare-fun lt!73337 () Unit!4373)

(assert (=> b!139959 (= e!91282 lt!73337)))

(assert (=> b!139959 (= lt!73337 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> b!139959 (isDefined!129 (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!139960 () Bool)

(declare-fun Unit!4395 () Unit!4373)

(assert (=> b!139960 (= e!91282 Unit!4395)))

(declare-fun b!139961 () Bool)

(assert (=> b!139961 (= e!91281 (isDefined!129 (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43437 c!26167) b!139959))

(assert (= (and d!43437 (not c!26167)) b!139960))

(assert (= (and d!43437 (not res!66930)) b!139961))

(declare-fun m!166855 () Bool)

(assert (=> d!43437 m!166855))

(declare-fun m!166857 () Bool)

(assert (=> b!139959 m!166857))

(assert (=> b!139959 m!166281))

(assert (=> b!139959 m!166281))

(declare-fun m!166859 () Bool)

(assert (=> b!139959 m!166859))

(assert (=> b!139961 m!166281))

(assert (=> b!139961 m!166281))

(assert (=> b!139961 m!166859))

(assert (=> d!43313 d!43437))

(declare-fun b!139965 () Bool)

(declare-fun e!91284 () Option!182)

(assert (=> b!139965 (= e!91284 None!180)))

(declare-fun b!139962 () Bool)

(declare-fun e!91283 () Option!182)

(assert (=> b!139962 (= e!91283 (Some!181 (_2!1360 (h!2348 lt!73024))))))

(declare-fun b!139963 () Bool)

(assert (=> b!139963 (= e!91283 e!91284)))

(declare-fun c!26169 () Bool)

(assert (=> b!139963 (= c!26169 (and ((_ is Cons!1741) lt!73024) (not (= (_1!1360 (h!2348 lt!73024)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26168 () Bool)

(declare-fun d!43439 () Bool)

(assert (=> d!43439 (= c!26168 (and ((_ is Cons!1741) lt!73024) (= (_1!1360 (h!2348 lt!73024)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43439 (= (getValueByKey!176 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91283)))

(declare-fun b!139964 () Bool)

(assert (=> b!139964 (= e!91284 (getValueByKey!176 (t!6329 lt!73024) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43439 c!26168) b!139962))

(assert (= (and d!43439 (not c!26168)) b!139963))

(assert (= (and b!139963 c!26169) b!139964))

(assert (= (and b!139963 (not c!26169)) b!139965))

(declare-fun m!166861 () Bool)

(assert (=> b!139964 m!166861))

(assert (=> d!43313 d!43439))

(declare-fun d!43441 () Bool)

(assert (=> d!43441 (= (getValueByKey!176 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73340 () Unit!4373)

(declare-fun choose!865 (List!1745 (_ BitVec 64) V!3555) Unit!4373)

(assert (=> d!43441 (= lt!73340 (choose!865 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!91287 () Bool)

(assert (=> d!43441 e!91287))

(declare-fun res!66935 () Bool)

(assert (=> d!43441 (=> (not res!66935) (not e!91287))))

(assert (=> d!43441 (= res!66935 (isStrictlySorted!325 lt!73024))))

(assert (=> d!43441 (= (lemmaContainsTupThenGetReturnValue!90 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73340)))

(declare-fun b!139970 () Bool)

(declare-fun res!66936 () Bool)

(assert (=> b!139970 (=> (not res!66936) (not e!91287))))

(assert (=> b!139970 (= res!66936 (containsKey!180 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!139971 () Bool)

(assert (=> b!139971 (= e!91287 (contains!925 lt!73024 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43441 res!66935) b!139970))

(assert (= (and b!139970 res!66936) b!139971))

(assert (=> d!43441 m!166275))

(declare-fun m!166863 () Bool)

(assert (=> d!43441 m!166863))

(declare-fun m!166865 () Bool)

(assert (=> d!43441 m!166865))

(declare-fun m!166867 () Bool)

(assert (=> b!139970 m!166867))

(declare-fun m!166869 () Bool)

(assert (=> b!139971 m!166869))

(assert (=> d!43313 d!43441))

(declare-fun b!139992 () Bool)

(declare-fun e!91298 () List!1745)

(declare-fun call!15548 () List!1745)

(assert (=> b!139992 (= e!91298 call!15548)))

(declare-fun bm!15543 () Bool)

(declare-fun call!15546 () List!1745)

(assert (=> bm!15543 (= call!15548 call!15546)))

(declare-fun d!43443 () Bool)

(declare-fun e!91302 () Bool)

(assert (=> d!43443 e!91302))

(declare-fun res!66941 () Bool)

(assert (=> d!43443 (=> (not res!66941) (not e!91302))))

(declare-fun lt!73343 () List!1745)

(assert (=> d!43443 (= res!66941 (isStrictlySorted!325 lt!73343))))

(declare-fun e!91299 () List!1745)

(assert (=> d!43443 (= lt!73343 e!91299)))

(declare-fun c!26180 () Bool)

(assert (=> d!43443 (= c!26180 (and ((_ is Cons!1741) (toList!888 lt!72889)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72889))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43443 (isStrictlySorted!325 (toList!888 lt!72889))))

(assert (=> d!43443 (= (insertStrictlySorted!93 (toList!888 lt!72889) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73343)))

(declare-fun bm!15544 () Bool)

(declare-fun call!15547 () List!1745)

(assert (=> bm!15544 (= call!15546 call!15547)))

(declare-fun b!139993 () Bool)

(declare-fun e!91300 () List!1745)

(assert (=> b!139993 (= e!91299 e!91300)))

(declare-fun c!26179 () Bool)

(assert (=> b!139993 (= c!26179 (and ((_ is Cons!1741) (toList!888 lt!72889)) (= (_1!1360 (h!2348 (toList!888 lt!72889))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139994 () Bool)

(assert (=> b!139994 (= e!91299 call!15547)))

(declare-fun bm!15545 () Bool)

(declare-fun e!91301 () List!1745)

(declare-fun $colon$colon!94 (List!1745 tuple2!2698) List!1745)

(assert (=> bm!15545 (= call!15547 ($colon$colon!94 e!91301 (ite c!26180 (h!2348 (toList!888 lt!72889)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26178 () Bool)

(assert (=> bm!15545 (= c!26178 c!26180)))

(declare-fun c!26181 () Bool)

(declare-fun b!139995 () Bool)

(assert (=> b!139995 (= e!91301 (ite c!26179 (t!6329 (toList!888 lt!72889)) (ite c!26181 (Cons!1741 (h!2348 (toList!888 lt!72889)) (t!6329 (toList!888 lt!72889))) Nil!1742)))))

(declare-fun b!139996 () Bool)

(assert (=> b!139996 (= e!91300 call!15546)))

(declare-fun b!139997 () Bool)

(assert (=> b!139997 (= e!91302 (contains!925 lt!73343 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!139998 () Bool)

(assert (=> b!139998 (= e!91301 (insertStrictlySorted!93 (t!6329 (toList!888 lt!72889)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!139999 () Bool)

(assert (=> b!139999 (= e!91298 call!15548)))

(declare-fun b!140000 () Bool)

(assert (=> b!140000 (= c!26181 (and ((_ is Cons!1741) (toList!888 lt!72889)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!72889))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!140000 (= e!91300 e!91298)))

(declare-fun b!140001 () Bool)

(declare-fun res!66942 () Bool)

(assert (=> b!140001 (=> (not res!66942) (not e!91302))))

(assert (=> b!140001 (= res!66942 (containsKey!180 lt!73343 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43443 c!26180) b!139994))

(assert (= (and d!43443 (not c!26180)) b!139993))

(assert (= (and b!139993 c!26179) b!139996))

(assert (= (and b!139993 (not c!26179)) b!140000))

(assert (= (and b!140000 c!26181) b!139999))

(assert (= (and b!140000 (not c!26181)) b!139992))

(assert (= (or b!139999 b!139992) bm!15543))

(assert (= (or b!139996 bm!15543) bm!15544))

(assert (= (or b!139994 bm!15544) bm!15545))

(assert (= (and bm!15545 c!26178) b!139998))

(assert (= (and bm!15545 (not c!26178)) b!139995))

(assert (= (and d!43443 res!66941) b!140001))

(assert (= (and b!140001 res!66942) b!139997))

(declare-fun m!166871 () Bool)

(assert (=> b!139998 m!166871))

(declare-fun m!166873 () Bool)

(assert (=> d!43443 m!166873))

(declare-fun m!166875 () Bool)

(assert (=> d!43443 m!166875))

(declare-fun m!166877 () Bool)

(assert (=> b!140001 m!166877))

(declare-fun m!166879 () Bool)

(assert (=> bm!15545 m!166879))

(declare-fun m!166881 () Bool)

(assert (=> b!139997 m!166881))

(assert (=> d!43313 d!43443))

(declare-fun d!43445 () Bool)

(declare-fun e!91303 () Bool)

(assert (=> d!43445 e!91303))

(declare-fun res!66943 () Bool)

(assert (=> d!43445 (=> res!66943 e!91303)))

(declare-fun lt!73346 () Bool)

(assert (=> d!43445 (= res!66943 (not lt!73346))))

(declare-fun lt!73344 () Bool)

(assert (=> d!43445 (= lt!73346 lt!73344)))

(declare-fun lt!73345 () Unit!4373)

(declare-fun e!91304 () Unit!4373)

(assert (=> d!43445 (= lt!73345 e!91304)))

(declare-fun c!26182 () Bool)

(assert (=> d!43445 (= c!26182 lt!73344)))

(assert (=> d!43445 (= lt!73344 (containsKey!180 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43445 (= (contains!923 lt!73306 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73346)))

(declare-fun b!140002 () Bool)

(declare-fun lt!73347 () Unit!4373)

(assert (=> b!140002 (= e!91304 lt!73347)))

(assert (=> b!140002 (= lt!73347 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140002 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140003 () Bool)

(declare-fun Unit!4396 () Unit!4373)

(assert (=> b!140003 (= e!91304 Unit!4396)))

(declare-fun b!140004 () Bool)

(assert (=> b!140004 (= e!91303 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43445 c!26182) b!140002))

(assert (= (and d!43445 (not c!26182)) b!140003))

(assert (= (and d!43445 (not res!66943)) b!140004))

(assert (=> d!43445 m!166385))

(declare-fun m!166883 () Bool)

(assert (=> d!43445 m!166883))

(assert (=> b!140002 m!166385))

(declare-fun m!166885 () Bool)

(assert (=> b!140002 m!166885))

(assert (=> b!140002 m!166385))

(declare-fun m!166887 () Bool)

(assert (=> b!140002 m!166887))

(assert (=> b!140002 m!166887))

(declare-fun m!166889 () Bool)

(assert (=> b!140002 m!166889))

(assert (=> b!140004 m!166385))

(assert (=> b!140004 m!166887))

(assert (=> b!140004 m!166887))

(assert (=> b!140004 m!166889))

(assert (=> b!139921 d!43445))

(assert (=> b!139855 d!43369))

(declare-fun d!43447 () Bool)

(declare-fun e!91305 () Bool)

(assert (=> d!43447 e!91305))

(declare-fun res!66944 () Bool)

(assert (=> d!43447 (=> res!66944 e!91305)))

(declare-fun lt!73350 () Bool)

(assert (=> d!43447 (= res!66944 (not lt!73350))))

(declare-fun lt!73348 () Bool)

(assert (=> d!43447 (= lt!73350 lt!73348)))

(declare-fun lt!73349 () Unit!4373)

(declare-fun e!91306 () Unit!4373)

(assert (=> d!43447 (= lt!73349 e!91306)))

(declare-fun c!26183 () Bool)

(assert (=> d!43447 (= c!26183 lt!73348)))

(assert (=> d!43447 (= lt!73348 (containsKey!180 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43447 (= (contains!923 (map!1442 (_2!1361 lt!73257)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73350)))

(declare-fun b!140005 () Bool)

(declare-fun lt!73351 () Unit!4373)

(assert (=> b!140005 (= e!91306 lt!73351)))

(assert (=> b!140005 (= lt!73351 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!140005 (isDefined!129 (getValueByKey!176 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!140006 () Bool)

(declare-fun Unit!4397 () Unit!4373)

(assert (=> b!140006 (= e!91306 Unit!4397)))

(declare-fun b!140007 () Bool)

(assert (=> b!140007 (= e!91305 (isDefined!129 (getValueByKey!176 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (= (and d!43447 c!26183) b!140005))

(assert (= (and d!43447 (not c!26183)) b!140006))

(assert (= (and d!43447 (not res!66944)) b!140007))

(assert (=> d!43447 m!166013))

(declare-fun m!166891 () Bool)

(assert (=> d!43447 m!166891))

(assert (=> b!140005 m!166013))

(declare-fun m!166893 () Bool)

(assert (=> b!140005 m!166893))

(assert (=> b!140005 m!166013))

(declare-fun m!166895 () Bool)

(assert (=> b!140005 m!166895))

(assert (=> b!140005 m!166895))

(declare-fun m!166897 () Bool)

(assert (=> b!140005 m!166897))

(assert (=> b!140007 m!166013))

(assert (=> b!140007 m!166895))

(assert (=> b!140007 m!166895))

(assert (=> b!140007 m!166897))

(assert (=> b!139852 d!43447))

(declare-fun d!43449 () Bool)

(assert (=> d!43449 (= (map!1442 (_2!1361 lt!73257)) (getCurrentListMap!561 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))))))

(declare-fun bs!5833 () Bool)

(assert (= bs!5833 d!43449))

(declare-fun m!166899 () Bool)

(assert (=> bs!5833 m!166899))

(assert (=> b!139852 d!43449))

(declare-fun d!43451 () Bool)

(declare-fun e!91307 () Bool)

(assert (=> d!43451 e!91307))

(declare-fun res!66945 () Bool)

(assert (=> d!43451 (=> res!66945 e!91307)))

(declare-fun lt!73354 () Bool)

(assert (=> d!43451 (= res!66945 (not lt!73354))))

(declare-fun lt!73352 () Bool)

(assert (=> d!43451 (= lt!73354 lt!73352)))

(declare-fun lt!73353 () Unit!4373)

(declare-fun e!91308 () Unit!4373)

(assert (=> d!43451 (= lt!73353 e!91308)))

(declare-fun c!26184 () Bool)

(assert (=> d!43451 (= c!26184 lt!73352)))

(assert (=> d!43451 (= lt!73352 (containsKey!180 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43451 (= (contains!923 lt!73125 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73354)))

(declare-fun b!140008 () Bool)

(declare-fun lt!73355 () Unit!4373)

(assert (=> b!140008 (= e!91308 lt!73355)))

(assert (=> b!140008 (= lt!73355 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140008 (isDefined!129 (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140009 () Bool)

(declare-fun Unit!4398 () Unit!4373)

(assert (=> b!140009 (= e!91308 Unit!4398)))

(declare-fun b!140010 () Bool)

(assert (=> b!140010 (= e!91307 (isDefined!129 (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43451 c!26184) b!140008))

(assert (= (and d!43451 (not c!26184)) b!140009))

(assert (= (and d!43451 (not res!66945)) b!140010))

(declare-fun m!166901 () Bool)

(assert (=> d!43451 m!166901))

(declare-fun m!166903 () Bool)

(assert (=> b!140008 m!166903))

(assert (=> b!140008 m!166507))

(assert (=> b!140008 m!166507))

(declare-fun m!166905 () Bool)

(assert (=> b!140008 m!166905))

(assert (=> b!140010 m!166507))

(assert (=> b!140010 m!166507))

(assert (=> b!140010 m!166905))

(assert (=> d!43365 d!43451))

(declare-fun b!140014 () Bool)

(declare-fun e!91310 () Option!182)

(assert (=> b!140014 (= e!91310 None!180)))

(declare-fun b!140011 () Bool)

(declare-fun e!91309 () Option!182)

(assert (=> b!140011 (= e!91309 (Some!181 (_2!1360 (h!2348 lt!73122))))))

(declare-fun b!140012 () Bool)

(assert (=> b!140012 (= e!91309 e!91310)))

(declare-fun c!26186 () Bool)

(assert (=> b!140012 (= c!26186 (and ((_ is Cons!1741) lt!73122) (not (= (_1!1360 (h!2348 lt!73122)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26185 () Bool)

(declare-fun d!43453 () Bool)

(assert (=> d!43453 (= c!26185 (and ((_ is Cons!1741) lt!73122) (= (_1!1360 (h!2348 lt!73122)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43453 (= (getValueByKey!176 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91309)))

(declare-fun b!140013 () Bool)

(assert (=> b!140013 (= e!91310 (getValueByKey!176 (t!6329 lt!73122) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43453 c!26185) b!140011))

(assert (= (and d!43453 (not c!26185)) b!140012))

(assert (= (and b!140012 c!26186) b!140013))

(assert (= (and b!140012 (not c!26186)) b!140014))

(declare-fun m!166907 () Bool)

(assert (=> b!140013 m!166907))

(assert (=> d!43365 d!43453))

(declare-fun d!43455 () Bool)

(assert (=> d!43455 (= (getValueByKey!176 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!181 (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73356 () Unit!4373)

(assert (=> d!43455 (= lt!73356 (choose!865 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91311 () Bool)

(assert (=> d!43455 e!91311))

(declare-fun res!66946 () Bool)

(assert (=> d!43455 (=> (not res!66946) (not e!91311))))

(assert (=> d!43455 (= res!66946 (isStrictlySorted!325 lt!73122))))

(assert (=> d!43455 (= (lemmaContainsTupThenGetReturnValue!90 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73356)))

(declare-fun b!140015 () Bool)

(declare-fun res!66947 () Bool)

(assert (=> b!140015 (=> (not res!66947) (not e!91311))))

(assert (=> b!140015 (= res!66947 (containsKey!180 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140016 () Bool)

(assert (=> b!140016 (= e!91311 (contains!925 lt!73122 (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43455 res!66946) b!140015))

(assert (= (and b!140015 res!66947) b!140016))

(assert (=> d!43455 m!166501))

(declare-fun m!166909 () Bool)

(assert (=> d!43455 m!166909))

(declare-fun m!166911 () Bool)

(assert (=> d!43455 m!166911))

(declare-fun m!166913 () Bool)

(assert (=> b!140015 m!166913))

(declare-fun m!166915 () Bool)

(assert (=> b!140016 m!166915))

(assert (=> d!43365 d!43455))

(declare-fun b!140017 () Bool)

(declare-fun e!91312 () List!1745)

(declare-fun call!15551 () List!1745)

(assert (=> b!140017 (= e!91312 call!15551)))

(declare-fun bm!15546 () Bool)

(declare-fun call!15549 () List!1745)

(assert (=> bm!15546 (= call!15551 call!15549)))

(declare-fun d!43457 () Bool)

(declare-fun e!91316 () Bool)

(assert (=> d!43457 e!91316))

(declare-fun res!66948 () Bool)

(assert (=> d!43457 (=> (not res!66948) (not e!91316))))

(declare-fun lt!73357 () List!1745)

(assert (=> d!43457 (= res!66948 (isStrictlySorted!325 lt!73357))))

(declare-fun e!91313 () List!1745)

(assert (=> d!43457 (= lt!73357 e!91313)))

(declare-fun c!26189 () Bool)

(assert (=> d!43457 (= c!26189 (and ((_ is Cons!1741) (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43457 (isStrictlySorted!325 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))))

(assert (=> d!43457 (= (insertStrictlySorted!93 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73357)))

(declare-fun bm!15547 () Bool)

(declare-fun call!15550 () List!1745)

(assert (=> bm!15547 (= call!15549 call!15550)))

(declare-fun b!140018 () Bool)

(declare-fun e!91314 () List!1745)

(assert (=> b!140018 (= e!91313 e!91314)))

(declare-fun c!26188 () Bool)

(assert (=> b!140018 (= c!26188 (and ((_ is Cons!1741) (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (= (_1!1360 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140019 () Bool)

(assert (=> b!140019 (= e!91313 call!15550)))

(declare-fun bm!15548 () Bool)

(declare-fun e!91315 () List!1745)

(assert (=> bm!15548 (= call!15550 ($colon$colon!94 e!91315 (ite c!26189 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26187 () Bool)

(assert (=> bm!15548 (= c!26187 c!26189)))

(declare-fun c!26190 () Bool)

(declare-fun b!140020 () Bool)

(assert (=> b!140020 (= e!91315 (ite c!26188 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (ite c!26190 (Cons!1741 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) Nil!1742)))))

(declare-fun b!140021 () Bool)

(assert (=> b!140021 (= e!91314 call!15549)))

(declare-fun b!140022 () Bool)

(assert (=> b!140022 (= e!91316 (contains!925 lt!73357 (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140023 () Bool)

(assert (=> b!140023 (= e!91315 (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140024 () Bool)

(assert (=> b!140024 (= e!91312 call!15551)))

(declare-fun b!140025 () Bool)

(assert (=> b!140025 (= c!26190 (and ((_ is Cons!1741) (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (bvsgt (_1!1360 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!140025 (= e!91314 e!91312)))

(declare-fun b!140026 () Bool)

(declare-fun res!66949 () Bool)

(assert (=> b!140026 (=> (not res!66949) (not e!91316))))

(assert (=> b!140026 (= res!66949 (containsKey!180 lt!73357 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43457 c!26189) b!140019))

(assert (= (and d!43457 (not c!26189)) b!140018))

(assert (= (and b!140018 c!26188) b!140021))

(assert (= (and b!140018 (not c!26188)) b!140025))

(assert (= (and b!140025 c!26190) b!140024))

(assert (= (and b!140025 (not c!26190)) b!140017))

(assert (= (or b!140024 b!140017) bm!15546))

(assert (= (or b!140021 bm!15546) bm!15547))

(assert (= (or b!140019 bm!15547) bm!15548))

(assert (= (and bm!15548 c!26187) b!140023))

(assert (= (and bm!15548 (not c!26187)) b!140020))

(assert (= (and d!43457 res!66948) b!140026))

(assert (= (and b!140026 res!66949) b!140022))

(declare-fun m!166917 () Bool)

(assert (=> b!140023 m!166917))

(declare-fun m!166919 () Bool)

(assert (=> d!43457 m!166919))

(declare-fun m!166921 () Bool)

(assert (=> d!43457 m!166921))

(declare-fun m!166923 () Bool)

(assert (=> b!140026 m!166923))

(declare-fun m!166925 () Bool)

(assert (=> bm!15548 m!166925))

(declare-fun m!166927 () Bool)

(assert (=> b!140022 m!166927))

(assert (=> d!43365 d!43457))

(declare-fun b!140027 () Bool)

(declare-fun e!91325 () Unit!4373)

(declare-fun lt!73379 () Unit!4373)

(assert (=> b!140027 (= e!91325 lt!73379)))

(declare-fun lt!73373 () ListLongMap!1745)

(assert (=> b!140027 (= lt!73373 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun lt!73375 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73375 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73374 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73374 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))

(declare-fun lt!73377 () Unit!4373)

(assert (=> b!140027 (= lt!73377 (addStillContains!96 lt!73373 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73374))))

(assert (=> b!140027 (contains!923 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73374)))

(declare-fun lt!73368 () Unit!4373)

(assert (=> b!140027 (= lt!73368 lt!73377)))

(declare-fun lt!73376 () ListLongMap!1745)

(assert (=> b!140027 (= lt!73376 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun lt!73372 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73372 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73371 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73371 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))

(declare-fun lt!73367 () Unit!4373)

(assert (=> b!140027 (= lt!73367 (addApplyDifferent!96 lt!73376 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73371))))

(assert (=> b!140027 (= (apply!120 (+!179 lt!73376 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73371) (apply!120 lt!73376 lt!73371))))

(declare-fun lt!73363 () Unit!4373)

(assert (=> b!140027 (= lt!73363 lt!73367)))

(declare-fun lt!73358 () ListLongMap!1745)

(assert (=> b!140027 (= lt!73358 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun lt!73362 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73362 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73359 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73359 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))

(declare-fun lt!73370 () Unit!4373)

(assert (=> b!140027 (= lt!73370 (addApplyDifferent!96 lt!73358 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73359))))

(assert (=> b!140027 (= (apply!120 (+!179 lt!73358 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73359) (apply!120 lt!73358 lt!73359))))

(declare-fun lt!73366 () Unit!4373)

(assert (=> b!140027 (= lt!73366 lt!73370)))

(declare-fun lt!73360 () ListLongMap!1745)

(assert (=> b!140027 (= lt!73360 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun lt!73361 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73361 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73365 () (_ BitVec 64))

(assert (=> b!140027 (= lt!73365 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))

(assert (=> b!140027 (= lt!73379 (addApplyDifferent!96 lt!73360 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73365))))

(assert (=> b!140027 (= (apply!120 (+!179 lt!73360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73365) (apply!120 lt!73360 lt!73365))))

(declare-fun b!140028 () Bool)

(declare-fun e!91329 () ListLongMap!1745)

(declare-fun call!15552 () ListLongMap!1745)

(assert (=> b!140028 (= e!91329 call!15552)))

(declare-fun e!91317 () Bool)

(declare-fun b!140029 () Bool)

(assert (=> b!140029 (= e!91317 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140030 () Bool)

(declare-fun e!91321 () Bool)

(declare-fun call!15557 () Bool)

(assert (=> b!140030 (= e!91321 (not call!15557))))

(declare-fun b!140031 () Bool)

(declare-fun e!91324 () Bool)

(declare-fun lt!73378 () ListLongMap!1745)

(assert (=> b!140031 (= e!91324 (= (apply!120 lt!73378 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140031 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (=> b!140031 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun bm!15549 () Bool)

(assert (=> bm!15549 (= call!15557 (contains!923 lt!73378 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15550 () Bool)

(declare-fun call!15556 () ListLongMap!1745)

(assert (=> bm!15550 (= call!15552 call!15556)))

(declare-fun b!140033 () Bool)

(declare-fun e!91322 () Bool)

(declare-fun call!15554 () Bool)

(assert (=> b!140033 (= e!91322 (not call!15554))))

(declare-fun b!140034 () Bool)

(declare-fun e!91320 () Bool)

(assert (=> b!140034 (= e!91320 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140035 () Bool)

(declare-fun res!66950 () Bool)

(declare-fun e!91318 () Bool)

(assert (=> b!140035 (=> (not res!66950) (not e!91318))))

(assert (=> b!140035 (= res!66950 e!91322)))

(declare-fun c!26196 () Bool)

(assert (=> b!140035 (= c!26196 (not (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140036 () Bool)

(declare-fun res!66955 () Bool)

(assert (=> b!140036 (=> (not res!66955) (not e!91318))))

(declare-fun e!91328 () Bool)

(assert (=> b!140036 (= res!66955 e!91328)))

(declare-fun res!66954 () Bool)

(assert (=> b!140036 (=> res!66954 e!91328)))

(assert (=> b!140036 (= res!66954 (not e!91320))))

(declare-fun res!66951 () Bool)

(assert (=> b!140036 (=> (not res!66951) (not e!91320))))

(assert (=> b!140036 (= res!66951 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun e!91326 () Bool)

(declare-fun b!140037 () Bool)

(assert (=> b!140037 (= e!91326 (= (apply!120 lt!73378 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun e!91327 () ListLongMap!1745)

(declare-fun b!140038 () Bool)

(assert (=> b!140038 (= e!91327 (+!179 call!15556 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun b!140039 () Bool)

(declare-fun e!91319 () ListLongMap!1745)

(declare-fun call!15558 () ListLongMap!1745)

(assert (=> b!140039 (= e!91319 call!15558)))

(declare-fun b!140040 () Bool)

(assert (=> b!140040 (= e!91318 e!91321)))

(declare-fun c!26192 () Bool)

(assert (=> b!140040 (= c!26192 (not (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140041 () Bool)

(declare-fun c!26194 () Bool)

(assert (=> b!140041 (= c!26194 (and (not (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140041 (= e!91329 e!91319)))

(declare-fun b!140042 () Bool)

(assert (=> b!140042 (= e!91327 e!91329)))

(declare-fun c!26195 () Bool)

(assert (=> b!140042 (= c!26195 (and (not (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140043 () Bool)

(assert (=> b!140043 (= e!91319 call!15552)))

(declare-fun b!140044 () Bool)

(assert (=> b!140044 (= e!91328 e!91324)))

(declare-fun res!66958 () Bool)

(assert (=> b!140044 (=> (not res!66958) (not e!91324))))

(assert (=> b!140044 (= res!66958 (contains!923 lt!73378 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(assert (=> b!140044 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun b!140032 () Bool)

(assert (=> b!140032 (= e!91321 e!91326)))

(declare-fun res!66952 () Bool)

(assert (=> b!140032 (= res!66952 call!15557)))

(assert (=> b!140032 (=> (not res!66952) (not e!91326))))

(declare-fun d!43459 () Bool)

(assert (=> d!43459 e!91318))

(declare-fun res!66956 () Bool)

(assert (=> d!43459 (=> (not res!66956) (not e!91318))))

(assert (=> d!43459 (= res!66956 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun lt!73369 () ListLongMap!1745)

(assert (=> d!43459 (= lt!73378 lt!73369)))

(declare-fun lt!73364 () Unit!4373)

(assert (=> d!43459 (= lt!73364 e!91325)))

(declare-fun c!26191 () Bool)

(assert (=> d!43459 (= c!26191 e!91317)))

(declare-fun res!66957 () Bool)

(assert (=> d!43459 (=> (not res!66957) (not e!91317))))

(assert (=> d!43459 (= res!66957 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (=> d!43459 (= lt!73369 e!91327)))

(declare-fun c!26193 () Bool)

(assert (=> d!43459 (= c!26193 (and (not (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43459 (validMask!0 (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))

(assert (=> d!43459 (= (getCurrentListMap!561 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) lt!73378)))

(declare-fun b!140045 () Bool)

(declare-fun e!91323 () Bool)

(assert (=> b!140045 (= e!91323 (= (apply!120 lt!73378 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun bm!15551 () Bool)

(declare-fun call!15553 () ListLongMap!1745)

(declare-fun call!15555 () ListLongMap!1745)

(assert (=> bm!15551 (= call!15553 call!15555)))

(declare-fun bm!15552 () Bool)

(assert (=> bm!15552 (= call!15558 call!15553)))

(declare-fun b!140046 () Bool)

(assert (=> b!140046 (= e!91322 e!91323)))

(declare-fun res!66953 () Bool)

(assert (=> b!140046 (= res!66953 call!15554)))

(assert (=> b!140046 (=> (not res!66953) (not e!91323))))

(declare-fun bm!15553 () Bool)

(assert (=> bm!15553 (= call!15555 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun bm!15554 () Bool)

(assert (=> bm!15554 (= call!15556 (+!179 (ite c!26193 call!15555 (ite c!26195 call!15553 call!15558)) (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(declare-fun b!140047 () Bool)

(declare-fun Unit!4399 () Unit!4373)

(assert (=> b!140047 (= e!91325 Unit!4399)))

(declare-fun bm!15555 () Bool)

(assert (=> bm!15555 (= call!15554 (contains!923 lt!73378 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43459 c!26193) b!140038))

(assert (= (and d!43459 (not c!26193)) b!140042))

(assert (= (and b!140042 c!26195) b!140028))

(assert (= (and b!140042 (not c!26195)) b!140041))

(assert (= (and b!140041 c!26194) b!140043))

(assert (= (and b!140041 (not c!26194)) b!140039))

(assert (= (or b!140043 b!140039) bm!15552))

(assert (= (or b!140028 bm!15552) bm!15551))

(assert (= (or b!140028 b!140043) bm!15550))

(assert (= (or b!140038 bm!15551) bm!15553))

(assert (= (or b!140038 bm!15550) bm!15554))

(assert (= (and d!43459 res!66957) b!140029))

(assert (= (and d!43459 c!26191) b!140027))

(assert (= (and d!43459 (not c!26191)) b!140047))

(assert (= (and d!43459 res!66956) b!140036))

(assert (= (and b!140036 res!66951) b!140034))

(assert (= (and b!140036 (not res!66954)) b!140044))

(assert (= (and b!140044 res!66958) b!140031))

(assert (= (and b!140036 res!66955) b!140035))

(assert (= (and b!140035 c!26196) b!140046))

(assert (= (and b!140035 (not c!26196)) b!140033))

(assert (= (and b!140046 res!66953) b!140045))

(assert (= (or b!140046 b!140033) bm!15555))

(assert (= (and b!140035 res!66950) b!140040))

(assert (= (and b!140040 c!26192) b!140032))

(assert (= (and b!140040 (not c!26192)) b!140030))

(assert (= (and b!140032 res!66952) b!140037))

(assert (= (or b!140032 b!140030) bm!15549))

(declare-fun b_lambda!6261 () Bool)

(assert (=> (not b_lambda!6261) (not b!140031)))

(declare-fun t!6341 () Bool)

(declare-fun tb!2557 () Bool)

(assert (=> (and b!139297 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) t!6341) tb!2557))

(declare-fun result!4195 () Bool)

(assert (=> tb!2557 (= result!4195 tp_is_empty!2931)))

(assert (=> b!140031 t!6341))

(declare-fun b_and!8739 () Bool)

(assert (= b_and!8735 (and (=> t!6341 result!4195) b_and!8739)))

(declare-fun tb!2559 () Bool)

(declare-fun t!6343 () Bool)

(assert (=> (and b!139291 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) t!6343) tb!2559))

(declare-fun result!4197 () Bool)

(assert (= result!4197 result!4195))

(assert (=> b!140031 t!6343))

(declare-fun b_and!8741 () Bool)

(assert (= b_and!8737 (and (=> t!6343 result!4197) b_and!8741)))

(declare-fun m!166929 () Bool)

(assert (=> b!140027 m!166929))

(declare-fun m!166931 () Bool)

(assert (=> b!140027 m!166931))

(declare-fun m!166933 () Bool)

(assert (=> b!140027 m!166933))

(declare-fun m!166935 () Bool)

(assert (=> b!140027 m!166935))

(declare-fun m!166937 () Bool)

(assert (=> b!140027 m!166937))

(declare-fun m!166939 () Bool)

(assert (=> b!140027 m!166939))

(declare-fun m!166941 () Bool)

(assert (=> b!140027 m!166941))

(declare-fun m!166943 () Bool)

(assert (=> b!140027 m!166943))

(declare-fun m!166945 () Bool)

(assert (=> b!140027 m!166945))

(declare-fun m!166947 () Bool)

(assert (=> b!140027 m!166947))

(declare-fun m!166949 () Bool)

(assert (=> b!140027 m!166949))

(assert (=> b!140027 m!166939))

(assert (=> b!140027 m!166947))

(declare-fun m!166951 () Bool)

(assert (=> b!140027 m!166951))

(declare-fun m!166953 () Bool)

(assert (=> b!140027 m!166953))

(assert (=> b!140027 m!166937))

(declare-fun m!166955 () Bool)

(assert (=> b!140027 m!166955))

(declare-fun m!166957 () Bool)

(assert (=> b!140027 m!166957))

(declare-fun m!166959 () Bool)

(assert (=> b!140027 m!166959))

(assert (=> b!140027 m!166957))

(declare-fun m!166961 () Bool)

(assert (=> b!140027 m!166961))

(declare-fun m!166963 () Bool)

(assert (=> b!140037 m!166963))

(declare-fun m!166965 () Bool)

(assert (=> bm!15549 m!166965))

(declare-fun m!166967 () Bool)

(assert (=> d!43459 m!166967))

(assert (=> b!140044 m!166951))

(assert (=> b!140044 m!166951))

(declare-fun m!166969 () Bool)

(assert (=> b!140044 m!166969))

(assert (=> b!140029 m!166951))

(assert (=> b!140029 m!166951))

(declare-fun m!166971 () Bool)

(assert (=> b!140029 m!166971))

(assert (=> bm!15553 m!166929))

(declare-fun m!166973 () Bool)

(assert (=> b!140038 m!166973))

(declare-fun m!166975 () Bool)

(assert (=> b!140045 m!166975))

(assert (=> b!140034 m!166951))

(assert (=> b!140034 m!166951))

(assert (=> b!140034 m!166971))

(declare-fun m!166977 () Bool)

(assert (=> bm!15554 m!166977))

(declare-fun m!166979 () Bool)

(assert (=> bm!15555 m!166979))

(assert (=> b!140031 m!166951))

(declare-fun m!166981 () Bool)

(assert (=> b!140031 m!166981))

(declare-fun m!166983 () Bool)

(assert (=> b!140031 m!166983))

(declare-fun m!166985 () Bool)

(assert (=> b!140031 m!166985))

(assert (=> b!140031 m!166951))

(declare-fun m!166987 () Bool)

(assert (=> b!140031 m!166987))

(assert (=> b!140031 m!166983))

(assert (=> b!140031 m!166981))

(assert (=> d!43395 d!43459))

(declare-fun d!43461 () Bool)

(assert (=> d!43461 (= (apply!120 lt!73332 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5834 () Bool)

(assert (= bs!5834 d!43461))

(assert (=> bs!5834 m!166385))

(declare-fun m!166989 () Bool)

(assert (=> bs!5834 m!166989))

(assert (=> bs!5834 m!166989))

(declare-fun m!166991 () Bool)

(assert (=> bs!5834 m!166991))

(assert (=> b!139938 d!43461))

(declare-fun d!43463 () Bool)

(declare-fun c!26197 () Bool)

(assert (=> d!43463 (= c!26197 ((_ is ValueCellFull!1122) (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91330 () V!3555)

(assert (=> d!43463 (= (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91330)))

(declare-fun b!140048 () Bool)

(assert (=> b!140048 (= e!91330 (get!1529 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140049 () Bool)

(assert (=> b!140049 (= e!91330 (get!1530 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43463 c!26197) b!140048))

(assert (= (and d!43463 (not c!26197)) b!140049))

(assert (=> b!140048 m!166785))

(assert (=> b!140048 m!166443))

(declare-fun m!166993 () Bool)

(assert (=> b!140048 m!166993))

(assert (=> b!140049 m!166785))

(assert (=> b!140049 m!166443))

(declare-fun m!166995 () Bool)

(assert (=> b!140049 m!166995))

(assert (=> b!139938 d!43463))

(declare-fun d!43465 () Bool)

(declare-fun e!91331 () Bool)

(assert (=> d!43465 e!91331))

(declare-fun res!66959 () Bool)

(assert (=> d!43465 (=> (not res!66959) (not e!91331))))

(declare-fun lt!73383 () ListLongMap!1745)

(assert (=> d!43465 (= res!66959 (contains!923 lt!73383 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73380 () List!1745)

(assert (=> d!43465 (= lt!73383 (ListLongMap!1746 lt!73380))))

(declare-fun lt!73381 () Unit!4373)

(declare-fun lt!73382 () Unit!4373)

(assert (=> d!43465 (= lt!73381 lt!73382)))

(assert (=> d!43465 (= (getValueByKey!176 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43465 (= lt!73382 (lemmaContainsTupThenGetReturnValue!90 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43465 (= lt!73380 (insertStrictlySorted!93 (toList!888 call!15501) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43465 (= (+!179 call!15501 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!73383)))

(declare-fun b!140050 () Bool)

(declare-fun res!66960 () Bool)

(assert (=> b!140050 (=> (not res!66960) (not e!91331))))

(assert (=> b!140050 (= res!66960 (= (getValueByKey!176 (toList!888 lt!73383) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!140051 () Bool)

(assert (=> b!140051 (= e!91331 (contains!925 (toList!888 lt!73383) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!43465 res!66959) b!140050))

(assert (= (and b!140050 res!66960) b!140051))

(declare-fun m!166997 () Bool)

(assert (=> d!43465 m!166997))

(declare-fun m!166999 () Bool)

(assert (=> d!43465 m!166999))

(declare-fun m!167001 () Bool)

(assert (=> d!43465 m!167001))

(declare-fun m!167003 () Bool)

(assert (=> d!43465 m!167003))

(declare-fun m!167005 () Bool)

(assert (=> b!140050 m!167005))

(declare-fun m!167007 () Bool)

(assert (=> b!140051 m!167007))

(assert (=> b!139751 d!43465))

(declare-fun d!43467 () Bool)

(assert (=> d!43467 (= (isDefined!129 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not (isEmpty!418 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun bs!5835 () Bool)

(assert (= bs!5835 d!43467))

(assert (=> bs!5835 m!166797))

(declare-fun m!167009 () Bool)

(assert (=> bs!5835 m!167009))

(assert (=> b!139927 d!43467))

(declare-fun b!140055 () Bool)

(declare-fun e!91333 () Option!182)

(assert (=> b!140055 (= e!91333 None!180)))

(declare-fun b!140052 () Bool)

(declare-fun e!91332 () Option!182)

(assert (=> b!140052 (= e!91332 (Some!181 (_2!1360 (h!2348 (toList!888 call!15465)))))))

(declare-fun b!140053 () Bool)

(assert (=> b!140053 (= e!91332 e!91333)))

(declare-fun c!26199 () Bool)

(assert (=> b!140053 (= c!26199 (and ((_ is Cons!1741) (toList!888 call!15465)) (not (= (_1!1360 (h!2348 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun c!26198 () Bool)

(declare-fun d!43469 () Bool)

(assert (=> d!43469 (= c!26198 (and ((_ is Cons!1741) (toList!888 call!15465)) (= (_1!1360 (h!2348 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43469 (= (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91332)))

(declare-fun b!140054 () Bool)

(assert (=> b!140054 (= e!91333 (getValueByKey!176 (t!6329 (toList!888 call!15465)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43469 c!26198) b!140052))

(assert (= (and d!43469 (not c!26198)) b!140053))

(assert (= (and b!140053 c!26199) b!140054))

(assert (= (and b!140053 (not c!26199)) b!140055))

(assert (=> b!140054 m!166013))

(declare-fun m!167011 () Bool)

(assert (=> b!140054 m!167011))

(assert (=> b!139927 d!43469))

(declare-fun b!140059 () Bool)

(declare-fun e!91335 () Option!182)

(assert (=> b!140059 (= e!91335 None!180)))

(declare-fun b!140056 () Bool)

(declare-fun e!91334 () Option!182)

(assert (=> b!140056 (= e!91334 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72825))))))))

(declare-fun b!140057 () Bool)

(assert (=> b!140057 (= e!91334 e!91335)))

(declare-fun c!26201 () Bool)

(assert (=> b!140057 (= c!26201 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72825))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun d!43471 () Bool)

(declare-fun c!26200 () Bool)

(assert (=> d!43471 (= c!26200 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72825))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43471 (= (getValueByKey!176 (t!6329 (toList!888 lt!72825)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91334)))

(declare-fun b!140058 () Bool)

(assert (=> b!140058 (= e!91335 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43471 c!26200) b!140056))

(assert (= (and d!43471 (not c!26200)) b!140057))

(assert (= (and b!140057 c!26201) b!140058))

(assert (= (and b!140057 (not c!26201)) b!140059))

(assert (=> b!140058 m!166013))

(declare-fun m!167013 () Bool)

(assert (=> b!140058 m!167013))

(assert (=> b!139892 d!43471))

(declare-fun lt!73384 () Bool)

(declare-fun d!43473 () Bool)

(assert (=> d!43473 (= lt!73384 (select (content!137 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!91337 () Bool)

(assert (=> d!43473 (= lt!73384 e!91337)))

(declare-fun res!66961 () Bool)

(assert (=> d!43473 (=> (not res!66961) (not e!91337))))

(assert (=> d!43473 (= res!66961 ((_ is Cons!1742) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))))

(assert (=> d!43473 (= (contains!924 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!73384)))

(declare-fun b!140060 () Bool)

(declare-fun e!91336 () Bool)

(assert (=> b!140060 (= e!91337 e!91336)))

(declare-fun res!66962 () Bool)

(assert (=> b!140060 (=> res!66962 e!91336)))

(assert (=> b!140060 (= res!66962 (= (h!2349 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140061 () Bool)

(assert (=> b!140061 (= e!91336 (contains!924 (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!43473 res!66961) b!140060))

(assert (= (and b!140060 (not res!66962)) b!140061))

(declare-fun m!167015 () Bool)

(assert (=> d!43473 m!167015))

(assert (=> d!43473 m!166625))

(declare-fun m!167017 () Bool)

(assert (=> d!43473 m!167017))

(assert (=> b!140061 m!166625))

(declare-fun m!167019 () Bool)

(assert (=> b!140061 m!167019))

(assert (=> b!139801 d!43473))

(declare-fun b!140065 () Bool)

(declare-fun e!91339 () Option!182)

(assert (=> b!140065 (= e!91339 None!180)))

(declare-fun b!140062 () Bool)

(declare-fun e!91338 () Option!182)

(assert (=> b!140062 (= e!91338 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73125)))))))

(declare-fun b!140063 () Bool)

(assert (=> b!140063 (= e!91338 e!91339)))

(declare-fun c!26203 () Bool)

(assert (=> b!140063 (= c!26203 (and ((_ is Cons!1741) (toList!888 lt!73125)) (not (= (_1!1360 (h!2348 (toList!888 lt!73125))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun d!43475 () Bool)

(declare-fun c!26202 () Bool)

(assert (=> d!43475 (= c!26202 (and ((_ is Cons!1741) (toList!888 lt!73125)) (= (_1!1360 (h!2348 (toList!888 lt!73125))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43475 (= (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91338)))

(declare-fun b!140064 () Bool)

(assert (=> b!140064 (= e!91339 (getValueByKey!176 (t!6329 (toList!888 lt!73125)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43475 c!26202) b!140062))

(assert (= (and d!43475 (not c!26202)) b!140063))

(assert (= (and b!140063 c!26203) b!140064))

(assert (= (and b!140063 (not c!26203)) b!140065))

(declare-fun m!167021 () Bool)

(assert (=> b!140064 m!167021))

(assert (=> b!139720 d!43475))

(declare-fun b!140066 () Bool)

(declare-fun e!91341 () Bool)

(declare-fun e!91342 () Bool)

(assert (=> b!140066 (= e!91341 e!91342)))

(declare-fun lt!73386 () (_ BitVec 64))

(assert (=> b!140066 (= lt!73386 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!73385 () Unit!4373)

(assert (=> b!140066 (= lt!73385 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 #b00000000000000000000000000000000))))

(assert (=> b!140066 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 #b00000000000000000000000000000000)))

(declare-fun lt!73387 () Unit!4373)

(assert (=> b!140066 (= lt!73387 lt!73385)))

(declare-fun res!66963 () Bool)

(assert (=> b!140066 (= res!66963 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!140066 (=> (not res!66963) (not e!91342))))

(declare-fun d!43477 () Bool)

(declare-fun res!66964 () Bool)

(declare-fun e!91340 () Bool)

(assert (=> d!43477 (=> res!66964 e!91340)))

(assert (=> d!43477 (= res!66964 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43477 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))) e!91340)))

(declare-fun b!140067 () Bool)

(declare-fun call!15559 () Bool)

(assert (=> b!140067 (= e!91342 call!15559)))

(declare-fun bm!15556 () Bool)

(assert (=> bm!15556 (= call!15559 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!140068 () Bool)

(assert (=> b!140068 (= e!91340 e!91341)))

(declare-fun c!26204 () Bool)

(assert (=> b!140068 (= c!26204 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140069 () Bool)

(assert (=> b!140069 (= e!91341 call!15559)))

(assert (= (and d!43477 (not res!66964)) b!140068))

(assert (= (and b!140068 c!26204) b!140066))

(assert (= (and b!140068 (not c!26204)) b!140069))

(assert (= (and b!140066 res!66963) b!140067))

(assert (= (or b!140067 b!140069) bm!15556))

(declare-fun m!167023 () Bool)

(assert (=> b!140066 m!167023))

(declare-fun m!167025 () Bool)

(assert (=> b!140066 m!167025))

(declare-fun m!167027 () Bool)

(assert (=> b!140066 m!167027))

(assert (=> b!140066 m!167023))

(declare-fun m!167029 () Bool)

(assert (=> b!140066 m!167029))

(declare-fun m!167031 () Bool)

(assert (=> bm!15556 m!167031))

(assert (=> b!140068 m!167023))

(assert (=> b!140068 m!167023))

(declare-fun m!167033 () Bool)

(assert (=> b!140068 m!167033))

(assert (=> b!139723 d!43477))

(declare-fun d!43479 () Bool)

(assert (=> d!43479 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139665 d!43479))

(declare-fun d!43481 () Bool)

(assert (=> d!43481 (= (apply!120 lt!73332 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5836 () Bool)

(assert (= bs!5836 d!43481))

(declare-fun m!167035 () Bool)

(assert (=> bs!5836 m!167035))

(assert (=> bs!5836 m!167035))

(declare-fun m!167037 () Bool)

(assert (=> bs!5836 m!167037))

(assert (=> b!139944 d!43481))

(declare-fun d!43483 () Bool)

(assert (=> d!43483 (= (apply!120 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72888) (apply!120 lt!72887 lt!72888))))

(assert (=> d!43483 true))

(declare-fun _$34!996 () Unit!4373)

(assert (=> d!43483 (= (choose!856 lt!72887 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72888) _$34!996)))

(declare-fun bs!5837 () Bool)

(assert (= bs!5837 d!43483))

(assert (=> bs!5837 m!166109))

(assert (=> bs!5837 m!166109))

(assert (=> bs!5837 m!166111))

(assert (=> bs!5837 m!166123))

(assert (=> d!43317 d!43483))

(assert (=> d!43317 d!43323))

(assert (=> d!43317 d!43325))

(assert (=> d!43317 d!43329))

(declare-fun d!43485 () Bool)

(declare-fun e!91343 () Bool)

(assert (=> d!43485 e!91343))

(declare-fun res!66965 () Bool)

(assert (=> d!43485 (=> res!66965 e!91343)))

(declare-fun lt!73390 () Bool)

(assert (=> d!43485 (= res!66965 (not lt!73390))))

(declare-fun lt!73388 () Bool)

(assert (=> d!43485 (= lt!73390 lt!73388)))

(declare-fun lt!73389 () Unit!4373)

(declare-fun e!91344 () Unit!4373)

(assert (=> d!43485 (= lt!73389 e!91344)))

(declare-fun c!26205 () Bool)

(assert (=> d!43485 (= c!26205 lt!73388)))

(assert (=> d!43485 (= lt!73388 (containsKey!180 (toList!888 lt!72887) lt!72888))))

(assert (=> d!43485 (= (contains!923 lt!72887 lt!72888) lt!73390)))

(declare-fun b!140071 () Bool)

(declare-fun lt!73391 () Unit!4373)

(assert (=> b!140071 (= e!91344 lt!73391)))

(assert (=> b!140071 (= lt!73391 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72887) lt!72888))))

(assert (=> b!140071 (isDefined!129 (getValueByKey!176 (toList!888 lt!72887) lt!72888))))

(declare-fun b!140072 () Bool)

(declare-fun Unit!4400 () Unit!4373)

(assert (=> b!140072 (= e!91344 Unit!4400)))

(declare-fun b!140073 () Bool)

(assert (=> b!140073 (= e!91343 (isDefined!129 (getValueByKey!176 (toList!888 lt!72887) lt!72888)))))

(assert (= (and d!43485 c!26205) b!140071))

(assert (= (and d!43485 (not c!26205)) b!140072))

(assert (= (and d!43485 (not res!66965)) b!140073))

(declare-fun m!167039 () Bool)

(assert (=> d!43485 m!167039))

(declare-fun m!167041 () Bool)

(assert (=> b!140071 m!167041))

(assert (=> b!140071 m!166349))

(assert (=> b!140071 m!166349))

(declare-fun m!167043 () Bool)

(assert (=> b!140071 m!167043))

(assert (=> b!140073 m!166349))

(assert (=> b!140073 m!166349))

(assert (=> b!140073 m!167043))

(assert (=> d!43317 d!43485))

(declare-fun d!43487 () Bool)

(assert (=> d!43487 (= (get!1531 (getValueByKey!176 (toList!888 lt!72887) lt!72888)) (v!3284 (getValueByKey!176 (toList!888 lt!72887) lt!72888)))))

(assert (=> d!43329 d!43487))

(declare-fun b!140077 () Bool)

(declare-fun e!91346 () Option!182)

(assert (=> b!140077 (= e!91346 None!180)))

(declare-fun b!140074 () Bool)

(declare-fun e!91345 () Option!182)

(assert (=> b!140074 (= e!91345 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72887)))))))

(declare-fun b!140075 () Bool)

(assert (=> b!140075 (= e!91345 e!91346)))

(declare-fun c!26207 () Bool)

(assert (=> b!140075 (= c!26207 (and ((_ is Cons!1741) (toList!888 lt!72887)) (not (= (_1!1360 (h!2348 (toList!888 lt!72887))) lt!72888))))))

(declare-fun d!43489 () Bool)

(declare-fun c!26206 () Bool)

(assert (=> d!43489 (= c!26206 (and ((_ is Cons!1741) (toList!888 lt!72887)) (= (_1!1360 (h!2348 (toList!888 lt!72887))) lt!72888)))))

(assert (=> d!43489 (= (getValueByKey!176 (toList!888 lt!72887) lt!72888) e!91345)))

(declare-fun b!140076 () Bool)

(assert (=> b!140076 (= e!91346 (getValueByKey!176 (t!6329 (toList!888 lt!72887)) lt!72888))))

(assert (= (and d!43489 c!26206) b!140074))

(assert (= (and d!43489 (not c!26206)) b!140075))

(assert (= (and b!140075 c!26207) b!140076))

(assert (= (and b!140075 (not c!26207)) b!140077))

(declare-fun m!167045 () Bool)

(assert (=> b!140076 m!167045))

(assert (=> d!43329 d!43489))

(declare-fun d!43491 () Bool)

(assert (=> d!43491 (contains!923 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) lt!73154)))

(declare-fun lt!73392 () Unit!4373)

(assert (=> d!43491 (= lt!73392 (choose!857 lt!73153 lt!73155 (zeroValue!2790 newMap!16) lt!73154))))

(assert (=> d!43491 (contains!923 lt!73153 lt!73154)))

(assert (=> d!43491 (= (addStillContains!96 lt!73153 lt!73155 (zeroValue!2790 newMap!16) lt!73154) lt!73392)))

(declare-fun bs!5838 () Bool)

(assert (= bs!5838 d!43491))

(assert (=> bs!5838 m!166547))

(assert (=> bs!5838 m!166547))

(assert (=> bs!5838 m!166563))

(declare-fun m!167047 () Bool)

(assert (=> bs!5838 m!167047))

(declare-fun m!167049 () Bool)

(assert (=> bs!5838 m!167049))

(assert (=> b!139740 d!43491))

(declare-fun d!43493 () Bool)

(assert (=> d!43493 (= (apply!120 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) lt!73145) (apply!120 lt!73140 lt!73145))))

(declare-fun lt!73393 () Unit!4373)

(assert (=> d!43493 (= lt!73393 (choose!856 lt!73140 lt!73141 (minValue!2790 newMap!16) lt!73145))))

(declare-fun e!91347 () Bool)

(assert (=> d!43493 e!91347))

(declare-fun res!66966 () Bool)

(assert (=> d!43493 (=> (not res!66966) (not e!91347))))

(assert (=> d!43493 (= res!66966 (contains!923 lt!73140 lt!73145))))

(assert (=> d!43493 (= (addApplyDifferent!96 lt!73140 lt!73141 (minValue!2790 newMap!16) lt!73145) lt!73393)))

(declare-fun b!140078 () Bool)

(assert (=> b!140078 (= e!91347 (not (= lt!73145 lt!73141)))))

(assert (= (and d!43493 res!66966) b!140078))

(assert (=> d!43493 m!166569))

(declare-fun m!167051 () Bool)

(assert (=> d!43493 m!167051))

(declare-fun m!167053 () Bool)

(assert (=> d!43493 m!167053))

(assert (=> d!43493 m!166557))

(assert (=> d!43493 m!166557))

(assert (=> d!43493 m!166559))

(assert (=> b!139740 d!43493))

(declare-fun d!43495 () Bool)

(declare-fun e!91348 () Bool)

(assert (=> d!43495 e!91348))

(declare-fun res!66967 () Bool)

(assert (=> d!43495 (=> (not res!66967) (not e!91348))))

(declare-fun lt!73397 () ListLongMap!1745)

(assert (=> d!43495 (= res!66967 (contains!923 lt!73397 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73394 () List!1745)

(assert (=> d!43495 (= lt!73397 (ListLongMap!1746 lt!73394))))

(declare-fun lt!73395 () Unit!4373)

(declare-fun lt!73396 () Unit!4373)

(assert (=> d!43495 (= lt!73395 lt!73396)))

(assert (=> d!43495 (= (getValueByKey!176 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43495 (= lt!73396 (lemmaContainsTupThenGetReturnValue!90 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43495 (= lt!73394 (insertStrictlySorted!93 (toList!888 lt!73153) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43495 (= (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) lt!73397)))

(declare-fun b!140079 () Bool)

(declare-fun res!66968 () Bool)

(assert (=> b!140079 (=> (not res!66968) (not e!91348))))

(assert (=> b!140079 (= res!66968 (= (getValueByKey!176 (toList!888 lt!73397) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140080 () Bool)

(assert (=> b!140080 (= e!91348 (contains!925 (toList!888 lt!73397) (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43495 res!66967) b!140079))

(assert (= (and b!140079 res!66968) b!140080))

(declare-fun m!167055 () Bool)

(assert (=> d!43495 m!167055))

(declare-fun m!167057 () Bool)

(assert (=> d!43495 m!167057))

(declare-fun m!167059 () Bool)

(assert (=> d!43495 m!167059))

(declare-fun m!167061 () Bool)

(assert (=> d!43495 m!167061))

(declare-fun m!167063 () Bool)

(assert (=> b!140079 m!167063))

(declare-fun m!167065 () Bool)

(assert (=> b!140080 m!167065))

(assert (=> b!139740 d!43495))

(declare-fun d!43497 () Bool)

(assert (=> d!43497 (= (apply!120 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) lt!73145) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!73145)))))

(declare-fun bs!5839 () Bool)

(assert (= bs!5839 d!43497))

(declare-fun m!167067 () Bool)

(assert (=> bs!5839 m!167067))

(assert (=> bs!5839 m!167067))

(declare-fun m!167069 () Bool)

(assert (=> bs!5839 m!167069))

(assert (=> b!139740 d!43497))

(declare-fun d!43499 () Bool)

(assert (=> d!43499 (= (apply!120 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) lt!73139) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!73139)))))

(declare-fun bs!5840 () Bool)

(assert (= bs!5840 d!43499))

(declare-fun m!167071 () Bool)

(assert (=> bs!5840 m!167071))

(assert (=> bs!5840 m!167071))

(declare-fun m!167073 () Bool)

(assert (=> bs!5840 m!167073))

(assert (=> b!139740 d!43499))

(declare-fun d!43501 () Bool)

(assert (=> d!43501 (= (apply!120 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) lt!73151) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!73151)))))

(declare-fun bs!5841 () Bool)

(assert (= bs!5841 d!43501))

(declare-fun m!167075 () Bool)

(assert (=> bs!5841 m!167075))

(assert (=> bs!5841 m!167075))

(declare-fun m!167077 () Bool)

(assert (=> bs!5841 m!167077))

(assert (=> b!139740 d!43501))

(declare-fun d!43503 () Bool)

(assert (=> d!43503 (= (apply!120 lt!73138 lt!73139) (get!1531 (getValueByKey!176 (toList!888 lt!73138) lt!73139)))))

(declare-fun bs!5842 () Bool)

(assert (= bs!5842 d!43503))

(declare-fun m!167079 () Bool)

(assert (=> bs!5842 m!167079))

(assert (=> bs!5842 m!167079))

(declare-fun m!167081 () Bool)

(assert (=> bs!5842 m!167081))

(assert (=> b!139740 d!43503))

(declare-fun d!43505 () Bool)

(assert (=> d!43505 (= (apply!120 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) lt!73139) (apply!120 lt!73138 lt!73139))))

(declare-fun lt!73398 () Unit!4373)

(assert (=> d!43505 (= lt!73398 (choose!856 lt!73138 lt!73142 (zeroValue!2790 newMap!16) lt!73139))))

(declare-fun e!91349 () Bool)

(assert (=> d!43505 e!91349))

(declare-fun res!66969 () Bool)

(assert (=> d!43505 (=> (not res!66969) (not e!91349))))

(assert (=> d!43505 (= res!66969 (contains!923 lt!73138 lt!73139))))

(assert (=> d!43505 (= (addApplyDifferent!96 lt!73138 lt!73142 (zeroValue!2790 newMap!16) lt!73139) lt!73398)))

(declare-fun b!140081 () Bool)

(assert (=> b!140081 (= e!91349 (not (= lt!73139 lt!73142)))))

(assert (= (and d!43505 res!66969) b!140081))

(assert (=> d!43505 m!166561))

(declare-fun m!167083 () Bool)

(assert (=> d!43505 m!167083))

(declare-fun m!167085 () Bool)

(assert (=> d!43505 m!167085))

(assert (=> d!43505 m!166549))

(assert (=> d!43505 m!166549))

(assert (=> d!43505 m!166551))

(assert (=> b!139740 d!43505))

(declare-fun d!43507 () Bool)

(assert (=> d!43507 (= (apply!120 lt!73156 lt!73151) (get!1531 (getValueByKey!176 (toList!888 lt!73156) lt!73151)))))

(declare-fun bs!5843 () Bool)

(assert (= bs!5843 d!43507))

(declare-fun m!167087 () Bool)

(assert (=> bs!5843 m!167087))

(assert (=> bs!5843 m!167087))

(declare-fun m!167089 () Bool)

(assert (=> bs!5843 m!167089))

(assert (=> b!139740 d!43507))

(declare-fun d!43509 () Bool)

(declare-fun e!91350 () Bool)

(assert (=> d!43509 e!91350))

(declare-fun res!66970 () Bool)

(assert (=> d!43509 (=> res!66970 e!91350)))

(declare-fun lt!73401 () Bool)

(assert (=> d!43509 (= res!66970 (not lt!73401))))

(declare-fun lt!73399 () Bool)

(assert (=> d!43509 (= lt!73401 lt!73399)))

(declare-fun lt!73400 () Unit!4373)

(declare-fun e!91351 () Unit!4373)

(assert (=> d!43509 (= lt!73400 e!91351)))

(declare-fun c!26208 () Bool)

(assert (=> d!43509 (= c!26208 lt!73399)))

(assert (=> d!43509 (= lt!73399 (containsKey!180 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))

(assert (=> d!43509 (= (contains!923 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) lt!73154) lt!73401)))

(declare-fun b!140082 () Bool)

(declare-fun lt!73402 () Unit!4373)

(assert (=> b!140082 (= e!91351 lt!73402)))

(assert (=> b!140082 (= lt!73402 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))

(assert (=> b!140082 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))

(declare-fun b!140083 () Bool)

(declare-fun Unit!4401 () Unit!4373)

(assert (=> b!140083 (= e!91351 Unit!4401)))

(declare-fun b!140084 () Bool)

(assert (=> b!140084 (= e!91350 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154)))))

(assert (= (and d!43509 c!26208) b!140082))

(assert (= (and d!43509 (not c!26208)) b!140083))

(assert (= (and d!43509 (not res!66970)) b!140084))

(declare-fun m!167091 () Bool)

(assert (=> d!43509 m!167091))

(declare-fun m!167093 () Bool)

(assert (=> b!140082 m!167093))

(declare-fun m!167095 () Bool)

(assert (=> b!140082 m!167095))

(assert (=> b!140082 m!167095))

(declare-fun m!167097 () Bool)

(assert (=> b!140082 m!167097))

(assert (=> b!140084 m!167095))

(assert (=> b!140084 m!167095))

(assert (=> b!140084 m!167097))

(assert (=> b!139740 d!43509))

(declare-fun b!140085 () Bool)

(declare-fun lt!73409 () Unit!4373)

(declare-fun lt!73405 () Unit!4373)

(assert (=> b!140085 (= lt!73409 lt!73405)))

(declare-fun lt!73403 () (_ BitVec 64))

(declare-fun lt!73404 () V!3555)

(declare-fun lt!73407 () (_ BitVec 64))

(declare-fun lt!73408 () ListLongMap!1745)

(assert (=> b!140085 (not (contains!923 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404)) lt!73403))))

(assert (=> b!140085 (= lt!73405 (addStillNotContains!64 lt!73408 lt!73407 lt!73404 lt!73403))))

(assert (=> b!140085 (= lt!73403 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140085 (= lt!73404 (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140085 (= lt!73407 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15560 () ListLongMap!1745)

(assert (=> b!140085 (= lt!73408 call!15560)))

(declare-fun e!91352 () ListLongMap!1745)

(assert (=> b!140085 (= e!91352 (+!179 call!15560 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140087 () Bool)

(declare-fun e!91354 () ListLongMap!1745)

(assert (=> b!140087 (= e!91354 (ListLongMap!1746 Nil!1742))))

(declare-fun b!140088 () Bool)

(declare-fun e!91358 () Bool)

(declare-fun e!91353 () Bool)

(assert (=> b!140088 (= e!91358 e!91353)))

(assert (=> b!140088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!66974 () Bool)

(declare-fun lt!73406 () ListLongMap!1745)

(assert (=> b!140088 (= res!66974 (contains!923 lt!73406 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140088 (=> (not res!66974) (not e!91353))))

(declare-fun b!140089 () Bool)

(declare-fun res!66971 () Bool)

(declare-fun e!91357 () Bool)

(assert (=> b!140089 (=> (not res!66971) (not e!91357))))

(assert (=> b!140089 (= res!66971 (not (contains!923 lt!73406 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140090 () Bool)

(declare-fun e!91355 () Bool)

(assert (=> b!140090 (= e!91358 e!91355)))

(declare-fun c!26211 () Bool)

(assert (=> b!140090 (= c!26211 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140091 () Bool)

(assert (=> b!140091 (= e!91354 e!91352)))

(declare-fun c!26212 () Bool)

(assert (=> b!140091 (= c!26212 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140092 () Bool)

(declare-fun e!91356 () Bool)

(assert (=> b!140092 (= e!91356 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140092 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15557 () Bool)

(assert (=> bm!15557 (= call!15560 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140093 () Bool)

(assert (=> b!140093 (= e!91355 (= lt!73406 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140094 () Bool)

(assert (=> b!140094 (= e!91357 e!91358)))

(declare-fun c!26209 () Bool)

(assert (=> b!140094 (= c!26209 e!91356)))

(declare-fun res!66973 () Bool)

(assert (=> b!140094 (=> (not res!66973) (not e!91356))))

(assert (=> b!140094 (= res!66973 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!43511 () Bool)

(assert (=> d!43511 e!91357))

(declare-fun res!66972 () Bool)

(assert (=> d!43511 (=> (not res!66972) (not e!91357))))

(assert (=> d!43511 (= res!66972 (not (contains!923 lt!73406 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43511 (= lt!73406 e!91354)))

(declare-fun c!26210 () Bool)

(assert (=> d!43511 (= c!26210 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43511 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43511 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73406)))

(declare-fun b!140086 () Bool)

(assert (=> b!140086 (= e!91355 (isEmpty!417 lt!73406))))

(declare-fun b!140095 () Bool)

(assert (=> b!140095 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!140095 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))))

(assert (=> b!140095 (= e!91353 (= (apply!120 lt!73406 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140096 () Bool)

(assert (=> b!140096 (= e!91352 call!15560)))

(assert (= (and d!43511 c!26210) b!140087))

(assert (= (and d!43511 (not c!26210)) b!140091))

(assert (= (and b!140091 c!26212) b!140085))

(assert (= (and b!140091 (not c!26212)) b!140096))

(assert (= (or b!140085 b!140096) bm!15557))

(assert (= (and d!43511 res!66972) b!140089))

(assert (= (and b!140089 res!66971) b!140094))

(assert (= (and b!140094 res!66973) b!140092))

(assert (= (and b!140094 c!26209) b!140088))

(assert (= (and b!140094 (not c!26209)) b!140090))

(assert (= (and b!140088 res!66974) b!140095))

(assert (= (and b!140090 c!26211) b!140093))

(assert (= (and b!140090 (not c!26211)) b!140086))

(declare-fun b_lambda!6263 () Bool)

(assert (=> (not b_lambda!6263) (not b!140085)))

(assert (=> b!140085 t!6337))

(declare-fun b_and!8743 () Bool)

(assert (= b_and!8739 (and (=> t!6337 result!4191) b_and!8743)))

(assert (=> b!140085 t!6339))

(declare-fun b_and!8745 () Bool)

(assert (= b_and!8741 (and (=> t!6339 result!4193) b_and!8745)))

(declare-fun b_lambda!6265 () Bool)

(assert (=> (not b_lambda!6265) (not b!140095)))

(assert (=> b!140095 t!6337))

(declare-fun b_and!8747 () Bool)

(assert (= b_and!8743 (and (=> t!6337 result!4191) b_and!8747)))

(assert (=> b!140095 t!6339))

(declare-fun b_and!8749 () Bool)

(assert (= b_and!8745 (and (=> t!6339 result!4193) b_and!8749)))

(declare-fun m!167099 () Bool)

(assert (=> b!140089 m!167099))

(assert (=> b!140091 m!166385))

(assert (=> b!140091 m!166385))

(assert (=> b!140091 m!166389))

(declare-fun m!167101 () Bool)

(assert (=> d!43511 m!167101))

(assert (=> d!43511 m!166429))

(assert (=> b!140085 m!166443))

(declare-fun m!167103 () Bool)

(assert (=> b!140085 m!167103))

(declare-fun m!167105 () Bool)

(assert (=> b!140085 m!167105))

(assert (=> b!140085 m!167103))

(assert (=> b!140085 m!166585))

(declare-fun m!167107 () Bool)

(assert (=> b!140085 m!167107))

(assert (=> b!140085 m!166585))

(assert (=> b!140085 m!166443))

(assert (=> b!140085 m!166587))

(declare-fun m!167109 () Bool)

(assert (=> b!140085 m!167109))

(assert (=> b!140085 m!166385))

(assert (=> b!140092 m!166385))

(assert (=> b!140092 m!166385))

(assert (=> b!140092 m!166389))

(declare-fun m!167111 () Bool)

(assert (=> bm!15557 m!167111))

(declare-fun m!167113 () Bool)

(assert (=> b!140086 m!167113))

(assert (=> b!140095 m!166443))

(assert (=> b!140095 m!166385))

(declare-fun m!167115 () Bool)

(assert (=> b!140095 m!167115))

(assert (=> b!140095 m!166585))

(assert (=> b!140095 m!166585))

(assert (=> b!140095 m!166443))

(assert (=> b!140095 m!166587))

(assert (=> b!140095 m!166385))

(assert (=> b!140088 m!166385))

(assert (=> b!140088 m!166385))

(declare-fun m!167117 () Bool)

(assert (=> b!140088 m!167117))

(assert (=> b!140093 m!167111))

(assert (=> b!139740 d!43511))

(declare-fun d!43513 () Bool)

(declare-fun e!91359 () Bool)

(assert (=> d!43513 e!91359))

(declare-fun res!66975 () Bool)

(assert (=> d!43513 (=> (not res!66975) (not e!91359))))

(declare-fun lt!73413 () ListLongMap!1745)

(assert (=> d!43513 (= res!66975 (contains!923 lt!73413 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(declare-fun lt!73410 () List!1745)

(assert (=> d!43513 (= lt!73413 (ListLongMap!1746 lt!73410))))

(declare-fun lt!73411 () Unit!4373)

(declare-fun lt!73412 () Unit!4373)

(assert (=> d!43513 (= lt!73411 lt!73412)))

(assert (=> d!43513 (= (getValueByKey!176 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (=> d!43513 (= lt!73412 (lemmaContainsTupThenGetReturnValue!90 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (=> d!43513 (= lt!73410 (insertStrictlySorted!93 (toList!888 lt!73140) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (=> d!43513 (= (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) lt!73413)))

(declare-fun b!140097 () Bool)

(declare-fun res!66976 () Bool)

(assert (=> b!140097 (=> (not res!66976) (not e!91359))))

(assert (=> b!140097 (= res!66976 (= (getValueByKey!176 (toList!888 lt!73413) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(declare-fun b!140098 () Bool)

(assert (=> b!140098 (= e!91359 (contains!925 (toList!888 lt!73413) (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))

(assert (= (and d!43513 res!66975) b!140097))

(assert (= (and b!140097 res!66976) b!140098))

(declare-fun m!167119 () Bool)

(assert (=> d!43513 m!167119))

(declare-fun m!167121 () Bool)

(assert (=> d!43513 m!167121))

(declare-fun m!167123 () Bool)

(assert (=> d!43513 m!167123))

(declare-fun m!167125 () Bool)

(assert (=> d!43513 m!167125))

(declare-fun m!167127 () Bool)

(assert (=> b!140097 m!167127))

(declare-fun m!167129 () Bool)

(assert (=> b!140098 m!167129))

(assert (=> b!139740 d!43513))

(declare-fun d!43515 () Bool)

(declare-fun e!91360 () Bool)

(assert (=> d!43515 e!91360))

(declare-fun res!66977 () Bool)

(assert (=> d!43515 (=> (not res!66977) (not e!91360))))

(declare-fun lt!73417 () ListLongMap!1745)

(assert (=> d!43515 (= res!66977 (contains!923 lt!73417 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(declare-fun lt!73414 () List!1745)

(assert (=> d!43515 (= lt!73417 (ListLongMap!1746 lt!73414))))

(declare-fun lt!73415 () Unit!4373)

(declare-fun lt!73416 () Unit!4373)

(assert (=> d!43515 (= lt!73415 lt!73416)))

(assert (=> d!43515 (= (getValueByKey!176 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (=> d!43515 (= lt!73416 (lemmaContainsTupThenGetReturnValue!90 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (=> d!43515 (= lt!73414 (insertStrictlySorted!93 (toList!888 lt!73156) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (=> d!43515 (= (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) lt!73417)))

(declare-fun b!140099 () Bool)

(declare-fun res!66978 () Bool)

(assert (=> b!140099 (=> (not res!66978) (not e!91360))))

(assert (=> b!140099 (= res!66978 (= (getValueByKey!176 (toList!888 lt!73417) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(declare-fun b!140100 () Bool)

(assert (=> b!140100 (= e!91360 (contains!925 (toList!888 lt!73417) (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))

(assert (= (and d!43515 res!66977) b!140099))

(assert (= (and b!140099 res!66978) b!140100))

(declare-fun m!167131 () Bool)

(assert (=> d!43515 m!167131))

(declare-fun m!167133 () Bool)

(assert (=> d!43515 m!167133))

(declare-fun m!167135 () Bool)

(assert (=> d!43515 m!167135))

(declare-fun m!167137 () Bool)

(assert (=> d!43515 m!167137))

(declare-fun m!167139 () Bool)

(assert (=> b!140099 m!167139))

(declare-fun m!167141 () Bool)

(assert (=> b!140100 m!167141))

(assert (=> b!139740 d!43515))

(declare-fun d!43517 () Bool)

(declare-fun e!91361 () Bool)

(assert (=> d!43517 e!91361))

(declare-fun res!66979 () Bool)

(assert (=> d!43517 (=> (not res!66979) (not e!91361))))

(declare-fun lt!73421 () ListLongMap!1745)

(assert (=> d!43517 (= res!66979 (contains!923 lt!73421 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73418 () List!1745)

(assert (=> d!43517 (= lt!73421 (ListLongMap!1746 lt!73418))))

(declare-fun lt!73419 () Unit!4373)

(declare-fun lt!73420 () Unit!4373)

(assert (=> d!43517 (= lt!73419 lt!73420)))

(assert (=> d!43517 (= (getValueByKey!176 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43517 (= lt!73420 (lemmaContainsTupThenGetReturnValue!90 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43517 (= lt!73418 (insertStrictlySorted!93 (toList!888 lt!73138) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43517 (= (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) lt!73421)))

(declare-fun b!140101 () Bool)

(declare-fun res!66980 () Bool)

(assert (=> b!140101 (=> (not res!66980) (not e!91361))))

(assert (=> b!140101 (= res!66980 (= (getValueByKey!176 (toList!888 lt!73421) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140102 () Bool)

(assert (=> b!140102 (= e!91361 (contains!925 (toList!888 lt!73421) (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43517 res!66979) b!140101))

(assert (= (and b!140101 res!66980) b!140102))

(declare-fun m!167143 () Bool)

(assert (=> d!43517 m!167143))

(declare-fun m!167145 () Bool)

(assert (=> d!43517 m!167145))

(declare-fun m!167147 () Bool)

(assert (=> d!43517 m!167147))

(declare-fun m!167149 () Bool)

(assert (=> d!43517 m!167149))

(declare-fun m!167151 () Bool)

(assert (=> b!140101 m!167151))

(declare-fun m!167153 () Bool)

(assert (=> b!140102 m!167153))

(assert (=> b!139740 d!43517))

(declare-fun d!43519 () Bool)

(assert (=> d!43519 (= (apply!120 lt!73140 lt!73145) (get!1531 (getValueByKey!176 (toList!888 lt!73140) lt!73145)))))

(declare-fun bs!5844 () Bool)

(assert (= bs!5844 d!43519))

(declare-fun m!167155 () Bool)

(assert (=> bs!5844 m!167155))

(assert (=> bs!5844 m!167155))

(declare-fun m!167157 () Bool)

(assert (=> bs!5844 m!167157))

(assert (=> b!139740 d!43519))

(declare-fun d!43521 () Bool)

(assert (=> d!43521 (= (apply!120 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) lt!73151) (apply!120 lt!73156 lt!73151))))

(declare-fun lt!73422 () Unit!4373)

(assert (=> d!43521 (= lt!73422 (choose!856 lt!73156 lt!73152 (minValue!2790 newMap!16) lt!73151))))

(declare-fun e!91362 () Bool)

(assert (=> d!43521 e!91362))

(declare-fun res!66981 () Bool)

(assert (=> d!43521 (=> (not res!66981) (not e!91362))))

(assert (=> d!43521 (= res!66981 (contains!923 lt!73156 lt!73151))))

(assert (=> d!43521 (= (addApplyDifferent!96 lt!73156 lt!73152 (minValue!2790 newMap!16) lt!73151) lt!73422)))

(declare-fun b!140103 () Bool)

(assert (=> b!140103 (= e!91362 (not (= lt!73151 lt!73152)))))

(assert (= (and d!43521 res!66981) b!140103))

(assert (=> d!43521 m!166555))

(declare-fun m!167159 () Bool)

(assert (=> d!43521 m!167159))

(declare-fun m!167161 () Bool)

(assert (=> d!43521 m!167161))

(assert (=> d!43521 m!166565))

(assert (=> d!43521 m!166565))

(assert (=> d!43521 m!166567))

(assert (=> b!139740 d!43521))

(declare-fun d!43523 () Bool)

(declare-fun res!66982 () Bool)

(declare-fun e!91363 () Bool)

(assert (=> d!43523 (=> res!66982 e!91363)))

(assert (=> d!43523 (= res!66982 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903)))))

(assert (=> d!43523 (= (containsKey!180 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903) e!91363)))

(declare-fun b!140104 () Bool)

(declare-fun e!91364 () Bool)

(assert (=> b!140104 (= e!91363 e!91364)))

(declare-fun res!66983 () Bool)

(assert (=> b!140104 (=> (not res!66983) (not e!91364))))

(assert (=> b!140104 (= res!66983 (and (or (not ((_ is Cons!1741) (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (bvsle (_1!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903)) ((_ is Cons!1741) (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903)))))

(declare-fun b!140105 () Bool)

(assert (=> b!140105 (= e!91364 (containsKey!180 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72903))))

(assert (= (and d!43523 (not res!66982)) b!140104))

(assert (= (and b!140104 res!66983) b!140105))

(declare-fun m!167163 () Bool)

(assert (=> b!140105 m!167163))

(assert (=> d!43327 d!43523))

(declare-fun d!43525 () Bool)

(declare-fun res!66984 () Bool)

(declare-fun e!91365 () Bool)

(assert (=> d!43525 (=> (not res!66984) (not e!91365))))

(assert (=> d!43525 (= res!66984 (simpleValid!96 (_2!1361 lt!73257)))))

(assert (=> d!43525 (= (valid!556 (_2!1361 lt!73257)) e!91365)))

(declare-fun b!140106 () Bool)

(declare-fun res!66985 () Bool)

(assert (=> b!140106 (=> (not res!66985) (not e!91365))))

(assert (=> b!140106 (= res!66985 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))) (_size!625 (_2!1361 lt!73257))))))

(declare-fun b!140107 () Bool)

(declare-fun res!66986 () Bool)

(assert (=> b!140107 (=> (not res!66986) (not e!91365))))

(assert (=> b!140107 (= res!66986 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257))))))

(declare-fun b!140108 () Bool)

(assert (=> b!140108 (= e!91365 (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!73257)) #b00000000000000000000000000000000 Nil!1743))))

(assert (= (and d!43525 res!66984) b!140106))

(assert (= (and b!140106 res!66985) b!140107))

(assert (= (and b!140107 res!66986) b!140108))

(declare-fun m!167165 () Bool)

(assert (=> d!43525 m!167165))

(declare-fun m!167167 () Bool)

(assert (=> b!140106 m!167167))

(declare-fun m!167169 () Bool)

(assert (=> b!140107 m!167169))

(declare-fun m!167171 () Bool)

(assert (=> b!140108 m!167171))

(assert (=> b!139841 d!43525))

(declare-fun d!43527 () Bool)

(assert (=> d!43527 (= (validMask!0 (mask!7280 newMap!16)) (and (or (= (mask!7280 newMap!16) #b00000000000000000000000000000111) (= (mask!7280 newMap!16) #b00000000000000000000000000001111) (= (mask!7280 newMap!16) #b00000000000000000000000000011111) (= (mask!7280 newMap!16) #b00000000000000000000000000111111) (= (mask!7280 newMap!16) #b00000000000000000000000001111111) (= (mask!7280 newMap!16) #b00000000000000000000000011111111) (= (mask!7280 newMap!16) #b00000000000000000000000111111111) (= (mask!7280 newMap!16) #b00000000000000000000001111111111) (= (mask!7280 newMap!16) #b00000000000000000000011111111111) (= (mask!7280 newMap!16) #b00000000000000000000111111111111) (= (mask!7280 newMap!16) #b00000000000000000001111111111111) (= (mask!7280 newMap!16) #b00000000000000000011111111111111) (= (mask!7280 newMap!16) #b00000000000000000111111111111111) (= (mask!7280 newMap!16) #b00000000000000001111111111111111) (= (mask!7280 newMap!16) #b00000000000000011111111111111111) (= (mask!7280 newMap!16) #b00000000000000111111111111111111) (= (mask!7280 newMap!16) #b00000000000001111111111111111111) (= (mask!7280 newMap!16) #b00000000000011111111111111111111) (= (mask!7280 newMap!16) #b00000000000111111111111111111111) (= (mask!7280 newMap!16) #b00000000001111111111111111111111) (= (mask!7280 newMap!16) #b00000000011111111111111111111111) (= (mask!7280 newMap!16) #b00000000111111111111111111111111) (= (mask!7280 newMap!16) #b00000001111111111111111111111111) (= (mask!7280 newMap!16) #b00000011111111111111111111111111) (= (mask!7280 newMap!16) #b00000111111111111111111111111111) (= (mask!7280 newMap!16) #b00001111111111111111111111111111) (= (mask!7280 newMap!16) #b00011111111111111111111111111111) (= (mask!7280 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7280 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!43345 d!43527))

(declare-fun d!43529 () Bool)

(assert (=> d!43529 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73423 () Unit!4373)

(assert (=> d!43529 (= lt!73423 (choose!864 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91366 () Bool)

(assert (=> d!43529 e!91366))

(declare-fun res!66987 () Bool)

(assert (=> d!43529 (=> (not res!66987) (not e!91366))))

(assert (=> d!43529 (= res!66987 (isStrictlySorted!325 (toList!888 lt!72907)))))

(assert (=> d!43529 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000) lt!73423)))

(declare-fun b!140109 () Bool)

(assert (=> b!140109 (= e!91366 (containsKey!180 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43529 res!66987) b!140109))

(assert (=> d!43529 m!166691))

(assert (=> d!43529 m!166691))

(assert (=> d!43529 m!166715))

(declare-fun m!167173 () Bool)

(assert (=> d!43529 m!167173))

(declare-fun m!167175 () Bool)

(assert (=> d!43529 m!167175))

(assert (=> b!140109 m!166711))

(assert (=> b!139894 d!43529))

(declare-fun d!43531 () Bool)

(assert (=> d!43531 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5845 () Bool)

(assert (= bs!5845 d!43531))

(assert (=> bs!5845 m!166691))

(declare-fun m!167177 () Bool)

(assert (=> bs!5845 m!167177))

(assert (=> b!139894 d!43531))

(declare-fun b!140113 () Bool)

(declare-fun e!91368 () Option!182)

(assert (=> b!140113 (= e!91368 None!180)))

(declare-fun b!140110 () Bool)

(declare-fun e!91367 () Option!182)

(assert (=> b!140110 (= e!91367 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72907)))))))

(declare-fun b!140111 () Bool)

(assert (=> b!140111 (= e!91367 e!91368)))

(declare-fun c!26214 () Bool)

(assert (=> b!140111 (= c!26214 (and ((_ is Cons!1741) (toList!888 lt!72907)) (not (= (_1!1360 (h!2348 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!43533 () Bool)

(declare-fun c!26213 () Bool)

(assert (=> d!43533 (= c!26213 (and ((_ is Cons!1741) (toList!888 lt!72907)) (= (_1!1360 (h!2348 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43533 (= (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000) e!91367)))

(declare-fun b!140112 () Bool)

(assert (=> b!140112 (= e!91368 (getValueByKey!176 (t!6329 (toList!888 lt!72907)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43533 c!26213) b!140110))

(assert (= (and d!43533 (not c!26213)) b!140111))

(assert (= (and b!140111 c!26214) b!140112))

(assert (= (and b!140111 (not c!26214)) b!140113))

(declare-fun m!167179 () Bool)

(assert (=> b!140112 m!167179))

(assert (=> b!139894 d!43533))

(declare-fun d!43535 () Bool)

(assert (=> d!43535 (= (inRange!0 (ite c!26125 (index!3279 lt!73175) (index!3282 lt!73175)) (mask!7280 newMap!16)) (and (bvsge (ite c!26125 (index!3279 lt!73175) (index!3282 lt!73175)) #b00000000000000000000000000000000) (bvslt (ite c!26125 (index!3279 lt!73175) (index!3282 lt!73175)) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15505 d!43535))

(assert (=> b!139906 d!43479))

(declare-fun d!43537 () Bool)

(declare-fun e!91369 () Bool)

(assert (=> d!43537 e!91369))

(declare-fun res!66988 () Bool)

(assert (=> d!43537 (=> res!66988 e!91369)))

(declare-fun lt!73426 () Bool)

(assert (=> d!43537 (= res!66988 (not lt!73426))))

(declare-fun lt!73424 () Bool)

(assert (=> d!43537 (= lt!73426 lt!73424)))

(declare-fun lt!73425 () Unit!4373)

(declare-fun e!91370 () Unit!4373)

(assert (=> d!43537 (= lt!73425 e!91370)))

(declare-fun c!26215 () Bool)

(assert (=> d!43537 (= c!26215 lt!73424)))

(assert (=> d!43537 (= lt!73424 (containsKey!180 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43537 (= (contains!923 lt!73093 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73426)))

(declare-fun b!140114 () Bool)

(declare-fun lt!73427 () Unit!4373)

(assert (=> b!140114 (= e!91370 lt!73427)))

(assert (=> b!140114 (= lt!73427 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140114 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140115 () Bool)

(declare-fun Unit!4402 () Unit!4373)

(assert (=> b!140115 (= e!91370 Unit!4402)))

(declare-fun b!140116 () Bool)

(assert (=> b!140116 (= e!91369 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43537 c!26215) b!140114))

(assert (= (and d!43537 (not c!26215)) b!140115))

(assert (= (and d!43537 (not res!66988)) b!140116))

(declare-fun m!167181 () Bool)

(assert (=> d!43537 m!167181))

(declare-fun m!167183 () Bool)

(assert (=> b!140114 m!167183))

(declare-fun m!167185 () Bool)

(assert (=> b!140114 m!167185))

(assert (=> b!140114 m!167185))

(declare-fun m!167187 () Bool)

(assert (=> b!140114 m!167187))

(assert (=> b!140116 m!167185))

(assert (=> b!140116 m!167185))

(assert (=> b!140116 m!167187))

(assert (=> bm!15484 d!43537))

(declare-fun d!43539 () Bool)

(assert (=> d!43539 (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))

(assert (=> d!43539 true))

(declare-fun _$16!158 () Unit!4373)

(assert (=> d!43539 (= (choose!861 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (defaultEntry!2940 newMap!16)) _$16!158)))

(declare-fun bs!5846 () Bool)

(assert (= bs!5846 d!43539))

(assert (=> bs!5846 m!166535))

(assert (=> bs!5846 m!166199))

(assert (=> bs!5846 m!166535))

(assert (=> bs!5846 m!166199))

(assert (=> bs!5846 m!166537))

(assert (=> d!43377 d!43539))

(assert (=> d!43377 d!43527))

(declare-fun d!43541 () Bool)

(declare-fun e!91371 () Bool)

(assert (=> d!43541 e!91371))

(declare-fun res!66989 () Bool)

(assert (=> d!43541 (=> res!66989 e!91371)))

(declare-fun lt!73430 () Bool)

(assert (=> d!43541 (= res!66989 (not lt!73430))))

(declare-fun lt!73428 () Bool)

(assert (=> d!43541 (= lt!73430 lt!73428)))

(declare-fun lt!73429 () Unit!4373)

(declare-fun e!91372 () Unit!4373)

(assert (=> d!43541 (= lt!73429 e!91372)))

(declare-fun c!26216 () Bool)

(assert (=> d!43541 (= c!26216 lt!73428)))

(assert (=> d!43541 (= lt!73428 (containsKey!180 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43541 (= (contains!923 lt!73019 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73430)))

(declare-fun b!140117 () Bool)

(declare-fun lt!73431 () Unit!4373)

(assert (=> b!140117 (= e!91372 lt!73431)))

(assert (=> b!140117 (= lt!73431 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!140117 (isDefined!129 (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140118 () Bool)

(declare-fun Unit!4403 () Unit!4373)

(assert (=> b!140118 (= e!91372 Unit!4403)))

(declare-fun b!140119 () Bool)

(assert (=> b!140119 (= e!91371 (isDefined!129 (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43541 c!26216) b!140117))

(assert (= (and d!43541 (not c!26216)) b!140118))

(assert (= (and d!43541 (not res!66989)) b!140119))

(declare-fun m!167189 () Bool)

(assert (=> d!43541 m!167189))

(declare-fun m!167191 () Bool)

(assert (=> b!140117 m!167191))

(assert (=> b!140117 m!166253))

(assert (=> b!140117 m!166253))

(declare-fun m!167193 () Bool)

(assert (=> b!140117 m!167193))

(assert (=> b!140119 m!166253))

(assert (=> b!140119 m!166253))

(assert (=> b!140119 m!167193))

(assert (=> d!43305 d!43541))

(declare-fun b!140123 () Bool)

(declare-fun e!91374 () Option!182)

(assert (=> b!140123 (= e!91374 None!180)))

(declare-fun b!140120 () Bool)

(declare-fun e!91373 () Option!182)

(assert (=> b!140120 (= e!91373 (Some!181 (_2!1360 (h!2348 lt!73016))))))

(declare-fun b!140121 () Bool)

(assert (=> b!140121 (= e!91373 e!91374)))

(declare-fun c!26218 () Bool)

(assert (=> b!140121 (= c!26218 (and ((_ is Cons!1741) lt!73016) (not (= (_1!1360 (h!2348 lt!73016)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!43543 () Bool)

(declare-fun c!26217 () Bool)

(assert (=> d!43543 (= c!26217 (and ((_ is Cons!1741) lt!73016) (= (_1!1360 (h!2348 lt!73016)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43543 (= (getValueByKey!176 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91373)))

(declare-fun b!140122 () Bool)

(assert (=> b!140122 (= e!91374 (getValueByKey!176 (t!6329 lt!73016) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43543 c!26217) b!140120))

(assert (= (and d!43543 (not c!26217)) b!140121))

(assert (= (and b!140121 c!26218) b!140122))

(assert (= (and b!140121 (not c!26218)) b!140123))

(declare-fun m!167195 () Bool)

(assert (=> b!140122 m!167195))

(assert (=> d!43305 d!43543))

(declare-fun d!43545 () Bool)

(assert (=> d!43545 (= (getValueByKey!176 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73432 () Unit!4373)

(assert (=> d!43545 (= lt!73432 (choose!865 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91375 () Bool)

(assert (=> d!43545 e!91375))

(declare-fun res!66990 () Bool)

(assert (=> d!43545 (=> (not res!66990) (not e!91375))))

(assert (=> d!43545 (= res!66990 (isStrictlySorted!325 lt!73016))))

(assert (=> d!43545 (= (lemmaContainsTupThenGetReturnValue!90 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73432)))

(declare-fun b!140124 () Bool)

(declare-fun res!66991 () Bool)

(assert (=> b!140124 (=> (not res!66991) (not e!91375))))

(assert (=> b!140124 (= res!66991 (containsKey!180 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140125 () Bool)

(assert (=> b!140125 (= e!91375 (contains!925 lt!73016 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43545 res!66990) b!140124))

(assert (= (and b!140124 res!66991) b!140125))

(assert (=> d!43545 m!166247))

(declare-fun m!167197 () Bool)

(assert (=> d!43545 m!167197))

(declare-fun m!167199 () Bool)

(assert (=> d!43545 m!167199))

(declare-fun m!167201 () Bool)

(assert (=> b!140124 m!167201))

(declare-fun m!167203 () Bool)

(assert (=> b!140125 m!167203))

(assert (=> d!43305 d!43545))

(declare-fun b!140126 () Bool)

(declare-fun e!91376 () List!1745)

(declare-fun call!15563 () List!1745)

(assert (=> b!140126 (= e!91376 call!15563)))

(declare-fun bm!15558 () Bool)

(declare-fun call!15561 () List!1745)

(assert (=> bm!15558 (= call!15563 call!15561)))

(declare-fun d!43547 () Bool)

(declare-fun e!91380 () Bool)

(assert (=> d!43547 e!91380))

(declare-fun res!66992 () Bool)

(assert (=> d!43547 (=> (not res!66992) (not e!91380))))

(declare-fun lt!73433 () List!1745)

(assert (=> d!43547 (= res!66992 (isStrictlySorted!325 lt!73433))))

(declare-fun e!91377 () List!1745)

(assert (=> d!43547 (= lt!73433 e!91377)))

(declare-fun c!26221 () Bool)

(assert (=> d!43547 (= c!26221 (and ((_ is Cons!1741) (toList!888 call!15459)) (bvslt (_1!1360 (h!2348 (toList!888 call!15459))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43547 (isStrictlySorted!325 (toList!888 call!15459))))

(assert (=> d!43547 (= (insertStrictlySorted!93 (toList!888 call!15459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73433)))

(declare-fun bm!15559 () Bool)

(declare-fun call!15562 () List!1745)

(assert (=> bm!15559 (= call!15561 call!15562)))

(declare-fun b!140127 () Bool)

(declare-fun e!91378 () List!1745)

(assert (=> b!140127 (= e!91377 e!91378)))

(declare-fun c!26220 () Bool)

(assert (=> b!140127 (= c!26220 (and ((_ is Cons!1741) (toList!888 call!15459)) (= (_1!1360 (h!2348 (toList!888 call!15459))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140128 () Bool)

(assert (=> b!140128 (= e!91377 call!15562)))

(declare-fun bm!15560 () Bool)

(declare-fun e!91379 () List!1745)

(assert (=> bm!15560 (= call!15562 ($colon$colon!94 e!91379 (ite c!26221 (h!2348 (toList!888 call!15459)) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26219 () Bool)

(assert (=> bm!15560 (= c!26219 c!26221)))

(declare-fun c!26222 () Bool)

(declare-fun b!140129 () Bool)

(assert (=> b!140129 (= e!91379 (ite c!26220 (t!6329 (toList!888 call!15459)) (ite c!26222 (Cons!1741 (h!2348 (toList!888 call!15459)) (t!6329 (toList!888 call!15459))) Nil!1742)))))

(declare-fun b!140130 () Bool)

(assert (=> b!140130 (= e!91378 call!15561)))

(declare-fun b!140131 () Bool)

(assert (=> b!140131 (= e!91380 (contains!925 lt!73433 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140132 () Bool)

(assert (=> b!140132 (= e!91379 (insertStrictlySorted!93 (t!6329 (toList!888 call!15459)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140133 () Bool)

(assert (=> b!140133 (= e!91376 call!15563)))

(declare-fun b!140134 () Bool)

(assert (=> b!140134 (= c!26222 (and ((_ is Cons!1741) (toList!888 call!15459)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15459))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140134 (= e!91378 e!91376)))

(declare-fun b!140135 () Bool)

(declare-fun res!66993 () Bool)

(assert (=> b!140135 (=> (not res!66993) (not e!91380))))

(assert (=> b!140135 (= res!66993 (containsKey!180 lt!73433 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43547 c!26221) b!140128))

(assert (= (and d!43547 (not c!26221)) b!140127))

(assert (= (and b!140127 c!26220) b!140130))

(assert (= (and b!140127 (not c!26220)) b!140134))

(assert (= (and b!140134 c!26222) b!140133))

(assert (= (and b!140134 (not c!26222)) b!140126))

(assert (= (or b!140133 b!140126) bm!15558))

(assert (= (or b!140130 bm!15558) bm!15559))

(assert (= (or b!140128 bm!15559) bm!15560))

(assert (= (and bm!15560 c!26219) b!140132))

(assert (= (and bm!15560 (not c!26219)) b!140129))

(assert (= (and d!43547 res!66992) b!140135))

(assert (= (and b!140135 res!66993) b!140131))

(declare-fun m!167205 () Bool)

(assert (=> b!140132 m!167205))

(declare-fun m!167207 () Bool)

(assert (=> d!43547 m!167207))

(declare-fun m!167209 () Bool)

(assert (=> d!43547 m!167209))

(declare-fun m!167211 () Bool)

(assert (=> b!140135 m!167211))

(declare-fun m!167213 () Bool)

(assert (=> bm!15560 m!167213))

(declare-fun m!167215 () Bool)

(assert (=> b!140131 m!167215))

(assert (=> d!43305 d!43547))

(declare-fun d!43549 () Bool)

(assert (=> d!43549 (= (get!1531 (getValueByKey!176 (toList!888 lt!72905) lt!72900)) (v!3284 (getValueByKey!176 (toList!888 lt!72905) lt!72900)))))

(assert (=> d!43321 d!43549))

(declare-fun b!140139 () Bool)

(declare-fun e!91382 () Option!182)

(assert (=> b!140139 (= e!91382 None!180)))

(declare-fun b!140136 () Bool)

(declare-fun e!91381 () Option!182)

(assert (=> b!140136 (= e!91381 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72905)))))))

(declare-fun b!140137 () Bool)

(assert (=> b!140137 (= e!91381 e!91382)))

(declare-fun c!26224 () Bool)

(assert (=> b!140137 (= c!26224 (and ((_ is Cons!1741) (toList!888 lt!72905)) (not (= (_1!1360 (h!2348 (toList!888 lt!72905))) lt!72900))))))

(declare-fun d!43551 () Bool)

(declare-fun c!26223 () Bool)

(assert (=> d!43551 (= c!26223 (and ((_ is Cons!1741) (toList!888 lt!72905)) (= (_1!1360 (h!2348 (toList!888 lt!72905))) lt!72900)))))

(assert (=> d!43551 (= (getValueByKey!176 (toList!888 lt!72905) lt!72900) e!91381)))

(declare-fun b!140138 () Bool)

(assert (=> b!140138 (= e!91382 (getValueByKey!176 (t!6329 (toList!888 lt!72905)) lt!72900))))

(assert (= (and d!43551 c!26223) b!140136))

(assert (= (and d!43551 (not c!26223)) b!140137))

(assert (= (and b!140137 c!26224) b!140138))

(assert (= (and b!140137 (not c!26224)) b!140139))

(declare-fun m!167217 () Bool)

(assert (=> b!140138 m!167217))

(assert (=> d!43321 d!43551))

(declare-fun b!140143 () Bool)

(declare-fun e!91384 () Option!182)

(assert (=> b!140143 (= e!91384 None!180)))

(declare-fun b!140140 () Bool)

(declare-fun e!91383 () Option!182)

(assert (=> b!140140 (= e!91383 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73019)))))))

(declare-fun b!140141 () Bool)

(assert (=> b!140141 (= e!91383 e!91384)))

(declare-fun c!26226 () Bool)

(assert (=> b!140141 (= c!26226 (and ((_ is Cons!1741) (toList!888 lt!73019)) (not (= (_1!1360 (h!2348 (toList!888 lt!73019))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26225 () Bool)

(declare-fun d!43553 () Bool)

(assert (=> d!43553 (= c!26225 (and ((_ is Cons!1741) (toList!888 lt!73019)) (= (_1!1360 (h!2348 (toList!888 lt!73019))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43553 (= (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91383)))

(declare-fun b!140142 () Bool)

(assert (=> b!140142 (= e!91384 (getValueByKey!176 (t!6329 (toList!888 lt!73019)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43553 c!26225) b!140140))

(assert (= (and d!43553 (not c!26225)) b!140141))

(assert (= (and b!140141 c!26226) b!140142))

(assert (= (and b!140141 (not c!26226)) b!140143))

(declare-fun m!167219 () Bool)

(assert (=> b!140142 m!167219))

(assert (=> b!139595 d!43553))

(declare-fun d!43555 () Bool)

(declare-fun e!91385 () Bool)

(assert (=> d!43555 e!91385))

(declare-fun res!66994 () Bool)

(assert (=> d!43555 (=> res!66994 e!91385)))

(declare-fun lt!73436 () Bool)

(assert (=> d!43555 (= res!66994 (not lt!73436))))

(declare-fun lt!73434 () Bool)

(assert (=> d!43555 (= lt!73436 lt!73434)))

(declare-fun lt!73435 () Unit!4373)

(declare-fun e!91386 () Unit!4373)

(assert (=> d!43555 (= lt!73435 e!91386)))

(declare-fun c!26227 () Bool)

(assert (=> d!43555 (= c!26227 lt!73434)))

(assert (=> d!43555 (= lt!73434 (containsKey!180 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43555 (= (contains!923 lt!73052 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73436)))

(declare-fun b!140144 () Bool)

(declare-fun lt!73437 () Unit!4373)

(assert (=> b!140144 (= e!91386 lt!73437)))

(assert (=> b!140144 (= lt!73437 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140144 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140145 () Bool)

(declare-fun Unit!4404 () Unit!4373)

(assert (=> b!140145 (= e!91386 Unit!4404)))

(declare-fun b!140146 () Bool)

(assert (=> b!140146 (= e!91385 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43555 c!26227) b!140144))

(assert (= (and d!43555 (not c!26227)) b!140145))

(assert (= (and d!43555 (not res!66994)) b!140146))

(declare-fun m!167221 () Bool)

(assert (=> d!43555 m!167221))

(declare-fun m!167223 () Bool)

(assert (=> b!140144 m!167223))

(declare-fun m!167225 () Bool)

(assert (=> b!140144 m!167225))

(assert (=> b!140144 m!167225))

(declare-fun m!167227 () Bool)

(assert (=> b!140144 m!167227))

(assert (=> b!140146 m!167225))

(assert (=> b!140146 m!167225))

(assert (=> b!140146 m!167227))

(assert (=> b!139635 d!43555))

(assert (=> d!43379 d!43527))

(declare-fun lt!73440 () Bool)

(declare-fun d!43557 () Bool)

(declare-fun content!138 (List!1745) (InoxSet tuple2!2698))

(assert (=> d!43557 (= lt!73440 (select (content!138 (toList!888 lt!73027)) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!91392 () Bool)

(assert (=> d!43557 (= lt!73440 e!91392)))

(declare-fun res!66999 () Bool)

(assert (=> d!43557 (=> (not res!66999) (not e!91392))))

(assert (=> d!43557 (= res!66999 ((_ is Cons!1741) (toList!888 lt!73027)))))

(assert (=> d!43557 (= (contains!925 (toList!888 lt!73027) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73440)))

(declare-fun b!140151 () Bool)

(declare-fun e!91391 () Bool)

(assert (=> b!140151 (= e!91392 e!91391)))

(declare-fun res!67000 () Bool)

(assert (=> b!140151 (=> res!67000 e!91391)))

(assert (=> b!140151 (= res!67000 (= (h!2348 (toList!888 lt!73027)) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140152 () Bool)

(assert (=> b!140152 (= e!91391 (contains!925 (t!6329 (toList!888 lt!73027)) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43557 res!66999) b!140151))

(assert (= (and b!140151 (not res!67000)) b!140152))

(declare-fun m!167229 () Bool)

(assert (=> d!43557 m!167229))

(declare-fun m!167231 () Bool)

(assert (=> d!43557 m!167231))

(declare-fun m!167233 () Bool)

(assert (=> b!140152 m!167233))

(assert (=> b!139600 d!43557))

(declare-fun d!43559 () Bool)

(declare-fun e!91393 () Bool)

(assert (=> d!43559 e!91393))

(declare-fun res!67001 () Bool)

(assert (=> d!43559 (=> res!67001 e!91393)))

(declare-fun lt!73443 () Bool)

(assert (=> d!43559 (= res!67001 (not lt!73443))))

(declare-fun lt!73441 () Bool)

(assert (=> d!43559 (= lt!73443 lt!73441)))

(declare-fun lt!73442 () Unit!4373)

(declare-fun e!91394 () Unit!4373)

(assert (=> d!43559 (= lt!73442 e!91394)))

(declare-fun c!26228 () Bool)

(assert (=> d!43559 (= c!26228 lt!73441)))

(assert (=> d!43559 (= lt!73441 (containsKey!180 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43559 (= (contains!923 lt!73158 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73443)))

(declare-fun b!140153 () Bool)

(declare-fun lt!73444 () Unit!4373)

(assert (=> b!140153 (= e!91394 lt!73444)))

(assert (=> b!140153 (= lt!73444 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140153 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140154 () Bool)

(declare-fun Unit!4405 () Unit!4373)

(assert (=> b!140154 (= e!91394 Unit!4405)))

(declare-fun b!140155 () Bool)

(assert (=> b!140155 (= e!91393 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43559 c!26228) b!140153))

(assert (= (and d!43559 (not c!26228)) b!140154))

(assert (= (and d!43559 (not res!67001)) b!140155))

(declare-fun m!167235 () Bool)

(assert (=> d!43559 m!167235))

(declare-fun m!167237 () Bool)

(assert (=> b!140153 m!167237))

(declare-fun m!167239 () Bool)

(assert (=> b!140153 m!167239))

(assert (=> b!140153 m!167239))

(declare-fun m!167241 () Bool)

(assert (=> b!140153 m!167241))

(assert (=> b!140155 m!167239))

(assert (=> b!140155 m!167239))

(assert (=> b!140155 m!167241))

(assert (=> bm!15494 d!43559))

(assert (=> d!43391 d!43347))

(declare-fun bm!15565 () Bool)

(declare-fun call!15568 () Bool)

(assert (=> bm!15565 (= call!15568 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140172 () Bool)

(declare-fun e!91405 () Bool)

(declare-fun e!91403 () Bool)

(assert (=> b!140172 (= e!91405 e!91403)))

(declare-fun c!26234 () Bool)

(declare-fun lt!73447 () SeekEntryResult!279)

(assert (=> b!140172 (= c!26234 ((_ is MissingVacant!279) lt!73447))))

(declare-fun b!140173 () Bool)

(declare-fun res!67011 () Bool)

(declare-fun e!91404 () Bool)

(assert (=> b!140173 (=> (not res!67011) (not e!91404))))

(assert (=> b!140173 (= res!67011 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73447)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140174 () Bool)

(declare-fun res!67012 () Bool)

(assert (=> b!140174 (=> (not res!67012) (not e!91404))))

(declare-fun call!15569 () Bool)

(assert (=> b!140174 (= res!67012 call!15569)))

(assert (=> b!140174 (= e!91403 e!91404)))

(declare-fun b!140175 () Bool)

(declare-fun res!67013 () Bool)

(assert (=> b!140175 (= res!67013 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!73447)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91406 () Bool)

(assert (=> b!140175 (=> (not res!67013) (not e!91406))))

(declare-fun c!26233 () Bool)

(declare-fun bm!15566 () Bool)

(assert (=> bm!15566 (= call!15569 (inRange!0 (ite c!26233 (index!3279 lt!73447) (index!3282 lt!73447)) (mask!7280 newMap!16)))))

(declare-fun b!140176 () Bool)

(assert (=> b!140176 (= e!91405 e!91406)))

(declare-fun res!67010 () Bool)

(assert (=> b!140176 (= res!67010 call!15569)))

(assert (=> b!140176 (=> (not res!67010) (not e!91406))))

(declare-fun b!140177 () Bool)

(assert (=> b!140177 (= e!91406 (not call!15568))))

(declare-fun d!43561 () Bool)

(assert (=> d!43561 e!91405))

(assert (=> d!43561 (= c!26233 ((_ is MissingZero!279) lt!73447))))

(assert (=> d!43561 (= lt!73447 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43561 true))

(declare-fun _$34!999 () Unit!4373)

(assert (=> d!43561 (= (choose!863 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) _$34!999)))

(declare-fun b!140178 () Bool)

(assert (=> b!140178 (= e!91404 (not call!15568))))

(declare-fun b!140179 () Bool)

(assert (=> b!140179 (= e!91403 ((_ is Undefined!279) lt!73447))))

(assert (= (and d!43561 c!26233) b!140176))

(assert (= (and d!43561 (not c!26233)) b!140172))

(assert (= (and b!140176 res!67010) b!140175))

(assert (= (and b!140175 res!67013) b!140177))

(assert (= (and b!140172 c!26234) b!140174))

(assert (= (and b!140172 (not c!26234)) b!140179))

(assert (= (and b!140174 res!67012) b!140173))

(assert (= (and b!140173 res!67011) b!140178))

(assert (= (or b!140176 b!140174) bm!15566))

(assert (= (or b!140177 b!140178) bm!15565))

(assert (=> bm!15565 m!166013))

(assert (=> bm!15565 m!166213))

(declare-fun m!167243 () Bool)

(assert (=> bm!15566 m!167243))

(assert (=> d!43561 m!166013))

(assert (=> d!43561 m!166203))

(declare-fun m!167245 () Bool)

(assert (=> b!140175 m!167245))

(declare-fun m!167247 () Bool)

(assert (=> b!140173 m!167247))

(assert (=> d!43391 d!43561))

(assert (=> d!43391 d!43527))

(declare-fun d!43563 () Bool)

(assert (=> d!43563 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5847 () Bool)

(assert (= bs!5847 d!43563))

(assert (=> bs!5847 m!166473))

(declare-fun m!167249 () Bool)

(assert (=> bs!5847 m!167249))

(assert (=> b!139713 d!43563))

(declare-fun b!140183 () Bool)

(declare-fun e!91408 () Option!182)

(assert (=> b!140183 (= e!91408 None!180)))

(declare-fun b!140180 () Bool)

(declare-fun e!91407 () Option!182)

(assert (=> b!140180 (= e!91407 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72907)))))))

(declare-fun b!140181 () Bool)

(assert (=> b!140181 (= e!91407 e!91408)))

(declare-fun c!26236 () Bool)

(assert (=> b!140181 (= c!26236 (and ((_ is Cons!1741) (toList!888 lt!72907)) (not (= (_1!1360 (h!2348 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!26235 () Bool)

(declare-fun d!43565 () Bool)

(assert (=> d!43565 (= c!26235 (and ((_ is Cons!1741) (toList!888 lt!72907)) (= (_1!1360 (h!2348 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43565 (= (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91407)))

(declare-fun b!140182 () Bool)

(assert (=> b!140182 (= e!91408 (getValueByKey!176 (t!6329 (toList!888 lt!72907)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43565 c!26235) b!140180))

(assert (= (and d!43565 (not c!26235)) b!140181))

(assert (= (and b!140181 c!26236) b!140182))

(assert (= (and b!140181 (not c!26236)) b!140183))

(assert (=> b!140182 m!166121))

(declare-fun m!167251 () Bool)

(assert (=> b!140182 m!167251))

(assert (=> b!139713 d!43565))

(declare-fun d!43567 () Bool)

(assert (=> d!43567 (= (isDefined!129 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))))

(declare-fun bs!5848 () Bool)

(assert (= bs!5848 d!43567))

(assert (=> bs!5848 m!166481))

(declare-fun m!167253 () Bool)

(assert (=> bs!5848 m!167253))

(assert (=> b!139716 d!43567))

(declare-fun b!140187 () Bool)

(declare-fun e!91410 () Option!182)

(assert (=> b!140187 (= e!91410 None!180)))

(declare-fun b!140184 () Bool)

(declare-fun e!91409 () Option!182)

(assert (=> b!140184 (= e!91409 (Some!181 (_2!1360 (h!2348 (toList!888 call!15463)))))))

(declare-fun b!140185 () Bool)

(assert (=> b!140185 (= e!91409 e!91410)))

(declare-fun c!26238 () Bool)

(assert (=> b!140185 (= c!26238 (and ((_ is Cons!1741) (toList!888 call!15463)) (not (= (_1!1360 (h!2348 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))))

(declare-fun d!43569 () Bool)

(declare-fun c!26237 () Bool)

(assert (=> d!43569 (= c!26237 (and ((_ is Cons!1741) (toList!888 call!15463)) (= (_1!1360 (h!2348 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(assert (=> d!43569 (= (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) e!91409)))

(declare-fun b!140186 () Bool)

(assert (=> b!140186 (= e!91410 (getValueByKey!176 (t!6329 (toList!888 call!15463)) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!43569 c!26237) b!140184))

(assert (= (and d!43569 (not c!26237)) b!140185))

(assert (= (and b!140185 c!26238) b!140186))

(assert (= (and b!140185 (not c!26238)) b!140187))

(declare-fun m!167255 () Bool)

(assert (=> b!140186 m!167255))

(assert (=> b!139716 d!43569))

(declare-fun d!43571 () Bool)

(assert (=> d!43571 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72900)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72900)))))

(assert (=> d!43337 d!43571))

(declare-fun b!140191 () Bool)

(declare-fun e!91412 () Option!182)

(assert (=> b!140191 (= e!91412 None!180)))

(declare-fun e!91411 () Option!182)

(declare-fun b!140188 () Bool)

(assert (=> b!140188 (= e!91411 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun b!140189 () Bool)

(assert (=> b!140189 (= e!91411 e!91412)))

(declare-fun c!26240 () Bool)

(assert (=> b!140189 (= c!26240 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72900))))))

(declare-fun c!26239 () Bool)

(declare-fun d!43573 () Bool)

(assert (=> d!43573 (= c!26239 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72900)))))

(assert (=> d!43573 (= (getValueByKey!176 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72900) e!91411)))

(declare-fun b!140190 () Bool)

(assert (=> b!140190 (= e!91412 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72900))))

(assert (= (and d!43573 c!26239) b!140188))

(assert (= (and d!43573 (not c!26239)) b!140189))

(assert (= (and b!140189 c!26240) b!140190))

(assert (= (and b!140189 (not c!26240)) b!140191))

(declare-fun m!167257 () Bool)

(assert (=> b!140190 m!167257))

(assert (=> d!43337 d!43573))

(declare-fun d!43575 () Bool)

(assert (=> d!43575 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5849 () Bool)

(assert (= bs!5849 d!43575))

(assert (=> bs!5849 m!166489))

(declare-fun m!167259 () Bool)

(assert (=> bs!5849 m!167259))

(assert (=> b!139719 d!43575))

(declare-fun b!140195 () Bool)

(declare-fun e!91414 () Option!182)

(assert (=> b!140195 (= e!91414 None!180)))

(declare-fun b!140192 () Bool)

(declare-fun e!91413 () Option!182)

(assert (=> b!140192 (= e!91413 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72907)))))))

(declare-fun b!140193 () Bool)

(assert (=> b!140193 (= e!91413 e!91414)))

(declare-fun c!26242 () Bool)

(assert (=> b!140193 (= c!26242 (and ((_ is Cons!1741) (toList!888 lt!72907)) (not (= (_1!1360 (h!2348 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!43577 () Bool)

(declare-fun c!26241 () Bool)

(assert (=> d!43577 (= c!26241 (and ((_ is Cons!1741) (toList!888 lt!72907)) (= (_1!1360 (h!2348 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43577 (= (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000) e!91413)))

(declare-fun b!140194 () Bool)

(assert (=> b!140194 (= e!91414 (getValueByKey!176 (t!6329 (toList!888 lt!72907)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43577 c!26241) b!140192))

(assert (= (and d!43577 (not c!26241)) b!140193))

(assert (= (and b!140193 c!26242) b!140194))

(assert (= (and b!140193 (not c!26242)) b!140195))

(declare-fun m!167261 () Bool)

(assert (=> b!140194 m!167261))

(assert (=> b!139719 d!43577))

(declare-fun d!43579 () Bool)

(declare-fun e!91415 () Bool)

(assert (=> d!43579 e!91415))

(declare-fun res!67014 () Bool)

(assert (=> d!43579 (=> res!67014 e!91415)))

(declare-fun lt!73450 () Bool)

(assert (=> d!43579 (= res!67014 (not lt!73450))))

(declare-fun lt!73448 () Bool)

(assert (=> d!43579 (= lt!73450 lt!73448)))

(declare-fun lt!73449 () Unit!4373)

(declare-fun e!91416 () Unit!4373)

(assert (=> d!43579 (= lt!73449 e!91416)))

(declare-fun c!26243 () Bool)

(assert (=> d!43579 (= c!26243 lt!73448)))

(assert (=> d!43579 (= lt!73448 (containsKey!180 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))

(assert (=> d!43579 (= (contains!923 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)) lt!73049) lt!73450)))

(declare-fun b!140196 () Bool)

(declare-fun lt!73451 () Unit!4373)

(assert (=> b!140196 (= e!91416 lt!73451)))

(assert (=> b!140196 (= lt!73451 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))

(assert (=> b!140196 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))

(declare-fun b!140197 () Bool)

(declare-fun Unit!4406 () Unit!4373)

(assert (=> b!140197 (= e!91416 Unit!4406)))

(declare-fun b!140198 () Bool)

(assert (=> b!140198 (= e!91415 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049)))))

(assert (= (and d!43579 c!26243) b!140196))

(assert (= (and d!43579 (not c!26243)) b!140197))

(assert (= (and d!43579 (not res!67014)) b!140198))

(declare-fun m!167263 () Bool)

(assert (=> d!43579 m!167263))

(declare-fun m!167265 () Bool)

(assert (=> b!140196 m!167265))

(declare-fun m!167267 () Bool)

(assert (=> b!140196 m!167267))

(assert (=> b!140196 m!167267))

(declare-fun m!167269 () Bool)

(assert (=> b!140196 m!167269))

(assert (=> b!140198 m!167267))

(assert (=> b!140198 m!167267))

(assert (=> b!140198 m!167269))

(assert (=> b!139631 d!43579))

(declare-fun d!43581 () Bool)

(declare-fun e!91417 () Bool)

(assert (=> d!43581 e!91417))

(declare-fun res!67015 () Bool)

(assert (=> d!43581 (=> (not res!67015) (not e!91417))))

(declare-fun lt!73455 () ListLongMap!1745)

(assert (=> d!43581 (= res!67015 (contains!923 lt!73455 (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(declare-fun lt!73452 () List!1745)

(assert (=> d!43581 (= lt!73455 (ListLongMap!1746 lt!73452))))

(declare-fun lt!73453 () Unit!4373)

(declare-fun lt!73454 () Unit!4373)

(assert (=> d!43581 (= lt!73453 lt!73454)))

(assert (=> d!43581 (= (getValueByKey!176 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050))) (Some!181 (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (=> d!43581 (= lt!73454 (lemmaContainsTupThenGetReturnValue!90 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (=> d!43581 (= lt!73452 (insertStrictlySorted!93 (toList!888 lt!73054) (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (=> d!43581 (= (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)) lt!73455)))

(declare-fun b!140199 () Bool)

(declare-fun res!67016 () Bool)

(assert (=> b!140199 (=> (not res!67016) (not e!91417))))

(assert (=> b!140199 (= res!67016 (= (getValueByKey!176 (toList!888 lt!73455) (_1!1360 (tuple2!2699 lt!73053 lt!73050))) (Some!181 (_2!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(declare-fun b!140200 () Bool)

(assert (=> b!140200 (= e!91417 (contains!925 (toList!888 lt!73455) (tuple2!2699 lt!73053 lt!73050)))))

(assert (= (and d!43581 res!67015) b!140199))

(assert (= (and b!140199 res!67016) b!140200))

(declare-fun m!167271 () Bool)

(assert (=> d!43581 m!167271))

(declare-fun m!167273 () Bool)

(assert (=> d!43581 m!167273))

(declare-fun m!167275 () Bool)

(assert (=> d!43581 m!167275))

(declare-fun m!167277 () Bool)

(assert (=> d!43581 m!167277))

(declare-fun m!167279 () Bool)

(assert (=> b!140199 m!167279))

(declare-fun m!167281 () Bool)

(assert (=> b!140200 m!167281))

(assert (=> b!139631 d!43581))

(declare-fun d!43583 () Bool)

(declare-fun e!91418 () Bool)

(assert (=> d!43583 e!91418))

(declare-fun res!67017 () Bool)

(assert (=> d!43583 (=> (not res!67017) (not e!91418))))

(declare-fun lt!73459 () ListLongMap!1745)

(assert (=> d!43583 (= res!67017 (contains!923 lt!73459 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73456 () List!1745)

(assert (=> d!43583 (= lt!73459 (ListLongMap!1746 lt!73456))))

(declare-fun lt!73457 () Unit!4373)

(declare-fun lt!73458 () Unit!4373)

(assert (=> d!43583 (= lt!73457 lt!73458)))

(assert (=> d!43583 (= (getValueByKey!176 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43583 (= lt!73458 (lemmaContainsTupThenGetReturnValue!90 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43583 (= lt!73456 (insertStrictlySorted!93 (toList!888 call!15485) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43583 (= (+!179 call!15485 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73459)))

(declare-fun b!140201 () Bool)

(declare-fun res!67018 () Bool)

(assert (=> b!140201 (=> (not res!67018) (not e!91418))))

(assert (=> b!140201 (= res!67018 (= (getValueByKey!176 (toList!888 lt!73459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140202 () Bool)

(assert (=> b!140202 (= e!91418 (contains!925 (toList!888 lt!73459) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43583 res!67017) b!140201))

(assert (= (and b!140201 res!67018) b!140202))

(declare-fun m!167283 () Bool)

(assert (=> d!43583 m!167283))

(declare-fun m!167285 () Bool)

(assert (=> d!43583 m!167285))

(declare-fun m!167287 () Bool)

(assert (=> d!43583 m!167287))

(declare-fun m!167289 () Bool)

(assert (=> d!43583 m!167289))

(declare-fun m!167291 () Bool)

(assert (=> b!140201 m!167291))

(declare-fun m!167293 () Bool)

(assert (=> b!140202 m!167293))

(assert (=> b!139631 d!43583))

(declare-fun d!43585 () Bool)

(assert (=> d!43585 (not (contains!923 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)) lt!73049))))

(declare-fun lt!73462 () Unit!4373)

(declare-fun choose!866 (ListLongMap!1745 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4373)

(assert (=> d!43585 (= lt!73462 (choose!866 lt!73054 lt!73053 lt!73050 lt!73049))))

(declare-fun e!91421 () Bool)

(assert (=> d!43585 e!91421))

(declare-fun res!67021 () Bool)

(assert (=> d!43585 (=> (not res!67021) (not e!91421))))

(assert (=> d!43585 (= res!67021 (not (contains!923 lt!73054 lt!73049)))))

(assert (=> d!43585 (= (addStillNotContains!64 lt!73054 lt!73053 lt!73050 lt!73049) lt!73462)))

(declare-fun b!140206 () Bool)

(assert (=> b!140206 (= e!91421 (not (= lt!73053 lt!73049)))))

(assert (= (and d!43585 res!67021) b!140206))

(assert (=> d!43585 m!166305))

(assert (=> d!43585 m!166305))

(assert (=> d!43585 m!166307))

(declare-fun m!167295 () Bool)

(assert (=> d!43585 m!167295))

(declare-fun m!167297 () Bool)

(assert (=> d!43585 m!167297))

(assert (=> b!139631 d!43585))

(assert (=> b!139631 d!43421))

(assert (=> b!139866 d!43479))

(assert (=> b!139747 d!43479))

(declare-fun d!43587 () Bool)

(declare-fun res!67022 () Bool)

(declare-fun e!91422 () Bool)

(assert (=> d!43587 (=> res!67022 e!91422)))

(assert (=> d!43587 (= res!67022 (and ((_ is Cons!1741) (toList!888 call!15479)) (= (_1!1360 (h!2348 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43587 (= (containsKey!180 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91422)))

(declare-fun b!140207 () Bool)

(declare-fun e!91423 () Bool)

(assert (=> b!140207 (= e!91422 e!91423)))

(declare-fun res!67023 () Bool)

(assert (=> b!140207 (=> (not res!67023) (not e!91423))))

(assert (=> b!140207 (= res!67023 (and (or (not ((_ is Cons!1741) (toList!888 call!15479))) (bvsle (_1!1360 (h!2348 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (toList!888 call!15479)) (bvslt (_1!1360 (h!2348 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!140208 () Bool)

(assert (=> b!140208 (= e!91423 (containsKey!180 (t!6329 (toList!888 call!15479)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43587 (not res!67022)) b!140207))

(assert (= (and b!140207 res!67023) b!140208))

(assert (=> b!140208 m!166013))

(declare-fun m!167299 () Bool)

(assert (=> b!140208 m!167299))

(assert (=> d!43383 d!43587))

(declare-fun d!43589 () Bool)

(declare-fun e!91424 () Bool)

(assert (=> d!43589 e!91424))

(declare-fun res!67024 () Bool)

(assert (=> d!43589 (=> (not res!67024) (not e!91424))))

(declare-fun lt!73466 () ListLongMap!1745)

(assert (=> d!43589 (= res!67024 (contains!923 lt!73466 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73463 () List!1745)

(assert (=> d!43589 (= lt!73466 (ListLongMap!1746 lt!73463))))

(declare-fun lt!73464 () Unit!4373)

(declare-fun lt!73465 () Unit!4373)

(assert (=> d!43589 (= lt!73464 lt!73465)))

(assert (=> d!43589 (= (getValueByKey!176 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43589 (= lt!73465 (lemmaContainsTupThenGetReturnValue!90 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43589 (= lt!73463 (insertStrictlySorted!93 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43589 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73466)))

(declare-fun b!140209 () Bool)

(declare-fun res!67025 () Bool)

(assert (=> b!140209 (=> (not res!67025) (not e!91424))))

(assert (=> b!140209 (= res!67025 (= (getValueByKey!176 (toList!888 lt!73466) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140210 () Bool)

(assert (=> b!140210 (= e!91424 (contains!925 (toList!888 lt!73466) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43589 res!67024) b!140209))

(assert (= (and b!140209 res!67025) b!140210))

(declare-fun m!167301 () Bool)

(assert (=> d!43589 m!167301))

(declare-fun m!167303 () Bool)

(assert (=> d!43589 m!167303))

(declare-fun m!167305 () Bool)

(assert (=> d!43589 m!167305))

(declare-fun m!167307 () Bool)

(assert (=> d!43589 m!167307))

(declare-fun m!167309 () Bool)

(assert (=> b!140209 m!167309))

(declare-fun m!167311 () Bool)

(assert (=> b!140210 m!167311))

(assert (=> d!43373 d!43589))

(declare-fun b!140211 () Bool)

(declare-fun e!91433 () Unit!4373)

(declare-fun lt!73488 () Unit!4373)

(assert (=> b!140211 (= e!91433 lt!73488)))

(declare-fun lt!73482 () ListLongMap!1745)

(assert (=> b!140211 (= lt!73482 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73484 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73484 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73483 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73483 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73486 () Unit!4373)

(assert (=> b!140211 (= lt!73486 (addStillContains!96 lt!73482 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73483))))

(assert (=> b!140211 (contains!923 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73483)))

(declare-fun lt!73477 () Unit!4373)

(assert (=> b!140211 (= lt!73477 lt!73486)))

(declare-fun lt!73485 () ListLongMap!1745)

(assert (=> b!140211 (= lt!73485 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73481 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73481 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73480 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73480 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73476 () Unit!4373)

(assert (=> b!140211 (= lt!73476 (addApplyDifferent!96 lt!73485 lt!73481 (minValue!2790 newMap!16) lt!73480))))

(assert (=> b!140211 (= (apply!120 (+!179 lt!73485 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))) lt!73480) (apply!120 lt!73485 lt!73480))))

(declare-fun lt!73472 () Unit!4373)

(assert (=> b!140211 (= lt!73472 lt!73476)))

(declare-fun lt!73467 () ListLongMap!1745)

(assert (=> b!140211 (= lt!73467 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73471 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73471 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73468 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73468 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73479 () Unit!4373)

(assert (=> b!140211 (= lt!73479 (addApplyDifferent!96 lt!73467 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73468))))

(assert (=> b!140211 (= (apply!120 (+!179 lt!73467 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73468) (apply!120 lt!73467 lt!73468))))

(declare-fun lt!73475 () Unit!4373)

(assert (=> b!140211 (= lt!73475 lt!73479)))

(declare-fun lt!73469 () ListLongMap!1745)

(assert (=> b!140211 (= lt!73469 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73470 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73470 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73474 () (_ BitVec 64))

(assert (=> b!140211 (= lt!73474 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140211 (= lt!73488 (addApplyDifferent!96 lt!73469 lt!73470 (minValue!2790 newMap!16) lt!73474))))

(assert (=> b!140211 (= (apply!120 (+!179 lt!73469 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))) lt!73474) (apply!120 lt!73469 lt!73474))))

(declare-fun b!140212 () Bool)

(declare-fun e!91437 () ListLongMap!1745)

(declare-fun call!15570 () ListLongMap!1745)

(assert (=> b!140212 (= e!91437 call!15570)))

(declare-fun b!140213 () Bool)

(declare-fun e!91425 () Bool)

(assert (=> b!140213 (= e!91425 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140214 () Bool)

(declare-fun e!91429 () Bool)

(declare-fun call!15575 () Bool)

(assert (=> b!140214 (= e!91429 (not call!15575))))

(declare-fun b!140215 () Bool)

(declare-fun e!91432 () Bool)

(declare-fun lt!73487 () ListLongMap!1745)

(assert (=> b!140215 (= e!91432 (= (apply!120 lt!73487 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!140215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15567 () Bool)

(assert (=> bm!15567 (= call!15575 (contains!923 lt!73487 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15568 () Bool)

(declare-fun call!15574 () ListLongMap!1745)

(assert (=> bm!15568 (= call!15570 call!15574)))

(declare-fun b!140217 () Bool)

(declare-fun e!91430 () Bool)

(declare-fun call!15572 () Bool)

(assert (=> b!140217 (= e!91430 (not call!15572))))

(declare-fun b!140218 () Bool)

(declare-fun e!91428 () Bool)

(assert (=> b!140218 (= e!91428 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140219 () Bool)

(declare-fun res!67026 () Bool)

(declare-fun e!91426 () Bool)

(assert (=> b!140219 (=> (not res!67026) (not e!91426))))

(assert (=> b!140219 (= res!67026 e!91430)))

(declare-fun c!26249 () Bool)

(assert (=> b!140219 (= c!26249 (not (= (bvand lt!72995 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140220 () Bool)

(declare-fun res!67031 () Bool)

(assert (=> b!140220 (=> (not res!67031) (not e!91426))))

(declare-fun e!91436 () Bool)

(assert (=> b!140220 (= res!67031 e!91436)))

(declare-fun res!67030 () Bool)

(assert (=> b!140220 (=> res!67030 e!91436)))

(assert (=> b!140220 (= res!67030 (not e!91428))))

(declare-fun res!67027 () Bool)

(assert (=> b!140220 (=> (not res!67027) (not e!91428))))

(assert (=> b!140220 (= res!67027 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140221 () Bool)

(declare-fun e!91434 () Bool)

(assert (=> b!140221 (= e!91434 (= (apply!120 lt!73487 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!140222 () Bool)

(declare-fun e!91435 () ListLongMap!1745)

(assert (=> b!140222 (= e!91435 (+!179 call!15574 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!140223 () Bool)

(declare-fun e!91427 () ListLongMap!1745)

(declare-fun call!15576 () ListLongMap!1745)

(assert (=> b!140223 (= e!91427 call!15576)))

(declare-fun b!140224 () Bool)

(assert (=> b!140224 (= e!91426 e!91429)))

(declare-fun c!26245 () Bool)

(assert (=> b!140224 (= c!26245 (not (= (bvand lt!72995 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140225 () Bool)

(declare-fun c!26247 () Bool)

(assert (=> b!140225 (= c!26247 (and (not (= (bvand lt!72995 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!72995 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140225 (= e!91437 e!91427)))

(declare-fun b!140226 () Bool)

(assert (=> b!140226 (= e!91435 e!91437)))

(declare-fun c!26248 () Bool)

(assert (=> b!140226 (= c!26248 (and (not (= (bvand lt!72995 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!72995 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140227 () Bool)

(assert (=> b!140227 (= e!91427 call!15570)))

(declare-fun b!140228 () Bool)

(assert (=> b!140228 (= e!91436 e!91432)))

(declare-fun res!67034 () Bool)

(assert (=> b!140228 (=> (not res!67034) (not e!91432))))

(assert (=> b!140228 (= res!67034 (contains!923 lt!73487 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140228 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140216 () Bool)

(assert (=> b!140216 (= e!91429 e!91434)))

(declare-fun res!67028 () Bool)

(assert (=> b!140216 (= res!67028 call!15575)))

(assert (=> b!140216 (=> (not res!67028) (not e!91434))))

(declare-fun d!43591 () Bool)

(assert (=> d!43591 e!91426))

(declare-fun res!67032 () Bool)

(assert (=> d!43591 (=> (not res!67032) (not e!91426))))

(assert (=> d!43591 (= res!67032 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73478 () ListLongMap!1745)

(assert (=> d!43591 (= lt!73487 lt!73478)))

(declare-fun lt!73473 () Unit!4373)

(assert (=> d!43591 (= lt!73473 e!91433)))

(declare-fun c!26244 () Bool)

(assert (=> d!43591 (= c!26244 e!91425)))

(declare-fun res!67033 () Bool)

(assert (=> d!43591 (=> (not res!67033) (not e!91425))))

(assert (=> d!43591 (= res!67033 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43591 (= lt!73478 e!91435)))

(declare-fun c!26246 () Bool)

(assert (=> d!43591 (= c!26246 (and (not (= (bvand lt!72995 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!72995 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43591 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43591 (= (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73487)))

(declare-fun e!91431 () Bool)

(declare-fun b!140229 () Bool)

(assert (=> b!140229 (= e!91431 (= (apply!120 lt!73487 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!15569 () Bool)

(declare-fun call!15571 () ListLongMap!1745)

(declare-fun call!15573 () ListLongMap!1745)

(assert (=> bm!15569 (= call!15571 call!15573)))

(declare-fun bm!15570 () Bool)

(assert (=> bm!15570 (= call!15576 call!15571)))

(declare-fun b!140230 () Bool)

(assert (=> b!140230 (= e!91430 e!91431)))

(declare-fun res!67029 () Bool)

(assert (=> b!140230 (= res!67029 call!15572)))

(assert (=> b!140230 (=> (not res!67029) (not e!91431))))

(declare-fun bm!15571 () Bool)

(assert (=> bm!15571 (= call!15573 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15572 () Bool)

(assert (=> bm!15572 (= call!15574 (+!179 (ite c!26246 call!15573 (ite c!26248 call!15571 call!15576)) (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140231 () Bool)

(declare-fun Unit!4407 () Unit!4373)

(assert (=> b!140231 (= e!91433 Unit!4407)))

(declare-fun bm!15573 () Bool)

(assert (=> bm!15573 (= call!15572 (contains!923 lt!73487 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43591 c!26246) b!140222))

(assert (= (and d!43591 (not c!26246)) b!140226))

(assert (= (and b!140226 c!26248) b!140212))

(assert (= (and b!140226 (not c!26248)) b!140225))

(assert (= (and b!140225 c!26247) b!140227))

(assert (= (and b!140225 (not c!26247)) b!140223))

(assert (= (or b!140227 b!140223) bm!15570))

(assert (= (or b!140212 bm!15570) bm!15569))

(assert (= (or b!140212 b!140227) bm!15568))

(assert (= (or b!140222 bm!15569) bm!15571))

(assert (= (or b!140222 bm!15568) bm!15572))

(assert (= (and d!43591 res!67033) b!140213))

(assert (= (and d!43591 c!26244) b!140211))

(assert (= (and d!43591 (not c!26244)) b!140231))

(assert (= (and d!43591 res!67032) b!140220))

(assert (= (and b!140220 res!67027) b!140218))

(assert (= (and b!140220 (not res!67030)) b!140228))

(assert (= (and b!140228 res!67034) b!140215))

(assert (= (and b!140220 res!67031) b!140219))

(assert (= (and b!140219 c!26249) b!140230))

(assert (= (and b!140219 (not c!26249)) b!140217))

(assert (= (and b!140230 res!67029) b!140229))

(assert (= (or b!140230 b!140217) bm!15573))

(assert (= (and b!140219 res!67026) b!140224))

(assert (= (and b!140224 c!26245) b!140216))

(assert (= (and b!140224 (not c!26245)) b!140214))

(assert (= (and b!140216 res!67028) b!140221))

(assert (= (or b!140216 b!140214) bm!15567))

(declare-fun b_lambda!6267 () Bool)

(assert (=> (not b_lambda!6267) (not b!140215)))

(assert (=> b!140215 t!6337))

(declare-fun b_and!8751 () Bool)

(assert (= b_and!8747 (and (=> t!6337 result!4191) b_and!8751)))

(assert (=> b!140215 t!6339))

(declare-fun b_and!8753 () Bool)

(assert (= b_and!8749 (and (=> t!6339 result!4193) b_and!8753)))

(assert (=> b!140211 m!166029))

(declare-fun m!167313 () Bool)

(assert (=> b!140211 m!167313))

(declare-fun m!167315 () Bool)

(assert (=> b!140211 m!167315))

(assert (=> b!140211 m!166029))

(declare-fun m!167317 () Bool)

(assert (=> b!140211 m!167317))

(declare-fun m!167319 () Bool)

(assert (=> b!140211 m!167319))

(declare-fun m!167321 () Bool)

(assert (=> b!140211 m!167321))

(declare-fun m!167323 () Bool)

(assert (=> b!140211 m!167323))

(declare-fun m!167325 () Bool)

(assert (=> b!140211 m!167325))

(assert (=> b!140211 m!166029))

(declare-fun m!167327 () Bool)

(assert (=> b!140211 m!167327))

(declare-fun m!167329 () Bool)

(assert (=> b!140211 m!167329))

(declare-fun m!167331 () Bool)

(assert (=> b!140211 m!167331))

(declare-fun m!167333 () Bool)

(assert (=> b!140211 m!167333))

(assert (=> b!140211 m!167323))

(assert (=> b!140211 m!167331))

(assert (=> b!140211 m!166385))

(declare-fun m!167335 () Bool)

(assert (=> b!140211 m!167335))

(assert (=> b!140211 m!167321))

(declare-fun m!167337 () Bool)

(assert (=> b!140211 m!167337))

(declare-fun m!167339 () Bool)

(assert (=> b!140211 m!167339))

(declare-fun m!167341 () Bool)

(assert (=> b!140211 m!167341))

(assert (=> b!140211 m!167339))

(declare-fun m!167343 () Bool)

(assert (=> b!140211 m!167343))

(declare-fun m!167345 () Bool)

(assert (=> b!140221 m!167345))

(declare-fun m!167347 () Bool)

(assert (=> bm!15567 m!167347))

(assert (=> d!43591 m!166429))

(assert (=> b!140228 m!166385))

(assert (=> b!140228 m!166385))

(declare-fun m!167349 () Bool)

(assert (=> b!140228 m!167349))

(assert (=> b!140213 m!166385))

(assert (=> b!140213 m!166385))

(assert (=> b!140213 m!166389))

(assert (=> bm!15571 m!166029))

(assert (=> bm!15571 m!167313))

(declare-fun m!167351 () Bool)

(assert (=> b!140222 m!167351))

(declare-fun m!167353 () Bool)

(assert (=> b!140229 m!167353))

(assert (=> b!140218 m!166385))

(assert (=> b!140218 m!166385))

(assert (=> b!140218 m!166389))

(declare-fun m!167355 () Bool)

(assert (=> bm!15572 m!167355))

(declare-fun m!167357 () Bool)

(assert (=> bm!15573 m!167357))

(assert (=> b!140215 m!166385))

(assert (=> b!140215 m!166785))

(assert (=> b!140215 m!166443))

(assert (=> b!140215 m!166787))

(assert (=> b!140215 m!166385))

(declare-fun m!167359 () Bool)

(assert (=> b!140215 m!167359))

(assert (=> b!140215 m!166443))

(assert (=> b!140215 m!166785))

(assert (=> d!43373 d!43591))

(assert (=> d!43373 d!43435))

(declare-fun d!43593 () Bool)

(assert (=> d!43593 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!43593 true))

(declare-fun _$7!122 () Unit!4373)

(assert (=> d!43593 (= (choose!860 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72995 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)) _$7!122)))

(declare-fun bs!5850 () Bool)

(assert (= bs!5850 d!43593))

(assert (=> bs!5850 m!166097))

(assert (=> bs!5850 m!166097))

(assert (=> bs!5850 m!166527))

(assert (=> bs!5850 m!166029))

(assert (=> bs!5850 m!166529))

(assert (=> d!43373 d!43593))

(assert (=> d!43373 d!43527))

(declare-fun d!43595 () Bool)

(declare-fun e!91438 () Bool)

(assert (=> d!43595 e!91438))

(declare-fun res!67035 () Bool)

(assert (=> d!43595 (=> (not res!67035) (not e!91438))))

(declare-fun lt!73492 () ListLongMap!1745)

(assert (=> d!43595 (= res!67035 (contains!923 lt!73492 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!73489 () List!1745)

(assert (=> d!43595 (= lt!73492 (ListLongMap!1746 lt!73489))))

(declare-fun lt!73490 () Unit!4373)

(declare-fun lt!73491 () Unit!4373)

(assert (=> d!43595 (= lt!73490 lt!73491)))

(assert (=> d!43595 (= (getValueByKey!176 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43595 (= lt!73491 (lemmaContainsTupThenGetReturnValue!90 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43595 (= lt!73489 (insertStrictlySorted!93 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43595 (= (+!179 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73492)))

(declare-fun b!140232 () Bool)

(declare-fun res!67036 () Bool)

(assert (=> b!140232 (=> (not res!67036) (not e!91438))))

(assert (=> b!140232 (= res!67036 (= (getValueByKey!176 (toList!888 lt!73492) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!140233 () Bool)

(assert (=> b!140233 (= e!91438 (contains!925 (toList!888 lt!73492) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!43595 res!67035) b!140232))

(assert (= (and b!140232 res!67036) b!140233))

(declare-fun m!167361 () Bool)

(assert (=> d!43595 m!167361))

(declare-fun m!167363 () Bool)

(assert (=> d!43595 m!167363))

(declare-fun m!167365 () Bool)

(assert (=> d!43595 m!167365))

(declare-fun m!167367 () Bool)

(assert (=> d!43595 m!167367))

(declare-fun m!167369 () Bool)

(assert (=> b!140232 m!167369))

(declare-fun m!167371 () Bool)

(assert (=> b!140233 m!167371))

(assert (=> bm!15535 d!43595))

(declare-fun b!140234 () Bool)

(declare-fun lt!73499 () Unit!4373)

(declare-fun lt!73495 () Unit!4373)

(assert (=> b!140234 (= lt!73499 lt!73495)))

(declare-fun lt!73494 () V!3555)

(declare-fun lt!73493 () (_ BitVec 64))

(declare-fun lt!73498 () ListLongMap!1745)

(declare-fun lt!73497 () (_ BitVec 64))

(assert (=> b!140234 (not (contains!923 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494)) lt!73493))))

(assert (=> b!140234 (= lt!73495 (addStillNotContains!64 lt!73498 lt!73497 lt!73494 lt!73493))))

(assert (=> b!140234 (= lt!73493 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140234 (= lt!73494 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140234 (= lt!73497 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!15577 () ListLongMap!1745)

(assert (=> b!140234 (= lt!73498 call!15577)))

(declare-fun e!91439 () ListLongMap!1745)

(assert (=> b!140234 (= e!91439 (+!179 call!15577 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140236 () Bool)

(declare-fun e!91441 () ListLongMap!1745)

(assert (=> b!140236 (= e!91441 (ListLongMap!1746 Nil!1742))))

(declare-fun b!140237 () Bool)

(declare-fun e!91445 () Bool)

(declare-fun e!91440 () Bool)

(assert (=> b!140237 (= e!91445 e!91440)))

(assert (=> b!140237 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun res!67040 () Bool)

(declare-fun lt!73496 () ListLongMap!1745)

(assert (=> b!140237 (= res!67040 (contains!923 lt!73496 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140237 (=> (not res!67040) (not e!91440))))

(declare-fun b!140238 () Bool)

(declare-fun res!67037 () Bool)

(declare-fun e!91444 () Bool)

(assert (=> b!140238 (=> (not res!67037) (not e!91444))))

(assert (=> b!140238 (= res!67037 (not (contains!923 lt!73496 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140239 () Bool)

(declare-fun e!91442 () Bool)

(assert (=> b!140239 (= e!91445 e!91442)))

(declare-fun c!26252 () Bool)

(assert (=> b!140239 (= c!26252 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140240 () Bool)

(assert (=> b!140240 (= e!91441 e!91439)))

(declare-fun c!26253 () Bool)

(assert (=> b!140240 (= c!26253 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140241 () Bool)

(declare-fun e!91443 () Bool)

(assert (=> b!140241 (= e!91443 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140241 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!15574 () Bool)

(assert (=> bm!15574 (= call!15577 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!140242 () Bool)

(assert (=> b!140242 (= e!91442 (= lt!73496 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140243 () Bool)

(assert (=> b!140243 (= e!91444 e!91445)))

(declare-fun c!26250 () Bool)

(assert (=> b!140243 (= c!26250 e!91443)))

(declare-fun res!67039 () Bool)

(assert (=> b!140243 (=> (not res!67039) (not e!91443))))

(assert (=> b!140243 (= res!67039 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun d!43597 () Bool)

(assert (=> d!43597 e!91444))

(declare-fun res!67038 () Bool)

(assert (=> d!43597 (=> (not res!67038) (not e!91444))))

(assert (=> d!43597 (= res!67038 (not (contains!923 lt!73496 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43597 (= lt!73496 e!91441)))

(declare-fun c!26251 () Bool)

(assert (=> d!43597 (= c!26251 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43597 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!43597 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) lt!73496)))

(declare-fun b!140235 () Bool)

(assert (=> b!140235 (= e!91442 (isEmpty!417 lt!73496))))

(declare-fun b!140244 () Bool)

(assert (=> b!140244 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!140244 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!140244 (= e!91440 (= (apply!120 lt!73496 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140245 () Bool)

(assert (=> b!140245 (= e!91439 call!15577)))

(assert (= (and d!43597 c!26251) b!140236))

(assert (= (and d!43597 (not c!26251)) b!140240))

(assert (= (and b!140240 c!26253) b!140234))

(assert (= (and b!140240 (not c!26253)) b!140245))

(assert (= (or b!140234 b!140245) bm!15574))

(assert (= (and d!43597 res!67038) b!140238))

(assert (= (and b!140238 res!67037) b!140243))

(assert (= (and b!140243 res!67039) b!140241))

(assert (= (and b!140243 c!26250) b!140237))

(assert (= (and b!140243 (not c!26250)) b!140239))

(assert (= (and b!140237 res!67040) b!140244))

(assert (= (and b!140239 c!26252) b!140242))

(assert (= (and b!140239 (not c!26252)) b!140235))

(declare-fun b_lambda!6269 () Bool)

(assert (=> (not b_lambda!6269) (not b!140234)))

(assert (=> b!140234 t!6326))

(declare-fun b_and!8755 () Bool)

(assert (= b_and!8751 (and (=> t!6326 result!4177) b_and!8755)))

(assert (=> b!140234 t!6328))

(declare-fun b_and!8757 () Bool)

(assert (= b_and!8753 (and (=> t!6328 result!4181) b_and!8757)))

(declare-fun b_lambda!6271 () Bool)

(assert (=> (not b_lambda!6271) (not b!140244)))

(assert (=> b!140244 t!6326))

(declare-fun b_and!8759 () Bool)

(assert (= b_and!8755 (and (=> t!6326 result!4177) b_and!8759)))

(assert (=> b!140244 t!6328))

(declare-fun b_and!8761 () Bool)

(assert (= b_and!8757 (and (=> t!6328 result!4181) b_and!8761)))

(declare-fun m!167373 () Bool)

(assert (=> b!140238 m!167373))

(assert (=> b!140240 m!166463))

(assert (=> b!140240 m!166463))

(declare-fun m!167375 () Bool)

(assert (=> b!140240 m!167375))

(declare-fun m!167377 () Bool)

(assert (=> d!43597 m!167377))

(assert (=> d!43597 m!166137))

(assert (=> b!140234 m!166027))

(declare-fun m!167379 () Bool)

(assert (=> b!140234 m!167379))

(declare-fun m!167381 () Bool)

(assert (=> b!140234 m!167381))

(assert (=> b!140234 m!167379))

(declare-fun m!167383 () Bool)

(assert (=> b!140234 m!167383))

(declare-fun m!167385 () Bool)

(assert (=> b!140234 m!167385))

(assert (=> b!140234 m!167383))

(assert (=> b!140234 m!166027))

(declare-fun m!167387 () Bool)

(assert (=> b!140234 m!167387))

(declare-fun m!167389 () Bool)

(assert (=> b!140234 m!167389))

(assert (=> b!140234 m!166463))

(assert (=> b!140241 m!166463))

(assert (=> b!140241 m!166463))

(assert (=> b!140241 m!167375))

(declare-fun m!167391 () Bool)

(assert (=> bm!15574 m!167391))

(declare-fun m!167393 () Bool)

(assert (=> b!140235 m!167393))

(assert (=> b!140244 m!166027))

(assert (=> b!140244 m!166463))

(declare-fun m!167395 () Bool)

(assert (=> b!140244 m!167395))

(assert (=> b!140244 m!167383))

(assert (=> b!140244 m!167383))

(assert (=> b!140244 m!166027))

(assert (=> b!140244 m!167387))

(assert (=> b!140244 m!166463))

(assert (=> b!140237 m!166463))

(assert (=> b!140237 m!166463))

(declare-fun m!167397 () Bool)

(assert (=> b!140237 m!167397))

(assert (=> b!140242 m!167391))

(assert (=> bm!15482 d!43597))

(declare-fun d!43599 () Bool)

(declare-fun res!67041 () Bool)

(declare-fun e!91446 () Bool)

(assert (=> d!43599 (=> res!67041 e!91446)))

(assert (=> d!43599 (= res!67041 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72825))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43599 (= (containsKey!180 (t!6329 (toList!888 lt!72825)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91446)))

(declare-fun b!140246 () Bool)

(declare-fun e!91447 () Bool)

(assert (=> b!140246 (= e!91446 e!91447)))

(declare-fun res!67042 () Bool)

(assert (=> b!140246 (=> (not res!67042) (not e!91447))))

(assert (=> b!140246 (= res!67042 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 lt!72825)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (t!6329 (toList!888 lt!72825))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!140247 () Bool)

(assert (=> b!140247 (= e!91447 (containsKey!180 (t!6329 (t!6329 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43599 (not res!67041)) b!140246))

(assert (= (and b!140246 res!67042) b!140247))

(assert (=> b!140247 m!166013))

(declare-fun m!167399 () Bool)

(assert (=> b!140247 m!167399))

(assert (=> b!139736 d!43599))

(declare-fun d!43601 () Bool)

(assert (=> d!43601 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(declare-fun lt!73500 () Unit!4373)

(assert (=> d!43601 (= lt!73500 (choose!864 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(declare-fun e!91448 () Bool)

(assert (=> d!43601 e!91448))

(declare-fun res!67043 () Bool)

(assert (=> d!43601 (=> (not res!67043) (not e!91448))))

(assert (=> d!43601 (= res!67043 (isStrictlySorted!325 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43601 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903) lt!73500)))

(declare-fun b!140248 () Bool)

(assert (=> b!140248 (= e!91448 (containsKey!180 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(assert (= (and d!43601 res!67043) b!140248))

(assert (=> d!43601 m!166345))

(assert (=> d!43601 m!166345))

(assert (=> d!43601 m!166347))

(declare-fun m!167401 () Bool)

(assert (=> d!43601 m!167401))

(declare-fun m!167403 () Bool)

(assert (=> d!43601 m!167403))

(assert (=> b!140248 m!166341))

(assert (=> b!139645 d!43601))

(declare-fun d!43603 () Bool)

(assert (=> d!43603 (= (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903)) (not (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))))

(declare-fun bs!5851 () Bool)

(assert (= bs!5851 d!43603))

(assert (=> bs!5851 m!166345))

(declare-fun m!167405 () Bool)

(assert (=> bs!5851 m!167405))

(assert (=> b!139645 d!43603))

(declare-fun b!140252 () Bool)

(declare-fun e!91450 () Option!182)

(assert (=> b!140252 (= e!91450 None!180)))

(declare-fun e!91449 () Option!182)

(declare-fun b!140249 () Bool)

(assert (=> b!140249 (= e!91449 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun b!140250 () Bool)

(assert (=> b!140250 (= e!91449 e!91450)))

(declare-fun c!26255 () Bool)

(assert (=> b!140250 (= c!26255 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903))))))

(declare-fun c!26254 () Bool)

(declare-fun d!43605 () Bool)

(assert (=> d!43605 (= c!26254 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903)))))

(assert (=> d!43605 (= (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903) e!91449)))

(declare-fun b!140251 () Bool)

(assert (=> b!140251 (= e!91450 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72903))))

(assert (= (and d!43605 c!26254) b!140249))

(assert (= (and d!43605 (not c!26254)) b!140250))

(assert (= (and b!140250 c!26255) b!140251))

(assert (= (and b!140250 (not c!26255)) b!140252))

(declare-fun m!167407 () Bool)

(assert (=> b!140251 m!167407))

(assert (=> b!139645 d!43605))

(declare-fun d!43607 () Bool)

(assert (=> d!43607 (= (get!1531 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43433 d!43607))

(assert (=> d!43433 d!43577))

(declare-fun d!43609 () Bool)

(declare-fun e!91451 () Bool)

(assert (=> d!43609 e!91451))

(declare-fun res!67044 () Bool)

(assert (=> d!43609 (=> res!67044 e!91451)))

(declare-fun lt!73503 () Bool)

(assert (=> d!43609 (= res!67044 (not lt!73503))))

(declare-fun lt!73501 () Bool)

(assert (=> d!43609 (= lt!73503 lt!73501)))

(declare-fun lt!73502 () Unit!4373)

(declare-fun e!91452 () Unit!4373)

(assert (=> d!43609 (= lt!73502 e!91452)))

(declare-fun c!26256 () Bool)

(assert (=> d!43609 (= c!26256 lt!73501)))

(assert (=> d!43609 (= lt!73501 (containsKey!180 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))

(assert (=> d!43609 (= (contains!923 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) lt!73328) lt!73503)))

(declare-fun b!140253 () Bool)

(declare-fun lt!73504 () Unit!4373)

(assert (=> b!140253 (= e!91452 lt!73504)))

(assert (=> b!140253 (= lt!73504 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))

(assert (=> b!140253 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))

(declare-fun b!140254 () Bool)

(declare-fun Unit!4408 () Unit!4373)

(assert (=> b!140254 (= e!91452 Unit!4408)))

(declare-fun b!140255 () Bool)

(assert (=> b!140255 (= e!91451 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328)))))

(assert (= (and d!43609 c!26256) b!140253))

(assert (= (and d!43609 (not c!26256)) b!140254))

(assert (= (and d!43609 (not res!67044)) b!140255))

(declare-fun m!167409 () Bool)

(assert (=> d!43609 m!167409))

(declare-fun m!167411 () Bool)

(assert (=> b!140253 m!167411))

(declare-fun m!167413 () Bool)

(assert (=> b!140253 m!167413))

(assert (=> b!140253 m!167413))

(declare-fun m!167415 () Bool)

(assert (=> b!140253 m!167415))

(assert (=> b!140255 m!167413))

(assert (=> b!140255 m!167413))

(assert (=> b!140255 m!167415))

(assert (=> b!139934 d!43609))

(declare-fun d!43611 () Bool)

(assert (=> d!43611 (= (apply!120 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) lt!73319) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73319)))))

(declare-fun bs!5852 () Bool)

(assert (= bs!5852 d!43611))

(declare-fun m!167417 () Bool)

(assert (=> bs!5852 m!167417))

(assert (=> bs!5852 m!167417))

(declare-fun m!167419 () Bool)

(assert (=> bs!5852 m!167419))

(assert (=> b!139934 d!43611))

(declare-fun d!43613 () Bool)

(assert (=> d!43613 (= (apply!120 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) lt!73325) (apply!120 lt!73330 lt!73325))))

(declare-fun lt!73505 () Unit!4373)

(assert (=> d!43613 (= lt!73505 (choose!856 lt!73330 lt!73326 (minValue!2790 newMap!16) lt!73325))))

(declare-fun e!91453 () Bool)

(assert (=> d!43613 e!91453))

(declare-fun res!67045 () Bool)

(assert (=> d!43613 (=> (not res!67045) (not e!91453))))

(assert (=> d!43613 (= res!67045 (contains!923 lt!73330 lt!73325))))

(assert (=> d!43613 (= (addApplyDifferent!96 lt!73330 lt!73326 (minValue!2790 newMap!16) lt!73325) lt!73505)))

(declare-fun b!140256 () Bool)

(assert (=> b!140256 (= e!91453 (not (= lt!73325 lt!73326)))))

(assert (= (and d!43613 res!67045) b!140256))

(assert (=> d!43613 m!166819))

(declare-fun m!167421 () Bool)

(assert (=> d!43613 m!167421))

(declare-fun m!167423 () Bool)

(assert (=> d!43613 m!167423))

(assert (=> d!43613 m!166829))

(assert (=> d!43613 m!166829))

(assert (=> d!43613 m!166831))

(assert (=> b!139934 d!43613))

(declare-fun d!43615 () Bool)

(assert (=> d!43615 (= (apply!120 lt!73330 lt!73325) (get!1531 (getValueByKey!176 (toList!888 lt!73330) lt!73325)))))

(declare-fun bs!5853 () Bool)

(assert (= bs!5853 d!43615))

(declare-fun m!167425 () Bool)

(assert (=> bs!5853 m!167425))

(assert (=> bs!5853 m!167425))

(declare-fun m!167427 () Bool)

(assert (=> bs!5853 m!167427))

(assert (=> b!139934 d!43615))

(declare-fun d!43617 () Bool)

(assert (=> d!43617 (= (apply!120 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) lt!73313) (apply!120 lt!73312 lt!73313))))

(declare-fun lt!73506 () Unit!4373)

(assert (=> d!43617 (= lt!73506 (choose!856 lt!73312 lt!73316 (zeroValue!2790 newMap!16) lt!73313))))

(declare-fun e!91454 () Bool)

(assert (=> d!43617 e!91454))

(declare-fun res!67046 () Bool)

(assert (=> d!43617 (=> (not res!67046) (not e!91454))))

(assert (=> d!43617 (= res!67046 (contains!923 lt!73312 lt!73313))))

(assert (=> d!43617 (= (addApplyDifferent!96 lt!73312 lt!73316 (zeroValue!2790 newMap!16) lt!73313) lt!73506)))

(declare-fun b!140257 () Bool)

(assert (=> b!140257 (= e!91454 (not (= lt!73313 lt!73316)))))

(assert (= (and d!43617 res!67046) b!140257))

(assert (=> d!43617 m!166825))

(declare-fun m!167429 () Bool)

(assert (=> d!43617 m!167429))

(declare-fun m!167431 () Bool)

(assert (=> d!43617 m!167431))

(assert (=> d!43617 m!166813))

(assert (=> d!43617 m!166813))

(assert (=> d!43617 m!166815))

(assert (=> b!139934 d!43617))

(declare-fun d!43619 () Bool)

(assert (=> d!43619 (= (apply!120 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) lt!73313) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!73313)))))

(declare-fun bs!5854 () Bool)

(assert (= bs!5854 d!43619))

(declare-fun m!167433 () Bool)

(assert (=> bs!5854 m!167433))

(assert (=> bs!5854 m!167433))

(declare-fun m!167435 () Bool)

(assert (=> bs!5854 m!167435))

(assert (=> b!139934 d!43619))

(declare-fun d!43621 () Bool)

(declare-fun e!91455 () Bool)

(assert (=> d!43621 e!91455))

(declare-fun res!67047 () Bool)

(assert (=> d!43621 (=> (not res!67047) (not e!91455))))

(declare-fun lt!73510 () ListLongMap!1745)

(assert (=> d!43621 (= res!67047 (contains!923 lt!73510 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(declare-fun lt!73507 () List!1745)

(assert (=> d!43621 (= lt!73510 (ListLongMap!1746 lt!73507))))

(declare-fun lt!73508 () Unit!4373)

(declare-fun lt!73509 () Unit!4373)

(assert (=> d!43621 (= lt!73508 lt!73509)))

(assert (=> d!43621 (= (getValueByKey!176 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (=> d!43621 (= lt!73509 (lemmaContainsTupThenGetReturnValue!90 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (=> d!43621 (= lt!73507 (insertStrictlySorted!93 (toList!888 lt!73314) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (=> d!43621 (= (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) lt!73510)))

(declare-fun b!140258 () Bool)

(declare-fun res!67048 () Bool)

(assert (=> b!140258 (=> (not res!67048) (not e!91455))))

(assert (=> b!140258 (= res!67048 (= (getValueByKey!176 (toList!888 lt!73510) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(declare-fun b!140259 () Bool)

(assert (=> b!140259 (= e!91455 (contains!925 (toList!888 lt!73510) (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))

(assert (= (and d!43621 res!67047) b!140258))

(assert (= (and b!140258 res!67048) b!140259))

(declare-fun m!167437 () Bool)

(assert (=> d!43621 m!167437))

(declare-fun m!167439 () Bool)

(assert (=> d!43621 m!167439))

(declare-fun m!167441 () Bool)

(assert (=> d!43621 m!167441))

(declare-fun m!167443 () Bool)

(assert (=> d!43621 m!167443))

(declare-fun m!167445 () Bool)

(assert (=> b!140258 m!167445))

(declare-fun m!167447 () Bool)

(assert (=> b!140259 m!167447))

(assert (=> b!139934 d!43621))

(declare-fun d!43623 () Bool)

(assert (=> d!43623 (= (apply!120 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) lt!73325) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!73325)))))

(declare-fun bs!5855 () Bool)

(assert (= bs!5855 d!43623))

(declare-fun m!167449 () Bool)

(assert (=> bs!5855 m!167449))

(assert (=> bs!5855 m!167449))

(declare-fun m!167451 () Bool)

(assert (=> bs!5855 m!167451))

(assert (=> b!139934 d!43623))

(declare-fun d!43625 () Bool)

(declare-fun e!91456 () Bool)

(assert (=> d!43625 e!91456))

(declare-fun res!67049 () Bool)

(assert (=> d!43625 (=> (not res!67049) (not e!91456))))

(declare-fun lt!73514 () ListLongMap!1745)

(assert (=> d!43625 (= res!67049 (contains!923 lt!73514 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(declare-fun lt!73511 () List!1745)

(assert (=> d!43625 (= lt!73514 (ListLongMap!1746 lt!73511))))

(declare-fun lt!73512 () Unit!4373)

(declare-fun lt!73513 () Unit!4373)

(assert (=> d!43625 (= lt!73512 lt!73513)))

(assert (=> d!43625 (= (getValueByKey!176 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (=> d!43625 (= lt!73513 (lemmaContainsTupThenGetReturnValue!90 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (=> d!43625 (= lt!73511 (insertStrictlySorted!93 (toList!888 lt!73330) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (=> d!43625 (= (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) lt!73514)))

(declare-fun b!140260 () Bool)

(declare-fun res!67050 () Bool)

(assert (=> b!140260 (=> (not res!67050) (not e!91456))))

(assert (=> b!140260 (= res!67050 (= (getValueByKey!176 (toList!888 lt!73514) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(declare-fun b!140261 () Bool)

(assert (=> b!140261 (= e!91456 (contains!925 (toList!888 lt!73514) (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))

(assert (= (and d!43625 res!67049) b!140260))

(assert (= (and b!140260 res!67050) b!140261))

(declare-fun m!167453 () Bool)

(assert (=> d!43625 m!167453))

(declare-fun m!167455 () Bool)

(assert (=> d!43625 m!167455))

(declare-fun m!167457 () Bool)

(assert (=> d!43625 m!167457))

(declare-fun m!167459 () Bool)

(assert (=> d!43625 m!167459))

(declare-fun m!167461 () Bool)

(assert (=> b!140260 m!167461))

(declare-fun m!167463 () Bool)

(assert (=> b!140261 m!167463))

(assert (=> b!139934 d!43625))

(declare-fun d!43627 () Bool)

(assert (=> d!43627 (= (apply!120 lt!73314 lt!73319) (get!1531 (getValueByKey!176 (toList!888 lt!73314) lt!73319)))))

(declare-fun bs!5856 () Bool)

(assert (= bs!5856 d!43627))

(declare-fun m!167465 () Bool)

(assert (=> bs!5856 m!167465))

(assert (=> bs!5856 m!167465))

(declare-fun m!167467 () Bool)

(assert (=> bs!5856 m!167467))

(assert (=> b!139934 d!43627))

(declare-fun d!43629 () Bool)

(assert (=> d!43629 (= (apply!120 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) lt!73319) (apply!120 lt!73314 lt!73319))))

(declare-fun lt!73515 () Unit!4373)

(assert (=> d!43629 (= lt!73515 (choose!856 lt!73314 lt!73315 (minValue!2790 newMap!16) lt!73319))))

(declare-fun e!91457 () Bool)

(assert (=> d!43629 e!91457))

(declare-fun res!67051 () Bool)

(assert (=> d!43629 (=> (not res!67051) (not e!91457))))

(assert (=> d!43629 (= res!67051 (contains!923 lt!73314 lt!73319))))

(assert (=> d!43629 (= (addApplyDifferent!96 lt!73314 lt!73315 (minValue!2790 newMap!16) lt!73319) lt!73515)))

(declare-fun b!140262 () Bool)

(assert (=> b!140262 (= e!91457 (not (= lt!73319 lt!73315)))))

(assert (= (and d!43629 res!67051) b!140262))

(assert (=> d!43629 m!166833))

(declare-fun m!167469 () Bool)

(assert (=> d!43629 m!167469))

(declare-fun m!167471 () Bool)

(assert (=> d!43629 m!167471))

(assert (=> d!43629 m!166821))

(assert (=> d!43629 m!166821))

(assert (=> d!43629 m!166823))

(assert (=> b!139934 d!43629))

(declare-fun d!43631 () Bool)

(declare-fun e!91458 () Bool)

(assert (=> d!43631 e!91458))

(declare-fun res!67052 () Bool)

(assert (=> d!43631 (=> (not res!67052) (not e!91458))))

(declare-fun lt!73519 () ListLongMap!1745)

(assert (=> d!43631 (= res!67052 (contains!923 lt!73519 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73516 () List!1745)

(assert (=> d!43631 (= lt!73519 (ListLongMap!1746 lt!73516))))

(declare-fun lt!73517 () Unit!4373)

(declare-fun lt!73518 () Unit!4373)

(assert (=> d!43631 (= lt!73517 lt!73518)))

(assert (=> d!43631 (= (getValueByKey!176 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43631 (= lt!73518 (lemmaContainsTupThenGetReturnValue!90 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43631 (= lt!73516 (insertStrictlySorted!93 (toList!888 lt!73312) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43631 (= (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) lt!73519)))

(declare-fun b!140263 () Bool)

(declare-fun res!67053 () Bool)

(assert (=> b!140263 (=> (not res!67053) (not e!91458))))

(assert (=> b!140263 (= res!67053 (= (getValueByKey!176 (toList!888 lt!73519) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140264 () Bool)

(assert (=> b!140264 (= e!91458 (contains!925 (toList!888 lt!73519) (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43631 res!67052) b!140263))

(assert (= (and b!140263 res!67053) b!140264))

(declare-fun m!167473 () Bool)

(assert (=> d!43631 m!167473))

(declare-fun m!167475 () Bool)

(assert (=> d!43631 m!167475))

(declare-fun m!167477 () Bool)

(assert (=> d!43631 m!167477))

(declare-fun m!167479 () Bool)

(assert (=> d!43631 m!167479))

(declare-fun m!167481 () Bool)

(assert (=> b!140263 m!167481))

(declare-fun m!167483 () Bool)

(assert (=> b!140264 m!167483))

(assert (=> b!139934 d!43631))

(declare-fun d!43633 () Bool)

(assert (=> d!43633 (= (apply!120 lt!73312 lt!73313) (get!1531 (getValueByKey!176 (toList!888 lt!73312) lt!73313)))))

(declare-fun bs!5857 () Bool)

(assert (= bs!5857 d!43633))

(declare-fun m!167485 () Bool)

(assert (=> bs!5857 m!167485))

(assert (=> bs!5857 m!167485))

(declare-fun m!167487 () Bool)

(assert (=> bs!5857 m!167487))

(assert (=> b!139934 d!43633))

(declare-fun d!43635 () Bool)

(declare-fun e!91459 () Bool)

(assert (=> d!43635 e!91459))

(declare-fun res!67054 () Bool)

(assert (=> d!43635 (=> (not res!67054) (not e!91459))))

(declare-fun lt!73523 () ListLongMap!1745)

(assert (=> d!43635 (= res!67054 (contains!923 lt!73523 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73520 () List!1745)

(assert (=> d!43635 (= lt!73523 (ListLongMap!1746 lt!73520))))

(declare-fun lt!73521 () Unit!4373)

(declare-fun lt!73522 () Unit!4373)

(assert (=> d!43635 (= lt!73521 lt!73522)))

(assert (=> d!43635 (= (getValueByKey!176 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43635 (= lt!73522 (lemmaContainsTupThenGetReturnValue!90 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43635 (= lt!73520 (insertStrictlySorted!93 (toList!888 lt!73327) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43635 (= (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) lt!73523)))

(declare-fun b!140265 () Bool)

(declare-fun res!67055 () Bool)

(assert (=> b!140265 (=> (not res!67055) (not e!91459))))

(assert (=> b!140265 (= res!67055 (= (getValueByKey!176 (toList!888 lt!73523) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140266 () Bool)

(assert (=> b!140266 (= e!91459 (contains!925 (toList!888 lt!73523) (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43635 res!67054) b!140265))

(assert (= (and b!140265 res!67055) b!140266))

(declare-fun m!167489 () Bool)

(assert (=> d!43635 m!167489))

(declare-fun m!167491 () Bool)

(assert (=> d!43635 m!167491))

(declare-fun m!167493 () Bool)

(assert (=> d!43635 m!167493))

(declare-fun m!167495 () Bool)

(assert (=> d!43635 m!167495))

(declare-fun m!167497 () Bool)

(assert (=> b!140265 m!167497))

(declare-fun m!167499 () Bool)

(assert (=> b!140266 m!167499))

(assert (=> b!139934 d!43635))

(declare-fun d!43637 () Bool)

(assert (=> d!43637 (contains!923 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) lt!73328)))

(declare-fun lt!73524 () Unit!4373)

(assert (=> d!43637 (= lt!73524 (choose!857 lt!73327 lt!73329 (zeroValue!2790 newMap!16) lt!73328))))

(assert (=> d!43637 (contains!923 lt!73327 lt!73328)))

(assert (=> d!43637 (= (addStillContains!96 lt!73327 lt!73329 (zeroValue!2790 newMap!16) lt!73328) lt!73524)))

(declare-fun bs!5858 () Bool)

(assert (= bs!5858 d!43637))

(assert (=> bs!5858 m!166811))

(assert (=> bs!5858 m!166811))

(assert (=> bs!5858 m!166827))

(declare-fun m!167501 () Bool)

(assert (=> bs!5858 m!167501))

(declare-fun m!167503 () Bool)

(assert (=> bs!5858 m!167503))

(assert (=> b!139934 d!43637))

(declare-fun b!140267 () Bool)

(declare-fun lt!73531 () Unit!4373)

(declare-fun lt!73527 () Unit!4373)

(assert (=> b!140267 (= lt!73531 lt!73527)))

(declare-fun lt!73525 () (_ BitVec 64))

(declare-fun lt!73530 () ListLongMap!1745)

(declare-fun lt!73526 () V!3555)

(declare-fun lt!73529 () (_ BitVec 64))

(assert (=> b!140267 (not (contains!923 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526)) lt!73525))))

(assert (=> b!140267 (= lt!73527 (addStillNotContains!64 lt!73530 lt!73529 lt!73526 lt!73525))))

(assert (=> b!140267 (= lt!73525 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140267 (= lt!73526 (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140267 (= lt!73529 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15578 () ListLongMap!1745)

(assert (=> b!140267 (= lt!73530 call!15578)))

(declare-fun e!91460 () ListLongMap!1745)

(assert (=> b!140267 (= e!91460 (+!179 call!15578 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140269 () Bool)

(declare-fun e!91462 () ListLongMap!1745)

(assert (=> b!140269 (= e!91462 (ListLongMap!1746 Nil!1742))))

(declare-fun b!140270 () Bool)

(declare-fun e!91466 () Bool)

(declare-fun e!91461 () Bool)

(assert (=> b!140270 (= e!91466 e!91461)))

(assert (=> b!140270 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67059 () Bool)

(declare-fun lt!73528 () ListLongMap!1745)

(assert (=> b!140270 (= res!67059 (contains!923 lt!73528 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140270 (=> (not res!67059) (not e!91461))))

(declare-fun b!140271 () Bool)

(declare-fun res!67056 () Bool)

(declare-fun e!91465 () Bool)

(assert (=> b!140271 (=> (not res!67056) (not e!91465))))

(assert (=> b!140271 (= res!67056 (not (contains!923 lt!73528 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140272 () Bool)

(declare-fun e!91463 () Bool)

(assert (=> b!140272 (= e!91466 e!91463)))

(declare-fun c!26259 () Bool)

(assert (=> b!140272 (= c!26259 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140273 () Bool)

(assert (=> b!140273 (= e!91462 e!91460)))

(declare-fun c!26260 () Bool)

(assert (=> b!140273 (= c!26260 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140274 () Bool)

(declare-fun e!91464 () Bool)

(assert (=> b!140274 (= e!91464 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140274 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15575 () Bool)

(assert (=> bm!15575 (= call!15578 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140275 () Bool)

(assert (=> b!140275 (= e!91463 (= lt!73528 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140276 () Bool)

(assert (=> b!140276 (= e!91465 e!91466)))

(declare-fun c!26257 () Bool)

(assert (=> b!140276 (= c!26257 e!91464)))

(declare-fun res!67058 () Bool)

(assert (=> b!140276 (=> (not res!67058) (not e!91464))))

(assert (=> b!140276 (= res!67058 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!43639 () Bool)

(assert (=> d!43639 e!91465))

(declare-fun res!67057 () Bool)

(assert (=> d!43639 (=> (not res!67057) (not e!91465))))

(assert (=> d!43639 (= res!67057 (not (contains!923 lt!73528 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43639 (= lt!73528 e!91462)))

(declare-fun c!26258 () Bool)

(assert (=> d!43639 (= c!26258 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43639 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43639 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73528)))

(declare-fun b!140268 () Bool)

(assert (=> b!140268 (= e!91463 (isEmpty!417 lt!73528))))

(declare-fun b!140277 () Bool)

(assert (=> b!140277 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!140277 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!140277 (= e!91461 (= (apply!120 lt!73528 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140278 () Bool)

(assert (=> b!140278 (= e!91460 call!15578)))

(assert (= (and d!43639 c!26258) b!140269))

(assert (= (and d!43639 (not c!26258)) b!140273))

(assert (= (and b!140273 c!26260) b!140267))

(assert (= (and b!140273 (not c!26260)) b!140278))

(assert (= (or b!140267 b!140278) bm!15575))

(assert (= (and d!43639 res!67057) b!140271))

(assert (= (and b!140271 res!67056) b!140276))

(assert (= (and b!140276 res!67058) b!140274))

(assert (= (and b!140276 c!26257) b!140270))

(assert (= (and b!140276 (not c!26257)) b!140272))

(assert (= (and b!140270 res!67059) b!140277))

(assert (= (and b!140272 c!26259) b!140275))

(assert (= (and b!140272 (not c!26259)) b!140268))

(declare-fun b_lambda!6273 () Bool)

(assert (=> (not b_lambda!6273) (not b!140267)))

(assert (=> b!140267 t!6337))

(declare-fun b_and!8763 () Bool)

(assert (= b_and!8759 (and (=> t!6337 result!4191) b_and!8763)))

(assert (=> b!140267 t!6339))

(declare-fun b_and!8765 () Bool)

(assert (= b_and!8761 (and (=> t!6339 result!4193) b_and!8765)))

(declare-fun b_lambda!6275 () Bool)

(assert (=> (not b_lambda!6275) (not b!140277)))

(assert (=> b!140277 t!6337))

(declare-fun b_and!8767 () Bool)

(assert (= b_and!8763 (and (=> t!6337 result!4191) b_and!8767)))

(assert (=> b!140277 t!6339))

(declare-fun b_and!8769 () Bool)

(assert (= b_and!8765 (and (=> t!6339 result!4193) b_and!8769)))

(declare-fun m!167505 () Bool)

(assert (=> b!140271 m!167505))

(assert (=> b!140273 m!166385))

(assert (=> b!140273 m!166385))

(assert (=> b!140273 m!166389))

(declare-fun m!167507 () Bool)

(assert (=> d!43639 m!167507))

(assert (=> d!43639 m!166429))

(assert (=> b!140267 m!166443))

(declare-fun m!167509 () Bool)

(assert (=> b!140267 m!167509))

(declare-fun m!167511 () Bool)

(assert (=> b!140267 m!167511))

(assert (=> b!140267 m!167509))

(assert (=> b!140267 m!166785))

(declare-fun m!167513 () Bool)

(assert (=> b!140267 m!167513))

(assert (=> b!140267 m!166785))

(assert (=> b!140267 m!166443))

(assert (=> b!140267 m!166787))

(declare-fun m!167515 () Bool)

(assert (=> b!140267 m!167515))

(assert (=> b!140267 m!166385))

(assert (=> b!140274 m!166385))

(assert (=> b!140274 m!166385))

(assert (=> b!140274 m!166389))

(declare-fun m!167517 () Bool)

(assert (=> bm!15575 m!167517))

(declare-fun m!167519 () Bool)

(assert (=> b!140268 m!167519))

(assert (=> b!140277 m!166443))

(assert (=> b!140277 m!166385))

(declare-fun m!167521 () Bool)

(assert (=> b!140277 m!167521))

(assert (=> b!140277 m!166785))

(assert (=> b!140277 m!166785))

(assert (=> b!140277 m!166443))

(assert (=> b!140277 m!166787))

(assert (=> b!140277 m!166385))

(assert (=> b!140270 m!166385))

(assert (=> b!140270 m!166385))

(declare-fun m!167523 () Bool)

(assert (=> b!140270 m!167523))

(assert (=> b!140275 m!167517))

(assert (=> b!139934 d!43639))

(declare-fun b!140282 () Bool)

(declare-fun e!91468 () Option!182)

(assert (=> b!140282 (= e!91468 None!180)))

(declare-fun b!140279 () Bool)

(declare-fun e!91467 () Option!182)

(assert (=> b!140279 (= e!91467 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73285)))))))

(declare-fun b!140280 () Bool)

(assert (=> b!140280 (= e!91467 e!91468)))

(declare-fun c!26262 () Bool)

(assert (=> b!140280 (= c!26262 (and ((_ is Cons!1741) (toList!888 lt!73285)) (not (= (_1!1360 (h!2348 (toList!888 lt!73285))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun c!26261 () Bool)

(declare-fun d!43641 () Bool)

(assert (=> d!43641 (= c!26261 (and ((_ is Cons!1741) (toList!888 lt!73285)) (= (_1!1360 (h!2348 (toList!888 lt!73285))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!43641 (= (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91467)))

(declare-fun b!140281 () Bool)

(assert (=> b!140281 (= e!91468 (getValueByKey!176 (t!6329 (toList!888 lt!73285)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43641 c!26261) b!140279))

(assert (= (and d!43641 (not c!26261)) b!140280))

(assert (= (and b!140280 c!26262) b!140281))

(assert (= (and b!140280 (not c!26262)) b!140282))

(declare-fun m!167525 () Bool)

(assert (=> b!140281 m!167525))

(assert (=> b!139902 d!43641))

(declare-fun d!43643 () Bool)

(assert (not d!43643))

(assert (=> b!139775 d!43643))

(assert (=> b!139660 d!43479))

(assert (=> b!139941 d!43479))

(declare-fun b!140283 () Bool)

(declare-fun res!67063 () Bool)

(declare-fun e!91469 () Bool)

(assert (=> b!140283 (=> (not res!67063) (not e!91469))))

(assert (=> b!140283 (= res!67063 (and (= (size!2588 (_values!2923 (_2!1361 lt!72992))) (bvadd (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000000000001)) (= (size!2587 (_keys!4699 (_2!1361 lt!72992))) (size!2588 (_values!2923 (_2!1361 lt!72992)))) (bvsge (_size!625 (_2!1361 lt!72992)) #b00000000000000000000000000000000) (bvsle (_size!625 (_2!1361 lt!72992)) (bvadd (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000000000001))))))

(declare-fun b!140285 () Bool)

(declare-fun res!67062 () Bool)

(assert (=> b!140285 (=> (not res!67062) (not e!91469))))

(assert (=> b!140285 (= res!67062 (= (size!2591 (_2!1361 lt!72992)) (bvadd (_size!625 (_2!1361 lt!72992)) (bvsdiv (bvadd (extraKeys!2695 (_2!1361 lt!72992)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140286 () Bool)

(assert (=> b!140286 (= e!91469 (and (bvsge (extraKeys!2695 (_2!1361 lt!72992)) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 (_2!1361 lt!72992)) #b00000000000000000000000000000011) (bvsge (_vacant!625 (_2!1361 lt!72992)) #b00000000000000000000000000000000)))))

(declare-fun d!43645 () Bool)

(declare-fun res!67061 () Bool)

(assert (=> d!43645 (=> (not res!67061) (not e!91469))))

(assert (=> d!43645 (= res!67061 (validMask!0 (mask!7280 (_2!1361 lt!72992))))))

(assert (=> d!43645 (= (simpleValid!96 (_2!1361 lt!72992)) e!91469)))

(declare-fun b!140284 () Bool)

(declare-fun res!67060 () Bool)

(assert (=> b!140284 (=> (not res!67060) (not e!91469))))

(assert (=> b!140284 (= res!67060 (bvsge (size!2591 (_2!1361 lt!72992)) (_size!625 (_2!1361 lt!72992))))))

(assert (= (and d!43645 res!67061) b!140283))

(assert (= (and b!140283 res!67063) b!140284))

(assert (= (and b!140284 res!67060) b!140285))

(assert (= (and b!140285 res!67062) b!140286))

(declare-fun m!167527 () Bool)

(assert (=> b!140285 m!167527))

(declare-fun m!167529 () Bool)

(assert (=> d!43645 m!167529))

(assert (=> b!140284 m!167527))

(assert (=> d!43387 d!43645))

(declare-fun d!43647 () Bool)

(assert (=> d!43647 (= (apply!120 lt!73306 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5859 () Bool)

(assert (= bs!5859 d!43647))

(declare-fun m!167531 () Bool)

(assert (=> bs!5859 m!167531))

(assert (=> bs!5859 m!167531))

(declare-fun m!167533 () Bool)

(assert (=> bs!5859 m!167533))

(assert (=> b!139922 d!43647))

(declare-fun d!43649 () Bool)

(declare-fun e!91470 () Bool)

(assert (=> d!43649 e!91470))

(declare-fun res!67064 () Bool)

(assert (=> d!43649 (=> res!67064 e!91470)))

(declare-fun lt!73534 () Bool)

(assert (=> d!43649 (= res!67064 (not lt!73534))))

(declare-fun lt!73532 () Bool)

(assert (=> d!43649 (= lt!73534 lt!73532)))

(declare-fun lt!73533 () Unit!4373)

(declare-fun e!91471 () Unit!4373)

(assert (=> d!43649 (= lt!73533 e!91471)))

(declare-fun c!26263 () Bool)

(assert (=> d!43649 (= c!26263 lt!73532)))

(assert (=> d!43649 (= lt!73532 (containsKey!180 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43649 (= (contains!923 lt!73067 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73534)))

(declare-fun b!140287 () Bool)

(declare-fun lt!73535 () Unit!4373)

(assert (=> b!140287 (= e!91471 lt!73535)))

(assert (=> b!140287 (= lt!73535 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> b!140287 (isDefined!129 (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140288 () Bool)

(declare-fun Unit!4409 () Unit!4373)

(assert (=> b!140288 (= e!91471 Unit!4409)))

(declare-fun b!140289 () Bool)

(assert (=> b!140289 (= e!91470 (isDefined!129 (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43649 c!26263) b!140287))

(assert (= (and d!43649 (not c!26263)) b!140288))

(assert (= (and d!43649 (not res!67064)) b!140289))

(declare-fun m!167535 () Bool)

(assert (=> d!43649 m!167535))

(declare-fun m!167537 () Bool)

(assert (=> b!140287 m!167537))

(assert (=> b!140287 m!166365))

(assert (=> b!140287 m!166365))

(declare-fun m!167539 () Bool)

(assert (=> b!140287 m!167539))

(assert (=> b!140289 m!166365))

(assert (=> b!140289 m!166365))

(assert (=> b!140289 m!167539))

(assert (=> d!43333 d!43649))

(declare-fun b!140293 () Bool)

(declare-fun e!91473 () Option!182)

(assert (=> b!140293 (= e!91473 None!180)))

(declare-fun b!140290 () Bool)

(declare-fun e!91472 () Option!182)

(assert (=> b!140290 (= e!91472 (Some!181 (_2!1360 (h!2348 lt!73064))))))

(declare-fun b!140291 () Bool)

(assert (=> b!140291 (= e!91472 e!91473)))

(declare-fun c!26265 () Bool)

(assert (=> b!140291 (= c!26265 (and ((_ is Cons!1741) lt!73064) (not (= (_1!1360 (h!2348 lt!73064)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26264 () Bool)

(declare-fun d!43651 () Bool)

(assert (=> d!43651 (= c!26264 (and ((_ is Cons!1741) lt!73064) (= (_1!1360 (h!2348 lt!73064)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43651 (= (getValueByKey!176 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91472)))

(declare-fun b!140292 () Bool)

(assert (=> b!140292 (= e!91473 (getValueByKey!176 (t!6329 lt!73064) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43651 c!26264) b!140290))

(assert (= (and d!43651 (not c!26264)) b!140291))

(assert (= (and b!140291 c!26265) b!140292))

(assert (= (and b!140291 (not c!26265)) b!140293))

(declare-fun m!167541 () Bool)

(assert (=> b!140292 m!167541))

(assert (=> d!43333 d!43651))

(declare-fun d!43653 () Bool)

(assert (=> d!43653 (= (getValueByKey!176 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73536 () Unit!4373)

(assert (=> d!43653 (= lt!73536 (choose!865 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!91474 () Bool)

(assert (=> d!43653 e!91474))

(declare-fun res!67065 () Bool)

(assert (=> d!43653 (=> (not res!67065) (not e!91474))))

(assert (=> d!43653 (= res!67065 (isStrictlySorted!325 lt!73064))))

(assert (=> d!43653 (= (lemmaContainsTupThenGetReturnValue!90 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73536)))

(declare-fun b!140294 () Bool)

(declare-fun res!67066 () Bool)

(assert (=> b!140294 (=> (not res!67066) (not e!91474))))

(assert (=> b!140294 (= res!67066 (containsKey!180 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140295 () Bool)

(assert (=> b!140295 (= e!91474 (contains!925 lt!73064 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43653 res!67065) b!140294))

(assert (= (and b!140294 res!67066) b!140295))

(assert (=> d!43653 m!166359))

(declare-fun m!167543 () Bool)

(assert (=> d!43653 m!167543))

(declare-fun m!167545 () Bool)

(assert (=> d!43653 m!167545))

(declare-fun m!167547 () Bool)

(assert (=> b!140294 m!167547))

(declare-fun m!167549 () Bool)

(assert (=> b!140295 m!167549))

(assert (=> d!43333 d!43653))

(declare-fun b!140296 () Bool)

(declare-fun e!91475 () List!1745)

(declare-fun call!15581 () List!1745)

(assert (=> b!140296 (= e!91475 call!15581)))

(declare-fun bm!15576 () Bool)

(declare-fun call!15579 () List!1745)

(assert (=> bm!15576 (= call!15581 call!15579)))

(declare-fun d!43655 () Bool)

(declare-fun e!91479 () Bool)

(assert (=> d!43655 e!91479))

(declare-fun res!67067 () Bool)

(assert (=> d!43655 (=> (not res!67067) (not e!91479))))

(declare-fun lt!73537 () List!1745)

(assert (=> d!43655 (= res!67067 (isStrictlySorted!325 lt!73537))))

(declare-fun e!91476 () List!1745)

(assert (=> d!43655 (= lt!73537 e!91476)))

(declare-fun c!26268 () Bool)

(assert (=> d!43655 (= c!26268 (and ((_ is Cons!1741) (toList!888 lt!72902)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72902))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43655 (isStrictlySorted!325 (toList!888 lt!72902))))

(assert (=> d!43655 (= (insertStrictlySorted!93 (toList!888 lt!72902) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73537)))

(declare-fun bm!15577 () Bool)

(declare-fun call!15580 () List!1745)

(assert (=> bm!15577 (= call!15579 call!15580)))

(declare-fun b!140297 () Bool)

(declare-fun e!91477 () List!1745)

(assert (=> b!140297 (= e!91476 e!91477)))

(declare-fun c!26267 () Bool)

(assert (=> b!140297 (= c!26267 (and ((_ is Cons!1741) (toList!888 lt!72902)) (= (_1!1360 (h!2348 (toList!888 lt!72902))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140298 () Bool)

(assert (=> b!140298 (= e!91476 call!15580)))

(declare-fun bm!15578 () Bool)

(declare-fun e!91478 () List!1745)

(assert (=> bm!15578 (= call!15580 ($colon$colon!94 e!91478 (ite c!26268 (h!2348 (toList!888 lt!72902)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26266 () Bool)

(assert (=> bm!15578 (= c!26266 c!26268)))

(declare-fun b!140299 () Bool)

(declare-fun c!26269 () Bool)

(assert (=> b!140299 (= e!91478 (ite c!26267 (t!6329 (toList!888 lt!72902)) (ite c!26269 (Cons!1741 (h!2348 (toList!888 lt!72902)) (t!6329 (toList!888 lt!72902))) Nil!1742)))))

(declare-fun b!140300 () Bool)

(assert (=> b!140300 (= e!91477 call!15579)))

(declare-fun b!140301 () Bool)

(assert (=> b!140301 (= e!91479 (contains!925 lt!73537 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140302 () Bool)

(assert (=> b!140302 (= e!91478 (insertStrictlySorted!93 (t!6329 (toList!888 lt!72902)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140303 () Bool)

(assert (=> b!140303 (= e!91475 call!15581)))

(declare-fun b!140304 () Bool)

(assert (=> b!140304 (= c!26269 (and ((_ is Cons!1741) (toList!888 lt!72902)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!72902))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!140304 (= e!91477 e!91475)))

(declare-fun b!140305 () Bool)

(declare-fun res!67068 () Bool)

(assert (=> b!140305 (=> (not res!67068) (not e!91479))))

(assert (=> b!140305 (= res!67068 (containsKey!180 lt!73537 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43655 c!26268) b!140298))

(assert (= (and d!43655 (not c!26268)) b!140297))

(assert (= (and b!140297 c!26267) b!140300))

(assert (= (and b!140297 (not c!26267)) b!140304))

(assert (= (and b!140304 c!26269) b!140303))

(assert (= (and b!140304 (not c!26269)) b!140296))

(assert (= (or b!140303 b!140296) bm!15576))

(assert (= (or b!140300 bm!15576) bm!15577))

(assert (= (or b!140298 bm!15577) bm!15578))

(assert (= (and bm!15578 c!26266) b!140302))

(assert (= (and bm!15578 (not c!26266)) b!140299))

(assert (= (and d!43655 res!67067) b!140305))

(assert (= (and b!140305 res!67068) b!140301))

(declare-fun m!167551 () Bool)

(assert (=> b!140302 m!167551))

(declare-fun m!167553 () Bool)

(assert (=> d!43655 m!167553))

(declare-fun m!167555 () Bool)

(assert (=> d!43655 m!167555))

(declare-fun m!167557 () Bool)

(assert (=> b!140305 m!167557))

(declare-fun m!167559 () Bool)

(assert (=> bm!15578 m!167559))

(declare-fun m!167561 () Bool)

(assert (=> b!140301 m!167561))

(assert (=> d!43333 d!43655))

(declare-fun d!43657 () Bool)

(declare-fun e!91480 () Bool)

(assert (=> d!43657 e!91480))

(declare-fun res!67069 () Bool)

(assert (=> d!43657 (=> res!67069 e!91480)))

(declare-fun lt!73540 () Bool)

(assert (=> d!43657 (= res!67069 (not lt!73540))))

(declare-fun lt!73538 () Bool)

(assert (=> d!43657 (= lt!73540 lt!73538)))

(declare-fun lt!73539 () Unit!4373)

(declare-fun e!91481 () Unit!4373)

(assert (=> d!43657 (= lt!73539 e!91481)))

(declare-fun c!26270 () Bool)

(assert (=> d!43657 (= c!26270 lt!73538)))

(assert (=> d!43657 (= lt!73538 (containsKey!180 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43657 (= (contains!923 lt!73332 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73540)))

(declare-fun b!140306 () Bool)

(declare-fun lt!73541 () Unit!4373)

(assert (=> b!140306 (= e!91481 lt!73541)))

(assert (=> b!140306 (= lt!73541 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140306 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140307 () Bool)

(declare-fun Unit!4410 () Unit!4373)

(assert (=> b!140307 (= e!91481 Unit!4410)))

(declare-fun b!140308 () Bool)

(assert (=> b!140308 (= e!91480 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43657 c!26270) b!140306))

(assert (= (and d!43657 (not c!26270)) b!140307))

(assert (= (and d!43657 (not res!67069)) b!140308))

(declare-fun m!167563 () Bool)

(assert (=> d!43657 m!167563))

(declare-fun m!167565 () Bool)

(assert (=> b!140306 m!167565))

(assert (=> b!140306 m!167035))

(assert (=> b!140306 m!167035))

(declare-fun m!167567 () Bool)

(assert (=> b!140306 m!167567))

(assert (=> b!140308 m!167035))

(assert (=> b!140308 m!167035))

(assert (=> b!140308 m!167567))

(assert (=> bm!15530 d!43657))

(declare-fun d!43659 () Bool)

(assert (=> d!43659 (= (content!137 Nil!1743) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!43389 d!43659))

(assert (=> d!43435 d!43527))

(declare-fun b!140312 () Bool)

(declare-fun e!91483 () Option!182)

(assert (=> b!140312 (= e!91483 None!180)))

(declare-fun b!140309 () Bool)

(declare-fun e!91482 () Option!182)

(assert (=> b!140309 (= e!91482 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73067)))))))

(declare-fun b!140310 () Bool)

(assert (=> b!140310 (= e!91482 e!91483)))

(declare-fun c!26272 () Bool)

(assert (=> b!140310 (= c!26272 (and ((_ is Cons!1741) (toList!888 lt!73067)) (not (= (_1!1360 (h!2348 (toList!888 lt!73067))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!43661 () Bool)

(declare-fun c!26271 () Bool)

(assert (=> d!43661 (= c!26271 (and ((_ is Cons!1741) (toList!888 lt!73067)) (= (_1!1360 (h!2348 (toList!888 lt!73067))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43661 (= (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91482)))

(declare-fun b!140311 () Bool)

(assert (=> b!140311 (= e!91483 (getValueByKey!176 (t!6329 (toList!888 lt!73067)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43661 c!26271) b!140309))

(assert (= (and d!43661 (not c!26271)) b!140310))

(assert (= (and b!140310 c!26272) b!140311))

(assert (= (and b!140310 (not c!26272)) b!140312))

(declare-fun m!167569 () Bool)

(assert (=> b!140311 m!167569))

(assert (=> b!139648 d!43661))

(declare-fun d!43663 () Bool)

(assert (=> d!43663 (isDefined!129 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun lt!73542 () Unit!4373)

(assert (=> d!43663 (= lt!73542 (choose!864 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91484 () Bool)

(assert (=> d!43663 e!91484))

(declare-fun res!67070 () Bool)

(assert (=> d!43663 (=> (not res!67070) (not e!91484))))

(assert (=> d!43663 (= res!67070 (isStrictlySorted!325 (toList!888 call!15479)))))

(assert (=> d!43663 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73542)))

(declare-fun b!140313 () Bool)

(assert (=> b!140313 (= e!91484 (containsKey!180 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43663 res!67070) b!140313))

(assert (=> d!43663 m!166013))

(assert (=> d!43663 m!166599))

(assert (=> d!43663 m!166599))

(assert (=> d!43663 m!166601))

(assert (=> d!43663 m!166013))

(declare-fun m!167571 () Bool)

(assert (=> d!43663 m!167571))

(declare-fun m!167573 () Bool)

(assert (=> d!43663 m!167573))

(assert (=> b!140313 m!166013))

(assert (=> b!140313 m!166595))

(assert (=> b!139764 d!43663))

(declare-fun d!43665 () Bool)

(assert (=> d!43665 (= (isDefined!129 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not (isEmpty!418 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun bs!5860 () Bool)

(assert (= bs!5860 d!43665))

(assert (=> bs!5860 m!166599))

(declare-fun m!167575 () Bool)

(assert (=> bs!5860 m!167575))

(assert (=> b!139764 d!43665))

(declare-fun b!140317 () Bool)

(declare-fun e!91486 () Option!182)

(assert (=> b!140317 (= e!91486 None!180)))

(declare-fun b!140314 () Bool)

(declare-fun e!91485 () Option!182)

(assert (=> b!140314 (= e!91485 (Some!181 (_2!1360 (h!2348 (toList!888 call!15479)))))))

(declare-fun b!140315 () Bool)

(assert (=> b!140315 (= e!91485 e!91486)))

(declare-fun c!26274 () Bool)

(assert (=> b!140315 (= c!26274 (and ((_ is Cons!1741) (toList!888 call!15479)) (not (= (_1!1360 (h!2348 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun c!26273 () Bool)

(declare-fun d!43667 () Bool)

(assert (=> d!43667 (= c!26273 (and ((_ is Cons!1741) (toList!888 call!15479)) (= (_1!1360 (h!2348 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43667 (= (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91485)))

(declare-fun b!140316 () Bool)

(assert (=> b!140316 (= e!91486 (getValueByKey!176 (t!6329 (toList!888 call!15479)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43667 c!26273) b!140314))

(assert (= (and d!43667 (not c!26273)) b!140315))

(assert (= (and b!140315 c!26274) b!140316))

(assert (= (and b!140315 (not c!26274)) b!140317))

(assert (=> b!140316 m!166013))

(declare-fun m!167577 () Bool)

(assert (=> b!140316 m!167577))

(assert (=> b!139764 d!43667))

(declare-fun d!43669 () Bool)

(declare-fun e!91487 () Bool)

(assert (=> d!43669 e!91487))

(declare-fun res!67071 () Bool)

(assert (=> d!43669 (=> (not res!67071) (not e!91487))))

(declare-fun lt!73546 () ListLongMap!1745)

(assert (=> d!43669 (= res!67071 (contains!923 lt!73546 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73543 () List!1745)

(assert (=> d!43669 (= lt!73546 (ListLongMap!1746 lt!73543))))

(declare-fun lt!73544 () Unit!4373)

(declare-fun lt!73545 () Unit!4373)

(assert (=> d!43669 (= lt!73544 lt!73545)))

(assert (=> d!43669 (= (getValueByKey!176 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43669 (= lt!73545 (lemmaContainsTupThenGetReturnValue!90 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43669 (= lt!73543 (insertStrictlySorted!93 (toList!888 call!15537) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43669 (= (+!179 call!15537 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!73546)))

(declare-fun b!140318 () Bool)

(declare-fun res!67072 () Bool)

(assert (=> b!140318 (=> (not res!67072) (not e!91487))))

(assert (=> b!140318 (= res!67072 (= (getValueByKey!176 (toList!888 lt!73546) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!140319 () Bool)

(assert (=> b!140319 (= e!91487 (contains!925 (toList!888 lt!73546) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!43669 res!67071) b!140318))

(assert (= (and b!140318 res!67072) b!140319))

(declare-fun m!167579 () Bool)

(assert (=> d!43669 m!167579))

(declare-fun m!167581 () Bool)

(assert (=> d!43669 m!167581))

(declare-fun m!167583 () Bool)

(assert (=> d!43669 m!167583))

(declare-fun m!167585 () Bool)

(assert (=> d!43669 m!167585))

(declare-fun m!167587 () Bool)

(assert (=> b!140318 m!167587))

(declare-fun m!167589 () Bool)

(assert (=> b!140319 m!167589))

(assert (=> b!139945 d!43669))

(declare-fun d!43671 () Bool)

(declare-fun res!67073 () Bool)

(declare-fun e!91488 () Bool)

(assert (=> d!43671 (=> res!67073 e!91488)))

(assert (=> d!43671 (= res!67073 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43671 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!91488)))

(declare-fun b!140320 () Bool)

(declare-fun e!91489 () Bool)

(assert (=> b!140320 (= e!91488 e!91489)))

(declare-fun res!67074 () Bool)

(assert (=> b!140320 (=> (not res!67074) (not e!91489))))

(assert (=> b!140320 (= res!67074 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140321 () Bool)

(assert (=> b!140321 (= e!91489 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43671 (not res!67073)) b!140320))

(assert (= (and b!140320 res!67074) b!140321))

(declare-fun m!167591 () Bool)

(assert (=> d!43671 m!167591))

(assert (=> b!140321 m!166013))

(declare-fun m!167593 () Bool)

(assert (=> b!140321 m!167593))

(assert (=> b!139698 d!43671))

(declare-fun b!140322 () Bool)

(declare-fun lt!73553 () Unit!4373)

(declare-fun lt!73549 () Unit!4373)

(assert (=> b!140322 (= lt!73553 lt!73549)))

(declare-fun lt!73548 () V!3555)

(declare-fun lt!73551 () (_ BitVec 64))

(declare-fun lt!73552 () ListLongMap!1745)

(declare-fun lt!73547 () (_ BitVec 64))

(assert (=> b!140322 (not (contains!923 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548)) lt!73547))))

(assert (=> b!140322 (= lt!73549 (addStillNotContains!64 lt!73552 lt!73551 lt!73548 lt!73547))))

(assert (=> b!140322 (= lt!73547 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140322 (= lt!73548 (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140322 (= lt!73551 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15582 () ListLongMap!1745)

(assert (=> b!140322 (= lt!73552 call!15582)))

(declare-fun e!91490 () ListLongMap!1745)

(assert (=> b!140322 (= e!91490 (+!179 call!15582 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140324 () Bool)

(declare-fun e!91492 () ListLongMap!1745)

(assert (=> b!140324 (= e!91492 (ListLongMap!1746 Nil!1742))))

(declare-fun b!140325 () Bool)

(declare-fun e!91496 () Bool)

(declare-fun e!91491 () Bool)

(assert (=> b!140325 (= e!91496 e!91491)))

(assert (=> b!140325 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67078 () Bool)

(declare-fun lt!73550 () ListLongMap!1745)

(assert (=> b!140325 (= res!67078 (contains!923 lt!73550 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140325 (=> (not res!67078) (not e!91491))))

(declare-fun b!140326 () Bool)

(declare-fun res!67075 () Bool)

(declare-fun e!91495 () Bool)

(assert (=> b!140326 (=> (not res!67075) (not e!91495))))

(assert (=> b!140326 (= res!67075 (not (contains!923 lt!73550 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140327 () Bool)

(declare-fun e!91493 () Bool)

(assert (=> b!140327 (= e!91496 e!91493)))

(declare-fun c!26277 () Bool)

(assert (=> b!140327 (= c!26277 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140328 () Bool)

(assert (=> b!140328 (= e!91492 e!91490)))

(declare-fun c!26278 () Bool)

(assert (=> b!140328 (= c!26278 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140329 () Bool)

(declare-fun e!91494 () Bool)

(assert (=> b!140329 (= e!91494 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140329 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15579 () Bool)

(assert (=> bm!15579 (= call!15582 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140330 () Bool)

(assert (=> b!140330 (= e!91493 (= lt!73550 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140331 () Bool)

(assert (=> b!140331 (= e!91495 e!91496)))

(declare-fun c!26275 () Bool)

(assert (=> b!140331 (= c!26275 e!91494)))

(declare-fun res!67077 () Bool)

(assert (=> b!140331 (=> (not res!67077) (not e!91494))))

(assert (=> b!140331 (= res!67077 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!43673 () Bool)

(assert (=> d!43673 e!91495))

(declare-fun res!67076 () Bool)

(assert (=> d!43673 (=> (not res!67076) (not e!91495))))

(assert (=> d!43673 (= res!67076 (not (contains!923 lt!73550 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43673 (= lt!73550 e!91492)))

(declare-fun c!26276 () Bool)

(assert (=> d!43673 (= c!26276 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43673 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43673 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73550)))

(declare-fun b!140323 () Bool)

(assert (=> b!140323 (= e!91493 (isEmpty!417 lt!73550))))

(declare-fun b!140332 () Bool)

(assert (=> b!140332 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!140332 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!140332 (= e!91491 (= (apply!120 lt!73550 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140333 () Bool)

(assert (=> b!140333 (= e!91490 call!15582)))

(assert (= (and d!43673 c!26276) b!140324))

(assert (= (and d!43673 (not c!26276)) b!140328))

(assert (= (and b!140328 c!26278) b!140322))

(assert (= (and b!140328 (not c!26278)) b!140333))

(assert (= (or b!140322 b!140333) bm!15579))

(assert (= (and d!43673 res!67076) b!140326))

(assert (= (and b!140326 res!67075) b!140331))

(assert (= (and b!140331 res!67077) b!140329))

(assert (= (and b!140331 c!26275) b!140325))

(assert (= (and b!140331 (not c!26275)) b!140327))

(assert (= (and b!140325 res!67078) b!140332))

(assert (= (and b!140327 c!26277) b!140330))

(assert (= (and b!140327 (not c!26277)) b!140323))

(declare-fun b_lambda!6277 () Bool)

(assert (=> (not b_lambda!6277) (not b!140322)))

(assert (=> b!140322 t!6337))

(declare-fun b_and!8771 () Bool)

(assert (= b_and!8767 (and (=> t!6337 result!4191) b_and!8771)))

(assert (=> b!140322 t!6339))

(declare-fun b_and!8773 () Bool)

(assert (= b_and!8769 (and (=> t!6339 result!4193) b_and!8773)))

(declare-fun b_lambda!6279 () Bool)

(assert (=> (not b_lambda!6279) (not b!140332)))

(assert (=> b!140332 t!6337))

(declare-fun b_and!8775 () Bool)

(assert (= b_and!8771 (and (=> t!6337 result!4191) b_and!8775)))

(assert (=> b!140332 t!6339))

(declare-fun b_and!8777 () Bool)

(assert (= b_and!8773 (and (=> t!6339 result!4193) b_and!8777)))

(declare-fun m!167595 () Bool)

(assert (=> b!140326 m!167595))

(assert (=> b!140328 m!166385))

(assert (=> b!140328 m!166385))

(assert (=> b!140328 m!166389))

(declare-fun m!167597 () Bool)

(assert (=> d!43673 m!167597))

(assert (=> d!43673 m!166429))

(assert (=> b!140322 m!166443))

(declare-fun m!167599 () Bool)

(assert (=> b!140322 m!167599))

(declare-fun m!167601 () Bool)

(assert (=> b!140322 m!167601))

(assert (=> b!140322 m!167599))

(assert (=> b!140322 m!166785))

(declare-fun m!167603 () Bool)

(assert (=> b!140322 m!167603))

(assert (=> b!140322 m!166785))

(assert (=> b!140322 m!166443))

(assert (=> b!140322 m!166787))

(declare-fun m!167605 () Bool)

(assert (=> b!140322 m!167605))

(assert (=> b!140322 m!166385))

(assert (=> b!140329 m!166385))

(assert (=> b!140329 m!166385))

(assert (=> b!140329 m!166389))

(declare-fun m!167607 () Bool)

(assert (=> bm!15579 m!167607))

(declare-fun m!167609 () Bool)

(assert (=> b!140323 m!167609))

(assert (=> b!140332 m!166443))

(assert (=> b!140332 m!166385))

(declare-fun m!167611 () Bool)

(assert (=> b!140332 m!167611))

(assert (=> b!140332 m!166785))

(assert (=> b!140332 m!166785))

(assert (=> b!140332 m!166443))

(assert (=> b!140332 m!166787))

(assert (=> b!140332 m!166385))

(assert (=> b!140325 m!166385))

(assert (=> b!140325 m!166385))

(declare-fun m!167613 () Bool)

(assert (=> b!140325 m!167613))

(assert (=> b!140330 m!167607))

(assert (=> bm!15527 d!43673))

(assert (=> b!139842 d!43449))

(declare-fun d!43675 () Bool)

(declare-fun e!91497 () Bool)

(assert (=> d!43675 e!91497))

(declare-fun res!67079 () Bool)

(assert (=> d!43675 (=> (not res!67079) (not e!91497))))

(declare-fun lt!73557 () ListLongMap!1745)

(assert (=> d!43675 (= res!67079 (contains!923 lt!73557 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73554 () List!1745)

(assert (=> d!43675 (= lt!73557 (ListLongMap!1746 lt!73554))))

(declare-fun lt!73555 () Unit!4373)

(declare-fun lt!73556 () Unit!4373)

(assert (=> d!43675 (= lt!73555 lt!73556)))

(assert (=> d!43675 (= (getValueByKey!176 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43675 (= lt!73556 (lemmaContainsTupThenGetReturnValue!90 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43675 (= lt!73554 (insertStrictlySorted!93 (toList!888 (map!1442 newMap!16)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43675 (= (+!179 (map!1442 newMap!16) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73557)))

(declare-fun b!140334 () Bool)

(declare-fun res!67080 () Bool)

(assert (=> b!140334 (=> (not res!67080) (not e!91497))))

(assert (=> b!140334 (= res!67080 (= (getValueByKey!176 (toList!888 lt!73557) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140335 () Bool)

(assert (=> b!140335 (= e!91497 (contains!925 (toList!888 lt!73557) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43675 res!67079) b!140334))

(assert (= (and b!140334 res!67080) b!140335))

(declare-fun m!167615 () Bool)

(assert (=> d!43675 m!167615))

(declare-fun m!167617 () Bool)

(assert (=> d!43675 m!167617))

(declare-fun m!167619 () Bool)

(assert (=> d!43675 m!167619))

(declare-fun m!167621 () Bool)

(assert (=> d!43675 m!167621))

(declare-fun m!167623 () Bool)

(assert (=> b!140334 m!167623))

(declare-fun m!167625 () Bool)

(assert (=> b!140335 m!167625))

(assert (=> b!139842 d!43675))

(assert (=> b!139842 d!43281))

(assert (=> b!139899 d!43371))

(declare-fun lt!73558 () Bool)

(declare-fun d!43677 () Bool)

(assert (=> d!43677 (= lt!73558 (select (content!138 (toList!888 lt!73125)) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91499 () Bool)

(assert (=> d!43677 (= lt!73558 e!91499)))

(declare-fun res!67081 () Bool)

(assert (=> d!43677 (=> (not res!67081) (not e!91499))))

(assert (=> d!43677 (= res!67081 ((_ is Cons!1741) (toList!888 lt!73125)))))

(assert (=> d!43677 (= (contains!925 (toList!888 lt!73125) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73558)))

(declare-fun b!140336 () Bool)

(declare-fun e!91498 () Bool)

(assert (=> b!140336 (= e!91499 e!91498)))

(declare-fun res!67082 () Bool)

(assert (=> b!140336 (=> res!67082 e!91498)))

(assert (=> b!140336 (= res!67082 (= (h!2348 (toList!888 lt!73125)) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140337 () Bool)

(assert (=> b!140337 (= e!91498 (contains!925 (t!6329 (toList!888 lt!73125)) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43677 res!67081) b!140336))

(assert (= (and b!140336 (not res!67082)) b!140337))

(declare-fun m!167627 () Bool)

(assert (=> d!43677 m!167627))

(declare-fun m!167629 () Bool)

(assert (=> d!43677 m!167629))

(declare-fun m!167631 () Bool)

(assert (=> b!140337 m!167631))

(assert (=> b!139721 d!43677))

(assert (=> d!43341 d!43327))

(assert (=> d!43341 d!43333))

(declare-fun d!43679 () Bool)

(assert (=> d!43679 (contains!923 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72903)))

(assert (=> d!43679 true))

(declare-fun _$35!389 () Unit!4373)

(assert (=> d!43679 (= (choose!857 lt!72902 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72903) _$35!389)))

(declare-fun bs!5861 () Bool)

(assert (= bs!5861 d!43679))

(assert (=> bs!5861 m!166107))

(assert (=> bs!5861 m!166107))

(assert (=> bs!5861 m!166125))

(assert (=> d!43341 d!43679))

(declare-fun d!43681 () Bool)

(declare-fun e!91500 () Bool)

(assert (=> d!43681 e!91500))

(declare-fun res!67083 () Bool)

(assert (=> d!43681 (=> res!67083 e!91500)))

(declare-fun lt!73561 () Bool)

(assert (=> d!43681 (= res!67083 (not lt!73561))))

(declare-fun lt!73559 () Bool)

(assert (=> d!43681 (= lt!73561 lt!73559)))

(declare-fun lt!73560 () Unit!4373)

(declare-fun e!91501 () Unit!4373)

(assert (=> d!43681 (= lt!73560 e!91501)))

(declare-fun c!26279 () Bool)

(assert (=> d!43681 (= c!26279 lt!73559)))

(assert (=> d!43681 (= lt!73559 (containsKey!180 (toList!888 lt!72902) lt!72903))))

(assert (=> d!43681 (= (contains!923 lt!72902 lt!72903) lt!73561)))

(declare-fun b!140339 () Bool)

(declare-fun lt!73562 () Unit!4373)

(assert (=> b!140339 (= e!91501 lt!73562)))

(assert (=> b!140339 (= lt!73562 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72902) lt!72903))))

(assert (=> b!140339 (isDefined!129 (getValueByKey!176 (toList!888 lt!72902) lt!72903))))

(declare-fun b!140340 () Bool)

(declare-fun Unit!4411 () Unit!4373)

(assert (=> b!140340 (= e!91501 Unit!4411)))

(declare-fun b!140341 () Bool)

(assert (=> b!140341 (= e!91500 (isDefined!129 (getValueByKey!176 (toList!888 lt!72902) lt!72903)))))

(assert (= (and d!43681 c!26279) b!140339))

(assert (= (and d!43681 (not c!26279)) b!140340))

(assert (= (and d!43681 (not res!67083)) b!140341))

(declare-fun m!167633 () Bool)

(assert (=> d!43681 m!167633))

(declare-fun m!167635 () Bool)

(assert (=> b!140339 m!167635))

(declare-fun m!167637 () Bool)

(assert (=> b!140339 m!167637))

(assert (=> b!140339 m!167637))

(declare-fun m!167639 () Bool)

(assert (=> b!140339 m!167639))

(assert (=> b!140341 m!167637))

(assert (=> b!140341 m!167637))

(assert (=> b!140341 m!167639))

(assert (=> d!43341 d!43681))

(declare-fun bm!15580 () Bool)

(declare-fun call!15583 () Bool)

(declare-fun c!26280 () Bool)

(assert (=> bm!15580 (= call!15583 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26280 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)))))

(declare-fun b!140342 () Bool)

(declare-fun e!91505 () Bool)

(assert (=> b!140342 (= e!91505 call!15583)))

(declare-fun b!140344 () Bool)

(assert (=> b!140344 (= e!91505 call!15583)))

(declare-fun b!140345 () Bool)

(declare-fun e!91502 () Bool)

(declare-fun e!91503 () Bool)

(assert (=> b!140345 (= e!91502 e!91503)))

(declare-fun res!67085 () Bool)

(assert (=> b!140345 (=> (not res!67085) (not e!91503))))

(declare-fun e!91504 () Bool)

(assert (=> b!140345 (= res!67085 (not e!91504))))

(declare-fun res!67086 () Bool)

(assert (=> b!140345 (=> (not res!67086) (not e!91504))))

(assert (=> b!140345 (= res!67086 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140346 () Bool)

(assert (=> b!140346 (= e!91503 e!91505)))

(assert (=> b!140346 (= c!26280 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!43683 () Bool)

(declare-fun res!67084 () Bool)

(assert (=> d!43683 (=> res!67084 e!91502)))

(assert (=> d!43683 (= res!67084 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43683 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 Nil!1743) e!91502)))

(declare-fun b!140343 () Bool)

(assert (=> b!140343 (= e!91504 (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!43683 (not res!67084)) b!140345))

(assert (= (and b!140345 res!67086) b!140343))

(assert (= (and b!140345 res!67085) b!140346))

(assert (= (and b!140346 c!26280) b!140342))

(assert (= (and b!140346 (not c!26280)) b!140344))

(assert (= (or b!140342 b!140344) bm!15580))

(assert (=> bm!15580 m!167023))

(declare-fun m!167641 () Bool)

(assert (=> bm!15580 m!167641))

(assert (=> b!140345 m!167023))

(assert (=> b!140345 m!167023))

(assert (=> b!140345 m!167033))

(assert (=> b!140346 m!167023))

(assert (=> b!140346 m!167023))

(assert (=> b!140346 m!167033))

(assert (=> b!140343 m!167023))

(assert (=> b!140343 m!167023))

(declare-fun m!167643 () Bool)

(assert (=> b!140343 m!167643))

(assert (=> b!139724 d!43683))

(declare-fun d!43685 () Bool)

(declare-fun e!91506 () Bool)

(assert (=> d!43685 e!91506))

(declare-fun res!67087 () Bool)

(assert (=> d!43685 (=> res!67087 e!91506)))

(declare-fun lt!73565 () Bool)

(assert (=> d!43685 (= res!67087 (not lt!73565))))

(declare-fun lt!73563 () Bool)

(assert (=> d!43685 (= lt!73565 lt!73563)))

(declare-fun lt!73564 () Unit!4373)

(declare-fun e!91507 () Unit!4373)

(assert (=> d!43685 (= lt!73564 e!91507)))

(declare-fun c!26281 () Bool)

(assert (=> d!43685 (= c!26281 lt!73563)))

(assert (=> d!43685 (= lt!73563 (containsKey!180 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43685 (= (contains!923 lt!73285 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!73565)))

(declare-fun b!140347 () Bool)

(declare-fun lt!73566 () Unit!4373)

(assert (=> b!140347 (= e!91507 lt!73566)))

(assert (=> b!140347 (= lt!73566 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!140347 (isDefined!129 (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140348 () Bool)

(declare-fun Unit!4412 () Unit!4373)

(assert (=> b!140348 (= e!91507 Unit!4412)))

(declare-fun b!140349 () Bool)

(assert (=> b!140349 (= e!91506 (isDefined!129 (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (= (and d!43685 c!26281) b!140347))

(assert (= (and d!43685 (not c!26281)) b!140348))

(assert (= (and d!43685 (not res!67087)) b!140349))

(declare-fun m!167645 () Bool)

(assert (=> d!43685 m!167645))

(declare-fun m!167647 () Bool)

(assert (=> b!140347 m!167647))

(assert (=> b!140347 m!166735))

(assert (=> b!140347 m!166735))

(declare-fun m!167649 () Bool)

(assert (=> b!140347 m!167649))

(assert (=> b!140349 m!166735))

(assert (=> b!140349 m!166735))

(assert (=> b!140349 m!167649))

(assert (=> d!43423 d!43685))

(declare-fun b!140353 () Bool)

(declare-fun e!91509 () Option!182)

(assert (=> b!140353 (= e!91509 None!180)))

(declare-fun b!140350 () Bool)

(declare-fun e!91508 () Option!182)

(assert (=> b!140350 (= e!91508 (Some!181 (_2!1360 (h!2348 lt!73282))))))

(declare-fun b!140351 () Bool)

(assert (=> b!140351 (= e!91508 e!91509)))

(declare-fun c!26283 () Bool)

(assert (=> b!140351 (= c!26283 (and ((_ is Cons!1741) lt!73282) (not (= (_1!1360 (h!2348 lt!73282)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun d!43687 () Bool)

(declare-fun c!26282 () Bool)

(assert (=> d!43687 (= c!26282 (and ((_ is Cons!1741) lt!73282) (= (_1!1360 (h!2348 lt!73282)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!43687 (= (getValueByKey!176 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91508)))

(declare-fun b!140352 () Bool)

(assert (=> b!140352 (= e!91509 (getValueByKey!176 (t!6329 lt!73282) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43687 c!26282) b!140350))

(assert (= (and d!43687 (not c!26282)) b!140351))

(assert (= (and b!140351 c!26283) b!140352))

(assert (= (and b!140351 (not c!26283)) b!140353))

(declare-fun m!167651 () Bool)

(assert (=> b!140352 m!167651))

(assert (=> d!43423 d!43687))

(declare-fun d!43689 () Bool)

(assert (=> d!43689 (= (getValueByKey!176 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (Some!181 (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun lt!73567 () Unit!4373)

(assert (=> d!43689 (= lt!73567 (choose!865 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!91510 () Bool)

(assert (=> d!43689 e!91510))

(declare-fun res!67088 () Bool)

(assert (=> d!43689 (=> (not res!67088) (not e!91510))))

(assert (=> d!43689 (= res!67088 (isStrictlySorted!325 lt!73282))))

(assert (=> d!43689 (= (lemmaContainsTupThenGetReturnValue!90 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!73567)))

(declare-fun b!140354 () Bool)

(declare-fun res!67089 () Bool)

(assert (=> b!140354 (=> (not res!67089) (not e!91510))))

(assert (=> b!140354 (= res!67089 (containsKey!180 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140355 () Bool)

(assert (=> b!140355 (= e!91510 (contains!925 lt!73282 (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (= (and d!43689 res!67088) b!140354))

(assert (= (and b!140354 res!67089) b!140355))

(assert (=> d!43689 m!166729))

(declare-fun m!167653 () Bool)

(assert (=> d!43689 m!167653))

(declare-fun m!167655 () Bool)

(assert (=> d!43689 m!167655))

(declare-fun m!167657 () Bool)

(assert (=> b!140354 m!167657))

(declare-fun m!167659 () Bool)

(assert (=> b!140355 m!167659))

(assert (=> d!43423 d!43689))

(declare-fun b!140356 () Bool)

(declare-fun e!91511 () List!1745)

(declare-fun call!15586 () List!1745)

(assert (=> b!140356 (= e!91511 call!15586)))

(declare-fun bm!15581 () Bool)

(declare-fun call!15584 () List!1745)

(assert (=> bm!15581 (= call!15586 call!15584)))

(declare-fun d!43691 () Bool)

(declare-fun e!91515 () Bool)

(assert (=> d!43691 e!91515))

(declare-fun res!67090 () Bool)

(assert (=> d!43691 (=> (not res!67090) (not e!91515))))

(declare-fun lt!73568 () List!1745)

(assert (=> d!43691 (= res!67090 (isStrictlySorted!325 lt!73568))))

(declare-fun e!91512 () List!1745)

(assert (=> d!43691 (= lt!73568 e!91512)))

(declare-fun c!26286 () Bool)

(assert (=> d!43691 (= c!26286 (and ((_ is Cons!1741) (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!43691 (isStrictlySorted!325 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))))

(assert (=> d!43691 (= (insertStrictlySorted!93 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!73568)))

(declare-fun bm!15582 () Bool)

(declare-fun call!15585 () List!1745)

(assert (=> bm!15582 (= call!15584 call!15585)))

(declare-fun b!140357 () Bool)

(declare-fun e!91513 () List!1745)

(assert (=> b!140357 (= e!91512 e!91513)))

(declare-fun c!26285 () Bool)

(assert (=> b!140357 (= c!26285 (and ((_ is Cons!1741) (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (= (_1!1360 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!140358 () Bool)

(assert (=> b!140358 (= e!91512 call!15585)))

(declare-fun e!91514 () List!1745)

(declare-fun bm!15583 () Bool)

(assert (=> bm!15583 (= call!15585 ($colon$colon!94 e!91514 (ite c!26286 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun c!26284 () Bool)

(assert (=> bm!15583 (= c!26284 c!26286)))

(declare-fun b!140359 () Bool)

(declare-fun c!26287 () Bool)

(assert (=> b!140359 (= e!91514 (ite c!26285 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (ite c!26287 (Cons!1741 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) Nil!1742)))))

(declare-fun b!140360 () Bool)

(assert (=> b!140360 (= e!91513 call!15584)))

(declare-fun b!140361 () Bool)

(assert (=> b!140361 (= e!91515 (contains!925 lt!73568 (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!140362 () Bool)

(assert (=> b!140362 (= e!91514 (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140363 () Bool)

(assert (=> b!140363 (= e!91511 call!15586)))

(declare-fun b!140364 () Bool)

(assert (=> b!140364 (= c!26287 (and ((_ is Cons!1741) (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (bvsgt (_1!1360 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> b!140364 (= e!91513 e!91511)))

(declare-fun b!140365 () Bool)

(declare-fun res!67091 () Bool)

(assert (=> b!140365 (=> (not res!67091) (not e!91515))))

(assert (=> b!140365 (= res!67091 (containsKey!180 lt!73568 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43691 c!26286) b!140358))

(assert (= (and d!43691 (not c!26286)) b!140357))

(assert (= (and b!140357 c!26285) b!140360))

(assert (= (and b!140357 (not c!26285)) b!140364))

(assert (= (and b!140364 c!26287) b!140363))

(assert (= (and b!140364 (not c!26287)) b!140356))

(assert (= (or b!140363 b!140356) bm!15581))

(assert (= (or b!140360 bm!15581) bm!15582))

(assert (= (or b!140358 bm!15582) bm!15583))

(assert (= (and bm!15583 c!26284) b!140362))

(assert (= (and bm!15583 (not c!26284)) b!140359))

(assert (= (and d!43691 res!67090) b!140365))

(assert (= (and b!140365 res!67091) b!140361))

(declare-fun m!167661 () Bool)

(assert (=> b!140362 m!167661))

(declare-fun m!167663 () Bool)

(assert (=> d!43691 m!167663))

(declare-fun m!167665 () Bool)

(assert (=> d!43691 m!167665))

(declare-fun m!167667 () Bool)

(assert (=> b!140365 m!167667))

(declare-fun m!167669 () Bool)

(assert (=> bm!15583 m!167669))

(declare-fun m!167671 () Bool)

(assert (=> b!140361 m!167671))

(assert (=> d!43423 d!43691))

(declare-fun d!43693 () Bool)

(declare-fun e!91516 () Bool)

(assert (=> d!43693 e!91516))

(declare-fun res!67092 () Bool)

(assert (=> d!43693 (=> res!67092 e!91516)))

(declare-fun lt!73571 () Bool)

(assert (=> d!43693 (= res!67092 (not lt!73571))))

(declare-fun lt!73569 () Bool)

(assert (=> d!43693 (= lt!73571 lt!73569)))

(declare-fun lt!73570 () Unit!4373)

(declare-fun e!91517 () Unit!4373)

(assert (=> d!43693 (= lt!73570 e!91517)))

(declare-fun c!26288 () Bool)

(assert (=> d!43693 (= c!26288 lt!73569)))

(assert (=> d!43693 (= lt!73569 (containsKey!180 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43693 (= (contains!923 lt!73093 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73571)))

(declare-fun b!140366 () Bool)

(declare-fun lt!73572 () Unit!4373)

(assert (=> b!140366 (= e!91517 lt!73572)))

(assert (=> b!140366 (= lt!73572 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140366 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140367 () Bool)

(declare-fun Unit!4413 () Unit!4373)

(assert (=> b!140367 (= e!91517 Unit!4413)))

(declare-fun b!140368 () Bool)

(assert (=> b!140368 (= e!91516 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43693 c!26288) b!140366))

(assert (= (and d!43693 (not c!26288)) b!140367))

(assert (= (and d!43693 (not res!67092)) b!140368))

(declare-fun m!167673 () Bool)

(assert (=> d!43693 m!167673))

(declare-fun m!167675 () Bool)

(assert (=> b!140366 m!167675))

(declare-fun m!167677 () Bool)

(assert (=> b!140366 m!167677))

(assert (=> b!140366 m!167677))

(declare-fun m!167679 () Bool)

(assert (=> b!140366 m!167679))

(assert (=> b!140368 m!167677))

(assert (=> b!140368 m!167677))

(assert (=> b!140368 m!167679))

(assert (=> bm!15490 d!43693))

(declare-fun d!43695 () Bool)

(assert (=> d!43695 (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))

(declare-fun lt!73575 () Unit!4373)

(declare-fun choose!867 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4373)

(assert (=> d!43695 (= lt!73575 (choose!867 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!43695 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43695 (= (lemmaArrayContainsKeyThenInListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73575)))

(declare-fun bs!5862 () Bool)

(assert (= bs!5862 d!43695))

(assert (=> bs!5862 m!166097))

(assert (=> bs!5862 m!166097))

(assert (=> bs!5862 m!166013))

(assert (=> bs!5862 m!166651))

(assert (=> bs!5862 m!166013))

(declare-fun m!167681 () Bool)

(assert (=> bs!5862 m!167681))

(assert (=> bs!5862 m!166429))

(assert (=> b!139839 d!43695))

(declare-fun d!43697 () Bool)

(declare-fun e!91518 () Bool)

(assert (=> d!43697 e!91518))

(declare-fun res!67093 () Bool)

(assert (=> d!43697 (=> res!67093 e!91518)))

(declare-fun lt!73578 () Bool)

(assert (=> d!43697 (= res!67093 (not lt!73578))))

(declare-fun lt!73576 () Bool)

(assert (=> d!43697 (= lt!73578 lt!73576)))

(declare-fun lt!73577 () Unit!4373)

(declare-fun e!91519 () Unit!4373)

(assert (=> d!43697 (= lt!73577 e!91519)))

(declare-fun c!26289 () Bool)

(assert (=> d!43697 (= c!26289 lt!73576)))

(assert (=> d!43697 (= lt!73576 (containsKey!180 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43697 (= (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73578)))

(declare-fun b!140369 () Bool)

(declare-fun lt!73579 () Unit!4373)

(assert (=> b!140369 (= e!91519 lt!73579)))

(assert (=> b!140369 (= lt!73579 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!140369 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!140370 () Bool)

(declare-fun Unit!4414 () Unit!4373)

(assert (=> b!140370 (= e!91519 Unit!4414)))

(declare-fun b!140371 () Bool)

(assert (=> b!140371 (= e!91518 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (= (and d!43697 c!26289) b!140369))

(assert (= (and d!43697 (not c!26289)) b!140370))

(assert (= (and d!43697 (not res!67093)) b!140371))

(assert (=> d!43697 m!166013))

(declare-fun m!167683 () Bool)

(assert (=> d!43697 m!167683))

(assert (=> b!140369 m!166013))

(declare-fun m!167685 () Bool)

(assert (=> b!140369 m!167685))

(assert (=> b!140369 m!166013))

(declare-fun m!167687 () Bool)

(assert (=> b!140369 m!167687))

(assert (=> b!140369 m!167687))

(declare-fun m!167689 () Bool)

(assert (=> b!140369 m!167689))

(assert (=> b!140371 m!166013))

(assert (=> b!140371 m!167687))

(assert (=> b!140371 m!167687))

(assert (=> b!140371 m!167689))

(assert (=> b!139839 d!43697))

(assert (=> b!139839 d!43435))

(assert (=> bm!15506 d!43407))

(declare-fun d!43699 () Bool)

(declare-fun e!91520 () Bool)

(assert (=> d!43699 e!91520))

(declare-fun res!67094 () Bool)

(assert (=> d!43699 (=> (not res!67094) (not e!91520))))

(declare-fun lt!73583 () ListLongMap!1745)

(assert (=> d!43699 (= res!67094 (contains!923 lt!73583 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73580 () List!1745)

(assert (=> d!43699 (= lt!73583 (ListLongMap!1746 lt!73580))))

(declare-fun lt!73581 () Unit!4373)

(declare-fun lt!73582 () Unit!4373)

(assert (=> d!43699 (= lt!73581 lt!73582)))

(assert (=> d!43699 (= (getValueByKey!176 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43699 (= lt!73582 (lemmaContainsTupThenGetReturnValue!90 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43699 (= lt!73580 (insertStrictlySorted!93 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43699 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73583)))

(declare-fun b!140372 () Bool)

(declare-fun res!67095 () Bool)

(assert (=> b!140372 (=> (not res!67095) (not e!91520))))

(assert (=> b!140372 (= res!67095 (= (getValueByKey!176 (toList!888 lt!73583) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140373 () Bool)

(assert (=> b!140373 (= e!91520 (contains!925 (toList!888 lt!73583) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43699 res!67094) b!140372))

(assert (= (and b!140372 res!67095) b!140373))

(declare-fun m!167691 () Bool)

(assert (=> d!43699 m!167691))

(declare-fun m!167693 () Bool)

(assert (=> d!43699 m!167693))

(declare-fun m!167695 () Bool)

(assert (=> d!43699 m!167695))

(declare-fun m!167697 () Bool)

(assert (=> d!43699 m!167697))

(declare-fun m!167699 () Bool)

(assert (=> b!140372 m!167699))

(declare-fun m!167701 () Bool)

(assert (=> b!140373 m!167701))

(assert (=> d!43397 d!43699))

(declare-fun d!43701 () Bool)

(declare-fun res!67096 () Bool)

(declare-fun e!91521 () Bool)

(assert (=> d!43701 (=> res!67096 e!91521)))

(assert (=> d!43701 (= res!67096 (= (select (arr!2315 lt!73259) #b00000000000000000000000000000000) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43701 (= (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91521)))

(declare-fun b!140374 () Bool)

(declare-fun e!91522 () Bool)

(assert (=> b!140374 (= e!91521 e!91522)))

(declare-fun res!67097 () Bool)

(assert (=> b!140374 (=> (not res!67097) (not e!91522))))

(assert (=> b!140374 (= res!67097 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 lt!73259)))))

(declare-fun b!140375 () Bool)

(assert (=> b!140375 (= e!91522 (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43701 (not res!67096)) b!140374))

(assert (= (and b!140374 res!67097) b!140375))

(declare-fun m!167703 () Bool)

(assert (=> d!43701 m!167703))

(assert (=> b!140375 m!166013))

(declare-fun m!167705 () Bool)

(assert (=> b!140375 m!167705))

(assert (=> d!43397 d!43701))

(declare-fun b!140376 () Bool)

(declare-fun e!91523 () (_ BitVec 32))

(assert (=> b!140376 (= e!91523 #b00000000000000000000000000000000)))

(declare-fun b!140377 () Bool)

(declare-fun e!91524 () (_ BitVec 32))

(declare-fun call!15587 () (_ BitVec 32))

(assert (=> b!140377 (= e!91524 call!15587)))

(declare-fun bm!15584 () Bool)

(assert (=> bm!15584 (= call!15587 (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun lt!73584 () (_ BitVec 32))

(declare-fun d!43703 () Bool)

(assert (=> d!43703 (and (bvsge lt!73584 #b00000000000000000000000000000000) (bvsle lt!73584 (bvsub (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!43703 (= lt!73584 e!91523)))

(declare-fun c!26290 () Bool)

(assert (=> d!43703 (= c!26290 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43703 (and (bvsle #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 newMap!16)) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!43703 (= (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) lt!73584)))

(declare-fun b!140378 () Bool)

(assert (=> b!140378 (= e!91523 e!91524)))

(declare-fun c!26291 () Bool)

(assert (=> b!140378 (= c!26291 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140379 () Bool)

(assert (=> b!140379 (= e!91524 (bvadd #b00000000000000000000000000000001 call!15587))))

(assert (= (and d!43703 c!26290) b!140376))

(assert (= (and d!43703 (not c!26290)) b!140378))

(assert (= (and b!140378 c!26291) b!140379))

(assert (= (and b!140378 (not c!26291)) b!140377))

(assert (= (or b!140379 b!140377) bm!15584))

(declare-fun m!167707 () Bool)

(assert (=> bm!15584 m!167707))

(declare-fun m!167709 () Bool)

(assert (=> b!140378 m!167709))

(assert (=> b!140378 m!167709))

(declare-fun m!167711 () Bool)

(assert (=> b!140378 m!167711))

(assert (=> d!43397 d!43703))

(declare-fun bm!15585 () Bool)

(declare-fun c!26292 () Bool)

(declare-fun call!15588 () Bool)

(assert (=> bm!15585 (= call!15588 (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (bvadd lt!73245 #b00000000000000000000000000000001) (ite c!26292 (Cons!1742 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) lt!73258) lt!73258)))))

(declare-fun b!140380 () Bool)

(declare-fun e!91528 () Bool)

(assert (=> b!140380 (= e!91528 call!15588)))

(declare-fun b!140382 () Bool)

(assert (=> b!140382 (= e!91528 call!15588)))

(declare-fun b!140383 () Bool)

(declare-fun e!91525 () Bool)

(declare-fun e!91526 () Bool)

(assert (=> b!140383 (= e!91525 e!91526)))

(declare-fun res!67099 () Bool)

(assert (=> b!140383 (=> (not res!67099) (not e!91526))))

(declare-fun e!91527 () Bool)

(assert (=> b!140383 (= res!67099 (not e!91527))))

(declare-fun res!67100 () Bool)

(assert (=> b!140383 (=> (not res!67100) (not e!91527))))

(assert (=> b!140383 (= res!67100 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)))))

(declare-fun b!140384 () Bool)

(assert (=> b!140384 (= e!91526 e!91528)))

(assert (=> b!140384 (= c!26292 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)))))

(declare-fun d!43705 () Bool)

(declare-fun res!67098 () Bool)

(assert (=> d!43705 (=> res!67098 e!91525)))

(assert (=> d!43705 (= res!67098 (bvsge lt!73245 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!43705 (= (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73245 lt!73258) e!91525)))

(declare-fun b!140381 () Bool)

(assert (=> b!140381 (= e!91527 (contains!924 lt!73258 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)))))

(assert (= (and d!43705 (not res!67098)) b!140383))

(assert (= (and b!140383 res!67100) b!140381))

(assert (= (and b!140383 res!67099) b!140384))

(assert (= (and b!140384 c!26292) b!140380))

(assert (= (and b!140384 (not c!26292)) b!140382))

(assert (= (or b!140380 b!140382) bm!15585))

(declare-fun m!167713 () Bool)

(assert (=> bm!15585 m!167713))

(declare-fun m!167715 () Bool)

(assert (=> bm!15585 m!167715))

(assert (=> b!140383 m!167713))

(assert (=> b!140383 m!167713))

(declare-fun m!167717 () Bool)

(assert (=> b!140383 m!167717))

(assert (=> b!140384 m!167713))

(assert (=> b!140384 m!167713))

(assert (=> b!140384 m!167717))

(assert (=> b!140381 m!167713))

(assert (=> b!140381 m!167713))

(declare-fun m!167719 () Bool)

(assert (=> b!140381 m!167719))

(assert (=> d!43397 d!43705))

(assert (=> d!43397 d!43697))

(assert (=> d!43397 d!43279))

(assert (=> d!43397 d!43407))

(assert (=> d!43397 d!43353))

(declare-fun d!43707 () Bool)

(assert (=> d!43707 (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!73587 () Unit!4373)

(declare-fun choose!13 (array!4897 (_ BitVec 64) (_ BitVec 32)) Unit!4373)

(assert (=> d!43707 (= lt!73587 (choose!13 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(assert (=> d!43707 (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000)))

(assert (=> d!43707 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) lt!73587)))

(declare-fun bs!5863 () Bool)

(assert (= bs!5863 d!43707))

(assert (=> bs!5863 m!166013))

(assert (=> bs!5863 m!166663))

(assert (=> bs!5863 m!166013))

(declare-fun m!167721 () Bool)

(assert (=> bs!5863 m!167721))

(assert (=> d!43397 d!43707))

(declare-fun d!43709 () Bool)

(declare-fun e!91529 () Bool)

(assert (=> d!43709 e!91529))

(declare-fun res!67101 () Bool)

(assert (=> d!43709 (=> (not res!67101) (not e!91529))))

(assert (=> d!43709 (= res!67101 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 lt!73240))))))

(declare-fun lt!73588 () Unit!4373)

(assert (=> d!43709 (= lt!73588 (choose!861 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43709 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43709 (= (lemmaValidKeyInArrayIsInListMap!126 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (defaultEntry!2940 newMap!16)) lt!73588)))

(declare-fun b!140385 () Bool)

(assert (=> b!140385 (= e!91529 (contains!923 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (= (and d!43709 res!67101) b!140385))

(declare-fun m!167723 () Bool)

(assert (=> d!43709 m!167723))

(assert (=> d!43709 m!166429))

(assert (=> b!140385 m!166657))

(declare-fun m!167725 () Bool)

(assert (=> b!140385 m!167725))

(assert (=> b!140385 m!166657))

(assert (=> b!140385 m!167725))

(declare-fun m!167727 () Bool)

(assert (=> b!140385 m!167727))

(assert (=> d!43397 d!43709))

(declare-fun d!43711 () Bool)

(declare-fun e!91532 () Bool)

(assert (=> d!43711 e!91532))

(declare-fun res!67104 () Bool)

(assert (=> d!43711 (=> (not res!67104) (not e!91532))))

(assert (=> d!43711 (= res!67104 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 (_keys!4699 newMap!16)))))))

(declare-fun lt!73591 () Unit!4373)

(declare-fun choose!102 ((_ BitVec 64) array!4897 (_ BitVec 32) (_ BitVec 32)) Unit!4373)

(assert (=> d!43711 (= lt!73591 (choose!102 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (mask!7280 newMap!16)))))

(assert (=> d!43711 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43711 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (mask!7280 newMap!16)) lt!73591)))

(declare-fun b!140388 () Bool)

(assert (=> b!140388 (= e!91532 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(assert (= (and d!43711 res!67104) b!140388))

(assert (=> d!43711 m!166013))

(declare-fun m!167729 () Bool)

(assert (=> d!43711 m!167729))

(assert (=> d!43711 m!166429))

(assert (=> b!140388 m!166671))

(assert (=> b!140388 m!166673))

(assert (=> d!43397 d!43711))

(declare-fun d!43713 () Bool)

(declare-fun e!91535 () Bool)

(assert (=> d!43713 e!91535))

(declare-fun res!67107 () Bool)

(assert (=> d!43713 (=> (not res!67107) (not e!91535))))

(assert (=> d!43713 (= res!67107 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 (_keys!4699 newMap!16))) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2588 (_values!2923 newMap!16)))))))

(declare-fun lt!73594 () Unit!4373)

(declare-fun choose!868 (array!4897 array!4899 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4373)

(assert (=> d!43713 (= lt!73594 (choose!868 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43713 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43713 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) lt!73594)))

(declare-fun b!140391 () Bool)

(assert (=> b!140391 (= e!91535 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (= (and d!43713 res!67107) b!140391))

(assert (=> d!43713 m!166013))

(assert (=> d!43713 m!166029))

(declare-fun m!167731 () Bool)

(assert (=> d!43713 m!167731))

(assert (=> d!43713 m!166429))

(assert (=> b!140391 m!166097))

(assert (=> b!140391 m!166593))

(assert (=> b!140391 m!166677))

(assert (=> b!140391 m!166097))

(assert (=> b!140391 m!166671))

(assert (=> b!140391 m!166643))

(assert (=> d!43397 d!43713))

(declare-fun b!140392 () Bool)

(declare-fun e!91544 () Unit!4373)

(declare-fun lt!73616 () Unit!4373)

(assert (=> b!140392 (= e!91544 lt!73616)))

(declare-fun lt!73610 () ListLongMap!1745)

(assert (=> b!140392 (= lt!73610 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73612 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73612 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73611 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73611 (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))

(declare-fun lt!73614 () Unit!4373)

(assert (=> b!140392 (= lt!73614 (addStillContains!96 lt!73610 lt!73612 (zeroValue!2790 newMap!16) lt!73611))))

(assert (=> b!140392 (contains!923 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))) lt!73611)))

(declare-fun lt!73605 () Unit!4373)

(assert (=> b!140392 (= lt!73605 lt!73614)))

(declare-fun lt!73613 () ListLongMap!1745)

(assert (=> b!140392 (= lt!73613 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73609 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73609 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73608 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73608 (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))

(declare-fun lt!73604 () Unit!4373)

(assert (=> b!140392 (= lt!73604 (addApplyDifferent!96 lt!73613 lt!73609 (minValue!2790 newMap!16) lt!73608))))

(assert (=> b!140392 (= (apply!120 (+!179 lt!73613 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))) lt!73608) (apply!120 lt!73613 lt!73608))))

(declare-fun lt!73600 () Unit!4373)

(assert (=> b!140392 (= lt!73600 lt!73604)))

(declare-fun lt!73595 () ListLongMap!1745)

(assert (=> b!140392 (= lt!73595 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73599 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73599 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73596 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73596 (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))

(declare-fun lt!73607 () Unit!4373)

(assert (=> b!140392 (= lt!73607 (addApplyDifferent!96 lt!73595 lt!73599 (zeroValue!2790 newMap!16) lt!73596))))

(assert (=> b!140392 (= (apply!120 (+!179 lt!73595 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))) lt!73596) (apply!120 lt!73595 lt!73596))))

(declare-fun lt!73603 () Unit!4373)

(assert (=> b!140392 (= lt!73603 lt!73607)))

(declare-fun lt!73597 () ListLongMap!1745)

(assert (=> b!140392 (= lt!73597 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73598 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73598 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73602 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73602 (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))

(assert (=> b!140392 (= lt!73616 (addApplyDifferent!96 lt!73597 lt!73598 (minValue!2790 newMap!16) lt!73602))))

(assert (=> b!140392 (= (apply!120 (+!179 lt!73597 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))) lt!73602) (apply!120 lt!73597 lt!73602))))

(declare-fun b!140393 () Bool)

(declare-fun e!91548 () ListLongMap!1745)

(declare-fun call!15589 () ListLongMap!1745)

(assert (=> b!140393 (= e!91548 call!15589)))

(declare-fun b!140394 () Bool)

(declare-fun e!91536 () Bool)

(assert (=> b!140394 (= e!91536 (validKeyInArray!0 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(declare-fun b!140395 () Bool)

(declare-fun e!91540 () Bool)

(declare-fun call!15594 () Bool)

(assert (=> b!140395 (= e!91540 (not call!15594))))

(declare-fun lt!73615 () ListLongMap!1745)

(declare-fun b!140396 () Bool)

(declare-fun e!91543 () Bool)

(assert (=> b!140396 (= e!91543 (= (apply!120 lt!73615 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140396 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 lt!73236)))))

(assert (=> b!140396 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(declare-fun bm!15586 () Bool)

(assert (=> bm!15586 (= call!15594 (contains!923 lt!73615 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15587 () Bool)

(declare-fun call!15593 () ListLongMap!1745)

(assert (=> bm!15587 (= call!15589 call!15593)))

(declare-fun b!140398 () Bool)

(declare-fun e!91541 () Bool)

(declare-fun call!15591 () Bool)

(assert (=> b!140398 (= e!91541 (not call!15591))))

(declare-fun b!140399 () Bool)

(declare-fun e!91539 () Bool)

(assert (=> b!140399 (= e!91539 (validKeyInArray!0 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(declare-fun b!140400 () Bool)

(declare-fun res!67108 () Bool)

(declare-fun e!91537 () Bool)

(assert (=> b!140400 (=> (not res!67108) (not e!91537))))

(assert (=> b!140400 (= res!67108 e!91541)))

(declare-fun c!26298 () Bool)

(assert (=> b!140400 (= c!26298 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140401 () Bool)

(declare-fun res!67113 () Bool)

(assert (=> b!140401 (=> (not res!67113) (not e!91537))))

(declare-fun e!91547 () Bool)

(assert (=> b!140401 (= res!67113 e!91547)))

(declare-fun res!67112 () Bool)

(assert (=> b!140401 (=> res!67112 e!91547)))

(assert (=> b!140401 (= res!67112 (not e!91539))))

(declare-fun res!67109 () Bool)

(assert (=> b!140401 (=> (not res!67109) (not e!91539))))

(assert (=> b!140401 (= res!67109 (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(declare-fun b!140402 () Bool)

(declare-fun e!91545 () Bool)

(assert (=> b!140402 (= e!91545 (= (apply!120 lt!73615 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!140403 () Bool)

(declare-fun e!91546 () ListLongMap!1745)

(assert (=> b!140403 (= e!91546 (+!179 call!15593 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!140404 () Bool)

(declare-fun e!91538 () ListLongMap!1745)

(declare-fun call!15595 () ListLongMap!1745)

(assert (=> b!140404 (= e!91538 call!15595)))

(declare-fun b!140405 () Bool)

(assert (=> b!140405 (= e!91537 e!91540)))

(declare-fun c!26294 () Bool)

(assert (=> b!140405 (= c!26294 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140406 () Bool)

(declare-fun c!26296 () Bool)

(assert (=> b!140406 (= c!26296 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140406 (= e!91548 e!91538)))

(declare-fun b!140407 () Bool)

(assert (=> b!140407 (= e!91546 e!91548)))

(declare-fun c!26297 () Bool)

(assert (=> b!140407 (= c!26297 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140408 () Bool)

(assert (=> b!140408 (= e!91538 call!15589)))

(declare-fun b!140409 () Bool)

(assert (=> b!140409 (= e!91547 e!91543)))

(declare-fun res!67116 () Bool)

(assert (=> b!140409 (=> (not res!67116) (not e!91543))))

(assert (=> b!140409 (= res!67116 (contains!923 lt!73615 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(assert (=> b!140409 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(declare-fun b!140397 () Bool)

(assert (=> b!140397 (= e!91540 e!91545)))

(declare-fun res!67110 () Bool)

(assert (=> b!140397 (= res!67110 call!15594)))

(assert (=> b!140397 (=> (not res!67110) (not e!91545))))

(declare-fun d!43715 () Bool)

(assert (=> d!43715 e!91537))

(declare-fun res!67114 () Bool)

(assert (=> d!43715 (=> (not res!67114) (not e!91537))))

(assert (=> d!43715 (= res!67114 (or (bvsge #b00000000000000000000000000000000 (size!2587 lt!73240)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))))

(declare-fun lt!73606 () ListLongMap!1745)

(assert (=> d!43715 (= lt!73615 lt!73606)))

(declare-fun lt!73601 () Unit!4373)

(assert (=> d!43715 (= lt!73601 e!91544)))

(declare-fun c!26293 () Bool)

(assert (=> d!43715 (= c!26293 e!91536)))

(declare-fun res!67115 () Bool)

(assert (=> d!43715 (=> (not res!67115) (not e!91536))))

(assert (=> d!43715 (= res!67115 (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(assert (=> d!43715 (= lt!73606 e!91546)))

(declare-fun c!26295 () Bool)

(assert (=> d!43715 (= c!26295 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43715 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43715 (= (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73615)))

(declare-fun b!140410 () Bool)

(declare-fun e!91542 () Bool)

(assert (=> b!140410 (= e!91542 (= (apply!120 lt!73615 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15588 () Bool)

(declare-fun call!15590 () ListLongMap!1745)

(declare-fun call!15592 () ListLongMap!1745)

(assert (=> bm!15588 (= call!15590 call!15592)))

(declare-fun bm!15589 () Bool)

(assert (=> bm!15589 (= call!15595 call!15590)))

(declare-fun b!140411 () Bool)

(assert (=> b!140411 (= e!91541 e!91542)))

(declare-fun res!67111 () Bool)

(assert (=> b!140411 (= res!67111 call!15591)))

(assert (=> b!140411 (=> (not res!67111) (not e!91542))))

(declare-fun bm!15590 () Bool)

(assert (=> bm!15590 (= call!15592 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15591 () Bool)

(assert (=> bm!15591 (= call!15593 (+!179 (ite c!26295 call!15592 (ite c!26297 call!15590 call!15595)) (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140412 () Bool)

(declare-fun Unit!4415 () Unit!4373)

(assert (=> b!140412 (= e!91544 Unit!4415)))

(declare-fun bm!15592 () Bool)

(assert (=> bm!15592 (= call!15591 (contains!923 lt!73615 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43715 c!26295) b!140403))

(assert (= (and d!43715 (not c!26295)) b!140407))

(assert (= (and b!140407 c!26297) b!140393))

(assert (= (and b!140407 (not c!26297)) b!140406))

(assert (= (and b!140406 c!26296) b!140408))

(assert (= (and b!140406 (not c!26296)) b!140404))

(assert (= (or b!140408 b!140404) bm!15589))

(assert (= (or b!140393 bm!15589) bm!15588))

(assert (= (or b!140393 b!140408) bm!15587))

(assert (= (or b!140403 bm!15588) bm!15590))

(assert (= (or b!140403 bm!15587) bm!15591))

(assert (= (and d!43715 res!67115) b!140394))

(assert (= (and d!43715 c!26293) b!140392))

(assert (= (and d!43715 (not c!26293)) b!140412))

(assert (= (and d!43715 res!67114) b!140401))

(assert (= (and b!140401 res!67109) b!140399))

(assert (= (and b!140401 (not res!67112)) b!140409))

(assert (= (and b!140409 res!67116) b!140396))

(assert (= (and b!140401 res!67113) b!140400))

(assert (= (and b!140400 c!26298) b!140411))

(assert (= (and b!140400 (not c!26298)) b!140398))

(assert (= (and b!140411 res!67111) b!140410))

(assert (= (or b!140411 b!140398) bm!15592))

(assert (= (and b!140400 res!67108) b!140405))

(assert (= (and b!140405 c!26294) b!140397))

(assert (= (and b!140405 (not c!26294)) b!140395))

(assert (= (and b!140397 res!67110) b!140402))

(assert (= (or b!140397 b!140395) bm!15586))

(declare-fun b_lambda!6281 () Bool)

(assert (=> (not b_lambda!6281) (not b!140396)))

(assert (=> b!140396 t!6337))

(declare-fun b_and!8779 () Bool)

(assert (= b_and!8775 (and (=> t!6337 result!4191) b_and!8779)))

(assert (=> b!140396 t!6339))

(declare-fun b_and!8781 () Bool)

(assert (= b_and!8777 (and (=> t!6339 result!4193) b_and!8781)))

(declare-fun m!167733 () Bool)

(assert (=> b!140392 m!167733))

(declare-fun m!167735 () Bool)

(assert (=> b!140392 m!167735))

(declare-fun m!167737 () Bool)

(assert (=> b!140392 m!167737))

(declare-fun m!167739 () Bool)

(assert (=> b!140392 m!167739))

(declare-fun m!167741 () Bool)

(assert (=> b!140392 m!167741))

(declare-fun m!167743 () Bool)

(assert (=> b!140392 m!167743))

(declare-fun m!167745 () Bool)

(assert (=> b!140392 m!167745))

(declare-fun m!167747 () Bool)

(assert (=> b!140392 m!167747))

(declare-fun m!167749 () Bool)

(assert (=> b!140392 m!167749))

(declare-fun m!167751 () Bool)

(assert (=> b!140392 m!167751))

(declare-fun m!167753 () Bool)

(assert (=> b!140392 m!167753))

(assert (=> b!140392 m!167743))

(assert (=> b!140392 m!167751))

(declare-fun m!167755 () Bool)

(assert (=> b!140392 m!167755))

(declare-fun m!167757 () Bool)

(assert (=> b!140392 m!167757))

(assert (=> b!140392 m!167741))

(declare-fun m!167759 () Bool)

(assert (=> b!140392 m!167759))

(declare-fun m!167761 () Bool)

(assert (=> b!140392 m!167761))

(declare-fun m!167763 () Bool)

(assert (=> b!140392 m!167763))

(assert (=> b!140392 m!167761))

(declare-fun m!167765 () Bool)

(assert (=> b!140392 m!167765))

(declare-fun m!167767 () Bool)

(assert (=> b!140402 m!167767))

(declare-fun m!167769 () Bool)

(assert (=> bm!15586 m!167769))

(assert (=> d!43715 m!166429))

(assert (=> b!140409 m!167755))

(assert (=> b!140409 m!167755))

(declare-fun m!167771 () Bool)

(assert (=> b!140409 m!167771))

(assert (=> b!140394 m!167755))

(assert (=> b!140394 m!167755))

(declare-fun m!167773 () Bool)

(assert (=> b!140394 m!167773))

(assert (=> bm!15590 m!167733))

(declare-fun m!167775 () Bool)

(assert (=> b!140403 m!167775))

(declare-fun m!167777 () Bool)

(assert (=> b!140410 m!167777))

(assert (=> b!140399 m!167755))

(assert (=> b!140399 m!167755))

(assert (=> b!140399 m!167773))

(declare-fun m!167779 () Bool)

(assert (=> bm!15591 m!167779))

(declare-fun m!167781 () Bool)

(assert (=> bm!15592 m!167781))

(assert (=> b!140396 m!167755))

(declare-fun m!167783 () Bool)

(assert (=> b!140396 m!167783))

(assert (=> b!140396 m!166443))

(declare-fun m!167785 () Bool)

(assert (=> b!140396 m!167785))

(assert (=> b!140396 m!167755))

(declare-fun m!167787 () Bool)

(assert (=> b!140396 m!167787))

(assert (=> b!140396 m!166443))

(assert (=> b!140396 m!167783))

(assert (=> d!43397 d!43715))

(assert (=> d!43397 d!43435))

(declare-fun d!43717 () Bool)

(declare-fun e!91551 () Bool)

(assert (=> d!43717 e!91551))

(declare-fun res!67119 () Bool)

(assert (=> d!43717 (=> (not res!67119) (not e!91551))))

(assert (=> d!43717 (= res!67119 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 (_keys!4699 newMap!16)))))))

(declare-fun lt!73619 () Unit!4373)

(declare-fun choose!41 (array!4897 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1746) Unit!4373)

(assert (=> d!43717 (= lt!73619 (choose!41 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) lt!73245 lt!73258))))

(assert (=> d!43717 (bvslt (size!2587 (_keys!4699 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!43717 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) lt!73245 lt!73258) lt!73619)))

(declare-fun b!140415 () Bool)

(assert (=> b!140415 (= e!91551 (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73245 lt!73258))))

(assert (= (and d!43717 res!67119) b!140415))

(assert (=> d!43717 m!166013))

(declare-fun m!167789 () Bool)

(assert (=> d!43717 m!167789))

(assert (=> b!140415 m!166671))

(assert (=> b!140415 m!166645))

(assert (=> d!43397 d!43717))

(declare-fun b!140416 () Bool)

(declare-fun e!91553 () Bool)

(declare-fun e!91554 () Bool)

(assert (=> b!140416 (= e!91553 e!91554)))

(declare-fun lt!73621 () (_ BitVec 64))

(assert (=> b!140416 (= lt!73621 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73620 () Unit!4373)

(assert (=> b!140416 (= lt!73620 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 #b00000000000000000000000000000000))))

(assert (=> b!140416 (arrayContainsKey!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 #b00000000000000000000000000000000)))

(declare-fun lt!73622 () Unit!4373)

(assert (=> b!140416 (= lt!73622 lt!73620)))

(declare-fun res!67120 () Bool)

(assert (=> b!140416 (= res!67120 (= (seekEntryOrOpen!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!140416 (=> (not res!67120) (not e!91554))))

(declare-fun d!43719 () Bool)

(declare-fun res!67121 () Bool)

(declare-fun e!91552 () Bool)

(assert (=> d!43719 (=> res!67121 e!91552)))

(assert (=> d!43719 (= res!67121 (bvsge #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!43719 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) e!91552)))

(declare-fun b!140417 () Bool)

(declare-fun call!15596 () Bool)

(assert (=> b!140417 (= e!91554 call!15596)))

(declare-fun bm!15593 () Bool)

(assert (=> bm!15593 (= call!15596 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(declare-fun b!140418 () Bool)

(assert (=> b!140418 (= e!91552 e!91553)))

(declare-fun c!26299 () Bool)

(assert (=> b!140418 (= c!26299 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140419 () Bool)

(assert (=> b!140419 (= e!91553 call!15596)))

(assert (= (and d!43719 (not res!67121)) b!140418))

(assert (= (and b!140418 c!26299) b!140416))

(assert (= (and b!140418 (not c!26299)) b!140419))

(assert (= (and b!140416 res!67120) b!140417))

(assert (= (or b!140417 b!140419) bm!15593))

(assert (=> b!140416 m!167709))

(declare-fun m!167791 () Bool)

(assert (=> b!140416 m!167791))

(declare-fun m!167793 () Bool)

(assert (=> b!140416 m!167793))

(assert (=> b!140416 m!167709))

(declare-fun m!167795 () Bool)

(assert (=> b!140416 m!167795))

(declare-fun m!167797 () Bool)

(assert (=> bm!15593 m!167797))

(assert (=> b!140418 m!167709))

(assert (=> b!140418 m!167709))

(assert (=> b!140418 m!167711))

(assert (=> d!43397 d!43719))

(declare-fun d!43721 () Bool)

(assert (=> d!43721 (= (arrayCountValidKeys!0 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!73625 () Unit!4373)

(declare-fun choose!2 (array!4897 (_ BitVec 32)) Unit!4373)

(assert (=> d!43721 (= lt!73625 (choose!2 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(declare-fun e!91557 () Bool)

(assert (=> d!43721 e!91557))

(declare-fun res!67126 () Bool)

(assert (=> d!43721 (=> (not res!67126) (not e!91557))))

(assert (=> d!43721 (= res!67126 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 lt!73246))))))

(assert (=> d!43721 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) lt!73625)))

(declare-fun b!140424 () Bool)

(declare-fun res!67127 () Bool)

(assert (=> b!140424 (=> (not res!67127) (not e!91557))))

(assert (=> b!140424 (= res!67127 (validKeyInArray!0 (select (arr!2315 lt!73246) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(declare-fun b!140425 () Bool)

(assert (=> b!140425 (= e!91557 (bvslt (size!2587 lt!73246) #b01111111111111111111111111111111))))

(assert (= (and d!43721 res!67126) b!140424))

(assert (= (and b!140424 res!67127) b!140425))

(assert (=> d!43721 m!166667))

(declare-fun m!167799 () Bool)

(assert (=> d!43721 m!167799))

(declare-fun m!167801 () Bool)

(assert (=> b!140424 m!167801))

(assert (=> b!140424 m!167801))

(declare-fun m!167803 () Bool)

(assert (=> b!140424 m!167803))

(assert (=> d!43397 d!43721))

(declare-fun d!43723 () Bool)

(declare-fun e!91558 () Bool)

(assert (=> d!43723 e!91558))

(declare-fun res!67128 () Bool)

(assert (=> d!43723 (=> res!67128 e!91558)))

(declare-fun lt!73628 () Bool)

(assert (=> d!43723 (= res!67128 (not lt!73628))))

(declare-fun lt!73626 () Bool)

(assert (=> d!43723 (= lt!73628 lt!73626)))

(declare-fun lt!73627 () Unit!4373)

(declare-fun e!91559 () Unit!4373)

(assert (=> d!43723 (= lt!73627 e!91559)))

(declare-fun c!26300 () Bool)

(assert (=> d!43723 (= c!26300 lt!73626)))

(assert (=> d!43723 (= lt!73626 (containsKey!180 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (=> d!43723 (= (contains!923 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) lt!73628)))

(declare-fun b!140426 () Bool)

(declare-fun lt!73629 () Unit!4373)

(assert (=> b!140426 (= e!91559 lt!73629)))

(assert (=> b!140426 (= lt!73629 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (=> b!140426 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(declare-fun b!140427 () Bool)

(declare-fun Unit!4416 () Unit!4373)

(assert (=> b!140427 (= e!91559 Unit!4416)))

(declare-fun b!140428 () Bool)

(assert (=> b!140428 (= e!91558 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))))

(assert (= (and d!43723 c!26300) b!140426))

(assert (= (and d!43723 (not c!26300)) b!140427))

(assert (= (and d!43723 (not res!67128)) b!140428))

(assert (=> d!43723 m!166659))

(declare-fun m!167805 () Bool)

(assert (=> d!43723 m!167805))

(assert (=> b!140426 m!166659))

(declare-fun m!167807 () Bool)

(assert (=> b!140426 m!167807))

(assert (=> b!140426 m!166659))

(declare-fun m!167809 () Bool)

(assert (=> b!140426 m!167809))

(assert (=> b!140426 m!167809))

(declare-fun m!167811 () Bool)

(assert (=> b!140426 m!167811))

(assert (=> b!140428 m!166659))

(assert (=> b!140428 m!167809))

(assert (=> b!140428 m!167809))

(assert (=> b!140428 m!167811))

(assert (=> d!43397 d!43723))

(declare-fun b!140429 () Bool)

(declare-fun e!91568 () Unit!4373)

(declare-fun lt!73651 () Unit!4373)

(assert (=> b!140429 (= e!91568 lt!73651)))

(declare-fun lt!73645 () ListLongMap!1745)

(assert (=> b!140429 (= lt!73645 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73647 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73647 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73646 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73646 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73649 () Unit!4373)

(assert (=> b!140429 (= lt!73649 (addStillContains!96 lt!73645 lt!73647 (zeroValue!2790 newMap!16) lt!73646))))

(assert (=> b!140429 (contains!923 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))) lt!73646)))

(declare-fun lt!73640 () Unit!4373)

(assert (=> b!140429 (= lt!73640 lt!73649)))

(declare-fun lt!73648 () ListLongMap!1745)

(assert (=> b!140429 (= lt!73648 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73644 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73644 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73643 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73643 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73639 () Unit!4373)

(assert (=> b!140429 (= lt!73639 (addApplyDifferent!96 lt!73648 lt!73644 (minValue!2790 newMap!16) lt!73643))))

(assert (=> b!140429 (= (apply!120 (+!179 lt!73648 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))) lt!73643) (apply!120 lt!73648 lt!73643))))

(declare-fun lt!73635 () Unit!4373)

(assert (=> b!140429 (= lt!73635 lt!73639)))

(declare-fun lt!73630 () ListLongMap!1745)

(assert (=> b!140429 (= lt!73630 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73634 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73634 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73631 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73631 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73642 () Unit!4373)

(assert (=> b!140429 (= lt!73642 (addApplyDifferent!96 lt!73630 lt!73634 (zeroValue!2790 newMap!16) lt!73631))))

(assert (=> b!140429 (= (apply!120 (+!179 lt!73630 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))) lt!73631) (apply!120 lt!73630 lt!73631))))

(declare-fun lt!73638 () Unit!4373)

(assert (=> b!140429 (= lt!73638 lt!73642)))

(declare-fun lt!73632 () ListLongMap!1745)

(assert (=> b!140429 (= lt!73632 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73633 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73633 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73637 () (_ BitVec 64))

(assert (=> b!140429 (= lt!73637 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!140429 (= lt!73651 (addApplyDifferent!96 lt!73632 lt!73633 (minValue!2790 newMap!16) lt!73637))))

(assert (=> b!140429 (= (apply!120 (+!179 lt!73632 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))) lt!73637) (apply!120 lt!73632 lt!73637))))

(declare-fun b!140430 () Bool)

(declare-fun e!91572 () ListLongMap!1745)

(declare-fun call!15597 () ListLongMap!1745)

(assert (=> b!140430 (= e!91572 call!15597)))

(declare-fun e!91560 () Bool)

(declare-fun b!140431 () Bool)

(assert (=> b!140431 (= e!91560 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140432 () Bool)

(declare-fun e!91564 () Bool)

(declare-fun call!15602 () Bool)

(assert (=> b!140432 (= e!91564 (not call!15602))))

(declare-fun b!140433 () Bool)

(declare-fun e!91567 () Bool)

(declare-fun lt!73650 () ListLongMap!1745)

(assert (=> b!140433 (= e!91567 (= (apply!120 lt!73650 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140433 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))))

(assert (=> b!140433 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun bm!15594 () Bool)

(assert (=> bm!15594 (= call!15602 (contains!923 lt!73650 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15595 () Bool)

(declare-fun call!15601 () ListLongMap!1745)

(assert (=> bm!15595 (= call!15597 call!15601)))

(declare-fun b!140435 () Bool)

(declare-fun e!91565 () Bool)

(declare-fun call!15599 () Bool)

(assert (=> b!140435 (= e!91565 (not call!15599))))

(declare-fun b!140436 () Bool)

(declare-fun e!91563 () Bool)

(assert (=> b!140436 (= e!91563 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140437 () Bool)

(declare-fun res!67129 () Bool)

(declare-fun e!91561 () Bool)

(assert (=> b!140437 (=> (not res!67129) (not e!91561))))

(assert (=> b!140437 (= res!67129 e!91565)))

(declare-fun c!26306 () Bool)

(assert (=> b!140437 (= c!26306 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140438 () Bool)

(declare-fun res!67134 () Bool)

(assert (=> b!140438 (=> (not res!67134) (not e!91561))))

(declare-fun e!91571 () Bool)

(assert (=> b!140438 (= res!67134 e!91571)))

(declare-fun res!67133 () Bool)

(assert (=> b!140438 (=> res!67133 e!91571)))

(assert (=> b!140438 (= res!67133 (not e!91563))))

(declare-fun res!67130 () Bool)

(assert (=> b!140438 (=> (not res!67130) (not e!91563))))

(assert (=> b!140438 (= res!67130 (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun b!140439 () Bool)

(declare-fun e!91569 () Bool)

(assert (=> b!140439 (= e!91569 (= (apply!120 lt!73650 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!140440 () Bool)

(declare-fun e!91570 () ListLongMap!1745)

(assert (=> b!140440 (= e!91570 (+!179 call!15601 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!140441 () Bool)

(declare-fun e!91562 () ListLongMap!1745)

(declare-fun call!15603 () ListLongMap!1745)

(assert (=> b!140441 (= e!91562 call!15603)))

(declare-fun b!140442 () Bool)

(assert (=> b!140442 (= e!91561 e!91564)))

(declare-fun c!26302 () Bool)

(assert (=> b!140442 (= c!26302 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140443 () Bool)

(declare-fun c!26304 () Bool)

(assert (=> b!140443 (= c!26304 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140443 (= e!91572 e!91562)))

(declare-fun b!140444 () Bool)

(assert (=> b!140444 (= e!91570 e!91572)))

(declare-fun c!26305 () Bool)

(assert (=> b!140444 (= c!26305 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140445 () Bool)

(assert (=> b!140445 (= e!91562 call!15597)))

(declare-fun b!140446 () Bool)

(assert (=> b!140446 (= e!91571 e!91567)))

(declare-fun res!67137 () Bool)

(assert (=> b!140446 (=> (not res!67137) (not e!91567))))

(assert (=> b!140446 (= res!67137 (contains!923 lt!73650 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!140446 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun b!140434 () Bool)

(assert (=> b!140434 (= e!91564 e!91569)))

(declare-fun res!67131 () Bool)

(assert (=> b!140434 (= res!67131 call!15602)))

(assert (=> b!140434 (=> (not res!67131) (not e!91569))))

(declare-fun d!43725 () Bool)

(assert (=> d!43725 e!91561))

(declare-fun res!67135 () Bool)

(assert (=> d!43725 (=> (not res!67135) (not e!91561))))

(assert (=> d!43725 (= res!67135 (or (bvsge #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))))

(declare-fun lt!73641 () ListLongMap!1745)

(assert (=> d!43725 (= lt!73650 lt!73641)))

(declare-fun lt!73636 () Unit!4373)

(assert (=> d!43725 (= lt!73636 e!91568)))

(declare-fun c!26301 () Bool)

(assert (=> d!43725 (= c!26301 e!91560)))

(declare-fun res!67136 () Bool)

(assert (=> d!43725 (=> (not res!67136) (not e!91560))))

(assert (=> d!43725 (= res!67136 (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!43725 (= lt!73641 e!91570)))

(declare-fun c!26303 () Bool)

(assert (=> d!43725 (= c!26303 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43725 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43725 (= (getCurrentListMap!561 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73650)))

(declare-fun b!140447 () Bool)

(declare-fun e!91566 () Bool)

(assert (=> b!140447 (= e!91566 (= (apply!120 lt!73650 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15596 () Bool)

(declare-fun call!15598 () ListLongMap!1745)

(declare-fun call!15600 () ListLongMap!1745)

(assert (=> bm!15596 (= call!15598 call!15600)))

(declare-fun bm!15597 () Bool)

(assert (=> bm!15597 (= call!15603 call!15598)))

(declare-fun b!140448 () Bool)

(assert (=> b!140448 (= e!91565 e!91566)))

(declare-fun res!67132 () Bool)

(assert (=> b!140448 (= res!67132 call!15599)))

(assert (=> b!140448 (=> (not res!67132) (not e!91566))))

(declare-fun bm!15598 () Bool)

(assert (=> bm!15598 (= call!15600 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15599 () Bool)

(assert (=> bm!15599 (= call!15601 (+!179 (ite c!26303 call!15600 (ite c!26305 call!15598 call!15603)) (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140449 () Bool)

(declare-fun Unit!4417 () Unit!4373)

(assert (=> b!140449 (= e!91568 Unit!4417)))

(declare-fun bm!15600 () Bool)

(assert (=> bm!15600 (= call!15599 (contains!923 lt!73650 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43725 c!26303) b!140440))

(assert (= (and d!43725 (not c!26303)) b!140444))

(assert (= (and b!140444 c!26305) b!140430))

(assert (= (and b!140444 (not c!26305)) b!140443))

(assert (= (and b!140443 c!26304) b!140445))

(assert (= (and b!140443 (not c!26304)) b!140441))

(assert (= (or b!140445 b!140441) bm!15597))

(assert (= (or b!140430 bm!15597) bm!15596))

(assert (= (or b!140430 b!140445) bm!15595))

(assert (= (or b!140440 bm!15596) bm!15598))

(assert (= (or b!140440 bm!15595) bm!15599))

(assert (= (and d!43725 res!67136) b!140431))

(assert (= (and d!43725 c!26301) b!140429))

(assert (= (and d!43725 (not c!26301)) b!140449))

(assert (= (and d!43725 res!67135) b!140438))

(assert (= (and b!140438 res!67130) b!140436))

(assert (= (and b!140438 (not res!67133)) b!140446))

(assert (= (and b!140446 res!67137) b!140433))

(assert (= (and b!140438 res!67134) b!140437))

(assert (= (and b!140437 c!26306) b!140448))

(assert (= (and b!140437 (not c!26306)) b!140435))

(assert (= (and b!140448 res!67132) b!140447))

(assert (= (or b!140448 b!140435) bm!15600))

(assert (= (and b!140437 res!67129) b!140442))

(assert (= (and b!140442 c!26302) b!140434))

(assert (= (and b!140442 (not c!26302)) b!140432))

(assert (= (and b!140434 res!67131) b!140439))

(assert (= (or b!140434 b!140432) bm!15594))

(declare-fun b_lambda!6283 () Bool)

(assert (=> (not b_lambda!6283) (not b!140433)))

(assert (=> b!140433 t!6337))

(declare-fun b_and!8783 () Bool)

(assert (= b_and!8779 (and (=> t!6337 result!4191) b_and!8783)))

(assert (=> b!140433 t!6339))

(declare-fun b_and!8785 () Bool)

(assert (= b_and!8781 (and (=> t!6339 result!4193) b_and!8785)))

(declare-fun m!167813 () Bool)

(assert (=> b!140429 m!167813))

(declare-fun m!167815 () Bool)

(assert (=> b!140429 m!167815))

(declare-fun m!167817 () Bool)

(assert (=> b!140429 m!167817))

(declare-fun m!167819 () Bool)

(assert (=> b!140429 m!167819))

(declare-fun m!167821 () Bool)

(assert (=> b!140429 m!167821))

(declare-fun m!167823 () Bool)

(assert (=> b!140429 m!167823))

(declare-fun m!167825 () Bool)

(assert (=> b!140429 m!167825))

(declare-fun m!167827 () Bool)

(assert (=> b!140429 m!167827))

(declare-fun m!167829 () Bool)

(assert (=> b!140429 m!167829))

(declare-fun m!167831 () Bool)

(assert (=> b!140429 m!167831))

(declare-fun m!167833 () Bool)

(assert (=> b!140429 m!167833))

(assert (=> b!140429 m!167823))

(assert (=> b!140429 m!167831))

(assert (=> b!140429 m!167709))

(declare-fun m!167835 () Bool)

(assert (=> b!140429 m!167835))

(assert (=> b!140429 m!167821))

(declare-fun m!167837 () Bool)

(assert (=> b!140429 m!167837))

(declare-fun m!167839 () Bool)

(assert (=> b!140429 m!167839))

(declare-fun m!167841 () Bool)

(assert (=> b!140429 m!167841))

(assert (=> b!140429 m!167839))

(declare-fun m!167843 () Bool)

(assert (=> b!140429 m!167843))

(declare-fun m!167845 () Bool)

(assert (=> b!140439 m!167845))

(declare-fun m!167847 () Bool)

(assert (=> bm!15594 m!167847))

(assert (=> d!43725 m!166429))

(assert (=> b!140446 m!167709))

(assert (=> b!140446 m!167709))

(declare-fun m!167849 () Bool)

(assert (=> b!140446 m!167849))

(assert (=> b!140431 m!167709))

(assert (=> b!140431 m!167709))

(assert (=> b!140431 m!167711))

(assert (=> bm!15598 m!167813))

(declare-fun m!167851 () Bool)

(assert (=> b!140440 m!167851))

(declare-fun m!167853 () Bool)

(assert (=> b!140447 m!167853))

(assert (=> b!140436 m!167709))

(assert (=> b!140436 m!167709))

(assert (=> b!140436 m!167711))

(declare-fun m!167855 () Bool)

(assert (=> bm!15599 m!167855))

(declare-fun m!167857 () Bool)

(assert (=> bm!15600 m!167857))

(assert (=> b!140433 m!167709))

(declare-fun m!167859 () Bool)

(assert (=> b!140433 m!167859))

(assert (=> b!140433 m!166443))

(declare-fun m!167861 () Bool)

(assert (=> b!140433 m!167861))

(assert (=> b!140433 m!167709))

(declare-fun m!167863 () Bool)

(assert (=> b!140433 m!167863))

(assert (=> b!140433 m!166443))

(assert (=> b!140433 m!167859))

(assert (=> d!43397 d!43725))

(declare-fun b!140450 () Bool)

(declare-fun e!91573 () (_ BitVec 32))

(assert (=> b!140450 (= e!91573 #b00000000000000000000000000000000)))

(declare-fun b!140451 () Bool)

(declare-fun e!91574 () (_ BitVec 32))

(declare-fun call!15604 () (_ BitVec 32))

(assert (=> b!140451 (= e!91574 call!15604)))

(declare-fun bm!15601 () Bool)

(assert (=> bm!15601 (= call!15604 (arrayCountValidKeys!0 lt!73246 (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)))))

(declare-fun lt!73652 () (_ BitVec 32))

(declare-fun d!43727 () Bool)

(assert (=> d!43727 (and (bvsge lt!73652 #b00000000000000000000000000000000) (bvsle lt!73652 (bvsub (size!2587 lt!73246) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (=> d!43727 (= lt!73652 e!91573)))

(declare-fun c!26307 () Bool)

(assert (=> d!43727 (= c!26307 (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)))))

(assert (=> d!43727 (and (bvsle (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) (size!2587 lt!73246)))))

(assert (=> d!43727 (= (arrayCountValidKeys!0 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) lt!73652)))

(declare-fun b!140452 () Bool)

(assert (=> b!140452 (= e!91573 e!91574)))

(declare-fun c!26308 () Bool)

(assert (=> b!140452 (= c!26308 (validKeyInArray!0 (select (arr!2315 lt!73246) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(declare-fun b!140453 () Bool)

(assert (=> b!140453 (= e!91574 (bvadd #b00000000000000000000000000000001 call!15604))))

(assert (= (and d!43727 c!26307) b!140450))

(assert (= (and d!43727 (not c!26307)) b!140452))

(assert (= (and b!140452 c!26308) b!140453))

(assert (= (and b!140452 (not c!26308)) b!140451))

(assert (= (or b!140453 b!140451) bm!15601))

(declare-fun m!167865 () Bool)

(assert (=> bm!15601 m!167865))

(assert (=> b!140452 m!167801))

(assert (=> b!140452 m!167801))

(assert (=> b!140452 m!167803))

(assert (=> d!43397 d!43727))

(declare-fun b!140463 () Bool)

(declare-fun res!67149 () Bool)

(declare-fun e!91579 () Bool)

(assert (=> b!140463 (=> (not res!67149) (not e!91579))))

(assert (=> b!140463 (= res!67149 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!140465 () Bool)

(declare-fun e!91580 () Bool)

(assert (=> b!140465 (= e!91580 (= (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!43729 () Bool)

(assert (=> d!43729 e!91580))

(declare-fun res!67146 () Bool)

(assert (=> d!43729 (=> (not res!67146) (not e!91580))))

(assert (=> d!43729 (= res!67146 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 (_keys!4699 newMap!16)))))))

(declare-fun lt!73655 () Unit!4373)

(declare-fun choose!1 (array!4897 (_ BitVec 32) (_ BitVec 64)) Unit!4373)

(assert (=> d!43729 (= lt!73655 (choose!1 (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43729 e!91579))

(declare-fun res!67147 () Bool)

(assert (=> d!43729 (=> (not res!67147) (not e!91579))))

(assert (=> d!43729 (= res!67147 (and (bvsge (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000000) (bvslt (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (size!2587 (_keys!4699 newMap!16)))))))

(assert (=> d!43729 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73655)))

(declare-fun b!140462 () Bool)

(declare-fun res!67148 () Bool)

(assert (=> b!140462 (=> (not res!67148) (not e!91579))))

(assert (=> b!140462 (= res!67148 (not (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))))

(declare-fun b!140464 () Bool)

(assert (=> b!140464 (= e!91579 (bvslt (size!2587 (_keys!4699 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!43729 res!67147) b!140462))

(assert (= (and b!140462 res!67148) b!140463))

(assert (= (and b!140463 res!67149) b!140464))

(assert (= (and d!43729 res!67146) b!140465))

(assert (=> b!140463 m!166013))

(assert (=> b!140463 m!166159))

(assert (=> b!140465 m!166671))

(assert (=> b!140465 m!166653))

(assert (=> b!140465 m!166091))

(assert (=> d!43729 m!166013))

(declare-fun m!167867 () Bool)

(assert (=> d!43729 m!167867))

(declare-fun m!167869 () Bool)

(assert (=> b!140462 m!167869))

(assert (=> b!140462 m!167869))

(declare-fun m!167871 () Bool)

(assert (=> b!140462 m!167871))

(assert (=> d!43397 d!43729))

(declare-fun d!43731 () Bool)

(declare-fun e!91581 () Bool)

(assert (=> d!43731 e!91581))

(declare-fun res!67150 () Bool)

(assert (=> d!43731 (=> res!67150 e!91581)))

(declare-fun lt!73658 () Bool)

(assert (=> d!43731 (= res!67150 (not lt!73658))))

(declare-fun lt!73656 () Bool)

(assert (=> d!43731 (= lt!73658 lt!73656)))

(declare-fun lt!73657 () Unit!4373)

(declare-fun e!91582 () Unit!4373)

(assert (=> d!43731 (= lt!73657 e!91582)))

(declare-fun c!26309 () Bool)

(assert (=> d!43731 (= c!26309 lt!73656)))

(assert (=> d!43731 (= lt!73656 (containsKey!180 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(assert (=> d!43731 (= (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))) lt!73658)))

(declare-fun b!140466 () Bool)

(declare-fun lt!73659 () Unit!4373)

(assert (=> b!140466 (= e!91582 lt!73659)))

(assert (=> b!140466 (= lt!73659 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(assert (=> b!140466 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(declare-fun b!140467 () Bool)

(declare-fun Unit!4418 () Unit!4373)

(assert (=> b!140467 (= e!91582 Unit!4418)))

(declare-fun b!140468 () Bool)

(assert (=> b!140468 (= e!91581 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!43731 c!26309) b!140466))

(assert (= (and d!43731 (not c!26309)) b!140467))

(assert (= (and d!43731 (not res!67150)) b!140468))

(assert (=> d!43731 m!166199))

(declare-fun m!167873 () Bool)

(assert (=> d!43731 m!167873))

(assert (=> b!140466 m!166199))

(declare-fun m!167875 () Bool)

(assert (=> b!140466 m!167875))

(assert (=> b!140466 m!166199))

(declare-fun m!167877 () Bool)

(assert (=> b!140466 m!167877))

(assert (=> b!140466 m!167877))

(declare-fun m!167879 () Bool)

(assert (=> b!140466 m!167879))

(assert (=> b!140468 m!166199))

(assert (=> b!140468 m!167877))

(assert (=> b!140468 m!167877))

(assert (=> b!140468 m!167879))

(assert (=> b!139739 d!43731))

(declare-fun b!140469 () Bool)

(declare-fun e!91591 () Unit!4373)

(declare-fun lt!73681 () Unit!4373)

(assert (=> b!140469 (= e!91591 lt!73681)))

(declare-fun lt!73675 () ListLongMap!1745)

(assert (=> b!140469 (= lt!73675 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73677 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73677 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73676 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73676 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73679 () Unit!4373)

(assert (=> b!140469 (= lt!73679 (addStillContains!96 lt!73675 lt!73677 (zeroValue!2790 newMap!16) lt!73676))))

(assert (=> b!140469 (contains!923 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))) lt!73676)))

(declare-fun lt!73670 () Unit!4373)

(assert (=> b!140469 (= lt!73670 lt!73679)))

(declare-fun lt!73678 () ListLongMap!1745)

(assert (=> b!140469 (= lt!73678 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73674 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73674 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73673 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73673 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73669 () Unit!4373)

(assert (=> b!140469 (= lt!73669 (addApplyDifferent!96 lt!73678 lt!73674 (minValue!2790 newMap!16) lt!73673))))

(assert (=> b!140469 (= (apply!120 (+!179 lt!73678 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))) lt!73673) (apply!120 lt!73678 lt!73673))))

(declare-fun lt!73665 () Unit!4373)

(assert (=> b!140469 (= lt!73665 lt!73669)))

(declare-fun lt!73660 () ListLongMap!1745)

(assert (=> b!140469 (= lt!73660 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73664 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73664 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73661 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73661 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73672 () Unit!4373)

(assert (=> b!140469 (= lt!73672 (addApplyDifferent!96 lt!73660 lt!73664 (zeroValue!2790 newMap!16) lt!73661))))

(assert (=> b!140469 (= (apply!120 (+!179 lt!73660 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))) lt!73661) (apply!120 lt!73660 lt!73661))))

(declare-fun lt!73668 () Unit!4373)

(assert (=> b!140469 (= lt!73668 lt!73672)))

(declare-fun lt!73662 () ListLongMap!1745)

(assert (=> b!140469 (= lt!73662 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73663 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73663 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73667 () (_ BitVec 64))

(assert (=> b!140469 (= lt!73667 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140469 (= lt!73681 (addApplyDifferent!96 lt!73662 lt!73663 (minValue!2790 newMap!16) lt!73667))))

(assert (=> b!140469 (= (apply!120 (+!179 lt!73662 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))) lt!73667) (apply!120 lt!73662 lt!73667))))

(declare-fun b!140470 () Bool)

(declare-fun e!91595 () ListLongMap!1745)

(declare-fun call!15605 () ListLongMap!1745)

(assert (=> b!140470 (= e!91595 call!15605)))

(declare-fun b!140471 () Bool)

(declare-fun e!91583 () Bool)

(assert (=> b!140471 (= e!91583 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140472 () Bool)

(declare-fun e!91587 () Bool)

(declare-fun call!15610 () Bool)

(assert (=> b!140472 (= e!91587 (not call!15610))))

(declare-fun lt!73680 () ListLongMap!1745)

(declare-fun e!91590 () Bool)

(declare-fun b!140473 () Bool)

(assert (=> b!140473 (= e!91590 (= (apply!120 lt!73680 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 lt!72983)))))

(assert (=> b!140473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15602 () Bool)

(assert (=> bm!15602 (= call!15610 (contains!923 lt!73680 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15603 () Bool)

(declare-fun call!15609 () ListLongMap!1745)

(assert (=> bm!15603 (= call!15605 call!15609)))

(declare-fun b!140475 () Bool)

(declare-fun e!91588 () Bool)

(declare-fun call!15607 () Bool)

(assert (=> b!140475 (= e!91588 (not call!15607))))

(declare-fun b!140476 () Bool)

(declare-fun e!91586 () Bool)

(assert (=> b!140476 (= e!91586 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140477 () Bool)

(declare-fun res!67151 () Bool)

(declare-fun e!91584 () Bool)

(assert (=> b!140477 (=> (not res!67151) (not e!91584))))

(assert (=> b!140477 (= res!67151 e!91588)))

(declare-fun c!26315 () Bool)

(assert (=> b!140477 (= c!26315 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140478 () Bool)

(declare-fun res!67156 () Bool)

(assert (=> b!140478 (=> (not res!67156) (not e!91584))))

(declare-fun e!91594 () Bool)

(assert (=> b!140478 (= res!67156 e!91594)))

(declare-fun res!67155 () Bool)

(assert (=> b!140478 (=> res!67155 e!91594)))

(assert (=> b!140478 (= res!67155 (not e!91586))))

(declare-fun res!67152 () Bool)

(assert (=> b!140478 (=> (not res!67152) (not e!91586))))

(assert (=> b!140478 (= res!67152 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140479 () Bool)

(declare-fun e!91592 () Bool)

(assert (=> b!140479 (= e!91592 (= (apply!120 lt!73680 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun b!140480 () Bool)

(declare-fun e!91593 () ListLongMap!1745)

(assert (=> b!140480 (= e!91593 (+!179 call!15609 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!140481 () Bool)

(declare-fun e!91585 () ListLongMap!1745)

(declare-fun call!15611 () ListLongMap!1745)

(assert (=> b!140481 (= e!91585 call!15611)))

(declare-fun b!140482 () Bool)

(assert (=> b!140482 (= e!91584 e!91587)))

(declare-fun c!26311 () Bool)

(assert (=> b!140482 (= c!26311 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140483 () Bool)

(declare-fun c!26313 () Bool)

(assert (=> b!140483 (= c!26313 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140483 (= e!91595 e!91585)))

(declare-fun b!140484 () Bool)

(assert (=> b!140484 (= e!91593 e!91595)))

(declare-fun c!26314 () Bool)

(assert (=> b!140484 (= c!26314 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140485 () Bool)

(assert (=> b!140485 (= e!91585 call!15605)))

(declare-fun b!140486 () Bool)

(assert (=> b!140486 (= e!91594 e!91590)))

(declare-fun res!67159 () Bool)

(assert (=> b!140486 (=> (not res!67159) (not e!91590))))

(assert (=> b!140486 (= res!67159 (contains!923 lt!73680 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140486 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140474 () Bool)

(assert (=> b!140474 (= e!91587 e!91592)))

(declare-fun res!67153 () Bool)

(assert (=> b!140474 (= res!67153 call!15610)))

(assert (=> b!140474 (=> (not res!67153) (not e!91592))))

(declare-fun d!43733 () Bool)

(assert (=> d!43733 e!91584))

(declare-fun res!67157 () Bool)

(assert (=> d!43733 (=> (not res!67157) (not e!91584))))

(assert (=> d!43733 (= res!67157 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73671 () ListLongMap!1745)

(assert (=> d!43733 (= lt!73680 lt!73671)))

(declare-fun lt!73666 () Unit!4373)

(assert (=> d!43733 (= lt!73666 e!91591)))

(declare-fun c!26310 () Bool)

(assert (=> d!43733 (= c!26310 e!91583)))

(declare-fun res!67158 () Bool)

(assert (=> d!43733 (=> (not res!67158) (not e!91583))))

(assert (=> d!43733 (= res!67158 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43733 (= lt!73671 e!91593)))

(declare-fun c!26312 () Bool)

(assert (=> d!43733 (= c!26312 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43733 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43733 (= (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73680)))

(declare-fun b!140487 () Bool)

(declare-fun e!91589 () Bool)

(assert (=> b!140487 (= e!91589 (= (apply!120 lt!73680 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15604 () Bool)

(declare-fun call!15606 () ListLongMap!1745)

(declare-fun call!15608 () ListLongMap!1745)

(assert (=> bm!15604 (= call!15606 call!15608)))

(declare-fun bm!15605 () Bool)

(assert (=> bm!15605 (= call!15611 call!15606)))

(declare-fun b!140488 () Bool)

(assert (=> b!140488 (= e!91588 e!91589)))

(declare-fun res!67154 () Bool)

(assert (=> b!140488 (= res!67154 call!15607)))

(assert (=> b!140488 (=> (not res!67154) (not e!91589))))

(declare-fun bm!15606 () Bool)

(assert (=> bm!15606 (= call!15608 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15607 () Bool)

(assert (=> bm!15607 (= call!15609 (+!179 (ite c!26312 call!15608 (ite c!26314 call!15606 call!15611)) (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140489 () Bool)

(declare-fun Unit!4419 () Unit!4373)

(assert (=> b!140489 (= e!91591 Unit!4419)))

(declare-fun bm!15608 () Bool)

(assert (=> bm!15608 (= call!15607 (contains!923 lt!73680 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43733 c!26312) b!140480))

(assert (= (and d!43733 (not c!26312)) b!140484))

(assert (= (and b!140484 c!26314) b!140470))

(assert (= (and b!140484 (not c!26314)) b!140483))

(assert (= (and b!140483 c!26313) b!140485))

(assert (= (and b!140483 (not c!26313)) b!140481))

(assert (= (or b!140485 b!140481) bm!15605))

(assert (= (or b!140470 bm!15605) bm!15604))

(assert (= (or b!140470 b!140485) bm!15603))

(assert (= (or b!140480 bm!15604) bm!15606))

(assert (= (or b!140480 bm!15603) bm!15607))

(assert (= (and d!43733 res!67158) b!140471))

(assert (= (and d!43733 c!26310) b!140469))

(assert (= (and d!43733 (not c!26310)) b!140489))

(assert (= (and d!43733 res!67157) b!140478))

(assert (= (and b!140478 res!67152) b!140476))

(assert (= (and b!140478 (not res!67155)) b!140486))

(assert (= (and b!140486 res!67159) b!140473))

(assert (= (and b!140478 res!67156) b!140477))

(assert (= (and b!140477 c!26315) b!140488))

(assert (= (and b!140477 (not c!26315)) b!140475))

(assert (= (and b!140488 res!67154) b!140487))

(assert (= (or b!140488 b!140475) bm!15608))

(assert (= (and b!140477 res!67151) b!140482))

(assert (= (and b!140482 c!26311) b!140474))

(assert (= (and b!140482 (not c!26311)) b!140472))

(assert (= (and b!140474 res!67153) b!140479))

(assert (= (or b!140474 b!140472) bm!15602))

(declare-fun b_lambda!6285 () Bool)

(assert (=> (not b_lambda!6285) (not b!140473)))

(assert (=> b!140473 t!6337))

(declare-fun b_and!8787 () Bool)

(assert (= b_and!8783 (and (=> t!6337 result!4191) b_and!8787)))

(assert (=> b!140473 t!6339))

(declare-fun b_and!8789 () Bool)

(assert (= b_and!8785 (and (=> t!6339 result!4193) b_and!8789)))

(declare-fun m!167881 () Bool)

(assert (=> b!140469 m!167881))

(declare-fun m!167883 () Bool)

(assert (=> b!140469 m!167883))

(declare-fun m!167885 () Bool)

(assert (=> b!140469 m!167885))

(declare-fun m!167887 () Bool)

(assert (=> b!140469 m!167887))

(declare-fun m!167889 () Bool)

(assert (=> b!140469 m!167889))

(declare-fun m!167891 () Bool)

(assert (=> b!140469 m!167891))

(declare-fun m!167893 () Bool)

(assert (=> b!140469 m!167893))

(declare-fun m!167895 () Bool)

(assert (=> b!140469 m!167895))

(declare-fun m!167897 () Bool)

(assert (=> b!140469 m!167897))

(declare-fun m!167899 () Bool)

(assert (=> b!140469 m!167899))

(declare-fun m!167901 () Bool)

(assert (=> b!140469 m!167901))

(assert (=> b!140469 m!167891))

(assert (=> b!140469 m!167899))

(assert (=> b!140469 m!166385))

(declare-fun m!167903 () Bool)

(assert (=> b!140469 m!167903))

(assert (=> b!140469 m!167889))

(declare-fun m!167905 () Bool)

(assert (=> b!140469 m!167905))

(declare-fun m!167907 () Bool)

(assert (=> b!140469 m!167907))

(declare-fun m!167909 () Bool)

(assert (=> b!140469 m!167909))

(assert (=> b!140469 m!167907))

(declare-fun m!167911 () Bool)

(assert (=> b!140469 m!167911))

(declare-fun m!167913 () Bool)

(assert (=> b!140479 m!167913))

(declare-fun m!167915 () Bool)

(assert (=> bm!15602 m!167915))

(assert (=> d!43733 m!166429))

(assert (=> b!140486 m!166385))

(assert (=> b!140486 m!166385))

(declare-fun m!167917 () Bool)

(assert (=> b!140486 m!167917))

(assert (=> b!140471 m!166385))

(assert (=> b!140471 m!166385))

(assert (=> b!140471 m!166389))

(assert (=> bm!15606 m!167881))

(declare-fun m!167919 () Bool)

(assert (=> b!140480 m!167919))

(declare-fun m!167921 () Bool)

(assert (=> b!140487 m!167921))

(assert (=> b!140476 m!166385))

(assert (=> b!140476 m!166385))

(assert (=> b!140476 m!166389))

(declare-fun m!167923 () Bool)

(assert (=> bm!15607 m!167923))

(declare-fun m!167925 () Bool)

(assert (=> bm!15608 m!167925))

(assert (=> b!140473 m!166385))

(declare-fun m!167927 () Bool)

(assert (=> b!140473 m!167927))

(assert (=> b!140473 m!166443))

(declare-fun m!167929 () Bool)

(assert (=> b!140473 m!167929))

(assert (=> b!140473 m!166385))

(declare-fun m!167931 () Bool)

(assert (=> b!140473 m!167931))

(assert (=> b!140473 m!166443))

(assert (=> b!140473 m!167927))

(assert (=> b!139739 d!43733))

(assert (=> d!43413 d!43289))

(declare-fun b!140490 () Bool)

(declare-fun e!91604 () Unit!4373)

(declare-fun lt!73703 () Unit!4373)

(assert (=> b!140490 (= e!91604 lt!73703)))

(declare-fun lt!73697 () ListLongMap!1745)

(assert (=> b!140490 (= lt!73697 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun lt!73699 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73699 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73698 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73698 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))

(declare-fun lt!73701 () Unit!4373)

(assert (=> b!140490 (= lt!73701 (addStillContains!96 lt!73697 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73698))))

(assert (=> b!140490 (contains!923 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73698)))

(declare-fun lt!73692 () Unit!4373)

(assert (=> b!140490 (= lt!73692 lt!73701)))

(declare-fun lt!73700 () ListLongMap!1745)

(assert (=> b!140490 (= lt!73700 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun lt!73696 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73696 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73695 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73695 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))

(declare-fun lt!73691 () Unit!4373)

(assert (=> b!140490 (= lt!73691 (addApplyDifferent!96 lt!73700 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73695))))

(assert (=> b!140490 (= (apply!120 (+!179 lt!73700 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73695) (apply!120 lt!73700 lt!73695))))

(declare-fun lt!73687 () Unit!4373)

(assert (=> b!140490 (= lt!73687 lt!73691)))

(declare-fun lt!73682 () ListLongMap!1745)

(assert (=> b!140490 (= lt!73682 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun lt!73686 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73686 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73683 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73683 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))

(declare-fun lt!73694 () Unit!4373)

(assert (=> b!140490 (= lt!73694 (addApplyDifferent!96 lt!73682 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73683))))

(assert (=> b!140490 (= (apply!120 (+!179 lt!73682 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73683) (apply!120 lt!73682 lt!73683))))

(declare-fun lt!73690 () Unit!4373)

(assert (=> b!140490 (= lt!73690 lt!73694)))

(declare-fun lt!73684 () ListLongMap!1745)

(assert (=> b!140490 (= lt!73684 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun lt!73685 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73685 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73689 () (_ BitVec 64))

(assert (=> b!140490 (= lt!73689 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))

(assert (=> b!140490 (= lt!73703 (addApplyDifferent!96 lt!73684 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73689))))

(assert (=> b!140490 (= (apply!120 (+!179 lt!73684 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73689) (apply!120 lt!73684 lt!73689))))

(declare-fun b!140491 () Bool)

(declare-fun e!91608 () ListLongMap!1745)

(declare-fun call!15612 () ListLongMap!1745)

(assert (=> b!140491 (= e!91608 call!15612)))

(declare-fun b!140492 () Bool)

(declare-fun e!91596 () Bool)

(assert (=> b!140492 (= e!91596 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(declare-fun b!140493 () Bool)

(declare-fun e!91600 () Bool)

(declare-fun call!15617 () Bool)

(assert (=> b!140493 (= e!91600 (not call!15617))))

(declare-fun b!140494 () Bool)

(declare-fun lt!73702 () ListLongMap!1745)

(declare-fun e!91603 () Bool)

(assert (=> b!140494 (= e!91603 (= (apply!120 lt!73702 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140494 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (=> b!140494 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun bm!15609 () Bool)

(assert (=> bm!15609 (= call!15617 (contains!923 lt!73702 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15610 () Bool)

(declare-fun call!15616 () ListLongMap!1745)

(assert (=> bm!15610 (= call!15612 call!15616)))

(declare-fun b!140496 () Bool)

(declare-fun e!91601 () Bool)

(declare-fun call!15614 () Bool)

(assert (=> b!140496 (= e!91601 (not call!15614))))

(declare-fun b!140497 () Bool)

(declare-fun e!91599 () Bool)

(assert (=> b!140497 (= e!91599 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(declare-fun b!140498 () Bool)

(declare-fun res!67160 () Bool)

(declare-fun e!91597 () Bool)

(assert (=> b!140498 (=> (not res!67160) (not e!91597))))

(assert (=> b!140498 (= res!67160 e!91601)))

(declare-fun c!26321 () Bool)

(assert (=> b!140498 (= c!26321 (not (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140499 () Bool)

(declare-fun res!67165 () Bool)

(assert (=> b!140499 (=> (not res!67165) (not e!91597))))

(declare-fun e!91607 () Bool)

(assert (=> b!140499 (= res!67165 e!91607)))

(declare-fun res!67164 () Bool)

(assert (=> b!140499 (=> res!67164 e!91607)))

(assert (=> b!140499 (= res!67164 (not e!91599))))

(declare-fun res!67161 () Bool)

(assert (=> b!140499 (=> (not res!67161) (not e!91599))))

(assert (=> b!140499 (= res!67161 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun b!140500 () Bool)

(declare-fun e!91605 () Bool)

(assert (=> b!140500 (= e!91605 (= (apply!120 lt!73702 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun b!140501 () Bool)

(declare-fun e!91606 () ListLongMap!1745)

(assert (=> b!140501 (= e!91606 (+!179 call!15616 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun b!140502 () Bool)

(declare-fun e!91598 () ListLongMap!1745)

(declare-fun call!15618 () ListLongMap!1745)

(assert (=> b!140502 (= e!91598 call!15618)))

(declare-fun b!140503 () Bool)

(assert (=> b!140503 (= e!91597 e!91600)))

(declare-fun c!26317 () Bool)

(assert (=> b!140503 (= c!26317 (not (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!26319 () Bool)

(declare-fun b!140504 () Bool)

(assert (=> b!140504 (= c!26319 (and (not (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140504 (= e!91608 e!91598)))

(declare-fun b!140505 () Bool)

(assert (=> b!140505 (= e!91606 e!91608)))

(declare-fun c!26320 () Bool)

(assert (=> b!140505 (= c!26320 (and (not (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140506 () Bool)

(assert (=> b!140506 (= e!91598 call!15612)))

(declare-fun b!140507 () Bool)

(assert (=> b!140507 (= e!91607 e!91603)))

(declare-fun res!67168 () Bool)

(assert (=> b!140507 (=> (not res!67168) (not e!91603))))

(assert (=> b!140507 (= res!67168 (contains!923 lt!73702 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(assert (=> b!140507 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun b!140495 () Bool)

(assert (=> b!140495 (= e!91600 e!91605)))

(declare-fun res!67162 () Bool)

(assert (=> b!140495 (= res!67162 call!15617)))

(assert (=> b!140495 (=> (not res!67162) (not e!91605))))

(declare-fun d!43735 () Bool)

(assert (=> d!43735 e!91597))

(declare-fun res!67166 () Bool)

(assert (=> d!43735 (=> (not res!67166) (not e!91597))))

(assert (=> d!43735 (= res!67166 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun lt!73693 () ListLongMap!1745)

(assert (=> d!43735 (= lt!73702 lt!73693)))

(declare-fun lt!73688 () Unit!4373)

(assert (=> d!43735 (= lt!73688 e!91604)))

(declare-fun c!26316 () Bool)

(assert (=> d!43735 (= c!26316 e!91596)))

(declare-fun res!67167 () Bool)

(assert (=> d!43735 (=> (not res!67167) (not e!91596))))

(assert (=> d!43735 (= res!67167 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (=> d!43735 (= lt!73693 e!91606)))

(declare-fun c!26318 () Bool)

(assert (=> d!43735 (= c!26318 (and (not (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43735 (validMask!0 (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))

(assert (=> d!43735 (= (getCurrentListMap!561 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))) lt!73702)))

(declare-fun b!140508 () Bool)

(declare-fun e!91602 () Bool)

(assert (=> b!140508 (= e!91602 (= (apply!120 lt!73702 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun bm!15611 () Bool)

(declare-fun call!15613 () ListLongMap!1745)

(declare-fun call!15615 () ListLongMap!1745)

(assert (=> bm!15611 (= call!15613 call!15615)))

(declare-fun bm!15612 () Bool)

(assert (=> bm!15612 (= call!15618 call!15613)))

(declare-fun b!140509 () Bool)

(assert (=> b!140509 (= e!91601 e!91602)))

(declare-fun res!67163 () Bool)

(assert (=> b!140509 (= res!67163 call!15614)))

(assert (=> b!140509 (=> (not res!67163) (not e!91602))))

(declare-fun bm!15613 () Bool)

(assert (=> bm!15613 (= call!15615 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun bm!15614 () Bool)

(assert (=> bm!15614 (= call!15616 (+!179 (ite c!26318 call!15615 (ite c!26320 call!15613 call!15618)) (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(declare-fun b!140510 () Bool)

(declare-fun Unit!4420 () Unit!4373)

(assert (=> b!140510 (= e!91604 Unit!4420)))

(declare-fun bm!15615 () Bool)

(assert (=> bm!15615 (= call!15614 (contains!923 lt!73702 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43735 c!26318) b!140501))

(assert (= (and d!43735 (not c!26318)) b!140505))

(assert (= (and b!140505 c!26320) b!140491))

(assert (= (and b!140505 (not c!26320)) b!140504))

(assert (= (and b!140504 c!26319) b!140506))

(assert (= (and b!140504 (not c!26319)) b!140502))

(assert (= (or b!140506 b!140502) bm!15612))

(assert (= (or b!140491 bm!15612) bm!15611))

(assert (= (or b!140491 b!140506) bm!15610))

(assert (= (or b!140501 bm!15611) bm!15613))

(assert (= (or b!140501 bm!15610) bm!15614))

(assert (= (and d!43735 res!67167) b!140492))

(assert (= (and d!43735 c!26316) b!140490))

(assert (= (and d!43735 (not c!26316)) b!140510))

(assert (= (and d!43735 res!67166) b!140499))

(assert (= (and b!140499 res!67161) b!140497))

(assert (= (and b!140499 (not res!67164)) b!140507))

(assert (= (and b!140507 res!67168) b!140494))

(assert (= (and b!140499 res!67165) b!140498))

(assert (= (and b!140498 c!26321) b!140509))

(assert (= (and b!140498 (not c!26321)) b!140496))

(assert (= (and b!140509 res!67163) b!140508))

(assert (= (or b!140509 b!140496) bm!15615))

(assert (= (and b!140498 res!67160) b!140503))

(assert (= (and b!140503 c!26317) b!140495))

(assert (= (and b!140503 (not c!26317)) b!140493))

(assert (= (and b!140495 res!67162) b!140500))

(assert (= (or b!140495 b!140493) bm!15609))

(declare-fun b_lambda!6287 () Bool)

(assert (=> (not b_lambda!6287) (not b!140494)))

(declare-fun tb!2561 () Bool)

(declare-fun t!6345 () Bool)

(assert (=> (and b!139297 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))) t!6345) tb!2561))

(declare-fun result!4199 () Bool)

(assert (=> tb!2561 (= result!4199 tp_is_empty!2931)))

(assert (=> b!140494 t!6345))

(declare-fun b_and!8791 () Bool)

(assert (= b_and!8787 (and (=> t!6345 result!4199) b_and!8791)))

(declare-fun t!6347 () Bool)

(declare-fun tb!2563 () Bool)

(assert (=> (and b!139291 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))) t!6347) tb!2563))

(declare-fun result!4201 () Bool)

(assert (= result!4201 result!4199))

(assert (=> b!140494 t!6347))

(declare-fun b_and!8793 () Bool)

(assert (= b_and!8789 (and (=> t!6347 result!4201) b_and!8793)))

(declare-fun m!167933 () Bool)

(assert (=> b!140490 m!167933))

(declare-fun m!167935 () Bool)

(assert (=> b!140490 m!167935))

(declare-fun m!167937 () Bool)

(assert (=> b!140490 m!167937))

(declare-fun m!167939 () Bool)

(assert (=> b!140490 m!167939))

(declare-fun m!167941 () Bool)

(assert (=> b!140490 m!167941))

(declare-fun m!167943 () Bool)

(assert (=> b!140490 m!167943))

(declare-fun m!167945 () Bool)

(assert (=> b!140490 m!167945))

(declare-fun m!167947 () Bool)

(assert (=> b!140490 m!167947))

(declare-fun m!167949 () Bool)

(assert (=> b!140490 m!167949))

(declare-fun m!167951 () Bool)

(assert (=> b!140490 m!167951))

(declare-fun m!167953 () Bool)

(assert (=> b!140490 m!167953))

(assert (=> b!140490 m!167943))

(assert (=> b!140490 m!167951))

(declare-fun m!167955 () Bool)

(assert (=> b!140490 m!167955))

(declare-fun m!167957 () Bool)

(assert (=> b!140490 m!167957))

(assert (=> b!140490 m!167941))

(declare-fun m!167959 () Bool)

(assert (=> b!140490 m!167959))

(declare-fun m!167961 () Bool)

(assert (=> b!140490 m!167961))

(declare-fun m!167963 () Bool)

(assert (=> b!140490 m!167963))

(assert (=> b!140490 m!167961))

(declare-fun m!167965 () Bool)

(assert (=> b!140490 m!167965))

(declare-fun m!167967 () Bool)

(assert (=> b!140500 m!167967))

(declare-fun m!167969 () Bool)

(assert (=> bm!15609 m!167969))

(declare-fun m!167971 () Bool)

(assert (=> d!43735 m!167971))

(assert (=> b!140507 m!167955))

(assert (=> b!140507 m!167955))

(declare-fun m!167973 () Bool)

(assert (=> b!140507 m!167973))

(assert (=> b!140492 m!167955))

(assert (=> b!140492 m!167955))

(declare-fun m!167975 () Bool)

(assert (=> b!140492 m!167975))

(assert (=> bm!15613 m!167933))

(declare-fun m!167977 () Bool)

(assert (=> b!140501 m!167977))

(declare-fun m!167979 () Bool)

(assert (=> b!140508 m!167979))

(assert (=> b!140497 m!167955))

(assert (=> b!140497 m!167955))

(assert (=> b!140497 m!167975))

(declare-fun m!167981 () Bool)

(assert (=> bm!15614 m!167981))

(declare-fun m!167983 () Bool)

(assert (=> bm!15615 m!167983))

(assert (=> b!140494 m!167955))

(declare-fun m!167985 () Bool)

(assert (=> b!140494 m!167985))

(declare-fun m!167987 () Bool)

(assert (=> b!140494 m!167987))

(declare-fun m!167989 () Bool)

(assert (=> b!140494 m!167989))

(assert (=> b!140494 m!167955))

(declare-fun m!167991 () Bool)

(assert (=> b!140494 m!167991))

(assert (=> b!140494 m!167987))

(assert (=> b!140494 m!167985))

(assert (=> d!43427 d!43735))

(declare-fun b!140514 () Bool)

(declare-fun e!91610 () Option!182)

(assert (=> b!140514 (= e!91610 None!180)))

(declare-fun b!140511 () Bool)

(declare-fun e!91609 () Option!182)

(assert (=> b!140511 (= e!91609 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73031)))))))

(declare-fun b!140512 () Bool)

(assert (=> b!140512 (= e!91609 e!91610)))

(declare-fun c!26323 () Bool)

(assert (=> b!140512 (= c!26323 (and ((_ is Cons!1741) (toList!888 lt!73031)) (not (= (_1!1360 (h!2348 (toList!888 lt!73031))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26322 () Bool)

(declare-fun d!43737 () Bool)

(assert (=> d!43737 (= c!26322 (and ((_ is Cons!1741) (toList!888 lt!73031)) (= (_1!1360 (h!2348 (toList!888 lt!73031))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43737 (= (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91609)))

(declare-fun b!140513 () Bool)

(assert (=> b!140513 (= e!91610 (getValueByKey!176 (t!6329 (toList!888 lt!73031)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43737 c!26322) b!140511))

(assert (= (and d!43737 (not c!26322)) b!140512))

(assert (= (and b!140512 c!26323) b!140513))

(assert (= (and b!140512 (not c!26323)) b!140514))

(declare-fun m!167993 () Bool)

(assert (=> b!140513 m!167993))

(assert (=> b!139601 d!43737))

(declare-fun b!140518 () Bool)

(declare-fun e!91612 () Option!182)

(assert (=> b!140518 (= e!91612 None!180)))

(declare-fun b!140515 () Bool)

(declare-fun e!91611 () Option!182)

(assert (=> b!140515 (= e!91611 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73059)))))))

(declare-fun b!140516 () Bool)

(assert (=> b!140516 (= e!91611 e!91612)))

(declare-fun c!26325 () Bool)

(assert (=> b!140516 (= c!26325 (and ((_ is Cons!1741) (toList!888 lt!73059)) (not (= (_1!1360 (h!2348 (toList!888 lt!73059))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!43739 () Bool)

(declare-fun c!26324 () Bool)

(assert (=> d!43739 (= c!26324 (and ((_ is Cons!1741) (toList!888 lt!73059)) (= (_1!1360 (h!2348 (toList!888 lt!73059))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43739 (= (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91611)))

(declare-fun b!140517 () Bool)

(assert (=> b!140517 (= e!91612 (getValueByKey!176 (t!6329 (toList!888 lt!73059)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43739 c!26324) b!140515))

(assert (= (and d!43739 (not c!26324)) b!140516))

(assert (= (and b!140516 c!26325) b!140517))

(assert (= (and b!140516 (not c!26325)) b!140518))

(declare-fun m!167995 () Bool)

(assert (=> b!140517 m!167995))

(assert (=> b!139643 d!43739))

(declare-fun d!43741 () Bool)

(assert (=> d!43741 (= (get!1531 (getValueByKey!176 (toList!888 lt!72889) lt!72894)) (v!3284 (getValueByKey!176 (toList!888 lt!72889) lt!72894)))))

(assert (=> d!43311 d!43741))

(declare-fun b!140522 () Bool)

(declare-fun e!91614 () Option!182)

(assert (=> b!140522 (= e!91614 None!180)))

(declare-fun b!140519 () Bool)

(declare-fun e!91613 () Option!182)

(assert (=> b!140519 (= e!91613 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72889)))))))

(declare-fun b!140520 () Bool)

(assert (=> b!140520 (= e!91613 e!91614)))

(declare-fun c!26327 () Bool)

(assert (=> b!140520 (= c!26327 (and ((_ is Cons!1741) (toList!888 lt!72889)) (not (= (_1!1360 (h!2348 (toList!888 lt!72889))) lt!72894))))))

(declare-fun d!43743 () Bool)

(declare-fun c!26326 () Bool)

(assert (=> d!43743 (= c!26326 (and ((_ is Cons!1741) (toList!888 lt!72889)) (= (_1!1360 (h!2348 (toList!888 lt!72889))) lt!72894)))))

(assert (=> d!43743 (= (getValueByKey!176 (toList!888 lt!72889) lt!72894) e!91613)))

(declare-fun b!140521 () Bool)

(assert (=> b!140521 (= e!91614 (getValueByKey!176 (t!6329 (toList!888 lt!72889)) lt!72894))))

(assert (= (and d!43743 c!26326) b!140519))

(assert (= (and d!43743 (not c!26326)) b!140520))

(assert (= (and b!140520 c!26327) b!140521))

(assert (= (and b!140520 (not c!26327)) b!140522))

(declare-fun m!167997 () Bool)

(assert (=> b!140521 m!167997))

(assert (=> d!43311 d!43743))

(declare-fun bm!15616 () Bool)

(declare-fun call!15619 () Bool)

(declare-fun c!26328 () Bool)

(assert (=> bm!15616 (= call!15619 (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26328 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743))))))

(declare-fun b!140523 () Bool)

(declare-fun e!91618 () Bool)

(assert (=> b!140523 (= e!91618 call!15619)))

(declare-fun b!140525 () Bool)

(assert (=> b!140525 (= e!91618 call!15619)))

(declare-fun b!140526 () Bool)

(declare-fun e!91615 () Bool)

(declare-fun e!91616 () Bool)

(assert (=> b!140526 (= e!91615 e!91616)))

(declare-fun res!67170 () Bool)

(assert (=> b!140526 (=> (not res!67170) (not e!91616))))

(declare-fun e!91617 () Bool)

(assert (=> b!140526 (= res!67170 (not e!91617))))

(declare-fun res!67171 () Bool)

(assert (=> b!140526 (=> (not res!67171) (not e!91617))))

(assert (=> b!140526 (= res!67171 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140527 () Bool)

(assert (=> b!140527 (= e!91616 e!91618)))

(assert (=> b!140527 (= c!26328 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!43745 () Bool)

(declare-fun res!67169 () Bool)

(assert (=> d!43745 (=> res!67169 e!91615)))

(assert (=> d!43745 (= res!67169 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43745 (= (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) e!91615)))

(declare-fun b!140524 () Bool)

(assert (=> b!140524 (= e!91617 (contains!924 (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!43745 (not res!67169)) b!140526))

(assert (= (and b!140526 res!67171) b!140524))

(assert (= (and b!140526 res!67170) b!140527))

(assert (= (and b!140527 c!26328) b!140523))

(assert (= (and b!140527 (not c!26328)) b!140525))

(assert (= (or b!140523 b!140525) bm!15616))

(declare-fun m!167999 () Bool)

(assert (=> bm!15616 m!167999))

(declare-fun m!168001 () Bool)

(assert (=> bm!15616 m!168001))

(assert (=> b!140526 m!167999))

(assert (=> b!140526 m!167999))

(declare-fun m!168003 () Bool)

(assert (=> b!140526 m!168003))

(assert (=> b!140527 m!167999))

(assert (=> b!140527 m!167999))

(assert (=> b!140527 m!168003))

(assert (=> b!140524 m!167999))

(assert (=> b!140524 m!167999))

(declare-fun m!168005 () Bool)

(assert (=> b!140524 m!168005))

(assert (=> bm!15483 d!43745))

(assert (=> b!139932 d!43293))

(assert (=> d!43417 d!43409))

(assert (=> d!43417 d!43411))

(declare-fun d!43747 () Bool)

(assert (=> d!43747 (isDefined!129 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43747 true))

(declare-fun _$12!412 () Unit!4373)

(assert (=> d!43747 (= (choose!864 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) _$12!412)))

(declare-fun bs!5864 () Bool)

(assert (= bs!5864 d!43747))

(assert (=> bs!5864 m!166013))

(assert (=> bs!5864 m!166173))

(assert (=> bs!5864 m!166173))

(assert (=> bs!5864 m!166175))

(assert (=> d!43417 d!43747))

(declare-fun d!43749 () Bool)

(declare-fun res!67176 () Bool)

(declare-fun e!91623 () Bool)

(assert (=> d!43749 (=> res!67176 e!91623)))

(assert (=> d!43749 (= res!67176 (or ((_ is Nil!1742) (toList!888 lt!72825)) ((_ is Nil!1742) (t!6329 (toList!888 lt!72825)))))))

(assert (=> d!43749 (= (isStrictlySorted!325 (toList!888 lt!72825)) e!91623)))

(declare-fun b!140532 () Bool)

(declare-fun e!91624 () Bool)

(assert (=> b!140532 (= e!91623 e!91624)))

(declare-fun res!67177 () Bool)

(assert (=> b!140532 (=> (not res!67177) (not e!91624))))

(assert (=> b!140532 (= res!67177 (bvslt (_1!1360 (h!2348 (toList!888 lt!72825))) (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825))))))))

(declare-fun b!140533 () Bool)

(assert (=> b!140533 (= e!91624 (isStrictlySorted!325 (t!6329 (toList!888 lt!72825))))))

(assert (= (and d!43749 (not res!67176)) b!140532))

(assert (= (and b!140532 res!67177) b!140533))

(declare-fun m!168007 () Bool)

(assert (=> b!140533 m!168007))

(assert (=> d!43417 d!43749))

(declare-fun d!43751 () Bool)

(declare-fun e!91625 () Bool)

(assert (=> d!43751 e!91625))

(declare-fun res!67178 () Bool)

(assert (=> d!43751 (=> res!67178 e!91625)))

(declare-fun lt!73706 () Bool)

(assert (=> d!43751 (= res!67178 (not lt!73706))))

(declare-fun lt!73704 () Bool)

(assert (=> d!43751 (= lt!73706 lt!73704)))

(declare-fun lt!73705 () Unit!4373)

(declare-fun e!91626 () Unit!4373)

(assert (=> d!43751 (= lt!73705 e!91626)))

(declare-fun c!26329 () Bool)

(assert (=> d!43751 (= c!26329 lt!73704)))

(assert (=> d!43751 (= lt!73704 (containsKey!180 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43751 (= (contains!923 lt!73158 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73706)))

(declare-fun b!140534 () Bool)

(declare-fun lt!73707 () Unit!4373)

(assert (=> b!140534 (= e!91626 lt!73707)))

(assert (=> b!140534 (= lt!73707 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140534 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140535 () Bool)

(declare-fun Unit!4421 () Unit!4373)

(assert (=> b!140535 (= e!91626 Unit!4421)))

(declare-fun b!140536 () Bool)

(assert (=> b!140536 (= e!91625 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43751 c!26329) b!140534))

(assert (= (and d!43751 (not c!26329)) b!140535))

(assert (= (and d!43751 (not res!67178)) b!140536))

(declare-fun m!168009 () Bool)

(assert (=> d!43751 m!168009))

(declare-fun m!168011 () Bool)

(assert (=> b!140534 m!168011))

(declare-fun m!168013 () Bool)

(assert (=> b!140534 m!168013))

(assert (=> b!140534 m!168013))

(declare-fun m!168015 () Bool)

(assert (=> b!140534 m!168015))

(assert (=> b!140536 m!168013))

(assert (=> b!140536 m!168013))

(assert (=> b!140536 m!168015))

(assert (=> bm!15500 d!43751))

(assert (=> b!139742 d!43479))

(declare-fun d!43753 () Bool)

(declare-fun isEmpty!419 (List!1745) Bool)

(assert (=> d!43753 (= (isEmpty!417 lt!73052) (isEmpty!419 (toList!888 lt!73052)))))

(declare-fun bs!5865 () Bool)

(assert (= bs!5865 d!43753))

(declare-fun m!168017 () Bool)

(assert (=> bs!5865 m!168017))

(assert (=> b!139632 d!43753))

(declare-fun d!43755 () Bool)

(assert (=> d!43755 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139803 d!43755))

(declare-fun d!43757 () Bool)

(declare-fun res!67179 () Bool)

(declare-fun e!91627 () Bool)

(assert (=> d!43757 (=> res!67179 e!91627)))

(assert (=> d!43757 (= res!67179 (and ((_ is Cons!1741) (toList!888 call!15465)) (= (_1!1360 (h!2348 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!43757 (= (containsKey!180 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91627)))

(declare-fun b!140537 () Bool)

(declare-fun e!91628 () Bool)

(assert (=> b!140537 (= e!91627 e!91628)))

(declare-fun res!67180 () Bool)

(assert (=> b!140537 (=> (not res!67180) (not e!91628))))

(assert (=> b!140537 (= res!67180 (and (or (not ((_ is Cons!1741) (toList!888 call!15465))) (bvsle (_1!1360 (h!2348 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (toList!888 call!15465)) (bvslt (_1!1360 (h!2348 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!140538 () Bool)

(assert (=> b!140538 (= e!91628 (containsKey!180 (t!6329 (toList!888 call!15465)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43757 (not res!67179)) b!140537))

(assert (= (and b!140537 res!67180) b!140538))

(assert (=> b!140538 m!166013))

(declare-fun m!168019 () Bool)

(assert (=> b!140538 m!168019))

(assert (=> d!43429 d!43757))

(declare-fun d!43759 () Bool)

(declare-fun e!91629 () Bool)

(assert (=> d!43759 e!91629))

(declare-fun res!67181 () Bool)

(assert (=> d!43759 (=> res!67181 e!91629)))

(declare-fun lt!73710 () Bool)

(assert (=> d!43759 (= res!67181 (not lt!73710))))

(declare-fun lt!73708 () Bool)

(assert (=> d!43759 (= lt!73710 lt!73708)))

(declare-fun lt!73709 () Unit!4373)

(declare-fun e!91630 () Unit!4373)

(assert (=> d!43759 (= lt!73709 e!91630)))

(declare-fun c!26330 () Bool)

(assert (=> d!43759 (= c!26330 lt!73708)))

(assert (=> d!43759 (= lt!73708 (containsKey!180 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43759 (= (contains!923 lt!73093 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73710)))

(declare-fun b!140539 () Bool)

(declare-fun lt!73711 () Unit!4373)

(assert (=> b!140539 (= e!91630 lt!73711)))

(assert (=> b!140539 (= lt!73711 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140539 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140540 () Bool)

(declare-fun Unit!4422 () Unit!4373)

(assert (=> b!140540 (= e!91630 Unit!4422)))

(declare-fun b!140541 () Bool)

(assert (=> b!140541 (= e!91629 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43759 c!26330) b!140539))

(assert (= (and d!43759 (not c!26330)) b!140540))

(assert (= (and d!43759 (not res!67181)) b!140541))

(assert (=> d!43759 m!166385))

(declare-fun m!168021 () Bool)

(assert (=> d!43759 m!168021))

(assert (=> b!140539 m!166385))

(declare-fun m!168023 () Bool)

(assert (=> b!140539 m!168023))

(assert (=> b!140539 m!166385))

(declare-fun m!168025 () Bool)

(assert (=> b!140539 m!168025))

(assert (=> b!140539 m!168025))

(declare-fun m!168027 () Bool)

(assert (=> b!140539 m!168027))

(assert (=> b!140541 m!166385))

(assert (=> b!140541 m!168025))

(assert (=> b!140541 m!168025))

(assert (=> b!140541 m!168027))

(assert (=> b!139675 d!43759))

(assert (=> b!139639 d!43597))

(declare-fun lt!73712 () Bool)

(declare-fun d!43761 () Bool)

(assert (=> d!43761 (= lt!73712 (select (content!138 (toList!888 lt!73285)) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!91632 () Bool)

(assert (=> d!43761 (= lt!73712 e!91632)))

(declare-fun res!67182 () Bool)

(assert (=> d!43761 (=> (not res!67182) (not e!91632))))

(assert (=> d!43761 (= res!67182 ((_ is Cons!1741) (toList!888 lt!73285)))))

(assert (=> d!43761 (= (contains!925 (toList!888 lt!73285) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73712)))

(declare-fun b!140542 () Bool)

(declare-fun e!91631 () Bool)

(assert (=> b!140542 (= e!91632 e!91631)))

(declare-fun res!67183 () Bool)

(assert (=> b!140542 (=> res!67183 e!91631)))

(assert (=> b!140542 (= res!67183 (= (h!2348 (toList!888 lt!73285)) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140543 () Bool)

(assert (=> b!140543 (= e!91631 (contains!925 (t!6329 (toList!888 lt!73285)) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43761 res!67182) b!140542))

(assert (= (and b!140542 (not res!67183)) b!140543))

(declare-fun m!168029 () Bool)

(assert (=> d!43761 m!168029))

(declare-fun m!168031 () Bool)

(assert (=> d!43761 m!168031))

(declare-fun m!168033 () Bool)

(assert (=> b!140543 m!168033))

(assert (=> b!139903 d!43761))

(declare-fun e!91643 () SeekEntryResult!279)

(declare-fun b!140562 () Bool)

(assert (=> b!140562 (= e!91643 (Intermediate!279 false (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun e!91644 () SeekEntryResult!279)

(declare-fun b!140563 () Bool)

(assert (=> b!140563 (= e!91644 (Intermediate!279 true (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!140564 () Bool)

(declare-fun lt!73717 () SeekEntryResult!279)

(assert (=> b!140564 (and (bvsge (index!3281 lt!73717) #b00000000000000000000000000000000) (bvslt (index!3281 lt!73717) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67192 () Bool)

(assert (=> b!140564 (= res!67192 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73717)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91646 () Bool)

(assert (=> b!140564 (=> res!67192 e!91646)))

(declare-fun b!140565 () Bool)

(assert (=> b!140565 (and (bvsge (index!3281 lt!73717) #b00000000000000000000000000000000) (bvslt (index!3281 lt!73717) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67190 () Bool)

(assert (=> b!140565 (= res!67190 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73717)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!140565 (=> res!67190 e!91646)))

(declare-fun e!91647 () Bool)

(assert (=> b!140565 (= e!91647 e!91646)))

(declare-fun b!140566 () Bool)

(assert (=> b!140566 (and (bvsge (index!3281 lt!73717) #b00000000000000000000000000000000) (bvslt (index!3281 lt!73717) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!140566 (= e!91646 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73717)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140567 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!140567 (= e!91643 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140568 () Bool)

(declare-fun e!91645 () Bool)

(assert (=> b!140568 (= e!91645 e!91647)))

(declare-fun res!67191 () Bool)

(assert (=> b!140568 (= res!67191 (and ((_ is Intermediate!279) lt!73717) (not (undefined!1091 lt!73717)) (bvslt (x!16136 lt!73717) #b01111111111111111111111111111110) (bvsge (x!16136 lt!73717) #b00000000000000000000000000000000) (bvsge (x!16136 lt!73717) #b00000000000000000000000000000000)))))

(assert (=> b!140568 (=> (not res!67191) (not e!91647))))

(declare-fun d!43763 () Bool)

(assert (=> d!43763 e!91645))

(declare-fun c!26338 () Bool)

(assert (=> d!43763 (= c!26338 (and ((_ is Intermediate!279) lt!73717) (undefined!1091 lt!73717)))))

(assert (=> d!43763 (= lt!73717 e!91644)))

(declare-fun c!26339 () Bool)

(assert (=> d!43763 (= c!26339 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!73718 () (_ BitVec 64))

(assert (=> d!43763 (= lt!73718 (select (arr!2315 (_keys!4699 newMap!16)) (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16))))))

(assert (=> d!43763 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43763 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73717)))

(declare-fun b!140569 () Bool)

(assert (=> b!140569 (= e!91645 (bvsge (x!16136 lt!73717) #b01111111111111111111111111111110))))

(declare-fun b!140570 () Bool)

(assert (=> b!140570 (= e!91644 e!91643)))

(declare-fun c!26337 () Bool)

(assert (=> b!140570 (= c!26337 (or (= lt!73718 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (= (bvadd lt!73718 lt!73718) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43763 c!26339) b!140563))

(assert (= (and d!43763 (not c!26339)) b!140570))

(assert (= (and b!140570 c!26337) b!140562))

(assert (= (and b!140570 (not c!26337)) b!140567))

(assert (= (and d!43763 c!26338) b!140569))

(assert (= (and d!43763 (not c!26338)) b!140568))

(assert (= (and b!140568 res!67191) b!140565))

(assert (= (and b!140565 (not res!67190)) b!140564))

(assert (= (and b!140564 (not res!67192)) b!140566))

(declare-fun m!168035 () Bool)

(assert (=> b!140566 m!168035))

(assert (=> b!140567 m!166449))

(declare-fun m!168037 () Bool)

(assert (=> b!140567 m!168037))

(assert (=> b!140567 m!168037))

(assert (=> b!140567 m!166013))

(declare-fun m!168039 () Bool)

(assert (=> b!140567 m!168039))

(assert (=> b!140564 m!168035))

(assert (=> b!140565 m!168035))

(assert (=> d!43763 m!166449))

(declare-fun m!168041 () Bool)

(assert (=> d!43763 m!168041))

(assert (=> d!43763 m!166429))

(assert (=> d!43347 d!43763))

(declare-fun d!43765 () Bool)

(declare-fun lt!73724 () (_ BitVec 32))

(declare-fun lt!73723 () (_ BitVec 32))

(assert (=> d!43765 (= lt!73724 (bvmul (bvxor lt!73723 (bvlshr lt!73723 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!43765 (= lt!73723 ((_ extract 31 0) (bvand (bvxor (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvlshr (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!43765 (and (bvsge (mask!7280 newMap!16) #b00000000000000000000000000000000) (let ((res!67193 (let ((h!2351 ((_ extract 31 0) (bvand (bvxor (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvlshr (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16239 (bvmul (bvxor h!2351 (bvlshr h!2351 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16239 (bvlshr x!16239 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))) (and (bvslt res!67193 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67193 #b00000000000000000000000000000000))))))

(assert (=> d!43765 (= (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) (bvand (bvxor lt!73724 (bvlshr lt!73724 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))

(assert (=> d!43347 d!43765))

(assert (=> d!43347 d!43527))

(assert (=> b!139656 d!43479))

(declare-fun lt!73725 () Bool)

(declare-fun d!43767 () Bool)

(assert (=> d!43767 (= lt!73725 (select (content!138 (toList!888 lt!73019)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!91649 () Bool)

(assert (=> d!43767 (= lt!73725 e!91649)))

(declare-fun res!67194 () Bool)

(assert (=> d!43767 (=> (not res!67194) (not e!91649))))

(assert (=> d!43767 (= res!67194 ((_ is Cons!1741) (toList!888 lt!73019)))))

(assert (=> d!43767 (= (contains!925 (toList!888 lt!73019) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73725)))

(declare-fun b!140571 () Bool)

(declare-fun e!91648 () Bool)

(assert (=> b!140571 (= e!91649 e!91648)))

(declare-fun res!67195 () Bool)

(assert (=> b!140571 (=> res!67195 e!91648)))

(assert (=> b!140571 (= res!67195 (= (h!2348 (toList!888 lt!73019)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140572 () Bool)

(assert (=> b!140572 (= e!91648 (contains!925 (t!6329 (toList!888 lt!73019)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43767 res!67194) b!140571))

(assert (= (and b!140571 (not res!67195)) b!140572))

(declare-fun m!168043 () Bool)

(assert (=> d!43767 m!168043))

(declare-fun m!168045 () Bool)

(assert (=> d!43767 m!168045))

(declare-fun m!168047 () Bool)

(assert (=> b!140572 m!168047))

(assert (=> b!139596 d!43767))

(declare-fun d!43769 () Bool)

(assert (=> d!43769 (= (apply!120 lt!73306 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5866 () Bool)

(assert (= bs!5866 d!43769))

(declare-fun m!168049 () Bool)

(assert (=> bs!5866 m!168049))

(assert (=> bs!5866 m!168049))

(declare-fun m!168051 () Bool)

(assert (=> bs!5866 m!168051))

(assert (=> b!139914 d!43769))

(declare-fun d!43771 () Bool)

(assert (=> d!43771 (= (get!1529 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139900 d!43771))

(declare-fun b!140573 () Bool)

(declare-fun res!67199 () Bool)

(declare-fun e!91650 () Bool)

(assert (=> b!140573 (=> (not res!67199) (not e!91650))))

(assert (=> b!140573 (= res!67199 (and (= (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001)) (= (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992))))) (bvsge (_size!625 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!625 (v!3280 (underlying!480 thiss!992))) (bvadd (mask!7280 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!140575 () Bool)

(declare-fun res!67198 () Bool)

(assert (=> b!140575 (=> (not res!67198) (not e!91650))))

(assert (=> b!140575 (= res!67198 (= (size!2591 (v!3280 (underlying!480 thiss!992))) (bvadd (_size!625 (v!3280 (underlying!480 thiss!992))) (bvsdiv (bvadd (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140576 () Bool)

(assert (=> b!140576 (= e!91650 (and (bvsge (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!625 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!43773 () Bool)

(declare-fun res!67197 () Bool)

(assert (=> d!43773 (=> (not res!67197) (not e!91650))))

(assert (=> d!43773 (= res!67197 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992)))))))

(assert (=> d!43773 (= (simpleValid!96 (v!3280 (underlying!480 thiss!992))) e!91650)))

(declare-fun b!140574 () Bool)

(declare-fun res!67196 () Bool)

(assert (=> b!140574 (=> (not res!67196) (not e!91650))))

(assert (=> b!140574 (= res!67196 (bvsge (size!2591 (v!3280 (underlying!480 thiss!992))) (_size!625 (v!3280 (underlying!480 thiss!992)))))))

(assert (= (and d!43773 res!67197) b!140573))

(assert (= (and b!140573 res!67199) b!140574))

(assert (= (and b!140574 res!67196) b!140575))

(assert (= (and b!140575 res!67198) b!140576))

(declare-fun m!168053 () Bool)

(assert (=> b!140575 m!168053))

(assert (=> d!43773 m!166137))

(assert (=> b!140574 m!168053))

(assert (=> d!43367 d!43773))

(declare-fun b!140577 () Bool)

(declare-fun lt!73732 () Unit!4373)

(declare-fun lt!73728 () Unit!4373)

(assert (=> b!140577 (= lt!73732 lt!73728)))

(declare-fun lt!73730 () (_ BitVec 64))

(declare-fun lt!73727 () V!3555)

(declare-fun lt!73731 () ListLongMap!1745)

(declare-fun lt!73726 () (_ BitVec 64))

(assert (=> b!140577 (not (contains!923 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727)) lt!73726))))

(assert (=> b!140577 (= lt!73728 (addStillNotContains!64 lt!73731 lt!73730 lt!73727 lt!73726))))

(assert (=> b!140577 (= lt!73726 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140577 (= lt!73727 (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140577 (= lt!73730 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15620 () ListLongMap!1745)

(assert (=> b!140577 (= lt!73731 call!15620)))

(declare-fun e!91651 () ListLongMap!1745)

(assert (=> b!140577 (= e!91651 (+!179 call!15620 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140579 () Bool)

(declare-fun e!91653 () ListLongMap!1745)

(assert (=> b!140579 (= e!91653 (ListLongMap!1746 Nil!1742))))

(declare-fun b!140580 () Bool)

(declare-fun e!91657 () Bool)

(declare-fun e!91652 () Bool)

(assert (=> b!140580 (= e!91657 e!91652)))

(assert (=> b!140580 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67203 () Bool)

(declare-fun lt!73729 () ListLongMap!1745)

(assert (=> b!140580 (= res!67203 (contains!923 lt!73729 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140580 (=> (not res!67203) (not e!91652))))

(declare-fun b!140581 () Bool)

(declare-fun res!67200 () Bool)

(declare-fun e!91656 () Bool)

(assert (=> b!140581 (=> (not res!67200) (not e!91656))))

(assert (=> b!140581 (= res!67200 (not (contains!923 lt!73729 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140582 () Bool)

(declare-fun e!91654 () Bool)

(assert (=> b!140582 (= e!91657 e!91654)))

(declare-fun c!26342 () Bool)

(assert (=> b!140582 (= c!26342 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140583 () Bool)

(assert (=> b!140583 (= e!91653 e!91651)))

(declare-fun c!26343 () Bool)

(assert (=> b!140583 (= c!26343 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140584 () Bool)

(declare-fun e!91655 () Bool)

(assert (=> b!140584 (= e!91655 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140584 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15617 () Bool)

(assert (=> bm!15617 (= call!15620 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140585 () Bool)

(assert (=> b!140585 (= e!91654 (= lt!73729 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140586 () Bool)

(assert (=> b!140586 (= e!91656 e!91657)))

(declare-fun c!26340 () Bool)

(assert (=> b!140586 (= c!26340 e!91655)))

(declare-fun res!67202 () Bool)

(assert (=> b!140586 (=> (not res!67202) (not e!91655))))

(assert (=> b!140586 (= res!67202 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!43775 () Bool)

(assert (=> d!43775 e!91656))

(declare-fun res!67201 () Bool)

(assert (=> d!43775 (=> (not res!67201) (not e!91656))))

(assert (=> d!43775 (= res!67201 (not (contains!923 lt!73729 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43775 (= lt!73729 e!91653)))

(declare-fun c!26341 () Bool)

(assert (=> d!43775 (= c!26341 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43775 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43775 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73729)))

(declare-fun b!140578 () Bool)

(assert (=> b!140578 (= e!91654 (isEmpty!417 lt!73729))))

(declare-fun b!140587 () Bool)

(assert (=> b!140587 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!140587 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983))))))

(assert (=> b!140587 (= e!91652 (= (apply!120 lt!73729 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140588 () Bool)

(assert (=> b!140588 (= e!91651 call!15620)))

(assert (= (and d!43775 c!26341) b!140579))

(assert (= (and d!43775 (not c!26341)) b!140583))

(assert (= (and b!140583 c!26343) b!140577))

(assert (= (and b!140583 (not c!26343)) b!140588))

(assert (= (or b!140577 b!140588) bm!15617))

(assert (= (and d!43775 res!67201) b!140581))

(assert (= (and b!140581 res!67200) b!140586))

(assert (= (and b!140586 res!67202) b!140584))

(assert (= (and b!140586 c!26340) b!140580))

(assert (= (and b!140586 (not c!26340)) b!140582))

(assert (= (and b!140580 res!67203) b!140587))

(assert (= (and b!140582 c!26342) b!140585))

(assert (= (and b!140582 (not c!26342)) b!140578))

(declare-fun b_lambda!6289 () Bool)

(assert (=> (not b_lambda!6289) (not b!140577)))

(assert (=> b!140577 t!6337))

(declare-fun b_and!8795 () Bool)

(assert (= b_and!8791 (and (=> t!6337 result!4191) b_and!8795)))

(assert (=> b!140577 t!6339))

(declare-fun b_and!8797 () Bool)

(assert (= b_and!8793 (and (=> t!6339 result!4193) b_and!8797)))

(declare-fun b_lambda!6291 () Bool)

(assert (=> (not b_lambda!6291) (not b!140587)))

(assert (=> b!140587 t!6337))

(declare-fun b_and!8799 () Bool)

(assert (= b_and!8795 (and (=> t!6337 result!4191) b_and!8799)))

(assert (=> b!140587 t!6339))

(declare-fun b_and!8801 () Bool)

(assert (= b_and!8797 (and (=> t!6339 result!4193) b_and!8801)))

(declare-fun m!168055 () Bool)

(assert (=> b!140581 m!168055))

(assert (=> b!140583 m!166385))

(assert (=> b!140583 m!166385))

(assert (=> b!140583 m!166389))

(declare-fun m!168057 () Bool)

(assert (=> d!43775 m!168057))

(assert (=> d!43775 m!166429))

(assert (=> b!140577 m!166443))

(declare-fun m!168059 () Bool)

(assert (=> b!140577 m!168059))

(declare-fun m!168061 () Bool)

(assert (=> b!140577 m!168061))

(assert (=> b!140577 m!168059))

(assert (=> b!140577 m!166441))

(declare-fun m!168063 () Bool)

(assert (=> b!140577 m!168063))

(assert (=> b!140577 m!166441))

(assert (=> b!140577 m!166443))

(assert (=> b!140577 m!166445))

(declare-fun m!168065 () Bool)

(assert (=> b!140577 m!168065))

(assert (=> b!140577 m!166385))

(assert (=> b!140584 m!166385))

(assert (=> b!140584 m!166385))

(assert (=> b!140584 m!166389))

(declare-fun m!168067 () Bool)

(assert (=> bm!15617 m!168067))

(declare-fun m!168069 () Bool)

(assert (=> b!140578 m!168069))

(assert (=> b!140587 m!166443))

(assert (=> b!140587 m!166385))

(declare-fun m!168071 () Bool)

(assert (=> b!140587 m!168071))

(assert (=> b!140587 m!166441))

(assert (=> b!140587 m!166441))

(assert (=> b!140587 m!166443))

(assert (=> b!140587 m!166445))

(assert (=> b!140587 m!166385))

(assert (=> b!140580 m!166385))

(assert (=> b!140580 m!166385))

(declare-fun m!168073 () Bool)

(assert (=> b!140580 m!168073))

(assert (=> b!140585 m!168067))

(assert (=> bm!15488 d!43775))

(declare-fun d!43777 () Bool)

(declare-fun res!67204 () Bool)

(declare-fun e!91658 () Bool)

(assert (=> d!43777 (=> res!67204 e!91658)))

(assert (=> d!43777 (= res!67204 (and ((_ is Cons!1741) (toList!888 lt!72907)) (= (_1!1360 (h!2348 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43777 (= (containsKey!180 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91658)))

(declare-fun b!140589 () Bool)

(declare-fun e!91659 () Bool)

(assert (=> b!140589 (= e!91658 e!91659)))

(declare-fun res!67205 () Bool)

(assert (=> b!140589 (=> (not res!67205) (not e!91659))))

(assert (=> b!140589 (= res!67205 (and (or (not ((_ is Cons!1741) (toList!888 lt!72907))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1741) (toList!888 lt!72907)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!140590 () Bool)

(assert (=> b!140590 (= e!91659 (containsKey!180 (t!6329 (toList!888 lt!72907)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43777 (not res!67204)) b!140589))

(assert (= (and b!140589 res!67205) b!140590))

(assert (=> b!140590 m!166121))

(declare-fun m!168075 () Bool)

(assert (=> b!140590 m!168075))

(assert (=> d!43357 d!43777))

(declare-fun d!43779 () Bool)

(declare-fun res!67206 () Bool)

(declare-fun e!91660 () Bool)

(assert (=> d!43779 (=> res!67206 e!91660)))

(assert (=> d!43779 (= res!67206 (and ((_ is Cons!1741) (toList!888 call!15463)) (= (_1!1360 (h!2348 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(assert (=> d!43779 (= (containsKey!180 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) e!91660)))

(declare-fun b!140591 () Bool)

(declare-fun e!91661 () Bool)

(assert (=> b!140591 (= e!91660 e!91661)))

(declare-fun res!67207 () Bool)

(assert (=> b!140591 (=> (not res!67207) (not e!91661))))

(assert (=> b!140591 (= res!67207 (and (or (not ((_ is Cons!1741) (toList!888 call!15463))) (bvsle (_1!1360 (h!2348 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))) ((_ is Cons!1741) (toList!888 call!15463)) (bvslt (_1!1360 (h!2348 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(declare-fun b!140592 () Bool)

(assert (=> b!140592 (= e!91661 (containsKey!180 (t!6329 (toList!888 call!15463)) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!43779 (not res!67206)) b!140591))

(assert (= (and b!140591 res!67207) b!140592))

(declare-fun m!168077 () Bool)

(assert (=> b!140592 m!168077))

(assert (=> d!43359 d!43779))

(declare-fun d!43781 () Bool)

(declare-fun e!91662 () Bool)

(assert (=> d!43781 e!91662))

(declare-fun res!67208 () Bool)

(assert (=> d!43781 (=> res!67208 e!91662)))

(declare-fun lt!73735 () Bool)

(assert (=> d!43781 (= res!67208 (not lt!73735))))

(declare-fun lt!73733 () Bool)

(assert (=> d!43781 (= lt!73735 lt!73733)))

(declare-fun lt!73734 () Unit!4373)

(declare-fun e!91663 () Unit!4373)

(assert (=> d!43781 (= lt!73734 e!91663)))

(declare-fun c!26344 () Bool)

(assert (=> d!43781 (= c!26344 lt!73733)))

(assert (=> d!43781 (= lt!73733 (containsKey!180 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43781 (= (contains!923 lt!73332 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73735)))

(declare-fun b!140593 () Bool)

(declare-fun lt!73736 () Unit!4373)

(assert (=> b!140593 (= e!91663 lt!73736)))

(assert (=> b!140593 (= lt!73736 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140593 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140594 () Bool)

(declare-fun Unit!4423 () Unit!4373)

(assert (=> b!140594 (= e!91663 Unit!4423)))

(declare-fun b!140595 () Bool)

(assert (=> b!140595 (= e!91662 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43781 c!26344) b!140593))

(assert (= (and d!43781 (not c!26344)) b!140594))

(assert (= (and d!43781 (not res!67208)) b!140595))

(declare-fun m!168079 () Bool)

(assert (=> d!43781 m!168079))

(declare-fun m!168081 () Bool)

(assert (=> b!140593 m!168081))

(declare-fun m!168083 () Bool)

(assert (=> b!140593 m!168083))

(assert (=> b!140593 m!168083))

(declare-fun m!168085 () Bool)

(assert (=> b!140593 m!168085))

(assert (=> b!140595 m!168083))

(assert (=> b!140595 m!168083))

(assert (=> b!140595 m!168085))

(assert (=> bm!15536 d!43781))

(declare-fun d!43783 () Bool)

(assert (=> d!43783 (= (size!2591 newMap!16) (bvadd (_size!625 newMap!16) (bvsdiv (bvadd (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!139877 d!43783))

(declare-fun d!43785 () Bool)

(declare-fun e!91664 () Bool)

(assert (=> d!43785 e!91664))

(declare-fun res!67209 () Bool)

(assert (=> d!43785 (=> (not res!67209) (not e!91664))))

(declare-fun lt!73740 () ListLongMap!1745)

(assert (=> d!43785 (= res!67209 (contains!923 lt!73740 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun lt!73737 () List!1745)

(assert (=> d!43785 (= lt!73740 (ListLongMap!1746 lt!73737))))

(declare-fun lt!73738 () Unit!4373)

(declare-fun lt!73739 () Unit!4373)

(assert (=> d!43785 (= lt!73738 lt!73739)))

(assert (=> d!43785 (= (getValueByKey!176 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (Some!181 (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!43785 (= lt!73739 (lemmaContainsTupThenGetReturnValue!90 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!43785 (= lt!73737 (insertStrictlySorted!93 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!43785 (= (+!179 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73740)))

(declare-fun b!140596 () Bool)

(declare-fun res!67210 () Bool)

(assert (=> b!140596 (=> (not res!67210) (not e!91664))))

(assert (=> b!140596 (= res!67210 (= (getValueByKey!176 (toList!888 lt!73740) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (Some!181 (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!140597 () Bool)

(assert (=> b!140597 (= e!91664 (contains!925 (toList!888 lt!73740) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!43785 res!67209) b!140596))

(assert (= (and b!140596 res!67210) b!140597))

(declare-fun m!168087 () Bool)

(assert (=> d!43785 m!168087))

(declare-fun m!168089 () Bool)

(assert (=> d!43785 m!168089))

(declare-fun m!168091 () Bool)

(assert (=> d!43785 m!168091))

(declare-fun m!168093 () Bool)

(assert (=> d!43785 m!168093))

(declare-fun m!168095 () Bool)

(assert (=> b!140596 m!168095))

(declare-fun m!168097 () Bool)

(assert (=> b!140597 m!168097))

(assert (=> bm!15528 d!43785))

(declare-fun lt!73741 () Bool)

(declare-fun d!43787 () Bool)

(assert (=> d!43787 (= lt!73741 (select (content!138 (toList!888 lt!73067)) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!91666 () Bool)

(assert (=> d!43787 (= lt!73741 e!91666)))

(declare-fun res!67211 () Bool)

(assert (=> d!43787 (=> (not res!67211) (not e!91666))))

(assert (=> d!43787 (= res!67211 ((_ is Cons!1741) (toList!888 lt!73067)))))

(assert (=> d!43787 (= (contains!925 (toList!888 lt!73067) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73741)))

(declare-fun b!140598 () Bool)

(declare-fun e!91665 () Bool)

(assert (=> b!140598 (= e!91666 e!91665)))

(declare-fun res!67212 () Bool)

(assert (=> b!140598 (=> res!67212 e!91665)))

(assert (=> b!140598 (= res!67212 (= (h!2348 (toList!888 lt!73067)) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140599 () Bool)

(assert (=> b!140599 (= e!91665 (contains!925 (t!6329 (toList!888 lt!73067)) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43787 res!67211) b!140598))

(assert (= (and b!140598 (not res!67212)) b!140599))

(declare-fun m!168099 () Bool)

(assert (=> d!43787 m!168099))

(declare-fun m!168101 () Bool)

(assert (=> d!43787 m!168101))

(declare-fun m!168103 () Bool)

(assert (=> b!140599 m!168103))

(assert (=> b!139649 d!43787))

(declare-fun d!43789 () Bool)

(assert (=> d!43789 (= (apply!120 lt!73306 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5867 () Bool)

(assert (= bs!5867 d!43789))

(assert (=> bs!5867 m!166385))

(assert (=> bs!5867 m!166887))

(assert (=> bs!5867 m!166887))

(declare-fun m!168105 () Bool)

(assert (=> bs!5867 m!168105))

(assert (=> b!139908 d!43789))

(assert (=> b!139908 d!43463))

(declare-fun d!43791 () Bool)

(assert (=> d!43791 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000)))

(declare-fun lt!73742 () Unit!4373)

(assert (=> d!43791 (= lt!73742 (choose!13 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000))))

(assert (=> d!43791 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!43791 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000) lt!73742)))

(declare-fun bs!5868 () Bool)

(assert (= bs!5868 d!43791))

(assert (=> bs!5868 m!166697))

(declare-fun m!168107 () Bool)

(assert (=> bs!5868 m!168107))

(assert (=> b!139864 d!43791))

(declare-fun d!43793 () Bool)

(declare-fun res!67213 () Bool)

(declare-fun e!91667 () Bool)

(assert (=> d!43793 (=> res!67213 e!91667)))

(assert (=> d!43793 (= res!67213 (= (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) lt!73273))))

(assert (=> d!43793 (= (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000) e!91667)))

(declare-fun b!140600 () Bool)

(declare-fun e!91668 () Bool)

(assert (=> b!140600 (= e!91667 e!91668)))

(declare-fun res!67214 () Bool)

(assert (=> b!140600 (=> (not res!67214) (not e!91668))))

(assert (=> b!140600 (= res!67214 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140601 () Bool)

(assert (=> b!140601 (= e!91668 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43793 (not res!67213)) b!140600))

(assert (= (and b!140600 res!67214) b!140601))

(assert (=> d!43793 m!166385))

(declare-fun m!168109 () Bool)

(assert (=> b!140601 m!168109))

(assert (=> b!139864 d!43793))

(declare-fun b!140602 () Bool)

(declare-fun c!26345 () Bool)

(declare-fun lt!73745 () (_ BitVec 64))

(assert (=> b!140602 (= c!26345 (= lt!73745 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91671 () SeekEntryResult!279)

(declare-fun e!91669 () SeekEntryResult!279)

(assert (=> b!140602 (= e!91671 e!91669)))

(declare-fun d!43795 () Bool)

(declare-fun lt!73744 () SeekEntryResult!279)

(assert (=> d!43795 (and (or ((_ is Undefined!279) lt!73744) (not ((_ is Found!279) lt!73744)) (and (bvsge (index!3280 lt!73744) #b00000000000000000000000000000000) (bvslt (index!3280 lt!73744) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73744) ((_ is Found!279) lt!73744) (not ((_ is MissingZero!279) lt!73744)) (and (bvsge (index!3279 lt!73744) #b00000000000000000000000000000000) (bvslt (index!3279 lt!73744) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73744) ((_ is Found!279) lt!73744) ((_ is MissingZero!279) lt!73744) (not ((_ is MissingVacant!279) lt!73744)) (and (bvsge (index!3282 lt!73744) #b00000000000000000000000000000000) (bvslt (index!3282 lt!73744) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73744) (ite ((_ is Found!279) lt!73744) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73744)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!279) lt!73744) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!73744)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!73744) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73744)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91670 () SeekEntryResult!279)

(assert (=> d!43795 (= lt!73744 e!91670)))

(declare-fun c!26347 () Bool)

(declare-fun lt!73743 () SeekEntryResult!279)

(assert (=> d!43795 (= c!26347 (and ((_ is Intermediate!279) lt!73743) (undefined!1091 lt!73743)))))

(assert (=> d!43795 (= lt!73743 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43795 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43795 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73744)))

(declare-fun b!140603 () Bool)

(assert (=> b!140603 (= e!91670 Undefined!279)))

(declare-fun b!140604 () Bool)

(assert (=> b!140604 (= e!91671 (Found!279 (index!3281 lt!73743)))))

(declare-fun b!140605 () Bool)

(assert (=> b!140605 (= e!91670 e!91671)))

(assert (=> b!140605 (= lt!73745 (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73743)))))

(declare-fun c!26346 () Bool)

(assert (=> b!140605 (= c!26346 (= lt!73745 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140606 () Bool)

(assert (=> b!140606 (= e!91669 (seekKeyOrZeroReturnVacant!0 (x!16136 lt!73743) (index!3281 lt!73743) (index!3281 lt!73743) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140607 () Bool)

(assert (=> b!140607 (= e!91669 (MissingZero!279 (index!3281 lt!73743)))))

(assert (= (and d!43795 c!26347) b!140603))

(assert (= (and d!43795 (not c!26347)) b!140605))

(assert (= (and b!140605 c!26346) b!140604))

(assert (= (and b!140605 (not c!26346)) b!140602))

(assert (= (and b!140602 c!26345) b!140607))

(assert (= (and b!140602 (not c!26345)) b!140606))

(assert (=> d!43795 m!166385))

(declare-fun m!168111 () Bool)

(assert (=> d!43795 m!168111))

(assert (=> d!43795 m!166429))

(declare-fun m!168113 () Bool)

(assert (=> d!43795 m!168113))

(declare-fun m!168115 () Bool)

(assert (=> d!43795 m!168115))

(declare-fun m!168117 () Bool)

(assert (=> d!43795 m!168117))

(assert (=> d!43795 m!168111))

(assert (=> d!43795 m!166385))

(declare-fun m!168119 () Bool)

(assert (=> d!43795 m!168119))

(declare-fun m!168121 () Bool)

(assert (=> b!140605 m!168121))

(assert (=> b!140606 m!166385))

(declare-fun m!168123 () Bool)

(assert (=> b!140606 m!168123))

(assert (=> b!139864 d!43795))

(declare-fun b!140608 () Bool)

(declare-fun e!91672 () (_ BitVec 32))

(assert (=> b!140608 (= e!91672 #b00000000000000000000000000000000)))

(declare-fun b!140609 () Bool)

(declare-fun e!91673 () (_ BitVec 32))

(declare-fun call!15621 () (_ BitVec 32))

(assert (=> b!140609 (= e!91673 call!15621)))

(declare-fun bm!15618 () Bool)

(assert (=> bm!15618 (= call!15621 (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!72992)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(declare-fun d!43797 () Bool)

(declare-fun lt!73746 () (_ BitVec 32))

(assert (=> d!43797 (and (bvsge lt!73746 #b00000000000000000000000000000000) (bvsle lt!73746 (bvsub (size!2587 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(assert (=> d!43797 (= lt!73746 e!91672)))

(declare-fun c!26348 () Bool)

(assert (=> d!43797 (= c!26348 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!43797 (and (bvsle #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!72992)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 (_2!1361 lt!72992))) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!43797 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!72992)) #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!72992)))) lt!73746)))

(declare-fun b!140610 () Bool)

(assert (=> b!140610 (= e!91672 e!91673)))

(declare-fun c!26349 () Bool)

(assert (=> b!140610 (= c!26349 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun b!140611 () Bool)

(assert (=> b!140611 (= e!91673 (bvadd #b00000000000000000000000000000001 call!15621))))

(assert (= (and d!43797 c!26348) b!140608))

(assert (= (and d!43797 (not c!26348)) b!140610))

(assert (= (and b!140610 c!26349) b!140611))

(assert (= (and b!140610 (not c!26349)) b!140609))

(assert (= (or b!140611 b!140609) bm!15618))

(declare-fun m!168125 () Bool)

(assert (=> bm!15618 m!168125))

(declare-fun m!168127 () Bool)

(assert (=> b!140610 m!168127))

(assert (=> b!140610 m!168127))

(declare-fun m!168129 () Bool)

(assert (=> b!140610 m!168129))

(assert (=> b!139767 d!43797))

(declare-fun d!43799 () Bool)

(declare-fun e!91674 () Bool)

(assert (=> d!43799 e!91674))

(declare-fun res!67215 () Bool)

(assert (=> d!43799 (=> res!67215 e!91674)))

(declare-fun lt!73749 () Bool)

(assert (=> d!43799 (= res!67215 (not lt!73749))))

(declare-fun lt!73747 () Bool)

(assert (=> d!43799 (= lt!73749 lt!73747)))

(declare-fun lt!73748 () Unit!4373)

(declare-fun e!91675 () Unit!4373)

(assert (=> d!43799 (= lt!73748 e!91675)))

(declare-fun c!26350 () Bool)

(assert (=> d!43799 (= c!26350 lt!73747)))

(assert (=> d!43799 (= lt!73747 (containsKey!180 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43799 (= (contains!923 lt!73031 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73749)))

(declare-fun b!140612 () Bool)

(declare-fun lt!73750 () Unit!4373)

(assert (=> b!140612 (= e!91675 lt!73750)))

(assert (=> b!140612 (= lt!73750 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> b!140612 (isDefined!129 (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140613 () Bool)

(declare-fun Unit!4424 () Unit!4373)

(assert (=> b!140613 (= e!91675 Unit!4424)))

(declare-fun b!140614 () Bool)

(assert (=> b!140614 (= e!91674 (isDefined!129 (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43799 c!26350) b!140612))

(assert (= (and d!43799 (not c!26350)) b!140613))

(assert (= (and d!43799 (not res!67215)) b!140614))

(declare-fun m!168131 () Bool)

(assert (=> d!43799 m!168131))

(declare-fun m!168133 () Bool)

(assert (=> b!140612 m!168133))

(assert (=> b!140612 m!166293))

(assert (=> b!140612 m!166293))

(declare-fun m!168135 () Bool)

(assert (=> b!140612 m!168135))

(assert (=> b!140614 m!166293))

(assert (=> b!140614 m!166293))

(assert (=> b!140614 m!168135))

(assert (=> d!43315 d!43799))

(declare-fun b!140618 () Bool)

(declare-fun e!91677 () Option!182)

(assert (=> b!140618 (= e!91677 None!180)))

(declare-fun b!140615 () Bool)

(declare-fun e!91676 () Option!182)

(assert (=> b!140615 (= e!91676 (Some!181 (_2!1360 (h!2348 lt!73028))))))

(declare-fun b!140616 () Bool)

(assert (=> b!140616 (= e!91676 e!91677)))

(declare-fun c!26352 () Bool)

(assert (=> b!140616 (= c!26352 (and ((_ is Cons!1741) lt!73028) (not (= (_1!1360 (h!2348 lt!73028)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!43801 () Bool)

(declare-fun c!26351 () Bool)

(assert (=> d!43801 (= c!26351 (and ((_ is Cons!1741) lt!73028) (= (_1!1360 (h!2348 lt!73028)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43801 (= (getValueByKey!176 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91676)))

(declare-fun b!140617 () Bool)

(assert (=> b!140617 (= e!91677 (getValueByKey!176 (t!6329 lt!73028) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43801 c!26351) b!140615))

(assert (= (and d!43801 (not c!26351)) b!140616))

(assert (= (and b!140616 c!26352) b!140617))

(assert (= (and b!140616 (not c!26352)) b!140618))

(declare-fun m!168137 () Bool)

(assert (=> b!140617 m!168137))

(assert (=> d!43315 d!43801))

(declare-fun d!43803 () Bool)

(assert (=> d!43803 (= (getValueByKey!176 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73751 () Unit!4373)

(assert (=> d!43803 (= lt!73751 (choose!865 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!91678 () Bool)

(assert (=> d!43803 e!91678))

(declare-fun res!67216 () Bool)

(assert (=> d!43803 (=> (not res!67216) (not e!91678))))

(assert (=> d!43803 (= res!67216 (isStrictlySorted!325 lt!73028))))

(assert (=> d!43803 (= (lemmaContainsTupThenGetReturnValue!90 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73751)))

(declare-fun b!140619 () Bool)

(declare-fun res!67217 () Bool)

(assert (=> b!140619 (=> (not res!67217) (not e!91678))))

(assert (=> b!140619 (= res!67217 (containsKey!180 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140620 () Bool)

(assert (=> b!140620 (= e!91678 (contains!925 lt!73028 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43803 res!67216) b!140619))

(assert (= (and b!140619 res!67217) b!140620))

(assert (=> d!43803 m!166287))

(declare-fun m!168139 () Bool)

(assert (=> d!43803 m!168139))

(declare-fun m!168141 () Bool)

(assert (=> d!43803 m!168141))

(declare-fun m!168143 () Bool)

(assert (=> b!140619 m!168143))

(declare-fun m!168145 () Bool)

(assert (=> b!140620 m!168145))

(assert (=> d!43315 d!43803))

(declare-fun b!140621 () Bool)

(declare-fun e!91679 () List!1745)

(declare-fun call!15624 () List!1745)

(assert (=> b!140621 (= e!91679 call!15624)))

(declare-fun bm!15619 () Bool)

(declare-fun call!15622 () List!1745)

(assert (=> bm!15619 (= call!15624 call!15622)))

(declare-fun d!43805 () Bool)

(declare-fun e!91683 () Bool)

(assert (=> d!43805 e!91683))

(declare-fun res!67218 () Bool)

(assert (=> d!43805 (=> (not res!67218) (not e!91683))))

(declare-fun lt!73752 () List!1745)

(assert (=> d!43805 (= res!67218 (isStrictlySorted!325 lt!73752))))

(declare-fun e!91680 () List!1745)

(assert (=> d!43805 (= lt!73752 e!91680)))

(declare-fun c!26355 () Bool)

(assert (=> d!43805 (= c!26355 (and ((_ is Cons!1741) (toList!888 lt!72905)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72905))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43805 (isStrictlySorted!325 (toList!888 lt!72905))))

(assert (=> d!43805 (= (insertStrictlySorted!93 (toList!888 lt!72905) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73752)))

(declare-fun bm!15620 () Bool)

(declare-fun call!15623 () List!1745)

(assert (=> bm!15620 (= call!15622 call!15623)))

(declare-fun b!140622 () Bool)

(declare-fun e!91681 () List!1745)

(assert (=> b!140622 (= e!91680 e!91681)))

(declare-fun c!26354 () Bool)

(assert (=> b!140622 (= c!26354 (and ((_ is Cons!1741) (toList!888 lt!72905)) (= (_1!1360 (h!2348 (toList!888 lt!72905))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140623 () Bool)

(assert (=> b!140623 (= e!91680 call!15623)))

(declare-fun bm!15621 () Bool)

(declare-fun e!91682 () List!1745)

(assert (=> bm!15621 (= call!15623 ($colon$colon!94 e!91682 (ite c!26355 (h!2348 (toList!888 lt!72905)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26353 () Bool)

(assert (=> bm!15621 (= c!26353 c!26355)))

(declare-fun b!140624 () Bool)

(declare-fun c!26356 () Bool)

(assert (=> b!140624 (= e!91682 (ite c!26354 (t!6329 (toList!888 lt!72905)) (ite c!26356 (Cons!1741 (h!2348 (toList!888 lt!72905)) (t!6329 (toList!888 lt!72905))) Nil!1742)))))

(declare-fun b!140625 () Bool)

(assert (=> b!140625 (= e!91681 call!15622)))

(declare-fun b!140626 () Bool)

(assert (=> b!140626 (= e!91683 (contains!925 lt!73752 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140627 () Bool)

(assert (=> b!140627 (= e!91682 (insertStrictlySorted!93 (t!6329 (toList!888 lt!72905)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140628 () Bool)

(assert (=> b!140628 (= e!91679 call!15624)))

(declare-fun b!140629 () Bool)

(assert (=> b!140629 (= c!26356 (and ((_ is Cons!1741) (toList!888 lt!72905)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!72905))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!140629 (= e!91681 e!91679)))

(declare-fun b!140630 () Bool)

(declare-fun res!67219 () Bool)

(assert (=> b!140630 (=> (not res!67219) (not e!91683))))

(assert (=> b!140630 (= res!67219 (containsKey!180 lt!73752 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43805 c!26355) b!140623))

(assert (= (and d!43805 (not c!26355)) b!140622))

(assert (= (and b!140622 c!26354) b!140625))

(assert (= (and b!140622 (not c!26354)) b!140629))

(assert (= (and b!140629 c!26356) b!140628))

(assert (= (and b!140629 (not c!26356)) b!140621))

(assert (= (or b!140628 b!140621) bm!15619))

(assert (= (or b!140625 bm!15619) bm!15620))

(assert (= (or b!140623 bm!15620) bm!15621))

(assert (= (and bm!15621 c!26353) b!140627))

(assert (= (and bm!15621 (not c!26353)) b!140624))

(assert (= (and d!43805 res!67218) b!140630))

(assert (= (and b!140630 res!67219) b!140626))

(declare-fun m!168147 () Bool)

(assert (=> b!140627 m!168147))

(declare-fun m!168149 () Bool)

(assert (=> d!43805 m!168149))

(declare-fun m!168151 () Bool)

(assert (=> d!43805 m!168151))

(declare-fun m!168153 () Bool)

(assert (=> b!140630 m!168153))

(declare-fun m!168155 () Bool)

(assert (=> bm!15621 m!168155))

(declare-fun m!168157 () Bool)

(assert (=> b!140626 m!168157))

(assert (=> d!43315 d!43805))

(declare-fun d!43807 () Bool)

(declare-fun e!91684 () Bool)

(assert (=> d!43807 e!91684))

(declare-fun res!67220 () Bool)

(assert (=> d!43807 (=> res!67220 e!91684)))

(declare-fun lt!73755 () Bool)

(assert (=> d!43807 (= res!67220 (not lt!73755))))

(declare-fun lt!73753 () Bool)

(assert (=> d!43807 (= lt!73755 lt!73753)))

(declare-fun lt!73754 () Unit!4373)

(declare-fun e!91685 () Unit!4373)

(assert (=> d!43807 (= lt!73754 e!91685)))

(declare-fun c!26357 () Bool)

(assert (=> d!43807 (= c!26357 lt!73753)))

(assert (=> d!43807 (= lt!73753 (containsKey!180 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43807 (= (contains!923 lt!73059 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73755)))

(declare-fun b!140631 () Bool)

(declare-fun lt!73756 () Unit!4373)

(assert (=> b!140631 (= e!91685 lt!73756)))

(assert (=> b!140631 (= lt!73756 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> b!140631 (isDefined!129 (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140632 () Bool)

(declare-fun Unit!4425 () Unit!4373)

(assert (=> b!140632 (= e!91685 Unit!4425)))

(declare-fun b!140633 () Bool)

(assert (=> b!140633 (= e!91684 (isDefined!129 (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43807 c!26357) b!140631))

(assert (= (and d!43807 (not c!26357)) b!140632))

(assert (= (and d!43807 (not res!67220)) b!140633))

(declare-fun m!168159 () Bool)

(assert (=> d!43807 m!168159))

(declare-fun m!168161 () Bool)

(assert (=> b!140631 m!168161))

(assert (=> b!140631 m!166337))

(assert (=> b!140631 m!166337))

(declare-fun m!168163 () Bool)

(assert (=> b!140631 m!168163))

(assert (=> b!140633 m!166337))

(assert (=> b!140633 m!166337))

(assert (=> b!140633 m!168163))

(assert (=> d!43325 d!43807))

(declare-fun b!140637 () Bool)

(declare-fun e!91687 () Option!182)

(assert (=> b!140637 (= e!91687 None!180)))

(declare-fun b!140634 () Bool)

(declare-fun e!91686 () Option!182)

(assert (=> b!140634 (= e!91686 (Some!181 (_2!1360 (h!2348 lt!73056))))))

(declare-fun b!140635 () Bool)

(assert (=> b!140635 (= e!91686 e!91687)))

(declare-fun c!26359 () Bool)

(assert (=> b!140635 (= c!26359 (and ((_ is Cons!1741) lt!73056) (not (= (_1!1360 (h!2348 lt!73056)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!43809 () Bool)

(declare-fun c!26358 () Bool)

(assert (=> d!43809 (= c!26358 (and ((_ is Cons!1741) lt!73056) (= (_1!1360 (h!2348 lt!73056)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43809 (= (getValueByKey!176 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91686)))

(declare-fun b!140636 () Bool)

(assert (=> b!140636 (= e!91687 (getValueByKey!176 (t!6329 lt!73056) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43809 c!26358) b!140634))

(assert (= (and d!43809 (not c!26358)) b!140635))

(assert (= (and b!140635 c!26359) b!140636))

(assert (= (and b!140635 (not c!26359)) b!140637))

(declare-fun m!168165 () Bool)

(assert (=> b!140636 m!168165))

(assert (=> d!43325 d!43809))

(declare-fun d!43811 () Bool)

(assert (=> d!43811 (= (getValueByKey!176 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73757 () Unit!4373)

(assert (=> d!43811 (= lt!73757 (choose!865 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!91688 () Bool)

(assert (=> d!43811 e!91688))

(declare-fun res!67221 () Bool)

(assert (=> d!43811 (=> (not res!67221) (not e!91688))))

(assert (=> d!43811 (= res!67221 (isStrictlySorted!325 lt!73056))))

(assert (=> d!43811 (= (lemmaContainsTupThenGetReturnValue!90 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73757)))

(declare-fun b!140638 () Bool)

(declare-fun res!67222 () Bool)

(assert (=> b!140638 (=> (not res!67222) (not e!91688))))

(assert (=> b!140638 (= res!67222 (containsKey!180 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140639 () Bool)

(assert (=> b!140639 (= e!91688 (contains!925 lt!73056 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43811 res!67221) b!140638))

(assert (= (and b!140638 res!67222) b!140639))

(assert (=> d!43811 m!166331))

(declare-fun m!168167 () Bool)

(assert (=> d!43811 m!168167))

(declare-fun m!168169 () Bool)

(assert (=> d!43811 m!168169))

(declare-fun m!168171 () Bool)

(assert (=> b!140638 m!168171))

(declare-fun m!168173 () Bool)

(assert (=> b!140639 m!168173))

(assert (=> d!43325 d!43811))

(declare-fun b!140640 () Bool)

(declare-fun e!91689 () List!1745)

(declare-fun call!15627 () List!1745)

(assert (=> b!140640 (= e!91689 call!15627)))

(declare-fun bm!15622 () Bool)

(declare-fun call!15625 () List!1745)

(assert (=> bm!15622 (= call!15627 call!15625)))

(declare-fun d!43813 () Bool)

(declare-fun e!91693 () Bool)

(assert (=> d!43813 e!91693))

(declare-fun res!67223 () Bool)

(assert (=> d!43813 (=> (not res!67223) (not e!91693))))

(declare-fun lt!73758 () List!1745)

(assert (=> d!43813 (= res!67223 (isStrictlySorted!325 lt!73758))))

(declare-fun e!91690 () List!1745)

(assert (=> d!43813 (= lt!73758 e!91690)))

(declare-fun c!26362 () Bool)

(assert (=> d!43813 (= c!26362 (and ((_ is Cons!1741) (toList!888 lt!72887)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72887))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43813 (isStrictlySorted!325 (toList!888 lt!72887))))

(assert (=> d!43813 (= (insertStrictlySorted!93 (toList!888 lt!72887) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73758)))

(declare-fun bm!15623 () Bool)

(declare-fun call!15626 () List!1745)

(assert (=> bm!15623 (= call!15625 call!15626)))

(declare-fun b!140641 () Bool)

(declare-fun e!91691 () List!1745)

(assert (=> b!140641 (= e!91690 e!91691)))

(declare-fun c!26361 () Bool)

(assert (=> b!140641 (= c!26361 (and ((_ is Cons!1741) (toList!888 lt!72887)) (= (_1!1360 (h!2348 (toList!888 lt!72887))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140642 () Bool)

(assert (=> b!140642 (= e!91690 call!15626)))

(declare-fun e!91692 () List!1745)

(declare-fun bm!15624 () Bool)

(assert (=> bm!15624 (= call!15626 ($colon$colon!94 e!91692 (ite c!26362 (h!2348 (toList!888 lt!72887)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26360 () Bool)

(assert (=> bm!15624 (= c!26360 c!26362)))

(declare-fun c!26363 () Bool)

(declare-fun b!140643 () Bool)

(assert (=> b!140643 (= e!91692 (ite c!26361 (t!6329 (toList!888 lt!72887)) (ite c!26363 (Cons!1741 (h!2348 (toList!888 lt!72887)) (t!6329 (toList!888 lt!72887))) Nil!1742)))))

(declare-fun b!140644 () Bool)

(assert (=> b!140644 (= e!91691 call!15625)))

(declare-fun b!140645 () Bool)

(assert (=> b!140645 (= e!91693 (contains!925 lt!73758 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140646 () Bool)

(assert (=> b!140646 (= e!91692 (insertStrictlySorted!93 (t!6329 (toList!888 lt!72887)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140647 () Bool)

(assert (=> b!140647 (= e!91689 call!15627)))

(declare-fun b!140648 () Bool)

(assert (=> b!140648 (= c!26363 (and ((_ is Cons!1741) (toList!888 lt!72887)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!72887))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!140648 (= e!91691 e!91689)))

(declare-fun b!140649 () Bool)

(declare-fun res!67224 () Bool)

(assert (=> b!140649 (=> (not res!67224) (not e!91693))))

(assert (=> b!140649 (= res!67224 (containsKey!180 lt!73758 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43813 c!26362) b!140642))

(assert (= (and d!43813 (not c!26362)) b!140641))

(assert (= (and b!140641 c!26361) b!140644))

(assert (= (and b!140641 (not c!26361)) b!140648))

(assert (= (and b!140648 c!26363) b!140647))

(assert (= (and b!140648 (not c!26363)) b!140640))

(assert (= (or b!140647 b!140640) bm!15622))

(assert (= (or b!140644 bm!15622) bm!15623))

(assert (= (or b!140642 bm!15623) bm!15624))

(assert (= (and bm!15624 c!26360) b!140646))

(assert (= (and bm!15624 (not c!26360)) b!140643))

(assert (= (and d!43813 res!67223) b!140649))

(assert (= (and b!140649 res!67224) b!140645))

(declare-fun m!168175 () Bool)

(assert (=> b!140646 m!168175))

(declare-fun m!168177 () Bool)

(assert (=> d!43813 m!168177))

(declare-fun m!168179 () Bool)

(assert (=> d!43813 m!168179))

(declare-fun m!168181 () Bool)

(assert (=> b!140649 m!168181))

(declare-fun m!168183 () Bool)

(assert (=> bm!15624 m!168183))

(declare-fun m!168185 () Bool)

(assert (=> b!140645 m!168185))

(assert (=> d!43325 d!43813))

(declare-fun d!43815 () Bool)

(assert (=> d!43815 (= (apply!120 lt!73286 lt!73287) (get!1531 (getValueByKey!176 (toList!888 lt!73286) lt!73287)))))

(declare-fun bs!5869 () Bool)

(assert (= bs!5869 d!43815))

(declare-fun m!168187 () Bool)

(assert (=> bs!5869 m!168187))

(assert (=> bs!5869 m!168187))

(declare-fun m!168189 () Bool)

(assert (=> bs!5869 m!168189))

(assert (=> b!139904 d!43815))

(declare-fun d!43817 () Bool)

(assert (=> d!43817 (= (apply!120 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73299) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73299)))))

(declare-fun bs!5870 () Bool)

(assert (= bs!5870 d!43817))

(declare-fun m!168191 () Bool)

(assert (=> bs!5870 m!168191))

(assert (=> bs!5870 m!168191))

(declare-fun m!168193 () Bool)

(assert (=> bs!5870 m!168193))

(assert (=> b!139904 d!43817))

(declare-fun d!43819 () Bool)

(assert (=> d!43819 (= (apply!120 lt!73288 lt!73293) (get!1531 (getValueByKey!176 (toList!888 lt!73288) lt!73293)))))

(declare-fun bs!5871 () Bool)

(assert (= bs!5871 d!43819))

(declare-fun m!168195 () Bool)

(assert (=> bs!5871 m!168195))

(assert (=> bs!5871 m!168195))

(declare-fun m!168197 () Bool)

(assert (=> bs!5871 m!168197))

(assert (=> b!139904 d!43819))

(assert (=> b!139904 d!43673))

(declare-fun d!43821 () Bool)

(assert (=> d!43821 (= (apply!120 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) lt!73287) (apply!120 lt!73286 lt!73287))))

(declare-fun lt!73759 () Unit!4373)

(assert (=> d!43821 (= lt!73759 (choose!856 lt!73286 lt!73290 (zeroValue!2790 newMap!16) lt!73287))))

(declare-fun e!91694 () Bool)

(assert (=> d!43821 e!91694))

(declare-fun res!67225 () Bool)

(assert (=> d!43821 (=> (not res!67225) (not e!91694))))

(assert (=> d!43821 (= res!67225 (contains!923 lt!73286 lt!73287))))

(assert (=> d!43821 (= (addApplyDifferent!96 lt!73286 lt!73290 (zeroValue!2790 newMap!16) lt!73287) lt!73759)))

(declare-fun b!140650 () Bool)

(assert (=> b!140650 (= e!91694 (not (= lt!73287 lt!73290)))))

(assert (= (and d!43821 res!67225) b!140650))

(assert (=> d!43821 m!166761))

(declare-fun m!168199 () Bool)

(assert (=> d!43821 m!168199))

(declare-fun m!168201 () Bool)

(assert (=> d!43821 m!168201))

(assert (=> d!43821 m!166749))

(assert (=> d!43821 m!166749))

(assert (=> d!43821 m!166751))

(assert (=> b!139904 d!43821))

(declare-fun d!43823 () Bool)

(assert (=> d!43823 (= (apply!120 lt!73304 lt!73299) (get!1531 (getValueByKey!176 (toList!888 lt!73304) lt!73299)))))

(declare-fun bs!5872 () Bool)

(assert (= bs!5872 d!43823))

(declare-fun m!168203 () Bool)

(assert (=> bs!5872 m!168203))

(assert (=> bs!5872 m!168203))

(declare-fun m!168205 () Bool)

(assert (=> bs!5872 m!168205))

(assert (=> b!139904 d!43823))

(declare-fun d!43825 () Bool)

(assert (=> d!43825 (= (apply!120 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73299) (apply!120 lt!73304 lt!73299))))

(declare-fun lt!73760 () Unit!4373)

(assert (=> d!43825 (= lt!73760 (choose!856 lt!73304 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73299))))

(declare-fun e!91695 () Bool)

(assert (=> d!43825 e!91695))

(declare-fun res!67226 () Bool)

(assert (=> d!43825 (=> (not res!67226) (not e!91695))))

(assert (=> d!43825 (= res!67226 (contains!923 lt!73304 lt!73299))))

(assert (=> d!43825 (= (addApplyDifferent!96 lt!73304 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73299) lt!73760)))

(declare-fun b!140651 () Bool)

(assert (=> b!140651 (= e!91695 (not (= lt!73299 lt!73300)))))

(assert (= (and d!43825 res!67226) b!140651))

(assert (=> d!43825 m!166755))

(declare-fun m!168207 () Bool)

(assert (=> d!43825 m!168207))

(declare-fun m!168209 () Bool)

(assert (=> d!43825 m!168209))

(assert (=> d!43825 m!166765))

(assert (=> d!43825 m!166765))

(assert (=> d!43825 m!166767))

(assert (=> b!139904 d!43825))

(declare-fun d!43827 () Bool)

(assert (=> d!43827 (= (apply!120 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73293) (apply!120 lt!73288 lt!73293))))

(declare-fun lt!73761 () Unit!4373)

(assert (=> d!43827 (= lt!73761 (choose!856 lt!73288 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73293))))

(declare-fun e!91696 () Bool)

(assert (=> d!43827 e!91696))

(declare-fun res!67227 () Bool)

(assert (=> d!43827 (=> (not res!67227) (not e!91696))))

(assert (=> d!43827 (= res!67227 (contains!923 lt!73288 lt!73293))))

(assert (=> d!43827 (= (addApplyDifferent!96 lt!73288 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73293) lt!73761)))

(declare-fun b!140652 () Bool)

(assert (=> b!140652 (= e!91696 (not (= lt!73293 lt!73289)))))

(assert (= (and d!43827 res!67227) b!140652))

(assert (=> d!43827 m!166769))

(declare-fun m!168211 () Bool)

(assert (=> d!43827 m!168211))

(declare-fun m!168213 () Bool)

(assert (=> d!43827 m!168213))

(assert (=> d!43827 m!166757))

(assert (=> d!43827 m!166757))

(assert (=> d!43827 m!166759))

(assert (=> b!139904 d!43827))

(declare-fun d!43829 () Bool)

(assert (=> d!43829 (= (apply!120 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73293) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73293)))))

(declare-fun bs!5873 () Bool)

(assert (= bs!5873 d!43829))

(declare-fun m!168215 () Bool)

(assert (=> bs!5873 m!168215))

(assert (=> bs!5873 m!168215))

(declare-fun m!168217 () Bool)

(assert (=> bs!5873 m!168217))

(assert (=> b!139904 d!43829))

(declare-fun d!43831 () Bool)

(declare-fun e!91697 () Bool)

(assert (=> d!43831 e!91697))

(declare-fun res!67228 () Bool)

(assert (=> d!43831 (=> (not res!67228) (not e!91697))))

(declare-fun lt!73765 () ListLongMap!1745)

(assert (=> d!43831 (= res!67228 (contains!923 lt!73765 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!73762 () List!1745)

(assert (=> d!43831 (= lt!73765 (ListLongMap!1746 lt!73762))))

(declare-fun lt!73763 () Unit!4373)

(declare-fun lt!73764 () Unit!4373)

(assert (=> d!43831 (= lt!73763 lt!73764)))

(assert (=> d!43831 (= (getValueByKey!176 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43831 (= lt!73764 (lemmaContainsTupThenGetReturnValue!90 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43831 (= lt!73762 (insertStrictlySorted!93 (toList!888 lt!73288) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43831 (= (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73765)))

(declare-fun b!140653 () Bool)

(declare-fun res!67229 () Bool)

(assert (=> b!140653 (=> (not res!67229) (not e!91697))))

(assert (=> b!140653 (= res!67229 (= (getValueByKey!176 (toList!888 lt!73765) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!140654 () Bool)

(assert (=> b!140654 (= e!91697 (contains!925 (toList!888 lt!73765) (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!43831 res!67228) b!140653))

(assert (= (and b!140653 res!67229) b!140654))

(declare-fun m!168219 () Bool)

(assert (=> d!43831 m!168219))

(declare-fun m!168221 () Bool)

(assert (=> d!43831 m!168221))

(declare-fun m!168223 () Bool)

(assert (=> d!43831 m!168223))

(declare-fun m!168225 () Bool)

(assert (=> d!43831 m!168225))

(declare-fun m!168227 () Bool)

(assert (=> b!140653 m!168227))

(declare-fun m!168229 () Bool)

(assert (=> b!140654 m!168229))

(assert (=> b!139904 d!43831))

(declare-fun d!43833 () Bool)

(declare-fun e!91698 () Bool)

(assert (=> d!43833 e!91698))

(declare-fun res!67230 () Bool)

(assert (=> d!43833 (=> (not res!67230) (not e!91698))))

(declare-fun lt!73769 () ListLongMap!1745)

(assert (=> d!43833 (= res!67230 (contains!923 lt!73769 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!73766 () List!1745)

(assert (=> d!43833 (= lt!73769 (ListLongMap!1746 lt!73766))))

(declare-fun lt!73767 () Unit!4373)

(declare-fun lt!73768 () Unit!4373)

(assert (=> d!43833 (= lt!73767 lt!73768)))

(assert (=> d!43833 (= (getValueByKey!176 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43833 (= lt!73768 (lemmaContainsTupThenGetReturnValue!90 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43833 (= lt!73766 (insertStrictlySorted!93 (toList!888 lt!73304) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43833 (= (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73769)))

(declare-fun b!140655 () Bool)

(declare-fun res!67231 () Bool)

(assert (=> b!140655 (=> (not res!67231) (not e!91698))))

(assert (=> b!140655 (= res!67231 (= (getValueByKey!176 (toList!888 lt!73769) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!140656 () Bool)

(assert (=> b!140656 (= e!91698 (contains!925 (toList!888 lt!73769) (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!43833 res!67230) b!140655))

(assert (= (and b!140655 res!67231) b!140656))

(declare-fun m!168231 () Bool)

(assert (=> d!43833 m!168231))

(declare-fun m!168233 () Bool)

(assert (=> d!43833 m!168233))

(declare-fun m!168235 () Bool)

(assert (=> d!43833 m!168235))

(declare-fun m!168237 () Bool)

(assert (=> d!43833 m!168237))

(declare-fun m!168239 () Bool)

(assert (=> b!140655 m!168239))

(declare-fun m!168241 () Bool)

(assert (=> b!140656 m!168241))

(assert (=> b!139904 d!43833))

(declare-fun d!43835 () Bool)

(declare-fun e!91699 () Bool)

(assert (=> d!43835 e!91699))

(declare-fun res!67232 () Bool)

(assert (=> d!43835 (=> (not res!67232) (not e!91699))))

(declare-fun lt!73773 () ListLongMap!1745)

(assert (=> d!43835 (= res!67232 (contains!923 lt!73773 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73770 () List!1745)

(assert (=> d!43835 (= lt!73773 (ListLongMap!1746 lt!73770))))

(declare-fun lt!73771 () Unit!4373)

(declare-fun lt!73772 () Unit!4373)

(assert (=> d!43835 (= lt!73771 lt!73772)))

(assert (=> d!43835 (= (getValueByKey!176 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43835 (= lt!73772 (lemmaContainsTupThenGetReturnValue!90 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43835 (= lt!73770 (insertStrictlySorted!93 (toList!888 lt!73286) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43835 (= (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) lt!73773)))

(declare-fun b!140657 () Bool)

(declare-fun res!67233 () Bool)

(assert (=> b!140657 (=> (not res!67233) (not e!91699))))

(assert (=> b!140657 (= res!67233 (= (getValueByKey!176 (toList!888 lt!73773) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140658 () Bool)

(assert (=> b!140658 (= e!91699 (contains!925 (toList!888 lt!73773) (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43835 res!67232) b!140657))

(assert (= (and b!140657 res!67233) b!140658))

(declare-fun m!168243 () Bool)

(assert (=> d!43835 m!168243))

(declare-fun m!168245 () Bool)

(assert (=> d!43835 m!168245))

(declare-fun m!168247 () Bool)

(assert (=> d!43835 m!168247))

(declare-fun m!168249 () Bool)

(assert (=> d!43835 m!168249))

(declare-fun m!168251 () Bool)

(assert (=> b!140657 m!168251))

(declare-fun m!168253 () Bool)

(assert (=> b!140658 m!168253))

(assert (=> b!139904 d!43835))

(declare-fun d!43837 () Bool)

(declare-fun e!91700 () Bool)

(assert (=> d!43837 e!91700))

(declare-fun res!67234 () Bool)

(assert (=> d!43837 (=> (not res!67234) (not e!91700))))

(declare-fun lt!73777 () ListLongMap!1745)

(assert (=> d!43837 (= res!67234 (contains!923 lt!73777 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73774 () List!1745)

(assert (=> d!43837 (= lt!73777 (ListLongMap!1746 lt!73774))))

(declare-fun lt!73775 () Unit!4373)

(declare-fun lt!73776 () Unit!4373)

(assert (=> d!43837 (= lt!73775 lt!73776)))

(assert (=> d!43837 (= (getValueByKey!176 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43837 (= lt!73776 (lemmaContainsTupThenGetReturnValue!90 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43837 (= lt!73774 (insertStrictlySorted!93 (toList!888 lt!73301) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43837 (= (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) lt!73777)))

(declare-fun b!140659 () Bool)

(declare-fun res!67235 () Bool)

(assert (=> b!140659 (=> (not res!67235) (not e!91700))))

(assert (=> b!140659 (= res!67235 (= (getValueByKey!176 (toList!888 lt!73777) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140660 () Bool)

(assert (=> b!140660 (= e!91700 (contains!925 (toList!888 lt!73777) (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43837 res!67234) b!140659))

(assert (= (and b!140659 res!67235) b!140660))

(declare-fun m!168255 () Bool)

(assert (=> d!43837 m!168255))

(declare-fun m!168257 () Bool)

(assert (=> d!43837 m!168257))

(declare-fun m!168259 () Bool)

(assert (=> d!43837 m!168259))

(declare-fun m!168261 () Bool)

(assert (=> d!43837 m!168261))

(declare-fun m!168263 () Bool)

(assert (=> b!140659 m!168263))

(declare-fun m!168265 () Bool)

(assert (=> b!140660 m!168265))

(assert (=> b!139904 d!43837))

(declare-fun d!43839 () Bool)

(assert (=> d!43839 (contains!923 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) lt!73302)))

(declare-fun lt!73778 () Unit!4373)

(assert (=> d!43839 (= lt!73778 (choose!857 lt!73301 lt!73303 (zeroValue!2790 newMap!16) lt!73302))))

(assert (=> d!43839 (contains!923 lt!73301 lt!73302)))

(assert (=> d!43839 (= (addStillContains!96 lt!73301 lt!73303 (zeroValue!2790 newMap!16) lt!73302) lt!73778)))

(declare-fun bs!5874 () Bool)

(assert (= bs!5874 d!43839))

(assert (=> bs!5874 m!166747))

(assert (=> bs!5874 m!166747))

(assert (=> bs!5874 m!166763))

(declare-fun m!168267 () Bool)

(assert (=> bs!5874 m!168267))

(declare-fun m!168269 () Bool)

(assert (=> bs!5874 m!168269))

(assert (=> b!139904 d!43839))

(declare-fun d!43841 () Bool)

(declare-fun e!91701 () Bool)

(assert (=> d!43841 e!91701))

(declare-fun res!67236 () Bool)

(assert (=> d!43841 (=> res!67236 e!91701)))

(declare-fun lt!73781 () Bool)

(assert (=> d!43841 (= res!67236 (not lt!73781))))

(declare-fun lt!73779 () Bool)

(assert (=> d!43841 (= lt!73781 lt!73779)))

(declare-fun lt!73780 () Unit!4373)

(declare-fun e!91702 () Unit!4373)

(assert (=> d!43841 (= lt!73780 e!91702)))

(declare-fun c!26364 () Bool)

(assert (=> d!43841 (= c!26364 lt!73779)))

(assert (=> d!43841 (= lt!73779 (containsKey!180 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))

(assert (=> d!43841 (= (contains!923 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) lt!73302) lt!73781)))

(declare-fun b!140661 () Bool)

(declare-fun lt!73782 () Unit!4373)

(assert (=> b!140661 (= e!91702 lt!73782)))

(assert (=> b!140661 (= lt!73782 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))

(assert (=> b!140661 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))

(declare-fun b!140662 () Bool)

(declare-fun Unit!4426 () Unit!4373)

(assert (=> b!140662 (= e!91702 Unit!4426)))

(declare-fun b!140663 () Bool)

(assert (=> b!140663 (= e!91701 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302)))))

(assert (= (and d!43841 c!26364) b!140661))

(assert (= (and d!43841 (not c!26364)) b!140662))

(assert (= (and d!43841 (not res!67236)) b!140663))

(declare-fun m!168271 () Bool)

(assert (=> d!43841 m!168271))

(declare-fun m!168273 () Bool)

(assert (=> b!140661 m!168273))

(declare-fun m!168275 () Bool)

(assert (=> b!140661 m!168275))

(assert (=> b!140661 m!168275))

(declare-fun m!168277 () Bool)

(assert (=> b!140661 m!168277))

(assert (=> b!140663 m!168275))

(assert (=> b!140663 m!168275))

(assert (=> b!140663 m!168277))

(assert (=> b!139904 d!43841))

(declare-fun d!43843 () Bool)

(assert (=> d!43843 (= (apply!120 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) lt!73287) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!73287)))))

(declare-fun bs!5875 () Bool)

(assert (= bs!5875 d!43843))

(declare-fun m!168279 () Bool)

(assert (=> bs!5875 m!168279))

(assert (=> bs!5875 m!168279))

(declare-fun m!168281 () Bool)

(assert (=> bs!5875 m!168281))

(assert (=> b!139904 d!43843))

(assert (=> b!139896 d!43531))

(assert (=> b!139896 d!43533))

(declare-fun d!43845 () Bool)

(declare-fun e!91703 () Bool)

(assert (=> d!43845 e!91703))

(declare-fun res!67237 () Bool)

(assert (=> d!43845 (=> res!67237 e!91703)))

(declare-fun lt!73785 () Bool)

(assert (=> d!43845 (= res!67237 (not lt!73785))))

(declare-fun lt!73783 () Bool)

(assert (=> d!43845 (= lt!73785 lt!73783)))

(declare-fun lt!73784 () Unit!4373)

(declare-fun e!91704 () Unit!4373)

(assert (=> d!43845 (= lt!73784 e!91704)))

(declare-fun c!26365 () Bool)

(assert (=> d!43845 (= c!26365 lt!73783)))

(assert (=> d!43845 (= lt!73783 (containsKey!180 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43845 (= (contains!923 lt!73158 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73785)))

(declare-fun b!140664 () Bool)

(declare-fun lt!73786 () Unit!4373)

(assert (=> b!140664 (= e!91704 lt!73786)))

(assert (=> b!140664 (= lt!73786 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140664 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140665 () Bool)

(declare-fun Unit!4427 () Unit!4373)

(assert (=> b!140665 (= e!91704 Unit!4427)))

(declare-fun b!140666 () Bool)

(assert (=> b!140666 (= e!91703 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43845 c!26365) b!140664))

(assert (= (and d!43845 (not c!26365)) b!140665))

(assert (= (and d!43845 (not res!67237)) b!140666))

(assert (=> d!43845 m!166385))

(declare-fun m!168283 () Bool)

(assert (=> d!43845 m!168283))

(assert (=> b!140664 m!166385))

(declare-fun m!168285 () Bool)

(assert (=> b!140664 m!168285))

(assert (=> b!140664 m!166385))

(declare-fun m!168287 () Bool)

(assert (=> b!140664 m!168287))

(assert (=> b!140664 m!168287))

(declare-fun m!168289 () Bool)

(assert (=> b!140664 m!168289))

(assert (=> b!140666 m!166385))

(assert (=> b!140666 m!168287))

(assert (=> b!140666 m!168287))

(assert (=> b!140666 m!168289))

(assert (=> b!139757 d!43845))

(declare-fun bm!15625 () Bool)

(declare-fun call!15628 () Bool)

(declare-fun c!26366 () Bool)

(assert (=> bm!15625 (= call!15628 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26366 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))))))

(declare-fun b!140667 () Bool)

(declare-fun e!91708 () Bool)

(assert (=> b!140667 (= e!91708 call!15628)))

(declare-fun b!140669 () Bool)

(assert (=> b!140669 (= e!91708 call!15628)))

(declare-fun b!140670 () Bool)

(declare-fun e!91705 () Bool)

(declare-fun e!91706 () Bool)

(assert (=> b!140670 (= e!91705 e!91706)))

(declare-fun res!67239 () Bool)

(assert (=> b!140670 (=> (not res!67239) (not e!91706))))

(declare-fun e!91707 () Bool)

(assert (=> b!140670 (= res!67239 (not e!91707))))

(declare-fun res!67240 () Bool)

(assert (=> b!140670 (=> (not res!67240) (not e!91707))))

(assert (=> b!140670 (= res!67240 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140671 () Bool)

(assert (=> b!140671 (= e!91706 e!91708)))

(assert (=> b!140671 (= c!26366 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!43847 () Bool)

(declare-fun res!67238 () Bool)

(assert (=> d!43847 (=> res!67238 e!91705)))

(assert (=> d!43847 (= res!67238 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43847 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) e!91705)))

(declare-fun b!140668 () Bool)

(assert (=> b!140668 (= e!91707 (contains!924 (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!43847 (not res!67238)) b!140670))

(assert (= (and b!140670 res!67240) b!140668))

(assert (= (and b!140670 res!67239) b!140671))

(assert (= (and b!140671 c!26366) b!140667))

(assert (= (and b!140671 (not c!26366)) b!140669))

(assert (= (or b!140667 b!140669) bm!15625))

(declare-fun m!168291 () Bool)

(assert (=> bm!15625 m!168291))

(declare-fun m!168293 () Bool)

(assert (=> bm!15625 m!168293))

(assert (=> b!140670 m!168291))

(assert (=> b!140670 m!168291))

(declare-fun m!168295 () Bool)

(assert (=> b!140670 m!168295))

(assert (=> b!140671 m!168291))

(assert (=> b!140671 m!168291))

(assert (=> b!140671 m!168295))

(assert (=> b!140668 m!168291))

(assert (=> b!140668 m!168291))

(declare-fun m!168297 () Bool)

(assert (=> b!140668 m!168297))

(assert (=> bm!15507 d!43847))

(assert (=> b!139911 d!43479))

(declare-fun b!140672 () Bool)

(declare-fun e!91709 () (_ BitVec 32))

(assert (=> b!140672 (= e!91709 #b00000000000000000000000000000000)))

(declare-fun b!140673 () Bool)

(declare-fun e!91710 () (_ BitVec 32))

(declare-fun call!15629 () (_ BitVec 32))

(assert (=> b!140673 (= e!91710 call!15629)))

(declare-fun bm!15626 () Bool)

(assert (=> bm!15626 (= call!15629 (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!43849 () Bool)

(declare-fun lt!73787 () (_ BitVec 32))

(assert (=> d!43849 (and (bvsge lt!73787 #b00000000000000000000000000000000) (bvsle lt!73787 (bvsub (size!2587 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!43849 (= lt!73787 e!91709)))

(declare-fun c!26367 () Bool)

(assert (=> d!43849 (= c!26367 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43849 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 newMap!16)) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43849 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))) lt!73787)))

(declare-fun b!140674 () Bool)

(assert (=> b!140674 (= e!91709 e!91710)))

(declare-fun c!26368 () Bool)

(assert (=> b!140674 (= c!26368 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140675 () Bool)

(assert (=> b!140675 (= e!91710 (bvadd #b00000000000000000000000000000001 call!15629))))

(assert (= (and d!43849 c!26367) b!140672))

(assert (= (and d!43849 (not c!26367)) b!140674))

(assert (= (and b!140674 c!26368) b!140675))

(assert (= (and b!140674 (not c!26368)) b!140673))

(assert (= (or b!140675 b!140673) bm!15626))

(declare-fun m!168299 () Bool)

(assert (=> bm!15626 m!168299))

(assert (=> b!140674 m!167999))

(assert (=> b!140674 m!167999))

(assert (=> b!140674 m!168003))

(assert (=> bm!15493 d!43849))

(declare-fun d!43851 () Bool)

(assert (=> d!43851 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72894)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72894)))))

(assert (=> d!43331 d!43851))

(declare-fun b!140679 () Bool)

(declare-fun e!91712 () Option!182)

(assert (=> b!140679 (= e!91712 None!180)))

(declare-fun e!91711 () Option!182)

(declare-fun b!140676 () Bool)

(assert (=> b!140676 (= e!91711 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun b!140677 () Bool)

(assert (=> b!140677 (= e!91711 e!91712)))

(declare-fun c!26370 () Bool)

(assert (=> b!140677 (= c!26370 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72894))))))

(declare-fun c!26369 () Bool)

(declare-fun d!43853 () Bool)

(assert (=> d!43853 (= c!26369 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72894)))))

(assert (=> d!43853 (= (getValueByKey!176 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72894) e!91711)))

(declare-fun b!140678 () Bool)

(assert (=> b!140678 (= e!91712 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72894))))

(assert (= (and d!43853 c!26369) b!140676))

(assert (= (and d!43853 (not c!26369)) b!140677))

(assert (= (and b!140677 c!26370) b!140678))

(assert (= (and b!140677 (not c!26370)) b!140679))

(declare-fun m!168301 () Bool)

(assert (=> b!140678 m!168301))

(assert (=> d!43331 d!43853))

(declare-fun lt!73788 () Bool)

(declare-fun d!43855 () Bool)

(assert (=> d!43855 (= lt!73788 (select (content!138 (toList!888 lt!73031)) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!91714 () Bool)

(assert (=> d!43855 (= lt!73788 e!91714)))

(declare-fun res!67241 () Bool)

(assert (=> d!43855 (=> (not res!67241) (not e!91714))))

(assert (=> d!43855 (= res!67241 ((_ is Cons!1741) (toList!888 lt!73031)))))

(assert (=> d!43855 (= (contains!925 (toList!888 lt!73031) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73788)))

(declare-fun b!140680 () Bool)

(declare-fun e!91713 () Bool)

(assert (=> b!140680 (= e!91714 e!91713)))

(declare-fun res!67242 () Bool)

(assert (=> b!140680 (=> res!67242 e!91713)))

(assert (=> b!140680 (= res!67242 (= (h!2348 (toList!888 lt!73031)) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140681 () Bool)

(assert (=> b!140681 (= e!91713 (contains!925 (t!6329 (toList!888 lt!73031)) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43855 res!67241) b!140680))

(assert (= (and b!140680 (not res!67242)) b!140681))

(declare-fun m!168303 () Bool)

(assert (=> d!43855 m!168303))

(declare-fun m!168305 () Bool)

(assert (=> d!43855 m!168305))

(declare-fun m!168307 () Bool)

(assert (=> b!140681 m!168307))

(assert (=> b!139602 d!43855))

(assert (=> b!139763 d!43699))

(assert (=> b!139763 d!43435))

(assert (=> b!139763 d!43379))

(declare-fun d!43857 () Bool)

(declare-fun e!91715 () Bool)

(assert (=> d!43857 e!91715))

(declare-fun res!67243 () Bool)

(assert (=> d!43857 (=> res!67243 e!91715)))

(declare-fun lt!73791 () Bool)

(assert (=> d!43857 (= res!67243 (not lt!73791))))

(declare-fun lt!73789 () Bool)

(assert (=> d!43857 (= lt!73791 lt!73789)))

(declare-fun lt!73790 () Unit!4373)

(declare-fun e!91716 () Unit!4373)

(assert (=> d!43857 (= lt!73790 e!91716)))

(declare-fun c!26371 () Bool)

(assert (=> d!43857 (= c!26371 lt!73789)))

(assert (=> d!43857 (= lt!73789 (containsKey!180 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43857 (= (contains!923 lt!73332 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73791)))

(declare-fun b!140682 () Bool)

(declare-fun lt!73792 () Unit!4373)

(assert (=> b!140682 (= e!91716 lt!73792)))

(assert (=> b!140682 (= lt!73792 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140682 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140683 () Bool)

(declare-fun Unit!4428 () Unit!4373)

(assert (=> b!140683 (= e!91716 Unit!4428)))

(declare-fun b!140684 () Bool)

(assert (=> b!140684 (= e!91715 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43857 c!26371) b!140682))

(assert (= (and d!43857 (not c!26371)) b!140683))

(assert (= (and d!43857 (not res!67243)) b!140684))

(assert (=> d!43857 m!166385))

(declare-fun m!168309 () Bool)

(assert (=> d!43857 m!168309))

(assert (=> b!140682 m!166385))

(declare-fun m!168311 () Bool)

(assert (=> b!140682 m!168311))

(assert (=> b!140682 m!166385))

(assert (=> b!140682 m!166989))

(assert (=> b!140682 m!166989))

(declare-fun m!168313 () Bool)

(assert (=> b!140682 m!168313))

(assert (=> b!140684 m!166385))

(assert (=> b!140684 m!166989))

(assert (=> b!140684 m!166989))

(assert (=> b!140684 m!168313))

(assert (=> b!139951 d!43857))

(assert (=> d!43425 d!43527))

(declare-fun d!43859 () Bool)

(assert (=> d!43859 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!43859 true))

(declare-fun _$5!140 () Unit!4373)

(assert (=> d!43859 (= (choose!862 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3280 lt!72999) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) _$5!140)))

(declare-fun bs!5876 () Bool)

(assert (= bs!5876 d!43859))

(assert (=> bs!5876 m!166097))

(assert (=> bs!5876 m!166097))

(assert (=> bs!5876 m!166593))

(assert (=> bs!5876 m!166221))

(assert (=> bs!5876 m!166217))

(assert (=> d!43381 d!43859))

(assert (=> d!43381 d!43527))

(declare-fun d!43861 () Bool)

(assert (=> d!43861 (= (apply!120 lt!73093 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5877 () Bool)

(assert (= bs!5877 d!43861))

(assert (=> bs!5877 m!167185))

(assert (=> bs!5877 m!167185))

(declare-fun m!168315 () Bool)

(assert (=> bs!5877 m!168315))

(assert (=> b!139668 d!43861))

(assert (=> b!139766 d!43665))

(assert (=> b!139766 d!43667))

(declare-fun d!43863 () Bool)

(declare-fun e!91717 () Bool)

(assert (=> d!43863 e!91717))

(declare-fun res!67244 () Bool)

(assert (=> d!43863 (=> res!67244 e!91717)))

(declare-fun lt!73795 () Bool)

(assert (=> d!43863 (= res!67244 (not lt!73795))))

(declare-fun lt!73793 () Bool)

(assert (=> d!43863 (= lt!73795 lt!73793)))

(declare-fun lt!73794 () Unit!4373)

(declare-fun e!91718 () Unit!4373)

(assert (=> d!43863 (= lt!73794 e!91718)))

(declare-fun c!26372 () Bool)

(assert (=> d!43863 (= c!26372 lt!73793)))

(assert (=> d!43863 (= lt!73793 (containsKey!180 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43863 (= (contains!923 lt!73052 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73795)))

(declare-fun b!140685 () Bool)

(declare-fun lt!73796 () Unit!4373)

(assert (=> b!140685 (= e!91718 lt!73796)))

(assert (=> b!140685 (= lt!73796 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140685 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140686 () Bool)

(declare-fun Unit!4429 () Unit!4373)

(assert (=> b!140686 (= e!91718 Unit!4429)))

(declare-fun b!140687 () Bool)

(assert (=> b!140687 (= e!91717 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43863 c!26372) b!140685))

(assert (= (and d!43863 (not c!26372)) b!140686))

(assert (= (and d!43863 (not res!67244)) b!140687))

(declare-fun m!168317 () Bool)

(assert (=> d!43863 m!168317))

(declare-fun m!168319 () Bool)

(assert (=> b!140685 m!168319))

(declare-fun m!168321 () Bool)

(assert (=> b!140685 m!168321))

(assert (=> b!140685 m!168321))

(declare-fun m!168323 () Bool)

(assert (=> b!140685 m!168323))

(assert (=> b!140687 m!168321))

(assert (=> b!140687 m!168321))

(assert (=> b!140687 m!168323))

(assert (=> d!43319 d!43863))

(assert (=> d!43319 d!43385))

(assert (=> bm!15498 d!43511))

(assert (=> b!139804 d!43755))

(assert (=> b!139647 d!43603))

(assert (=> b!139647 d!43605))

(assert (=> d!43369 d!43347))

(declare-fun d!43865 () Bool)

(declare-fun e!91721 () Bool)

(assert (=> d!43865 e!91721))

(declare-fun res!67250 () Bool)

(assert (=> d!43865 (=> (not res!67250) (not e!91721))))

(declare-fun lt!73799 () SeekEntryResult!279)

(assert (=> d!43865 (= res!67250 ((_ is Found!279) lt!73799))))

(assert (=> d!43865 (= lt!73799 (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43865 true))

(declare-fun _$33!120 () Unit!4373)

(assert (=> d!43865 (= (choose!859 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) _$33!120)))

(declare-fun b!140692 () Bool)

(declare-fun res!67249 () Bool)

(assert (=> b!140692 (=> (not res!67249) (not e!91721))))

(assert (=> b!140692 (= res!67249 (inRange!0 (index!3280 lt!73799) (mask!7280 newMap!16)))))

(declare-fun b!140693 () Bool)

(assert (=> b!140693 (= e!91721 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73799)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43865 res!67250) b!140692))

(assert (= (and b!140692 res!67249) b!140693))

(assert (=> d!43865 m!166013))

(assert (=> d!43865 m!166203))

(declare-fun m!168325 () Bool)

(assert (=> b!140692 m!168325))

(declare-fun m!168327 () Bool)

(assert (=> b!140693 m!168327))

(assert (=> d!43369 d!43865))

(assert (=> d!43369 d!43527))

(assert (=> b!139936 d!43479))

(declare-fun d!43867 () Bool)

(assert (=> d!43867 (= (apply!120 lt!73093 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5878 () Bool)

(assert (= bs!5878 d!43867))

(assert (=> bs!5878 m!167677))

(assert (=> bs!5878 m!167677))

(declare-fun m!168329 () Bool)

(assert (=> bs!5878 m!168329))

(assert (=> b!139676 d!43867))

(declare-fun d!43869 () Bool)

(declare-fun res!67251 () Bool)

(declare-fun e!91722 () Bool)

(assert (=> d!43869 (=> res!67251 e!91722)))

(assert (=> d!43869 (= res!67251 (and ((_ is Cons!1741) (toList!888 lt!72907)) (= (_1!1360 (h!2348 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43869 (= (containsKey!180 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000) e!91722)))

(declare-fun b!140694 () Bool)

(declare-fun e!91723 () Bool)

(assert (=> b!140694 (= e!91722 e!91723)))

(declare-fun res!67252 () Bool)

(assert (=> b!140694 (=> (not res!67252) (not e!91723))))

(assert (=> b!140694 (= res!67252 (and (or (not ((_ is Cons!1741) (toList!888 lt!72907))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!72907)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140695 () Bool)

(assert (=> b!140695 (= e!91723 (containsKey!180 (t!6329 (toList!888 lt!72907)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43869 (not res!67251)) b!140694))

(assert (= (and b!140694 res!67252) b!140695))

(declare-fun m!168331 () Bool)

(assert (=> b!140695 m!168331))

(assert (=> d!43361 d!43869))

(declare-fun d!43871 () Bool)

(declare-fun e!91724 () Bool)

(assert (=> d!43871 e!91724))

(declare-fun res!67253 () Bool)

(assert (=> d!43871 (=> (not res!67253) (not e!91724))))

(declare-fun lt!73803 () ListLongMap!1745)

(assert (=> d!43871 (= res!67253 (contains!923 lt!73803 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73800 () List!1745)

(assert (=> d!43871 (= lt!73803 (ListLongMap!1746 lt!73800))))

(declare-fun lt!73801 () Unit!4373)

(declare-fun lt!73802 () Unit!4373)

(assert (=> d!43871 (= lt!73801 lt!73802)))

(assert (=> d!43871 (= (getValueByKey!176 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43871 (= lt!73802 (lemmaContainsTupThenGetReturnValue!90 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43871 (= lt!73800 (insertStrictlySorted!93 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43871 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73803)))

(declare-fun b!140696 () Bool)

(declare-fun res!67254 () Bool)

(assert (=> b!140696 (=> (not res!67254) (not e!91724))))

(assert (=> b!140696 (= res!67254 (= (getValueByKey!176 (toList!888 lt!73803) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140697 () Bool)

(assert (=> b!140697 (= e!91724 (contains!925 (toList!888 lt!73803) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43871 res!67253) b!140696))

(assert (= (and b!140696 res!67254) b!140697))

(declare-fun m!168333 () Bool)

(assert (=> d!43871 m!168333))

(declare-fun m!168335 () Bool)

(assert (=> d!43871 m!168335))

(declare-fun m!168337 () Bool)

(assert (=> d!43871 m!168337))

(declare-fun m!168339 () Bool)

(assert (=> d!43871 m!168339))

(declare-fun m!168341 () Bool)

(assert (=> b!140696 m!168341))

(declare-fun m!168343 () Bool)

(assert (=> b!140697 m!168343))

(assert (=> d!43363 d!43871))

(assert (=> d!43363 d!43435))

(declare-fun b!140698 () Bool)

(declare-fun e!91733 () Unit!4373)

(declare-fun lt!73825 () Unit!4373)

(assert (=> b!140698 (= e!91733 lt!73825)))

(declare-fun lt!73819 () ListLongMap!1745)

(assert (=> b!140698 (= lt!73819 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73821 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73821 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73820 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73820 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73823 () Unit!4373)

(assert (=> b!140698 (= lt!73823 (addStillContains!96 lt!73819 lt!73821 (zeroValue!2790 newMap!16) lt!73820))))

(assert (=> b!140698 (contains!923 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))) lt!73820)))

(declare-fun lt!73814 () Unit!4373)

(assert (=> b!140698 (= lt!73814 lt!73823)))

(declare-fun lt!73822 () ListLongMap!1745)

(assert (=> b!140698 (= lt!73822 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73818 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73818 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73817 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73817 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73813 () Unit!4373)

(assert (=> b!140698 (= lt!73813 (addApplyDifferent!96 lt!73822 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73817))))

(assert (=> b!140698 (= (apply!120 (+!179 lt!73822 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73817) (apply!120 lt!73822 lt!73817))))

(declare-fun lt!73809 () Unit!4373)

(assert (=> b!140698 (= lt!73809 lt!73813)))

(declare-fun lt!73804 () ListLongMap!1745)

(assert (=> b!140698 (= lt!73804 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73808 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73808 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73805 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73805 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73816 () Unit!4373)

(assert (=> b!140698 (= lt!73816 (addApplyDifferent!96 lt!73804 lt!73808 (zeroValue!2790 newMap!16) lt!73805))))

(assert (=> b!140698 (= (apply!120 (+!179 lt!73804 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))) lt!73805) (apply!120 lt!73804 lt!73805))))

(declare-fun lt!73812 () Unit!4373)

(assert (=> b!140698 (= lt!73812 lt!73816)))

(declare-fun lt!73806 () ListLongMap!1745)

(assert (=> b!140698 (= lt!73806 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73807 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73807 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73811 () (_ BitVec 64))

(assert (=> b!140698 (= lt!73811 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140698 (= lt!73825 (addApplyDifferent!96 lt!73806 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73811))))

(assert (=> b!140698 (= (apply!120 (+!179 lt!73806 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73811) (apply!120 lt!73806 lt!73811))))

(declare-fun b!140699 () Bool)

(declare-fun e!91737 () ListLongMap!1745)

(declare-fun call!15630 () ListLongMap!1745)

(assert (=> b!140699 (= e!91737 call!15630)))

(declare-fun b!140700 () Bool)

(declare-fun e!91725 () Bool)

(assert (=> b!140700 (= e!91725 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140701 () Bool)

(declare-fun e!91729 () Bool)

(declare-fun call!15635 () Bool)

(assert (=> b!140701 (= e!91729 (not call!15635))))

(declare-fun b!140702 () Bool)

(declare-fun e!91732 () Bool)

(declare-fun lt!73824 () ListLongMap!1745)

(assert (=> b!140702 (= e!91732 (= (apply!120 lt!73824 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140702 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!140702 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun bm!15627 () Bool)

(assert (=> bm!15627 (= call!15635 (contains!923 lt!73824 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15628 () Bool)

(declare-fun call!15634 () ListLongMap!1745)

(assert (=> bm!15628 (= call!15630 call!15634)))

(declare-fun b!140704 () Bool)

(declare-fun e!91730 () Bool)

(declare-fun call!15632 () Bool)

(assert (=> b!140704 (= e!91730 (not call!15632))))

(declare-fun b!140705 () Bool)

(declare-fun e!91728 () Bool)

(assert (=> b!140705 (= e!91728 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140706 () Bool)

(declare-fun res!67255 () Bool)

(declare-fun e!91726 () Bool)

(assert (=> b!140706 (=> (not res!67255) (not e!91726))))

(assert (=> b!140706 (= res!67255 e!91730)))

(declare-fun c!26378 () Bool)

(assert (=> b!140706 (= c!26378 (not (= (bvand lt!72994 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140707 () Bool)

(declare-fun res!67260 () Bool)

(assert (=> b!140707 (=> (not res!67260) (not e!91726))))

(declare-fun e!91736 () Bool)

(assert (=> b!140707 (= res!67260 e!91736)))

(declare-fun res!67259 () Bool)

(assert (=> b!140707 (=> res!67259 e!91736)))

(assert (=> b!140707 (= res!67259 (not e!91728))))

(declare-fun res!67256 () Bool)

(assert (=> b!140707 (=> (not res!67256) (not e!91728))))

(assert (=> b!140707 (= res!67256 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun e!91734 () Bool)

(declare-fun b!140708 () Bool)

(assert (=> b!140708 (= e!91734 (= (apply!120 lt!73824 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140709 () Bool)

(declare-fun e!91735 () ListLongMap!1745)

(assert (=> b!140709 (= e!91735 (+!179 call!15634 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140710 () Bool)

(declare-fun e!91727 () ListLongMap!1745)

(declare-fun call!15636 () ListLongMap!1745)

(assert (=> b!140710 (= e!91727 call!15636)))

(declare-fun b!140711 () Bool)

(assert (=> b!140711 (= e!91726 e!91729)))

(declare-fun c!26374 () Bool)

(assert (=> b!140711 (= c!26374 (not (= (bvand lt!72994 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140712 () Bool)

(declare-fun c!26376 () Bool)

(assert (=> b!140712 (= c!26376 (and (not (= (bvand lt!72994 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!72994 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140712 (= e!91737 e!91727)))

(declare-fun b!140713 () Bool)

(assert (=> b!140713 (= e!91735 e!91737)))

(declare-fun c!26377 () Bool)

(assert (=> b!140713 (= c!26377 (and (not (= (bvand lt!72994 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!72994 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140714 () Bool)

(assert (=> b!140714 (= e!91727 call!15630)))

(declare-fun b!140715 () Bool)

(assert (=> b!140715 (= e!91736 e!91732)))

(declare-fun res!67263 () Bool)

(assert (=> b!140715 (=> (not res!67263) (not e!91732))))

(assert (=> b!140715 (= res!67263 (contains!923 lt!73824 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140715 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140703 () Bool)

(assert (=> b!140703 (= e!91729 e!91734)))

(declare-fun res!67257 () Bool)

(assert (=> b!140703 (= res!67257 call!15635)))

(assert (=> b!140703 (=> (not res!67257) (not e!91734))))

(declare-fun d!43873 () Bool)

(assert (=> d!43873 e!91726))

(declare-fun res!67261 () Bool)

(assert (=> d!43873 (=> (not res!67261) (not e!91726))))

(assert (=> d!43873 (= res!67261 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!73815 () ListLongMap!1745)

(assert (=> d!43873 (= lt!73824 lt!73815)))

(declare-fun lt!73810 () Unit!4373)

(assert (=> d!43873 (= lt!73810 e!91733)))

(declare-fun c!26373 () Bool)

(assert (=> d!43873 (= c!26373 e!91725)))

(declare-fun res!67262 () Bool)

(assert (=> d!43873 (=> (not res!67262) (not e!91725))))

(assert (=> d!43873 (= res!67262 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43873 (= lt!73815 e!91735)))

(declare-fun c!26375 () Bool)

(assert (=> d!43873 (= c!26375 (and (not (= (bvand lt!72994 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!72994 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43873 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43873 (= (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73824)))

(declare-fun b!140716 () Bool)

(declare-fun e!91731 () Bool)

(assert (=> b!140716 (= e!91731 (= (apply!120 lt!73824 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15629 () Bool)

(declare-fun call!15631 () ListLongMap!1745)

(declare-fun call!15633 () ListLongMap!1745)

(assert (=> bm!15629 (= call!15631 call!15633)))

(declare-fun bm!15630 () Bool)

(assert (=> bm!15630 (= call!15636 call!15631)))

(declare-fun b!140717 () Bool)

(assert (=> b!140717 (= e!91730 e!91731)))

(declare-fun res!67258 () Bool)

(assert (=> b!140717 (= res!67258 call!15632)))

(assert (=> b!140717 (=> (not res!67258) (not e!91731))))

(declare-fun bm!15631 () Bool)

(assert (=> bm!15631 (= call!15633 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15632 () Bool)

(assert (=> bm!15632 (= call!15634 (+!179 (ite c!26375 call!15633 (ite c!26377 call!15631 call!15636)) (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140718 () Bool)

(declare-fun Unit!4430 () Unit!4373)

(assert (=> b!140718 (= e!91733 Unit!4430)))

(declare-fun bm!15633 () Bool)

(assert (=> bm!15633 (= call!15632 (contains!923 lt!73824 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43873 c!26375) b!140709))

(assert (= (and d!43873 (not c!26375)) b!140713))

(assert (= (and b!140713 c!26377) b!140699))

(assert (= (and b!140713 (not c!26377)) b!140712))

(assert (= (and b!140712 c!26376) b!140714))

(assert (= (and b!140712 (not c!26376)) b!140710))

(assert (= (or b!140714 b!140710) bm!15630))

(assert (= (or b!140699 bm!15630) bm!15629))

(assert (= (or b!140699 b!140714) bm!15628))

(assert (= (or b!140709 bm!15629) bm!15631))

(assert (= (or b!140709 bm!15628) bm!15632))

(assert (= (and d!43873 res!67262) b!140700))

(assert (= (and d!43873 c!26373) b!140698))

(assert (= (and d!43873 (not c!26373)) b!140718))

(assert (= (and d!43873 res!67261) b!140707))

(assert (= (and b!140707 res!67256) b!140705))

(assert (= (and b!140707 (not res!67259)) b!140715))

(assert (= (and b!140715 res!67263) b!140702))

(assert (= (and b!140707 res!67260) b!140706))

(assert (= (and b!140706 c!26378) b!140717))

(assert (= (and b!140706 (not c!26378)) b!140704))

(assert (= (and b!140717 res!67258) b!140716))

(assert (= (or b!140717 b!140704) bm!15633))

(assert (= (and b!140706 res!67255) b!140711))

(assert (= (and b!140711 c!26374) b!140703))

(assert (= (and b!140711 (not c!26374)) b!140701))

(assert (= (and b!140703 res!67257) b!140708))

(assert (= (or b!140703 b!140701) bm!15627))

(declare-fun b_lambda!6293 () Bool)

(assert (=> (not b_lambda!6293) (not b!140702)))

(assert (=> b!140702 t!6337))

(declare-fun b_and!8803 () Bool)

(assert (= b_and!8799 (and (=> t!6337 result!4191) b_and!8803)))

(assert (=> b!140702 t!6339))

(declare-fun b_and!8805 () Bool)

(assert (= b_and!8801 (and (=> t!6339 result!4193) b_and!8805)))

(assert (=> b!140698 m!166029))

(declare-fun m!168345 () Bool)

(assert (=> b!140698 m!168345))

(assert (=> b!140698 m!166029))

(declare-fun m!168347 () Bool)

(assert (=> b!140698 m!168347))

(declare-fun m!168349 () Bool)

(assert (=> b!140698 m!168349))

(assert (=> b!140698 m!166029))

(declare-fun m!168351 () Bool)

(assert (=> b!140698 m!168351))

(declare-fun m!168353 () Bool)

(assert (=> b!140698 m!168353))

(declare-fun m!168355 () Bool)

(assert (=> b!140698 m!168355))

(declare-fun m!168357 () Bool)

(assert (=> b!140698 m!168357))

(declare-fun m!168359 () Bool)

(assert (=> b!140698 m!168359))

(declare-fun m!168361 () Bool)

(assert (=> b!140698 m!168361))

(declare-fun m!168363 () Bool)

(assert (=> b!140698 m!168363))

(declare-fun m!168365 () Bool)

(assert (=> b!140698 m!168365))

(assert (=> b!140698 m!168355))

(assert (=> b!140698 m!168363))

(assert (=> b!140698 m!166385))

(declare-fun m!168367 () Bool)

(assert (=> b!140698 m!168367))

(assert (=> b!140698 m!168353))

(declare-fun m!168369 () Bool)

(assert (=> b!140698 m!168369))

(declare-fun m!168371 () Bool)

(assert (=> b!140698 m!168371))

(declare-fun m!168373 () Bool)

(assert (=> b!140698 m!168373))

(assert (=> b!140698 m!168371))

(declare-fun m!168375 () Bool)

(assert (=> b!140698 m!168375))

(declare-fun m!168377 () Bool)

(assert (=> b!140708 m!168377))

(declare-fun m!168379 () Bool)

(assert (=> bm!15627 m!168379))

(assert (=> d!43873 m!166429))

(assert (=> b!140715 m!166385))

(assert (=> b!140715 m!166385))

(declare-fun m!168381 () Bool)

(assert (=> b!140715 m!168381))

(assert (=> b!140700 m!166385))

(assert (=> b!140700 m!166385))

(assert (=> b!140700 m!166389))

(assert (=> bm!15631 m!166029))

(assert (=> bm!15631 m!168345))

(declare-fun m!168383 () Bool)

(assert (=> b!140709 m!168383))

(declare-fun m!168385 () Bool)

(assert (=> b!140716 m!168385))

(assert (=> b!140705 m!166385))

(assert (=> b!140705 m!166385))

(assert (=> b!140705 m!166389))

(declare-fun m!168387 () Bool)

(assert (=> bm!15632 m!168387))

(declare-fun m!168389 () Bool)

(assert (=> bm!15633 m!168389))

(assert (=> b!140702 m!166385))

(assert (=> b!140702 m!166785))

(assert (=> b!140702 m!166443))

(assert (=> b!140702 m!166787))

(assert (=> b!140702 m!166385))

(declare-fun m!168391 () Bool)

(assert (=> b!140702 m!168391))

(assert (=> b!140702 m!166443))

(assert (=> b!140702 m!166785))

(assert (=> d!43363 d!43873))

(assert (=> d!43363 d!43527))

(declare-fun d!43875 () Bool)

(assert (=> d!43875 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!43875 true))

(declare-fun _$8!124 () Unit!4373)

(assert (=> d!43875 (= (choose!858 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) _$8!124)))

(declare-fun bs!5879 () Bool)

(assert (= bs!5879 d!43875))

(assert (=> bs!5879 m!166097))

(assert (=> bs!5879 m!166097))

(assert (=> bs!5879 m!166495))

(assert (=> bs!5879 m!166029))

(assert (=> bs!5879 m!166497))

(assert (=> d!43363 d!43875))

(declare-fun d!43877 () Bool)

(assert (=> d!43877 (isDefined!129 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun lt!73826 () Unit!4373)

(assert (=> d!43877 (= lt!73826 (choose!864 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91738 () Bool)

(assert (=> d!43877 e!91738))

(declare-fun res!67264 () Bool)

(assert (=> d!43877 (=> (not res!67264) (not e!91738))))

(assert (=> d!43877 (= res!67264 (isStrictlySorted!325 (toList!888 call!15465)))))

(assert (=> d!43877 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73826)))

(declare-fun b!140719 () Bool)

(assert (=> b!140719 (= e!91738 (containsKey!180 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!43877 res!67264) b!140719))

(assert (=> d!43877 m!166013))

(assert (=> d!43877 m!166797))

(assert (=> d!43877 m!166797))

(assert (=> d!43877 m!166799))

(assert (=> d!43877 m!166013))

(declare-fun m!168393 () Bool)

(assert (=> d!43877 m!168393))

(declare-fun m!168395 () Bool)

(assert (=> d!43877 m!168395))

(assert (=> b!140719 m!166013))

(assert (=> b!140719 m!166793))

(assert (=> b!139925 d!43877))

(assert (=> b!139925 d!43467))

(assert (=> b!139925 d!43469))

(assert (=> b!139637 d!43309))

(assert (=> bm!15517 d!43407))

(declare-fun d!43879 () Bool)

(assert (=> d!43879 (= (get!1531 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3284 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43419 d!43879))

(assert (=> d!43419 d!43565))

(assert (=> b!139657 d!43479))

(declare-fun d!43881 () Bool)

(declare-fun lt!73827 () Bool)

(assert (=> d!43881 (= lt!73827 (select (content!138 (toList!888 lt!73059)) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!91740 () Bool)

(assert (=> d!43881 (= lt!73827 e!91740)))

(declare-fun res!67265 () Bool)

(assert (=> d!43881 (=> (not res!67265) (not e!91740))))

(assert (=> d!43881 (= res!67265 ((_ is Cons!1741) (toList!888 lt!73059)))))

(assert (=> d!43881 (= (contains!925 (toList!888 lt!73059) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73827)))

(declare-fun b!140720 () Bool)

(declare-fun e!91739 () Bool)

(assert (=> b!140720 (= e!91740 e!91739)))

(declare-fun res!67266 () Bool)

(assert (=> b!140720 (=> res!67266 e!91739)))

(assert (=> b!140720 (= res!67266 (= (h!2348 (toList!888 lt!73059)) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140721 () Bool)

(assert (=> b!140721 (= e!91739 (contains!925 (t!6329 (toList!888 lt!73059)) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43881 res!67265) b!140720))

(assert (= (and b!140720 (not res!67266)) b!140721))

(declare-fun m!168397 () Bool)

(assert (=> d!43881 m!168397))

(declare-fun m!168399 () Bool)

(assert (=> d!43881 m!168399))

(declare-fun m!168401 () Bool)

(assert (=> b!140721 m!168401))

(assert (=> b!139644 d!43881))

(declare-fun d!43883 () Bool)

(declare-fun e!91741 () Bool)

(assert (=> d!43883 e!91741))

(declare-fun res!67267 () Bool)

(assert (=> d!43883 (=> (not res!67267) (not e!91741))))

(declare-fun lt!73831 () ListLongMap!1745)

(assert (=> d!43883 (= res!67267 (contains!923 lt!73831 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!73828 () List!1745)

(assert (=> d!43883 (= lt!73831 (ListLongMap!1746 lt!73828))))

(declare-fun lt!73829 () Unit!4373)

(declare-fun lt!73830 () Unit!4373)

(assert (=> d!43883 (= lt!73829 lt!73830)))

(assert (=> d!43883 (= (getValueByKey!176 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43883 (= lt!73830 (lemmaContainsTupThenGetReturnValue!90 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43883 (= lt!73828 (insertStrictlySorted!93 (toList!888 call!15530) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43883 (= (+!179 call!15530 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73831)))

(declare-fun b!140722 () Bool)

(declare-fun res!67268 () Bool)

(assert (=> b!140722 (=> (not res!67268) (not e!91741))))

(assert (=> b!140722 (= res!67268 (= (getValueByKey!176 (toList!888 lt!73831) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!140723 () Bool)

(assert (=> b!140723 (= e!91741 (contains!925 (toList!888 lt!73831) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!43883 res!67267) b!140722))

(assert (= (and b!140722 res!67268) b!140723))

(declare-fun m!168403 () Bool)

(assert (=> d!43883 m!168403))

(declare-fun m!168405 () Bool)

(assert (=> d!43883 m!168405))

(declare-fun m!168407 () Bool)

(assert (=> d!43883 m!168407))

(declare-fun m!168409 () Bool)

(assert (=> d!43883 m!168409))

(declare-fun m!168411 () Bool)

(assert (=> b!140722 m!168411))

(declare-fun m!168413 () Bool)

(assert (=> b!140723 m!168413))

(assert (=> b!139915 d!43883))

(declare-fun b!140727 () Bool)

(declare-fun e!91743 () Option!182)

(assert (=> b!140727 (= e!91743 None!180)))

(declare-fun b!140724 () Bool)

(declare-fun e!91742 () Option!182)

(assert (=> b!140724 (= e!91742 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73023)))))))

(declare-fun b!140725 () Bool)

(assert (=> b!140725 (= e!91742 e!91743)))

(declare-fun c!26380 () Bool)

(assert (=> b!140725 (= c!26380 (and ((_ is Cons!1741) (toList!888 lt!73023)) (not (= (_1!1360 (h!2348 (toList!888 lt!73023))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!43885 () Bool)

(declare-fun c!26379 () Bool)

(assert (=> d!43885 (= c!26379 (and ((_ is Cons!1741) (toList!888 lt!73023)) (= (_1!1360 (h!2348 (toList!888 lt!73023))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43885 (= (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91742)))

(declare-fun b!140726 () Bool)

(assert (=> b!140726 (= e!91743 (getValueByKey!176 (t!6329 (toList!888 lt!73023)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43885 c!26379) b!140724))

(assert (= (and d!43885 (not c!26379)) b!140725))

(assert (= (and b!140725 c!26380) b!140726))

(assert (= (and b!140725 (not c!26380)) b!140727))

(declare-fun m!168415 () Bool)

(assert (=> b!140726 m!168415))

(assert (=> b!139597 d!43885))

(declare-fun d!43887 () Bool)

(assert (=> d!43887 (= (get!1530 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139901 d!43887))

(declare-fun d!43889 () Bool)

(declare-fun e!91744 () Bool)

(assert (=> d!43889 e!91744))

(declare-fun res!67269 () Bool)

(assert (=> d!43889 (=> (not res!67269) (not e!91744))))

(declare-fun lt!73835 () ListLongMap!1745)

(assert (=> d!43889 (= res!67269 (contains!923 lt!73835 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!73832 () List!1745)

(assert (=> d!43889 (= lt!73835 (ListLongMap!1746 lt!73832))))

(declare-fun lt!73833 () Unit!4373)

(declare-fun lt!73834 () Unit!4373)

(assert (=> d!43889 (= lt!73833 lt!73834)))

(assert (=> d!43889 (= (getValueByKey!176 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43889 (= lt!73834 (lemmaContainsTupThenGetReturnValue!90 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43889 (= lt!73832 (insertStrictlySorted!93 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43889 (= (+!179 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73835)))

(declare-fun b!140728 () Bool)

(declare-fun res!67270 () Bool)

(assert (=> b!140728 (=> (not res!67270) (not e!91744))))

(assert (=> b!140728 (= res!67270 (= (getValueByKey!176 (toList!888 lt!73835) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!140729 () Bool)

(assert (=> b!140729 (= e!91744 (contains!925 (toList!888 lt!73835) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!43889 res!67269) b!140728))

(assert (= (and b!140728 res!67270) b!140729))

(declare-fun m!168417 () Bool)

(assert (=> d!43889 m!168417))

(declare-fun m!168419 () Bool)

(assert (=> d!43889 m!168419))

(declare-fun m!168421 () Bool)

(assert (=> d!43889 m!168421))

(declare-fun m!168423 () Bool)

(assert (=> d!43889 m!168423))

(declare-fun m!168425 () Bool)

(assert (=> b!140728 m!168425))

(declare-fun m!168427 () Bool)

(assert (=> b!140729 m!168427))

(assert (=> bm!15489 d!43889))

(declare-fun d!43891 () Bool)

(assert (=> d!43891 (= (apply!120 lt!73093 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5880 () Bool)

(assert (= bs!5880 d!43891))

(assert (=> bs!5880 m!166385))

(assert (=> bs!5880 m!168025))

(assert (=> bs!5880 m!168025))

(declare-fun m!168429 () Bool)

(assert (=> bs!5880 m!168429))

(assert (=> b!139662 d!43891))

(declare-fun c!26381 () Bool)

(declare-fun d!43893 () Bool)

(assert (=> d!43893 (= c!26381 ((_ is ValueCellFull!1122) (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000)))))

(declare-fun e!91745 () V!3555)

(assert (=> d!43893 (= (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91745)))

(declare-fun b!140730 () Bool)

(assert (=> b!140730 (= e!91745 (get!1529 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140731 () Bool)

(assert (=> b!140731 (= e!91745 (get!1530 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43893 c!26381) b!140730))

(assert (= (and d!43893 (not c!26381)) b!140731))

(assert (=> b!140730 m!166441))

(assert (=> b!140730 m!166443))

(declare-fun m!168431 () Bool)

(assert (=> b!140730 m!168431))

(assert (=> b!140731 m!166441))

(assert (=> b!140731 m!166443))

(declare-fun m!168433 () Bool)

(assert (=> b!140731 m!168433))

(assert (=> b!139662 d!43893))

(assert (=> d!43335 d!43311))

(assert (=> d!43335 d!43313))

(declare-fun d!43895 () Bool)

(declare-fun e!91746 () Bool)

(assert (=> d!43895 e!91746))

(declare-fun res!67271 () Bool)

(assert (=> d!43895 (=> res!67271 e!91746)))

(declare-fun lt!73838 () Bool)

(assert (=> d!43895 (= res!67271 (not lt!73838))))

(declare-fun lt!73836 () Bool)

(assert (=> d!43895 (= lt!73838 lt!73836)))

(declare-fun lt!73837 () Unit!4373)

(declare-fun e!91747 () Unit!4373)

(assert (=> d!43895 (= lt!73837 e!91747)))

(declare-fun c!26382 () Bool)

(assert (=> d!43895 (= c!26382 lt!73836)))

(assert (=> d!43895 (= lt!73836 (containsKey!180 (toList!888 lt!72889) lt!72894))))

(assert (=> d!43895 (= (contains!923 lt!72889 lt!72894) lt!73838)))

(declare-fun b!140732 () Bool)

(declare-fun lt!73839 () Unit!4373)

(assert (=> b!140732 (= e!91747 lt!73839)))

(assert (=> b!140732 (= lt!73839 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72889) lt!72894))))

(assert (=> b!140732 (isDefined!129 (getValueByKey!176 (toList!888 lt!72889) lt!72894))))

(declare-fun b!140733 () Bool)

(declare-fun Unit!4431 () Unit!4373)

(assert (=> b!140733 (= e!91747 Unit!4431)))

(declare-fun b!140734 () Bool)

(assert (=> b!140734 (= e!91746 (isDefined!129 (getValueByKey!176 (toList!888 lt!72889) lt!72894)))))

(assert (= (and d!43895 c!26382) b!140732))

(assert (= (and d!43895 (not c!26382)) b!140733))

(assert (= (and d!43895 (not res!67271)) b!140734))

(declare-fun m!168435 () Bool)

(assert (=> d!43895 m!168435))

(declare-fun m!168437 () Bool)

(assert (=> b!140732 m!168437))

(assert (=> b!140732 m!166269))

(assert (=> b!140732 m!166269))

(declare-fun m!168439 () Bool)

(assert (=> b!140732 m!168439))

(assert (=> b!140734 m!166269))

(assert (=> b!140734 m!166269))

(assert (=> b!140734 m!168439))

(assert (=> d!43335 d!43895))

(declare-fun d!43897 () Bool)

(assert (=> d!43897 (= (apply!120 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72894) (apply!120 lt!72889 lt!72894))))

(assert (=> d!43897 true))

(declare-fun _$34!1000 () Unit!4373)

(assert (=> d!43897 (= (choose!856 lt!72889 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72894) _$34!1000)))

(declare-fun bs!5881 () Bool)

(assert (= bs!5881 d!43897))

(assert (=> bs!5881 m!166117))

(assert (=> bs!5881 m!166117))

(assert (=> bs!5881 m!166119))

(assert (=> bs!5881 m!166131))

(assert (=> d!43335 d!43897))

(assert (=> d!43335 d!43331))

(declare-fun d!43899 () Bool)

(assert (=> d!43899 (= (apply!120 lt!73158 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5882 () Bool)

(assert (= bs!5882 d!43899))

(assert (=> bs!5882 m!167239))

(assert (=> bs!5882 m!167239))

(declare-fun m!168441 () Bool)

(assert (=> bs!5882 m!168441))

(assert (=> b!139750 d!43899))

(assert (=> b!139851 d!43391))

(assert (=> d!43403 d!43527))

(declare-fun d!43901 () Bool)

(assert (=> d!43901 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72888)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72888)))))

(assert (=> d!43323 d!43901))

(declare-fun b!140738 () Bool)

(declare-fun e!91749 () Option!182)

(assert (=> b!140738 (= e!91749 None!180)))

(declare-fun e!91748 () Option!182)

(declare-fun b!140735 () Bool)

(assert (=> b!140735 (= e!91748 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun b!140736 () Bool)

(assert (=> b!140736 (= e!91748 e!91749)))

(declare-fun c!26384 () Bool)

(assert (=> b!140736 (= c!26384 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72888))))))

(declare-fun d!43903 () Bool)

(declare-fun c!26383 () Bool)

(assert (=> d!43903 (= c!26383 (and ((_ is Cons!1741) (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72888)))))

(assert (=> d!43903 (= (getValueByKey!176 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72888) e!91748)))

(declare-fun b!140737 () Bool)

(assert (=> b!140737 (= e!91749 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72888))))

(assert (= (and d!43903 c!26383) b!140735))

(assert (= (and d!43903 (not c!26383)) b!140736))

(assert (= (and b!140736 c!26384) b!140737))

(assert (= (and b!140736 (not c!26384)) b!140738))

(declare-fun m!168443 () Bool)

(assert (=> b!140737 m!168443))

(assert (=> d!43323 d!43903))

(declare-fun d!43905 () Bool)

(assert (=> d!43905 (= (apply!120 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) lt!73086) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!73086)))))

(declare-fun bs!5883 () Bool)

(assert (= bs!5883 d!43905))

(declare-fun m!168445 () Bool)

(assert (=> bs!5883 m!168445))

(assert (=> bs!5883 m!168445))

(declare-fun m!168447 () Bool)

(assert (=> bs!5883 m!168447))

(assert (=> b!139658 d!43905))

(assert (=> b!139658 d!43775))

(declare-fun d!43907 () Bool)

(declare-fun e!91750 () Bool)

(assert (=> d!43907 e!91750))

(declare-fun res!67272 () Bool)

(assert (=> d!43907 (=> (not res!67272) (not e!91750))))

(declare-fun lt!73843 () ListLongMap!1745)

(assert (=> d!43907 (= res!67272 (contains!923 lt!73843 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!73840 () List!1745)

(assert (=> d!43907 (= lt!73843 (ListLongMap!1746 lt!73840))))

(declare-fun lt!73841 () Unit!4373)

(declare-fun lt!73842 () Unit!4373)

(assert (=> d!43907 (= lt!73841 lt!73842)))

(assert (=> d!43907 (= (getValueByKey!176 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!43907 (= lt!73842 (lemmaContainsTupThenGetReturnValue!90 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!43907 (= lt!73840 (insertStrictlySorted!93 (toList!888 lt!73088) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!43907 (= (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73843)))

(declare-fun b!140739 () Bool)

(declare-fun res!67273 () Bool)

(assert (=> b!140739 (=> (not res!67273) (not e!91750))))

(assert (=> b!140739 (= res!67273 (= (getValueByKey!176 (toList!888 lt!73843) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!140740 () Bool)

(assert (=> b!140740 (= e!91750 (contains!925 (toList!888 lt!73843) (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!43907 res!67272) b!140739))

(assert (= (and b!140739 res!67273) b!140740))

(declare-fun m!168449 () Bool)

(assert (=> d!43907 m!168449))

(declare-fun m!168451 () Bool)

(assert (=> d!43907 m!168451))

(declare-fun m!168453 () Bool)

(assert (=> d!43907 m!168453))

(declare-fun m!168455 () Bool)

(assert (=> d!43907 m!168455))

(declare-fun m!168457 () Bool)

(assert (=> b!140739 m!168457))

(declare-fun m!168459 () Bool)

(assert (=> b!140740 m!168459))

(assert (=> b!139658 d!43907))

(declare-fun d!43909 () Bool)

(declare-fun e!91751 () Bool)

(assert (=> d!43909 e!91751))

(declare-fun res!67274 () Bool)

(assert (=> d!43909 (=> (not res!67274) (not e!91751))))

(declare-fun lt!73847 () ListLongMap!1745)

(assert (=> d!43909 (= res!67274 (contains!923 lt!73847 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(declare-fun lt!73844 () List!1745)

(assert (=> d!43909 (= lt!73847 (ListLongMap!1746 lt!73844))))

(declare-fun lt!73845 () Unit!4373)

(declare-fun lt!73846 () Unit!4373)

(assert (=> d!43909 (= lt!73845 lt!73846)))

(assert (=> d!43909 (= (getValueByKey!176 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (=> d!43909 (= lt!73846 (lemmaContainsTupThenGetReturnValue!90 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (=> d!43909 (= lt!73844 (insertStrictlySorted!93 (toList!888 lt!73075) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (=> d!43909 (= (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) lt!73847)))

(declare-fun b!140741 () Bool)

(declare-fun res!67275 () Bool)

(assert (=> b!140741 (=> (not res!67275) (not e!91751))))

(assert (=> b!140741 (= res!67275 (= (getValueByKey!176 (toList!888 lt!73847) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(declare-fun b!140742 () Bool)

(assert (=> b!140742 (= e!91751 (contains!925 (toList!888 lt!73847) (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))

(assert (= (and d!43909 res!67274) b!140741))

(assert (= (and b!140741 res!67275) b!140742))

(declare-fun m!168461 () Bool)

(assert (=> d!43909 m!168461))

(declare-fun m!168463 () Bool)

(assert (=> d!43909 m!168463))

(declare-fun m!168465 () Bool)

(assert (=> d!43909 m!168465))

(declare-fun m!168467 () Bool)

(assert (=> d!43909 m!168467))

(declare-fun m!168469 () Bool)

(assert (=> b!140741 m!168469))

(declare-fun m!168471 () Bool)

(assert (=> b!140742 m!168471))

(assert (=> b!139658 d!43909))

(declare-fun d!43911 () Bool)

(assert (=> d!43911 (= (apply!120 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) lt!73080) (apply!120 lt!73075 lt!73080))))

(declare-fun lt!73848 () Unit!4373)

(assert (=> d!43911 (= lt!73848 (choose!856 lt!73075 lt!73076 (minValue!2790 newMap!16) lt!73080))))

(declare-fun e!91752 () Bool)

(assert (=> d!43911 e!91752))

(declare-fun res!67276 () Bool)

(assert (=> d!43911 (=> (not res!67276) (not e!91752))))

(assert (=> d!43911 (= res!67276 (contains!923 lt!73075 lt!73080))))

(assert (=> d!43911 (= (addApplyDifferent!96 lt!73075 lt!73076 (minValue!2790 newMap!16) lt!73080) lt!73848)))

(declare-fun b!140743 () Bool)

(assert (=> b!140743 (= e!91752 (not (= lt!73080 lt!73076)))))

(assert (= (and d!43911 res!67276) b!140743))

(assert (=> d!43911 m!166423))

(declare-fun m!168473 () Bool)

(assert (=> d!43911 m!168473))

(declare-fun m!168475 () Bool)

(assert (=> d!43911 m!168475))

(assert (=> d!43911 m!166411))

(assert (=> d!43911 m!166411))

(assert (=> d!43911 m!166413))

(assert (=> b!139658 d!43911))

(declare-fun d!43913 () Bool)

(assert (=> d!43913 (contains!923 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73089)))

(declare-fun lt!73849 () Unit!4373)

(assert (=> d!43913 (= lt!73849 (choose!857 lt!73088 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73089))))

(assert (=> d!43913 (contains!923 lt!73088 lt!73089)))

(assert (=> d!43913 (= (addStillContains!96 lt!73088 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73089) lt!73849)))

(declare-fun bs!5884 () Bool)

(assert (= bs!5884 d!43913))

(assert (=> bs!5884 m!166401))

(assert (=> bs!5884 m!166401))

(assert (=> bs!5884 m!166417))

(declare-fun m!168477 () Bool)

(assert (=> bs!5884 m!168477))

(declare-fun m!168479 () Bool)

(assert (=> bs!5884 m!168479))

(assert (=> b!139658 d!43913))

(declare-fun d!43915 () Bool)

(assert (=> d!43915 (= (apply!120 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73074) (apply!120 lt!73073 lt!73074))))

(declare-fun lt!73850 () Unit!4373)

(assert (=> d!43915 (= lt!73850 (choose!856 lt!73073 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73074))))

(declare-fun e!91753 () Bool)

(assert (=> d!43915 e!91753))

(declare-fun res!67277 () Bool)

(assert (=> d!43915 (=> (not res!67277) (not e!91753))))

(assert (=> d!43915 (= res!67277 (contains!923 lt!73073 lt!73074))))

(assert (=> d!43915 (= (addApplyDifferent!96 lt!73073 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73074) lt!73850)))

(declare-fun b!140744 () Bool)

(assert (=> b!140744 (= e!91753 (not (= lt!73074 lt!73077)))))

(assert (= (and d!43915 res!67277) b!140744))

(assert (=> d!43915 m!166415))

(declare-fun m!168481 () Bool)

(assert (=> d!43915 m!168481))

(declare-fun m!168483 () Bool)

(assert (=> d!43915 m!168483))

(assert (=> d!43915 m!166403))

(assert (=> d!43915 m!166403))

(assert (=> d!43915 m!166405))

(assert (=> b!139658 d!43915))

(declare-fun d!43917 () Bool)

(assert (=> d!43917 (= (apply!120 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) lt!73080) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73080)))))

(declare-fun bs!5885 () Bool)

(assert (= bs!5885 d!43917))

(declare-fun m!168485 () Bool)

(assert (=> bs!5885 m!168485))

(assert (=> bs!5885 m!168485))

(declare-fun m!168487 () Bool)

(assert (=> bs!5885 m!168487))

(assert (=> b!139658 d!43917))

(declare-fun d!43919 () Bool)

(assert (=> d!43919 (= (apply!120 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73074) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73074)))))

(declare-fun bs!5886 () Bool)

(assert (= bs!5886 d!43919))

(declare-fun m!168489 () Bool)

(assert (=> bs!5886 m!168489))

(assert (=> bs!5886 m!168489))

(declare-fun m!168491 () Bool)

(assert (=> bs!5886 m!168491))

(assert (=> b!139658 d!43919))

(declare-fun d!43921 () Bool)

(assert (=> d!43921 (= (apply!120 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) lt!73086) (apply!120 lt!73091 lt!73086))))

(declare-fun lt!73851 () Unit!4373)

(assert (=> d!43921 (= lt!73851 (choose!856 lt!73091 lt!73087 (minValue!2790 newMap!16) lt!73086))))

(declare-fun e!91754 () Bool)

(assert (=> d!43921 e!91754))

(declare-fun res!67278 () Bool)

(assert (=> d!43921 (=> (not res!67278) (not e!91754))))

(assert (=> d!43921 (= res!67278 (contains!923 lt!73091 lt!73086))))

(assert (=> d!43921 (= (addApplyDifferent!96 lt!73091 lt!73087 (minValue!2790 newMap!16) lt!73086) lt!73851)))

(declare-fun b!140745 () Bool)

(assert (=> b!140745 (= e!91754 (not (= lt!73086 lt!73087)))))

(assert (= (and d!43921 res!67278) b!140745))

(assert (=> d!43921 m!166409))

(declare-fun m!168493 () Bool)

(assert (=> d!43921 m!168493))

(declare-fun m!168495 () Bool)

(assert (=> d!43921 m!168495))

(assert (=> d!43921 m!166419))

(assert (=> d!43921 m!166419))

(assert (=> d!43921 m!166421))

(assert (=> b!139658 d!43921))

(declare-fun d!43923 () Bool)

(assert (=> d!43923 (= (apply!120 lt!73091 lt!73086) (get!1531 (getValueByKey!176 (toList!888 lt!73091) lt!73086)))))

(declare-fun bs!5887 () Bool)

(assert (= bs!5887 d!43923))

(declare-fun m!168497 () Bool)

(assert (=> bs!5887 m!168497))

(assert (=> bs!5887 m!168497))

(declare-fun m!168499 () Bool)

(assert (=> bs!5887 m!168499))

(assert (=> b!139658 d!43923))

(declare-fun d!43925 () Bool)

(declare-fun e!91755 () Bool)

(assert (=> d!43925 e!91755))

(declare-fun res!67279 () Bool)

(assert (=> d!43925 (=> (not res!67279) (not e!91755))))

(declare-fun lt!73855 () ListLongMap!1745)

(assert (=> d!43925 (= res!67279 (contains!923 lt!73855 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!73852 () List!1745)

(assert (=> d!43925 (= lt!73855 (ListLongMap!1746 lt!73852))))

(declare-fun lt!73853 () Unit!4373)

(declare-fun lt!73854 () Unit!4373)

(assert (=> d!43925 (= lt!73853 lt!73854)))

(assert (=> d!43925 (= (getValueByKey!176 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!43925 (= lt!73854 (lemmaContainsTupThenGetReturnValue!90 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!43925 (= lt!73852 (insertStrictlySorted!93 (toList!888 lt!73073) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!43925 (= (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73855)))

(declare-fun b!140746 () Bool)

(declare-fun res!67280 () Bool)

(assert (=> b!140746 (=> (not res!67280) (not e!91755))))

(assert (=> b!140746 (= res!67280 (= (getValueByKey!176 (toList!888 lt!73855) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!140747 () Bool)

(assert (=> b!140747 (= e!91755 (contains!925 (toList!888 lt!73855) (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!43925 res!67279) b!140746))

(assert (= (and b!140746 res!67280) b!140747))

(declare-fun m!168501 () Bool)

(assert (=> d!43925 m!168501))

(declare-fun m!168503 () Bool)

(assert (=> d!43925 m!168503))

(declare-fun m!168505 () Bool)

(assert (=> d!43925 m!168505))

(declare-fun m!168507 () Bool)

(assert (=> d!43925 m!168507))

(declare-fun m!168509 () Bool)

(assert (=> b!140746 m!168509))

(declare-fun m!168511 () Bool)

(assert (=> b!140747 m!168511))

(assert (=> b!139658 d!43925))

(declare-fun d!43927 () Bool)

(assert (=> d!43927 (= (apply!120 lt!73073 lt!73074) (get!1531 (getValueByKey!176 (toList!888 lt!73073) lt!73074)))))

(declare-fun bs!5888 () Bool)

(assert (= bs!5888 d!43927))

(declare-fun m!168513 () Bool)

(assert (=> bs!5888 m!168513))

(assert (=> bs!5888 m!168513))

(declare-fun m!168515 () Bool)

(assert (=> bs!5888 m!168515))

(assert (=> b!139658 d!43927))

(declare-fun d!43929 () Bool)

(declare-fun e!91756 () Bool)

(assert (=> d!43929 e!91756))

(declare-fun res!67281 () Bool)

(assert (=> d!43929 (=> (not res!67281) (not e!91756))))

(declare-fun lt!73859 () ListLongMap!1745)

(assert (=> d!43929 (= res!67281 (contains!923 lt!73859 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(declare-fun lt!73856 () List!1745)

(assert (=> d!43929 (= lt!73859 (ListLongMap!1746 lt!73856))))

(declare-fun lt!73857 () Unit!4373)

(declare-fun lt!73858 () Unit!4373)

(assert (=> d!43929 (= lt!73857 lt!73858)))

(assert (=> d!43929 (= (getValueByKey!176 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (=> d!43929 (= lt!73858 (lemmaContainsTupThenGetReturnValue!90 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (=> d!43929 (= lt!73856 (insertStrictlySorted!93 (toList!888 lt!73091) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (=> d!43929 (= (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) lt!73859)))

(declare-fun b!140748 () Bool)

(declare-fun res!67282 () Bool)

(assert (=> b!140748 (=> (not res!67282) (not e!91756))))

(assert (=> b!140748 (= res!67282 (= (getValueByKey!176 (toList!888 lt!73859) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(declare-fun b!140749 () Bool)

(assert (=> b!140749 (= e!91756 (contains!925 (toList!888 lt!73859) (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))

(assert (= (and d!43929 res!67281) b!140748))

(assert (= (and b!140748 res!67282) b!140749))

(declare-fun m!168517 () Bool)

(assert (=> d!43929 m!168517))

(declare-fun m!168519 () Bool)

(assert (=> d!43929 m!168519))

(declare-fun m!168521 () Bool)

(assert (=> d!43929 m!168521))

(declare-fun m!168523 () Bool)

(assert (=> d!43929 m!168523))

(declare-fun m!168525 () Bool)

(assert (=> b!140748 m!168525))

(declare-fun m!168527 () Bool)

(assert (=> b!140749 m!168527))

(assert (=> b!139658 d!43929))

(declare-fun d!43931 () Bool)

(assert (=> d!43931 (= (apply!120 lt!73075 lt!73080) (get!1531 (getValueByKey!176 (toList!888 lt!73075) lt!73080)))))

(declare-fun bs!5889 () Bool)

(assert (= bs!5889 d!43931))

(declare-fun m!168529 () Bool)

(assert (=> bs!5889 m!168529))

(assert (=> bs!5889 m!168529))

(declare-fun m!168531 () Bool)

(assert (=> bs!5889 m!168531))

(assert (=> b!139658 d!43931))

(declare-fun d!43933 () Bool)

(declare-fun e!91757 () Bool)

(assert (=> d!43933 e!91757))

(declare-fun res!67283 () Bool)

(assert (=> d!43933 (=> res!67283 e!91757)))

(declare-fun lt!73862 () Bool)

(assert (=> d!43933 (= res!67283 (not lt!73862))))

(declare-fun lt!73860 () Bool)

(assert (=> d!43933 (= lt!73862 lt!73860)))

(declare-fun lt!73861 () Unit!4373)

(declare-fun e!91758 () Unit!4373)

(assert (=> d!43933 (= lt!73861 e!91758)))

(declare-fun c!26385 () Bool)

(assert (=> d!43933 (= c!26385 lt!73860)))

(assert (=> d!43933 (= lt!73860 (containsKey!180 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))

(assert (=> d!43933 (= (contains!923 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73089) lt!73862)))

(declare-fun b!140750 () Bool)

(declare-fun lt!73863 () Unit!4373)

(assert (=> b!140750 (= e!91758 lt!73863)))

(assert (=> b!140750 (= lt!73863 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))

(assert (=> b!140750 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))

(declare-fun b!140751 () Bool)

(declare-fun Unit!4432 () Unit!4373)

(assert (=> b!140751 (= e!91758 Unit!4432)))

(declare-fun b!140752 () Bool)

(assert (=> b!140752 (= e!91757 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089)))))

(assert (= (and d!43933 c!26385) b!140750))

(assert (= (and d!43933 (not c!26385)) b!140751))

(assert (= (and d!43933 (not res!67283)) b!140752))

(declare-fun m!168533 () Bool)

(assert (=> d!43933 m!168533))

(declare-fun m!168535 () Bool)

(assert (=> b!140750 m!168535))

(declare-fun m!168537 () Bool)

(assert (=> b!140750 m!168537))

(assert (=> b!140750 m!168537))

(declare-fun m!168539 () Bool)

(assert (=> b!140750 m!168539))

(assert (=> b!140752 m!168537))

(assert (=> b!140752 m!168537))

(assert (=> b!140752 m!168539))

(assert (=> b!139658 d!43933))

(declare-fun d!43935 () Bool)

(assert (=> d!43935 (= (apply!120 lt!73052 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1531 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5890 () Bool)

(assert (= bs!5890 d!43935))

(assert (=> bs!5890 m!166121))

(declare-fun m!168541 () Bool)

(assert (=> bs!5890 m!168541))

(assert (=> bs!5890 m!168541))

(declare-fun m!168543 () Bool)

(assert (=> bs!5890 m!168543))

(assert (=> b!139641 d!43935))

(assert (=> b!139641 d!43421))

(declare-fun d!43937 () Bool)

(assert (=> d!43937 (isDefined!129 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(declare-fun lt!73864 () Unit!4373)

(assert (=> d!43937 (= lt!73864 (choose!864 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(declare-fun e!91759 () Bool)

(assert (=> d!43937 e!91759))

(declare-fun res!67284 () Bool)

(assert (=> d!43937 (=> (not res!67284) (not e!91759))))

(assert (=> d!43937 (= res!67284 (isStrictlySorted!325 (toList!888 call!15463)))))

(assert (=> d!43937 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) lt!73864)))

(declare-fun b!140753 () Bool)

(assert (=> b!140753 (= e!91759 (containsKey!180 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!43937 res!67284) b!140753))

(assert (=> d!43937 m!166481))

(assert (=> d!43937 m!166481))

(assert (=> d!43937 m!166483))

(declare-fun m!168545 () Bool)

(assert (=> d!43937 m!168545))

(declare-fun m!168547 () Bool)

(assert (=> d!43937 m!168547))

(assert (=> b!140753 m!166477))

(assert (=> b!139714 d!43937))

(assert (=> b!139714 d!43567))

(assert (=> b!139714 d!43569))

(declare-fun d!43939 () Bool)

(assert (=> d!43939 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73865 () Unit!4373)

(assert (=> d!43939 (= lt!73865 (choose!864 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91760 () Bool)

(assert (=> d!43939 e!91760))

(declare-fun res!67285 () Bool)

(assert (=> d!43939 (=> (not res!67285) (not e!91760))))

(assert (=> d!43939 (= res!67285 (isStrictlySorted!325 (toList!888 lt!72907)))))

(assert (=> d!43939 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000) lt!73865)))

(declare-fun b!140754 () Bool)

(assert (=> b!140754 (= e!91760 (containsKey!180 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43939 res!67285) b!140754))

(assert (=> d!43939 m!166489))

(assert (=> d!43939 m!166489))

(assert (=> d!43939 m!166491))

(declare-fun m!168549 () Bool)

(assert (=> d!43939 m!168549))

(assert (=> d!43939 m!167175))

(assert (=> b!140754 m!166485))

(assert (=> b!139717 d!43939))

(assert (=> b!139717 d!43575))

(assert (=> b!139717 d!43577))

(declare-fun d!43941 () Bool)

(assert (=> d!43941 (= (inRange!0 (ite c!26139 (index!3280 lt!73260) (ite c!26137 (index!3279 lt!73265) (index!3282 lt!73265))) (mask!7280 newMap!16)) (and (bvsge (ite c!26139 (index!3280 lt!73260) (ite c!26137 (index!3279 lt!73265) (index!3282 lt!73265))) #b00000000000000000000000000000000) (bvslt (ite c!26139 (index!3280 lt!73260) (ite c!26137 (index!3279 lt!73265) (index!3282 lt!73265))) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15516 d!43941))

(declare-fun d!43943 () Bool)

(assert (=> d!43943 (= (apply!120 lt!73158 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5891 () Bool)

(assert (= bs!5891 d!43943))

(assert (=> bs!5891 m!168013))

(assert (=> bs!5891 m!168013))

(declare-fun m!168551 () Bool)

(assert (=> bs!5891 m!168551))

(assert (=> b!139758 d!43943))

(declare-fun b!140755 () Bool)

(declare-fun e!91762 () Bool)

(declare-fun e!91763 () Bool)

(assert (=> b!140755 (= e!91762 e!91763)))

(declare-fun lt!73867 () (_ BitVec 64))

(assert (=> b!140755 (= lt!73867 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000))))

(declare-fun lt!73866 () Unit!4373)

(assert (=> b!140755 (= lt!73866 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1361 lt!72992)) lt!73867 #b00000000000000000000000000000000))))

(assert (=> b!140755 (arrayContainsKey!0 (_keys!4699 (_2!1361 lt!72992)) lt!73867 #b00000000000000000000000000000000)))

(declare-fun lt!73868 () Unit!4373)

(assert (=> b!140755 (= lt!73868 lt!73866)))

(declare-fun res!67286 () Bool)

(assert (=> b!140755 (= res!67286 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!140755 (=> (not res!67286) (not e!91763))))

(declare-fun d!43945 () Bool)

(declare-fun res!67287 () Bool)

(declare-fun e!91761 () Bool)

(assert (=> d!43945 (=> res!67287 e!91761)))

(assert (=> d!43945 (= res!67287 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!43945 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))) e!91761)))

(declare-fun b!140756 () Bool)

(declare-fun call!15637 () Bool)

(assert (=> b!140756 (= e!91763 call!15637)))

(declare-fun bm!15634 () Bool)

(assert (=> bm!15634 (= call!15637 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))))))

(declare-fun b!140757 () Bool)

(assert (=> b!140757 (= e!91761 e!91762)))

(declare-fun c!26386 () Bool)

(assert (=> b!140757 (= c!26386 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun b!140758 () Bool)

(assert (=> b!140758 (= e!91762 call!15637)))

(assert (= (and d!43945 (not res!67287)) b!140757))

(assert (= (and b!140757 c!26386) b!140755))

(assert (= (and b!140757 (not c!26386)) b!140758))

(assert (= (and b!140755 res!67286) b!140756))

(assert (= (or b!140756 b!140758) bm!15634))

(assert (=> b!140755 m!168127))

(declare-fun m!168553 () Bool)

(assert (=> b!140755 m!168553))

(declare-fun m!168555 () Bool)

(assert (=> b!140755 m!168555))

(assert (=> b!140755 m!168127))

(declare-fun m!168557 () Bool)

(assert (=> b!140755 m!168557))

(declare-fun m!168559 () Bool)

(assert (=> bm!15634 m!168559))

(assert (=> b!140757 m!168127))

(assert (=> b!140757 m!168127))

(assert (=> b!140757 m!168129))

(assert (=> b!139768 d!43945))

(declare-fun d!43947 () Bool)

(declare-fun e!91764 () Bool)

(assert (=> d!43947 e!91764))

(declare-fun res!67288 () Bool)

(assert (=> d!43947 (=> res!67288 e!91764)))

(declare-fun lt!73871 () Bool)

(assert (=> d!43947 (= res!67288 (not lt!73871))))

(declare-fun lt!73869 () Bool)

(assert (=> d!43947 (= lt!73871 lt!73869)))

(declare-fun lt!73870 () Unit!4373)

(declare-fun e!91765 () Unit!4373)

(assert (=> d!43947 (= lt!73870 e!91765)))

(declare-fun c!26387 () Bool)

(assert (=> d!43947 (= c!26387 lt!73869)))

(assert (=> d!43947 (= lt!73869 (containsKey!180 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43947 (= (contains!923 lt!73306 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73871)))

(declare-fun b!140759 () Bool)

(declare-fun lt!73872 () Unit!4373)

(assert (=> b!140759 (= e!91765 lt!73872)))

(assert (=> b!140759 (= lt!73872 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140759 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140760 () Bool)

(declare-fun Unit!4433 () Unit!4373)

(assert (=> b!140760 (= e!91765 Unit!4433)))

(declare-fun b!140761 () Bool)

(assert (=> b!140761 (= e!91764 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43947 c!26387) b!140759))

(assert (= (and d!43947 (not c!26387)) b!140760))

(assert (= (and d!43947 (not res!67288)) b!140761))

(declare-fun m!168561 () Bool)

(assert (=> d!43947 m!168561))

(declare-fun m!168563 () Bool)

(assert (=> b!140759 m!168563))

(assert (=> b!140759 m!168049))

(assert (=> b!140759 m!168049))

(declare-fun m!168565 () Bool)

(assert (=> b!140759 m!168565))

(assert (=> b!140761 m!168049))

(assert (=> b!140761 m!168049))

(assert (=> b!140761 m!168565))

(assert (=> bm!15523 d!43947))

(declare-fun d!43949 () Bool)

(declare-fun e!91766 () Bool)

(assert (=> d!43949 e!91766))

(declare-fun res!67289 () Bool)

(assert (=> d!43949 (=> res!67289 e!91766)))

(declare-fun lt!73875 () Bool)

(assert (=> d!43949 (= res!67289 (not lt!73875))))

(declare-fun lt!73873 () Bool)

(assert (=> d!43949 (= lt!73875 lt!73873)))

(declare-fun lt!73874 () Unit!4373)

(declare-fun e!91767 () Unit!4373)

(assert (=> d!43949 (= lt!73874 e!91767)))

(declare-fun c!26388 () Bool)

(assert (=> d!43949 (= c!26388 lt!73873)))

(assert (=> d!43949 (= lt!73873 (containsKey!180 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!43949 (= (contains!923 lt!73023 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73875)))

(declare-fun b!140762 () Bool)

(declare-fun lt!73876 () Unit!4373)

(assert (=> b!140762 (= e!91767 lt!73876)))

(assert (=> b!140762 (= lt!73876 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> b!140762 (isDefined!129 (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140763 () Bool)

(declare-fun Unit!4434 () Unit!4373)

(assert (=> b!140763 (= e!91767 Unit!4434)))

(declare-fun b!140764 () Bool)

(assert (=> b!140764 (= e!91766 (isDefined!129 (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43949 c!26388) b!140762))

(assert (= (and d!43949 (not c!26388)) b!140763))

(assert (= (and d!43949 (not res!67289)) b!140764))

(declare-fun m!168567 () Bool)

(assert (=> d!43949 m!168567))

(declare-fun m!168569 () Bool)

(assert (=> b!140762 m!168569))

(assert (=> b!140762 m!166265))

(assert (=> b!140762 m!166265))

(declare-fun m!168571 () Bool)

(assert (=> b!140762 m!168571))

(assert (=> b!140764 m!166265))

(assert (=> b!140764 m!166265))

(assert (=> b!140764 m!168571))

(assert (=> d!43307 d!43949))

(declare-fun b!140768 () Bool)

(declare-fun e!91769 () Option!182)

(assert (=> b!140768 (= e!91769 None!180)))

(declare-fun b!140765 () Bool)

(declare-fun e!91768 () Option!182)

(assert (=> b!140765 (= e!91768 (Some!181 (_2!1360 (h!2348 lt!73020))))))

(declare-fun b!140766 () Bool)

(assert (=> b!140766 (= e!91768 e!91769)))

(declare-fun c!26390 () Bool)

(assert (=> b!140766 (= c!26390 (and ((_ is Cons!1741) lt!73020) (not (= (_1!1360 (h!2348 lt!73020)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!43951 () Bool)

(declare-fun c!26389 () Bool)

(assert (=> d!43951 (= c!26389 (and ((_ is Cons!1741) lt!73020) (= (_1!1360 (h!2348 lt!73020)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43951 (= (getValueByKey!176 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91768)))

(declare-fun b!140767 () Bool)

(assert (=> b!140767 (= e!91769 (getValueByKey!176 (t!6329 lt!73020) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43951 c!26389) b!140765))

(assert (= (and d!43951 (not c!26389)) b!140766))

(assert (= (and b!140766 c!26390) b!140767))

(assert (= (and b!140766 (not c!26390)) b!140768))

(declare-fun m!168573 () Bool)

(assert (=> b!140767 m!168573))

(assert (=> d!43307 d!43951))

(declare-fun d!43953 () Bool)

(assert (=> d!43953 (= (getValueByKey!176 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!73877 () Unit!4373)

(assert (=> d!43953 (= lt!73877 (choose!865 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!91770 () Bool)

(assert (=> d!43953 e!91770))

(declare-fun res!67290 () Bool)

(assert (=> d!43953 (=> (not res!67290) (not e!91770))))

(assert (=> d!43953 (= res!67290 (isStrictlySorted!325 lt!73020))))

(assert (=> d!43953 (= (lemmaContainsTupThenGetReturnValue!90 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73877)))

(declare-fun b!140769 () Bool)

(declare-fun res!67291 () Bool)

(assert (=> b!140769 (=> (not res!67291) (not e!91770))))

(assert (=> b!140769 (= res!67291 (containsKey!180 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140770 () Bool)

(assert (=> b!140770 (= e!91770 (contains!925 lt!73020 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!43953 res!67290) b!140769))

(assert (= (and b!140769 res!67291) b!140770))

(assert (=> d!43953 m!166259))

(declare-fun m!168575 () Bool)

(assert (=> d!43953 m!168575))

(declare-fun m!168577 () Bool)

(assert (=> d!43953 m!168577))

(declare-fun m!168579 () Bool)

(assert (=> b!140769 m!168579))

(declare-fun m!168581 () Bool)

(assert (=> b!140770 m!168581))

(assert (=> d!43307 d!43953))

(declare-fun b!140771 () Bool)

(declare-fun e!91771 () List!1745)

(declare-fun call!15640 () List!1745)

(assert (=> b!140771 (= e!91771 call!15640)))

(declare-fun bm!15635 () Bool)

(declare-fun call!15638 () List!1745)

(assert (=> bm!15635 (= call!15640 call!15638)))

(declare-fun d!43955 () Bool)

(declare-fun e!91775 () Bool)

(assert (=> d!43955 e!91775))

(declare-fun res!67292 () Bool)

(assert (=> d!43955 (=> (not res!67292) (not e!91775))))

(declare-fun lt!73878 () List!1745)

(assert (=> d!43955 (= res!67292 (isStrictlySorted!325 lt!73878))))

(declare-fun e!91772 () List!1745)

(assert (=> d!43955 (= lt!73878 e!91772)))

(declare-fun c!26393 () Bool)

(assert (=> d!43955 (= c!26393 (and ((_ is Cons!1741) (toList!888 call!15405)) (bvslt (_1!1360 (h!2348 (toList!888 call!15405))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43955 (isStrictlySorted!325 (toList!888 call!15405))))

(assert (=> d!43955 (= (insertStrictlySorted!93 (toList!888 call!15405) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!73878)))

(declare-fun bm!15636 () Bool)

(declare-fun call!15639 () List!1745)

(assert (=> bm!15636 (= call!15638 call!15639)))

(declare-fun b!140772 () Bool)

(declare-fun e!91773 () List!1745)

(assert (=> b!140772 (= e!91772 e!91773)))

(declare-fun c!26392 () Bool)

(assert (=> b!140772 (= c!26392 (and ((_ is Cons!1741) (toList!888 call!15405)) (= (_1!1360 (h!2348 (toList!888 call!15405))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140773 () Bool)

(assert (=> b!140773 (= e!91772 call!15639)))

(declare-fun e!91774 () List!1745)

(declare-fun bm!15637 () Bool)

(assert (=> bm!15637 (= call!15639 ($colon$colon!94 e!91774 (ite c!26393 (h!2348 (toList!888 call!15405)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26391 () Bool)

(assert (=> bm!15637 (= c!26391 c!26393)))

(declare-fun c!26394 () Bool)

(declare-fun b!140774 () Bool)

(assert (=> b!140774 (= e!91774 (ite c!26392 (t!6329 (toList!888 call!15405)) (ite c!26394 (Cons!1741 (h!2348 (toList!888 call!15405)) (t!6329 (toList!888 call!15405))) Nil!1742)))))

(declare-fun b!140775 () Bool)

(assert (=> b!140775 (= e!91773 call!15638)))

(declare-fun b!140776 () Bool)

(assert (=> b!140776 (= e!91775 (contains!925 lt!73878 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140777 () Bool)

(assert (=> b!140777 (= e!91774 (insertStrictlySorted!93 (t!6329 (toList!888 call!15405)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!140778 () Bool)

(assert (=> b!140778 (= e!91771 call!15640)))

(declare-fun b!140779 () Bool)

(assert (=> b!140779 (= c!26394 (and ((_ is Cons!1741) (toList!888 call!15405)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15405))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!140779 (= e!91773 e!91771)))

(declare-fun b!140780 () Bool)

(declare-fun res!67293 () Bool)

(assert (=> b!140780 (=> (not res!67293) (not e!91775))))

(assert (=> b!140780 (= res!67293 (containsKey!180 lt!73878 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43955 c!26393) b!140773))

(assert (= (and d!43955 (not c!26393)) b!140772))

(assert (= (and b!140772 c!26392) b!140775))

(assert (= (and b!140772 (not c!26392)) b!140779))

(assert (= (and b!140779 c!26394) b!140778))

(assert (= (and b!140779 (not c!26394)) b!140771))

(assert (= (or b!140778 b!140771) bm!15635))

(assert (= (or b!140775 bm!15635) bm!15636))

(assert (= (or b!140773 bm!15636) bm!15637))

(assert (= (and bm!15637 c!26391) b!140777))

(assert (= (and bm!15637 (not c!26391)) b!140774))

(assert (= (and d!43955 res!67292) b!140780))

(assert (= (and b!140780 res!67293) b!140776))

(declare-fun m!168583 () Bool)

(assert (=> b!140777 m!168583))

(declare-fun m!168585 () Bool)

(assert (=> d!43955 m!168585))

(declare-fun m!168587 () Bool)

(assert (=> d!43955 m!168587))

(declare-fun m!168589 () Bool)

(assert (=> b!140780 m!168589))

(declare-fun m!168591 () Bool)

(assert (=> bm!15637 m!168591))

(declare-fun m!168593 () Bool)

(assert (=> b!140776 m!168593))

(assert (=> d!43307 d!43955))

(declare-fun d!43957 () Bool)

(assert (=> d!43957 (= (isEmpty!418 (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not ((_ is Some!181) (getValueByKey!176 (toList!888 lt!72825) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(assert (=> d!43409 d!43957))

(declare-fun d!43959 () Bool)

(assert (=> d!43959 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!73879 () Unit!4373)

(assert (=> d!43959 (= lt!73879 (choose!864 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91776 () Bool)

(assert (=> d!43959 e!91776))

(declare-fun res!67294 () Bool)

(assert (=> d!43959 (=> (not res!67294) (not e!91776))))

(assert (=> d!43959 (= res!67294 (isStrictlySorted!325 (toList!888 lt!72907)))))

(assert (=> d!43959 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73879)))

(declare-fun b!140781 () Bool)

(assert (=> b!140781 (= e!91776 (containsKey!180 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43959 res!67294) b!140781))

(assert (=> d!43959 m!166121))

(assert (=> d!43959 m!166473))

(assert (=> d!43959 m!166473))

(assert (=> d!43959 m!166475))

(assert (=> d!43959 m!166121))

(declare-fun m!168595 () Bool)

(assert (=> d!43959 m!168595))

(assert (=> d!43959 m!167175))

(assert (=> b!140781 m!166121))

(assert (=> b!140781 m!166469))

(assert (=> b!139711 d!43959))

(assert (=> b!139711 d!43563))

(assert (=> b!139711 d!43565))

(assert (=> b!139878 d!43783))

(declare-fun d!43961 () Bool)

(declare-fun res!67295 () Bool)

(declare-fun e!91777 () Bool)

(assert (=> d!43961 (=> res!67295 e!91777)))

(assert (=> d!43961 (= res!67295 (= (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!43961 (= (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!91777)))

(declare-fun b!140782 () Bool)

(declare-fun e!91778 () Bool)

(assert (=> b!140782 (= e!91777 e!91778)))

(declare-fun res!67296 () Bool)

(assert (=> b!140782 (=> (not res!67296) (not e!91778))))

(assert (=> b!140782 (= res!67296 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!140783 () Bool)

(assert (=> b!140783 (= e!91778 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43961 (not res!67295)) b!140782))

(assert (= (and b!140782 res!67296) b!140783))

(assert (=> d!43961 m!167999))

(assert (=> b!140783 m!166013))

(declare-fun m!168597 () Bool)

(assert (=> b!140783 m!168597))

(assert (=> b!139881 d!43961))

(declare-fun b!140784 () Bool)

(declare-fun e!91779 () (_ BitVec 32))

(assert (=> b!140784 (= e!91779 #b00000000000000000000000000000000)))

(declare-fun b!140785 () Bool)

(declare-fun e!91780 () (_ BitVec 32))

(declare-fun call!15641 () (_ BitVec 32))

(assert (=> b!140785 (= e!91780 call!15641)))

(declare-fun bm!15638 () Bool)

(assert (=> bm!15638 (= call!15641 (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun d!43963 () Bool)

(declare-fun lt!73880 () (_ BitVec 32))

(assert (=> d!43963 (and (bvsge lt!73880 #b00000000000000000000000000000000) (bvsle lt!73880 (bvsub (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!43963 (= lt!73880 e!91779)))

(declare-fun c!26395 () Bool)

(assert (=> d!43963 (= c!26395 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43963 (and (bvsle #b00000000000000000000000000000000 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!43963 (= (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000000 (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))) lt!73880)))

(declare-fun b!140786 () Bool)

(assert (=> b!140786 (= e!91779 e!91780)))

(declare-fun c!26396 () Bool)

(assert (=> b!140786 (= c!26396 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140787 () Bool)

(assert (=> b!140787 (= e!91780 (bvadd #b00000000000000000000000000000001 call!15641))))

(assert (= (and d!43963 c!26395) b!140784))

(assert (= (and d!43963 (not c!26395)) b!140786))

(assert (= (and b!140786 c!26396) b!140787))

(assert (= (and b!140786 (not c!26396)) b!140785))

(assert (= (or b!140787 b!140785) bm!15638))

(declare-fun m!168599 () Bool)

(assert (=> bm!15638 m!168599))

(assert (=> b!140786 m!167023))

(assert (=> b!140786 m!167023))

(assert (=> b!140786 m!167033))

(assert (=> b!139722 d!43963))

(declare-fun d!43965 () Bool)

(assert (=> d!43965 (= (inRange!0 (index!3280 lt!73130) (mask!7280 newMap!16)) (and (bvsge (index!3280 lt!73130) #b00000000000000000000000000000000) (bvslt (index!3280 lt!73130) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!139729 d!43965))

(declare-fun b!140800 () Bool)

(declare-fun e!91788 () SeekEntryResult!279)

(assert (=> b!140800 (= e!91788 (MissingVacant!279 (index!3281 lt!73101)))))

(declare-fun b!140802 () Bool)

(declare-fun e!91789 () SeekEntryResult!279)

(assert (=> b!140802 (= e!91789 (Found!279 (index!3281 lt!73101)))))

(declare-fun b!140803 () Bool)

(assert (=> b!140803 (= e!91788 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16136 lt!73101) #b00000000000000000000000000000001) (nextIndex!0 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16)) (index!3281 lt!73101) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140804 () Bool)

(declare-fun e!91787 () SeekEntryResult!279)

(assert (=> b!140804 (= e!91787 e!91789)))

(declare-fun lt!73886 () (_ BitVec 64))

(declare-fun c!26403 () Bool)

(assert (=> b!140804 (= c!26403 (= lt!73886 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!140805 () Bool)

(assert (=> b!140805 (= e!91787 Undefined!279)))

(declare-fun b!140801 () Bool)

(declare-fun c!26405 () Bool)

(assert (=> b!140801 (= c!26405 (= lt!73886 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140801 (= e!91789 e!91788)))

(declare-fun d!43967 () Bool)

(declare-fun lt!73885 () SeekEntryResult!279)

(assert (=> d!43967 (and (or ((_ is Undefined!279) lt!73885) (not ((_ is Found!279) lt!73885)) (and (bvsge (index!3280 lt!73885) #b00000000000000000000000000000000) (bvslt (index!3280 lt!73885) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73885) ((_ is Found!279) lt!73885) (not ((_ is MissingVacant!279) lt!73885)) (not (= (index!3282 lt!73885) (index!3281 lt!73101))) (and (bvsge (index!3282 lt!73885) #b00000000000000000000000000000000) (bvslt (index!3282 lt!73885) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!73885) (ite ((_ is Found!279) lt!73885) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!73885)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (and ((_ is MissingVacant!279) lt!73885) (= (index!3282 lt!73885) (index!3281 lt!73101)) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!73885)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!43967 (= lt!73885 e!91787)))

(declare-fun c!26404 () Bool)

(assert (=> d!43967 (= c!26404 (bvsge (x!16136 lt!73101) #b01111111111111111111111111111110))))

(assert (=> d!43967 (= lt!73886 (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73101)))))

(assert (=> d!43967 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43967 (= (seekKeyOrZeroReturnVacant!0 (x!16136 lt!73101) (index!3281 lt!73101) (index!3281 lt!73101) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73885)))

(assert (= (and d!43967 c!26404) b!140805))

(assert (= (and d!43967 (not c!26404)) b!140804))

(assert (= (and b!140804 c!26403) b!140802))

(assert (= (and b!140804 (not c!26403)) b!140801))

(assert (= (and b!140801 c!26405) b!140800))

(assert (= (and b!140801 (not c!26405)) b!140803))

(declare-fun m!168601 () Bool)

(assert (=> b!140803 m!168601))

(assert (=> b!140803 m!168601))

(assert (=> b!140803 m!166013))

(declare-fun m!168603 () Bool)

(assert (=> b!140803 m!168603))

(declare-fun m!168605 () Bool)

(assert (=> d!43967 m!168605))

(declare-fun m!168607 () Bool)

(assert (=> d!43967 m!168607))

(assert (=> d!43967 m!166459))

(assert (=> d!43967 m!166429))

(assert (=> b!139695 d!43967))

(declare-fun d!43969 () Bool)

(declare-fun lt!73887 () Bool)

(assert (=> d!43969 (= lt!73887 (select (content!137 Nil!1743) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91791 () Bool)

(assert (=> d!43969 (= lt!73887 e!91791)))

(declare-fun res!67297 () Bool)

(assert (=> d!43969 (=> (not res!67297) (not e!91791))))

(assert (=> d!43969 (= res!67297 ((_ is Cons!1742) Nil!1743))))

(assert (=> d!43969 (= (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73887)))

(declare-fun b!140806 () Bool)

(declare-fun e!91790 () Bool)

(assert (=> b!140806 (= e!91791 e!91790)))

(declare-fun res!67298 () Bool)

(assert (=> b!140806 (=> res!67298 e!91790)))

(assert (=> b!140806 (= res!67298 (= (h!2349 Nil!1743) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140807 () Bool)

(assert (=> b!140807 (= e!91790 (contains!924 (t!6330 Nil!1743) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!43969 res!67297) b!140806))

(assert (= (and b!140806 (not res!67298)) b!140807))

(assert (=> d!43969 m!166611))

(assert (=> d!43969 m!166385))

(declare-fun m!168609 () Bool)

(assert (=> d!43969 m!168609))

(assert (=> b!140807 m!166385))

(declare-fun m!168611 () Bool)

(assert (=> b!140807 m!168611))

(assert (=> b!139654 d!43969))

(declare-fun d!43971 () Bool)

(assert (=> d!43971 (= (apply!120 lt!73158 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5892 () Bool)

(assert (= bs!5892 d!43971))

(assert (=> bs!5892 m!166385))

(assert (=> bs!5892 m!168287))

(assert (=> bs!5892 m!168287))

(declare-fun m!168613 () Bool)

(assert (=> bs!5892 m!168613))

(assert (=> b!139744 d!43971))

(declare-fun c!26406 () Bool)

(declare-fun d!43973 () Bool)

(assert (=> d!43973 (= c!26406 ((_ is ValueCellFull!1122) (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!91792 () V!3555)

(assert (=> d!43973 (= (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91792)))

(declare-fun b!140808 () Bool)

(assert (=> b!140808 (= e!91792 (get!1529 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140809 () Bool)

(assert (=> b!140809 (= e!91792 (get!1530 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43973 c!26406) b!140808))

(assert (= (and d!43973 (not c!26406)) b!140809))

(assert (=> b!140808 m!166585))

(assert (=> b!140808 m!166443))

(declare-fun m!168615 () Bool)

(assert (=> b!140808 m!168615))

(assert (=> b!140809 m!166585))

(assert (=> b!140809 m!166443))

(declare-fun m!168617 () Bool)

(assert (=> b!140809 m!168617))

(assert (=> b!139744 d!43973))

(declare-fun d!43975 () Bool)

(declare-fun e!91793 () Bool)

(assert (=> d!43975 e!91793))

(declare-fun res!67299 () Bool)

(assert (=> d!43975 (=> (not res!67299) (not e!91793))))

(declare-fun lt!73891 () ListLongMap!1745)

(assert (=> d!43975 (= res!67299 (contains!923 lt!73891 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!73888 () List!1745)

(assert (=> d!43975 (= lt!73891 (ListLongMap!1746 lt!73888))))

(declare-fun lt!73889 () Unit!4373)

(declare-fun lt!73890 () Unit!4373)

(assert (=> d!43975 (= lt!73889 lt!73890)))

(assert (=> d!43975 (= (getValueByKey!176 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43975 (= lt!73890 (lemmaContainsTupThenGetReturnValue!90 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43975 (= lt!73888 (insertStrictlySorted!93 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43975 (= (+!179 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73891)))

(declare-fun b!140810 () Bool)

(declare-fun res!67300 () Bool)

(assert (=> b!140810 (=> (not res!67300) (not e!91793))))

(assert (=> b!140810 (= res!67300 (= (getValueByKey!176 (toList!888 lt!73891) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!140811 () Bool)

(assert (=> b!140811 (= e!91793 (contains!925 (toList!888 lt!73891) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!43975 res!67299) b!140810))

(assert (= (and b!140810 res!67300) b!140811))

(declare-fun m!168619 () Bool)

(assert (=> d!43975 m!168619))

(declare-fun m!168621 () Bool)

(assert (=> d!43975 m!168621))

(declare-fun m!168623 () Bool)

(assert (=> d!43975 m!168623))

(declare-fun m!168625 () Bool)

(assert (=> d!43975 m!168625))

(declare-fun m!168627 () Bool)

(assert (=> b!140810 m!168627))

(declare-fun m!168629 () Bool)

(assert (=> b!140811 m!168629))

(assert (=> bm!15499 d!43975))

(declare-fun d!43977 () Bool)

(declare-fun e!91794 () Bool)

(assert (=> d!43977 e!91794))

(declare-fun res!67301 () Bool)

(assert (=> d!43977 (=> (not res!67301) (not e!91794))))

(declare-fun lt!73895 () ListLongMap!1745)

(assert (=> d!43977 (= res!67301 (contains!923 lt!73895 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73892 () List!1745)

(assert (=> d!43977 (= lt!73895 (ListLongMap!1746 lt!73892))))

(declare-fun lt!73893 () Unit!4373)

(declare-fun lt!73894 () Unit!4373)

(assert (=> d!43977 (= lt!73893 lt!73894)))

(assert (=> d!43977 (= (getValueByKey!176 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43977 (= lt!73894 (lemmaContainsTupThenGetReturnValue!90 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43977 (= lt!73892 (insertStrictlySorted!93 (toList!888 call!15491) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43977 (= (+!179 call!15491 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!73895)))

(declare-fun b!140812 () Bool)

(declare-fun res!67302 () Bool)

(assert (=> b!140812 (=> (not res!67302) (not e!91794))))

(assert (=> b!140812 (= res!67302 (= (getValueByKey!176 (toList!888 lt!73895) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!140813 () Bool)

(assert (=> b!140813 (= e!91794 (contains!925 (toList!888 lt!73895) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!43977 res!67301) b!140812))

(assert (= (and b!140812 res!67302) b!140813))

(declare-fun m!168631 () Bool)

(assert (=> d!43977 m!168631))

(declare-fun m!168633 () Bool)

(assert (=> d!43977 m!168633))

(declare-fun m!168635 () Bool)

(assert (=> d!43977 m!168635))

(declare-fun m!168637 () Bool)

(assert (=> d!43977 m!168637))

(declare-fun m!168639 () Bool)

(assert (=> b!140812 m!168639))

(declare-fun m!168641 () Bool)

(assert (=> b!140813 m!168641))

(assert (=> b!139669 d!43977))

(declare-fun d!43979 () Bool)

(declare-fun e!91795 () Bool)

(assert (=> d!43979 e!91795))

(declare-fun res!67303 () Bool)

(assert (=> d!43979 (=> res!67303 e!91795)))

(declare-fun lt!73898 () Bool)

(assert (=> d!43979 (= res!67303 (not lt!73898))))

(declare-fun lt!73896 () Bool)

(assert (=> d!43979 (= lt!73898 lt!73896)))

(declare-fun lt!73897 () Unit!4373)

(declare-fun e!91796 () Unit!4373)

(assert (=> d!43979 (= lt!73897 e!91796)))

(declare-fun c!26407 () Bool)

(assert (=> d!43979 (= c!26407 lt!73896)))

(assert (=> d!43979 (= lt!73896 (containsKey!180 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43979 (= (contains!923 lt!73052 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73898)))

(declare-fun b!140814 () Bool)

(declare-fun lt!73899 () Unit!4373)

(assert (=> b!140814 (= e!91796 lt!73899)))

(assert (=> b!140814 (= lt!73899 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140814 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140815 () Bool)

(declare-fun Unit!4435 () Unit!4373)

(assert (=> b!140815 (= e!91796 Unit!4435)))

(declare-fun b!140816 () Bool)

(assert (=> b!140816 (= e!91795 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43979 c!26407) b!140814))

(assert (= (and d!43979 (not c!26407)) b!140815))

(assert (= (and d!43979 (not res!67303)) b!140816))

(assert (=> d!43979 m!166121))

(declare-fun m!168643 () Bool)

(assert (=> d!43979 m!168643))

(assert (=> b!140814 m!166121))

(declare-fun m!168645 () Bool)

(assert (=> b!140814 m!168645))

(assert (=> b!140814 m!166121))

(assert (=> b!140814 m!168541))

(assert (=> b!140814 m!168541))

(declare-fun m!168647 () Bool)

(assert (=> b!140814 m!168647))

(assert (=> b!140816 m!166121))

(assert (=> b!140816 m!168541))

(assert (=> b!140816 m!168541))

(assert (=> b!140816 m!168647))

(assert (=> b!139634 d!43979))

(assert (=> b!139709 d!43479))

(declare-fun b!140817 () Bool)

(declare-fun e!91798 () Bool)

(declare-fun e!91799 () Bool)

(assert (=> b!140817 (= e!91798 e!91799)))

(declare-fun lt!73901 () (_ BitVec 64))

(assert (=> b!140817 (= lt!73901 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!73900 () Unit!4373)

(assert (=> b!140817 (= lt!73900 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73901 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!140817 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73901 #b00000000000000000000000000000000)))

(declare-fun lt!73902 () Unit!4373)

(assert (=> b!140817 (= lt!73902 lt!73900)))

(declare-fun res!67304 () Bool)

(assert (=> b!140817 (= res!67304 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)) (Found!279 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!140817 (=> (not res!67304) (not e!91799))))

(declare-fun d!43981 () Bool)

(declare-fun res!67305 () Bool)

(declare-fun e!91797 () Bool)

(assert (=> d!43981 (=> res!67305 e!91797)))

(assert (=> d!43981 (= res!67305 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!43981 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)) e!91797)))

(declare-fun b!140818 () Bool)

(declare-fun call!15642 () Bool)

(assert (=> b!140818 (= e!91799 call!15642)))

(declare-fun bm!15639 () Bool)

(assert (=> bm!15639 (= call!15642 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140819 () Bool)

(assert (=> b!140819 (= e!91797 e!91798)))

(declare-fun c!26408 () Bool)

(assert (=> b!140819 (= c!26408 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140820 () Bool)

(assert (=> b!140820 (= e!91798 call!15642)))

(assert (= (and d!43981 (not res!67305)) b!140819))

(assert (= (and b!140819 c!26408) b!140817))

(assert (= (and b!140819 (not c!26408)) b!140820))

(assert (= (and b!140817 res!67304) b!140818))

(assert (= (or b!140818 b!140820) bm!15639))

(assert (=> b!140817 m!167999))

(declare-fun m!168649 () Bool)

(assert (=> b!140817 m!168649))

(declare-fun m!168651 () Bool)

(assert (=> b!140817 m!168651))

(assert (=> b!140817 m!167999))

(declare-fun m!168653 () Bool)

(assert (=> b!140817 m!168653))

(declare-fun m!168655 () Bool)

(assert (=> bm!15639 m!168655))

(assert (=> b!140819 m!167999))

(assert (=> b!140819 m!167999))

(assert (=> b!140819 m!168003))

(assert (=> bm!15522 d!43981))

(declare-fun bm!15640 () Bool)

(declare-fun call!15643 () Bool)

(declare-fun c!26409 () Bool)

(assert (=> bm!15640 (= call!15643 (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!72992)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26409 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)))))

(declare-fun b!140821 () Bool)

(declare-fun e!91803 () Bool)

(assert (=> b!140821 (= e!91803 call!15643)))

(declare-fun b!140823 () Bool)

(assert (=> b!140823 (= e!91803 call!15643)))

(declare-fun b!140824 () Bool)

(declare-fun e!91800 () Bool)

(declare-fun e!91801 () Bool)

(assert (=> b!140824 (= e!91800 e!91801)))

(declare-fun res!67307 () Bool)

(assert (=> b!140824 (=> (not res!67307) (not e!91801))))

(declare-fun e!91802 () Bool)

(assert (=> b!140824 (= res!67307 (not e!91802))))

(declare-fun res!67308 () Bool)

(assert (=> b!140824 (=> (not res!67308) (not e!91802))))

(assert (=> b!140824 (= res!67308 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun b!140825 () Bool)

(assert (=> b!140825 (= e!91801 e!91803)))

(assert (=> b!140825 (= c!26409 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun d!43983 () Bool)

(declare-fun res!67306 () Bool)

(assert (=> d!43983 (=> res!67306 e!91800)))

(assert (=> d!43983 (= res!67306 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!43983 (= (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!72992)) #b00000000000000000000000000000000 Nil!1743) e!91800)))

(declare-fun b!140822 () Bool)

(assert (=> b!140822 (= e!91802 (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(assert (= (and d!43983 (not res!67306)) b!140824))

(assert (= (and b!140824 res!67308) b!140822))

(assert (= (and b!140824 res!67307) b!140825))

(assert (= (and b!140825 c!26409) b!140821))

(assert (= (and b!140825 (not c!26409)) b!140823))

(assert (= (or b!140821 b!140823) bm!15640))

(assert (=> bm!15640 m!168127))

(declare-fun m!168657 () Bool)

(assert (=> bm!15640 m!168657))

(assert (=> b!140824 m!168127))

(assert (=> b!140824 m!168127))

(assert (=> b!140824 m!168129))

(assert (=> b!140825 m!168127))

(assert (=> b!140825 m!168127))

(assert (=> b!140825 m!168129))

(assert (=> b!140822 m!168127))

(assert (=> b!140822 m!168127))

(declare-fun m!168659 () Bool)

(assert (=> b!140822 m!168659))

(assert (=> b!139769 d!43983))

(declare-fun b!140829 () Bool)

(declare-fun e!91805 () Option!182)

(assert (=> b!140829 (= e!91805 None!180)))

(declare-fun b!140826 () Bool)

(declare-fun e!91804 () Option!182)

(assert (=> b!140826 (= e!91804 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73027)))))))

(declare-fun b!140827 () Bool)

(assert (=> b!140827 (= e!91804 e!91805)))

(declare-fun c!26411 () Bool)

(assert (=> b!140827 (= c!26411 (and ((_ is Cons!1741) (toList!888 lt!73027)) (not (= (_1!1360 (h!2348 (toList!888 lt!73027))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26410 () Bool)

(declare-fun d!43985 () Bool)

(assert (=> d!43985 (= c!26410 (and ((_ is Cons!1741) (toList!888 lt!73027)) (= (_1!1360 (h!2348 (toList!888 lt!73027))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!43985 (= (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91804)))

(declare-fun b!140828 () Bool)

(assert (=> b!140828 (= e!91805 (getValueByKey!176 (t!6329 (toList!888 lt!73027)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!43985 c!26410) b!140826))

(assert (= (and d!43985 (not c!26410)) b!140827))

(assert (= (and b!140827 c!26411) b!140828))

(assert (= (and b!140827 (not c!26411)) b!140829))

(declare-fun m!168661 () Bool)

(assert (=> b!140828 m!168661))

(assert (=> b!139599 d!43985))

(declare-fun d!43987 () Bool)

(declare-fun e!91806 () Bool)

(assert (=> d!43987 e!91806))

(declare-fun res!67309 () Bool)

(assert (=> d!43987 (=> res!67309 e!91806)))

(declare-fun lt!73905 () Bool)

(assert (=> d!43987 (= res!67309 (not lt!73905))))

(declare-fun lt!73903 () Bool)

(assert (=> d!43987 (= lt!73905 lt!73903)))

(declare-fun lt!73904 () Unit!4373)

(declare-fun e!91807 () Unit!4373)

(assert (=> d!43987 (= lt!73904 e!91807)))

(declare-fun c!26412 () Bool)

(assert (=> d!43987 (= c!26412 lt!73903)))

(assert (=> d!43987 (= lt!73903 (containsKey!180 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43987 (= (contains!923 lt!73306 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73905)))

(declare-fun b!140830 () Bool)

(declare-fun lt!73906 () Unit!4373)

(assert (=> b!140830 (= e!91807 lt!73906)))

(assert (=> b!140830 (= lt!73906 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140830 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140831 () Bool)

(declare-fun Unit!4436 () Unit!4373)

(assert (=> b!140831 (= e!91807 Unit!4436)))

(declare-fun b!140832 () Bool)

(assert (=> b!140832 (= e!91806 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43987 c!26412) b!140830))

(assert (= (and d!43987 (not c!26412)) b!140831))

(assert (= (and d!43987 (not res!67309)) b!140832))

(declare-fun m!168663 () Bool)

(assert (=> d!43987 m!168663))

(declare-fun m!168665 () Bool)

(assert (=> b!140830 m!168665))

(assert (=> b!140830 m!167531))

(assert (=> b!140830 m!167531))

(declare-fun m!168667 () Bool)

(assert (=> b!140830 m!168667))

(assert (=> b!140832 m!167531))

(assert (=> b!140832 m!167531))

(assert (=> b!140832 m!168667))

(assert (=> bm!15529 d!43987))

(declare-fun d!43989 () Bool)

(assert (=> d!43989 (= (apply!120 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!72900) (apply!120 lt!72905 lt!72900))))

(assert (=> d!43989 true))

(declare-fun _$34!1001 () Unit!4373)

(assert (=> d!43989 (= (choose!856 lt!72905 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))) lt!72900) _$34!1001)))

(declare-fun bs!5893 () Bool)

(assert (= bs!5893 d!43989))

(assert (=> bs!5893 m!166127))

(assert (=> bs!5893 m!166127))

(assert (=> bs!5893 m!166129))

(assert (=> bs!5893 m!166115))

(assert (=> d!43339 d!43989))

(assert (=> d!43339 d!43315))

(assert (=> d!43339 d!43321))

(declare-fun d!43991 () Bool)

(declare-fun e!91808 () Bool)

(assert (=> d!43991 e!91808))

(declare-fun res!67310 () Bool)

(assert (=> d!43991 (=> res!67310 e!91808)))

(declare-fun lt!73909 () Bool)

(assert (=> d!43991 (= res!67310 (not lt!73909))))

(declare-fun lt!73907 () Bool)

(assert (=> d!43991 (= lt!73909 lt!73907)))

(declare-fun lt!73908 () Unit!4373)

(declare-fun e!91809 () Unit!4373)

(assert (=> d!43991 (= lt!73908 e!91809)))

(declare-fun c!26413 () Bool)

(assert (=> d!43991 (= c!26413 lt!73907)))

(assert (=> d!43991 (= lt!73907 (containsKey!180 (toList!888 lt!72905) lt!72900))))

(assert (=> d!43991 (= (contains!923 lt!72905 lt!72900) lt!73909)))

(declare-fun b!140833 () Bool)

(declare-fun lt!73910 () Unit!4373)

(assert (=> b!140833 (= e!91809 lt!73910)))

(assert (=> b!140833 (= lt!73910 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72905) lt!72900))))

(assert (=> b!140833 (isDefined!129 (getValueByKey!176 (toList!888 lt!72905) lt!72900))))

(declare-fun b!140834 () Bool)

(declare-fun Unit!4437 () Unit!4373)

(assert (=> b!140834 (= e!91809 Unit!4437)))

(declare-fun b!140835 () Bool)

(assert (=> b!140835 (= e!91808 (isDefined!129 (getValueByKey!176 (toList!888 lt!72905) lt!72900)))))

(assert (= (and d!43991 c!26413) b!140833))

(assert (= (and d!43991 (not c!26413)) b!140834))

(assert (= (and d!43991 (not res!67310)) b!140835))

(declare-fun m!168669 () Bool)

(assert (=> d!43991 m!168669))

(declare-fun m!168671 () Bool)

(assert (=> b!140833 m!168671))

(assert (=> b!140833 m!166321))

(assert (=> b!140833 m!166321))

(declare-fun m!168673 () Bool)

(assert (=> b!140833 m!168673))

(assert (=> b!140835 m!166321))

(assert (=> b!140835 m!166321))

(assert (=> b!140835 m!168673))

(assert (=> d!43339 d!43991))

(assert (=> d!43339 d!43337))

(assert (=> bm!15534 d!43639))

(declare-fun d!43993 () Bool)

(assert (=> d!43993 (= (get!1531 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43399 d!43993))

(assert (=> d!43399 d!43533))

(declare-fun d!43995 () Bool)

(declare-fun lt!73911 () Bool)

(assert (=> d!43995 (= lt!73911 (select (content!138 (toList!888 lt!73023)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!91811 () Bool)

(assert (=> d!43995 (= lt!73911 e!91811)))

(declare-fun res!67311 () Bool)

(assert (=> d!43995 (=> (not res!67311) (not e!91811))))

(assert (=> d!43995 (= res!67311 ((_ is Cons!1741) (toList!888 lt!73023)))))

(assert (=> d!43995 (= (contains!925 (toList!888 lt!73023) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!73911)))

(declare-fun b!140836 () Bool)

(declare-fun e!91810 () Bool)

(assert (=> b!140836 (= e!91811 e!91810)))

(declare-fun res!67312 () Bool)

(assert (=> b!140836 (=> res!67312 e!91810)))

(assert (=> b!140836 (= res!67312 (= (h!2348 (toList!888 lt!73023)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!140837 () Bool)

(assert (=> b!140837 (= e!91810 (contains!925 (t!6329 (toList!888 lt!73023)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!43995 res!67311) b!140836))

(assert (= (and b!140836 (not res!67312)) b!140837))

(declare-fun m!168675 () Bool)

(assert (=> d!43995 m!168675))

(declare-fun m!168677 () Bool)

(assert (=> d!43995 m!168677))

(declare-fun m!168679 () Bool)

(assert (=> b!140837 m!168679))

(assert (=> b!139598 d!43995))

(declare-fun d!43997 () Bool)

(assert (=> d!43997 (= (apply!120 lt!73332 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5894 () Bool)

(assert (= bs!5894 d!43997))

(assert (=> bs!5894 m!168083))

(assert (=> bs!5894 m!168083))

(declare-fun m!168681 () Bool)

(assert (=> bs!5894 m!168681))

(assert (=> b!139952 d!43997))

(assert (=> b!139638 d!43309))

(assert (=> bm!15518 d!43347))

(declare-fun d!43999 () Bool)

(declare-fun res!67313 () Bool)

(declare-fun e!91812 () Bool)

(assert (=> d!43999 (=> res!67313 e!91812)))

(assert (=> d!43999 (= res!67313 (and ((_ is Cons!1741) (toList!888 lt!72907)) (= (_1!1360 (h!2348 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43999 (= (containsKey!180 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000) e!91812)))

(declare-fun b!140838 () Bool)

(declare-fun e!91813 () Bool)

(assert (=> b!140838 (= e!91812 e!91813)))

(declare-fun res!67314 () Bool)

(assert (=> b!140838 (=> (not res!67314) (not e!91813))))

(assert (=> b!140838 (= res!67314 (and (or (not ((_ is Cons!1741) (toList!888 lt!72907))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!72907)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140839 () Bool)

(assert (=> b!140839 (= e!91813 (containsKey!180 (t!6329 (toList!888 lt!72907)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43999 (not res!67313)) b!140838))

(assert (= (and b!140838 res!67314) b!140839))

(declare-fun m!168683 () Bool)

(assert (=> b!140839 m!168683))

(assert (=> d!43415 d!43999))

(declare-fun mapNonEmpty!4847 () Bool)

(declare-fun mapRes!4847 () Bool)

(declare-fun tp!11579 () Bool)

(declare-fun e!91814 () Bool)

(assert (=> mapNonEmpty!4847 (= mapRes!4847 (and tp!11579 e!91814))))

(declare-fun mapValue!4847 () ValueCell!1122)

(declare-fun mapRest!4847 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4847 () (_ BitVec 32))

(assert (=> mapNonEmpty!4847 (= mapRest!4845 (store mapRest!4847 mapKey!4847 mapValue!4847))))

(declare-fun b!140840 () Bool)

(assert (=> b!140840 (= e!91814 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4847 () Bool)

(assert (=> mapIsEmpty!4847 mapRes!4847))

(declare-fun condMapEmpty!4847 () Bool)

(declare-fun mapDefault!4847 () ValueCell!1122)

(assert (=> mapNonEmpty!4845 (= condMapEmpty!4847 (= mapRest!4845 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4847)))))

(declare-fun e!91815 () Bool)

(assert (=> mapNonEmpty!4845 (= tp!11577 (and e!91815 mapRes!4847))))

(declare-fun b!140841 () Bool)

(assert (=> b!140841 (= e!91815 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4845 condMapEmpty!4847) mapIsEmpty!4847))

(assert (= (and mapNonEmpty!4845 (not condMapEmpty!4847)) mapNonEmpty!4847))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1122) mapValue!4847)) b!140840))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1122) mapDefault!4847)) b!140841))

(declare-fun m!168685 () Bool)

(assert (=> mapNonEmpty!4847 m!168685))

(declare-fun mapNonEmpty!4848 () Bool)

(declare-fun mapRes!4848 () Bool)

(declare-fun tp!11580 () Bool)

(declare-fun e!91816 () Bool)

(assert (=> mapNonEmpty!4848 (= mapRes!4848 (and tp!11580 e!91816))))

(declare-fun mapRest!4848 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4848 () (_ BitVec 32))

(declare-fun mapValue!4848 () ValueCell!1122)

(assert (=> mapNonEmpty!4848 (= mapRest!4846 (store mapRest!4848 mapKey!4848 mapValue!4848))))

(declare-fun b!140842 () Bool)

(assert (=> b!140842 (= e!91816 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4848 () Bool)

(assert (=> mapIsEmpty!4848 mapRes!4848))

(declare-fun condMapEmpty!4848 () Bool)

(declare-fun mapDefault!4848 () ValueCell!1122)

(assert (=> mapNonEmpty!4846 (= condMapEmpty!4848 (= mapRest!4846 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4848)))))

(declare-fun e!91817 () Bool)

(assert (=> mapNonEmpty!4846 (= tp!11578 (and e!91817 mapRes!4848))))

(declare-fun b!140843 () Bool)

(assert (=> b!140843 (= e!91817 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4846 condMapEmpty!4848) mapIsEmpty!4848))

(assert (= (and mapNonEmpty!4846 (not condMapEmpty!4848)) mapNonEmpty!4848))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1122) mapValue!4848)) b!140842))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1122) mapDefault!4848)) b!140843))

(declare-fun m!168687 () Bool)

(assert (=> mapNonEmpty!4848 m!168687))

(declare-fun b_lambda!6295 () Bool)

(assert (= b_lambda!6289 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6295)))

(declare-fun b_lambda!6297 () Bool)

(assert (= b_lambda!6273 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6297)))

(declare-fun b_lambda!6299 () Bool)

(assert (= b_lambda!6277 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6299)))

(declare-fun b_lambda!6301 () Bool)

(assert (= b_lambda!6265 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6301)))

(declare-fun b_lambda!6303 () Bool)

(assert (= b_lambda!6291 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6303)))

(declare-fun b_lambda!6305 () Bool)

(assert (= b_lambda!6281 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6305)))

(declare-fun b_lambda!6307 () Bool)

(assert (= b_lambda!6269 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6307)))

(declare-fun b_lambda!6309 () Bool)

(assert (= b_lambda!6271 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6309)))

(declare-fun b_lambda!6311 () Bool)

(assert (= b_lambda!6267 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6311)))

(declare-fun b_lambda!6313 () Bool)

(assert (= b_lambda!6285 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6313)))

(declare-fun b_lambda!6315 () Bool)

(assert (= b_lambda!6293 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6315)))

(declare-fun b_lambda!6317 () Bool)

(assert (= b_lambda!6275 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6317)))

(declare-fun b_lambda!6319 () Bool)

(assert (= b_lambda!6263 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6319)))

(declare-fun b_lambda!6321 () Bool)

(assert (= b_lambda!6283 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6321)))

(declare-fun b_lambda!6323 () Bool)

(assert (= b_lambda!6279 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6323)))

(check-sat (not d!43949) (not d!43559) (not d!43515) (not b!140311) (not b!140295) (not bm!15616) (not bm!15638) (not b!140721) (not bm!15572) (not b!140138) (not bm!15554) (not b!140418) (not b!140255) (not d!43513) (not d!43473) (not b!140322) (not b!140112) (not b_lambda!6259) (not d!43579) (not d!43619) (not d!43629) (not b!140808) (not b!140663) (not b!140332) (not b!140016) (not b!140439) (not b!139970) (not b!140251) (not d!43921) (not bm!15591) (not b!140747) (not b!140682) (not d!43691) (not bm!15583) (not b!140394) (not d!43627) (not b!140824) (not bm!15613) (not bm!15614) (not bm!15608) (not b!140645) (not bm!15584) (not b!140010) (not d!43781) (not b!140811) (not b_lambda!6303) (not b!140592) (not b!140082) (not b!140381) (not d!43821) (not b!140194) (not d!43485) (not b!140058) b_and!8803 (not d!43593) (not b!140416) (not b!140730) (not d!43805) (not b!140117) (not b!140106) (not d!43447) (not b!140369) (not d!43491) (not bm!15573) (not b!140061) (not b!140762) (not b!140146) (not b!140580) (not d!43625) (not d!43773) (not b!140761) (not bm!15578) (not d!43601) (not b!140508) (not b_next!3029) (not b!140658) (not b!140666) (not d!43673) (not b!140646) (not d!43449) (not b!140486) (not b!140480) (not d!43711) (not b!140620) (not b!140116) (not b!140277) (not d!43611) (not b!140583) (not b!140825) (not b!140343) (not b!140606) (not b!140731) tp_is_empty!2931 (not b!140102) (not b!140093) (not d!43681) (not b!140124) (not b!140803) (not b!140674) (not d!43657) (not b!140497) (not b!140086) (not b!140048) (not b!140783) (not bm!15545) (not b!140383) (not b!140144) (not b!140375) (not d!43881) (not b!140770) (not d!43633) (not b!140810) (not b!140657) (not bm!15567) (not b!140319) (not b_lambda!6235) (not d!43501) (not b!140410) (not b!140073) (not b!140302) (not b!140316) (not b!140737) (not b!140436) (not b!140781) (not b!140649) (not b!140668) (not d!43863) (not b!140289) (not d!43827) (not b!140748) (not bm!15639) (not b!140698) (not b!140373) (not b!140429) (not b!140099) (not b_lambda!6261) (not d!43547) (not d!43947) (not d!43511) (not b!140125) (not b!140079) (not b_lambda!6253) (not bm!15571) (not b!140326) (not d!43979) (not b!140292) (not b!140428) (not bm!15615) (not b!140213) (not b!140492) (not b!140501) (not b!140142) (not b!140722) (not b!140355) (not b!140539) (not b!140581) (not b!140105) (not d!43695) (not b!140274) (not d!43825) (not d!43437) (not b!140352) (not d!43445) (not d!43567) (not b!140584) (not d!43457) (not b!140335) (not b!140023) (not d!43459) (not b!140595) (not b!140034) (not b!140715) (not d!43541) (not d!43529) (not b!140259) (not b!140114) (not d!43807) (not b!140089) (not b!140091) (not d!43583) (not b!140234) (not b!140349) (not b!140431) (not d!43769) (not d!43939) (not d!43623) (not b!140328) (not d!43789) (not d!43483) (not b!140833) (not b!140463) (not b!140044) (not b!140097) (not b!140285) (not b!140440) (not d!43935) (not d!43693) (not b!140131) (not b!140308) (not d!43707) (not b_lambda!6231) (not b!140786) (not b!140705) (not b!140002) (not b!140037) (not b!140631) (not d!43715) (not d!43465) (not d!43785) (not b!140708) (not d!43975) (not b!140022) (not b!140399) (not b!140636) (not b!140244) (not d!43555) (not bm!15549) (not d!43831) (not bm!15631) (not b!140007) (not d!43507) (not b!140692) (not d!43645) (not b!140769) (not bm!15580) (not d!43855) (not b!140685) (not d!43455) (not d!43503) (not bm!15640) (not d!43753) (not d!43675) (not b!140729) (not b!140155) (not d!43953) (not bm!15566) (not b!140732) (not b!140222) (not b!140153) (not d!43867) (not b!140585) (not d!43451) (not b!140660) (not b!140346) (not d!43709) (not b!140050) (not b!140626) (not d!43591) (not d!43909) (not b!140221) (not bm!15606) (not mapNonEmpty!4848) (not b!140201) (not b!140700) (not b!140681) (not b!140263) (not d!43799) (not b!140726) (not d!43955) (not d!43817) (not b!140182) (not b!140630) (not d!43823) (not b!140071) (not d!43907) (not b!140469) (not d!43865) (not bm!15594) (not b!140210) (not d!43497) (not d!43665) (not b!140723) (not d!43971) (not b!140633) (not b!140281) (not b!140132) (not b!140186) (not b_lambda!6287) (not d!43811) (not d!43977) (not b!140543) (not b_lambda!6251) (not b!140029) (not d!43767) (not b_lambda!6301) (not b_lambda!6309) (not b!140371) (not b!140776) (not d!43959) (not d!43525) (not bm!15565) (not b!140334) (not d!43613) (not b!139971) (not b!140809) (not b!140208) (not b!140741) (not b!140384) (not b_lambda!6315) (not b!140273) (not mapNonEmpty!4847) (not b!140266) (not bm!15607) (not b!140610) (not b!140378) (not b!140391) (not d!43685) (not b!140306) (not d!43991) (not b!140362) (not bm!15625) (not b!140229) (not b!140538) (not b!139998) (not b!140218) (not d!43635) (not b!140098) (not bm!15598) (not b!140264) (not b!140612) (not b!140242) (not bm!15618) (not d!43699) (not d!43731) (not b_lambda!6299) (not d!43839) (not b!140777) (not d!43531) (not d!43987) b_and!8805 (not b!140268) (not d!43509) (not d!43585) (not b!140396) (not bm!15586) (not b!140754) (not d!43937) (not b!140572) (not d!43597) (not b!140045) (not d!43467) (not d!43895) (not bm!15626) (not bm!15627) (not bm!15602) (not b_next!3031) (not b_lambda!6323) (not b!140521) (not d!43505) (not b!140601) (not b!140807) (not b!140813) (not b!140596) (not b!140109) (not b!140757) (not b!139997) (not b!140318) (not d!43713) (not b!140261) (not d!43923) (not b!140487) (not b!140524) (not b!140238) (not d!43829) (not b!140068) (not d!43537) (not d!43913) (not b!140080) (not bm!15555) (not b!140100) (not b!139961) (not d!43621) (not b!140323) (not b!140466) (not b!140534) (not bm!15574) (not b!140403) (not b!140275) (not bm!15601) (not b!140752) (not d!43899) (not bm!15560) (not b!140709) (not b!140258) (not b!140599) (not d!43723) (not b!140740) (not d!43639) (not b!140812) (not b!140409) (not d!43615) (not d!43911) (not d!43517) (not bm!15575) (not b!140839) (not d!43841) (not bm!15632) (not d!43969) (not b!140088) (not bm!15637) (not b!140084) (not b_lambda!6297) (not b!140424) (not d!43943) (not b!140746) (not b!140054) (not b!140835) (not d!43617) (not d!43649) (not d!43815) (not b!140107) (not b!140241) (not b!140575) (not b!140271) (not b!140233) (not b!140639) (not b!140468) (not d!43519) (not d!43915) (not d!43717) (not b!140240) (not b!140479) (not b!140755) (not b!140587) (not b!140122) (not b!140759) (not b!139959) (not b!140527) (not b!140190) (not b!140051) (not bm!15548) (not bm!15553) (not bm!15556) (not d!43787) (not b!140015) (not b!140753) (not b!140659) (not b!140365) (not b!140198) (not b!140066) (not d!43837) (not b!140728) (not d!43889) (not d!43721) (not bm!15585) (not b!140653) (not d!43845) (not bm!15579) (not b!140617) (not d!43791) (not b!140574) (not d!43461) (not b!140265) (not b!140253) (not bm!15557) (not b!140385) (not b_lambda!6313) (not d!43655) (not b!140593) (not b!140415) (not b!140678) (not d!43927) (not d!43843) (not d!43857) (not b!140697) (not d!43575) (not b!140008) (not b!140578) (not d!43877) (not b!140076) (not d!43997) (not b!140780) (not d!43521) (not d!43647) (not b!140719) (not d!43873) (not d!43679) (not d!43735) (not bm!15599) (not b!140026) (not b!140027) (not d!43905) (not b!140702) (not d!43637) (not b!140228) (not d!43481) (not b!140500) (not bm!15621) (not b!140260) (not d!43443) (not b!140716) (not b!140742) (not b_lambda!6317) (not b!140232) (not d!43967) (not b!140695) (not d!43917) (not b!140433) (not d!43819) (not d!43725) (not d!43919) (not b!140822) (not b!140049) (not b_lambda!6311) (not b!140388) (not d!43697) (not d!43595) (not b!140638) (not b!140476) (not b_lambda!6307) (not b!140533) (not b!140696) (not b!140619) (not b!140814) (not b_lambda!6305) (not d!43871) (not d!43875) (not b!140671) (not bm!15593) (not d!43761) (not b!140447) (not b!140119) (not d!43495) (not d!43603) (not b!140200) (not d!43689) (not d!43561) (not d!43833) (not b!140345) (not b!140597) (not b!140507) (not b_lambda!6257) (not d!43859) (not b!140284) (not b!140664) (not d!43669) (not b!140092) (not b_lambda!6249) (not d!43499) (not b!140490) (not b!140661) (not bm!15624) (not b!140684) (not b!140687) (not bm!15634) (not b!140013) (not d!43677) (not b!140541) (not b!140739) (not b!140135) (not b!140301) (not b!140816) (not b!140237) (not b!140330) (not b!140655) (not b_lambda!6319) (not b!140670) (not b!140235) (not d!43663) (not b!140372) (not d!43441) (not b!140749) (not d!43493) (not d!43589) (not b!140513) (not b!140294) (not d!43995) (not b!140577) (not b_lambda!6255) (not b!140656) (not d!43653) (not b!140832) (not b!140038) (not b!140614) (not d!43557) (not b!140085) (not b!140392) (not b!140108) (not d!43729) (not b!140321) (not b!140366) (not b!140830) (not b!140248) (not b!140152) (not d!43931) (not b!140095) (not bm!15609) (not b!140819) (not b!140471) (not b!140031) (not b!140837) (not b!140465) (not b!140590) (not d!43581) (not d!43609) (not b_lambda!6321) (not b!140517) (not b!140361) (not b!140267) (not d!43897) (not b!140426) (not b_lambda!6295) (not b!140211) (not d!43751) (not b!139964) (not b!140627) (not b!140202) (not d!43835) (not b!140536) (not d!43795) (not b!140064) (not d!43891) (not b!140004) (not b!140767) (not d!43747) (not d!43631) (not d!43733) (not bm!15600) (not d!43813) (not bm!15617) (not d!43539) (not b!140247) (not b!140654) (not b!140750) (not d!43763) (not b!140817) (not b!140526) (not d!43759) (not d!43563) (not b!140341) (not b!140494) (not b!140402) (not b!140196) (not b!140734) (not b!140354) (not b!140199) (not b!140462) (not b!140001) (not b!140215) (not d!43989) (not b!140764) (not b!140446) (not b!140005) (not b!140270) (not b!140368) (not d!43883) (not d!43775) (not b!140209) (not d!43933) (not b!140313) (not b!140828) (not b!140337) (not b!140567) (not bm!15590) (not b!140452) (not b!140339) (not b!140287) (not b!140101) (not bm!15633) (not b!140329) (not d!43545) (not d!43861) (not b!140347) (not b!140473) (not d!43925) (not d!43803) (not d!43929) (not bm!15592) (not b!140305) (not b!140325))
(check-sat b_and!8803 b_and!8805 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!44001 () Bool)

(declare-fun e!91818 () Bool)

(assert (=> d!44001 e!91818))

(declare-fun res!67315 () Bool)

(assert (=> d!44001 (=> res!67315 e!91818)))

(declare-fun lt!73914 () Bool)

(assert (=> d!44001 (= res!67315 (not lt!73914))))

(declare-fun lt!73912 () Bool)

(assert (=> d!44001 (= lt!73914 lt!73912)))

(declare-fun lt!73913 () Unit!4373)

(declare-fun e!91819 () Unit!4373)

(assert (=> d!44001 (= lt!73913 e!91819)))

(declare-fun c!26414 () Bool)

(assert (=> d!44001 (= c!26414 lt!73912)))

(assert (=> d!44001 (= lt!73912 (containsKey!180 (toList!888 lt!73510) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (=> d!44001 (= (contains!923 lt!73510 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73914)))

(declare-fun b!140844 () Bool)

(declare-fun lt!73915 () Unit!4373)

(assert (=> b!140844 (= e!91819 lt!73915)))

(assert (=> b!140844 (= lt!73915 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73510) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (=> b!140844 (isDefined!129 (getValueByKey!176 (toList!888 lt!73510) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(declare-fun b!140845 () Bool)

(declare-fun Unit!4438 () Unit!4373)

(assert (=> b!140845 (= e!91819 Unit!4438)))

(declare-fun b!140846 () Bool)

(assert (=> b!140846 (= e!91818 (isDefined!129 (getValueByKey!176 (toList!888 lt!73510) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(assert (= (and d!44001 c!26414) b!140844))

(assert (= (and d!44001 (not c!26414)) b!140845))

(assert (= (and d!44001 (not res!67315)) b!140846))

(declare-fun m!168689 () Bool)

(assert (=> d!44001 m!168689))

(declare-fun m!168691 () Bool)

(assert (=> b!140844 m!168691))

(assert (=> b!140844 m!167445))

(assert (=> b!140844 m!167445))

(declare-fun m!168693 () Bool)

(assert (=> b!140844 m!168693))

(assert (=> b!140846 m!167445))

(assert (=> b!140846 m!167445))

(assert (=> b!140846 m!168693))

(assert (=> d!43621 d!44001))

(declare-fun b!140850 () Bool)

(declare-fun e!91821 () Option!182)

(assert (=> b!140850 (= e!91821 None!180)))

(declare-fun b!140847 () Bool)

(declare-fun e!91820 () Option!182)

(assert (=> b!140847 (= e!91820 (Some!181 (_2!1360 (h!2348 lt!73507))))))

(declare-fun b!140848 () Bool)

(assert (=> b!140848 (= e!91820 e!91821)))

(declare-fun c!26416 () Bool)

(assert (=> b!140848 (= c!26416 (and ((_ is Cons!1741) lt!73507) (not (= (_1!1360 (h!2348 lt!73507)) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))))

(declare-fun d!44003 () Bool)

(declare-fun c!26415 () Bool)

(assert (=> d!44003 (= c!26415 (and ((_ is Cons!1741) lt!73507) (= (_1!1360 (h!2348 lt!73507)) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(assert (=> d!44003 (= (getValueByKey!176 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) e!91820)))

(declare-fun b!140849 () Bool)

(assert (=> b!140849 (= e!91821 (getValueByKey!176 (t!6329 lt!73507) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (= (and d!44003 c!26415) b!140847))

(assert (= (and d!44003 (not c!26415)) b!140848))

(assert (= (and b!140848 c!26416) b!140849))

(assert (= (and b!140848 (not c!26416)) b!140850))

(declare-fun m!168695 () Bool)

(assert (=> b!140849 m!168695))

(assert (=> d!43621 d!44003))

(declare-fun d!44005 () Bool)

(assert (=> d!44005 (= (getValueByKey!176 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(declare-fun lt!73916 () Unit!4373)

(assert (=> d!44005 (= lt!73916 (choose!865 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(declare-fun e!91822 () Bool)

(assert (=> d!44005 e!91822))

(declare-fun res!67316 () Bool)

(assert (=> d!44005 (=> (not res!67316) (not e!91822))))

(assert (=> d!44005 (= res!67316 (isStrictlySorted!325 lt!73507))))

(assert (=> d!44005 (= (lemmaContainsTupThenGetReturnValue!90 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73916)))

(declare-fun b!140851 () Bool)

(declare-fun res!67317 () Bool)

(assert (=> b!140851 (=> (not res!67317) (not e!91822))))

(assert (=> b!140851 (= res!67317 (containsKey!180 lt!73507 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(declare-fun b!140852 () Bool)

(assert (=> b!140852 (= e!91822 (contains!925 lt!73507 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(assert (= (and d!44005 res!67316) b!140851))

(assert (= (and b!140851 res!67317) b!140852))

(assert (=> d!44005 m!167439))

(declare-fun m!168697 () Bool)

(assert (=> d!44005 m!168697))

(declare-fun m!168699 () Bool)

(assert (=> d!44005 m!168699))

(declare-fun m!168701 () Bool)

(assert (=> b!140851 m!168701))

(declare-fun m!168703 () Bool)

(assert (=> b!140852 m!168703))

(assert (=> d!43621 d!44005))

(declare-fun b!140853 () Bool)

(declare-fun e!91823 () List!1745)

(declare-fun call!15646 () List!1745)

(assert (=> b!140853 (= e!91823 call!15646)))

(declare-fun bm!15641 () Bool)

(declare-fun call!15644 () List!1745)

(assert (=> bm!15641 (= call!15646 call!15644)))

(declare-fun d!44007 () Bool)

(declare-fun e!91827 () Bool)

(assert (=> d!44007 e!91827))

(declare-fun res!67318 () Bool)

(assert (=> d!44007 (=> (not res!67318) (not e!91827))))

(declare-fun lt!73917 () List!1745)

(assert (=> d!44007 (= res!67318 (isStrictlySorted!325 lt!73917))))

(declare-fun e!91824 () List!1745)

(assert (=> d!44007 (= lt!73917 e!91824)))

(declare-fun c!26419 () Bool)

(assert (=> d!44007 (= c!26419 (and ((_ is Cons!1741) (toList!888 lt!73314)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73314))) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(assert (=> d!44007 (isStrictlySorted!325 (toList!888 lt!73314))))

(assert (=> d!44007 (= (insertStrictlySorted!93 (toList!888 lt!73314) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73917)))

(declare-fun bm!15642 () Bool)

(declare-fun call!15645 () List!1745)

(assert (=> bm!15642 (= call!15644 call!15645)))

(declare-fun b!140854 () Bool)

(declare-fun e!91825 () List!1745)

(assert (=> b!140854 (= e!91824 e!91825)))

(declare-fun c!26418 () Bool)

(assert (=> b!140854 (= c!26418 (and ((_ is Cons!1741) (toList!888 lt!73314)) (= (_1!1360 (h!2348 (toList!888 lt!73314))) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(declare-fun b!140855 () Bool)

(assert (=> b!140855 (= e!91824 call!15645)))

(declare-fun e!91826 () List!1745)

(declare-fun bm!15643 () Bool)

(assert (=> bm!15643 (= call!15645 ($colon$colon!94 e!91826 (ite c!26419 (h!2348 (toList!888 lt!73314)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))))

(declare-fun c!26417 () Bool)

(assert (=> bm!15643 (= c!26417 c!26419)))

(declare-fun c!26420 () Bool)

(declare-fun b!140856 () Bool)

(assert (=> b!140856 (= e!91826 (ite c!26418 (t!6329 (toList!888 lt!73314)) (ite c!26420 (Cons!1741 (h!2348 (toList!888 lt!73314)) (t!6329 (toList!888 lt!73314))) Nil!1742)))))

(declare-fun b!140857 () Bool)

(assert (=> b!140857 (= e!91825 call!15644)))

(declare-fun b!140858 () Bool)

(assert (=> b!140858 (= e!91827 (contains!925 lt!73917 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(declare-fun b!140859 () Bool)

(assert (=> b!140859 (= e!91826 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73314)) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(declare-fun b!140860 () Bool)

(assert (=> b!140860 (= e!91823 call!15646)))

(declare-fun b!140861 () Bool)

(assert (=> b!140861 (= c!26420 (and ((_ is Cons!1741) (toList!888 lt!73314)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73314))) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(assert (=> b!140861 (= e!91825 e!91823)))

(declare-fun b!140862 () Bool)

(declare-fun res!67319 () Bool)

(assert (=> b!140862 (=> (not res!67319) (not e!91827))))

(assert (=> b!140862 (= res!67319 (containsKey!180 lt!73917 (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (= (and d!44007 c!26419) b!140855))

(assert (= (and d!44007 (not c!26419)) b!140854))

(assert (= (and b!140854 c!26418) b!140857))

(assert (= (and b!140854 (not c!26418)) b!140861))

(assert (= (and b!140861 c!26420) b!140860))

(assert (= (and b!140861 (not c!26420)) b!140853))

(assert (= (or b!140860 b!140853) bm!15641))

(assert (= (or b!140857 bm!15641) bm!15642))

(assert (= (or b!140855 bm!15642) bm!15643))

(assert (= (and bm!15643 c!26417) b!140859))

(assert (= (and bm!15643 (not c!26417)) b!140856))

(assert (= (and d!44007 res!67318) b!140862))

(assert (= (and b!140862 res!67319) b!140858))

(declare-fun m!168705 () Bool)

(assert (=> b!140859 m!168705))

(declare-fun m!168707 () Bool)

(assert (=> d!44007 m!168707))

(declare-fun m!168709 () Bool)

(assert (=> d!44007 m!168709))

(declare-fun m!168711 () Bool)

(assert (=> b!140862 m!168711))

(declare-fun m!168713 () Bool)

(assert (=> bm!15643 m!168713))

(declare-fun m!168715 () Bool)

(assert (=> b!140858 m!168715))

(assert (=> d!43621 d!44007))

(declare-fun d!44009 () Bool)

(declare-fun e!91828 () Bool)

(assert (=> d!44009 e!91828))

(declare-fun res!67320 () Bool)

(assert (=> d!44009 (=> res!67320 e!91828)))

(declare-fun lt!73920 () Bool)

(assert (=> d!44009 (= res!67320 (not lt!73920))))

(declare-fun lt!73918 () Bool)

(assert (=> d!44009 (= lt!73920 lt!73918)))

(declare-fun lt!73919 () Unit!4373)

(declare-fun e!91829 () Unit!4373)

(assert (=> d!44009 (= lt!73919 e!91829)))

(declare-fun c!26421 () Bool)

(assert (=> d!44009 (= c!26421 lt!73918)))

(assert (=> d!44009 (= lt!73918 (containsKey!180 (toList!888 lt!73680) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44009 (= (contains!923 lt!73680 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73920)))

(declare-fun b!140863 () Bool)

(declare-fun lt!73921 () Unit!4373)

(assert (=> b!140863 (= e!91829 lt!73921)))

(assert (=> b!140863 (= lt!73921 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73680) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140863 (isDefined!129 (getValueByKey!176 (toList!888 lt!73680) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140864 () Bool)

(declare-fun Unit!4439 () Unit!4373)

(assert (=> b!140864 (= e!91829 Unit!4439)))

(declare-fun b!140865 () Bool)

(assert (=> b!140865 (= e!91828 (isDefined!129 (getValueByKey!176 (toList!888 lt!73680) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44009 c!26421) b!140863))

(assert (= (and d!44009 (not c!26421)) b!140864))

(assert (= (and d!44009 (not res!67320)) b!140865))

(declare-fun m!168717 () Bool)

(assert (=> d!44009 m!168717))

(declare-fun m!168719 () Bool)

(assert (=> b!140863 m!168719))

(declare-fun m!168721 () Bool)

(assert (=> b!140863 m!168721))

(assert (=> b!140863 m!168721))

(declare-fun m!168723 () Bool)

(assert (=> b!140863 m!168723))

(assert (=> b!140865 m!168721))

(assert (=> b!140865 m!168721))

(assert (=> b!140865 m!168723))

(assert (=> bm!15602 d!44009))

(declare-fun d!44011 () Bool)

(assert (=> d!44011 (= (get!1531 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43867 d!44011))

(declare-fun b!140869 () Bool)

(declare-fun e!91831 () Option!182)

(assert (=> b!140869 (= e!91831 None!180)))

(declare-fun b!140866 () Bool)

(declare-fun e!91830 () Option!182)

(assert (=> b!140866 (= e!91830 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73093)))))))

(declare-fun b!140867 () Bool)

(assert (=> b!140867 (= e!91830 e!91831)))

(declare-fun c!26423 () Bool)

(assert (=> b!140867 (= c!26423 (and ((_ is Cons!1741) (toList!888 lt!73093)) (not (= (_1!1360 (h!2348 (toList!888 lt!73093))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44013 () Bool)

(declare-fun c!26422 () Bool)

(assert (=> d!44013 (= c!26422 (and ((_ is Cons!1741) (toList!888 lt!73093)) (= (_1!1360 (h!2348 (toList!888 lt!73093))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44013 (= (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000) e!91830)))

(declare-fun b!140868 () Bool)

(assert (=> b!140868 (= e!91831 (getValueByKey!176 (t!6329 (toList!888 lt!73093)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44013 c!26422) b!140866))

(assert (= (and d!44013 (not c!26422)) b!140867))

(assert (= (and b!140867 c!26423) b!140868))

(assert (= (and b!140867 (not c!26423)) b!140869))

(declare-fun m!168725 () Bool)

(assert (=> b!140868 m!168725))

(assert (=> d!43867 d!44013))

(declare-fun d!44015 () Bool)

(assert (=> d!44015 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun lt!73922 () Unit!4373)

(assert (=> d!44015 (= lt!73922 (choose!864 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!91832 () Bool)

(assert (=> d!44015 e!91832))

(declare-fun res!67321 () Bool)

(assert (=> d!44015 (=> (not res!67321) (not e!91832))))

(assert (=> d!44015 (= res!67321 (isStrictlySorted!325 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))

(assert (=> d!44015 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!73922)))

(declare-fun b!140870 () Bool)

(assert (=> b!140870 (= e!91832 (containsKey!180 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44015 res!67321) b!140870))

(assert (=> d!44015 m!166013))

(assert (=> d!44015 m!167687))

(assert (=> d!44015 m!167687))

(assert (=> d!44015 m!167689))

(assert (=> d!44015 m!166013))

(declare-fun m!168727 () Bool)

(assert (=> d!44015 m!168727))

(declare-fun m!168729 () Bool)

(assert (=> d!44015 m!168729))

(assert (=> b!140870 m!166013))

(assert (=> b!140870 m!167683))

(assert (=> b!140369 d!44015))

(declare-fun d!44017 () Bool)

(assert (=> d!44017 (= (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not (isEmpty!418 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun bs!5895 () Bool)

(assert (= bs!5895 d!44017))

(assert (=> bs!5895 m!167687))

(declare-fun m!168731 () Bool)

(assert (=> bs!5895 m!168731))

(assert (=> b!140369 d!44017))

(declare-fun b!140874 () Bool)

(declare-fun e!91834 () Option!182)

(assert (=> b!140874 (= e!91834 None!180)))

(declare-fun b!140871 () Bool)

(declare-fun e!91833 () Option!182)

(assert (=> b!140871 (= e!91833 (Some!181 (_2!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))))

(declare-fun b!140872 () Bool)

(assert (=> b!140872 (= e!91833 e!91834)))

(declare-fun c!26425 () Bool)

(assert (=> b!140872 (= c!26425 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (not (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun c!26424 () Bool)

(declare-fun d!44019 () Bool)

(assert (=> d!44019 (= c!26424 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!44019 (= (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91833)))

(declare-fun b!140873 () Bool)

(assert (=> b!140873 (= e!91834 (getValueByKey!176 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44019 c!26424) b!140871))

(assert (= (and d!44019 (not c!26424)) b!140872))

(assert (= (and b!140872 c!26425) b!140873))

(assert (= (and b!140872 (not c!26425)) b!140874))

(assert (=> b!140873 m!166013))

(declare-fun m!168733 () Bool)

(assert (=> b!140873 m!168733))

(assert (=> b!140369 d!44019))

(declare-fun d!44021 () Bool)

(declare-fun res!67322 () Bool)

(declare-fun e!91835 () Bool)

(assert (=> d!44021 (=> res!67322 e!91835)))

(assert (=> d!44021 (= res!67322 (and ((_ is Cons!1741) (toList!888 lt!73093)) (= (_1!1360 (h!2348 (toList!888 lt!73093))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44021 (= (containsKey!180 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!91835)))

(declare-fun b!140875 () Bool)

(declare-fun e!91836 () Bool)

(assert (=> b!140875 (= e!91835 e!91836)))

(declare-fun res!67323 () Bool)

(assert (=> b!140875 (=> (not res!67323) (not e!91836))))

(assert (=> b!140875 (= res!67323 (and (or (not ((_ is Cons!1741) (toList!888 lt!73093))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73093))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1741) (toList!888 lt!73093)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73093))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!140876 () Bool)

(assert (=> b!140876 (= e!91836 (containsKey!180 (t!6329 (toList!888 lt!73093)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44021 (not res!67322)) b!140875))

(assert (= (and b!140875 res!67323) b!140876))

(assert (=> b!140876 m!166385))

(declare-fun m!168735 () Bool)

(assert (=> b!140876 m!168735))

(assert (=> d!43759 d!44021))

(declare-fun d!44023 () Bool)

(declare-fun res!67324 () Bool)

(declare-fun e!91837 () Bool)

(assert (=> d!44023 (=> res!67324 e!91837)))

(assert (=> d!44023 (= res!67324 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (=> d!44023 (= (containsKey!180 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))) e!91837)))

(declare-fun b!140877 () Bool)

(declare-fun e!91838 () Bool)

(assert (=> b!140877 (= e!91837 e!91838)))

(declare-fun res!67325 () Bool)

(assert (=> b!140877 (=> (not res!67325) (not e!91838))))

(assert (=> b!140877 (= res!67325 (and (or (not ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (bvsle (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(declare-fun b!140878 () Bool)

(assert (=> b!140878 (= e!91838 (containsKey!180 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(assert (= (and d!44023 (not res!67324)) b!140877))

(assert (= (and b!140877 res!67325) b!140878))

(assert (=> b!140878 m!166199))

(declare-fun m!168737 () Bool)

(assert (=> b!140878 m!168737))

(assert (=> d!43731 d!44023))

(declare-fun b!140882 () Bool)

(declare-fun e!91840 () Option!182)

(assert (=> b!140882 (= e!91840 None!180)))

(declare-fun b!140879 () Bool)

(declare-fun e!91839 () Option!182)

(assert (=> b!140879 (= e!91839 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73122)))))))

(declare-fun b!140880 () Bool)

(assert (=> b!140880 (= e!91839 e!91840)))

(declare-fun c!26427 () Bool)

(assert (=> b!140880 (= c!26427 (and ((_ is Cons!1741) (t!6329 lt!73122)) (not (= (_1!1360 (h!2348 (t!6329 lt!73122))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun d!44025 () Bool)

(declare-fun c!26426 () Bool)

(assert (=> d!44025 (= c!26426 (and ((_ is Cons!1741) (t!6329 lt!73122)) (= (_1!1360 (h!2348 (t!6329 lt!73122))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44025 (= (getValueByKey!176 (t!6329 lt!73122) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91839)))

(declare-fun b!140881 () Bool)

(assert (=> b!140881 (= e!91840 (getValueByKey!176 (t!6329 (t!6329 lt!73122)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44025 c!26426) b!140879))

(assert (= (and d!44025 (not c!26426)) b!140880))

(assert (= (and b!140880 c!26427) b!140881))

(assert (= (and b!140880 (not c!26427)) b!140882))

(declare-fun m!168739 () Bool)

(assert (=> b!140881 m!168739))

(assert (=> b!140013 d!44025))

(declare-fun d!44027 () Bool)

(declare-fun e!91841 () Bool)

(assert (=> d!44027 e!91841))

(declare-fun res!67326 () Bool)

(assert (=> d!44027 (=> res!67326 e!91841)))

(declare-fun lt!73925 () Bool)

(assert (=> d!44027 (= res!67326 (not lt!73925))))

(declare-fun lt!73923 () Bool)

(assert (=> d!44027 (= lt!73925 lt!73923)))

(declare-fun lt!73924 () Unit!4373)

(declare-fun e!91842 () Unit!4373)

(assert (=> d!44027 (= lt!73924 e!91842)))

(declare-fun c!26428 () Bool)

(assert (=> d!44027 (= c!26428 lt!73923)))

(assert (=> d!44027 (= lt!73923 (containsKey!180 (toList!888 lt!73312) lt!73313))))

(assert (=> d!44027 (= (contains!923 lt!73312 lt!73313) lt!73925)))

(declare-fun b!140883 () Bool)

(declare-fun lt!73926 () Unit!4373)

(assert (=> b!140883 (= e!91842 lt!73926)))

(assert (=> b!140883 (= lt!73926 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73312) lt!73313))))

(assert (=> b!140883 (isDefined!129 (getValueByKey!176 (toList!888 lt!73312) lt!73313))))

(declare-fun b!140884 () Bool)

(declare-fun Unit!4440 () Unit!4373)

(assert (=> b!140884 (= e!91842 Unit!4440)))

(declare-fun b!140885 () Bool)

(assert (=> b!140885 (= e!91841 (isDefined!129 (getValueByKey!176 (toList!888 lt!73312) lt!73313)))))

(assert (= (and d!44027 c!26428) b!140883))

(assert (= (and d!44027 (not c!26428)) b!140884))

(assert (= (and d!44027 (not res!67326)) b!140885))

(declare-fun m!168741 () Bool)

(assert (=> d!44027 m!168741))

(declare-fun m!168743 () Bool)

(assert (=> b!140883 m!168743))

(assert (=> b!140883 m!167485))

(assert (=> b!140883 m!167485))

(declare-fun m!168745 () Bool)

(assert (=> b!140883 m!168745))

(assert (=> b!140885 m!167485))

(assert (=> b!140885 m!167485))

(assert (=> b!140885 m!168745))

(assert (=> d!43617 d!44027))

(assert (=> d!43617 d!43619))

(assert (=> d!43617 d!43631))

(declare-fun d!44029 () Bool)

(assert (=> d!44029 (= (apply!120 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) lt!73313) (apply!120 lt!73312 lt!73313))))

(assert (=> d!44029 true))

(declare-fun _$34!1002 () Unit!4373)

(assert (=> d!44029 (= (choose!856 lt!73312 lt!73316 (zeroValue!2790 newMap!16) lt!73313) _$34!1002)))

(declare-fun bs!5896 () Bool)

(assert (= bs!5896 d!44029))

(assert (=> bs!5896 m!166813))

(assert (=> bs!5896 m!166813))

(assert (=> bs!5896 m!166815))

(assert (=> bs!5896 m!166825))

(assert (=> d!43617 d!44029))

(assert (=> d!43617 d!43633))

(assert (=> b!140329 d!43479))

(assert (=> b!140388 d!43719))

(declare-fun d!44031 () Bool)

(declare-fun lt!73927 () Bool)

(assert (=> d!44031 (= lt!73927 (select (content!138 lt!73282) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun e!91844 () Bool)

(assert (=> d!44031 (= lt!73927 e!91844)))

(declare-fun res!67327 () Bool)

(assert (=> d!44031 (=> (not res!67327) (not e!91844))))

(assert (=> d!44031 (= res!67327 ((_ is Cons!1741) lt!73282))))

(assert (=> d!44031 (= (contains!925 lt!73282 (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!73927)))

(declare-fun b!140886 () Bool)

(declare-fun e!91843 () Bool)

(assert (=> b!140886 (= e!91844 e!91843)))

(declare-fun res!67328 () Bool)

(assert (=> b!140886 (=> res!67328 e!91843)))

(assert (=> b!140886 (= res!67328 (= (h!2348 lt!73282) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!140887 () Bool)

(assert (=> b!140887 (= e!91843 (contains!925 (t!6329 lt!73282) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (= (and d!44031 res!67327) b!140886))

(assert (= (and b!140886 (not res!67328)) b!140887))

(declare-fun m!168747 () Bool)

(assert (=> d!44031 m!168747))

(declare-fun m!168749 () Bool)

(assert (=> d!44031 m!168749))

(declare-fun m!168751 () Bool)

(assert (=> b!140887 m!168751))

(assert (=> b!140355 d!44031))

(declare-fun b!140888 () Bool)

(declare-fun e!91845 () (_ BitVec 32))

(assert (=> b!140888 (= e!91845 #b00000000000000000000000000000000)))

(declare-fun b!140889 () Bool)

(declare-fun e!91846 () (_ BitVec 32))

(declare-fun call!15647 () (_ BitVec 32))

(assert (=> b!140889 (= e!91846 call!15647)))

(declare-fun bm!15644 () Bool)

(assert (=> bm!15644 (= call!15647 (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!72992)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(declare-fun d!44033 () Bool)

(declare-fun lt!73928 () (_ BitVec 32))

(assert (=> d!44033 (and (bvsge lt!73928 #b00000000000000000000000000000000) (bvsle lt!73928 (bvsub (size!2587 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44033 (= lt!73928 e!91845)))

(declare-fun c!26429 () Bool)

(assert (=> d!44033 (= c!26429 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!44033 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 (_2!1361 lt!72992))) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!44033 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!72992)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))) lt!73928)))

(declare-fun b!140890 () Bool)

(assert (=> b!140890 (= e!91845 e!91846)))

(declare-fun c!26430 () Bool)

(assert (=> b!140890 (= c!26430 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140891 () Bool)

(assert (=> b!140891 (= e!91846 (bvadd #b00000000000000000000000000000001 call!15647))))

(assert (= (and d!44033 c!26429) b!140888))

(assert (= (and d!44033 (not c!26429)) b!140890))

(assert (= (and b!140890 c!26430) b!140891))

(assert (= (and b!140890 (not c!26430)) b!140889))

(assert (= (or b!140891 b!140889) bm!15644))

(declare-fun m!168753 () Bool)

(assert (=> bm!15644 m!168753))

(declare-fun m!168755 () Bool)

(assert (=> b!140890 m!168755))

(assert (=> b!140890 m!168755))

(declare-fun m!168757 () Bool)

(assert (=> b!140890 m!168757))

(assert (=> bm!15618 d!44033))

(declare-fun d!44035 () Bool)

(declare-fun c!26433 () Bool)

(assert (=> d!44035 (= c!26433 ((_ is Nil!1742) (toList!888 lt!73019)))))

(declare-fun e!91849 () (InoxSet tuple2!2698))

(assert (=> d!44035 (= (content!138 (toList!888 lt!73019)) e!91849)))

(declare-fun b!140896 () Bool)

(assert (=> b!140896 (= e!91849 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!140897 () Bool)

(assert (=> b!140897 (= e!91849 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73019)) true) (content!138 (t!6329 (toList!888 lt!73019)))))))

(assert (= (and d!44035 c!26433) b!140896))

(assert (= (and d!44035 (not c!26433)) b!140897))

(declare-fun m!168759 () Bool)

(assert (=> b!140897 m!168759))

(declare-fun m!168761 () Bool)

(assert (=> b!140897 m!168761))

(assert (=> d!43767 d!44035))

(declare-fun b!140898 () Bool)

(declare-fun e!91851 () Bool)

(declare-fun e!91852 () Bool)

(assert (=> b!140898 (= e!91851 e!91852)))

(declare-fun lt!73930 () (_ BitVec 64))

(assert (=> b!140898 (= lt!73930 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!73929 () Unit!4373)

(assert (=> b!140898 (= lt!73929 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73930 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!140898 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73930 #b00000000000000000000000000000000)))

(declare-fun lt!73931 () Unit!4373)

(assert (=> b!140898 (= lt!73931 lt!73929)))

(declare-fun res!67329 () Bool)

(assert (=> b!140898 (= res!67329 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)) (Found!279 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!140898 (=> (not res!67329) (not e!91852))))

(declare-fun d!44037 () Bool)

(declare-fun res!67330 () Bool)

(declare-fun e!91850 () Bool)

(assert (=> d!44037 (=> res!67330 e!91850)))

(assert (=> d!44037 (= res!67330 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44037 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)) e!91850)))

(declare-fun b!140899 () Bool)

(declare-fun call!15648 () Bool)

(assert (=> b!140899 (= e!91852 call!15648)))

(declare-fun bm!15645 () Bool)

(assert (=> bm!15645 (= call!15648 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140900 () Bool)

(assert (=> b!140900 (= e!91850 e!91851)))

(declare-fun c!26434 () Bool)

(assert (=> b!140900 (= c!26434 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140901 () Bool)

(assert (=> b!140901 (= e!91851 call!15648)))

(assert (= (and d!44037 (not res!67330)) b!140900))

(assert (= (and b!140900 c!26434) b!140898))

(assert (= (and b!140900 (not c!26434)) b!140901))

(assert (= (and b!140898 res!67329) b!140899))

(assert (= (or b!140899 b!140901) bm!15645))

(declare-fun m!168763 () Bool)

(assert (=> b!140898 m!168763))

(declare-fun m!168765 () Bool)

(assert (=> b!140898 m!168765))

(declare-fun m!168767 () Bool)

(assert (=> b!140898 m!168767))

(assert (=> b!140898 m!168763))

(declare-fun m!168769 () Bool)

(assert (=> b!140898 m!168769))

(declare-fun m!168771 () Bool)

(assert (=> bm!15645 m!168771))

(assert (=> b!140900 m!168763))

(assert (=> b!140900 m!168763))

(declare-fun m!168773 () Bool)

(assert (=> b!140900 m!168773))

(assert (=> bm!15639 d!44037))

(declare-fun b!140905 () Bool)

(declare-fun e!91854 () Option!182)

(assert (=> b!140905 (= e!91854 None!180)))

(declare-fun b!140902 () Bool)

(declare-fun e!91853 () Option!182)

(assert (=> b!140902 (= e!91853 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73125))))))))

(declare-fun b!140903 () Bool)

(assert (=> b!140903 (= e!91853 e!91854)))

(declare-fun c!26436 () Bool)

(assert (=> b!140903 (= c!26436 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73125))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73125)))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26435 () Bool)

(declare-fun d!44039 () Bool)

(assert (=> d!44039 (= c!26435 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73125))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73125)))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44039 (= (getValueByKey!176 (t!6329 (toList!888 lt!73125)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91853)))

(declare-fun b!140904 () Bool)

(assert (=> b!140904 (= e!91854 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73125))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44039 c!26435) b!140902))

(assert (= (and d!44039 (not c!26435)) b!140903))

(assert (= (and b!140903 c!26436) b!140904))

(assert (= (and b!140903 (not c!26436)) b!140905))

(declare-fun m!168775 () Bool)

(assert (=> b!140904 m!168775))

(assert (=> b!140064 d!44039))

(declare-fun b!140909 () Bool)

(declare-fun e!91856 () Option!182)

(assert (=> b!140909 (= e!91856 None!180)))

(declare-fun b!140906 () Bool)

(declare-fun e!91855 () Option!182)

(assert (=> b!140906 (= e!91855 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72907))))))))

(declare-fun b!140907 () Bool)

(assert (=> b!140907 (= e!91855 e!91856)))

(declare-fun c!26438 () Bool)

(assert (=> b!140907 (= c!26438 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44041 () Bool)

(declare-fun c!26437 () Bool)

(assert (=> d!44041 (= c!26437 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44041 (= (getValueByKey!176 (t!6329 (toList!888 lt!72907)) #b1000000000000000000000000000000000000000000000000000000000000000) e!91855)))

(declare-fun b!140908 () Bool)

(assert (=> b!140908 (= e!91856 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44041 c!26437) b!140906))

(assert (= (and d!44041 (not c!26437)) b!140907))

(assert (= (and b!140907 c!26438) b!140908))

(assert (= (and b!140907 (not c!26438)) b!140909))

(declare-fun m!168777 () Bool)

(assert (=> b!140908 m!168777))

(assert (=> b!140194 d!44041))

(declare-fun d!44043 () Bool)

(assert (=> d!44043 (= (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140418 d!44043))

(declare-fun d!44045 () Bool)

(declare-fun res!67331 () Bool)

(declare-fun e!91857 () Bool)

(assert (=> d!44045 (=> res!67331 e!91857)))

(assert (=> d!44045 (= res!67331 (and ((_ is Cons!1741) lt!73056) (= (_1!1360 (h!2348 lt!73056)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44045 (= (containsKey!180 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91857)))

(declare-fun b!140910 () Bool)

(declare-fun e!91858 () Bool)

(assert (=> b!140910 (= e!91857 e!91858)))

(declare-fun res!67332 () Bool)

(assert (=> b!140910 (=> (not res!67332) (not e!91858))))

(assert (=> b!140910 (= res!67332 (and (or (not ((_ is Cons!1741) lt!73056)) (bvsle (_1!1360 (h!2348 lt!73056)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73056) (bvslt (_1!1360 (h!2348 lt!73056)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140911 () Bool)

(assert (=> b!140911 (= e!91858 (containsKey!180 (t!6329 lt!73056) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44045 (not res!67331)) b!140910))

(assert (= (and b!140910 res!67332) b!140911))

(declare-fun m!168779 () Bool)

(assert (=> b!140911 m!168779))

(assert (=> b!140638 d!44045))

(declare-fun b!140912 () Bool)

(declare-fun e!91860 () Bool)

(declare-fun e!91861 () Bool)

(assert (=> b!140912 (= e!91860 e!91861)))

(declare-fun lt!73933 () (_ BitVec 64))

(assert (=> b!140912 (= lt!73933 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000))))

(declare-fun lt!73932 () Unit!4373)

(assert (=> b!140912 (= lt!73932 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1361 lt!73257)) lt!73933 #b00000000000000000000000000000000))))

(assert (=> b!140912 (arrayContainsKey!0 (_keys!4699 (_2!1361 lt!73257)) lt!73933 #b00000000000000000000000000000000)))

(declare-fun lt!73934 () Unit!4373)

(assert (=> b!140912 (= lt!73934 lt!73932)))

(declare-fun res!67333 () Bool)

(assert (=> b!140912 (= res!67333 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000) (_keys!4699 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257))) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!140912 (=> (not res!67333) (not e!91861))))

(declare-fun d!44047 () Bool)

(declare-fun res!67334 () Bool)

(declare-fun e!91859 () Bool)

(assert (=> d!44047 (=> res!67334 e!91859)))

(assert (=> d!44047 (= res!67334 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(assert (=> d!44047 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257))) e!91859)))

(declare-fun b!140913 () Bool)

(declare-fun call!15649 () Bool)

(assert (=> b!140913 (= e!91861 call!15649)))

(declare-fun bm!15646 () Bool)

(assert (=> bm!15646 (= call!15649 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257))))))

(declare-fun b!140914 () Bool)

(assert (=> b!140914 (= e!91859 e!91860)))

(declare-fun c!26439 () Bool)

(assert (=> b!140914 (= c!26439 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(declare-fun b!140915 () Bool)

(assert (=> b!140915 (= e!91860 call!15649)))

(assert (= (and d!44047 (not res!67334)) b!140914))

(assert (= (and b!140914 c!26439) b!140912))

(assert (= (and b!140914 (not c!26439)) b!140915))

(assert (= (and b!140912 res!67333) b!140913))

(assert (= (or b!140913 b!140915) bm!15646))

(declare-fun m!168781 () Bool)

(assert (=> b!140912 m!168781))

(declare-fun m!168783 () Bool)

(assert (=> b!140912 m!168783))

(declare-fun m!168785 () Bool)

(assert (=> b!140912 m!168785))

(assert (=> b!140912 m!168781))

(declare-fun m!168787 () Bool)

(assert (=> b!140912 m!168787))

(declare-fun m!168789 () Bool)

(assert (=> bm!15646 m!168789))

(assert (=> b!140914 m!168781))

(assert (=> b!140914 m!168781))

(declare-fun m!168791 () Bool)

(assert (=> b!140914 m!168791))

(assert (=> b!140107 d!44047))

(declare-fun d!44049 () Bool)

(assert (=> d!44049 (= (get!1531 (getValueByKey!176 (toList!888 lt!73304) lt!73299)) (v!3284 (getValueByKey!176 (toList!888 lt!73304) lt!73299)))))

(assert (=> d!43823 d!44049))

(declare-fun b!140919 () Bool)

(declare-fun e!91863 () Option!182)

(assert (=> b!140919 (= e!91863 None!180)))

(declare-fun b!140916 () Bool)

(declare-fun e!91862 () Option!182)

(assert (=> b!140916 (= e!91862 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73304)))))))

(declare-fun b!140917 () Bool)

(assert (=> b!140917 (= e!91862 e!91863)))

(declare-fun c!26441 () Bool)

(assert (=> b!140917 (= c!26441 (and ((_ is Cons!1741) (toList!888 lt!73304)) (not (= (_1!1360 (h!2348 (toList!888 lt!73304))) lt!73299))))))

(declare-fun d!44051 () Bool)

(declare-fun c!26440 () Bool)

(assert (=> d!44051 (= c!26440 (and ((_ is Cons!1741) (toList!888 lt!73304)) (= (_1!1360 (h!2348 (toList!888 lt!73304))) lt!73299)))))

(assert (=> d!44051 (= (getValueByKey!176 (toList!888 lt!73304) lt!73299) e!91862)))

(declare-fun b!140918 () Bool)

(assert (=> b!140918 (= e!91863 (getValueByKey!176 (t!6329 (toList!888 lt!73304)) lt!73299))))

(assert (= (and d!44051 c!26440) b!140916))

(assert (= (and d!44051 (not c!26440)) b!140917))

(assert (= (and b!140917 c!26441) b!140918))

(assert (= (and b!140917 (not c!26441)) b!140919))

(declare-fun m!168793 () Bool)

(assert (=> b!140918 m!168793))

(assert (=> d!43823 d!44051))

(declare-fun d!44053 () Bool)

(assert (=> d!44053 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140819 d!44053))

(declare-fun d!44055 () Bool)

(assert (=> d!44055 (= (get!1531 (getValueByKey!176 (toList!888 lt!73288) lt!73293)) (v!3284 (getValueByKey!176 (toList!888 lt!73288) lt!73293)))))

(assert (=> d!43819 d!44055))

(declare-fun b!140923 () Bool)

(declare-fun e!91865 () Option!182)

(assert (=> b!140923 (= e!91865 None!180)))

(declare-fun b!140920 () Bool)

(declare-fun e!91864 () Option!182)

(assert (=> b!140920 (= e!91864 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73288)))))))

(declare-fun b!140921 () Bool)

(assert (=> b!140921 (= e!91864 e!91865)))

(declare-fun c!26443 () Bool)

(assert (=> b!140921 (= c!26443 (and ((_ is Cons!1741) (toList!888 lt!73288)) (not (= (_1!1360 (h!2348 (toList!888 lt!73288))) lt!73293))))))

(declare-fun d!44057 () Bool)

(declare-fun c!26442 () Bool)

(assert (=> d!44057 (= c!26442 (and ((_ is Cons!1741) (toList!888 lt!73288)) (= (_1!1360 (h!2348 (toList!888 lt!73288))) lt!73293)))))

(assert (=> d!44057 (= (getValueByKey!176 (toList!888 lt!73288) lt!73293) e!91864)))

(declare-fun b!140922 () Bool)

(assert (=> b!140922 (= e!91865 (getValueByKey!176 (t!6329 (toList!888 lt!73288)) lt!73293))))

(assert (= (and d!44057 c!26442) b!140920))

(assert (= (and d!44057 (not c!26442)) b!140921))

(assert (= (and b!140921 c!26443) b!140922))

(assert (= (and b!140921 (not c!26443)) b!140923))

(declare-fun m!168795 () Bool)

(assert (=> b!140922 m!168795))

(assert (=> d!43819 d!44057))

(assert (=> b!140109 d!43999))

(declare-fun d!44059 () Bool)

(assert (=> d!44059 (= (isEmpty!418 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not ((_ is Some!181) (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(assert (=> d!43665 d!44059))

(assert (=> b!140674 d!44053))

(declare-fun lt!73935 () Bool)

(declare-fun d!44061 () Bool)

(assert (=> d!44061 (= lt!73935 (select (content!138 (toList!888 lt!73835)) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!91867 () Bool)

(assert (=> d!44061 (= lt!73935 e!91867)))

(declare-fun res!67335 () Bool)

(assert (=> d!44061 (=> (not res!67335) (not e!91867))))

(assert (=> d!44061 (= res!67335 ((_ is Cons!1741) (toList!888 lt!73835)))))

(assert (=> d!44061 (= (contains!925 (toList!888 lt!73835) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73935)))

(declare-fun b!140924 () Bool)

(declare-fun e!91866 () Bool)

(assert (=> b!140924 (= e!91867 e!91866)))

(declare-fun res!67336 () Bool)

(assert (=> b!140924 (=> res!67336 e!91866)))

(assert (=> b!140924 (= res!67336 (= (h!2348 (toList!888 lt!73835)) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140925 () Bool)

(assert (=> b!140925 (= e!91866 (contains!925 (t!6329 (toList!888 lt!73835)) (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44061 res!67335) b!140924))

(assert (= (and b!140924 (not res!67336)) b!140925))

(declare-fun m!168797 () Bool)

(assert (=> d!44061 m!168797))

(declare-fun m!168799 () Bool)

(assert (=> d!44061 m!168799))

(declare-fun m!168801 () Bool)

(assert (=> b!140925 m!168801))

(assert (=> b!140729 d!44061))

(assert (=> b!140584 d!43479))

(declare-fun d!44063 () Bool)

(declare-fun res!67337 () Bool)

(declare-fun e!91868 () Bool)

(assert (=> d!44063 (=> res!67337 e!91868)))

(assert (=> d!44063 (= res!67337 (and ((_ is Cons!1741) (toList!888 lt!72905)) (= (_1!1360 (h!2348 (toList!888 lt!72905))) lt!72900)))))

(assert (=> d!44063 (= (containsKey!180 (toList!888 lt!72905) lt!72900) e!91868)))

(declare-fun b!140926 () Bool)

(declare-fun e!91869 () Bool)

(assert (=> b!140926 (= e!91868 e!91869)))

(declare-fun res!67338 () Bool)

(assert (=> b!140926 (=> (not res!67338) (not e!91869))))

(assert (=> b!140926 (= res!67338 (and (or (not ((_ is Cons!1741) (toList!888 lt!72905))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72905))) lt!72900)) ((_ is Cons!1741) (toList!888 lt!72905)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72905))) lt!72900)))))

(declare-fun b!140927 () Bool)

(assert (=> b!140927 (= e!91869 (containsKey!180 (t!6329 (toList!888 lt!72905)) lt!72900))))

(assert (= (and d!44063 (not res!67337)) b!140926))

(assert (= (and b!140926 res!67338) b!140927))

(declare-fun m!168803 () Bool)

(assert (=> b!140927 m!168803))

(assert (=> d!43991 d!44063))

(declare-fun d!44065 () Bool)

(declare-fun lt!73936 () Bool)

(assert (=> d!44065 (= lt!73936 (select (content!138 (toList!888 lt!73397)) (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))

(declare-fun e!91871 () Bool)

(assert (=> d!44065 (= lt!73936 e!91871)))

(declare-fun res!67339 () Bool)

(assert (=> d!44065 (=> (not res!67339) (not e!91871))))

(assert (=> d!44065 (= res!67339 ((_ is Cons!1741) (toList!888 lt!73397)))))

(assert (=> d!44065 (= (contains!925 (toList!888 lt!73397) (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) lt!73936)))

(declare-fun b!140928 () Bool)

(declare-fun e!91870 () Bool)

(assert (=> b!140928 (= e!91871 e!91870)))

(declare-fun res!67340 () Bool)

(assert (=> b!140928 (=> res!67340 e!91870)))

(assert (=> b!140928 (= res!67340 (= (h!2348 (toList!888 lt!73397)) (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))

(declare-fun b!140929 () Bool)

(assert (=> b!140929 (= e!91870 (contains!925 (t!6329 (toList!888 lt!73397)) (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44065 res!67339) b!140928))

(assert (= (and b!140928 (not res!67340)) b!140929))

(declare-fun m!168805 () Bool)

(assert (=> d!44065 m!168805))

(declare-fun m!168807 () Bool)

(assert (=> d!44065 m!168807))

(declare-fun m!168809 () Bool)

(assert (=> b!140929 m!168809))

(assert (=> b!140080 d!44065))

(declare-fun d!44067 () Bool)

(declare-fun e!91872 () Bool)

(assert (=> d!44067 e!91872))

(declare-fun res!67341 () Bool)

(assert (=> d!44067 (=> res!67341 e!91872)))

(declare-fun lt!73939 () Bool)

(assert (=> d!44067 (= res!67341 (not lt!73939))))

(declare-fun lt!73937 () Bool)

(assert (=> d!44067 (= lt!73939 lt!73937)))

(declare-fun lt!73938 () Unit!4373)

(declare-fun e!91873 () Unit!4373)

(assert (=> d!44067 (= lt!73938 e!91873)))

(declare-fun c!26444 () Bool)

(assert (=> d!44067 (= c!26444 lt!73937)))

(assert (=> d!44067 (= lt!73937 (containsKey!180 (toList!888 lt!73615) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44067 (= (contains!923 lt!73615 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73939)))

(declare-fun b!140930 () Bool)

(declare-fun lt!73940 () Unit!4373)

(assert (=> b!140930 (= e!91873 lt!73940)))

(assert (=> b!140930 (= lt!73940 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73615) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140930 (isDefined!129 (getValueByKey!176 (toList!888 lt!73615) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140931 () Bool)

(declare-fun Unit!4441 () Unit!4373)

(assert (=> b!140931 (= e!91873 Unit!4441)))

(declare-fun b!140932 () Bool)

(assert (=> b!140932 (= e!91872 (isDefined!129 (getValueByKey!176 (toList!888 lt!73615) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44067 c!26444) b!140930))

(assert (= (and d!44067 (not c!26444)) b!140931))

(assert (= (and d!44067 (not res!67341)) b!140932))

(declare-fun m!168811 () Bool)

(assert (=> d!44067 m!168811))

(declare-fun m!168813 () Bool)

(assert (=> b!140930 m!168813))

(declare-fun m!168815 () Bool)

(assert (=> b!140930 m!168815))

(assert (=> b!140930 m!168815))

(declare-fun m!168817 () Bool)

(assert (=> b!140930 m!168817))

(assert (=> b!140932 m!168815))

(assert (=> b!140932 m!168815))

(assert (=> b!140932 m!168817))

(assert (=> bm!15592 d!44067))

(declare-fun b!140936 () Bool)

(declare-fun e!91875 () Option!182)

(assert (=> b!140936 (= e!91875 None!180)))

(declare-fun b!140933 () Bool)

(declare-fun e!91874 () Option!182)

(assert (=> b!140933 (= e!91874 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73455)))))))

(declare-fun b!140934 () Bool)

(assert (=> b!140934 (= e!91874 e!91875)))

(declare-fun c!26446 () Bool)

(assert (=> b!140934 (= c!26446 (and ((_ is Cons!1741) (toList!888 lt!73455)) (not (= (_1!1360 (h!2348 (toList!888 lt!73455))) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))))

(declare-fun c!26445 () Bool)

(declare-fun d!44069 () Bool)

(assert (=> d!44069 (= c!26445 (and ((_ is Cons!1741) (toList!888 lt!73455)) (= (_1!1360 (h!2348 (toList!888 lt!73455))) (_1!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (=> d!44069 (= (getValueByKey!176 (toList!888 lt!73455) (_1!1360 (tuple2!2699 lt!73053 lt!73050))) e!91874)))

(declare-fun b!140935 () Bool)

(assert (=> b!140935 (= e!91875 (getValueByKey!176 (t!6329 (toList!888 lt!73455)) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (= (and d!44069 c!26445) b!140933))

(assert (= (and d!44069 (not c!26445)) b!140934))

(assert (= (and b!140934 c!26446) b!140935))

(assert (= (and b!140934 (not c!26446)) b!140936))

(declare-fun m!168819 () Bool)

(assert (=> b!140935 m!168819))

(assert (=> b!140199 d!44069))

(declare-fun d!44071 () Bool)

(declare-fun res!67342 () Bool)

(declare-fun e!91876 () Bool)

(assert (=> d!44071 (=> res!67342 e!91876)))

(assert (=> d!44071 (= res!67342 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))) lt!73302)))))

(assert (=> d!44071 (= (containsKey!180 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302) e!91876)))

(declare-fun b!140937 () Bool)

(declare-fun e!91877 () Bool)

(assert (=> b!140937 (= e!91876 e!91877)))

(declare-fun res!67343 () Bool)

(assert (=> b!140937 (=> (not res!67343) (not e!91877))))

(assert (=> b!140937 (= res!67343 (and (or (not ((_ is Cons!1741) (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))) (bvsle (_1!1360 (h!2348 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))) lt!73302)) ((_ is Cons!1741) (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))) (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))) lt!73302)))))

(declare-fun b!140938 () Bool)

(assert (=> b!140938 (= e!91877 (containsKey!180 (t!6329 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))) lt!73302))))

(assert (= (and d!44071 (not res!67342)) b!140937))

(assert (= (and b!140937 res!67343) b!140938))

(declare-fun m!168821 () Bool)

(assert (=> b!140938 m!168821))

(assert (=> d!43841 d!44071))

(declare-fun d!44073 () Bool)

(declare-fun e!91878 () Bool)

(assert (=> d!44073 e!91878))

(declare-fun res!67344 () Bool)

(assert (=> d!44073 (=> res!67344 e!91878)))

(declare-fun lt!73943 () Bool)

(assert (=> d!44073 (= res!67344 (not lt!73943))))

(declare-fun lt!73941 () Bool)

(assert (=> d!44073 (= lt!73943 lt!73941)))

(declare-fun lt!73942 () Unit!4373)

(declare-fun e!91879 () Unit!4373)

(assert (=> d!44073 (= lt!73942 e!91879)))

(declare-fun c!26447 () Bool)

(assert (=> d!44073 (= c!26447 lt!73941)))

(assert (=> d!44073 (= lt!73941 (containsKey!180 (toList!888 lt!73824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44073 (= (contains!923 lt!73824 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73943)))

(declare-fun b!140939 () Bool)

(declare-fun lt!73944 () Unit!4373)

(assert (=> b!140939 (= e!91879 lt!73944)))

(assert (=> b!140939 (= lt!73944 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140939 (isDefined!129 (getValueByKey!176 (toList!888 lt!73824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140940 () Bool)

(declare-fun Unit!4442 () Unit!4373)

(assert (=> b!140940 (= e!91879 Unit!4442)))

(declare-fun b!140941 () Bool)

(assert (=> b!140941 (= e!91878 (isDefined!129 (getValueByKey!176 (toList!888 lt!73824) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44073 c!26447) b!140939))

(assert (= (and d!44073 (not c!26447)) b!140940))

(assert (= (and d!44073 (not res!67344)) b!140941))

(declare-fun m!168823 () Bool)

(assert (=> d!44073 m!168823))

(declare-fun m!168825 () Bool)

(assert (=> b!140939 m!168825))

(declare-fun m!168827 () Bool)

(assert (=> b!140939 m!168827))

(assert (=> b!140939 m!168827))

(declare-fun m!168829 () Bool)

(assert (=> b!140939 m!168829))

(assert (=> b!140941 m!168827))

(assert (=> b!140941 m!168827))

(assert (=> b!140941 m!168829))

(assert (=> bm!15627 d!44073))

(assert (=> b!140754 d!43869))

(declare-fun b!140942 () Bool)

(declare-fun e!91880 () List!1745)

(declare-fun call!15652 () List!1745)

(assert (=> b!140942 (= e!91880 call!15652)))

(declare-fun bm!15647 () Bool)

(declare-fun call!15650 () List!1745)

(assert (=> bm!15647 (= call!15652 call!15650)))

(declare-fun d!44075 () Bool)

(declare-fun e!91884 () Bool)

(assert (=> d!44075 e!91884))

(declare-fun res!67345 () Bool)

(assert (=> d!44075 (=> (not res!67345) (not e!91884))))

(declare-fun lt!73945 () List!1745)

(assert (=> d!44075 (= res!67345 (isStrictlySorted!325 lt!73945))))

(declare-fun e!91881 () List!1745)

(assert (=> d!44075 (= lt!73945 e!91881)))

(declare-fun c!26450 () Bool)

(assert (=> d!44075 (= c!26450 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15459))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 call!15459)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44075 (isStrictlySorted!325 (t!6329 (toList!888 call!15459)))))

(assert (=> d!44075 (= (insertStrictlySorted!93 (t!6329 (toList!888 call!15459)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73945)))

(declare-fun bm!15648 () Bool)

(declare-fun call!15651 () List!1745)

(assert (=> bm!15648 (= call!15650 call!15651)))

(declare-fun b!140943 () Bool)

(declare-fun e!91882 () List!1745)

(assert (=> b!140943 (= e!91881 e!91882)))

(declare-fun c!26449 () Bool)

(assert (=> b!140943 (= c!26449 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15459))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15459)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140944 () Bool)

(assert (=> b!140944 (= e!91881 call!15651)))

(declare-fun bm!15649 () Bool)

(declare-fun e!91883 () List!1745)

(assert (=> bm!15649 (= call!15651 ($colon$colon!94 e!91883 (ite c!26450 (h!2348 (t!6329 (toList!888 call!15459))) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26448 () Bool)

(assert (=> bm!15649 (= c!26448 c!26450)))

(declare-fun b!140945 () Bool)

(declare-fun c!26451 () Bool)

(assert (=> b!140945 (= e!91883 (ite c!26449 (t!6329 (t!6329 (toList!888 call!15459))) (ite c!26451 (Cons!1741 (h!2348 (t!6329 (toList!888 call!15459))) (t!6329 (t!6329 (toList!888 call!15459)))) Nil!1742)))))

(declare-fun b!140946 () Bool)

(assert (=> b!140946 (= e!91882 call!15650)))

(declare-fun b!140947 () Bool)

(assert (=> b!140947 (= e!91884 (contains!925 lt!73945 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140948 () Bool)

(assert (=> b!140948 (= e!91883 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 call!15459))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140949 () Bool)

(assert (=> b!140949 (= e!91880 call!15652)))

(declare-fun b!140950 () Bool)

(assert (=> b!140950 (= c!26451 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15459))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 call!15459)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140950 (= e!91882 e!91880)))

(declare-fun b!140951 () Bool)

(declare-fun res!67346 () Bool)

(assert (=> b!140951 (=> (not res!67346) (not e!91884))))

(assert (=> b!140951 (= res!67346 (containsKey!180 lt!73945 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44075 c!26450) b!140944))

(assert (= (and d!44075 (not c!26450)) b!140943))

(assert (= (and b!140943 c!26449) b!140946))

(assert (= (and b!140943 (not c!26449)) b!140950))

(assert (= (and b!140950 c!26451) b!140949))

(assert (= (and b!140950 (not c!26451)) b!140942))

(assert (= (or b!140949 b!140942) bm!15647))

(assert (= (or b!140946 bm!15647) bm!15648))

(assert (= (or b!140944 bm!15648) bm!15649))

(assert (= (and bm!15649 c!26448) b!140948))

(assert (= (and bm!15649 (not c!26448)) b!140945))

(assert (= (and d!44075 res!67345) b!140951))

(assert (= (and b!140951 res!67346) b!140947))

(declare-fun m!168831 () Bool)

(assert (=> b!140948 m!168831))

(declare-fun m!168833 () Bool)

(assert (=> d!44075 m!168833))

(declare-fun m!168835 () Bool)

(assert (=> d!44075 m!168835))

(declare-fun m!168837 () Bool)

(assert (=> b!140951 m!168837))

(declare-fun m!168839 () Bool)

(assert (=> bm!15649 m!168839))

(declare-fun m!168841 () Bool)

(assert (=> b!140947 m!168841))

(assert (=> b!140132 d!44075))

(declare-fun d!44077 () Bool)

(assert (=> d!44077 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(declare-fun lt!73946 () Unit!4373)

(assert (=> d!44077 (= lt!73946 (choose!864 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(declare-fun e!91885 () Bool)

(assert (=> d!44077 e!91885))

(declare-fun res!67347 () Bool)

(assert (=> d!44077 (=> (not res!67347) (not e!91885))))

(assert (=> d!44077 (= res!67347 (isStrictlySorted!325 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))

(assert (=> d!44077 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) lt!73946)))

(declare-fun b!140952 () Bool)

(assert (=> b!140952 (= e!91885 (containsKey!180 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (= (and d!44077 res!67347) b!140952))

(assert (=> d!44077 m!166659))

(assert (=> d!44077 m!167809))

(assert (=> d!44077 m!167809))

(assert (=> d!44077 m!167811))

(assert (=> d!44077 m!166659))

(declare-fun m!168843 () Bool)

(assert (=> d!44077 m!168843))

(declare-fun m!168845 () Bool)

(assert (=> d!44077 m!168845))

(assert (=> b!140952 m!166659))

(assert (=> b!140952 m!167805))

(assert (=> b!140426 d!44077))

(declare-fun d!44079 () Bool)

(assert (=> d!44079 (= (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))))

(declare-fun bs!5897 () Bool)

(assert (= bs!5897 d!44079))

(assert (=> bs!5897 m!167809))

(declare-fun m!168847 () Bool)

(assert (=> bs!5897 m!168847))

(assert (=> b!140426 d!44079))

(declare-fun b!140956 () Bool)

(declare-fun e!91887 () Option!182)

(assert (=> b!140956 (= e!91887 None!180)))

(declare-fun e!91886 () Option!182)

(declare-fun b!140953 () Bool)

(assert (=> b!140953 (= e!91886 (Some!181 (_2!1360 (h!2348 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))))

(declare-fun b!140954 () Bool)

(assert (=> b!140954 (= e!91886 e!91887)))

(declare-fun c!26453 () Bool)

(assert (=> b!140954 (= c!26453 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (not (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))))

(declare-fun d!44081 () Bool)

(declare-fun c!26452 () Bool)

(assert (=> d!44081 (= c!26452 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))))

(assert (=> d!44081 (= (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) e!91886)))

(declare-fun b!140955 () Bool)

(assert (=> b!140955 (= e!91887 (getValueByKey!176 (t!6329 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (= (and d!44081 c!26452) b!140953))

(assert (= (and d!44081 (not c!26452)) b!140954))

(assert (= (and b!140954 c!26453) b!140955))

(assert (= (and b!140954 (not c!26453)) b!140956))

(assert (=> b!140955 m!166659))

(declare-fun m!168849 () Bool)

(assert (=> b!140955 m!168849))

(assert (=> b!140426 d!44081))

(declare-fun lt!73947 () Bool)

(declare-fun d!44083 () Bool)

(assert (=> d!44083 (= lt!73947 (select (content!138 lt!73568) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun e!91889 () Bool)

(assert (=> d!44083 (= lt!73947 e!91889)))

(declare-fun res!67348 () Bool)

(assert (=> d!44083 (=> (not res!67348) (not e!91889))))

(assert (=> d!44083 (= res!67348 ((_ is Cons!1741) lt!73568))))

(assert (=> d!44083 (= (contains!925 lt!73568 (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!73947)))

(declare-fun b!140957 () Bool)

(declare-fun e!91888 () Bool)

(assert (=> b!140957 (= e!91889 e!91888)))

(declare-fun res!67349 () Bool)

(assert (=> b!140957 (=> res!67349 e!91888)))

(assert (=> b!140957 (= res!67349 (= (h!2348 lt!73568) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!140958 () Bool)

(assert (=> b!140958 (= e!91888 (contains!925 (t!6329 lt!73568) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (= (and d!44083 res!67348) b!140957))

(assert (= (and b!140957 (not res!67349)) b!140958))

(declare-fun m!168851 () Bool)

(assert (=> d!44083 m!168851))

(declare-fun m!168853 () Bool)

(assert (=> d!44083 m!168853))

(declare-fun m!168855 () Bool)

(assert (=> b!140958 m!168855))

(assert (=> b!140361 d!44083))

(assert (=> d!43913 d!43933))

(assert (=> d!43913 d!43907))

(declare-fun d!44085 () Bool)

(assert (=> d!44085 (contains!923 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73089)))

(assert (=> d!44085 true))

(declare-fun _$35!390 () Unit!4373)

(assert (=> d!44085 (= (choose!857 lt!73088 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73089) _$35!390)))

(declare-fun bs!5898 () Bool)

(assert (= bs!5898 d!44085))

(assert (=> bs!5898 m!166401))

(assert (=> bs!5898 m!166401))

(assert (=> bs!5898 m!166417))

(assert (=> d!43913 d!44085))

(declare-fun d!44087 () Bool)

(declare-fun e!91890 () Bool)

(assert (=> d!44087 e!91890))

(declare-fun res!67350 () Bool)

(assert (=> d!44087 (=> res!67350 e!91890)))

(declare-fun lt!73950 () Bool)

(assert (=> d!44087 (= res!67350 (not lt!73950))))

(declare-fun lt!73948 () Bool)

(assert (=> d!44087 (= lt!73950 lt!73948)))

(declare-fun lt!73949 () Unit!4373)

(declare-fun e!91891 () Unit!4373)

(assert (=> d!44087 (= lt!73949 e!91891)))

(declare-fun c!26454 () Bool)

(assert (=> d!44087 (= c!26454 lt!73948)))

(assert (=> d!44087 (= lt!73948 (containsKey!180 (toList!888 lt!73088) lt!73089))))

(assert (=> d!44087 (= (contains!923 lt!73088 lt!73089) lt!73950)))

(declare-fun b!140959 () Bool)

(declare-fun lt!73951 () Unit!4373)

(assert (=> b!140959 (= e!91891 lt!73951)))

(assert (=> b!140959 (= lt!73951 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73088) lt!73089))))

(assert (=> b!140959 (isDefined!129 (getValueByKey!176 (toList!888 lt!73088) lt!73089))))

(declare-fun b!140960 () Bool)

(declare-fun Unit!4443 () Unit!4373)

(assert (=> b!140960 (= e!91891 Unit!4443)))

(declare-fun b!140961 () Bool)

(assert (=> b!140961 (= e!91890 (isDefined!129 (getValueByKey!176 (toList!888 lt!73088) lt!73089)))))

(assert (= (and d!44087 c!26454) b!140959))

(assert (= (and d!44087 (not c!26454)) b!140960))

(assert (= (and d!44087 (not res!67350)) b!140961))

(declare-fun m!168857 () Bool)

(assert (=> d!44087 m!168857))

(declare-fun m!168859 () Bool)

(assert (=> b!140959 m!168859))

(declare-fun m!168861 () Bool)

(assert (=> b!140959 m!168861))

(assert (=> b!140959 m!168861))

(declare-fun m!168863 () Bool)

(assert (=> b!140959 m!168863))

(assert (=> b!140961 m!168861))

(assert (=> b!140961 m!168861))

(assert (=> b!140961 m!168863))

(assert (=> d!43913 d!44087))

(declare-fun d!44089 () Bool)

(declare-fun res!67351 () Bool)

(declare-fun e!91892 () Bool)

(assert (=> d!44089 (=> res!67351 e!91892)))

(assert (=> d!44089 (= res!67351 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15479))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15479)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!44089 (= (containsKey!180 (t!6329 (toList!888 call!15479)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!91892)))

(declare-fun b!140962 () Bool)

(declare-fun e!91893 () Bool)

(assert (=> b!140962 (= e!91892 e!91893)))

(declare-fun res!67352 () Bool)

(assert (=> b!140962 (=> (not res!67352) (not e!91893))))

(assert (=> b!140962 (= res!67352 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 call!15479)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 call!15479)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (t!6329 (toList!888 call!15479))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 call!15479)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!140963 () Bool)

(assert (=> b!140963 (= e!91893 (containsKey!180 (t!6329 (t!6329 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44089 (not res!67351)) b!140962))

(assert (= (and b!140962 res!67352) b!140963))

(assert (=> b!140963 m!166013))

(declare-fun m!168865 () Bool)

(assert (=> b!140963 m!168865))

(assert (=> b!140208 d!44089))

(declare-fun d!44091 () Bool)

(declare-fun e!91894 () Bool)

(assert (=> d!44091 e!91894))

(declare-fun res!67353 () Bool)

(assert (=> d!44091 (=> res!67353 e!91894)))

(declare-fun lt!73954 () Bool)

(assert (=> d!44091 (= res!67353 (not lt!73954))))

(declare-fun lt!73952 () Bool)

(assert (=> d!44091 (= lt!73954 lt!73952)))

(declare-fun lt!73953 () Unit!4373)

(declare-fun e!91895 () Unit!4373)

(assert (=> d!44091 (= lt!73953 e!91895)))

(declare-fun c!26455 () Bool)

(assert (=> d!44091 (= c!26455 lt!73952)))

(assert (=> d!44091 (= lt!73952 (containsKey!180 (toList!888 lt!73496) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!44091 (= (contains!923 lt!73496 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!73954)))

(declare-fun b!140964 () Bool)

(declare-fun lt!73955 () Unit!4373)

(assert (=> b!140964 (= e!91895 lt!73955)))

(assert (=> b!140964 (= lt!73955 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73496) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140964 (isDefined!129 (getValueByKey!176 (toList!888 lt!73496) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140965 () Bool)

(declare-fun Unit!4444 () Unit!4373)

(assert (=> b!140965 (= e!91895 Unit!4444)))

(declare-fun b!140966 () Bool)

(assert (=> b!140966 (= e!91894 (isDefined!129 (getValueByKey!176 (toList!888 lt!73496) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!44091 c!26455) b!140964))

(assert (= (and d!44091 (not c!26455)) b!140965))

(assert (= (and d!44091 (not res!67353)) b!140966))

(assert (=> d!44091 m!166463))

(declare-fun m!168867 () Bool)

(assert (=> d!44091 m!168867))

(assert (=> b!140964 m!166463))

(declare-fun m!168869 () Bool)

(assert (=> b!140964 m!168869))

(assert (=> b!140964 m!166463))

(declare-fun m!168871 () Bool)

(assert (=> b!140964 m!168871))

(assert (=> b!140964 m!168871))

(declare-fun m!168873 () Bool)

(assert (=> b!140964 m!168873))

(assert (=> b!140966 m!166463))

(assert (=> b!140966 m!168871))

(assert (=> b!140966 m!168871))

(assert (=> b!140966 m!168873))

(assert (=> b!140237 d!44091))

(declare-fun d!44093 () Bool)

(declare-fun e!91896 () Bool)

(assert (=> d!44093 e!91896))

(declare-fun res!67354 () Bool)

(assert (=> d!44093 (=> res!67354 e!91896)))

(declare-fun lt!73958 () Bool)

(assert (=> d!44093 (= res!67354 (not lt!73958))))

(declare-fun lt!73956 () Bool)

(assert (=> d!44093 (= lt!73958 lt!73956)))

(declare-fun lt!73957 () Unit!4373)

(declare-fun e!91897 () Unit!4373)

(assert (=> d!44093 (= lt!73957 e!91897)))

(declare-fun c!26456 () Bool)

(assert (=> d!44093 (= c!26456 lt!73956)))

(assert (=> d!44093 (= lt!73956 (containsKey!180 (toList!888 lt!73765) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44093 (= (contains!923 lt!73765 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73958)))

(declare-fun b!140967 () Bool)

(declare-fun lt!73959 () Unit!4373)

(assert (=> b!140967 (= e!91897 lt!73959)))

(assert (=> b!140967 (= lt!73959 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73765) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> b!140967 (isDefined!129 (getValueByKey!176 (toList!888 lt!73765) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!140968 () Bool)

(declare-fun Unit!4445 () Unit!4373)

(assert (=> b!140968 (= e!91897 Unit!4445)))

(declare-fun b!140969 () Bool)

(assert (=> b!140969 (= e!91896 (isDefined!129 (getValueByKey!176 (toList!888 lt!73765) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44093 c!26456) b!140967))

(assert (= (and d!44093 (not c!26456)) b!140968))

(assert (= (and d!44093 (not res!67354)) b!140969))

(declare-fun m!168875 () Bool)

(assert (=> d!44093 m!168875))

(declare-fun m!168877 () Bool)

(assert (=> b!140967 m!168877))

(assert (=> b!140967 m!168227))

(assert (=> b!140967 m!168227))

(declare-fun m!168879 () Bool)

(assert (=> b!140967 m!168879))

(assert (=> b!140969 m!168227))

(assert (=> b!140969 m!168227))

(assert (=> b!140969 m!168879))

(assert (=> d!43831 d!44093))

(declare-fun b!140973 () Bool)

(declare-fun e!91899 () Option!182)

(assert (=> b!140973 (= e!91899 None!180)))

(declare-fun b!140970 () Bool)

(declare-fun e!91898 () Option!182)

(assert (=> b!140970 (= e!91898 (Some!181 (_2!1360 (h!2348 lt!73762))))))

(declare-fun b!140971 () Bool)

(assert (=> b!140971 (= e!91898 e!91899)))

(declare-fun c!26458 () Bool)

(assert (=> b!140971 (= c!26458 (and ((_ is Cons!1741) lt!73762) (not (= (_1!1360 (h!2348 lt!73762)) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun d!44095 () Bool)

(declare-fun c!26457 () Bool)

(assert (=> d!44095 (= c!26457 (and ((_ is Cons!1741) lt!73762) (= (_1!1360 (h!2348 lt!73762)) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44095 (= (getValueByKey!176 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!91898)))

(declare-fun b!140972 () Bool)

(assert (=> b!140972 (= e!91899 (getValueByKey!176 (t!6329 lt!73762) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!44095 c!26457) b!140970))

(assert (= (and d!44095 (not c!26457)) b!140971))

(assert (= (and b!140971 c!26458) b!140972))

(assert (= (and b!140971 (not c!26458)) b!140973))

(declare-fun m!168881 () Bool)

(assert (=> b!140972 m!168881))

(assert (=> d!43831 d!44095))

(declare-fun d!44097 () Bool)

(assert (=> d!44097 (= (getValueByKey!176 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!73960 () Unit!4373)

(assert (=> d!44097 (= lt!73960 (choose!865 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!91900 () Bool)

(assert (=> d!44097 e!91900))

(declare-fun res!67355 () Bool)

(assert (=> d!44097 (=> (not res!67355) (not e!91900))))

(assert (=> d!44097 (= res!67355 (isStrictlySorted!325 lt!73762))))

(assert (=> d!44097 (= (lemmaContainsTupThenGetReturnValue!90 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73960)))

(declare-fun b!140974 () Bool)

(declare-fun res!67356 () Bool)

(assert (=> b!140974 (=> (not res!67356) (not e!91900))))

(assert (=> b!140974 (= res!67356 (containsKey!180 lt!73762 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!140975 () Bool)

(assert (=> b!140975 (= e!91900 (contains!925 lt!73762 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44097 res!67355) b!140974))

(assert (= (and b!140974 res!67356) b!140975))

(assert (=> d!44097 m!168221))

(declare-fun m!168883 () Bool)

(assert (=> d!44097 m!168883))

(declare-fun m!168885 () Bool)

(assert (=> d!44097 m!168885))

(declare-fun m!168887 () Bool)

(assert (=> b!140974 m!168887))

(declare-fun m!168889 () Bool)

(assert (=> b!140975 m!168889))

(assert (=> d!43831 d!44097))

(declare-fun b!140976 () Bool)

(declare-fun e!91901 () List!1745)

(declare-fun call!15655 () List!1745)

(assert (=> b!140976 (= e!91901 call!15655)))

(declare-fun bm!15650 () Bool)

(declare-fun call!15653 () List!1745)

(assert (=> bm!15650 (= call!15655 call!15653)))

(declare-fun d!44099 () Bool)

(declare-fun e!91905 () Bool)

(assert (=> d!44099 e!91905))

(declare-fun res!67357 () Bool)

(assert (=> d!44099 (=> (not res!67357) (not e!91905))))

(declare-fun lt!73961 () List!1745)

(assert (=> d!44099 (= res!67357 (isStrictlySorted!325 lt!73961))))

(declare-fun e!91902 () List!1745)

(assert (=> d!44099 (= lt!73961 e!91902)))

(declare-fun c!26461 () Bool)

(assert (=> d!44099 (= c!26461 (and ((_ is Cons!1741) (toList!888 lt!73288)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73288))) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44099 (isStrictlySorted!325 (toList!888 lt!73288))))

(assert (=> d!44099 (= (insertStrictlySorted!93 (toList!888 lt!73288) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73961)))

(declare-fun bm!15651 () Bool)

(declare-fun call!15654 () List!1745)

(assert (=> bm!15651 (= call!15653 call!15654)))

(declare-fun b!140977 () Bool)

(declare-fun e!91903 () List!1745)

(assert (=> b!140977 (= e!91902 e!91903)))

(declare-fun c!26460 () Bool)

(assert (=> b!140977 (= c!26460 (and ((_ is Cons!1741) (toList!888 lt!73288)) (= (_1!1360 (h!2348 (toList!888 lt!73288))) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!140978 () Bool)

(assert (=> b!140978 (= e!91902 call!15654)))

(declare-fun bm!15652 () Bool)

(declare-fun e!91904 () List!1745)

(assert (=> bm!15652 (= call!15654 ($colon$colon!94 e!91904 (ite c!26461 (h!2348 (toList!888 lt!73288)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26459 () Bool)

(assert (=> bm!15652 (= c!26459 c!26461)))

(declare-fun c!26462 () Bool)

(declare-fun b!140979 () Bool)

(assert (=> b!140979 (= e!91904 (ite c!26460 (t!6329 (toList!888 lt!73288)) (ite c!26462 (Cons!1741 (h!2348 (toList!888 lt!73288)) (t!6329 (toList!888 lt!73288))) Nil!1742)))))

(declare-fun b!140980 () Bool)

(assert (=> b!140980 (= e!91903 call!15653)))

(declare-fun b!140981 () Bool)

(assert (=> b!140981 (= e!91905 (contains!925 lt!73961 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!140982 () Bool)

(assert (=> b!140982 (= e!91904 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73288)) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!140983 () Bool)

(assert (=> b!140983 (= e!91901 call!15655)))

(declare-fun b!140984 () Bool)

(assert (=> b!140984 (= c!26462 (and ((_ is Cons!1741) (toList!888 lt!73288)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73288))) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!140984 (= e!91903 e!91901)))

(declare-fun b!140985 () Bool)

(declare-fun res!67358 () Bool)

(assert (=> b!140985 (=> (not res!67358) (not e!91905))))

(assert (=> b!140985 (= res!67358 (containsKey!180 lt!73961 (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!44099 c!26461) b!140978))

(assert (= (and d!44099 (not c!26461)) b!140977))

(assert (= (and b!140977 c!26460) b!140980))

(assert (= (and b!140977 (not c!26460)) b!140984))

(assert (= (and b!140984 c!26462) b!140983))

(assert (= (and b!140984 (not c!26462)) b!140976))

(assert (= (or b!140983 b!140976) bm!15650))

(assert (= (or b!140980 bm!15650) bm!15651))

(assert (= (or b!140978 bm!15651) bm!15652))

(assert (= (and bm!15652 c!26459) b!140982))

(assert (= (and bm!15652 (not c!26459)) b!140979))

(assert (= (and d!44099 res!67357) b!140985))

(assert (= (and b!140985 res!67358) b!140981))

(declare-fun m!168891 () Bool)

(assert (=> b!140982 m!168891))

(declare-fun m!168893 () Bool)

(assert (=> d!44099 m!168893))

(declare-fun m!168895 () Bool)

(assert (=> d!44099 m!168895))

(declare-fun m!168897 () Bool)

(assert (=> b!140985 m!168897))

(declare-fun m!168899 () Bool)

(assert (=> bm!15652 m!168899))

(declare-fun m!168901 () Bool)

(assert (=> b!140981 m!168901))

(assert (=> d!43831 d!44099))

(declare-fun d!44101 () Bool)

(assert (=> d!44101 (= (get!1531 (getValueByKey!176 (toList!888 lt!73140) lt!73145)) (v!3284 (getValueByKey!176 (toList!888 lt!73140) lt!73145)))))

(assert (=> d!43519 d!44101))

(declare-fun b!140989 () Bool)

(declare-fun e!91907 () Option!182)

(assert (=> b!140989 (= e!91907 None!180)))

(declare-fun b!140986 () Bool)

(declare-fun e!91906 () Option!182)

(assert (=> b!140986 (= e!91906 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73140)))))))

(declare-fun b!140987 () Bool)

(assert (=> b!140987 (= e!91906 e!91907)))

(declare-fun c!26464 () Bool)

(assert (=> b!140987 (= c!26464 (and ((_ is Cons!1741) (toList!888 lt!73140)) (not (= (_1!1360 (h!2348 (toList!888 lt!73140))) lt!73145))))))

(declare-fun d!44103 () Bool)

(declare-fun c!26463 () Bool)

(assert (=> d!44103 (= c!26463 (and ((_ is Cons!1741) (toList!888 lt!73140)) (= (_1!1360 (h!2348 (toList!888 lt!73140))) lt!73145)))))

(assert (=> d!44103 (= (getValueByKey!176 (toList!888 lt!73140) lt!73145) e!91906)))

(declare-fun b!140988 () Bool)

(assert (=> b!140988 (= e!91907 (getValueByKey!176 (t!6329 (toList!888 lt!73140)) lt!73145))))

(assert (= (and d!44103 c!26463) b!140986))

(assert (= (and d!44103 (not c!26463)) b!140987))

(assert (= (and b!140987 c!26464) b!140988))

(assert (= (and b!140987 (not c!26464)) b!140989))

(declare-fun m!168903 () Bool)

(assert (=> b!140988 m!168903))

(assert (=> d!43519 d!44103))

(declare-fun b!140990 () Bool)

(declare-fun e!91909 () Bool)

(declare-fun e!91910 () Bool)

(assert (=> b!140990 (= e!91909 e!91910)))

(declare-fun lt!73963 () (_ BitVec 64))

(assert (=> b!140990 (= lt!73963 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!73962 () Unit!4373)

(assert (=> b!140990 (= lt!73962 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73963 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!140990 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73963 #b00000000000000000000000000000000)))

(declare-fun lt!73964 () Unit!4373)

(assert (=> b!140990 (= lt!73964 lt!73962)))

(declare-fun res!67359 () Bool)

(assert (=> b!140990 (= res!67359 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))) (Found!279 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!140990 (=> (not res!67359) (not e!91910))))

(declare-fun d!44105 () Bool)

(declare-fun res!67360 () Bool)

(declare-fun e!91908 () Bool)

(assert (=> d!44105 (=> res!67360 e!91908)))

(assert (=> d!44105 (= res!67360 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!44105 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))) e!91908)))

(declare-fun b!140991 () Bool)

(declare-fun call!15656 () Bool)

(assert (=> b!140991 (= e!91910 call!15656)))

(declare-fun bm!15653 () Bool)

(assert (=> bm!15653 (= call!15656 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!140992 () Bool)

(assert (=> b!140992 (= e!91908 e!91909)))

(declare-fun c!26465 () Bool)

(assert (=> b!140992 (= c!26465 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140993 () Bool)

(assert (=> b!140993 (= e!91909 call!15656)))

(assert (= (and d!44105 (not res!67360)) b!140992))

(assert (= (and b!140992 c!26465) b!140990))

(assert (= (and b!140992 (not c!26465)) b!140993))

(assert (= (and b!140990 res!67359) b!140991))

(assert (= (or b!140991 b!140993) bm!15653))

(declare-fun m!168905 () Bool)

(assert (=> b!140990 m!168905))

(declare-fun m!168907 () Bool)

(assert (=> b!140990 m!168907))

(declare-fun m!168909 () Bool)

(assert (=> b!140990 m!168909))

(assert (=> b!140990 m!168905))

(declare-fun m!168911 () Bool)

(assert (=> b!140990 m!168911))

(declare-fun m!168913 () Bool)

(assert (=> bm!15653 m!168913))

(assert (=> b!140992 m!168905))

(assert (=> b!140992 m!168905))

(declare-fun m!168915 () Bool)

(assert (=> b!140992 m!168915))

(assert (=> bm!15556 d!44105))

(assert (=> d!43593 d!43589))

(assert (=> d!43593 d!43435))

(assert (=> d!43593 d!43591))

(declare-fun d!44107 () Bool)

(declare-fun res!67361 () Bool)

(declare-fun e!91911 () Bool)

(assert (=> d!44107 (=> res!67361 e!91911)))

(assert (=> d!44107 (= res!67361 (and ((_ is Cons!1741) lt!73752) (= (_1!1360 (h!2348 lt!73752)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44107 (= (containsKey!180 lt!73752 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!91911)))

(declare-fun b!140994 () Bool)

(declare-fun e!91912 () Bool)

(assert (=> b!140994 (= e!91911 e!91912)))

(declare-fun res!67362 () Bool)

(assert (=> b!140994 (=> (not res!67362) (not e!91912))))

(assert (=> b!140994 (= res!67362 (and (or (not ((_ is Cons!1741) lt!73752)) (bvsle (_1!1360 (h!2348 lt!73752)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73752) (bvslt (_1!1360 (h!2348 lt!73752)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!140995 () Bool)

(assert (=> b!140995 (= e!91912 (containsKey!180 (t!6329 lt!73752) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44107 (not res!67361)) b!140994))

(assert (= (and b!140994 res!67362) b!140995))

(declare-fun m!168917 () Bool)

(assert (=> b!140995 m!168917))

(assert (=> b!140630 d!44107))

(declare-fun d!44109 () Bool)

(assert (=> d!44109 (= (apply!120 lt!73702 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73702) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5899 () Bool)

(assert (= bs!5899 d!44109))

(declare-fun m!168919 () Bool)

(assert (=> bs!5899 m!168919))

(assert (=> bs!5899 m!168919))

(declare-fun m!168921 () Bool)

(assert (=> bs!5899 m!168921))

(assert (=> b!140500 d!44109))

(declare-fun d!44111 () Bool)

(assert (=> d!44111 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))

(declare-fun lt!73965 () Unit!4373)

(assert (=> d!44111 (= lt!73965 (choose!864 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))

(declare-fun e!91913 () Bool)

(assert (=> d!44111 e!91913))

(declare-fun res!67363 () Bool)

(assert (=> d!44111 (=> (not res!67363) (not e!91913))))

(assert (=> d!44111 (= res!67363 (isStrictlySorted!325 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44111 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154) lt!73965)))

(declare-fun b!140996 () Bool)

(assert (=> b!140996 (= e!91913 (containsKey!180 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))

(assert (= (and d!44111 res!67363) b!140996))

(assert (=> d!44111 m!167095))

(assert (=> d!44111 m!167095))

(assert (=> d!44111 m!167097))

(declare-fun m!168923 () Bool)

(assert (=> d!44111 m!168923))

(declare-fun m!168925 () Bool)

(assert (=> d!44111 m!168925))

(assert (=> b!140996 m!167091))

(assert (=> b!140082 d!44111))

(declare-fun d!44113 () Bool)

(assert (=> d!44113 (= (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154)) (not (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154))))))

(declare-fun bs!5900 () Bool)

(assert (= bs!5900 d!44113))

(assert (=> bs!5900 m!167095))

(declare-fun m!168927 () Bool)

(assert (=> bs!5900 m!168927))

(assert (=> b!140082 d!44113))

(declare-fun b!141000 () Bool)

(declare-fun e!91915 () Option!182)

(assert (=> b!141000 (= e!91915 None!180)))

(declare-fun b!140997 () Bool)

(declare-fun e!91914 () Option!182)

(assert (=> b!140997 (= e!91914 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))))

(declare-fun b!140998 () Bool)

(assert (=> b!140998 (= e!91914 e!91915)))

(declare-fun c!26467 () Bool)

(assert (=> b!140998 (= c!26467 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))) lt!73154))))))

(declare-fun c!26466 () Bool)

(declare-fun d!44115 () Bool)

(assert (=> d!44115 (= c!26466 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))) lt!73154)))))

(assert (=> d!44115 (= (getValueByKey!176 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154) e!91914)))

(declare-fun b!140999 () Bool)

(assert (=> b!140999 (= e!91915 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))) lt!73154))))

(assert (= (and d!44115 c!26466) b!140997))

(assert (= (and d!44115 (not c!26466)) b!140998))

(assert (= (and b!140998 c!26467) b!140999))

(assert (= (and b!140998 (not c!26467)) b!141000))

(declare-fun m!168929 () Bool)

(assert (=> b!140999 m!168929))

(assert (=> b!140082 d!44115))

(declare-fun d!44117 () Bool)

(assert (=> d!44117 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73966 () Unit!4373)

(assert (=> d!44117 (= lt!73966 (choose!864 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91916 () Bool)

(assert (=> d!44117 e!91916))

(declare-fun res!67364 () Bool)

(assert (=> d!44117 (=> (not res!67364) (not e!91916))))

(assert (=> d!44117 (= res!67364 (isStrictlySorted!325 (toList!888 lt!73093)))))

(assert (=> d!44117 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000) lt!73966)))

(declare-fun b!141001 () Bool)

(assert (=> b!141001 (= e!91916 (containsKey!180 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44117 res!67364) b!141001))

(assert (=> d!44117 m!167185))

(assert (=> d!44117 m!167185))

(assert (=> d!44117 m!167187))

(declare-fun m!168931 () Bool)

(assert (=> d!44117 m!168931))

(declare-fun m!168933 () Bool)

(assert (=> d!44117 m!168933))

(assert (=> b!141001 m!167181))

(assert (=> b!140114 d!44117))

(declare-fun d!44119 () Bool)

(assert (=> d!44119 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5901 () Bool)

(assert (= bs!5901 d!44119))

(assert (=> bs!5901 m!167185))

(declare-fun m!168935 () Bool)

(assert (=> bs!5901 m!168935))

(assert (=> b!140114 d!44119))

(declare-fun b!141005 () Bool)

(declare-fun e!91918 () Option!182)

(assert (=> b!141005 (= e!91918 None!180)))

(declare-fun b!141002 () Bool)

(declare-fun e!91917 () Option!182)

(assert (=> b!141002 (= e!91917 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73093)))))))

(declare-fun b!141003 () Bool)

(assert (=> b!141003 (= e!91917 e!91918)))

(declare-fun c!26469 () Bool)

(assert (=> b!141003 (= c!26469 (and ((_ is Cons!1741) (toList!888 lt!73093)) (not (= (_1!1360 (h!2348 (toList!888 lt!73093))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44121 () Bool)

(declare-fun c!26468 () Bool)

(assert (=> d!44121 (= c!26468 (and ((_ is Cons!1741) (toList!888 lt!73093)) (= (_1!1360 (h!2348 (toList!888 lt!73093))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44121 (= (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000) e!91917)))

(declare-fun b!141004 () Bool)

(assert (=> b!141004 (= e!91918 (getValueByKey!176 (t!6329 (toList!888 lt!73093)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44121 c!26468) b!141002))

(assert (= (and d!44121 (not c!26468)) b!141003))

(assert (= (and b!141003 c!26469) b!141004))

(assert (= (and b!141003 (not c!26469)) b!141005))

(declare-fun m!168937 () Bool)

(assert (=> b!141004 m!168937))

(assert (=> b!140114 d!44121))

(declare-fun d!44123 () Bool)

(assert (=> d!44123 (= (apply!120 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73293) (apply!120 lt!73288 lt!73293))))

(assert (=> d!44123 true))

(declare-fun _$34!1003 () Unit!4373)

(assert (=> d!44123 (= (choose!856 lt!73288 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73293) _$34!1003)))

(declare-fun bs!5902 () Bool)

(assert (= bs!5902 d!44123))

(assert (=> bs!5902 m!166757))

(assert (=> bs!5902 m!166757))

(assert (=> bs!5902 m!166759))

(assert (=> bs!5902 m!166769))

(assert (=> d!43827 d!44123))

(assert (=> d!43827 d!43831))

(assert (=> d!43827 d!43819))

(declare-fun d!44125 () Bool)

(declare-fun e!91919 () Bool)

(assert (=> d!44125 e!91919))

(declare-fun res!67365 () Bool)

(assert (=> d!44125 (=> res!67365 e!91919)))

(declare-fun lt!73969 () Bool)

(assert (=> d!44125 (= res!67365 (not lt!73969))))

(declare-fun lt!73967 () Bool)

(assert (=> d!44125 (= lt!73969 lt!73967)))

(declare-fun lt!73968 () Unit!4373)

(declare-fun e!91920 () Unit!4373)

(assert (=> d!44125 (= lt!73968 e!91920)))

(declare-fun c!26470 () Bool)

(assert (=> d!44125 (= c!26470 lt!73967)))

(assert (=> d!44125 (= lt!73967 (containsKey!180 (toList!888 lt!73288) lt!73293))))

(assert (=> d!44125 (= (contains!923 lt!73288 lt!73293) lt!73969)))

(declare-fun b!141006 () Bool)

(declare-fun lt!73970 () Unit!4373)

(assert (=> b!141006 (= e!91920 lt!73970)))

(assert (=> b!141006 (= lt!73970 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73288) lt!73293))))

(assert (=> b!141006 (isDefined!129 (getValueByKey!176 (toList!888 lt!73288) lt!73293))))

(declare-fun b!141007 () Bool)

(declare-fun Unit!4446 () Unit!4373)

(assert (=> b!141007 (= e!91920 Unit!4446)))

(declare-fun b!141008 () Bool)

(assert (=> b!141008 (= e!91919 (isDefined!129 (getValueByKey!176 (toList!888 lt!73288) lt!73293)))))

(assert (= (and d!44125 c!26470) b!141006))

(assert (= (and d!44125 (not c!26470)) b!141007))

(assert (= (and d!44125 (not res!67365)) b!141008))

(declare-fun m!168939 () Bool)

(assert (=> d!44125 m!168939))

(declare-fun m!168941 () Bool)

(assert (=> b!141006 m!168941))

(assert (=> b!141006 m!168195))

(assert (=> b!141006 m!168195))

(declare-fun m!168943 () Bool)

(assert (=> b!141006 m!168943))

(assert (=> b!141008 m!168195))

(assert (=> b!141008 m!168195))

(assert (=> b!141008 m!168943))

(assert (=> d!43827 d!44125))

(assert (=> d!43827 d!43829))

(declare-fun d!44127 () Bool)

(declare-fun e!91921 () Bool)

(assert (=> d!44127 e!91921))

(declare-fun res!67366 () Bool)

(assert (=> d!44127 (=> res!67366 e!91921)))

(declare-fun lt!73973 () Bool)

(assert (=> d!44127 (= res!67366 (not lt!73973))))

(declare-fun lt!73971 () Bool)

(assert (=> d!44127 (= lt!73973 lt!73971)))

(declare-fun lt!73972 () Unit!4373)

(declare-fun e!91922 () Unit!4373)

(assert (=> d!44127 (= lt!73972 e!91922)))

(declare-fun c!26471 () Bool)

(assert (=> d!44127 (= c!26471 lt!73971)))

(assert (=> d!44127 (= lt!73971 (containsKey!180 (toList!888 lt!73847) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (=> d!44127 (= (contains!923 lt!73847 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73973)))

(declare-fun b!141009 () Bool)

(declare-fun lt!73974 () Unit!4373)

(assert (=> b!141009 (= e!91922 lt!73974)))

(assert (=> b!141009 (= lt!73974 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73847) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (=> b!141009 (isDefined!129 (getValueByKey!176 (toList!888 lt!73847) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(declare-fun b!141010 () Bool)

(declare-fun Unit!4447 () Unit!4373)

(assert (=> b!141010 (= e!91922 Unit!4447)))

(declare-fun b!141011 () Bool)

(assert (=> b!141011 (= e!91921 (isDefined!129 (getValueByKey!176 (toList!888 lt!73847) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(assert (= (and d!44127 c!26471) b!141009))

(assert (= (and d!44127 (not c!26471)) b!141010))

(assert (= (and d!44127 (not res!67366)) b!141011))

(declare-fun m!168945 () Bool)

(assert (=> d!44127 m!168945))

(declare-fun m!168947 () Bool)

(assert (=> b!141009 m!168947))

(assert (=> b!141009 m!168469))

(assert (=> b!141009 m!168469))

(declare-fun m!168949 () Bool)

(assert (=> b!141009 m!168949))

(assert (=> b!141011 m!168469))

(assert (=> b!141011 m!168469))

(assert (=> b!141011 m!168949))

(assert (=> d!43909 d!44127))

(declare-fun b!141015 () Bool)

(declare-fun e!91924 () Option!182)

(assert (=> b!141015 (= e!91924 None!180)))

(declare-fun b!141012 () Bool)

(declare-fun e!91923 () Option!182)

(assert (=> b!141012 (= e!91923 (Some!181 (_2!1360 (h!2348 lt!73844))))))

(declare-fun b!141013 () Bool)

(assert (=> b!141013 (= e!91923 e!91924)))

(declare-fun c!26473 () Bool)

(assert (=> b!141013 (= c!26473 (and ((_ is Cons!1741) lt!73844) (not (= (_1!1360 (h!2348 lt!73844)) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))))

(declare-fun d!44129 () Bool)

(declare-fun c!26472 () Bool)

(assert (=> d!44129 (= c!26472 (and ((_ is Cons!1741) lt!73844) (= (_1!1360 (h!2348 lt!73844)) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(assert (=> d!44129 (= (getValueByKey!176 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) e!91923)))

(declare-fun b!141014 () Bool)

(assert (=> b!141014 (= e!91924 (getValueByKey!176 (t!6329 lt!73844) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (= (and d!44129 c!26472) b!141012))

(assert (= (and d!44129 (not c!26472)) b!141013))

(assert (= (and b!141013 c!26473) b!141014))

(assert (= (and b!141013 (not c!26473)) b!141015))

(declare-fun m!168951 () Bool)

(assert (=> b!141014 m!168951))

(assert (=> d!43909 d!44129))

(declare-fun d!44131 () Bool)

(assert (=> d!44131 (= (getValueByKey!176 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(declare-fun lt!73975 () Unit!4373)

(assert (=> d!44131 (= lt!73975 (choose!865 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(declare-fun e!91925 () Bool)

(assert (=> d!44131 e!91925))

(declare-fun res!67367 () Bool)

(assert (=> d!44131 (=> (not res!67367) (not e!91925))))

(assert (=> d!44131 (= res!67367 (isStrictlySorted!325 lt!73844))))

(assert (=> d!44131 (= (lemmaContainsTupThenGetReturnValue!90 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73975)))

(declare-fun b!141016 () Bool)

(declare-fun res!67368 () Bool)

(assert (=> b!141016 (=> (not res!67368) (not e!91925))))

(assert (=> b!141016 (= res!67368 (containsKey!180 lt!73844 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(declare-fun b!141017 () Bool)

(assert (=> b!141017 (= e!91925 (contains!925 lt!73844 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(assert (= (and d!44131 res!67367) b!141016))

(assert (= (and b!141016 res!67368) b!141017))

(assert (=> d!44131 m!168463))

(declare-fun m!168953 () Bool)

(assert (=> d!44131 m!168953))

(declare-fun m!168955 () Bool)

(assert (=> d!44131 m!168955))

(declare-fun m!168957 () Bool)

(assert (=> b!141016 m!168957))

(declare-fun m!168959 () Bool)

(assert (=> b!141017 m!168959))

(assert (=> d!43909 d!44131))

(declare-fun b!141018 () Bool)

(declare-fun e!91926 () List!1745)

(declare-fun call!15659 () List!1745)

(assert (=> b!141018 (= e!91926 call!15659)))

(declare-fun bm!15654 () Bool)

(declare-fun call!15657 () List!1745)

(assert (=> bm!15654 (= call!15659 call!15657)))

(declare-fun d!44133 () Bool)

(declare-fun e!91930 () Bool)

(assert (=> d!44133 e!91930))

(declare-fun res!67369 () Bool)

(assert (=> d!44133 (=> (not res!67369) (not e!91930))))

(declare-fun lt!73976 () List!1745)

(assert (=> d!44133 (= res!67369 (isStrictlySorted!325 lt!73976))))

(declare-fun e!91927 () List!1745)

(assert (=> d!44133 (= lt!73976 e!91927)))

(declare-fun c!26476 () Bool)

(assert (=> d!44133 (= c!26476 (and ((_ is Cons!1741) (toList!888 lt!73075)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73075))) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(assert (=> d!44133 (isStrictlySorted!325 (toList!888 lt!73075))))

(assert (=> d!44133 (= (insertStrictlySorted!93 (toList!888 lt!73075) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73976)))

(declare-fun bm!15655 () Bool)

(declare-fun call!15658 () List!1745)

(assert (=> bm!15655 (= call!15657 call!15658)))

(declare-fun b!141019 () Bool)

(declare-fun e!91928 () List!1745)

(assert (=> b!141019 (= e!91927 e!91928)))

(declare-fun c!26475 () Bool)

(assert (=> b!141019 (= c!26475 (and ((_ is Cons!1741) (toList!888 lt!73075)) (= (_1!1360 (h!2348 (toList!888 lt!73075))) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(declare-fun b!141020 () Bool)

(assert (=> b!141020 (= e!91927 call!15658)))

(declare-fun bm!15656 () Bool)

(declare-fun e!91929 () List!1745)

(assert (=> bm!15656 (= call!15658 ($colon$colon!94 e!91929 (ite c!26476 (h!2348 (toList!888 lt!73075)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))))

(declare-fun c!26474 () Bool)

(assert (=> bm!15656 (= c!26474 c!26476)))

(declare-fun b!141021 () Bool)

(declare-fun c!26477 () Bool)

(assert (=> b!141021 (= e!91929 (ite c!26475 (t!6329 (toList!888 lt!73075)) (ite c!26477 (Cons!1741 (h!2348 (toList!888 lt!73075)) (t!6329 (toList!888 lt!73075))) Nil!1742)))))

(declare-fun b!141022 () Bool)

(assert (=> b!141022 (= e!91928 call!15657)))

(declare-fun b!141023 () Bool)

(assert (=> b!141023 (= e!91930 (contains!925 lt!73976 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(declare-fun b!141024 () Bool)

(assert (=> b!141024 (= e!91929 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73075)) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(declare-fun b!141025 () Bool)

(assert (=> b!141025 (= e!91926 call!15659)))

(declare-fun b!141026 () Bool)

(assert (=> b!141026 (= c!26477 (and ((_ is Cons!1741) (toList!888 lt!73075)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73075))) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(assert (=> b!141026 (= e!91928 e!91926)))

(declare-fun b!141027 () Bool)

(declare-fun res!67370 () Bool)

(assert (=> b!141027 (=> (not res!67370) (not e!91930))))

(assert (=> b!141027 (= res!67370 (containsKey!180 lt!73976 (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (= (and d!44133 c!26476) b!141020))

(assert (= (and d!44133 (not c!26476)) b!141019))

(assert (= (and b!141019 c!26475) b!141022))

(assert (= (and b!141019 (not c!26475)) b!141026))

(assert (= (and b!141026 c!26477) b!141025))

(assert (= (and b!141026 (not c!26477)) b!141018))

(assert (= (or b!141025 b!141018) bm!15654))

(assert (= (or b!141022 bm!15654) bm!15655))

(assert (= (or b!141020 bm!15655) bm!15656))

(assert (= (and bm!15656 c!26474) b!141024))

(assert (= (and bm!15656 (not c!26474)) b!141021))

(assert (= (and d!44133 res!67369) b!141027))

(assert (= (and b!141027 res!67370) b!141023))

(declare-fun m!168961 () Bool)

(assert (=> b!141024 m!168961))

(declare-fun m!168963 () Bool)

(assert (=> d!44133 m!168963))

(declare-fun m!168965 () Bool)

(assert (=> d!44133 m!168965))

(declare-fun m!168967 () Bool)

(assert (=> b!141027 m!168967))

(declare-fun m!168969 () Bool)

(assert (=> bm!15656 m!168969))

(declare-fun m!168971 () Bool)

(assert (=> b!141023 m!168971))

(assert (=> d!43909 d!44133))

(declare-fun d!44135 () Bool)

(declare-fun res!67371 () Bool)

(declare-fun e!91931 () Bool)

(assert (=> d!44135 (=> res!67371 e!91931)))

(assert (=> d!44135 (= res!67371 (and ((_ is Cons!1741) (toList!888 lt!73332)) (= (_1!1360 (h!2348 (toList!888 lt!73332))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44135 (= (containsKey!180 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!91931)))

(declare-fun b!141028 () Bool)

(declare-fun e!91932 () Bool)

(assert (=> b!141028 (= e!91931 e!91932)))

(declare-fun res!67372 () Bool)

(assert (=> b!141028 (=> (not res!67372) (not e!91932))))

(assert (=> b!141028 (= res!67372 (and (or (not ((_ is Cons!1741) (toList!888 lt!73332))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73332))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1741) (toList!888 lt!73332)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73332))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!141029 () Bool)

(assert (=> b!141029 (= e!91932 (containsKey!180 (t!6329 (toList!888 lt!73332)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44135 (not res!67371)) b!141028))

(assert (= (and b!141028 res!67372) b!141029))

(assert (=> b!141029 m!166385))

(declare-fun m!168973 () Bool)

(assert (=> b!141029 m!168973))

(assert (=> d!43857 d!44135))

(declare-fun b!141030 () Bool)

(declare-fun lt!73983 () Unit!4373)

(declare-fun lt!73979 () Unit!4373)

(assert (=> b!141030 (= lt!73983 lt!73979)))

(declare-fun lt!73977 () (_ BitVec 64))

(declare-fun lt!73982 () ListLongMap!1745)

(declare-fun lt!73978 () V!3555)

(declare-fun lt!73981 () (_ BitVec 64))

(assert (=> b!141030 (not (contains!923 (+!179 lt!73982 (tuple2!2699 lt!73981 lt!73978)) lt!73977))))

(assert (=> b!141030 (= lt!73979 (addStillNotContains!64 lt!73982 lt!73981 lt!73978 lt!73977))))

(assert (=> b!141030 (= lt!73977 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141030 (= lt!73978 (get!1528 (select (arr!2316 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141030 (= lt!73981 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15660 () ListLongMap!1745)

(assert (=> b!141030 (= lt!73982 call!15660)))

(declare-fun e!91933 () ListLongMap!1745)

(assert (=> b!141030 (= e!91933 (+!179 call!15660 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141032 () Bool)

(declare-fun e!91935 () ListLongMap!1745)

(assert (=> b!141032 (= e!91935 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141033 () Bool)

(declare-fun e!91939 () Bool)

(declare-fun e!91934 () Bool)

(assert (=> b!141033 (= e!91939 e!91934)))

(assert (=> b!141033 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67376 () Bool)

(declare-fun lt!73980 () ListLongMap!1745)

(assert (=> b!141033 (= res!67376 (contains!923 lt!73980 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141033 (=> (not res!67376) (not e!91934))))

(declare-fun b!141034 () Bool)

(declare-fun res!67373 () Bool)

(declare-fun e!91938 () Bool)

(assert (=> b!141034 (=> (not res!67373) (not e!91938))))

(assert (=> b!141034 (= res!67373 (not (contains!923 lt!73980 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141035 () Bool)

(declare-fun e!91936 () Bool)

(assert (=> b!141035 (= e!91939 e!91936)))

(declare-fun c!26480 () Bool)

(assert (=> b!141035 (= c!26480 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141036 () Bool)

(assert (=> b!141036 (= e!91935 e!91933)))

(declare-fun c!26481 () Bool)

(assert (=> b!141036 (= c!26481 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141037 () Bool)

(declare-fun e!91937 () Bool)

(assert (=> b!141037 (= e!91937 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141037 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!15657 () Bool)

(assert (=> bm!15657 (= call!15660 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141038 () Bool)

(assert (=> b!141038 (= e!91936 (= lt!73980 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141039 () Bool)

(assert (=> b!141039 (= e!91938 e!91939)))

(declare-fun c!26478 () Bool)

(assert (=> b!141039 (= c!26478 e!91937)))

(declare-fun res!67375 () Bool)

(assert (=> b!141039 (=> (not res!67375) (not e!91937))))

(assert (=> b!141039 (= res!67375 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44137 () Bool)

(assert (=> d!44137 e!91938))

(declare-fun res!67374 () Bool)

(assert (=> d!44137 (=> (not res!67374) (not e!91938))))

(assert (=> d!44137 (= res!67374 (not (contains!923 lt!73980 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44137 (= lt!73980 e!91935)))

(declare-fun c!26479 () Bool)

(assert (=> d!44137 (= c!26479 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44137 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44137 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26064 (ite c!26071 (extraKeys!2695 newMap!16) lt!72994) (extraKeys!2695 newMap!16)) (zeroValue!2790 newMap!16) (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!73980)))

(declare-fun b!141031 () Bool)

(assert (=> b!141031 (= e!91936 (isEmpty!417 lt!73980))))

(declare-fun b!141040 () Bool)

(assert (=> b!141040 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141040 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!141040 (= e!91934 (= (apply!120 lt!73980 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141041 () Bool)

(assert (=> b!141041 (= e!91933 call!15660)))

(assert (= (and d!44137 c!26479) b!141032))

(assert (= (and d!44137 (not c!26479)) b!141036))

(assert (= (and b!141036 c!26481) b!141030))

(assert (= (and b!141036 (not c!26481)) b!141041))

(assert (= (or b!141030 b!141041) bm!15657))

(assert (= (and d!44137 res!67374) b!141034))

(assert (= (and b!141034 res!67373) b!141039))

(assert (= (and b!141039 res!67375) b!141037))

(assert (= (and b!141039 c!26478) b!141033))

(assert (= (and b!141039 (not c!26478)) b!141035))

(assert (= (and b!141033 res!67376) b!141040))

(assert (= (and b!141035 c!26480) b!141038))

(assert (= (and b!141035 (not c!26480)) b!141031))

(declare-fun b_lambda!6325 () Bool)

(assert (=> (not b_lambda!6325) (not b!141030)))

(assert (=> b!141030 t!6337))

(declare-fun b_and!8807 () Bool)

(assert (= b_and!8803 (and (=> t!6337 result!4191) b_and!8807)))

(assert (=> b!141030 t!6339))

(declare-fun b_and!8809 () Bool)

(assert (= b_and!8805 (and (=> t!6339 result!4193) b_and!8809)))

(declare-fun b_lambda!6327 () Bool)

(assert (=> (not b_lambda!6327) (not b!141040)))

(assert (=> b!141040 t!6337))

(declare-fun b_and!8811 () Bool)

(assert (= b_and!8807 (and (=> t!6337 result!4191) b_and!8811)))

(assert (=> b!141040 t!6339))

(declare-fun b_and!8813 () Bool)

(assert (= b_and!8809 (and (=> t!6339 result!4193) b_and!8813)))

(declare-fun m!168975 () Bool)

(assert (=> b!141034 m!168975))

(assert (=> b!141036 m!167999))

(assert (=> b!141036 m!167999))

(assert (=> b!141036 m!168003))

(declare-fun m!168977 () Bool)

(assert (=> d!44137 m!168977))

(assert (=> d!44137 m!166429))

(assert (=> b!141030 m!166443))

(declare-fun m!168979 () Bool)

(assert (=> b!141030 m!168979))

(declare-fun m!168981 () Bool)

(assert (=> b!141030 m!168981))

(assert (=> b!141030 m!168979))

(declare-fun m!168983 () Bool)

(assert (=> b!141030 m!168983))

(declare-fun m!168985 () Bool)

(assert (=> b!141030 m!168985))

(assert (=> b!141030 m!168983))

(assert (=> b!141030 m!166443))

(declare-fun m!168987 () Bool)

(assert (=> b!141030 m!168987))

(declare-fun m!168989 () Bool)

(assert (=> b!141030 m!168989))

(assert (=> b!141030 m!167999))

(assert (=> b!141037 m!167999))

(assert (=> b!141037 m!167999))

(assert (=> b!141037 m!168003))

(declare-fun m!168991 () Bool)

(assert (=> bm!15657 m!168991))

(declare-fun m!168993 () Bool)

(assert (=> b!141031 m!168993))

(assert (=> b!141040 m!166443))

(assert (=> b!141040 m!167999))

(declare-fun m!168995 () Bool)

(assert (=> b!141040 m!168995))

(assert (=> b!141040 m!168983))

(assert (=> b!141040 m!168983))

(assert (=> b!141040 m!166443))

(assert (=> b!141040 m!168987))

(assert (=> b!141040 m!167999))

(assert (=> b!141033 m!167999))

(assert (=> b!141033 m!167999))

(declare-fun m!168997 () Bool)

(assert (=> b!141033 m!168997))

(assert (=> b!141038 m!168991))

(assert (=> bm!15579 d!44137))

(declare-fun d!44139 () Bool)

(assert (=> d!44139 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140610 d!44139))

(declare-fun b!141045 () Bool)

(declare-fun e!91941 () Option!182)

(assert (=> b!141045 (= e!91941 None!180)))

(declare-fun b!141042 () Bool)

(declare-fun e!91940 () Option!182)

(assert (=> b!141042 (= e!91940 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73383)))))))

(declare-fun b!141043 () Bool)

(assert (=> b!141043 (= e!91940 e!91941)))

(declare-fun c!26483 () Bool)

(assert (=> b!141043 (= c!26483 (and ((_ is Cons!1741) (toList!888 lt!73383)) (not (= (_1!1360 (h!2348 (toList!888 lt!73383))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun d!44141 () Bool)

(declare-fun c!26482 () Bool)

(assert (=> d!44141 (= c!26482 (and ((_ is Cons!1741) (toList!888 lt!73383)) (= (_1!1360 (h!2348 (toList!888 lt!73383))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44141 (= (getValueByKey!176 (toList!888 lt!73383) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!91940)))

(declare-fun b!141044 () Bool)

(assert (=> b!141044 (= e!91941 (getValueByKey!176 (t!6329 (toList!888 lt!73383)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44141 c!26482) b!141042))

(assert (= (and d!44141 (not c!26482)) b!141043))

(assert (= (and b!141043 c!26483) b!141044))

(assert (= (and b!141043 (not c!26483)) b!141045))

(declare-fun m!168999 () Bool)

(assert (=> b!141044 m!168999))

(assert (=> b!140050 d!44141))

(declare-fun d!44143 () Bool)

(assert (=> d!44143 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))

(declare-fun lt!73984 () Unit!4373)

(assert (=> d!44143 (= lt!73984 (choose!864 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))

(declare-fun e!91942 () Bool)

(assert (=> d!44143 e!91942))

(declare-fun res!67377 () Bool)

(assert (=> d!44143 (=> (not res!67377) (not e!91942))))

(assert (=> d!44143 (= res!67377 (isStrictlySorted!325 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44143 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089) lt!73984)))

(declare-fun b!141046 () Bool)

(assert (=> b!141046 (= e!91942 (containsKey!180 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))

(assert (= (and d!44143 res!67377) b!141046))

(assert (=> d!44143 m!168537))

(assert (=> d!44143 m!168537))

(assert (=> d!44143 m!168539))

(declare-fun m!169001 () Bool)

(assert (=> d!44143 m!169001))

(declare-fun m!169003 () Bool)

(assert (=> d!44143 m!169003))

(assert (=> b!141046 m!168533))

(assert (=> b!140750 d!44143))

(declare-fun d!44145 () Bool)

(assert (=> d!44145 (= (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089)) (not (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089))))))

(declare-fun bs!5903 () Bool)

(assert (= bs!5903 d!44145))

(assert (=> bs!5903 m!168537))

(declare-fun m!169005 () Bool)

(assert (=> bs!5903 m!169005))

(assert (=> b!140750 d!44145))

(declare-fun b!141050 () Bool)

(declare-fun e!91944 () Option!182)

(assert (=> b!141050 (= e!91944 None!180)))

(declare-fun b!141047 () Bool)

(declare-fun e!91943 () Option!182)

(assert (=> b!141047 (= e!91943 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))))

(declare-fun b!141048 () Bool)

(assert (=> b!141048 (= e!91943 e!91944)))

(declare-fun c!26485 () Bool)

(assert (=> b!141048 (= c!26485 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73089))))))

(declare-fun c!26484 () Bool)

(declare-fun d!44147 () Bool)

(assert (=> d!44147 (= c!26484 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73089)))))

(assert (=> d!44147 (= (getValueByKey!176 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089) e!91943)))

(declare-fun b!141049 () Bool)

(assert (=> b!141049 (= e!91944 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) lt!73089))))

(assert (= (and d!44147 c!26484) b!141047))

(assert (= (and d!44147 (not c!26484)) b!141048))

(assert (= (and b!141048 c!26485) b!141049))

(assert (= (and b!141048 (not c!26485)) b!141050))

(declare-fun m!169007 () Bool)

(assert (=> b!141049 m!169007))

(assert (=> b!140750 d!44147))

(declare-fun d!44149 () Bool)

(declare-fun e!91945 () Bool)

(assert (=> d!44149 e!91945))

(declare-fun res!67378 () Bool)

(assert (=> d!44149 (=> res!67378 e!91945)))

(declare-fun lt!73987 () Bool)

(assert (=> d!44149 (= res!67378 (not lt!73987))))

(declare-fun lt!73985 () Bool)

(assert (=> d!44149 (= lt!73987 lt!73985)))

(declare-fun lt!73986 () Unit!4373)

(declare-fun e!91946 () Unit!4373)

(assert (=> d!44149 (= lt!73986 e!91946)))

(declare-fun c!26486 () Bool)

(assert (=> d!44149 (= c!26486 lt!73985)))

(assert (=> d!44149 (= lt!73985 (containsKey!180 (toList!888 lt!73546) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44149 (= (contains!923 lt!73546 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73987)))

(declare-fun b!141051 () Bool)

(declare-fun lt!73988 () Unit!4373)

(assert (=> b!141051 (= e!91946 lt!73988)))

(assert (=> b!141051 (= lt!73988 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73546) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> b!141051 (isDefined!129 (getValueByKey!176 (toList!888 lt!73546) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141052 () Bool)

(declare-fun Unit!4448 () Unit!4373)

(assert (=> b!141052 (= e!91946 Unit!4448)))

(declare-fun b!141053 () Bool)

(assert (=> b!141053 (= e!91945 (isDefined!129 (getValueByKey!176 (toList!888 lt!73546) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44149 c!26486) b!141051))

(assert (= (and d!44149 (not c!26486)) b!141052))

(assert (= (and d!44149 (not res!67378)) b!141053))

(declare-fun m!169009 () Bool)

(assert (=> d!44149 m!169009))

(declare-fun m!169011 () Bool)

(assert (=> b!141051 m!169011))

(assert (=> b!141051 m!167587))

(assert (=> b!141051 m!167587))

(declare-fun m!169013 () Bool)

(assert (=> b!141051 m!169013))

(assert (=> b!141053 m!167587))

(assert (=> b!141053 m!167587))

(assert (=> b!141053 m!169013))

(assert (=> d!43669 d!44149))

(declare-fun b!141057 () Bool)

(declare-fun e!91948 () Option!182)

(assert (=> b!141057 (= e!91948 None!180)))

(declare-fun b!141054 () Bool)

(declare-fun e!91947 () Option!182)

(assert (=> b!141054 (= e!91947 (Some!181 (_2!1360 (h!2348 lt!73543))))))

(declare-fun b!141055 () Bool)

(assert (=> b!141055 (= e!91947 e!91948)))

(declare-fun c!26488 () Bool)

(assert (=> b!141055 (= c!26488 (and ((_ is Cons!1741) lt!73543) (not (= (_1!1360 (h!2348 lt!73543)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun d!44151 () Bool)

(declare-fun c!26487 () Bool)

(assert (=> d!44151 (= c!26487 (and ((_ is Cons!1741) lt!73543) (= (_1!1360 (h!2348 lt!73543)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44151 (= (getValueByKey!176 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!91947)))

(declare-fun b!141056 () Bool)

(assert (=> b!141056 (= e!91948 (getValueByKey!176 (t!6329 lt!73543) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44151 c!26487) b!141054))

(assert (= (and d!44151 (not c!26487)) b!141055))

(assert (= (and b!141055 c!26488) b!141056))

(assert (= (and b!141055 (not c!26488)) b!141057))

(declare-fun m!169015 () Bool)

(assert (=> b!141056 m!169015))

(assert (=> d!43669 d!44151))

(declare-fun d!44153 () Bool)

(assert (=> d!44153 (= (getValueByKey!176 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73989 () Unit!4373)

(assert (=> d!44153 (= lt!73989 (choose!865 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!91949 () Bool)

(assert (=> d!44153 e!91949))

(declare-fun res!67379 () Bool)

(assert (=> d!44153 (=> (not res!67379) (not e!91949))))

(assert (=> d!44153 (= res!67379 (isStrictlySorted!325 lt!73543))))

(assert (=> d!44153 (= (lemmaContainsTupThenGetReturnValue!90 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73989)))

(declare-fun b!141058 () Bool)

(declare-fun res!67380 () Bool)

(assert (=> b!141058 (=> (not res!67380) (not e!91949))))

(assert (=> b!141058 (= res!67380 (containsKey!180 lt!73543 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141059 () Bool)

(assert (=> b!141059 (= e!91949 (contains!925 lt!73543 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44153 res!67379) b!141058))

(assert (= (and b!141058 res!67380) b!141059))

(assert (=> d!44153 m!167581))

(declare-fun m!169017 () Bool)

(assert (=> d!44153 m!169017))

(declare-fun m!169019 () Bool)

(assert (=> d!44153 m!169019))

(declare-fun m!169021 () Bool)

(assert (=> b!141058 m!169021))

(declare-fun m!169023 () Bool)

(assert (=> b!141059 m!169023))

(assert (=> d!43669 d!44153))

(declare-fun b!141060 () Bool)

(declare-fun e!91950 () List!1745)

(declare-fun call!15663 () List!1745)

(assert (=> b!141060 (= e!91950 call!15663)))

(declare-fun bm!15658 () Bool)

(declare-fun call!15661 () List!1745)

(assert (=> bm!15658 (= call!15663 call!15661)))

(declare-fun d!44155 () Bool)

(declare-fun e!91954 () Bool)

(assert (=> d!44155 e!91954))

(declare-fun res!67381 () Bool)

(assert (=> d!44155 (=> (not res!67381) (not e!91954))))

(declare-fun lt!73990 () List!1745)

(assert (=> d!44155 (= res!67381 (isStrictlySorted!325 lt!73990))))

(declare-fun e!91951 () List!1745)

(assert (=> d!44155 (= lt!73990 e!91951)))

(declare-fun c!26491 () Bool)

(assert (=> d!44155 (= c!26491 (and ((_ is Cons!1741) (toList!888 call!15537)) (bvslt (_1!1360 (h!2348 (toList!888 call!15537))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44155 (isStrictlySorted!325 (toList!888 call!15537))))

(assert (=> d!44155 (= (insertStrictlySorted!93 (toList!888 call!15537) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73990)))

(declare-fun bm!15659 () Bool)

(declare-fun call!15662 () List!1745)

(assert (=> bm!15659 (= call!15661 call!15662)))

(declare-fun b!141061 () Bool)

(declare-fun e!91952 () List!1745)

(assert (=> b!141061 (= e!91951 e!91952)))

(declare-fun c!26490 () Bool)

(assert (=> b!141061 (= c!26490 (and ((_ is Cons!1741) (toList!888 call!15537)) (= (_1!1360 (h!2348 (toList!888 call!15537))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141062 () Bool)

(assert (=> b!141062 (= e!91951 call!15662)))

(declare-fun bm!15660 () Bool)

(declare-fun e!91953 () List!1745)

(assert (=> bm!15660 (= call!15662 ($colon$colon!94 e!91953 (ite c!26491 (h!2348 (toList!888 call!15537)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun c!26489 () Bool)

(assert (=> bm!15660 (= c!26489 c!26491)))

(declare-fun c!26492 () Bool)

(declare-fun b!141063 () Bool)

(assert (=> b!141063 (= e!91953 (ite c!26490 (t!6329 (toList!888 call!15537)) (ite c!26492 (Cons!1741 (h!2348 (toList!888 call!15537)) (t!6329 (toList!888 call!15537))) Nil!1742)))))

(declare-fun b!141064 () Bool)

(assert (=> b!141064 (= e!91952 call!15661)))

(declare-fun b!141065 () Bool)

(assert (=> b!141065 (= e!91954 (contains!925 lt!73990 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141066 () Bool)

(assert (=> b!141066 (= e!91953 (insertStrictlySorted!93 (t!6329 (toList!888 call!15537)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141067 () Bool)

(assert (=> b!141067 (= e!91950 call!15663)))

(declare-fun b!141068 () Bool)

(assert (=> b!141068 (= c!26492 (and ((_ is Cons!1741) (toList!888 call!15537)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15537))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!141068 (= e!91952 e!91950)))

(declare-fun b!141069 () Bool)

(declare-fun res!67382 () Bool)

(assert (=> b!141069 (=> (not res!67382) (not e!91954))))

(assert (=> b!141069 (= res!67382 (containsKey!180 lt!73990 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44155 c!26491) b!141062))

(assert (= (and d!44155 (not c!26491)) b!141061))

(assert (= (and b!141061 c!26490) b!141064))

(assert (= (and b!141061 (not c!26490)) b!141068))

(assert (= (and b!141068 c!26492) b!141067))

(assert (= (and b!141068 (not c!26492)) b!141060))

(assert (= (or b!141067 b!141060) bm!15658))

(assert (= (or b!141064 bm!15658) bm!15659))

(assert (= (or b!141062 bm!15659) bm!15660))

(assert (= (and bm!15660 c!26489) b!141066))

(assert (= (and bm!15660 (not c!26489)) b!141063))

(assert (= (and d!44155 res!67381) b!141069))

(assert (= (and b!141069 res!67382) b!141065))

(declare-fun m!169025 () Bool)

(assert (=> b!141066 m!169025))

(declare-fun m!169027 () Bool)

(assert (=> d!44155 m!169027))

(declare-fun m!169029 () Bool)

(assert (=> d!44155 m!169029))

(declare-fun m!169031 () Bool)

(assert (=> b!141069 m!169031))

(declare-fun m!169033 () Bool)

(assert (=> bm!15660 m!169033))

(declare-fun m!169035 () Bool)

(assert (=> b!141065 m!169035))

(assert (=> d!43669 d!44155))

(assert (=> d!43561 d!43347))

(declare-fun d!44157 () Bool)

(declare-fun lt!73991 () Bool)

(assert (=> d!44157 (= lt!73991 (select (content!138 (t!6329 (toList!888 lt!73125))) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91956 () Bool)

(assert (=> d!44157 (= lt!73991 e!91956)))

(declare-fun res!67383 () Bool)

(assert (=> d!44157 (=> (not res!67383) (not e!91956))))

(assert (=> d!44157 (= res!67383 ((_ is Cons!1741) (t!6329 (toList!888 lt!73125))))))

(assert (=> d!44157 (= (contains!925 (t!6329 (toList!888 lt!73125)) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73991)))

(declare-fun b!141070 () Bool)

(declare-fun e!91955 () Bool)

(assert (=> b!141070 (= e!91956 e!91955)))

(declare-fun res!67384 () Bool)

(assert (=> b!141070 (=> res!67384 e!91955)))

(assert (=> b!141070 (= res!67384 (= (h!2348 (t!6329 (toList!888 lt!73125))) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141071 () Bool)

(assert (=> b!141071 (= e!91955 (contains!925 (t!6329 (t!6329 (toList!888 lt!73125))) (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44157 res!67383) b!141070))

(assert (= (and b!141070 (not res!67384)) b!141071))

(declare-fun m!169037 () Bool)

(assert (=> d!44157 m!169037))

(declare-fun m!169039 () Bool)

(assert (=> d!44157 m!169039))

(declare-fun m!169041 () Bool)

(assert (=> b!141071 m!169041))

(assert (=> b!140337 d!44157))

(declare-fun d!44159 () Bool)

(declare-fun e!91957 () Bool)

(assert (=> d!44159 e!91957))

(declare-fun res!67385 () Bool)

(assert (=> d!44159 (=> res!67385 e!91957)))

(declare-fun lt!73994 () Bool)

(assert (=> d!44159 (= res!67385 (not lt!73994))))

(declare-fun lt!73992 () Bool)

(assert (=> d!44159 (= lt!73994 lt!73992)))

(declare-fun lt!73993 () Unit!4373)

(declare-fun e!91958 () Unit!4373)

(assert (=> d!44159 (= lt!73993 e!91958)))

(declare-fun c!26493 () Bool)

(assert (=> d!44159 (= c!26493 lt!73992)))

(assert (=> d!44159 (= lt!73992 (containsKey!180 (toList!888 lt!73740) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44159 (= (contains!923 lt!73740 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73994)))

(declare-fun b!141072 () Bool)

(declare-fun lt!73995 () Unit!4373)

(assert (=> b!141072 (= e!91958 lt!73995)))

(assert (=> b!141072 (= lt!73995 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73740) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!141072 (isDefined!129 (getValueByKey!176 (toList!888 lt!73740) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141073 () Bool)

(declare-fun Unit!4449 () Unit!4373)

(assert (=> b!141073 (= e!91958 Unit!4449)))

(declare-fun b!141074 () Bool)

(assert (=> b!141074 (= e!91957 (isDefined!129 (getValueByKey!176 (toList!888 lt!73740) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (= (and d!44159 c!26493) b!141072))

(assert (= (and d!44159 (not c!26493)) b!141073))

(assert (= (and d!44159 (not res!67385)) b!141074))

(declare-fun m!169043 () Bool)

(assert (=> d!44159 m!169043))

(declare-fun m!169045 () Bool)

(assert (=> b!141072 m!169045))

(assert (=> b!141072 m!168095))

(assert (=> b!141072 m!168095))

(declare-fun m!169047 () Bool)

(assert (=> b!141072 m!169047))

(assert (=> b!141074 m!168095))

(assert (=> b!141074 m!168095))

(assert (=> b!141074 m!169047))

(assert (=> d!43785 d!44159))

(declare-fun b!141078 () Bool)

(declare-fun e!91960 () Option!182)

(assert (=> b!141078 (= e!91960 None!180)))

(declare-fun b!141075 () Bool)

(declare-fun e!91959 () Option!182)

(assert (=> b!141075 (= e!91959 (Some!181 (_2!1360 (h!2348 lt!73737))))))

(declare-fun b!141076 () Bool)

(assert (=> b!141076 (= e!91959 e!91960)))

(declare-fun c!26495 () Bool)

(assert (=> b!141076 (= c!26495 (and ((_ is Cons!1741) lt!73737) (not (= (_1!1360 (h!2348 lt!73737)) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun c!26494 () Bool)

(declare-fun d!44161 () Bool)

(assert (=> d!44161 (= c!26494 (and ((_ is Cons!1741) lt!73737) (= (_1!1360 (h!2348 lt!73737)) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> d!44161 (= (getValueByKey!176 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) e!91959)))

(declare-fun b!141077 () Bool)

(assert (=> b!141077 (= e!91960 (getValueByKey!176 (t!6329 lt!73737) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44161 c!26494) b!141075))

(assert (= (and d!44161 (not c!26494)) b!141076))

(assert (= (and b!141076 c!26495) b!141077))

(assert (= (and b!141076 (not c!26495)) b!141078))

(declare-fun m!169049 () Bool)

(assert (=> b!141077 m!169049))

(assert (=> d!43785 d!44161))

(declare-fun d!44163 () Bool)

(assert (=> d!44163 (= (getValueByKey!176 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (Some!181 (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun lt!73996 () Unit!4373)

(assert (=> d!44163 (= lt!73996 (choose!865 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun e!91961 () Bool)

(assert (=> d!44163 e!91961))

(declare-fun res!67386 () Bool)

(assert (=> d!44163 (=> (not res!67386) (not e!91961))))

(assert (=> d!44163 (= res!67386 (isStrictlySorted!325 lt!73737))))

(assert (=> d!44163 (= (lemmaContainsTupThenGetReturnValue!90 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73996)))

(declare-fun b!141079 () Bool)

(declare-fun res!67387 () Bool)

(assert (=> b!141079 (=> (not res!67387) (not e!91961))))

(assert (=> b!141079 (= res!67387 (containsKey!180 lt!73737 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141080 () Bool)

(assert (=> b!141080 (= e!91961 (contains!925 lt!73737 (tuple2!2699 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (= (and d!44163 res!67386) b!141079))

(assert (= (and b!141079 res!67387) b!141080))

(assert (=> d!44163 m!168089))

(declare-fun m!169051 () Bool)

(assert (=> d!44163 m!169051))

(declare-fun m!169053 () Bool)

(assert (=> d!44163 m!169053))

(declare-fun m!169055 () Bool)

(assert (=> b!141079 m!169055))

(declare-fun m!169057 () Bool)

(assert (=> b!141080 m!169057))

(assert (=> d!43785 d!44163))

(declare-fun b!141081 () Bool)

(declare-fun e!91962 () List!1745)

(declare-fun call!15666 () List!1745)

(assert (=> b!141081 (= e!91962 call!15666)))

(declare-fun bm!15661 () Bool)

(declare-fun call!15664 () List!1745)

(assert (=> bm!15661 (= call!15666 call!15664)))

(declare-fun d!44165 () Bool)

(declare-fun e!91966 () Bool)

(assert (=> d!44165 e!91966))

(declare-fun res!67388 () Bool)

(assert (=> d!44165 (=> (not res!67388) (not e!91966))))

(declare-fun lt!73997 () List!1745)

(assert (=> d!44165 (= res!67388 (isStrictlySorted!325 lt!73997))))

(declare-fun e!91963 () List!1745)

(assert (=> d!44165 (= lt!73997 e!91963)))

(declare-fun c!26498 () Bool)

(assert (=> d!44165 (= c!26498 (and ((_ is Cons!1741) (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> d!44165 (isStrictlySorted!325 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))))))

(assert (=> d!44165 (= (insertStrictlySorted!93 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73997)))

(declare-fun bm!15662 () Bool)

(declare-fun call!15665 () List!1745)

(assert (=> bm!15662 (= call!15664 call!15665)))

(declare-fun b!141082 () Bool)

(declare-fun e!91964 () List!1745)

(assert (=> b!141082 (= e!91963 e!91964)))

(declare-fun c!26497 () Bool)

(assert (=> b!141082 (= c!26497 (and ((_ is Cons!1741) (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (= (_1!1360 (h!2348 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!141083 () Bool)

(assert (=> b!141083 (= e!91963 call!15665)))

(declare-fun e!91965 () List!1745)

(declare-fun bm!15663 () Bool)

(assert (=> bm!15663 (= call!15665 ($colon$colon!94 e!91965 (ite c!26498 (h!2348 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (tuple2!2699 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun c!26496 () Bool)

(assert (=> bm!15663 (= c!26496 c!26498)))

(declare-fun b!141084 () Bool)

(declare-fun c!26499 () Bool)

(assert (=> b!141084 (= e!91965 (ite c!26497 (t!6329 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (ite c!26499 (Cons!1741 (h!2348 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (t!6329 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))))) Nil!1742)))))

(declare-fun b!141085 () Bool)

(assert (=> b!141085 (= e!91964 call!15664)))

(declare-fun b!141086 () Bool)

(assert (=> b!141086 (= e!91966 (contains!925 lt!73997 (tuple2!2699 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!141087 () Bool)

(assert (=> b!141087 (= e!91965 (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141088 () Bool)

(assert (=> b!141088 (= e!91962 call!15666)))

(declare-fun b!141089 () Bool)

(assert (=> b!141089 (= c!26499 (and ((_ is Cons!1741) (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532)))) (bvsgt (_1!1360 (h!2348 (toList!888 (ite c!26153 call!15529 (ite c!26155 call!15527 call!15532))))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> b!141089 (= e!91964 e!91962)))

(declare-fun b!141090 () Bool)

(declare-fun res!67389 () Bool)

(assert (=> b!141090 (=> (not res!67389) (not e!91966))))

(assert (=> b!141090 (= res!67389 (containsKey!180 lt!73997 (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44165 c!26498) b!141083))

(assert (= (and d!44165 (not c!26498)) b!141082))

(assert (= (and b!141082 c!26497) b!141085))

(assert (= (and b!141082 (not c!26497)) b!141089))

(assert (= (and b!141089 c!26499) b!141088))

(assert (= (and b!141089 (not c!26499)) b!141081))

(assert (= (or b!141088 b!141081) bm!15661))

(assert (= (or b!141085 bm!15661) bm!15662))

(assert (= (or b!141083 bm!15662) bm!15663))

(assert (= (and bm!15663 c!26496) b!141087))

(assert (= (and bm!15663 (not c!26496)) b!141084))

(assert (= (and d!44165 res!67388) b!141090))

(assert (= (and b!141090 res!67389) b!141086))

(declare-fun m!169059 () Bool)

(assert (=> b!141087 m!169059))

(declare-fun m!169061 () Bool)

(assert (=> d!44165 m!169061))

(declare-fun m!169063 () Bool)

(assert (=> d!44165 m!169063))

(declare-fun m!169065 () Bool)

(assert (=> b!141090 m!169065))

(declare-fun m!169067 () Bool)

(assert (=> bm!15663 m!169067))

(declare-fun m!169069 () Bool)

(assert (=> b!141086 m!169069))

(assert (=> d!43785 d!44165))

(declare-fun d!44167 () Bool)

(declare-fun lt!73998 () Bool)

(assert (=> d!44167 (= lt!73998 (select (content!137 (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!91968 () Bool)

(assert (=> d!44167 (= lt!73998 e!91968)))

(declare-fun res!67390 () Bool)

(assert (=> d!44167 (=> (not res!67390) (not e!91968))))

(assert (=> d!44167 (= res!67390 ((_ is Cons!1742) (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))))))

(assert (=> d!44167 (= (contains!924 (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!73998)))

(declare-fun b!141091 () Bool)

(declare-fun e!91967 () Bool)

(assert (=> b!141091 (= e!91968 e!91967)))

(declare-fun res!67391 () Bool)

(assert (=> b!141091 (=> res!67391 e!91967)))

(assert (=> b!141091 (= res!67391 (= (h!2349 (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!141092 () Bool)

(assert (=> b!141092 (= e!91967 (contains!924 (t!6330 (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!44167 res!67390) b!141091))

(assert (= (and b!141091 (not res!67391)) b!141092))

(declare-fun m!169071 () Bool)

(assert (=> d!44167 m!169071))

(assert (=> d!44167 m!166625))

(declare-fun m!169073 () Bool)

(assert (=> d!44167 m!169073))

(assert (=> b!141092 m!166625))

(declare-fun m!169075 () Bool)

(assert (=> b!141092 m!169075))

(assert (=> b!140061 d!44167))

(declare-fun d!44169 () Bool)

(assert (=> d!44169 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5904 () Bool)

(assert (= bs!5904 d!44169))

(assert (=> bs!5904 m!166507))

(declare-fun m!169077 () Bool)

(assert (=> bs!5904 m!169077))

(assert (=> b!140010 d!44169))

(assert (=> b!140010 d!43475))

(assert (=> b!140330 d!44137))

(declare-fun d!44171 () Bool)

(assert (=> d!44171 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73999 () Unit!4373)

(assert (=> d!44171 (= lt!73999 (choose!864 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91969 () Bool)

(assert (=> d!44171 e!91969))

(declare-fun res!67392 () Bool)

(assert (=> d!44171 (=> (not res!67392) (not e!91969))))

(assert (=> d!44171 (= res!67392 (isStrictlySorted!325 (toList!888 lt!73052)))))

(assert (=> d!44171 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000) lt!73999)))

(declare-fun b!141093 () Bool)

(assert (=> b!141093 (= e!91969 (containsKey!180 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44171 res!67392) b!141093))

(assert (=> d!44171 m!168321))

(assert (=> d!44171 m!168321))

(assert (=> d!44171 m!168323))

(declare-fun m!169079 () Bool)

(assert (=> d!44171 m!169079))

(declare-fun m!169081 () Bool)

(assert (=> d!44171 m!169081))

(assert (=> b!141093 m!168317))

(assert (=> b!140685 d!44171))

(declare-fun d!44173 () Bool)

(assert (=> d!44173 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5905 () Bool)

(assert (= bs!5905 d!44173))

(assert (=> bs!5905 m!168321))

(declare-fun m!169083 () Bool)

(assert (=> bs!5905 m!169083))

(assert (=> b!140685 d!44173))

(declare-fun b!141097 () Bool)

(declare-fun e!91971 () Option!182)

(assert (=> b!141097 (= e!91971 None!180)))

(declare-fun b!141094 () Bool)

(declare-fun e!91970 () Option!182)

(assert (=> b!141094 (= e!91970 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73052)))))))

(declare-fun b!141095 () Bool)

(assert (=> b!141095 (= e!91970 e!91971)))

(declare-fun c!26501 () Bool)

(assert (=> b!141095 (= c!26501 (and ((_ is Cons!1741) (toList!888 lt!73052)) (not (= (_1!1360 (h!2348 (toList!888 lt!73052))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44175 () Bool)

(declare-fun c!26500 () Bool)

(assert (=> d!44175 (= c!26500 (and ((_ is Cons!1741) (toList!888 lt!73052)) (= (_1!1360 (h!2348 (toList!888 lt!73052))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44175 (= (getValueByKey!176 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000) e!91970)))

(declare-fun b!141096 () Bool)

(assert (=> b!141096 (= e!91971 (getValueByKey!176 (t!6329 (toList!888 lt!73052)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44175 c!26500) b!141094))

(assert (= (and d!44175 (not c!26500)) b!141095))

(assert (= (and b!141095 c!26501) b!141096))

(assert (= (and b!141095 (not c!26501)) b!141097))

(declare-fun m!169085 () Bool)

(assert (=> b!141096 m!169085))

(assert (=> b!140685 d!44175))

(declare-fun d!44177 () Bool)

(declare-fun res!67393 () Bool)

(declare-fun e!91972 () Bool)

(assert (=> d!44177 (=> res!67393 e!91972)))

(assert (=> d!44177 (= res!67393 (and ((_ is Cons!1741) (toList!888 lt!73093)) (= (_1!1360 (h!2348 (toList!888 lt!73093))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44177 (= (containsKey!180 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000) e!91972)))

(declare-fun b!141098 () Bool)

(declare-fun e!91973 () Bool)

(assert (=> b!141098 (= e!91972 e!91973)))

(declare-fun res!67394 () Bool)

(assert (=> b!141098 (=> (not res!67394) (not e!91973))))

(assert (=> b!141098 (= res!67394 (and (or (not ((_ is Cons!1741) (toList!888 lt!73093))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73093))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73093)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73093))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141099 () Bool)

(assert (=> b!141099 (= e!91973 (containsKey!180 (t!6329 (toList!888 lt!73093)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44177 (not res!67393)) b!141098))

(assert (= (and b!141098 res!67394) b!141099))

(declare-fun m!169087 () Bool)

(assert (=> b!141099 m!169087))

(assert (=> d!43693 d!44177))

(declare-fun d!44179 () Bool)

(assert (=> d!44179 (= (get!1531 (getValueByKey!176 (toList!888 lt!73075) lt!73080)) (v!3284 (getValueByKey!176 (toList!888 lt!73075) lt!73080)))))

(assert (=> d!43931 d!44179))

(declare-fun b!141103 () Bool)

(declare-fun e!91975 () Option!182)

(assert (=> b!141103 (= e!91975 None!180)))

(declare-fun b!141100 () Bool)

(declare-fun e!91974 () Option!182)

(assert (=> b!141100 (= e!91974 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73075)))))))

(declare-fun b!141101 () Bool)

(assert (=> b!141101 (= e!91974 e!91975)))

(declare-fun c!26503 () Bool)

(assert (=> b!141101 (= c!26503 (and ((_ is Cons!1741) (toList!888 lt!73075)) (not (= (_1!1360 (h!2348 (toList!888 lt!73075))) lt!73080))))))

(declare-fun d!44181 () Bool)

(declare-fun c!26502 () Bool)

(assert (=> d!44181 (= c!26502 (and ((_ is Cons!1741) (toList!888 lt!73075)) (= (_1!1360 (h!2348 (toList!888 lt!73075))) lt!73080)))))

(assert (=> d!44181 (= (getValueByKey!176 (toList!888 lt!73075) lt!73080) e!91974)))

(declare-fun b!141102 () Bool)

(assert (=> b!141102 (= e!91975 (getValueByKey!176 (t!6329 (toList!888 lt!73075)) lt!73080))))

(assert (= (and d!44181 c!26502) b!141100))

(assert (= (and d!44181 (not c!26502)) b!141101))

(assert (= (and b!141101 c!26503) b!141102))

(assert (= (and b!141101 (not c!26503)) b!141103))

(declare-fun m!169089 () Bool)

(assert (=> b!141102 m!169089))

(assert (=> d!43931 d!44181))

(declare-fun d!44183 () Bool)

(assert (=> d!44183 (= (get!1531 (getValueByKey!176 (toList!888 lt!73138) lt!73139)) (v!3284 (getValueByKey!176 (toList!888 lt!73138) lt!73139)))))

(assert (=> d!43503 d!44183))

(declare-fun b!141107 () Bool)

(declare-fun e!91977 () Option!182)

(assert (=> b!141107 (= e!91977 None!180)))

(declare-fun b!141104 () Bool)

(declare-fun e!91976 () Option!182)

(assert (=> b!141104 (= e!91976 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73138)))))))

(declare-fun b!141105 () Bool)

(assert (=> b!141105 (= e!91976 e!91977)))

(declare-fun c!26505 () Bool)

(assert (=> b!141105 (= c!26505 (and ((_ is Cons!1741) (toList!888 lt!73138)) (not (= (_1!1360 (h!2348 (toList!888 lt!73138))) lt!73139))))))

(declare-fun d!44185 () Bool)

(declare-fun c!26504 () Bool)

(assert (=> d!44185 (= c!26504 (and ((_ is Cons!1741) (toList!888 lt!73138)) (= (_1!1360 (h!2348 (toList!888 lt!73138))) lt!73139)))))

(assert (=> d!44185 (= (getValueByKey!176 (toList!888 lt!73138) lt!73139) e!91976)))

(declare-fun b!141106 () Bool)

(assert (=> b!141106 (= e!91977 (getValueByKey!176 (t!6329 (toList!888 lt!73138)) lt!73139))))

(assert (= (and d!44185 c!26504) b!141104))

(assert (= (and d!44185 (not c!26504)) b!141105))

(assert (= (and b!141105 c!26505) b!141106))

(assert (= (and b!141105 (not c!26505)) b!141107))

(declare-fun m!169091 () Bool)

(assert (=> b!141106 m!169091))

(assert (=> d!43503 d!44185))

(declare-fun d!44187 () Bool)

(assert (=> d!44187 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74000 () Unit!4373)

(assert (=> d!44187 (= lt!74000 (choose!864 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91978 () Bool)

(assert (=> d!44187 e!91978))

(declare-fun res!67395 () Bool)

(assert (=> d!44187 (=> (not res!67395) (not e!91978))))

(assert (=> d!44187 (= res!67395 (isStrictlySorted!325 (toList!888 lt!73158)))))

(assert (=> d!44187 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74000)))

(declare-fun b!141108 () Bool)

(assert (=> b!141108 (= e!91978 (containsKey!180 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44187 res!67395) b!141108))

(assert (=> d!44187 m!168013))

(assert (=> d!44187 m!168013))

(assert (=> d!44187 m!168015))

(declare-fun m!169093 () Bool)

(assert (=> d!44187 m!169093))

(declare-fun m!169095 () Bool)

(assert (=> d!44187 m!169095))

(assert (=> b!141108 m!168009))

(assert (=> b!140534 d!44187))

(declare-fun d!44189 () Bool)

(assert (=> d!44189 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5906 () Bool)

(assert (= bs!5906 d!44189))

(assert (=> bs!5906 m!168013))

(declare-fun m!169097 () Bool)

(assert (=> bs!5906 m!169097))

(assert (=> b!140534 d!44189))

(declare-fun b!141112 () Bool)

(declare-fun e!91980 () Option!182)

(assert (=> b!141112 (= e!91980 None!180)))

(declare-fun b!141109 () Bool)

(declare-fun e!91979 () Option!182)

(assert (=> b!141109 (= e!91979 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73158)))))))

(declare-fun b!141110 () Bool)

(assert (=> b!141110 (= e!91979 e!91980)))

(declare-fun c!26507 () Bool)

(assert (=> b!141110 (= c!26507 (and ((_ is Cons!1741) (toList!888 lt!73158)) (not (= (_1!1360 (h!2348 (toList!888 lt!73158))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44191 () Bool)

(declare-fun c!26506 () Bool)

(assert (=> d!44191 (= c!26506 (and ((_ is Cons!1741) (toList!888 lt!73158)) (= (_1!1360 (h!2348 (toList!888 lt!73158))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44191 (= (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000) e!91979)))

(declare-fun b!141111 () Bool)

(assert (=> b!141111 (= e!91980 (getValueByKey!176 (t!6329 (toList!888 lt!73158)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44191 c!26506) b!141109))

(assert (= (and d!44191 (not c!26506)) b!141110))

(assert (= (and b!141110 c!26507) b!141111))

(assert (= (and b!141110 (not c!26507)) b!141112))

(declare-fun m!169099 () Bool)

(assert (=> b!141111 m!169099))

(assert (=> b!140534 d!44191))

(declare-fun b!141113 () Bool)

(declare-fun lt!74007 () Unit!4373)

(declare-fun lt!74003 () Unit!4373)

(assert (=> b!141113 (= lt!74007 lt!74003)))

(declare-fun lt!74002 () V!3555)

(declare-fun lt!74001 () (_ BitVec 64))

(declare-fun lt!74005 () (_ BitVec 64))

(declare-fun lt!74006 () ListLongMap!1745)

(assert (=> b!141113 (not (contains!923 (+!179 lt!74006 (tuple2!2699 lt!74005 lt!74002)) lt!74001))))

(assert (=> b!141113 (= lt!74003 (addStillNotContains!64 lt!74006 lt!74005 lt!74002 lt!74001))))

(assert (=> b!141113 (= lt!74001 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141113 (= lt!74002 (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141113 (= lt!74005 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15667 () ListLongMap!1745)

(assert (=> b!141113 (= lt!74006 call!15667)))

(declare-fun e!91981 () ListLongMap!1745)

(assert (=> b!141113 (= e!91981 (+!179 call!15667 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141115 () Bool)

(declare-fun e!91983 () ListLongMap!1745)

(assert (=> b!141115 (= e!91983 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141116 () Bool)

(declare-fun e!91987 () Bool)

(declare-fun e!91982 () Bool)

(assert (=> b!141116 (= e!91987 e!91982)))

(assert (=> b!141116 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67399 () Bool)

(declare-fun lt!74004 () ListLongMap!1745)

(assert (=> b!141116 (= res!67399 (contains!923 lt!74004 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141116 (=> (not res!67399) (not e!91982))))

(declare-fun b!141117 () Bool)

(declare-fun res!67396 () Bool)

(declare-fun e!91986 () Bool)

(assert (=> b!141117 (=> (not res!67396) (not e!91986))))

(assert (=> b!141117 (= res!67396 (not (contains!923 lt!74004 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141118 () Bool)

(declare-fun e!91984 () Bool)

(assert (=> b!141118 (= e!91987 e!91984)))

(declare-fun c!26510 () Bool)

(assert (=> b!141118 (= c!26510 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141119 () Bool)

(assert (=> b!141119 (= e!91983 e!91981)))

(declare-fun c!26511 () Bool)

(assert (=> b!141119 (= c!26511 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141120 () Bool)

(declare-fun e!91985 () Bool)

(assert (=> b!141120 (= e!91985 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141120 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!15664 () Bool)

(assert (=> bm!15664 (= call!15667 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141121 () Bool)

(assert (=> b!141121 (= e!91984 (= lt!74004 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141122 () Bool)

(assert (=> b!141122 (= e!91986 e!91987)))

(declare-fun c!26508 () Bool)

(assert (=> b!141122 (= c!26508 e!91985)))

(declare-fun res!67398 () Bool)

(assert (=> b!141122 (=> (not res!67398) (not e!91985))))

(assert (=> b!141122 (= res!67398 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44193 () Bool)

(assert (=> d!44193 e!91986))

(declare-fun res!67397 () Bool)

(assert (=> d!44193 (=> (not res!67397) (not e!91986))))

(assert (=> d!44193 (= res!67397 (not (contains!923 lt!74004 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44193 (= lt!74004 e!91983)))

(declare-fun c!26509 () Bool)

(assert (=> d!44193 (= c!26509 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44193 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44193 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983) (mask!7280 newMap!16) (ite (and c!26064 c!26071) lt!72995 (extraKeys!2695 newMap!16)) (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74004)))

(declare-fun b!141114 () Bool)

(assert (=> b!141114 (= e!91984 (isEmpty!417 lt!74004))))

(declare-fun b!141123 () Bool)

(assert (=> b!141123 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141123 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2588 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983))))))

(assert (=> b!141123 (= e!91982 (= (apply!120 lt!74004 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141124 () Bool)

(assert (=> b!141124 (= e!91981 call!15667)))

(assert (= (and d!44193 c!26509) b!141115))

(assert (= (and d!44193 (not c!26509)) b!141119))

(assert (= (and b!141119 c!26511) b!141113))

(assert (= (and b!141119 (not c!26511)) b!141124))

(assert (= (or b!141113 b!141124) bm!15664))

(assert (= (and d!44193 res!67397) b!141117))

(assert (= (and b!141117 res!67396) b!141122))

(assert (= (and b!141122 res!67398) b!141120))

(assert (= (and b!141122 c!26508) b!141116))

(assert (= (and b!141122 (not c!26508)) b!141118))

(assert (= (and b!141116 res!67399) b!141123))

(assert (= (and b!141118 c!26510) b!141121))

(assert (= (and b!141118 (not c!26510)) b!141114))

(declare-fun b_lambda!6329 () Bool)

(assert (=> (not b_lambda!6329) (not b!141113)))

(assert (=> b!141113 t!6337))

(declare-fun b_and!8815 () Bool)

(assert (= b_and!8811 (and (=> t!6337 result!4191) b_and!8815)))

(assert (=> b!141113 t!6339))

(declare-fun b_and!8817 () Bool)

(assert (= b_and!8813 (and (=> t!6339 result!4193) b_and!8817)))

(declare-fun b_lambda!6331 () Bool)

(assert (=> (not b_lambda!6331) (not b!141123)))

(assert (=> b!141123 t!6337))

(declare-fun b_and!8819 () Bool)

(assert (= b_and!8815 (and (=> t!6337 result!4191) b_and!8819)))

(assert (=> b!141123 t!6339))

(declare-fun b_and!8821 () Bool)

(assert (= b_and!8817 (and (=> t!6339 result!4193) b_and!8821)))

(declare-fun m!169101 () Bool)

(assert (=> b!141117 m!169101))

(assert (=> b!141119 m!167999))

(assert (=> b!141119 m!167999))

(assert (=> b!141119 m!168003))

(declare-fun m!169103 () Bool)

(assert (=> d!44193 m!169103))

(assert (=> d!44193 m!166429))

(assert (=> b!141113 m!166443))

(declare-fun m!169105 () Bool)

(assert (=> b!141113 m!169105))

(declare-fun m!169107 () Bool)

(assert (=> b!141113 m!169107))

(assert (=> b!141113 m!169105))

(declare-fun m!169109 () Bool)

(assert (=> b!141113 m!169109))

(declare-fun m!169111 () Bool)

(assert (=> b!141113 m!169111))

(assert (=> b!141113 m!169109))

(assert (=> b!141113 m!166443))

(declare-fun m!169113 () Bool)

(assert (=> b!141113 m!169113))

(declare-fun m!169115 () Bool)

(assert (=> b!141113 m!169115))

(assert (=> b!141113 m!167999))

(assert (=> b!141120 m!167999))

(assert (=> b!141120 m!167999))

(assert (=> b!141120 m!168003))

(declare-fun m!169117 () Bool)

(assert (=> bm!15664 m!169117))

(declare-fun m!169119 () Bool)

(assert (=> b!141114 m!169119))

(assert (=> b!141123 m!166443))

(assert (=> b!141123 m!167999))

(declare-fun m!169121 () Bool)

(assert (=> b!141123 m!169121))

(assert (=> b!141123 m!169109))

(assert (=> b!141123 m!169109))

(assert (=> b!141123 m!166443))

(assert (=> b!141123 m!169113))

(assert (=> b!141123 m!167999))

(assert (=> b!141116 m!167999))

(assert (=> b!141116 m!167999))

(declare-fun m!169123 () Bool)

(assert (=> b!141116 m!169123))

(assert (=> b!141121 m!169117))

(assert (=> bm!15617 d!44193))

(declare-fun lt!74008 () Bool)

(declare-fun d!44195 () Bool)

(assert (=> d!44195 (= lt!74008 (select (content!138 lt!73056) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!91989 () Bool)

(assert (=> d!44195 (= lt!74008 e!91989)))

(declare-fun res!67400 () Bool)

(assert (=> d!44195 (=> (not res!67400) (not e!91989))))

(assert (=> d!44195 (= res!67400 ((_ is Cons!1741) lt!73056))))

(assert (=> d!44195 (= (contains!925 lt!73056 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74008)))

(declare-fun b!141125 () Bool)

(declare-fun e!91988 () Bool)

(assert (=> b!141125 (= e!91989 e!91988)))

(declare-fun res!67401 () Bool)

(assert (=> b!141125 (=> res!67401 e!91988)))

(assert (=> b!141125 (= res!67401 (= (h!2348 lt!73056) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141126 () Bool)

(assert (=> b!141126 (= e!91988 (contains!925 (t!6329 lt!73056) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44195 res!67400) b!141125))

(assert (= (and b!141125 (not res!67401)) b!141126))

(declare-fun m!169125 () Bool)

(assert (=> d!44195 m!169125))

(declare-fun m!169127 () Bool)

(assert (=> d!44195 m!169127))

(declare-fun m!169129 () Bool)

(assert (=> b!141126 m!169129))

(assert (=> b!140639 d!44195))

(declare-fun d!44197 () Bool)

(assert (=> d!44197 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74009 () Unit!4373)

(assert (=> d!44197 (= lt!74009 (choose!864 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91990 () Bool)

(assert (=> d!44197 e!91990))

(declare-fun res!67402 () Bool)

(assert (=> d!44197 (=> (not res!67402) (not e!91990))))

(assert (=> d!44197 (= res!67402 (isStrictlySorted!325 (toList!888 lt!73332)))))

(assert (=> d!44197 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74009)))

(declare-fun b!141127 () Bool)

(assert (=> b!141127 (= e!91990 (containsKey!180 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44197 res!67402) b!141127))

(assert (=> d!44197 m!168083))

(assert (=> d!44197 m!168083))

(assert (=> d!44197 m!168085))

(declare-fun m!169131 () Bool)

(assert (=> d!44197 m!169131))

(declare-fun m!169133 () Bool)

(assert (=> d!44197 m!169133))

(assert (=> b!141127 m!168079))

(assert (=> b!140593 d!44197))

(declare-fun d!44199 () Bool)

(assert (=> d!44199 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5907 () Bool)

(assert (= bs!5907 d!44199))

(assert (=> bs!5907 m!168083))

(declare-fun m!169135 () Bool)

(assert (=> bs!5907 m!169135))

(assert (=> b!140593 d!44199))

(declare-fun b!141131 () Bool)

(declare-fun e!91992 () Option!182)

(assert (=> b!141131 (= e!91992 None!180)))

(declare-fun b!141128 () Bool)

(declare-fun e!91991 () Option!182)

(assert (=> b!141128 (= e!91991 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73332)))))))

(declare-fun b!141129 () Bool)

(assert (=> b!141129 (= e!91991 e!91992)))

(declare-fun c!26513 () Bool)

(assert (=> b!141129 (= c!26513 (and ((_ is Cons!1741) (toList!888 lt!73332)) (not (= (_1!1360 (h!2348 (toList!888 lt!73332))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44201 () Bool)

(declare-fun c!26512 () Bool)

(assert (=> d!44201 (= c!26512 (and ((_ is Cons!1741) (toList!888 lt!73332)) (= (_1!1360 (h!2348 (toList!888 lt!73332))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44201 (= (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000) e!91991)))

(declare-fun b!141130 () Bool)

(assert (=> b!141130 (= e!91992 (getValueByKey!176 (t!6329 (toList!888 lt!73332)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44201 c!26512) b!141128))

(assert (= (and d!44201 (not c!26512)) b!141129))

(assert (= (and b!141129 c!26513) b!141130))

(assert (= (and b!141129 (not c!26513)) b!141131))

(declare-fun m!169137 () Bool)

(assert (=> b!141130 m!169137))

(assert (=> b!140593 d!44201))

(declare-fun d!44203 () Bool)

(assert (not d!44203))

(assert (=> b!140807 d!44203))

(declare-fun d!44205 () Bool)

(declare-fun res!67403 () Bool)

(declare-fun e!91993 () Bool)

(assert (=> d!44205 (=> res!67403 e!91993)))

(assert (=> d!44205 (= res!67403 (or ((_ is Nil!1742) lt!73878) ((_ is Nil!1742) (t!6329 lt!73878))))))

(assert (=> d!44205 (= (isStrictlySorted!325 lt!73878) e!91993)))

(declare-fun b!141132 () Bool)

(declare-fun e!91994 () Bool)

(assert (=> b!141132 (= e!91993 e!91994)))

(declare-fun res!67404 () Bool)

(assert (=> b!141132 (=> (not res!67404) (not e!91994))))

(assert (=> b!141132 (= res!67404 (bvslt (_1!1360 (h!2348 lt!73878)) (_1!1360 (h!2348 (t!6329 lt!73878)))))))

(declare-fun b!141133 () Bool)

(assert (=> b!141133 (= e!91994 (isStrictlySorted!325 (t!6329 lt!73878)))))

(assert (= (and d!44205 (not res!67403)) b!141132))

(assert (= (and b!141132 res!67404) b!141133))

(declare-fun m!169139 () Bool)

(assert (=> b!141133 m!169139))

(assert (=> d!43955 d!44205))

(declare-fun d!44207 () Bool)

(declare-fun res!67405 () Bool)

(declare-fun e!91995 () Bool)

(assert (=> d!44207 (=> res!67405 e!91995)))

(assert (=> d!44207 (= res!67405 (or ((_ is Nil!1742) (toList!888 call!15405)) ((_ is Nil!1742) (t!6329 (toList!888 call!15405)))))))

(assert (=> d!44207 (= (isStrictlySorted!325 (toList!888 call!15405)) e!91995)))

(declare-fun b!141134 () Bool)

(declare-fun e!91996 () Bool)

(assert (=> b!141134 (= e!91995 e!91996)))

(declare-fun res!67406 () Bool)

(assert (=> b!141134 (=> (not res!67406) (not e!91996))))

(assert (=> b!141134 (= res!67406 (bvslt (_1!1360 (h!2348 (toList!888 call!15405))) (_1!1360 (h!2348 (t!6329 (toList!888 call!15405))))))))

(declare-fun b!141135 () Bool)

(assert (=> b!141135 (= e!91996 (isStrictlySorted!325 (t!6329 (toList!888 call!15405))))))

(assert (= (and d!44207 (not res!67405)) b!141134))

(assert (= (and b!141134 res!67406) b!141135))

(declare-fun m!169141 () Bool)

(assert (=> b!141135 m!169141))

(assert (=> d!43955 d!44207))

(declare-fun d!44209 () Bool)

(assert (=> d!44209 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73080)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73080)))))

(assert (=> d!43917 d!44209))

(declare-fun b!141139 () Bool)

(declare-fun e!91998 () Option!182)

(assert (=> b!141139 (= e!91998 None!180)))

(declare-fun e!91997 () Option!182)

(declare-fun b!141136 () Bool)

(assert (=> b!141136 (= e!91997 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))))

(declare-fun b!141137 () Bool)

(assert (=> b!141137 (= e!91997 e!91998)))

(declare-fun c!26515 () Bool)

(assert (=> b!141137 (= c!26515 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))) lt!73080))))))

(declare-fun c!26514 () Bool)

(declare-fun d!44211 () Bool)

(assert (=> d!44211 (= c!26514 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))) lt!73080)))))

(assert (=> d!44211 (= (getValueByKey!176 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) lt!73080) e!91997)))

(declare-fun b!141138 () Bool)

(assert (=> b!141138 (= e!91998 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))) lt!73080))))

(assert (= (and d!44211 c!26514) b!141136))

(assert (= (and d!44211 (not c!26514)) b!141137))

(assert (= (and b!141137 c!26515) b!141138))

(assert (= (and b!141137 (not c!26515)) b!141139))

(declare-fun m!169143 () Bool)

(assert (=> b!141138 m!169143))

(assert (=> d!43917 d!44211))

(declare-fun d!44213 () Bool)

(assert (=> d!44213 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5908 () Bool)

(assert (= bs!5908 d!44213))

(assert (=> bs!5908 m!167035))

(declare-fun m!169145 () Bool)

(assert (=> bs!5908 m!169145))

(assert (=> b!140308 d!44213))

(declare-fun b!141143 () Bool)

(declare-fun e!92000 () Option!182)

(assert (=> b!141143 (= e!92000 None!180)))

(declare-fun b!141140 () Bool)

(declare-fun e!91999 () Option!182)

(assert (=> b!141140 (= e!91999 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73332)))))))

(declare-fun b!141141 () Bool)

(assert (=> b!141141 (= e!91999 e!92000)))

(declare-fun c!26517 () Bool)

(assert (=> b!141141 (= c!26517 (and ((_ is Cons!1741) (toList!888 lt!73332)) (not (= (_1!1360 (h!2348 (toList!888 lt!73332))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44215 () Bool)

(declare-fun c!26516 () Bool)

(assert (=> d!44215 (= c!26516 (and ((_ is Cons!1741) (toList!888 lt!73332)) (= (_1!1360 (h!2348 (toList!888 lt!73332))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44215 (= (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000) e!91999)))

(declare-fun b!141142 () Bool)

(assert (=> b!141142 (= e!92000 (getValueByKey!176 (t!6329 (toList!888 lt!73332)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44215 c!26516) b!141140))

(assert (= (and d!44215 (not c!26516)) b!141141))

(assert (= (and b!141141 c!26517) b!141142))

(assert (= (and b!141141 (not c!26517)) b!141143))

(declare-fun m!169147 () Bool)

(assert (=> b!141142 m!169147))

(assert (=> b!140308 d!44215))

(declare-fun lt!74010 () Bool)

(declare-fun d!44217 () Bool)

(assert (=> d!44217 (= lt!74010 (select (content!138 (toList!888 lt!73455)) (tuple2!2699 lt!73053 lt!73050)))))

(declare-fun e!92002 () Bool)

(assert (=> d!44217 (= lt!74010 e!92002)))

(declare-fun res!67407 () Bool)

(assert (=> d!44217 (=> (not res!67407) (not e!92002))))

(assert (=> d!44217 (= res!67407 ((_ is Cons!1741) (toList!888 lt!73455)))))

(assert (=> d!44217 (= (contains!925 (toList!888 lt!73455) (tuple2!2699 lt!73053 lt!73050)) lt!74010)))

(declare-fun b!141144 () Bool)

(declare-fun e!92001 () Bool)

(assert (=> b!141144 (= e!92002 e!92001)))

(declare-fun res!67408 () Bool)

(assert (=> b!141144 (=> res!67408 e!92001)))

(assert (=> b!141144 (= res!67408 (= (h!2348 (toList!888 lt!73455)) (tuple2!2699 lt!73053 lt!73050)))))

(declare-fun b!141145 () Bool)

(assert (=> b!141145 (= e!92001 (contains!925 (t!6329 (toList!888 lt!73455)) (tuple2!2699 lt!73053 lt!73050)))))

(assert (= (and d!44217 res!67407) b!141144))

(assert (= (and b!141144 (not res!67408)) b!141145))

(declare-fun m!169149 () Bool)

(assert (=> d!44217 m!169149))

(declare-fun m!169151 () Bool)

(assert (=> d!44217 m!169151))

(declare-fun m!169153 () Bool)

(assert (=> b!141145 m!169153))

(assert (=> b!140200 d!44217))

(declare-fun bm!15665 () Bool)

(declare-fun call!15668 () Bool)

(declare-fun c!26518 () Bool)

(assert (=> bm!15665 (= call!15668 (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!73257)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26518 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)))))

(declare-fun b!141146 () Bool)

(declare-fun e!92006 () Bool)

(assert (=> b!141146 (= e!92006 call!15668)))

(declare-fun b!141148 () Bool)

(assert (=> b!141148 (= e!92006 call!15668)))

(declare-fun b!141149 () Bool)

(declare-fun e!92003 () Bool)

(declare-fun e!92004 () Bool)

(assert (=> b!141149 (= e!92003 e!92004)))

(declare-fun res!67410 () Bool)

(assert (=> b!141149 (=> (not res!67410) (not e!92004))))

(declare-fun e!92005 () Bool)

(assert (=> b!141149 (= res!67410 (not e!92005))))

(declare-fun res!67411 () Bool)

(assert (=> b!141149 (=> (not res!67411) (not e!92005))))

(assert (=> b!141149 (= res!67411 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(declare-fun b!141150 () Bool)

(assert (=> b!141150 (= e!92004 e!92006)))

(assert (=> b!141150 (= c!26518 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(declare-fun d!44219 () Bool)

(declare-fun res!67409 () Bool)

(assert (=> d!44219 (=> res!67409 e!92003)))

(assert (=> d!44219 (= res!67409 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(assert (=> d!44219 (= (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!73257)) #b00000000000000000000000000000000 Nil!1743) e!92003)))

(declare-fun b!141147 () Bool)

(assert (=> b!141147 (= e!92005 (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(assert (= (and d!44219 (not res!67409)) b!141149))

(assert (= (and b!141149 res!67411) b!141147))

(assert (= (and b!141149 res!67410) b!141150))

(assert (= (and b!141150 c!26518) b!141146))

(assert (= (and b!141150 (not c!26518)) b!141148))

(assert (= (or b!141146 b!141148) bm!15665))

(assert (=> bm!15665 m!168781))

(declare-fun m!169155 () Bool)

(assert (=> bm!15665 m!169155))

(assert (=> b!141149 m!168781))

(assert (=> b!141149 m!168781))

(assert (=> b!141149 m!168791))

(assert (=> b!141150 m!168781))

(assert (=> b!141150 m!168781))

(assert (=> b!141150 m!168791))

(assert (=> b!141147 m!168781))

(assert (=> b!141147 m!168781))

(declare-fun m!169157 () Bool)

(assert (=> b!141147 m!169157))

(assert (=> b!140108 d!44219))

(declare-fun d!44221 () Bool)

(declare-fun res!67412 () Bool)

(declare-fun e!92007 () Bool)

(assert (=> d!44221 (=> res!67412 e!92007)))

(assert (=> d!44221 (= res!67412 (and ((_ is Cons!1741) (toList!888 lt!73052)) (= (_1!1360 (h!2348 (toList!888 lt!73052))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44221 (= (containsKey!180 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92007)))

(declare-fun b!141151 () Bool)

(declare-fun e!92008 () Bool)

(assert (=> b!141151 (= e!92007 e!92008)))

(declare-fun res!67413 () Bool)

(assert (=> b!141151 (=> (not res!67413) (not e!92008))))

(assert (=> b!141151 (= res!67413 (and (or (not ((_ is Cons!1741) (toList!888 lt!73052))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73052))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1741) (toList!888 lt!73052)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73052))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!141152 () Bool)

(assert (=> b!141152 (= e!92008 (containsKey!180 (t!6329 (toList!888 lt!73052)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44221 (not res!67412)) b!141151))

(assert (= (and b!141151 res!67413) b!141152))

(assert (=> b!141152 m!166121))

(declare-fun m!169159 () Bool)

(assert (=> b!141152 m!169159))

(assert (=> d!43979 d!44221))

(declare-fun d!44223 () Bool)

(declare-fun e!92009 () Bool)

(assert (=> d!44223 e!92009))

(declare-fun res!67414 () Bool)

(assert (=> d!44223 (=> res!67414 e!92009)))

(declare-fun lt!74013 () Bool)

(assert (=> d!44223 (= res!67414 (not lt!74013))))

(declare-fun lt!74011 () Bool)

(assert (=> d!44223 (= lt!74013 lt!74011)))

(declare-fun lt!74012 () Unit!4373)

(declare-fun e!92010 () Unit!4373)

(assert (=> d!44223 (= lt!74012 e!92010)))

(declare-fun c!26519 () Bool)

(assert (=> d!44223 (= c!26519 lt!74011)))

(assert (=> d!44223 (= lt!74011 (containsKey!180 (toList!888 lt!73492) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44223 (= (contains!923 lt!73492 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74013)))

(declare-fun b!141153 () Bool)

(declare-fun lt!74014 () Unit!4373)

(assert (=> b!141153 (= e!92010 lt!74014)))

(assert (=> b!141153 (= lt!74014 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73492) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!141153 (isDefined!129 (getValueByKey!176 (toList!888 lt!73492) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141154 () Bool)

(declare-fun Unit!4450 () Unit!4373)

(assert (=> b!141154 (= e!92010 Unit!4450)))

(declare-fun b!141155 () Bool)

(assert (=> b!141155 (= e!92009 (isDefined!129 (getValueByKey!176 (toList!888 lt!73492) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!44223 c!26519) b!141153))

(assert (= (and d!44223 (not c!26519)) b!141154))

(assert (= (and d!44223 (not res!67414)) b!141155))

(declare-fun m!169161 () Bool)

(assert (=> d!44223 m!169161))

(declare-fun m!169163 () Bool)

(assert (=> b!141153 m!169163))

(assert (=> b!141153 m!167369))

(assert (=> b!141153 m!167369))

(declare-fun m!169165 () Bool)

(assert (=> b!141153 m!169165))

(assert (=> b!141155 m!167369))

(assert (=> b!141155 m!167369))

(assert (=> b!141155 m!169165))

(assert (=> d!43595 d!44223))

(declare-fun b!141159 () Bool)

(declare-fun e!92012 () Option!182)

(assert (=> b!141159 (= e!92012 None!180)))

(declare-fun b!141156 () Bool)

(declare-fun e!92011 () Option!182)

(assert (=> b!141156 (= e!92011 (Some!181 (_2!1360 (h!2348 lt!73489))))))

(declare-fun b!141157 () Bool)

(assert (=> b!141157 (= e!92011 e!92012)))

(declare-fun c!26521 () Bool)

(assert (=> b!141157 (= c!26521 (and ((_ is Cons!1741) lt!73489) (not (= (_1!1360 (h!2348 lt!73489)) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26520 () Bool)

(declare-fun d!44225 () Bool)

(assert (=> d!44225 (= c!26520 (and ((_ is Cons!1741) lt!73489) (= (_1!1360 (h!2348 lt!73489)) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44225 (= (getValueByKey!176 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92011)))

(declare-fun b!141158 () Bool)

(assert (=> b!141158 (= e!92012 (getValueByKey!176 (t!6329 lt!73489) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44225 c!26520) b!141156))

(assert (= (and d!44225 (not c!26520)) b!141157))

(assert (= (and b!141157 c!26521) b!141158))

(assert (= (and b!141157 (not c!26521)) b!141159))

(declare-fun m!169167 () Bool)

(assert (=> b!141158 m!169167))

(assert (=> d!43595 d!44225))

(declare-fun d!44227 () Bool)

(assert (=> d!44227 (= (getValueByKey!176 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74015 () Unit!4373)

(assert (=> d!44227 (= lt!74015 (choose!865 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!92013 () Bool)

(assert (=> d!44227 e!92013))

(declare-fun res!67415 () Bool)

(assert (=> d!44227 (=> (not res!67415) (not e!92013))))

(assert (=> d!44227 (= res!67415 (isStrictlySorted!325 lt!73489))))

(assert (=> d!44227 (= (lemmaContainsTupThenGetReturnValue!90 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74015)))

(declare-fun b!141160 () Bool)

(declare-fun res!67416 () Bool)

(assert (=> b!141160 (=> (not res!67416) (not e!92013))))

(assert (=> b!141160 (= res!67416 (containsKey!180 lt!73489 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141161 () Bool)

(assert (=> b!141161 (= e!92013 (contains!925 lt!73489 (tuple2!2699 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!44227 res!67415) b!141160))

(assert (= (and b!141160 res!67416) b!141161))

(assert (=> d!44227 m!167363))

(declare-fun m!169169 () Bool)

(assert (=> d!44227 m!169169))

(declare-fun m!169171 () Bool)

(assert (=> d!44227 m!169171))

(declare-fun m!169173 () Bool)

(assert (=> b!141160 m!169173))

(declare-fun m!169175 () Bool)

(assert (=> b!141161 m!169175))

(assert (=> d!43595 d!44227))

(declare-fun b!141162 () Bool)

(declare-fun e!92014 () List!1745)

(declare-fun call!15671 () List!1745)

(assert (=> b!141162 (= e!92014 call!15671)))

(declare-fun bm!15666 () Bool)

(declare-fun call!15669 () List!1745)

(assert (=> bm!15666 (= call!15671 call!15669)))

(declare-fun d!44229 () Bool)

(declare-fun e!92018 () Bool)

(assert (=> d!44229 e!92018))

(declare-fun res!67417 () Bool)

(assert (=> d!44229 (=> (not res!67417) (not e!92018))))

(declare-fun lt!74016 () List!1745)

(assert (=> d!44229 (= res!67417 (isStrictlySorted!325 lt!74016))))

(declare-fun e!92015 () List!1745)

(assert (=> d!44229 (= lt!74016 e!92015)))

(declare-fun c!26524 () Bool)

(assert (=> d!44229 (= c!26524 (and ((_ is Cons!1741) (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44229 (isStrictlySorted!325 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))))))

(assert (=> d!44229 (= (insertStrictlySorted!93 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74016)))

(declare-fun bm!15667 () Bool)

(declare-fun call!15670 () List!1745)

(assert (=> bm!15667 (= call!15669 call!15670)))

(declare-fun b!141163 () Bool)

(declare-fun e!92016 () List!1745)

(assert (=> b!141163 (= e!92015 e!92016)))

(declare-fun c!26523 () Bool)

(assert (=> b!141163 (= c!26523 (and ((_ is Cons!1741) (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (= (_1!1360 (h!2348 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141164 () Bool)

(assert (=> b!141164 (= e!92015 call!15670)))

(declare-fun e!92017 () List!1745)

(declare-fun bm!15668 () Bool)

(assert (=> bm!15668 (= call!15670 ($colon$colon!94 e!92017 (ite c!26524 (h!2348 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (tuple2!2699 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26522 () Bool)

(assert (=> bm!15668 (= c!26522 c!26524)))

(declare-fun b!141165 () Bool)

(declare-fun c!26525 () Bool)

(assert (=> b!141165 (= e!92017 (ite c!26523 (t!6329 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (ite c!26525 (Cons!1741 (h!2348 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (t!6329 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))))) Nil!1742)))))

(declare-fun b!141166 () Bool)

(assert (=> b!141166 (= e!92016 call!15669)))

(declare-fun b!141167 () Bool)

(assert (=> b!141167 (= e!92018 (contains!925 lt!74016 (tuple2!2699 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141168 () Bool)

(assert (=> b!141168 (= e!92017 (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141169 () Bool)

(assert (=> b!141169 (= e!92014 call!15671)))

(declare-fun b!141170 () Bool)

(assert (=> b!141170 (= c!26525 (and ((_ is Cons!1741) (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539)))) (bvsgt (_1!1360 (h!2348 (toList!888 (ite c!26163 call!15536 (ite c!26165 call!15534 call!15539))))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> b!141170 (= e!92016 e!92014)))

(declare-fun b!141171 () Bool)

(declare-fun res!67418 () Bool)

(assert (=> b!141171 (=> (not res!67418) (not e!92018))))

(assert (=> b!141171 (= res!67418 (containsKey!180 lt!74016 (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44229 c!26524) b!141164))

(assert (= (and d!44229 (not c!26524)) b!141163))

(assert (= (and b!141163 c!26523) b!141166))

(assert (= (and b!141163 (not c!26523)) b!141170))

(assert (= (and b!141170 c!26525) b!141169))

(assert (= (and b!141170 (not c!26525)) b!141162))

(assert (= (or b!141169 b!141162) bm!15666))

(assert (= (or b!141166 bm!15666) bm!15667))

(assert (= (or b!141164 bm!15667) bm!15668))

(assert (= (and bm!15668 c!26522) b!141168))

(assert (= (and bm!15668 (not c!26522)) b!141165))

(assert (= (and d!44229 res!67417) b!141171))

(assert (= (and b!141171 res!67418) b!141167))

(declare-fun m!169177 () Bool)

(assert (=> b!141168 m!169177))

(declare-fun m!169179 () Bool)

(assert (=> d!44229 m!169179))

(declare-fun m!169181 () Bool)

(assert (=> d!44229 m!169181))

(declare-fun m!169183 () Bool)

(assert (=> b!141171 m!169183))

(declare-fun m!169185 () Bool)

(assert (=> bm!15668 m!169185))

(declare-fun m!169187 () Bool)

(assert (=> b!141167 m!169187))

(assert (=> d!43595 d!44229))

(declare-fun b!141172 () Bool)

(declare-fun e!92019 () List!1745)

(declare-fun call!15674 () List!1745)

(assert (=> b!141172 (= e!92019 call!15674)))

(declare-fun bm!15669 () Bool)

(declare-fun call!15672 () List!1745)

(assert (=> bm!15669 (= call!15674 call!15672)))

(declare-fun d!44231 () Bool)

(declare-fun e!92023 () Bool)

(assert (=> d!44231 e!92023))

(declare-fun res!67419 () Bool)

(assert (=> d!44231 (=> (not res!67419) (not e!92023))))

(declare-fun lt!74017 () List!1745)

(assert (=> d!44231 (= res!67419 (isStrictlySorted!325 lt!74017))))

(declare-fun e!92020 () List!1745)

(assert (=> d!44231 (= lt!74017 e!92020)))

(declare-fun c!26528 () Bool)

(assert (=> d!44231 (= c!26528 (and ((_ is Cons!1741) (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!44231 (isStrictlySorted!325 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))))))

(assert (=> d!44231 (= (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74017)))

(declare-fun bm!15670 () Bool)

(declare-fun call!15673 () List!1745)

(assert (=> bm!15670 (= call!15672 call!15673)))

(declare-fun b!141173 () Bool)

(declare-fun e!92021 () List!1745)

(assert (=> b!141173 (= e!92020 e!92021)))

(declare-fun c!26527 () Bool)

(assert (=> b!141173 (= c!26527 (and ((_ is Cons!1741) (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!141174 () Bool)

(assert (=> b!141174 (= e!92020 call!15673)))

(declare-fun e!92022 () List!1745)

(declare-fun bm!15671 () Bool)

(assert (=> bm!15671 (= call!15673 ($colon$colon!94 e!92022 (ite c!26528 (h!2348 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun c!26526 () Bool)

(assert (=> bm!15671 (= c!26526 c!26528)))

(declare-fun c!26529 () Bool)

(declare-fun b!141175 () Bool)

(assert (=> b!141175 (= e!92022 (ite c!26527 (t!6329 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (ite c!26529 (Cons!1741 (h!2348 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (t!6329 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))))) Nil!1742)))))

(declare-fun b!141176 () Bool)

(assert (=> b!141176 (= e!92021 call!15672)))

(declare-fun b!141177 () Bool)

(assert (=> b!141177 (= e!92023 (contains!925 lt!74017 (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!141178 () Bool)

(assert (=> b!141178 (= e!92022 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141179 () Bool)

(assert (=> b!141179 (= e!92019 call!15674)))

(declare-fun b!141180 () Bool)

(assert (=> b!141180 (= c!26529 (and ((_ is Cons!1741) (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> b!141180 (= e!92021 e!92019)))

(declare-fun b!141181 () Bool)

(declare-fun res!67420 () Bool)

(assert (=> b!141181 (=> (not res!67420) (not e!92023))))

(assert (=> b!141181 (= res!67420 (containsKey!180 lt!74017 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44231 c!26528) b!141174))

(assert (= (and d!44231 (not c!26528)) b!141173))

(assert (= (and b!141173 c!26527) b!141176))

(assert (= (and b!141173 (not c!26527)) b!141180))

(assert (= (and b!141180 c!26529) b!141179))

(assert (= (and b!141180 (not c!26529)) b!141172))

(assert (= (or b!141179 b!141172) bm!15669))

(assert (= (or b!141176 bm!15669) bm!15670))

(assert (= (or b!141174 bm!15670) bm!15671))

(assert (= (and bm!15671 c!26526) b!141178))

(assert (= (and bm!15671 (not c!26526)) b!141175))

(assert (= (and d!44231 res!67419) b!141181))

(assert (= (and b!141181 res!67420) b!141177))

(declare-fun m!169189 () Bool)

(assert (=> b!141178 m!169189))

(declare-fun m!169191 () Bool)

(assert (=> d!44231 m!169191))

(declare-fun m!169193 () Bool)

(assert (=> d!44231 m!169193))

(declare-fun m!169195 () Bool)

(assert (=> b!141181 m!169195))

(declare-fun m!169197 () Bool)

(assert (=> bm!15671 m!169197))

(declare-fun m!169199 () Bool)

(assert (=> b!141177 m!169199))

(assert (=> b!140362 d!44231))

(declare-fun b!141185 () Bool)

(declare-fun e!92025 () Option!182)

(assert (=> b!141185 (= e!92025 None!180)))

(declare-fun b!141182 () Bool)

(declare-fun e!92024 () Option!182)

(assert (=> b!141182 (= e!92024 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73023))))))))

(declare-fun b!141183 () Bool)

(assert (=> b!141183 (= e!92024 e!92025)))

(declare-fun c!26531 () Bool)

(assert (=> b!141183 (= c!26531 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73023))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73023)))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!44233 () Bool)

(declare-fun c!26530 () Bool)

(assert (=> d!44233 (= c!26530 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73023))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73023)))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44233 (= (getValueByKey!176 (t!6329 (toList!888 lt!73023)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92024)))

(declare-fun b!141184 () Bool)

(assert (=> b!141184 (= e!92025 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73023))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44233 c!26530) b!141182))

(assert (= (and d!44233 (not c!26530)) b!141183))

(assert (= (and b!141183 c!26531) b!141184))

(assert (= (and b!141183 (not c!26531)) b!141185))

(declare-fun m!169201 () Bool)

(assert (=> b!141184 m!169201))

(assert (=> b!140726 d!44233))

(declare-fun b!141186 () Bool)

(declare-fun e!92026 () List!1745)

(declare-fun call!15677 () List!1745)

(assert (=> b!141186 (= e!92026 call!15677)))

(declare-fun bm!15672 () Bool)

(declare-fun call!15675 () List!1745)

(assert (=> bm!15672 (= call!15677 call!15675)))

(declare-fun d!44235 () Bool)

(declare-fun e!92030 () Bool)

(assert (=> d!44235 e!92030))

(declare-fun res!67421 () Bool)

(assert (=> d!44235 (=> (not res!67421) (not e!92030))))

(declare-fun lt!74018 () List!1745)

(assert (=> d!44235 (= res!67421 (isStrictlySorted!325 lt!74018))))

(declare-fun e!92027 () List!1745)

(assert (=> d!44235 (= lt!74018 e!92027)))

(declare-fun c!26534 () Bool)

(assert (=> d!44235 (= c!26534 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72905))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72905)))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44235 (isStrictlySorted!325 (t!6329 (toList!888 lt!72905)))))

(assert (=> d!44235 (= (insertStrictlySorted!93 (t!6329 (toList!888 lt!72905)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74018)))

(declare-fun bm!15673 () Bool)

(declare-fun call!15676 () List!1745)

(assert (=> bm!15673 (= call!15675 call!15676)))

(declare-fun b!141187 () Bool)

(declare-fun e!92028 () List!1745)

(assert (=> b!141187 (= e!92027 e!92028)))

(declare-fun c!26533 () Bool)

(assert (=> b!141187 (= c!26533 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72905))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72905)))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141188 () Bool)

(assert (=> b!141188 (= e!92027 call!15676)))

(declare-fun bm!15674 () Bool)

(declare-fun e!92029 () List!1745)

(assert (=> bm!15674 (= call!15676 ($colon$colon!94 e!92029 (ite c!26534 (h!2348 (t!6329 (toList!888 lt!72905))) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26532 () Bool)

(assert (=> bm!15674 (= c!26532 c!26534)))

(declare-fun c!26535 () Bool)

(declare-fun b!141189 () Bool)

(assert (=> b!141189 (= e!92029 (ite c!26533 (t!6329 (t!6329 (toList!888 lt!72905))) (ite c!26535 (Cons!1741 (h!2348 (t!6329 (toList!888 lt!72905))) (t!6329 (t!6329 (toList!888 lt!72905)))) Nil!1742)))))

(declare-fun b!141190 () Bool)

(assert (=> b!141190 (= e!92028 call!15675)))

(declare-fun b!141191 () Bool)

(assert (=> b!141191 (= e!92030 (contains!925 lt!74018 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141192 () Bool)

(assert (=> b!141192 (= e!92029 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 lt!72905))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!141193 () Bool)

(assert (=> b!141193 (= e!92026 call!15677)))

(declare-fun b!141194 () Bool)

(assert (=> b!141194 (= c!26535 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72905))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72905)))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!141194 (= e!92028 e!92026)))

(declare-fun b!141195 () Bool)

(declare-fun res!67422 () Bool)

(assert (=> b!141195 (=> (not res!67422) (not e!92030))))

(assert (=> b!141195 (= res!67422 (containsKey!180 lt!74018 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44235 c!26534) b!141188))

(assert (= (and d!44235 (not c!26534)) b!141187))

(assert (= (and b!141187 c!26533) b!141190))

(assert (= (and b!141187 (not c!26533)) b!141194))

(assert (= (and b!141194 c!26535) b!141193))

(assert (= (and b!141194 (not c!26535)) b!141186))

(assert (= (or b!141193 b!141186) bm!15672))

(assert (= (or b!141190 bm!15672) bm!15673))

(assert (= (or b!141188 bm!15673) bm!15674))

(assert (= (and bm!15674 c!26532) b!141192))

(assert (= (and bm!15674 (not c!26532)) b!141189))

(assert (= (and d!44235 res!67421) b!141195))

(assert (= (and b!141195 res!67422) b!141191))

(declare-fun m!169203 () Bool)

(assert (=> b!141192 m!169203))

(declare-fun m!169205 () Bool)

(assert (=> d!44235 m!169205))

(declare-fun m!169207 () Bool)

(assert (=> d!44235 m!169207))

(declare-fun m!169209 () Bool)

(assert (=> b!141195 m!169209))

(declare-fun m!169211 () Bool)

(assert (=> bm!15674 m!169211))

(declare-fun m!169213 () Bool)

(assert (=> b!141191 m!169213))

(assert (=> b!140627 d!44235))

(declare-fun d!44237 () Bool)

(assert (=> d!44237 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140497 d!44237))

(declare-fun d!44239 () Bool)

(declare-fun lt!74019 () Bool)

(assert (=> d!44239 (= lt!74019 (select (content!138 (t!6329 (toList!888 lt!73067))) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!92032 () Bool)

(assert (=> d!44239 (= lt!74019 e!92032)))

(declare-fun res!67423 () Bool)

(assert (=> d!44239 (=> (not res!67423) (not e!92032))))

(assert (=> d!44239 (= res!67423 ((_ is Cons!1741) (t!6329 (toList!888 lt!73067))))))

(assert (=> d!44239 (= (contains!925 (t!6329 (toList!888 lt!73067)) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!74019)))

(declare-fun b!141196 () Bool)

(declare-fun e!92031 () Bool)

(assert (=> b!141196 (= e!92032 e!92031)))

(declare-fun res!67424 () Bool)

(assert (=> b!141196 (=> res!67424 e!92031)))

(assert (=> b!141196 (= res!67424 (= (h!2348 (t!6329 (toList!888 lt!73067))) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!141197 () Bool)

(assert (=> b!141197 (= e!92031 (contains!925 (t!6329 (t!6329 (toList!888 lt!73067))) (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!44239 res!67423) b!141196))

(assert (= (and b!141196 (not res!67424)) b!141197))

(declare-fun m!169215 () Bool)

(assert (=> d!44239 m!169215))

(declare-fun m!169217 () Bool)

(assert (=> d!44239 m!169217))

(declare-fun m!169219 () Bool)

(assert (=> b!141197 m!169219))

(assert (=> b!140599 d!44239))

(declare-fun d!44241 () Bool)

(declare-fun e!92033 () Bool)

(assert (=> d!44241 e!92033))

(declare-fun res!67425 () Bool)

(assert (=> d!44241 (=> (not res!67425) (not e!92033))))

(declare-fun lt!74023 () ListLongMap!1745)

(assert (=> d!44241 (= res!67425 (contains!923 lt!74023 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74020 () List!1745)

(assert (=> d!44241 (= lt!74023 (ListLongMap!1746 lt!74020))))

(declare-fun lt!74021 () Unit!4373)

(declare-fun lt!74022 () Unit!4373)

(assert (=> d!44241 (= lt!74021 lt!74022)))

(assert (=> d!44241 (= (getValueByKey!176 lt!74020 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44241 (= lt!74022 (lemmaContainsTupThenGetReturnValue!90 lt!74020 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44241 (= lt!74020 (insertStrictlySorted!93 (toList!888 call!15577) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44241 (= (+!179 call!15577 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74023)))

(declare-fun b!141198 () Bool)

(declare-fun res!67426 () Bool)

(assert (=> b!141198 (=> (not res!67426) (not e!92033))))

(assert (=> b!141198 (= res!67426 (= (getValueByKey!176 (toList!888 lt!74023) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141199 () Bool)

(assert (=> b!141199 (= e!92033 (contains!925 (toList!888 lt!74023) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44241 res!67425) b!141198))

(assert (= (and b!141198 res!67426) b!141199))

(declare-fun m!169221 () Bool)

(assert (=> d!44241 m!169221))

(declare-fun m!169223 () Bool)

(assert (=> d!44241 m!169223))

(declare-fun m!169225 () Bool)

(assert (=> d!44241 m!169225))

(declare-fun m!169227 () Bool)

(assert (=> d!44241 m!169227))

(declare-fun m!169229 () Bool)

(assert (=> b!141198 m!169229))

(declare-fun m!169231 () Bool)

(assert (=> b!141199 m!169231))

(assert (=> b!140234 d!44241))

(declare-fun d!44243 () Bool)

(declare-fun c!26536 () Bool)

(assert (=> d!44243 (= c!26536 ((_ is ValueCellFull!1122) (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!92034 () V!3555)

(assert (=> d!44243 (= (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92034)))

(declare-fun b!141200 () Bool)

(assert (=> b!141200 (= e!92034 (get!1529 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141201 () Bool)

(assert (=> b!141201 (= e!92034 (get!1530 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44243 c!26536) b!141200))

(assert (= (and d!44243 (not c!26536)) b!141201))

(assert (=> b!141200 m!167383))

(assert (=> b!141200 m!166027))

(declare-fun m!169233 () Bool)

(assert (=> b!141200 m!169233))

(assert (=> b!141201 m!167383))

(assert (=> b!141201 m!166027))

(declare-fun m!169235 () Bool)

(assert (=> b!141201 m!169235))

(assert (=> b!140234 d!44243))

(declare-fun d!44245 () Bool)

(assert (=> d!44245 (not (contains!923 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494)) lt!73493))))

(declare-fun lt!74024 () Unit!4373)

(assert (=> d!44245 (= lt!74024 (choose!866 lt!73498 lt!73497 lt!73494 lt!73493))))

(declare-fun e!92035 () Bool)

(assert (=> d!44245 e!92035))

(declare-fun res!67427 () Bool)

(assert (=> d!44245 (=> (not res!67427) (not e!92035))))

(assert (=> d!44245 (= res!67427 (not (contains!923 lt!73498 lt!73493)))))

(assert (=> d!44245 (= (addStillNotContains!64 lt!73498 lt!73497 lt!73494 lt!73493) lt!74024)))

(declare-fun b!141202 () Bool)

(assert (=> b!141202 (= e!92035 (not (= lt!73497 lt!73493)))))

(assert (= (and d!44245 res!67427) b!141202))

(assert (=> d!44245 m!167379))

(assert (=> d!44245 m!167379))

(assert (=> d!44245 m!167381))

(declare-fun m!169237 () Bool)

(assert (=> d!44245 m!169237))

(declare-fun m!169239 () Bool)

(assert (=> d!44245 m!169239))

(assert (=> b!140234 d!44245))

(declare-fun d!44247 () Bool)

(declare-fun e!92036 () Bool)

(assert (=> d!44247 e!92036))

(declare-fun res!67428 () Bool)

(assert (=> d!44247 (=> res!67428 e!92036)))

(declare-fun lt!74027 () Bool)

(assert (=> d!44247 (= res!67428 (not lt!74027))))

(declare-fun lt!74025 () Bool)

(assert (=> d!44247 (= lt!74027 lt!74025)))

(declare-fun lt!74026 () Unit!4373)

(declare-fun e!92037 () Unit!4373)

(assert (=> d!44247 (= lt!74026 e!92037)))

(declare-fun c!26537 () Bool)

(assert (=> d!44247 (= c!26537 lt!74025)))

(assert (=> d!44247 (= lt!74025 (containsKey!180 (toList!888 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494))) lt!73493))))

(assert (=> d!44247 (= (contains!923 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494)) lt!73493) lt!74027)))

(declare-fun b!141203 () Bool)

(declare-fun lt!74028 () Unit!4373)

(assert (=> b!141203 (= e!92037 lt!74028)))

(assert (=> b!141203 (= lt!74028 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494))) lt!73493))))

(assert (=> b!141203 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494))) lt!73493))))

(declare-fun b!141204 () Bool)

(declare-fun Unit!4451 () Unit!4373)

(assert (=> b!141204 (= e!92037 Unit!4451)))

(declare-fun b!141205 () Bool)

(assert (=> b!141205 (= e!92036 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494))) lt!73493)))))

(assert (= (and d!44247 c!26537) b!141203))

(assert (= (and d!44247 (not c!26537)) b!141204))

(assert (= (and d!44247 (not res!67428)) b!141205))

(declare-fun m!169241 () Bool)

(assert (=> d!44247 m!169241))

(declare-fun m!169243 () Bool)

(assert (=> b!141203 m!169243))

(declare-fun m!169245 () Bool)

(assert (=> b!141203 m!169245))

(assert (=> b!141203 m!169245))

(declare-fun m!169247 () Bool)

(assert (=> b!141203 m!169247))

(assert (=> b!141205 m!169245))

(assert (=> b!141205 m!169245))

(assert (=> b!141205 m!169247))

(assert (=> b!140234 d!44247))

(declare-fun d!44249 () Bool)

(declare-fun e!92038 () Bool)

(assert (=> d!44249 e!92038))

(declare-fun res!67429 () Bool)

(assert (=> d!44249 (=> (not res!67429) (not e!92038))))

(declare-fun lt!74032 () ListLongMap!1745)

(assert (=> d!44249 (= res!67429 (contains!923 lt!74032 (_1!1360 (tuple2!2699 lt!73497 lt!73494))))))

(declare-fun lt!74029 () List!1745)

(assert (=> d!44249 (= lt!74032 (ListLongMap!1746 lt!74029))))

(declare-fun lt!74030 () Unit!4373)

(declare-fun lt!74031 () Unit!4373)

(assert (=> d!44249 (= lt!74030 lt!74031)))

(assert (=> d!44249 (= (getValueByKey!176 lt!74029 (_1!1360 (tuple2!2699 lt!73497 lt!73494))) (Some!181 (_2!1360 (tuple2!2699 lt!73497 lt!73494))))))

(assert (=> d!44249 (= lt!74031 (lemmaContainsTupThenGetReturnValue!90 lt!74029 (_1!1360 (tuple2!2699 lt!73497 lt!73494)) (_2!1360 (tuple2!2699 lt!73497 lt!73494))))))

(assert (=> d!44249 (= lt!74029 (insertStrictlySorted!93 (toList!888 lt!73498) (_1!1360 (tuple2!2699 lt!73497 lt!73494)) (_2!1360 (tuple2!2699 lt!73497 lt!73494))))))

(assert (=> d!44249 (= (+!179 lt!73498 (tuple2!2699 lt!73497 lt!73494)) lt!74032)))

(declare-fun b!141206 () Bool)

(declare-fun res!67430 () Bool)

(assert (=> b!141206 (=> (not res!67430) (not e!92038))))

(assert (=> b!141206 (= res!67430 (= (getValueByKey!176 (toList!888 lt!74032) (_1!1360 (tuple2!2699 lt!73497 lt!73494))) (Some!181 (_2!1360 (tuple2!2699 lt!73497 lt!73494)))))))

(declare-fun b!141207 () Bool)

(assert (=> b!141207 (= e!92038 (contains!925 (toList!888 lt!74032) (tuple2!2699 lt!73497 lt!73494)))))

(assert (= (and d!44249 res!67429) b!141206))

(assert (= (and b!141206 res!67430) b!141207))

(declare-fun m!169249 () Bool)

(assert (=> d!44249 m!169249))

(declare-fun m!169251 () Bool)

(assert (=> d!44249 m!169251))

(declare-fun m!169253 () Bool)

(assert (=> d!44249 m!169253))

(declare-fun m!169255 () Bool)

(assert (=> d!44249 m!169255))

(declare-fun m!169257 () Bool)

(assert (=> b!141206 m!169257))

(declare-fun m!169259 () Bool)

(assert (=> b!141207 m!169259))

(assert (=> b!140234 d!44249))

(assert (=> d!43493 d!43519))

(declare-fun d!44251 () Bool)

(declare-fun e!92039 () Bool)

(assert (=> d!44251 e!92039))

(declare-fun res!67431 () Bool)

(assert (=> d!44251 (=> res!67431 e!92039)))

(declare-fun lt!74035 () Bool)

(assert (=> d!44251 (= res!67431 (not lt!74035))))

(declare-fun lt!74033 () Bool)

(assert (=> d!44251 (= lt!74035 lt!74033)))

(declare-fun lt!74034 () Unit!4373)

(declare-fun e!92040 () Unit!4373)

(assert (=> d!44251 (= lt!74034 e!92040)))

(declare-fun c!26538 () Bool)

(assert (=> d!44251 (= c!26538 lt!74033)))

(assert (=> d!44251 (= lt!74033 (containsKey!180 (toList!888 lt!73140) lt!73145))))

(assert (=> d!44251 (= (contains!923 lt!73140 lt!73145) lt!74035)))

(declare-fun b!141208 () Bool)

(declare-fun lt!74036 () Unit!4373)

(assert (=> b!141208 (= e!92040 lt!74036)))

(assert (=> b!141208 (= lt!74036 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73140) lt!73145))))

(assert (=> b!141208 (isDefined!129 (getValueByKey!176 (toList!888 lt!73140) lt!73145))))

(declare-fun b!141209 () Bool)

(declare-fun Unit!4452 () Unit!4373)

(assert (=> b!141209 (= e!92040 Unit!4452)))

(declare-fun b!141210 () Bool)

(assert (=> b!141210 (= e!92039 (isDefined!129 (getValueByKey!176 (toList!888 lt!73140) lt!73145)))))

(assert (= (and d!44251 c!26538) b!141208))

(assert (= (and d!44251 (not c!26538)) b!141209))

(assert (= (and d!44251 (not res!67431)) b!141210))

(declare-fun m!169261 () Bool)

(assert (=> d!44251 m!169261))

(declare-fun m!169263 () Bool)

(assert (=> b!141208 m!169263))

(assert (=> b!141208 m!167155))

(assert (=> b!141208 m!167155))

(declare-fun m!169265 () Bool)

(assert (=> b!141208 m!169265))

(assert (=> b!141210 m!167155))

(assert (=> b!141210 m!167155))

(assert (=> b!141210 m!169265))

(assert (=> d!43493 d!44251))

(assert (=> d!43493 d!43513))

(declare-fun d!44253 () Bool)

(assert (=> d!44253 (= (apply!120 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) lt!73145) (apply!120 lt!73140 lt!73145))))

(assert (=> d!44253 true))

(declare-fun _$34!1004 () Unit!4373)

(assert (=> d!44253 (= (choose!856 lt!73140 lt!73141 (minValue!2790 newMap!16) lt!73145) _$34!1004)))

(declare-fun bs!5909 () Bool)

(assert (= bs!5909 d!44253))

(assert (=> bs!5909 m!166557))

(assert (=> bs!5909 m!166557))

(assert (=> bs!5909 m!166559))

(assert (=> bs!5909 m!166569))

(assert (=> d!43493 d!44253))

(assert (=> d!43493 d!43497))

(assert (=> b!140527 d!44053))

(declare-fun d!44255 () Bool)

(declare-fun res!67432 () Bool)

(declare-fun e!92041 () Bool)

(assert (=> d!44255 (=> res!67432 e!92041)))

(assert (=> d!44255 (= res!67432 (and ((_ is Cons!1741) lt!73016) (= (_1!1360 (h!2348 lt!73016)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44255 (= (containsKey!180 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92041)))

(declare-fun b!141211 () Bool)

(declare-fun e!92042 () Bool)

(assert (=> b!141211 (= e!92041 e!92042)))

(declare-fun res!67433 () Bool)

(assert (=> b!141211 (=> (not res!67433) (not e!92042))))

(assert (=> b!141211 (= res!67433 (and (or (not ((_ is Cons!1741) lt!73016)) (bvsle (_1!1360 (h!2348 lt!73016)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1741) lt!73016) (bvslt (_1!1360 (h!2348 lt!73016)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141212 () Bool)

(assert (=> b!141212 (= e!92042 (containsKey!180 (t!6329 lt!73016) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44255 (not res!67432)) b!141211))

(assert (= (and b!141211 res!67433) b!141212))

(declare-fun m!169267 () Bool)

(assert (=> b!141212 m!169267))

(assert (=> b!140124 d!44255))

(declare-fun d!44257 () Bool)

(assert (=> d!44257 (= (get!1531 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43769 d!44257))

(declare-fun b!141216 () Bool)

(declare-fun e!92044 () Option!182)

(assert (=> b!141216 (= e!92044 None!180)))

(declare-fun b!141213 () Bool)

(declare-fun e!92043 () Option!182)

(assert (=> b!141213 (= e!92043 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73306)))))))

(declare-fun b!141214 () Bool)

(assert (=> b!141214 (= e!92043 e!92044)))

(declare-fun c!26540 () Bool)

(assert (=> b!141214 (= c!26540 (and ((_ is Cons!1741) (toList!888 lt!73306)) (not (= (_1!1360 (h!2348 (toList!888 lt!73306))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44259 () Bool)

(declare-fun c!26539 () Bool)

(assert (=> d!44259 (= c!26539 (and ((_ is Cons!1741) (toList!888 lt!73306)) (= (_1!1360 (h!2348 (toList!888 lt!73306))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44259 (= (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000) e!92043)))

(declare-fun b!141215 () Bool)

(assert (=> b!141215 (= e!92044 (getValueByKey!176 (t!6329 (toList!888 lt!73306)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44259 c!26539) b!141213))

(assert (= (and d!44259 (not c!26539)) b!141214))

(assert (= (and b!141214 c!26540) b!141215))

(assert (= (and b!141214 (not c!26540)) b!141216))

(declare-fun m!169269 () Bool)

(assert (=> b!141215 m!169269))

(assert (=> d!43769 d!44259))

(declare-fun lt!74037 () Bool)

(declare-fun d!44261 () Bool)

(assert (=> d!44261 (= lt!74037 (select (content!138 (toList!888 lt!73417)) (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))

(declare-fun e!92046 () Bool)

(assert (=> d!44261 (= lt!74037 e!92046)))

(declare-fun res!67434 () Bool)

(assert (=> d!44261 (=> (not res!67434) (not e!92046))))

(assert (=> d!44261 (= res!67434 ((_ is Cons!1741) (toList!888 lt!73417)))))

(assert (=> d!44261 (= (contains!925 (toList!888 lt!73417) (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) lt!74037)))

(declare-fun b!141217 () Bool)

(declare-fun e!92045 () Bool)

(assert (=> b!141217 (= e!92046 e!92045)))

(declare-fun res!67435 () Bool)

(assert (=> b!141217 (=> res!67435 e!92045)))

(assert (=> b!141217 (= res!67435 (= (h!2348 (toList!888 lt!73417)) (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))

(declare-fun b!141218 () Bool)

(assert (=> b!141218 (= e!92045 (contains!925 (t!6329 (toList!888 lt!73417)) (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))

(assert (= (and d!44261 res!67434) b!141217))

(assert (= (and b!141217 (not res!67435)) b!141218))

(declare-fun m!169271 () Bool)

(assert (=> d!44261 m!169271))

(declare-fun m!169273 () Bool)

(assert (=> d!44261 m!169273))

(declare-fun m!169275 () Bool)

(assert (=> b!141218 m!169275))

(assert (=> b!140100 d!44261))

(declare-fun lt!74038 () Bool)

(declare-fun d!44263 () Bool)

(assert (=> d!44263 (= lt!74038 (select (content!138 (toList!888 lt!73891)) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92048 () Bool)

(assert (=> d!44263 (= lt!74038 e!92048)))

(declare-fun res!67436 () Bool)

(assert (=> d!44263 (=> (not res!67436) (not e!92048))))

(assert (=> d!44263 (= res!67436 ((_ is Cons!1741) (toList!888 lt!73891)))))

(assert (=> d!44263 (= (contains!925 (toList!888 lt!73891) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74038)))

(declare-fun b!141219 () Bool)

(declare-fun e!92047 () Bool)

(assert (=> b!141219 (= e!92048 e!92047)))

(declare-fun res!67437 () Bool)

(assert (=> b!141219 (=> res!67437 e!92047)))

(assert (=> b!141219 (= res!67437 (= (h!2348 (toList!888 lt!73891)) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141220 () Bool)

(assert (=> b!141220 (= e!92047 (contains!925 (t!6329 (toList!888 lt!73891)) (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44263 res!67436) b!141219))

(assert (= (and b!141219 (not res!67437)) b!141220))

(declare-fun m!169277 () Bool)

(assert (=> d!44263 m!169277))

(declare-fun m!169279 () Bool)

(assert (=> d!44263 m!169279))

(declare-fun m!169281 () Bool)

(assert (=> b!141220 m!169281))

(assert (=> b!140811 d!44263))

(declare-fun d!44265 () Bool)

(assert (=> d!44265 (= (get!1531 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3284 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43891 d!44265))

(declare-fun b!141224 () Bool)

(declare-fun e!92050 () Option!182)

(assert (=> b!141224 (= e!92050 None!180)))

(declare-fun b!141221 () Bool)

(declare-fun e!92049 () Option!182)

(assert (=> b!141221 (= e!92049 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73093)))))))

(declare-fun b!141222 () Bool)

(assert (=> b!141222 (= e!92049 e!92050)))

(declare-fun c!26542 () Bool)

(assert (=> b!141222 (= c!26542 (and ((_ is Cons!1741) (toList!888 lt!73093)) (not (= (_1!1360 (h!2348 (toList!888 lt!73093))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!44267 () Bool)

(declare-fun c!26541 () Bool)

(assert (=> d!44267 (= c!26541 (and ((_ is Cons!1741) (toList!888 lt!73093)) (= (_1!1360 (h!2348 (toList!888 lt!73093))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44267 (= (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92049)))

(declare-fun b!141223 () Bool)

(assert (=> b!141223 (= e!92050 (getValueByKey!176 (t!6329 (toList!888 lt!73093)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44267 c!26541) b!141221))

(assert (= (and d!44267 (not c!26541)) b!141222))

(assert (= (and b!141222 c!26542) b!141223))

(assert (= (and b!141222 (not c!26542)) b!141224))

(assert (=> b!141223 m!166385))

(declare-fun m!169283 () Bool)

(assert (=> b!141223 m!169283))

(assert (=> d!43891 d!44267))

(declare-fun d!44269 () Bool)

(declare-fun e!92051 () Bool)

(assert (=> d!44269 e!92051))

(declare-fun res!67438 () Bool)

(assert (=> d!44269 (=> res!67438 e!92051)))

(declare-fun lt!74041 () Bool)

(assert (=> d!44269 (= res!67438 (not lt!74041))))

(declare-fun lt!74039 () Bool)

(assert (=> d!44269 (= lt!74041 lt!74039)))

(declare-fun lt!74040 () Unit!4373)

(declare-fun e!92052 () Unit!4373)

(assert (=> d!44269 (= lt!74040 e!92052)))

(declare-fun c!26543 () Bool)

(assert (=> d!44269 (= c!26543 lt!74039)))

(assert (=> d!44269 (= lt!74039 (containsKey!180 (toList!888 lt!73729) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44269 (= (contains!923 lt!73729 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74041)))

(declare-fun b!141225 () Bool)

(declare-fun lt!74042 () Unit!4373)

(assert (=> b!141225 (= e!92052 lt!74042)))

(assert (=> b!141225 (= lt!74042 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73729) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141225 (isDefined!129 (getValueByKey!176 (toList!888 lt!73729) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141226 () Bool)

(declare-fun Unit!4453 () Unit!4373)

(assert (=> b!141226 (= e!92052 Unit!4453)))

(declare-fun b!141227 () Bool)

(assert (=> b!141227 (= e!92051 (isDefined!129 (getValueByKey!176 (toList!888 lt!73729) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44269 c!26543) b!141225))

(assert (= (and d!44269 (not c!26543)) b!141226))

(assert (= (and d!44269 (not res!67438)) b!141227))

(declare-fun m!169285 () Bool)

(assert (=> d!44269 m!169285))

(declare-fun m!169287 () Bool)

(assert (=> b!141225 m!169287))

(declare-fun m!169289 () Bool)

(assert (=> b!141225 m!169289))

(assert (=> b!141225 m!169289))

(declare-fun m!169291 () Bool)

(assert (=> b!141225 m!169291))

(assert (=> b!141227 m!169289))

(assert (=> b!141227 m!169289))

(assert (=> b!141227 m!169291))

(assert (=> b!140581 d!44269))

(declare-fun d!44271 () Bool)

(assert (=> d!44271 (= (apply!120 lt!73406 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73406) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5910 () Bool)

(assert (= bs!5910 d!44271))

(assert (=> bs!5910 m!166385))

(declare-fun m!169293 () Bool)

(assert (=> bs!5910 m!169293))

(assert (=> bs!5910 m!169293))

(declare-fun m!169295 () Bool)

(assert (=> bs!5910 m!169295))

(assert (=> b!140095 d!44271))

(assert (=> b!140095 d!43973))

(declare-fun d!44273 () Bool)

(assert (=> d!44273 (arrayContainsKey!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 #b00000000000000000000000000000000)))

(declare-fun lt!74043 () Unit!4373)

(assert (=> d!44273 (= lt!74043 (choose!13 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 #b00000000000000000000000000000000))))

(assert (=> d!44273 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44273 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 #b00000000000000000000000000000000) lt!74043)))

(declare-fun bs!5911 () Bool)

(assert (= bs!5911 d!44273))

(assert (=> bs!5911 m!167793))

(declare-fun m!169297 () Bool)

(assert (=> bs!5911 m!169297))

(assert (=> b!140416 d!44273))

(declare-fun d!44275 () Bool)

(declare-fun res!67439 () Bool)

(declare-fun e!92053 () Bool)

(assert (=> d!44275 (=> res!67439 e!92053)))

(assert (=> d!44275 (= res!67439 (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) lt!73621))))

(assert (=> d!44275 (= (arrayContainsKey!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 #b00000000000000000000000000000000) e!92053)))

(declare-fun b!141228 () Bool)

(declare-fun e!92054 () Bool)

(assert (=> b!141228 (= e!92053 e!92054)))

(declare-fun res!67440 () Bool)

(assert (=> b!141228 (=> (not res!67440) (not e!92054))))

(assert (=> b!141228 (= res!67440 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun b!141229 () Bool)

(assert (=> b!141229 (= e!92054 (arrayContainsKey!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73621 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44275 (not res!67439)) b!141228))

(assert (= (and b!141228 res!67440) b!141229))

(assert (=> d!44275 m!167709))

(declare-fun m!169299 () Bool)

(assert (=> b!141229 m!169299))

(assert (=> b!140416 d!44275))

(declare-fun b!141230 () Bool)

(declare-fun c!26544 () Bool)

(declare-fun lt!74046 () (_ BitVec 64))

(assert (=> b!141230 (= c!26544 (= lt!74046 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92057 () SeekEntryResult!279)

(declare-fun e!92055 () SeekEntryResult!279)

(assert (=> b!141230 (= e!92057 e!92055)))

(declare-fun d!44277 () Bool)

(declare-fun lt!74045 () SeekEntryResult!279)

(assert (=> d!44277 (and (or ((_ is Undefined!279) lt!74045) (not ((_ is Found!279) lt!74045)) (and (bvsge (index!3280 lt!74045) #b00000000000000000000000000000000) (bvslt (index!3280 lt!74045) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))) (or ((_ is Undefined!279) lt!74045) ((_ is Found!279) lt!74045) (not ((_ is MissingZero!279) lt!74045)) (and (bvsge (index!3279 lt!74045) #b00000000000000000000000000000000) (bvslt (index!3279 lt!74045) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))) (or ((_ is Undefined!279) lt!74045) ((_ is Found!279) lt!74045) ((_ is MissingZero!279) lt!74045) (not ((_ is MissingVacant!279) lt!74045)) (and (bvsge (index!3282 lt!74045) #b00000000000000000000000000000000) (bvslt (index!3282 lt!74045) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))) (or ((_ is Undefined!279) lt!74045) (ite ((_ is Found!279) lt!74045) (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (index!3280 lt!74045)) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!279) lt!74045) (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (index!3279 lt!74045)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!74045) (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (index!3282 lt!74045)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92056 () SeekEntryResult!279)

(assert (=> d!44277 (= lt!74045 e!92056)))

(declare-fun c!26546 () Bool)

(declare-fun lt!74044 () SeekEntryResult!279)

(assert (=> d!44277 (= c!26546 (and ((_ is Intermediate!279) lt!74044) (undefined!1091 lt!74044)))))

(assert (=> d!44277 (= lt!74044 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(assert (=> d!44277 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44277 (= (seekEntryOrOpen!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) lt!74045)))

(declare-fun b!141231 () Bool)

(assert (=> b!141231 (= e!92056 Undefined!279)))

(declare-fun b!141232 () Bool)

(assert (=> b!141232 (= e!92057 (Found!279 (index!3281 lt!74044)))))

(declare-fun b!141233 () Bool)

(assert (=> b!141233 (= e!92056 e!92057)))

(assert (=> b!141233 (= lt!74046 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (index!3281 lt!74044)))))

(declare-fun c!26545 () Bool)

(assert (=> b!141233 (= c!26545 (= lt!74046 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141234 () Bool)

(assert (=> b!141234 (= e!92055 (seekKeyOrZeroReturnVacant!0 (x!16136 lt!74044) (index!3281 lt!74044) (index!3281 lt!74044) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(declare-fun b!141235 () Bool)

(assert (=> b!141235 (= e!92055 (MissingZero!279 (index!3281 lt!74044)))))

(assert (= (and d!44277 c!26546) b!141231))

(assert (= (and d!44277 (not c!26546)) b!141233))

(assert (= (and b!141233 c!26545) b!141232))

(assert (= (and b!141233 (not c!26545)) b!141230))

(assert (= (and b!141230 c!26544) b!141235))

(assert (= (and b!141230 (not c!26544)) b!141234))

(assert (=> d!44277 m!167709))

(declare-fun m!169301 () Bool)

(assert (=> d!44277 m!169301))

(assert (=> d!44277 m!166429))

(declare-fun m!169303 () Bool)

(assert (=> d!44277 m!169303))

(declare-fun m!169305 () Bool)

(assert (=> d!44277 m!169305))

(declare-fun m!169307 () Bool)

(assert (=> d!44277 m!169307))

(assert (=> d!44277 m!169301))

(assert (=> d!44277 m!167709))

(declare-fun m!169309 () Bool)

(assert (=> d!44277 m!169309))

(declare-fun m!169311 () Bool)

(assert (=> b!141233 m!169311))

(assert (=> b!141234 m!167709))

(declare-fun m!169313 () Bool)

(assert (=> b!141234 m!169313))

(assert (=> b!140416 d!44277))

(declare-fun d!44279 () Bool)

(assert (=> d!44279 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73901 #b00000000000000000000000000000000)))

(declare-fun lt!74047 () Unit!4373)

(assert (=> d!44279 (= lt!74047 (choose!13 (_keys!4699 newMap!16) lt!73901 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!44279 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!44279 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73901 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!74047)))

(declare-fun bs!5912 () Bool)

(assert (= bs!5912 d!44279))

(assert (=> bs!5912 m!168651))

(declare-fun m!169315 () Bool)

(assert (=> bs!5912 m!169315))

(assert (=> b!140817 d!44279))

(declare-fun d!44281 () Bool)

(declare-fun res!67441 () Bool)

(declare-fun e!92058 () Bool)

(assert (=> d!44281 (=> res!67441 e!92058)))

(assert (=> d!44281 (= res!67441 (= (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) lt!73901))))

(assert (=> d!44281 (= (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73901 #b00000000000000000000000000000000) e!92058)))

(declare-fun b!141236 () Bool)

(declare-fun e!92059 () Bool)

(assert (=> b!141236 (= e!92058 e!92059)))

(declare-fun res!67442 () Bool)

(assert (=> b!141236 (=> (not res!67442) (not e!92059))))

(assert (=> b!141236 (= res!67442 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141237 () Bool)

(assert (=> b!141237 (= e!92059 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73901 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44281 (not res!67441)) b!141236))

(assert (= (and b!141236 res!67442) b!141237))

(assert (=> d!44281 m!166385))

(declare-fun m!169317 () Bool)

(assert (=> b!141237 m!169317))

(assert (=> b!140817 d!44281))

(declare-fun b!141238 () Bool)

(declare-fun c!26547 () Bool)

(declare-fun lt!74050 () (_ BitVec 64))

(assert (=> b!141238 (= c!26547 (= lt!74050 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92062 () SeekEntryResult!279)

(declare-fun e!92060 () SeekEntryResult!279)

(assert (=> b!141238 (= e!92062 e!92060)))

(declare-fun d!44283 () Bool)

(declare-fun lt!74049 () SeekEntryResult!279)

(assert (=> d!44283 (and (or ((_ is Undefined!279) lt!74049) (not ((_ is Found!279) lt!74049)) (and (bvsge (index!3280 lt!74049) #b00000000000000000000000000000000) (bvslt (index!3280 lt!74049) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74049) ((_ is Found!279) lt!74049) (not ((_ is MissingZero!279) lt!74049)) (and (bvsge (index!3279 lt!74049) #b00000000000000000000000000000000) (bvslt (index!3279 lt!74049) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74049) ((_ is Found!279) lt!74049) ((_ is MissingZero!279) lt!74049) (not ((_ is MissingVacant!279) lt!74049)) (and (bvsge (index!3282 lt!74049) #b00000000000000000000000000000000) (bvslt (index!3282 lt!74049) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74049) (ite ((_ is Found!279) lt!74049) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!74049)) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!279) lt!74049) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3279 lt!74049)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!74049) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!74049)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92061 () SeekEntryResult!279)

(assert (=> d!44283 (= lt!74049 e!92061)))

(declare-fun c!26549 () Bool)

(declare-fun lt!74048 () SeekEntryResult!279)

(assert (=> d!44283 (= c!26549 (and ((_ is Intermediate!279) lt!74048) (undefined!1091 lt!74048)))))

(assert (=> d!44283 (= lt!74048 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!44283 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44283 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74049)))

(declare-fun b!141239 () Bool)

(assert (=> b!141239 (= e!92061 Undefined!279)))

(declare-fun b!141240 () Bool)

(assert (=> b!141240 (= e!92062 (Found!279 (index!3281 lt!74048)))))

(declare-fun b!141241 () Bool)

(assert (=> b!141241 (= e!92061 e!92062)))

(assert (=> b!141241 (= lt!74050 (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74048)))))

(declare-fun c!26548 () Bool)

(assert (=> b!141241 (= c!26548 (= lt!74050 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141242 () Bool)

(assert (=> b!141242 (= e!92060 (seekKeyOrZeroReturnVacant!0 (x!16136 lt!74048) (index!3281 lt!74048) (index!3281 lt!74048) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!141243 () Bool)

(assert (=> b!141243 (= e!92060 (MissingZero!279 (index!3281 lt!74048)))))

(assert (= (and d!44283 c!26549) b!141239))

(assert (= (and d!44283 (not c!26549)) b!141241))

(assert (= (and b!141241 c!26548) b!141240))

(assert (= (and b!141241 (not c!26548)) b!141238))

(assert (= (and b!141238 c!26547) b!141243))

(assert (= (and b!141238 (not c!26547)) b!141242))

(assert (=> d!44283 m!167999))

(declare-fun m!169319 () Bool)

(assert (=> d!44283 m!169319))

(assert (=> d!44283 m!166429))

(declare-fun m!169321 () Bool)

(assert (=> d!44283 m!169321))

(declare-fun m!169323 () Bool)

(assert (=> d!44283 m!169323))

(declare-fun m!169325 () Bool)

(assert (=> d!44283 m!169325))

(assert (=> d!44283 m!169319))

(assert (=> d!44283 m!167999))

(declare-fun m!169327 () Bool)

(assert (=> d!44283 m!169327))

(declare-fun m!169329 () Bool)

(assert (=> b!141241 m!169329))

(assert (=> b!141242 m!167999))

(declare-fun m!169331 () Bool)

(assert (=> b!141242 m!169331))

(assert (=> b!140817 d!44283))

(declare-fun b!141247 () Bool)

(declare-fun e!92064 () Option!182)

(assert (=> b!141247 (= e!92064 None!180)))

(declare-fun b!141244 () Bool)

(declare-fun e!92063 () Option!182)

(assert (=> b!141244 (= e!92063 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))))

(declare-fun b!141245 () Bool)

(assert (=> b!141245 (= e!92063 e!92064)))

(declare-fun c!26551 () Bool)

(assert (=> b!141245 (= c!26551 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72894))))))

(declare-fun d!44285 () Bool)

(declare-fun c!26550 () Bool)

(assert (=> d!44285 (= c!26550 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72894)))))

(assert (=> d!44285 (= (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72894) e!92063)))

(declare-fun b!141246 () Bool)

(assert (=> b!141246 (= e!92064 (getValueByKey!176 (t!6329 (t!6329 (toList!888 (+!179 lt!72889 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72894))))

(assert (= (and d!44285 c!26550) b!141244))

(assert (= (and d!44285 (not c!26550)) b!141245))

(assert (= (and b!141245 c!26551) b!141246))

(assert (= (and b!141245 (not c!26551)) b!141247))

(declare-fun m!169333 () Bool)

(assert (=> b!141246 m!169333))

(assert (=> b!140678 d!44285))

(declare-fun d!44287 () Bool)

(declare-fun e!92065 () Bool)

(assert (=> d!44287 e!92065))

(declare-fun res!67443 () Bool)

(assert (=> d!44287 (=> res!67443 e!92065)))

(declare-fun lt!74053 () Bool)

(assert (=> d!44287 (= res!67443 (not lt!74053))))

(declare-fun lt!74051 () Bool)

(assert (=> d!44287 (= lt!74053 lt!74051)))

(declare-fun lt!74052 () Unit!4373)

(declare-fun e!92066 () Unit!4373)

(assert (=> d!44287 (= lt!74052 e!92066)))

(declare-fun c!26552 () Bool)

(assert (=> d!44287 (= c!26552 lt!74051)))

(assert (=> d!44287 (= lt!74051 (containsKey!180 (toList!888 lt!73824) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44287 (= (contains!923 lt!73824 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74053)))

(declare-fun b!141248 () Bool)

(declare-fun lt!74054 () Unit!4373)

(assert (=> b!141248 (= e!92066 lt!74054)))

(assert (=> b!141248 (= lt!74054 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73824) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141248 (isDefined!129 (getValueByKey!176 (toList!888 lt!73824) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141249 () Bool)

(declare-fun Unit!4454 () Unit!4373)

(assert (=> b!141249 (= e!92066 Unit!4454)))

(declare-fun b!141250 () Bool)

(assert (=> b!141250 (= e!92065 (isDefined!129 (getValueByKey!176 (toList!888 lt!73824) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44287 c!26552) b!141248))

(assert (= (and d!44287 (not c!26552)) b!141249))

(assert (= (and d!44287 (not res!67443)) b!141250))

(assert (=> d!44287 m!166385))

(declare-fun m!169335 () Bool)

(assert (=> d!44287 m!169335))

(assert (=> b!141248 m!166385))

(declare-fun m!169337 () Bool)

(assert (=> b!141248 m!169337))

(assert (=> b!141248 m!166385))

(declare-fun m!169339 () Bool)

(assert (=> b!141248 m!169339))

(assert (=> b!141248 m!169339))

(declare-fun m!169341 () Bool)

(assert (=> b!141248 m!169341))

(assert (=> b!141250 m!166385))

(assert (=> b!141250 m!169339))

(assert (=> b!141250 m!169339))

(assert (=> b!141250 m!169341))

(assert (=> b!140715 d!44287))

(declare-fun d!44289 () Bool)

(assert (=> d!44289 (= (apply!120 lt!73378 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73378) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5913 () Bool)

(assert (= bs!5913 d!44289))

(declare-fun m!169343 () Bool)

(assert (=> bs!5913 m!169343))

(assert (=> bs!5913 m!169343))

(declare-fun m!169345 () Bool)

(assert (=> bs!5913 m!169345))

(assert (=> b!140037 d!44289))

(declare-fun d!44291 () Bool)

(declare-fun e!92067 () Bool)

(assert (=> d!44291 e!92067))

(declare-fun res!67444 () Bool)

(assert (=> d!44291 (=> res!67444 e!92067)))

(declare-fun lt!74057 () Bool)

(assert (=> d!44291 (= res!67444 (not lt!74057))))

(declare-fun lt!74055 () Bool)

(assert (=> d!44291 (= lt!74057 lt!74055)))

(declare-fun lt!74056 () Unit!4373)

(declare-fun e!92068 () Unit!4373)

(assert (=> d!44291 (= lt!74056 e!92068)))

(declare-fun c!26553 () Bool)

(assert (=> d!44291 (= c!26553 lt!74055)))

(assert (=> d!44291 (= lt!74055 (containsKey!180 (toList!888 lt!73459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44291 (= (contains!923 lt!73459 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74057)))

(declare-fun b!141251 () Bool)

(declare-fun lt!74058 () Unit!4373)

(assert (=> b!141251 (= e!92068 lt!74058)))

(assert (=> b!141251 (= lt!74058 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!141251 (isDefined!129 (getValueByKey!176 (toList!888 lt!73459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141252 () Bool)

(declare-fun Unit!4455 () Unit!4373)

(assert (=> b!141252 (= e!92068 Unit!4455)))

(declare-fun b!141253 () Bool)

(assert (=> b!141253 (= e!92067 (isDefined!129 (getValueByKey!176 (toList!888 lt!73459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44291 c!26553) b!141251))

(assert (= (and d!44291 (not c!26553)) b!141252))

(assert (= (and d!44291 (not res!67444)) b!141253))

(declare-fun m!169347 () Bool)

(assert (=> d!44291 m!169347))

(declare-fun m!169349 () Bool)

(assert (=> b!141251 m!169349))

(assert (=> b!141251 m!167291))

(assert (=> b!141251 m!167291))

(declare-fun m!169351 () Bool)

(assert (=> b!141251 m!169351))

(assert (=> b!141253 m!167291))

(assert (=> b!141253 m!167291))

(assert (=> b!141253 m!169351))

(assert (=> d!43583 d!44291))

(declare-fun b!141257 () Bool)

(declare-fun e!92070 () Option!182)

(assert (=> b!141257 (= e!92070 None!180)))

(declare-fun b!141254 () Bool)

(declare-fun e!92069 () Option!182)

(assert (=> b!141254 (= e!92069 (Some!181 (_2!1360 (h!2348 lt!73456))))))

(declare-fun b!141255 () Bool)

(assert (=> b!141255 (= e!92069 e!92070)))

(declare-fun c!26555 () Bool)

(assert (=> b!141255 (= c!26555 (and ((_ is Cons!1741) lt!73456) (not (= (_1!1360 (h!2348 lt!73456)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26554 () Bool)

(declare-fun d!44293 () Bool)

(assert (=> d!44293 (= c!26554 (and ((_ is Cons!1741) lt!73456) (= (_1!1360 (h!2348 lt!73456)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44293 (= (getValueByKey!176 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92069)))

(declare-fun b!141256 () Bool)

(assert (=> b!141256 (= e!92070 (getValueByKey!176 (t!6329 lt!73456) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44293 c!26554) b!141254))

(assert (= (and d!44293 (not c!26554)) b!141255))

(assert (= (and b!141255 c!26555) b!141256))

(assert (= (and b!141255 (not c!26555)) b!141257))

(declare-fun m!169353 () Bool)

(assert (=> b!141256 m!169353))

(assert (=> d!43583 d!44293))

(declare-fun d!44295 () Bool)

(assert (=> d!44295 (= (getValueByKey!176 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74059 () Unit!4373)

(assert (=> d!44295 (= lt!74059 (choose!865 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92071 () Bool)

(assert (=> d!44295 e!92071))

(declare-fun res!67445 () Bool)

(assert (=> d!44295 (=> (not res!67445) (not e!92071))))

(assert (=> d!44295 (= res!67445 (isStrictlySorted!325 lt!73456))))

(assert (=> d!44295 (= (lemmaContainsTupThenGetReturnValue!90 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74059)))

(declare-fun b!141258 () Bool)

(declare-fun res!67446 () Bool)

(assert (=> b!141258 (=> (not res!67446) (not e!92071))))

(assert (=> b!141258 (= res!67446 (containsKey!180 lt!73456 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141259 () Bool)

(assert (=> b!141259 (= e!92071 (contains!925 lt!73456 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44295 res!67445) b!141258))

(assert (= (and b!141258 res!67446) b!141259))

(assert (=> d!44295 m!167285))

(declare-fun m!169355 () Bool)

(assert (=> d!44295 m!169355))

(declare-fun m!169357 () Bool)

(assert (=> d!44295 m!169357))

(declare-fun m!169359 () Bool)

(assert (=> b!141258 m!169359))

(declare-fun m!169361 () Bool)

(assert (=> b!141259 m!169361))

(assert (=> d!43583 d!44295))

(declare-fun b!141260 () Bool)

(declare-fun e!92072 () List!1745)

(declare-fun call!15680 () List!1745)

(assert (=> b!141260 (= e!92072 call!15680)))

(declare-fun bm!15675 () Bool)

(declare-fun call!15678 () List!1745)

(assert (=> bm!15675 (= call!15680 call!15678)))

(declare-fun d!44297 () Bool)

(declare-fun e!92076 () Bool)

(assert (=> d!44297 e!92076))

(declare-fun res!67447 () Bool)

(assert (=> d!44297 (=> (not res!67447) (not e!92076))))

(declare-fun lt!74060 () List!1745)

(assert (=> d!44297 (= res!67447 (isStrictlySorted!325 lt!74060))))

(declare-fun e!92073 () List!1745)

(assert (=> d!44297 (= lt!74060 e!92073)))

(declare-fun c!26558 () Bool)

(assert (=> d!44297 (= c!26558 (and ((_ is Cons!1741) (toList!888 call!15485)) (bvslt (_1!1360 (h!2348 (toList!888 call!15485))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44297 (isStrictlySorted!325 (toList!888 call!15485))))

(assert (=> d!44297 (= (insertStrictlySorted!93 (toList!888 call!15485) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74060)))

(declare-fun bm!15676 () Bool)

(declare-fun call!15679 () List!1745)

(assert (=> bm!15676 (= call!15678 call!15679)))

(declare-fun b!141261 () Bool)

(declare-fun e!92074 () List!1745)

(assert (=> b!141261 (= e!92073 e!92074)))

(declare-fun c!26557 () Bool)

(assert (=> b!141261 (= c!26557 (and ((_ is Cons!1741) (toList!888 call!15485)) (= (_1!1360 (h!2348 (toList!888 call!15485))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141262 () Bool)

(assert (=> b!141262 (= e!92073 call!15679)))

(declare-fun e!92075 () List!1745)

(declare-fun bm!15677 () Bool)

(assert (=> bm!15677 (= call!15679 ($colon$colon!94 e!92075 (ite c!26558 (h!2348 (toList!888 call!15485)) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26556 () Bool)

(assert (=> bm!15677 (= c!26556 c!26558)))

(declare-fun b!141263 () Bool)

(declare-fun c!26559 () Bool)

(assert (=> b!141263 (= e!92075 (ite c!26557 (t!6329 (toList!888 call!15485)) (ite c!26559 (Cons!1741 (h!2348 (toList!888 call!15485)) (t!6329 (toList!888 call!15485))) Nil!1742)))))

(declare-fun b!141264 () Bool)

(assert (=> b!141264 (= e!92074 call!15678)))

(declare-fun b!141265 () Bool)

(assert (=> b!141265 (= e!92076 (contains!925 lt!74060 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141266 () Bool)

(assert (=> b!141266 (= e!92075 (insertStrictlySorted!93 (t!6329 (toList!888 call!15485)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141267 () Bool)

(assert (=> b!141267 (= e!92072 call!15680)))

(declare-fun b!141268 () Bool)

(assert (=> b!141268 (= c!26559 (and ((_ is Cons!1741) (toList!888 call!15485)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15485))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!141268 (= e!92074 e!92072)))

(declare-fun b!141269 () Bool)

(declare-fun res!67448 () Bool)

(assert (=> b!141269 (=> (not res!67448) (not e!92076))))

(assert (=> b!141269 (= res!67448 (containsKey!180 lt!74060 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44297 c!26558) b!141262))

(assert (= (and d!44297 (not c!26558)) b!141261))

(assert (= (and b!141261 c!26557) b!141264))

(assert (= (and b!141261 (not c!26557)) b!141268))

(assert (= (and b!141268 c!26559) b!141267))

(assert (= (and b!141268 (not c!26559)) b!141260))

(assert (= (or b!141267 b!141260) bm!15675))

(assert (= (or b!141264 bm!15675) bm!15676))

(assert (= (or b!141262 bm!15676) bm!15677))

(assert (= (and bm!15677 c!26556) b!141266))

(assert (= (and bm!15677 (not c!26556)) b!141263))

(assert (= (and d!44297 res!67447) b!141269))

(assert (= (and b!141269 res!67448) b!141265))

(declare-fun m!169363 () Bool)

(assert (=> b!141266 m!169363))

(declare-fun m!169365 () Bool)

(assert (=> d!44297 m!169365))

(declare-fun m!169367 () Bool)

(assert (=> d!44297 m!169367))

(declare-fun m!169369 () Bool)

(assert (=> b!141269 m!169369))

(declare-fun m!169371 () Bool)

(assert (=> bm!15677 m!169371))

(declare-fun m!169373 () Bool)

(assert (=> b!141265 m!169373))

(assert (=> d!43583 d!44297))

(declare-fun b!141273 () Bool)

(declare-fun e!92078 () Option!182)

(assert (=> b!141273 (= e!92078 None!180)))

(declare-fun b!141270 () Bool)

(declare-fun e!92077 () Option!182)

(assert (=> b!141270 (= e!92077 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73769)))))))

(declare-fun b!141271 () Bool)

(assert (=> b!141271 (= e!92077 e!92078)))

(declare-fun c!26561 () Bool)

(assert (=> b!141271 (= c!26561 (and ((_ is Cons!1741) (toList!888 lt!73769)) (not (= (_1!1360 (h!2348 (toList!888 lt!73769))) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun d!44299 () Bool)

(declare-fun c!26560 () Bool)

(assert (=> d!44299 (= c!26560 (and ((_ is Cons!1741) (toList!888 lt!73769)) (= (_1!1360 (h!2348 (toList!888 lt!73769))) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44299 (= (getValueByKey!176 (toList!888 lt!73769) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92077)))

(declare-fun b!141272 () Bool)

(assert (=> b!141272 (= e!92078 (getValueByKey!176 (t!6329 (toList!888 lt!73769)) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!44299 c!26560) b!141270))

(assert (= (and d!44299 (not c!26560)) b!141271))

(assert (= (and b!141271 c!26561) b!141272))

(assert (= (and b!141271 (not c!26561)) b!141273))

(declare-fun m!169375 () Bool)

(assert (=> b!141272 m!169375))

(assert (=> b!140655 d!44299))

(declare-fun d!44301 () Bool)

(assert (=> d!44301 (= (get!1529 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!140808 d!44301))

(declare-fun lt!74061 () Bool)

(declare-fun d!44303 () Bool)

(assert (=> d!44303 (= lt!74061 (select (content!138 lt!73024) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92080 () Bool)

(assert (=> d!44303 (= lt!74061 e!92080)))

(declare-fun res!67449 () Bool)

(assert (=> d!44303 (=> (not res!67449) (not e!92080))))

(assert (=> d!44303 (= res!67449 ((_ is Cons!1741) lt!73024))))

(assert (=> d!44303 (= (contains!925 lt!73024 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74061)))

(declare-fun b!141274 () Bool)

(declare-fun e!92079 () Bool)

(assert (=> b!141274 (= e!92080 e!92079)))

(declare-fun res!67450 () Bool)

(assert (=> b!141274 (=> res!67450 e!92079)))

(assert (=> b!141274 (= res!67450 (= (h!2348 lt!73024) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141275 () Bool)

(assert (=> b!141275 (= e!92079 (contains!925 (t!6329 lt!73024) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44303 res!67449) b!141274))

(assert (= (and b!141274 (not res!67450)) b!141275))

(declare-fun m!169377 () Bool)

(assert (=> d!44303 m!169377))

(declare-fun m!169379 () Bool)

(assert (=> d!44303 m!169379))

(declare-fun m!169381 () Bool)

(assert (=> b!141275 m!169381))

(assert (=> b!139971 d!44303))

(declare-fun d!44305 () Bool)

(declare-fun e!92081 () Bool)

(assert (=> d!44305 e!92081))

(declare-fun res!67451 () Bool)

(assert (=> d!44305 (=> (not res!67451) (not e!92081))))

(declare-fun lt!74065 () ListLongMap!1745)

(assert (=> d!44305 (= res!67451 (contains!923 lt!74065 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74062 () List!1745)

(assert (=> d!44305 (= lt!74065 (ListLongMap!1746 lt!74062))))

(declare-fun lt!74063 () Unit!4373)

(declare-fun lt!74064 () Unit!4373)

(assert (=> d!44305 (= lt!74063 lt!74064)))

(assert (=> d!44305 (= (getValueByKey!176 lt!74062 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44305 (= lt!74064 (lemmaContainsTupThenGetReturnValue!90 lt!74062 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44305 (= lt!74062 (insertStrictlySorted!93 (toList!888 call!15574) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44305 (= (+!179 call!15574 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74065)))

(declare-fun b!141276 () Bool)

(declare-fun res!67452 () Bool)

(assert (=> b!141276 (=> (not res!67452) (not e!92081))))

(assert (=> b!141276 (= res!67452 (= (getValueByKey!176 (toList!888 lt!74065) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141277 () Bool)

(assert (=> b!141277 (= e!92081 (contains!925 (toList!888 lt!74065) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44305 res!67451) b!141276))

(assert (= (and b!141276 res!67452) b!141277))

(declare-fun m!169383 () Bool)

(assert (=> d!44305 m!169383))

(declare-fun m!169385 () Bool)

(assert (=> d!44305 m!169385))

(declare-fun m!169387 () Bool)

(assert (=> d!44305 m!169387))

(declare-fun m!169389 () Bool)

(assert (=> d!44305 m!169389))

(declare-fun m!169391 () Bool)

(assert (=> b!141276 m!169391))

(declare-fun m!169393 () Bool)

(assert (=> b!141277 m!169393))

(assert (=> b!140222 d!44305))

(declare-fun d!44307 () Bool)

(declare-fun res!67453 () Bool)

(declare-fun e!92082 () Bool)

(assert (=> d!44307 (=> res!67453 e!92082)))

(assert (=> d!44307 (= res!67453 (and ((_ is Cons!1741) lt!73357) (= (_1!1360 (h!2348 lt!73357)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44307 (= (containsKey!180 lt!73357 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92082)))

(declare-fun b!141278 () Bool)

(declare-fun e!92083 () Bool)

(assert (=> b!141278 (= e!92082 e!92083)))

(declare-fun res!67454 () Bool)

(assert (=> b!141278 (=> (not res!67454) (not e!92083))))

(assert (=> b!141278 (= res!67454 (and (or (not ((_ is Cons!1741) lt!73357)) (bvsle (_1!1360 (h!2348 lt!73357)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1741) lt!73357) (bvslt (_1!1360 (h!2348 lt!73357)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141279 () Bool)

(assert (=> b!141279 (= e!92083 (containsKey!180 (t!6329 lt!73357) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44307 (not res!67453)) b!141278))

(assert (= (and b!141278 res!67454) b!141279))

(declare-fun m!169395 () Bool)

(assert (=> b!141279 m!169395))

(assert (=> b!140026 d!44307))

(declare-fun d!44309 () Bool)

(declare-fun e!92084 () Bool)

(assert (=> d!44309 e!92084))

(declare-fun res!67455 () Bool)

(assert (=> d!44309 (=> (not res!67455) (not e!92084))))

(declare-fun lt!74069 () ListLongMap!1745)

(assert (=> d!44309 (= res!67455 (contains!923 lt!74069 (_1!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74066 () List!1745)

(assert (=> d!44309 (= lt!74069 (ListLongMap!1746 lt!74066))))

(declare-fun lt!74067 () Unit!4373)

(declare-fun lt!74068 () Unit!4373)

(assert (=> d!44309 (= lt!74067 lt!74068)))

(assert (=> d!44309 (= (getValueByKey!176 lt!74066 (_1!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44309 (= lt!74068 (lemmaContainsTupThenGetReturnValue!90 lt!74066 (_1!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44309 (= lt!74066 (insertStrictlySorted!93 (toList!888 (ite c!26295 call!15592 (ite c!26297 call!15590 call!15595))) (_1!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44309 (= (+!179 (ite c!26295 call!15592 (ite c!26297 call!15590 call!15595)) (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74069)))

(declare-fun b!141280 () Bool)

(declare-fun res!67456 () Bool)

(assert (=> b!141280 (=> (not res!67456) (not e!92084))))

(assert (=> b!141280 (= res!67456 (= (getValueByKey!176 (toList!888 lt!74069) (_1!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141281 () Bool)

(assert (=> b!141281 (= e!92084 (contains!925 (toList!888 lt!74069) (ite (or c!26295 c!26297) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44309 res!67455) b!141280))

(assert (= (and b!141280 res!67456) b!141281))

(declare-fun m!169397 () Bool)

(assert (=> d!44309 m!169397))

(declare-fun m!169399 () Bool)

(assert (=> d!44309 m!169399))

(declare-fun m!169401 () Bool)

(assert (=> d!44309 m!169401))

(declare-fun m!169403 () Bool)

(assert (=> d!44309 m!169403))

(declare-fun m!169405 () Bool)

(assert (=> b!141280 m!169405))

(declare-fun m!169407 () Bool)

(assert (=> b!141281 m!169407))

(assert (=> bm!15591 d!44309))

(declare-fun b!141282 () Bool)

(declare-fun e!92085 () (_ BitVec 32))

(assert (=> b!141282 (= e!92085 #b00000000000000000000000000000000)))

(declare-fun b!141283 () Bool)

(declare-fun e!92086 () (_ BitVec 32))

(declare-fun call!15681 () (_ BitVec 32))

(assert (=> b!141283 (= e!92086 call!15681)))

(declare-fun bm!15678 () Bool)

(assert (=> bm!15678 (= call!15681 (arrayCountValidKeys!0 lt!73246 (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)))))

(declare-fun lt!74070 () (_ BitVec 32))

(declare-fun d!44311 () Bool)

(assert (=> d!44311 (and (bvsge lt!74070 #b00000000000000000000000000000000) (bvsle lt!74070 (bvsub (size!2587 lt!73246) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001))))))

(assert (=> d!44311 (= lt!74070 e!92085)))

(declare-fun c!26562 () Bool)

(assert (=> d!44311 (= c!26562 (bvsge (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)))))

(assert (=> d!44311 (and (bvsle (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) (size!2587 lt!73246)))))

(assert (=> d!44311 (= (arrayCountValidKeys!0 lt!73246 (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) lt!74070)))

(declare-fun b!141284 () Bool)

(assert (=> b!141284 (= e!92085 e!92086)))

(declare-fun c!26563 () Bool)

(assert (=> b!141284 (= c!26563 (validKeyInArray!0 (select (arr!2315 lt!73246) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001))))))

(declare-fun b!141285 () Bool)

(assert (=> b!141285 (= e!92086 (bvadd #b00000000000000000000000000000001 call!15681))))

(assert (= (and d!44311 c!26562) b!141282))

(assert (= (and d!44311 (not c!26562)) b!141284))

(assert (= (and b!141284 c!26563) b!141285))

(assert (= (and b!141284 (not c!26563)) b!141283))

(assert (= (or b!141285 b!141283) bm!15678))

(declare-fun m!169409 () Bool)

(assert (=> bm!15678 m!169409))

(declare-fun m!169411 () Bool)

(assert (=> b!141284 m!169411))

(assert (=> b!141284 m!169411))

(declare-fun m!169413 () Bool)

(assert (=> b!141284 m!169413))

(assert (=> bm!15601 d!44311))

(declare-fun d!44313 () Bool)

(declare-fun e!92087 () Bool)

(assert (=> d!44313 e!92087))

(declare-fun res!67457 () Bool)

(assert (=> d!44313 (=> res!67457 e!92087)))

(declare-fun lt!74073 () Bool)

(assert (=> d!44313 (= res!67457 (not lt!74073))))

(declare-fun lt!74071 () Bool)

(assert (=> d!44313 (= lt!74073 lt!74071)))

(declare-fun lt!74072 () Unit!4373)

(declare-fun e!92088 () Unit!4373)

(assert (=> d!44313 (= lt!74072 e!92088)))

(declare-fun c!26564 () Bool)

(assert (=> d!44313 (= c!26564 lt!74071)))

(assert (=> d!44313 (= lt!74071 (containsKey!180 (toList!888 lt!73803) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44313 (= (contains!923 lt!73803 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74073)))

(declare-fun b!141286 () Bool)

(declare-fun lt!74074 () Unit!4373)

(assert (=> b!141286 (= e!92088 lt!74074)))

(assert (=> b!141286 (= lt!74074 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73803) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!141286 (isDefined!129 (getValueByKey!176 (toList!888 lt!73803) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141287 () Bool)

(declare-fun Unit!4456 () Unit!4373)

(assert (=> b!141287 (= e!92088 Unit!4456)))

(declare-fun b!141288 () Bool)

(assert (=> b!141288 (= e!92087 (isDefined!129 (getValueByKey!176 (toList!888 lt!73803) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44313 c!26564) b!141286))

(assert (= (and d!44313 (not c!26564)) b!141287))

(assert (= (and d!44313 (not res!67457)) b!141288))

(declare-fun m!169415 () Bool)

(assert (=> d!44313 m!169415))

(declare-fun m!169417 () Bool)

(assert (=> b!141286 m!169417))

(assert (=> b!141286 m!168341))

(assert (=> b!141286 m!168341))

(declare-fun m!169419 () Bool)

(assert (=> b!141286 m!169419))

(assert (=> b!141288 m!168341))

(assert (=> b!141288 m!168341))

(assert (=> b!141288 m!169419))

(assert (=> d!43871 d!44313))

(declare-fun b!141292 () Bool)

(declare-fun e!92090 () Option!182)

(assert (=> b!141292 (= e!92090 None!180)))

(declare-fun b!141289 () Bool)

(declare-fun e!92089 () Option!182)

(assert (=> b!141289 (= e!92089 (Some!181 (_2!1360 (h!2348 lt!73800))))))

(declare-fun b!141290 () Bool)

(assert (=> b!141290 (= e!92089 e!92090)))

(declare-fun c!26566 () Bool)

(assert (=> b!141290 (= c!26566 (and ((_ is Cons!1741) lt!73800) (not (= (_1!1360 (h!2348 lt!73800)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26565 () Bool)

(declare-fun d!44315 () Bool)

(assert (=> d!44315 (= c!26565 (and ((_ is Cons!1741) lt!73800) (= (_1!1360 (h!2348 lt!73800)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44315 (= (getValueByKey!176 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92089)))

(declare-fun b!141291 () Bool)

(assert (=> b!141291 (= e!92090 (getValueByKey!176 (t!6329 lt!73800) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44315 c!26565) b!141289))

(assert (= (and d!44315 (not c!26565)) b!141290))

(assert (= (and b!141290 c!26566) b!141291))

(assert (= (and b!141290 (not c!26566)) b!141292))

(declare-fun m!169421 () Bool)

(assert (=> b!141291 m!169421))

(assert (=> d!43871 d!44315))

(declare-fun d!44317 () Bool)

(assert (=> d!44317 (= (getValueByKey!176 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74075 () Unit!4373)

(assert (=> d!44317 (= lt!74075 (choose!865 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92091 () Bool)

(assert (=> d!44317 e!92091))

(declare-fun res!67458 () Bool)

(assert (=> d!44317 (=> (not res!67458) (not e!92091))))

(assert (=> d!44317 (= res!67458 (isStrictlySorted!325 lt!73800))))

(assert (=> d!44317 (= (lemmaContainsTupThenGetReturnValue!90 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74075)))

(declare-fun b!141293 () Bool)

(declare-fun res!67459 () Bool)

(assert (=> b!141293 (=> (not res!67459) (not e!92091))))

(assert (=> b!141293 (= res!67459 (containsKey!180 lt!73800 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141294 () Bool)

(assert (=> b!141294 (= e!92091 (contains!925 lt!73800 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44317 res!67458) b!141293))

(assert (= (and b!141293 res!67459) b!141294))

(assert (=> d!44317 m!168335))

(declare-fun m!169423 () Bool)

(assert (=> d!44317 m!169423))

(declare-fun m!169425 () Bool)

(assert (=> d!44317 m!169425))

(declare-fun m!169427 () Bool)

(assert (=> b!141293 m!169427))

(declare-fun m!169429 () Bool)

(assert (=> b!141294 m!169429))

(assert (=> d!43871 d!44317))

(declare-fun b!141295 () Bool)

(declare-fun e!92092 () List!1745)

(declare-fun call!15684 () List!1745)

(assert (=> b!141295 (= e!92092 call!15684)))

(declare-fun bm!15679 () Bool)

(declare-fun call!15682 () List!1745)

(assert (=> bm!15679 (= call!15684 call!15682)))

(declare-fun d!44319 () Bool)

(declare-fun e!92096 () Bool)

(assert (=> d!44319 e!92096))

(declare-fun res!67460 () Bool)

(assert (=> d!44319 (=> (not res!67460) (not e!92096))))

(declare-fun lt!74076 () List!1745)

(assert (=> d!44319 (= res!67460 (isStrictlySorted!325 lt!74076))))

(declare-fun e!92093 () List!1745)

(assert (=> d!44319 (= lt!74076 e!92093)))

(declare-fun c!26569 () Bool)

(assert (=> d!44319 (= c!26569 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44319 (isStrictlySorted!325 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (=> d!44319 (= (insertStrictlySorted!93 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74076)))

(declare-fun bm!15680 () Bool)

(declare-fun call!15683 () List!1745)

(assert (=> bm!15680 (= call!15682 call!15683)))

(declare-fun b!141296 () Bool)

(declare-fun e!92094 () List!1745)

(assert (=> b!141296 (= e!92093 e!92094)))

(declare-fun c!26568 () Bool)

(assert (=> b!141296 (= c!26568 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141297 () Bool)

(assert (=> b!141297 (= e!92093 call!15683)))

(declare-fun e!92095 () List!1745)

(declare-fun bm!15681 () Bool)

(assert (=> bm!15681 (= call!15683 ($colon$colon!94 e!92095 (ite c!26569 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26567 () Bool)

(assert (=> bm!15681 (= c!26567 c!26569)))

(declare-fun c!26570 () Bool)

(declare-fun b!141298 () Bool)

(assert (=> b!141298 (= e!92095 (ite c!26568 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (ite c!26570 (Cons!1741 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) Nil!1742)))))

(declare-fun b!141299 () Bool)

(assert (=> b!141299 (= e!92094 call!15682)))

(declare-fun b!141300 () Bool)

(assert (=> b!141300 (= e!92096 (contains!925 lt!74076 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141301 () Bool)

(assert (=> b!141301 (= e!92095 (insertStrictlySorted!93 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141302 () Bool)

(assert (=> b!141302 (= e!92092 call!15684)))

(declare-fun b!141303 () Bool)

(assert (=> b!141303 (= c!26570 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvsgt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!141303 (= e!92094 e!92092)))

(declare-fun b!141304 () Bool)

(declare-fun res!67461 () Bool)

(assert (=> b!141304 (=> (not res!67461) (not e!92096))))

(assert (=> b!141304 (= res!67461 (containsKey!180 lt!74076 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44319 c!26569) b!141297))

(assert (= (and d!44319 (not c!26569)) b!141296))

(assert (= (and b!141296 c!26568) b!141299))

(assert (= (and b!141296 (not c!26568)) b!141303))

(assert (= (and b!141303 c!26570) b!141302))

(assert (= (and b!141303 (not c!26570)) b!141295))

(assert (= (or b!141302 b!141295) bm!15679))

(assert (= (or b!141299 bm!15679) bm!15680))

(assert (= (or b!141297 bm!15680) bm!15681))

(assert (= (and bm!15681 c!26567) b!141301))

(assert (= (and bm!15681 (not c!26567)) b!141298))

(assert (= (and d!44319 res!67460) b!141304))

(assert (= (and b!141304 res!67461) b!141300))

(declare-fun m!169431 () Bool)

(assert (=> b!141301 m!169431))

(declare-fun m!169433 () Bool)

(assert (=> d!44319 m!169433))

(assert (=> d!44319 m!168729))

(declare-fun m!169435 () Bool)

(assert (=> b!141304 m!169435))

(declare-fun m!169437 () Bool)

(assert (=> bm!15681 m!169437))

(declare-fun m!169439 () Bool)

(assert (=> b!141300 m!169439))

(assert (=> d!43871 d!44319))

(declare-fun d!44321 () Bool)

(declare-fun res!67462 () Bool)

(declare-fun e!92097 () Bool)

(assert (=> d!44321 (=> res!67462 e!92097)))

(assert (=> d!44321 (= res!67462 (and ((_ is Cons!1741) (toList!888 (map!1442 (_2!1361 lt!73257)))) (= (_1!1360 (h!2348 (toList!888 (map!1442 (_2!1361 lt!73257))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!44321 (= (containsKey!180 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92097)))

(declare-fun b!141305 () Bool)

(declare-fun e!92098 () Bool)

(assert (=> b!141305 (= e!92097 e!92098)))

(declare-fun res!67463 () Bool)

(assert (=> b!141305 (=> (not res!67463) (not e!92098))))

(assert (=> b!141305 (= res!67463 (and (or (not ((_ is Cons!1741) (toList!888 (map!1442 (_2!1361 lt!73257))))) (bvsle (_1!1360 (h!2348 (toList!888 (map!1442 (_2!1361 lt!73257))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (toList!888 (map!1442 (_2!1361 lt!73257)))) (bvslt (_1!1360 (h!2348 (toList!888 (map!1442 (_2!1361 lt!73257))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!141306 () Bool)

(assert (=> b!141306 (= e!92098 (containsKey!180 (t!6329 (toList!888 (map!1442 (_2!1361 lt!73257)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44321 (not res!67462)) b!141305))

(assert (= (and b!141305 res!67463) b!141306))

(assert (=> b!141306 m!166013))

(declare-fun m!169441 () Bool)

(assert (=> b!141306 m!169441))

(assert (=> d!43447 d!44321))

(declare-fun b!141310 () Bool)

(declare-fun e!92100 () Option!182)

(assert (=> b!141310 (= e!92100 None!180)))

(declare-fun b!141307 () Bool)

(declare-fun e!92099 () Option!182)

(assert (=> b!141307 (= e!92099 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))))

(declare-fun b!141308 () Bool)

(assert (=> b!141308 (= e!92099 e!92100)))

(declare-fun c!26572 () Bool)

(assert (=> b!141308 (= c!26572 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72903))))))

(declare-fun c!26571 () Bool)

(declare-fun d!44323 () Bool)

(assert (=> d!44323 (= c!26571 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72903)))))

(assert (=> d!44323 (= (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72903) e!92099)))

(declare-fun b!141309 () Bool)

(assert (=> b!141309 (= e!92100 (getValueByKey!176 (t!6329 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903))))

(assert (= (and d!44323 c!26571) b!141307))

(assert (= (and d!44323 (not c!26571)) b!141308))

(assert (= (and b!141308 c!26572) b!141309))

(assert (= (and b!141308 (not c!26572)) b!141310))

(declare-fun m!169443 () Bool)

(assert (=> b!141309 m!169443))

(assert (=> b!140251 d!44323))

(declare-fun d!44325 () Bool)

(assert (=> d!44325 (= (apply!120 lt!73528 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73528) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5914 () Bool)

(assert (= bs!5914 d!44325))

(assert (=> bs!5914 m!166385))

(declare-fun m!169445 () Bool)

(assert (=> bs!5914 m!169445))

(assert (=> bs!5914 m!169445))

(declare-fun m!169447 () Bool)

(assert (=> bs!5914 m!169447))

(assert (=> b!140277 d!44325))

(assert (=> b!140277 d!43463))

(declare-fun d!44327 () Bool)

(assert (=> d!44327 (= (apply!120 lt!73680 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73680) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5915 () Bool)

(assert (= bs!5915 d!44327))

(declare-fun m!169449 () Bool)

(assert (=> bs!5915 m!169449))

(assert (=> bs!5915 m!169449))

(declare-fun m!169451 () Bool)

(assert (=> bs!5915 m!169451))

(assert (=> b!140487 d!44327))

(declare-fun d!44329 () Bool)

(assert (=> d!44329 (= (apply!120 lt!73650 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73650) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5916 () Bool)

(assert (= bs!5916 d!44329))

(declare-fun m!169453 () Bool)

(assert (=> bs!5916 m!169453))

(assert (=> bs!5916 m!169453))

(declare-fun m!169455 () Bool)

(assert (=> bs!5916 m!169455))

(assert (=> b!140439 d!44329))

(declare-fun d!44331 () Bool)

(assert (=> d!44331 (= (size!2591 (v!3280 (underlying!480 thiss!992))) (bvadd (_size!625 (v!3280 (underlying!480 thiss!992))) (bvsdiv (bvadd (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140575 d!44331))

(assert (=> d!43959 d!43563))

(assert (=> d!43959 d!43565))

(declare-fun d!44333 () Bool)

(assert (=> d!44333 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!44333 true))

(declare-fun _$12!413 () Unit!4373)

(assert (=> d!44333 (= (choose!864 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!413)))

(declare-fun bs!5917 () Bool)

(assert (= bs!5917 d!44333))

(assert (=> bs!5917 m!166121))

(assert (=> bs!5917 m!166473))

(assert (=> bs!5917 m!166473))

(assert (=> bs!5917 m!166475))

(assert (=> d!43959 d!44333))

(declare-fun d!44335 () Bool)

(declare-fun res!67464 () Bool)

(declare-fun e!92101 () Bool)

(assert (=> d!44335 (=> res!67464 e!92101)))

(assert (=> d!44335 (= res!67464 (or ((_ is Nil!1742) (toList!888 lt!72907)) ((_ is Nil!1742) (t!6329 (toList!888 lt!72907)))))))

(assert (=> d!44335 (= (isStrictlySorted!325 (toList!888 lt!72907)) e!92101)))

(declare-fun b!141311 () Bool)

(declare-fun e!92102 () Bool)

(assert (=> b!141311 (= e!92101 e!92102)))

(declare-fun res!67465 () Bool)

(assert (=> b!141311 (=> (not res!67465) (not e!92102))))

(assert (=> b!141311 (= res!67465 (bvslt (_1!1360 (h!2348 (toList!888 lt!72907))) (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907))))))))

(declare-fun b!141312 () Bool)

(assert (=> b!141312 (= e!92102 (isStrictlySorted!325 (t!6329 (toList!888 lt!72907))))))

(assert (= (and d!44335 (not res!67464)) b!141311))

(assert (= (and b!141311 res!67465) b!141312))

(declare-fun m!169457 () Bool)

(assert (=> b!141312 m!169457))

(assert (=> d!43959 d!44335))

(declare-fun d!44337 () Bool)

(assert (=> d!44337 (= (validMask!0 (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (and (or (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000001111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000011111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000001111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000011111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000001111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000011111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000001111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000011111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000001111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000011111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000001111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000011111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000001111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000011111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000111111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000001111111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000011111111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000111111111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00001111111111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00011111111111111111111111111111) (= (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00111111111111111111111111111111)) (bvsle (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00111111111111111111111111111111)))))

(assert (=> d!43735 d!44337))

(assert (=> d!43897 d!43331))

(assert (=> d!43897 d!43313))

(assert (=> d!43897 d!43311))

(declare-fun d!44339 () Bool)

(declare-fun res!67466 () Bool)

(declare-fun e!92103 () Bool)

(assert (=> d!44339 (=> res!67466 e!92103)))

(assert (=> d!44339 (= res!67466 (and ((_ is Cons!1741) (toList!888 lt!73059)) (= (_1!1360 (h!2348 (toList!888 lt!73059))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44339 (= (containsKey!180 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92103)))

(declare-fun b!141313 () Bool)

(declare-fun e!92104 () Bool)

(assert (=> b!141313 (= e!92103 e!92104)))

(declare-fun res!67467 () Bool)

(assert (=> b!141313 (=> (not res!67467) (not e!92104))))

(assert (=> b!141313 (= res!67467 (and (or (not ((_ is Cons!1741) (toList!888 lt!73059))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73059))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) (toList!888 lt!73059)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73059))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141314 () Bool)

(assert (=> b!141314 (= e!92104 (containsKey!180 (t!6329 (toList!888 lt!73059)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44339 (not res!67466)) b!141313))

(assert (= (and b!141313 res!67467) b!141314))

(declare-fun m!169459 () Bool)

(assert (=> b!141314 m!169459))

(assert (=> d!43807 d!44339))

(declare-fun d!44341 () Bool)

(declare-fun lt!74077 () Bool)

(assert (=> d!44341 (= lt!74077 (select (content!138 lt!73016) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92106 () Bool)

(assert (=> d!44341 (= lt!74077 e!92106)))

(declare-fun res!67468 () Bool)

(assert (=> d!44341 (=> (not res!67468) (not e!92106))))

(assert (=> d!44341 (= res!67468 ((_ is Cons!1741) lt!73016))))

(assert (=> d!44341 (= (contains!925 lt!73016 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74077)))

(declare-fun b!141315 () Bool)

(declare-fun e!92105 () Bool)

(assert (=> b!141315 (= e!92106 e!92105)))

(declare-fun res!67469 () Bool)

(assert (=> b!141315 (=> res!67469 e!92105)))

(assert (=> b!141315 (= res!67469 (= (h!2348 lt!73016) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141316 () Bool)

(assert (=> b!141316 (= e!92105 (contains!925 (t!6329 lt!73016) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44341 res!67468) b!141315))

(assert (= (and b!141315 (not res!67469)) b!141316))

(declare-fun m!169461 () Bool)

(assert (=> d!44341 m!169461))

(declare-fun m!169463 () Bool)

(assert (=> d!44341 m!169463))

(declare-fun m!169465 () Bool)

(assert (=> b!141316 m!169465))

(assert (=> b!140125 d!44341))

(declare-fun d!44343 () Bool)

(assert (=> d!44343 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun bs!5918 () Bool)

(assert (= bs!5918 d!44343))

(assert (=> bs!5918 m!166265))

(declare-fun m!169467 () Bool)

(assert (=> bs!5918 m!169467))

(assert (=> b!140764 d!44343))

(assert (=> b!140764 d!43885))

(declare-fun d!44345 () Bool)

(assert (=> d!44345 (= (validKeyInArray!0 (select (arr!2315 lt!73246) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) (and (not (= (select (arr!2315 lt!73246) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 lt!73246) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140424 d!44345))

(declare-fun d!44347 () Bool)

(assert (=> d!44347 (= ($colon$colon!94 e!91692 (ite c!26362 (h!2348 (toList!888 lt!72887)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (Cons!1741 (ite c!26362 (h!2348 (toList!888 lt!72887)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91692))))

(assert (=> bm!15624 d!44347))

(declare-fun d!44349 () Bool)

(assert (=> d!44349 (= (apply!120 lt!73680 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73680) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5919 () Bool)

(assert (= bs!5919 d!44349))

(assert (=> bs!5919 m!166385))

(declare-fun m!169469 () Bool)

(assert (=> bs!5919 m!169469))

(assert (=> bs!5919 m!169469))

(declare-fun m!169471 () Bool)

(assert (=> bs!5919 m!169471))

(assert (=> b!140473 d!44349))

(declare-fun d!44351 () Bool)

(declare-fun c!26573 () Bool)

(assert (=> d!44351 (= c!26573 ((_ is ValueCellFull!1122) (select (arr!2316 lt!72983) #b00000000000000000000000000000000)))))

(declare-fun e!92107 () V!3555)

(assert (=> d!44351 (= (get!1528 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92107)))

(declare-fun b!141317 () Bool)

(assert (=> b!141317 (= e!92107 (get!1529 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141318 () Bool)

(assert (=> b!141318 (= e!92107 (get!1530 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44351 c!26573) b!141317))

(assert (= (and d!44351 (not c!26573)) b!141318))

(assert (=> b!141317 m!167927))

(assert (=> b!141317 m!166443))

(declare-fun m!169473 () Bool)

(assert (=> b!141317 m!169473))

(assert (=> b!141318 m!167927))

(assert (=> b!141318 m!166443))

(declare-fun m!169475 () Bool)

(assert (=> b!141318 m!169475))

(assert (=> b!140473 d!44351))

(declare-fun d!44353 () Bool)

(declare-fun res!67470 () Bool)

(declare-fun e!92108 () Bool)

(assert (=> d!44353 (=> res!67470 e!92108)))

(assert (=> d!44353 (= res!67470 (and ((_ is Cons!1741) lt!73282) (= (_1!1360 (h!2348 lt!73282)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!44353 (= (containsKey!180 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!92108)))

(declare-fun b!141319 () Bool)

(declare-fun e!92109 () Bool)

(assert (=> b!141319 (= e!92108 e!92109)))

(declare-fun res!67471 () Bool)

(assert (=> b!141319 (=> (not res!67471) (not e!92109))))

(assert (=> b!141319 (= res!67471 (and (or (not ((_ is Cons!1741) lt!73282)) (bvsle (_1!1360 (h!2348 lt!73282)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) ((_ is Cons!1741) lt!73282) (bvslt (_1!1360 (h!2348 lt!73282)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!141320 () Bool)

(assert (=> b!141320 (= e!92109 (containsKey!180 (t!6329 lt!73282) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44353 (not res!67470)) b!141319))

(assert (= (and b!141319 res!67471) b!141320))

(declare-fun m!169477 () Bool)

(assert (=> b!141320 m!169477))

(assert (=> b!140354 d!44353))

(declare-fun d!44355 () Bool)

(declare-fun e!92110 () Bool)

(assert (=> d!44355 e!92110))

(declare-fun res!67472 () Bool)

(assert (=> d!44355 (=> res!67472 e!92110)))

(declare-fun lt!74080 () Bool)

(assert (=> d!44355 (= res!67472 (not lt!74080))))

(declare-fun lt!74078 () Bool)

(assert (=> d!44355 (= lt!74080 lt!74078)))

(declare-fun lt!74079 () Unit!4373)

(declare-fun e!92111 () Unit!4373)

(assert (=> d!44355 (= lt!74079 e!92111)))

(declare-fun c!26574 () Bool)

(assert (=> d!44355 (= c!26574 lt!74078)))

(assert (=> d!44355 (= lt!74078 (containsKey!180 (toList!888 lt!73855) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44355 (= (contains!923 lt!73855 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74080)))

(declare-fun b!141321 () Bool)

(declare-fun lt!74081 () Unit!4373)

(assert (=> b!141321 (= e!92111 lt!74081)))

(assert (=> b!141321 (= lt!74081 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73855) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> b!141321 (isDefined!129 (getValueByKey!176 (toList!888 lt!73855) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141322 () Bool)

(declare-fun Unit!4457 () Unit!4373)

(assert (=> b!141322 (= e!92111 Unit!4457)))

(declare-fun b!141323 () Bool)

(assert (=> b!141323 (= e!92110 (isDefined!129 (getValueByKey!176 (toList!888 lt!73855) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!44355 c!26574) b!141321))

(assert (= (and d!44355 (not c!26574)) b!141322))

(assert (= (and d!44355 (not res!67472)) b!141323))

(declare-fun m!169479 () Bool)

(assert (=> d!44355 m!169479))

(declare-fun m!169481 () Bool)

(assert (=> b!141321 m!169481))

(assert (=> b!141321 m!168509))

(assert (=> b!141321 m!168509))

(declare-fun m!169483 () Bool)

(assert (=> b!141321 m!169483))

(assert (=> b!141323 m!168509))

(assert (=> b!141323 m!168509))

(assert (=> b!141323 m!169483))

(assert (=> d!43925 d!44355))

(declare-fun b!141327 () Bool)

(declare-fun e!92113 () Option!182)

(assert (=> b!141327 (= e!92113 None!180)))

(declare-fun b!141324 () Bool)

(declare-fun e!92112 () Option!182)

(assert (=> b!141324 (= e!92112 (Some!181 (_2!1360 (h!2348 lt!73852))))))

(declare-fun b!141325 () Bool)

(assert (=> b!141325 (= e!92112 e!92113)))

(declare-fun c!26576 () Bool)

(assert (=> b!141325 (= c!26576 (and ((_ is Cons!1741) lt!73852) (not (= (_1!1360 (h!2348 lt!73852)) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26575 () Bool)

(declare-fun d!44357 () Bool)

(assert (=> d!44357 (= c!26575 (and ((_ is Cons!1741) lt!73852) (= (_1!1360 (h!2348 lt!73852)) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44357 (= (getValueByKey!176 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92112)))

(declare-fun b!141326 () Bool)

(assert (=> b!141326 (= e!92113 (getValueByKey!176 (t!6329 lt!73852) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44357 c!26575) b!141324))

(assert (= (and d!44357 (not c!26575)) b!141325))

(assert (= (and b!141325 c!26576) b!141326))

(assert (= (and b!141325 (not c!26576)) b!141327))

(declare-fun m!169485 () Bool)

(assert (=> b!141326 m!169485))

(assert (=> d!43925 d!44357))

(declare-fun d!44359 () Bool)

(assert (=> d!44359 (= (getValueByKey!176 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!74082 () Unit!4373)

(assert (=> d!44359 (= lt!74082 (choose!865 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun e!92114 () Bool)

(assert (=> d!44359 e!92114))

(declare-fun res!67473 () Bool)

(assert (=> d!44359 (=> (not res!67473) (not e!92114))))

(assert (=> d!44359 (= res!67473 (isStrictlySorted!325 lt!73852))))

(assert (=> d!44359 (= (lemmaContainsTupThenGetReturnValue!90 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74082)))

(declare-fun b!141328 () Bool)

(declare-fun res!67474 () Bool)

(assert (=> b!141328 (=> (not res!67474) (not e!92114))))

(assert (=> b!141328 (= res!67474 (containsKey!180 lt!73852 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141329 () Bool)

(assert (=> b!141329 (= e!92114 (contains!925 lt!73852 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!44359 res!67473) b!141328))

(assert (= (and b!141328 res!67474) b!141329))

(assert (=> d!44359 m!168503))

(declare-fun m!169487 () Bool)

(assert (=> d!44359 m!169487))

(declare-fun m!169489 () Bool)

(assert (=> d!44359 m!169489))

(declare-fun m!169491 () Bool)

(assert (=> b!141328 m!169491))

(declare-fun m!169493 () Bool)

(assert (=> b!141329 m!169493))

(assert (=> d!43925 d!44359))

(declare-fun b!141330 () Bool)

(declare-fun e!92115 () List!1745)

(declare-fun call!15687 () List!1745)

(assert (=> b!141330 (= e!92115 call!15687)))

(declare-fun bm!15682 () Bool)

(declare-fun call!15685 () List!1745)

(assert (=> bm!15682 (= call!15687 call!15685)))

(declare-fun d!44361 () Bool)

(declare-fun e!92119 () Bool)

(assert (=> d!44361 e!92119))

(declare-fun res!67475 () Bool)

(assert (=> d!44361 (=> (not res!67475) (not e!92119))))

(declare-fun lt!74083 () List!1745)

(assert (=> d!44361 (= res!67475 (isStrictlySorted!325 lt!74083))))

(declare-fun e!92116 () List!1745)

(assert (=> d!44361 (= lt!74083 e!92116)))

(declare-fun c!26579 () Bool)

(assert (=> d!44361 (= c!26579 (and ((_ is Cons!1741) (toList!888 lt!73073)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73073))) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44361 (isStrictlySorted!325 (toList!888 lt!73073))))

(assert (=> d!44361 (= (insertStrictlySorted!93 (toList!888 lt!73073) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74083)))

(declare-fun bm!15683 () Bool)

(declare-fun call!15686 () List!1745)

(assert (=> bm!15683 (= call!15685 call!15686)))

(declare-fun b!141331 () Bool)

(declare-fun e!92117 () List!1745)

(assert (=> b!141331 (= e!92116 e!92117)))

(declare-fun c!26578 () Bool)

(assert (=> b!141331 (= c!26578 (and ((_ is Cons!1741) (toList!888 lt!73073)) (= (_1!1360 (h!2348 (toList!888 lt!73073))) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141332 () Bool)

(assert (=> b!141332 (= e!92116 call!15686)))

(declare-fun e!92118 () List!1745)

(declare-fun bm!15684 () Bool)

(assert (=> bm!15684 (= call!15686 ($colon$colon!94 e!92118 (ite c!26579 (h!2348 (toList!888 lt!73073)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26577 () Bool)

(assert (=> bm!15684 (= c!26577 c!26579)))

(declare-fun b!141333 () Bool)

(declare-fun c!26580 () Bool)

(assert (=> b!141333 (= e!92118 (ite c!26578 (t!6329 (toList!888 lt!73073)) (ite c!26580 (Cons!1741 (h!2348 (toList!888 lt!73073)) (t!6329 (toList!888 lt!73073))) Nil!1742)))))

(declare-fun b!141334 () Bool)

(assert (=> b!141334 (= e!92117 call!15685)))

(declare-fun b!141335 () Bool)

(assert (=> b!141335 (= e!92119 (contains!925 lt!74083 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141336 () Bool)

(assert (=> b!141336 (= e!92118 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73073)) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141337 () Bool)

(assert (=> b!141337 (= e!92115 call!15687)))

(declare-fun b!141338 () Bool)

(assert (=> b!141338 (= c!26580 (and ((_ is Cons!1741) (toList!888 lt!73073)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73073))) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> b!141338 (= e!92117 e!92115)))

(declare-fun b!141339 () Bool)

(declare-fun res!67476 () Bool)

(assert (=> b!141339 (=> (not res!67476) (not e!92119))))

(assert (=> b!141339 (= res!67476 (containsKey!180 lt!74083 (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44361 c!26579) b!141332))

(assert (= (and d!44361 (not c!26579)) b!141331))

(assert (= (and b!141331 c!26578) b!141334))

(assert (= (and b!141331 (not c!26578)) b!141338))

(assert (= (and b!141338 c!26580) b!141337))

(assert (= (and b!141338 (not c!26580)) b!141330))

(assert (= (or b!141337 b!141330) bm!15682))

(assert (= (or b!141334 bm!15682) bm!15683))

(assert (= (or b!141332 bm!15683) bm!15684))

(assert (= (and bm!15684 c!26577) b!141336))

(assert (= (and bm!15684 (not c!26577)) b!141333))

(assert (= (and d!44361 res!67475) b!141339))

(assert (= (and b!141339 res!67476) b!141335))

(declare-fun m!169495 () Bool)

(assert (=> b!141336 m!169495))

(declare-fun m!169497 () Bool)

(assert (=> d!44361 m!169497))

(declare-fun m!169499 () Bool)

(assert (=> d!44361 m!169499))

(declare-fun m!169501 () Bool)

(assert (=> b!141339 m!169501))

(declare-fun m!169503 () Bool)

(assert (=> bm!15684 m!169503))

(declare-fun m!169505 () Bool)

(assert (=> b!141335 m!169505))

(assert (=> d!43925 d!44361))

(declare-fun d!44363 () Bool)

(assert (=> d!44363 (= (isEmpty!417 lt!73496) (isEmpty!419 (toList!888 lt!73496)))))

(declare-fun bs!5920 () Bool)

(assert (= bs!5920 d!44363))

(declare-fun m!169507 () Bool)

(assert (=> bs!5920 m!169507))

(assert (=> b!140235 d!44363))

(declare-fun d!44365 () Bool)

(assert (=> d!44365 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 #b00000000000000000000000000000000)))

(declare-fun lt!74084 () Unit!4373)

(assert (=> d!44365 (= lt!74084 (choose!13 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 #b00000000000000000000000000000000))))

(assert (=> d!44365 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44365 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 #b00000000000000000000000000000000) lt!74084)))

(declare-fun bs!5921 () Bool)

(assert (= bs!5921 d!44365))

(assert (=> bs!5921 m!167027))

(declare-fun m!169509 () Bool)

(assert (=> bs!5921 m!169509))

(assert (=> b!140066 d!44365))

(declare-fun d!44367 () Bool)

(declare-fun res!67477 () Bool)

(declare-fun e!92120 () Bool)

(assert (=> d!44367 (=> res!67477 e!92120)))

(assert (=> d!44367 (= res!67477 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) lt!73386))))

(assert (=> d!44367 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 #b00000000000000000000000000000000) e!92120)))

(declare-fun b!141340 () Bool)

(declare-fun e!92121 () Bool)

(assert (=> b!141340 (= e!92120 e!92121)))

(declare-fun res!67478 () Bool)

(assert (=> b!141340 (=> (not res!67478) (not e!92121))))

(assert (=> b!141340 (= res!67478 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!141341 () Bool)

(assert (=> b!141341 (= e!92121 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) lt!73386 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44367 (not res!67477)) b!141340))

(assert (= (and b!141340 res!67478) b!141341))

(assert (=> d!44367 m!167023))

(declare-fun m!169511 () Bool)

(assert (=> b!141341 m!169511))

(assert (=> b!140066 d!44367))

(declare-fun b!141342 () Bool)

(declare-fun c!26581 () Bool)

(declare-fun lt!74087 () (_ BitVec 64))

(assert (=> b!141342 (= c!26581 (= lt!74087 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92124 () SeekEntryResult!279)

(declare-fun e!92122 () SeekEntryResult!279)

(assert (=> b!141342 (= e!92124 e!92122)))

(declare-fun d!44369 () Bool)

(declare-fun lt!74086 () SeekEntryResult!279)

(assert (=> d!44369 (and (or ((_ is Undefined!279) lt!74086) (not ((_ is Found!279) lt!74086)) (and (bvsge (index!3280 lt!74086) #b00000000000000000000000000000000) (bvslt (index!3280 lt!74086) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))) (or ((_ is Undefined!279) lt!74086) ((_ is Found!279) lt!74086) (not ((_ is MissingZero!279) lt!74086)) (and (bvsge (index!3279 lt!74086) #b00000000000000000000000000000000) (bvslt (index!3279 lt!74086) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))) (or ((_ is Undefined!279) lt!74086) ((_ is Found!279) lt!74086) ((_ is MissingZero!279) lt!74086) (not ((_ is MissingVacant!279) lt!74086)) (and (bvsge (index!3282 lt!74086) #b00000000000000000000000000000000) (bvslt (index!3282 lt!74086) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))) (or ((_ is Undefined!279) lt!74086) (ite ((_ is Found!279) lt!74086) (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (index!3280 lt!74086)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!279) lt!74086) (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (index!3279 lt!74086)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!74086) (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (index!3282 lt!74086)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92123 () SeekEntryResult!279)

(assert (=> d!44369 (= lt!74086 e!92123)))

(declare-fun c!26583 () Bool)

(declare-fun lt!74085 () SeekEntryResult!279)

(assert (=> d!44369 (= c!26583 (and ((_ is Intermediate!279) lt!74085) (undefined!1091 lt!74085)))))

(assert (=> d!44369 (= lt!74085 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) (mask!7280 (v!3280 (underlying!480 thiss!992)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))))))

(assert (=> d!44369 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!44369 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))) lt!74086)))

(declare-fun b!141343 () Bool)

(assert (=> b!141343 (= e!92123 Undefined!279)))

(declare-fun b!141344 () Bool)

(assert (=> b!141344 (= e!92124 (Found!279 (index!3281 lt!74085)))))

(declare-fun b!141345 () Bool)

(assert (=> b!141345 (= e!92123 e!92124)))

(assert (=> b!141345 (= lt!74087 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (index!3281 lt!74085)))))

(declare-fun c!26582 () Bool)

(assert (=> b!141345 (= c!26582 (= lt!74087 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!141346 () Bool)

(assert (=> b!141346 (= e!92122 (seekKeyOrZeroReturnVacant!0 (x!16136 lt!74085) (index!3281 lt!74085) (index!3281 lt!74085) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!141347 () Bool)

(assert (=> b!141347 (= e!92122 (MissingZero!279 (index!3281 lt!74085)))))

(assert (= (and d!44369 c!26583) b!141343))

(assert (= (and d!44369 (not c!26583)) b!141345))

(assert (= (and b!141345 c!26582) b!141344))

(assert (= (and b!141345 (not c!26582)) b!141342))

(assert (= (and b!141342 c!26581) b!141347))

(assert (= (and b!141342 (not c!26581)) b!141346))

(assert (=> d!44369 m!167023))

(declare-fun m!169513 () Bool)

(assert (=> d!44369 m!169513))

(assert (=> d!44369 m!166137))

(declare-fun m!169515 () Bool)

(assert (=> d!44369 m!169515))

(declare-fun m!169517 () Bool)

(assert (=> d!44369 m!169517))

(declare-fun m!169519 () Bool)

(assert (=> d!44369 m!169519))

(assert (=> d!44369 m!169513))

(assert (=> d!44369 m!167023))

(declare-fun m!169521 () Bool)

(assert (=> d!44369 m!169521))

(declare-fun m!169523 () Bool)

(assert (=> b!141345 m!169523))

(assert (=> b!141346 m!167023))

(declare-fun m!169525 () Bool)

(assert (=> b!141346 m!169525))

(assert (=> b!140066 d!44369))

(declare-fun d!44371 () Bool)

(assert (=> d!44371 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72902) lt!72903)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72902) lt!72903))))))

(declare-fun bs!5922 () Bool)

(assert (= bs!5922 d!44371))

(assert (=> bs!5922 m!167637))

(declare-fun m!169527 () Bool)

(assert (=> bs!5922 m!169527))

(assert (=> b!140341 d!44371))

(declare-fun b!141351 () Bool)

(declare-fun e!92126 () Option!182)

(assert (=> b!141351 (= e!92126 None!180)))

(declare-fun b!141348 () Bool)

(declare-fun e!92125 () Option!182)

(assert (=> b!141348 (= e!92125 (Some!181 (_2!1360 (h!2348 (toList!888 lt!72902)))))))

(declare-fun b!141349 () Bool)

(assert (=> b!141349 (= e!92125 e!92126)))

(declare-fun c!26585 () Bool)

(assert (=> b!141349 (= c!26585 (and ((_ is Cons!1741) (toList!888 lt!72902)) (not (= (_1!1360 (h!2348 (toList!888 lt!72902))) lt!72903))))))

(declare-fun d!44373 () Bool)

(declare-fun c!26584 () Bool)

(assert (=> d!44373 (= c!26584 (and ((_ is Cons!1741) (toList!888 lt!72902)) (= (_1!1360 (h!2348 (toList!888 lt!72902))) lt!72903)))))

(assert (=> d!44373 (= (getValueByKey!176 (toList!888 lt!72902) lt!72903) e!92125)))

(declare-fun b!141350 () Bool)

(assert (=> b!141350 (= e!92126 (getValueByKey!176 (t!6329 (toList!888 lt!72902)) lt!72903))))

(assert (= (and d!44373 c!26584) b!141348))

(assert (= (and d!44373 (not c!26584)) b!141349))

(assert (= (and b!141349 c!26585) b!141350))

(assert (= (and b!141349 (not c!26585)) b!141351))

(declare-fun m!169529 () Bool)

(assert (=> b!141350 m!169529))

(assert (=> b!140341 d!44373))

(declare-fun d!44375 () Bool)

(assert (=> d!44375 (= (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049)) (not (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))))

(declare-fun bs!5923 () Bool)

(assert (= bs!5923 d!44375))

(assert (=> bs!5923 m!167267))

(declare-fun m!169531 () Bool)

(assert (=> bs!5923 m!169531))

(assert (=> b!140198 d!44375))

(declare-fun b!141355 () Bool)

(declare-fun e!92128 () Option!182)

(assert (=> b!141355 (= e!92128 None!180)))

(declare-fun e!92127 () Option!182)

(declare-fun b!141352 () Bool)

(assert (=> b!141352 (= e!92127 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))))))))

(declare-fun b!141353 () Bool)

(assert (=> b!141353 (= e!92127 e!92128)))

(declare-fun c!26587 () Bool)

(assert (=> b!141353 (= c!26587 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))))) lt!73049))))))

(declare-fun d!44377 () Bool)

(declare-fun c!26586 () Bool)

(assert (=> d!44377 (= c!26586 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))))) lt!73049)))))

(assert (=> d!44377 (= (getValueByKey!176 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049) e!92127)))

(declare-fun b!141354 () Bool)

(assert (=> b!141354 (= e!92128 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))) lt!73049))))

(assert (= (and d!44377 c!26586) b!141352))

(assert (= (and d!44377 (not c!26586)) b!141353))

(assert (= (and b!141353 c!26587) b!141354))

(assert (= (and b!141353 (not c!26587)) b!141355))

(declare-fun m!169533 () Bool)

(assert (=> b!141354 m!169533))

(assert (=> b!140198 d!44377))

(declare-fun d!44379 () Bool)

(assert (=> d!44379 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72887) lt!72888)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72887) lt!72888))))))

(declare-fun bs!5924 () Bool)

(assert (= bs!5924 d!44379))

(assert (=> bs!5924 m!166349))

(declare-fun m!169535 () Bool)

(assert (=> bs!5924 m!169535))

(assert (=> b!140073 d!44379))

(assert (=> b!140073 d!43489))

(declare-fun d!44381 () Bool)

(declare-fun res!67479 () Bool)

(declare-fun e!92129 () Bool)

(assert (=> d!44381 (=> res!67479 e!92129)))

(assert (=> d!44381 (= res!67479 (or ((_ is Nil!1742) lt!73537) ((_ is Nil!1742) (t!6329 lt!73537))))))

(assert (=> d!44381 (= (isStrictlySorted!325 lt!73537) e!92129)))

(declare-fun b!141356 () Bool)

(declare-fun e!92130 () Bool)

(assert (=> b!141356 (= e!92129 e!92130)))

(declare-fun res!67480 () Bool)

(assert (=> b!141356 (=> (not res!67480) (not e!92130))))

(assert (=> b!141356 (= res!67480 (bvslt (_1!1360 (h!2348 lt!73537)) (_1!1360 (h!2348 (t!6329 lt!73537)))))))

(declare-fun b!141357 () Bool)

(assert (=> b!141357 (= e!92130 (isStrictlySorted!325 (t!6329 lt!73537)))))

(assert (= (and d!44381 (not res!67479)) b!141356))

(assert (= (and b!141356 res!67480) b!141357))

(declare-fun m!169537 () Bool)

(assert (=> b!141357 m!169537))

(assert (=> d!43655 d!44381))

(declare-fun d!44383 () Bool)

(declare-fun res!67481 () Bool)

(declare-fun e!92131 () Bool)

(assert (=> d!44383 (=> res!67481 e!92131)))

(assert (=> d!44383 (= res!67481 (or ((_ is Nil!1742) (toList!888 lt!72902)) ((_ is Nil!1742) (t!6329 (toList!888 lt!72902)))))))

(assert (=> d!44383 (= (isStrictlySorted!325 (toList!888 lt!72902)) e!92131)))

(declare-fun b!141358 () Bool)

(declare-fun e!92132 () Bool)

(assert (=> b!141358 (= e!92131 e!92132)))

(declare-fun res!67482 () Bool)

(assert (=> b!141358 (=> (not res!67482) (not e!92132))))

(assert (=> b!141358 (= res!67482 (bvslt (_1!1360 (h!2348 (toList!888 lt!72902))) (_1!1360 (h!2348 (t!6329 (toList!888 lt!72902))))))))

(declare-fun b!141359 () Bool)

(assert (=> b!141359 (= e!92132 (isStrictlySorted!325 (t!6329 (toList!888 lt!72902))))))

(assert (= (and d!44383 (not res!67481)) b!141358))

(assert (= (and b!141358 res!67482) b!141359))

(declare-fun m!169539 () Bool)

(assert (=> b!141359 m!169539))

(assert (=> d!43655 d!44383))

(declare-fun d!44385 () Bool)

(assert (=> d!44385 (= (apply!120 lt!73824 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73824) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5925 () Bool)

(assert (= bs!5925 d!44385))

(declare-fun m!169541 () Bool)

(assert (=> bs!5925 m!169541))

(assert (=> bs!5925 m!169541))

(declare-fun m!169543 () Bool)

(assert (=> bs!5925 m!169543))

(assert (=> b!140716 d!44385))

(declare-fun d!44387 () Bool)

(assert (=> d!44387 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16))))

(assert (=> d!44387 true))

(declare-fun _$56!15 () Unit!4373)

(assert (=> d!44387 (= (choose!102 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (mask!7280 newMap!16)) _$56!15)))

(declare-fun bs!5926 () Bool)

(assert (= bs!5926 d!44387))

(assert (=> bs!5926 m!166671))

(assert (=> bs!5926 m!166673))

(assert (=> d!43711 d!44387))

(assert (=> d!43711 d!43527))

(assert (=> b!140719 d!43757))

(assert (=> b!140328 d!43479))

(assert (=> d!43921 d!43905))

(declare-fun d!44389 () Bool)

(declare-fun e!92133 () Bool)

(assert (=> d!44389 e!92133))

(declare-fun res!67483 () Bool)

(assert (=> d!44389 (=> res!67483 e!92133)))

(declare-fun lt!74090 () Bool)

(assert (=> d!44389 (= res!67483 (not lt!74090))))

(declare-fun lt!74088 () Bool)

(assert (=> d!44389 (= lt!74090 lt!74088)))

(declare-fun lt!74089 () Unit!4373)

(declare-fun e!92134 () Unit!4373)

(assert (=> d!44389 (= lt!74089 e!92134)))

(declare-fun c!26588 () Bool)

(assert (=> d!44389 (= c!26588 lt!74088)))

(assert (=> d!44389 (= lt!74088 (containsKey!180 (toList!888 lt!73091) lt!73086))))

(assert (=> d!44389 (= (contains!923 lt!73091 lt!73086) lt!74090)))

(declare-fun b!141360 () Bool)

(declare-fun lt!74091 () Unit!4373)

(assert (=> b!141360 (= e!92134 lt!74091)))

(assert (=> b!141360 (= lt!74091 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73091) lt!73086))))

(assert (=> b!141360 (isDefined!129 (getValueByKey!176 (toList!888 lt!73091) lt!73086))))

(declare-fun b!141361 () Bool)

(declare-fun Unit!4458 () Unit!4373)

(assert (=> b!141361 (= e!92134 Unit!4458)))

(declare-fun b!141362 () Bool)

(assert (=> b!141362 (= e!92133 (isDefined!129 (getValueByKey!176 (toList!888 lt!73091) lt!73086)))))

(assert (= (and d!44389 c!26588) b!141360))

(assert (= (and d!44389 (not c!26588)) b!141361))

(assert (= (and d!44389 (not res!67483)) b!141362))

(declare-fun m!169545 () Bool)

(assert (=> d!44389 m!169545))

(declare-fun m!169547 () Bool)

(assert (=> b!141360 m!169547))

(assert (=> b!141360 m!168497))

(assert (=> b!141360 m!168497))

(declare-fun m!169549 () Bool)

(assert (=> b!141360 m!169549))

(assert (=> b!141362 m!168497))

(assert (=> b!141362 m!168497))

(assert (=> b!141362 m!169549))

(assert (=> d!43921 d!44389))

(assert (=> d!43921 d!43923))

(assert (=> d!43921 d!43929))

(declare-fun d!44391 () Bool)

(assert (=> d!44391 (= (apply!120 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) lt!73086) (apply!120 lt!73091 lt!73086))))

(assert (=> d!44391 true))

(declare-fun _$34!1005 () Unit!4373)

(assert (=> d!44391 (= (choose!856 lt!73091 lt!73087 (minValue!2790 newMap!16) lt!73086) _$34!1005)))

(declare-fun bs!5927 () Bool)

(assert (= bs!5927 d!44391))

(assert (=> bs!5927 m!166419))

(assert (=> bs!5927 m!166419))

(assert (=> bs!5927 m!166421))

(assert (=> bs!5927 m!166409))

(assert (=> d!43921 d!44391))

(declare-fun b!141366 () Bool)

(declare-fun e!92136 () Option!182)

(assert (=> b!141366 (= e!92136 None!180)))

(declare-fun b!141363 () Bool)

(declare-fun e!92135 () Option!182)

(assert (=> b!141363 (= e!92135 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73835)))))))

(declare-fun b!141364 () Bool)

(assert (=> b!141364 (= e!92135 e!92136)))

(declare-fun c!26590 () Bool)

(assert (=> b!141364 (= c!26590 (and ((_ is Cons!1741) (toList!888 lt!73835)) (not (= (_1!1360 (h!2348 (toList!888 lt!73835))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26589 () Bool)

(declare-fun d!44393 () Bool)

(assert (=> d!44393 (= c!26589 (and ((_ is Cons!1741) (toList!888 lt!73835)) (= (_1!1360 (h!2348 (toList!888 lt!73835))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44393 (= (getValueByKey!176 (toList!888 lt!73835) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92135)))

(declare-fun b!141365 () Bool)

(assert (=> b!141365 (= e!92136 (getValueByKey!176 (t!6329 (toList!888 lt!73835)) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44393 c!26589) b!141363))

(assert (= (and d!44393 (not c!26589)) b!141364))

(assert (= (and b!141364 c!26590) b!141365))

(assert (= (and b!141364 (not c!26590)) b!141366))

(declare-fun m!169551 () Bool)

(assert (=> b!141365 m!169551))

(assert (=> b!140728 d!44393))

(declare-fun lt!74092 () Bool)

(declare-fun d!44395 () Bool)

(assert (=> d!44395 (= lt!74092 (select (content!138 (toList!888 lt!73769)) (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun e!92138 () Bool)

(assert (=> d!44395 (= lt!74092 e!92138)))

(declare-fun res!67484 () Bool)

(assert (=> d!44395 (=> (not res!67484) (not e!92138))))

(assert (=> d!44395 (= res!67484 ((_ is Cons!1741) (toList!888 lt!73769)))))

(assert (=> d!44395 (= (contains!925 (toList!888 lt!73769) (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74092)))

(declare-fun b!141367 () Bool)

(declare-fun e!92137 () Bool)

(assert (=> b!141367 (= e!92138 e!92137)))

(declare-fun res!67485 () Bool)

(assert (=> b!141367 (=> res!67485 e!92137)))

(assert (=> b!141367 (= res!67485 (= (h!2348 (toList!888 lt!73769)) (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!141368 () Bool)

(assert (=> b!141368 (= e!92137 (contains!925 (t!6329 (toList!888 lt!73769)) (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!44395 res!67484) b!141367))

(assert (= (and b!141367 (not res!67485)) b!141368))

(declare-fun m!169553 () Bool)

(assert (=> d!44395 m!169553))

(declare-fun m!169555 () Bool)

(assert (=> d!44395 m!169555))

(declare-fun m!169557 () Bool)

(assert (=> b!141368 m!169557))

(assert (=> b!140656 d!44395))

(assert (=> d!43967 d!43527))

(declare-fun b!141369 () Bool)

(declare-fun e!92139 () (_ BitVec 32))

(assert (=> b!141369 (= e!92139 #b00000000000000000000000000000000)))

(declare-fun b!141370 () Bool)

(declare-fun e!92140 () (_ BitVec 32))

(declare-fun call!15688 () (_ BitVec 32))

(assert (=> b!141370 (= e!92140 call!15688)))

(declare-fun bm!15685 () Bool)

(assert (=> bm!15685 (= call!15688 (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!73257)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(declare-fun d!44397 () Bool)

(declare-fun lt!74093 () (_ BitVec 32))

(assert (=> d!44397 (and (bvsge lt!74093 #b00000000000000000000000000000000) (bvsle lt!74093 (bvsub (size!2587 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(assert (=> d!44397 (= lt!74093 e!92139)))

(declare-fun c!26591 () Bool)

(assert (=> d!44397 (= c!26591 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(assert (=> d!44397 (and (bvsle #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 (_2!1361 lt!73257))) (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(assert (=> d!44397 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))) lt!74093)))

(declare-fun b!141371 () Bool)

(assert (=> b!141371 (= e!92139 e!92140)))

(declare-fun c!26592 () Bool)

(assert (=> b!141371 (= c!26592 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(declare-fun b!141372 () Bool)

(assert (=> b!141372 (= e!92140 (bvadd #b00000000000000000000000000000001 call!15688))))

(assert (= (and d!44397 c!26591) b!141369))

(assert (= (and d!44397 (not c!26591)) b!141371))

(assert (= (and b!141371 c!26592) b!141372))

(assert (= (and b!141371 (not c!26592)) b!141370))

(assert (= (or b!141372 b!141370) bm!15685))

(declare-fun m!169559 () Bool)

(assert (=> bm!15685 m!169559))

(assert (=> b!141371 m!168781))

(assert (=> b!141371 m!168781))

(assert (=> b!141371 m!168791))

(assert (=> b!140106 d!44397))

(assert (=> b!140583 d!43479))

(declare-fun d!44399 () Bool)

(declare-fun e!92141 () Bool)

(assert (=> d!44399 e!92141))

(declare-fun res!67486 () Bool)

(assert (=> d!44399 (=> (not res!67486) (not e!92141))))

(declare-fun lt!74097 () ListLongMap!1745)

(assert (=> d!44399 (= res!67486 (contains!923 lt!74097 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(declare-fun lt!74094 () List!1745)

(assert (=> d!44399 (= lt!74097 (ListLongMap!1746 lt!74094))))

(declare-fun lt!74095 () Unit!4373)

(declare-fun lt!74096 () Unit!4373)

(assert (=> d!44399 (= lt!74095 lt!74096)))

(assert (=> d!44399 (= (getValueByKey!176 lt!74094 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!44399 (= lt!74096 (lemmaContainsTupThenGetReturnValue!90 lt!74094 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!44399 (= lt!74094 (insertStrictlySorted!93 (toList!888 call!15556) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!44399 (= (+!179 call!15556 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!74097)))

(declare-fun b!141373 () Bool)

(declare-fun res!67487 () Bool)

(assert (=> b!141373 (=> (not res!67487) (not e!92141))))

(assert (=> b!141373 (= res!67487 (= (getValueByKey!176 (toList!888 lt!74097) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun b!141374 () Bool)

(assert (=> b!141374 (= e!92141 (contains!925 (toList!888 lt!74097) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (= (and d!44399 res!67486) b!141373))

(assert (= (and b!141373 res!67487) b!141374))

(declare-fun m!169561 () Bool)

(assert (=> d!44399 m!169561))

(declare-fun m!169563 () Bool)

(assert (=> d!44399 m!169563))

(declare-fun m!169565 () Bool)

(assert (=> d!44399 m!169565))

(declare-fun m!169567 () Bool)

(assert (=> d!44399 m!169567))

(declare-fun m!169569 () Bool)

(assert (=> b!141373 m!169569))

(declare-fun m!169571 () Bool)

(assert (=> b!141374 m!169571))

(assert (=> b!140038 d!44399))

(declare-fun d!44401 () Bool)

(declare-fun lt!74098 () Bool)

(assert (=> d!44401 (= lt!74098 (select (content!138 lt!73433) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92143 () Bool)

(assert (=> d!44401 (= lt!74098 e!92143)))

(declare-fun res!67488 () Bool)

(assert (=> d!44401 (=> (not res!67488) (not e!92143))))

(assert (=> d!44401 (= res!67488 ((_ is Cons!1741) lt!73433))))

(assert (=> d!44401 (= (contains!925 lt!73433 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74098)))

(declare-fun b!141375 () Bool)

(declare-fun e!92142 () Bool)

(assert (=> b!141375 (= e!92143 e!92142)))

(declare-fun res!67489 () Bool)

(assert (=> b!141375 (=> res!67489 e!92142)))

(assert (=> b!141375 (= res!67489 (= (h!2348 lt!73433) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141376 () Bool)

(assert (=> b!141376 (= e!92142 (contains!925 (t!6329 lt!73433) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44401 res!67488) b!141375))

(assert (= (and b!141375 (not res!67489)) b!141376))

(declare-fun m!169573 () Bool)

(assert (=> d!44401 m!169573))

(declare-fun m!169575 () Bool)

(assert (=> d!44401 m!169575))

(declare-fun m!169577 () Bool)

(assert (=> b!141376 m!169577))

(assert (=> b!140131 d!44401))

(declare-fun b!141377 () Bool)

(declare-fun e!92145 () Bool)

(declare-fun e!92146 () Bool)

(assert (=> b!141377 (= e!92145 e!92146)))

(declare-fun lt!74100 () (_ BitVec 64))

(assert (=> b!141377 (= lt!74100 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74099 () Unit!4373)

(assert (=> b!141377 (= lt!74099 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!74100 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141377 (arrayContainsKey!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!74100 #b00000000000000000000000000000000)))

(declare-fun lt!74101 () Unit!4373)

(assert (=> b!141377 (= lt!74101 lt!74099)))

(declare-fun res!67490 () Bool)

(assert (=> b!141377 (= res!67490 (= (seekEntryOrOpen!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) (Found!279 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141377 (=> (not res!67490) (not e!92146))))

(declare-fun d!44403 () Bool)

(declare-fun res!67491 () Bool)

(declare-fun e!92144 () Bool)

(assert (=> d!44403 (=> res!67491 e!92144)))

(assert (=> d!44403 (= res!67491 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!44403 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) e!92144)))

(declare-fun b!141378 () Bool)

(declare-fun call!15689 () Bool)

(assert (=> b!141378 (= e!92146 call!15689)))

(declare-fun bm!15686 () Bool)

(assert (=> bm!15686 (= call!15689 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(declare-fun b!141379 () Bool)

(assert (=> b!141379 (= e!92144 e!92145)))

(declare-fun c!26593 () Bool)

(assert (=> b!141379 (= c!26593 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141380 () Bool)

(assert (=> b!141380 (= e!92145 call!15689)))

(assert (= (and d!44403 (not res!67491)) b!141379))

(assert (= (and b!141379 c!26593) b!141377))

(assert (= (and b!141379 (not c!26593)) b!141380))

(assert (= (and b!141377 res!67490) b!141378))

(assert (= (or b!141378 b!141380) bm!15686))

(declare-fun m!169579 () Bool)

(assert (=> b!141377 m!169579))

(declare-fun m!169581 () Bool)

(assert (=> b!141377 m!169581))

(declare-fun m!169583 () Bool)

(assert (=> b!141377 m!169583))

(assert (=> b!141377 m!169579))

(declare-fun m!169585 () Bool)

(assert (=> b!141377 m!169585))

(declare-fun m!169587 () Bool)

(assert (=> bm!15686 m!169587))

(assert (=> b!141379 m!169579))

(assert (=> b!141379 m!169579))

(declare-fun m!169589 () Bool)

(assert (=> b!141379 m!169589))

(assert (=> bm!15593 d!44403))

(declare-fun d!44405 () Bool)

(assert (=> d!44405 (= (get!1530 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140809 d!44405))

(assert (=> d!43653 d!43651))

(declare-fun d!44407 () Bool)

(assert (=> d!44407 (= (getValueByKey!176 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!44407 true))

(declare-fun _$22!494 () Unit!4373)

(assert (=> d!44407 (= (choose!865 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) _$22!494)))

(declare-fun bs!5928 () Bool)

(assert (= bs!5928 d!44407))

(assert (=> bs!5928 m!166359))

(assert (=> d!43653 d!44407))

(declare-fun d!44409 () Bool)

(declare-fun res!67492 () Bool)

(declare-fun e!92147 () Bool)

(assert (=> d!44409 (=> res!67492 e!92147)))

(assert (=> d!44409 (= res!67492 (or ((_ is Nil!1742) lt!73064) ((_ is Nil!1742) (t!6329 lt!73064))))))

(assert (=> d!44409 (= (isStrictlySorted!325 lt!73064) e!92147)))

(declare-fun b!141381 () Bool)

(declare-fun e!92148 () Bool)

(assert (=> b!141381 (= e!92147 e!92148)))

(declare-fun res!67493 () Bool)

(assert (=> b!141381 (=> (not res!67493) (not e!92148))))

(assert (=> b!141381 (= res!67493 (bvslt (_1!1360 (h!2348 lt!73064)) (_1!1360 (h!2348 (t!6329 lt!73064)))))))

(declare-fun b!141382 () Bool)

(assert (=> b!141382 (= e!92148 (isStrictlySorted!325 (t!6329 lt!73064)))))

(assert (= (and d!44409 (not res!67492)) b!141381))

(assert (= (and b!141381 res!67493) b!141382))

(declare-fun m!169591 () Bool)

(assert (=> b!141382 m!169591))

(assert (=> d!43653 d!44409))

(assert (=> b!140452 d!44345))

(declare-fun d!44411 () Bool)

(assert (=> d!44411 (= (apply!120 lt!73824 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73824) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5929 () Bool)

(assert (= bs!5929 d!44411))

(assert (=> bs!5929 m!166385))

(assert (=> bs!5929 m!169339))

(assert (=> bs!5929 m!169339))

(declare-fun m!169593 () Bool)

(assert (=> bs!5929 m!169593))

(assert (=> b!140702 d!44411))

(assert (=> b!140702 d!43463))

(assert (=> b!140415 d!43705))

(declare-fun b!141386 () Bool)

(declare-fun e!92150 () Option!182)

(assert (=> b!141386 (= e!92150 None!180)))

(declare-fun e!92149 () Option!182)

(declare-fun b!141383 () Bool)

(assert (=> b!141383 (= e!92149 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))))

(declare-fun b!141384 () Bool)

(assert (=> b!141384 (= e!92149 e!92150)))

(declare-fun c!26595 () Bool)

(assert (=> b!141384 (= c!26595 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72900))))))

(declare-fun c!26594 () Bool)

(declare-fun d!44413 () Bool)

(assert (=> d!44413 (= c!26594 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72900)))))

(assert (=> d!44413 (= (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72900) e!92149)))

(declare-fun b!141385 () Bool)

(assert (=> b!141385 (= e!92150 (getValueByKey!176 (t!6329 (t!6329 (toList!888 (+!179 lt!72905 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72900))))

(assert (= (and d!44413 c!26594) b!141383))

(assert (= (and d!44413 (not c!26594)) b!141384))

(assert (= (and b!141384 c!26595) b!141385))

(assert (= (and b!141384 (not c!26595)) b!141386))

(declare-fun m!169595 () Bool)

(assert (=> b!141385 m!169595))

(assert (=> b!140190 d!44413))

(declare-fun b!141387 () Bool)

(declare-fun e!92151 () (_ BitVec 32))

(assert (=> b!141387 (= e!92151 #b00000000000000000000000000000000)))

(declare-fun b!141388 () Bool)

(declare-fun e!92152 () (_ BitVec 32))

(declare-fun call!15690 () (_ BitVec 32))

(assert (=> b!141388 (= e!92152 call!15690)))

(declare-fun bm!15687 () Bool)

(assert (=> bm!15687 (= call!15690 (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44415 () Bool)

(declare-fun lt!74102 () (_ BitVec 32))

(assert (=> d!44415 (and (bvsge lt!74102 #b00000000000000000000000000000000) (bvsle lt!74102 (bvsub (size!2587 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!44415 (= lt!74102 e!92151)))

(declare-fun c!26596 () Bool)

(assert (=> d!44415 (= c!26596 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44415 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 newMap!16)) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44415 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))) lt!74102)))

(declare-fun b!141389 () Bool)

(assert (=> b!141389 (= e!92151 e!92152)))

(declare-fun c!26597 () Bool)

(assert (=> b!141389 (= c!26597 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141390 () Bool)

(assert (=> b!141390 (= e!92152 (bvadd #b00000000000000000000000000000001 call!15690))))

(assert (= (and d!44415 c!26596) b!141387))

(assert (= (and d!44415 (not c!26596)) b!141389))

(assert (= (and b!141389 c!26597) b!141390))

(assert (= (and b!141389 (not c!26597)) b!141388))

(assert (= (or b!141390 b!141388) bm!15687))

(declare-fun m!169597 () Bool)

(assert (=> bm!15687 m!169597))

(assert (=> b!141389 m!168763))

(assert (=> b!141389 m!168763))

(assert (=> b!141389 m!168773))

(assert (=> bm!15626 d!44415))

(declare-fun b!141394 () Bool)

(declare-fun e!92154 () Option!182)

(assert (=> b!141394 (= e!92154 None!180)))

(declare-fun e!92153 () Option!182)

(declare-fun b!141391 () Bool)

(assert (=> b!141391 (= e!92153 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))))

(declare-fun b!141392 () Bool)

(assert (=> b!141392 (= e!92153 e!92154)))

(declare-fun c!26599 () Bool)

(assert (=> b!141392 (= c!26599 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72888))))))

(declare-fun d!44417 () Bool)

(declare-fun c!26598 () Bool)

(assert (=> d!44417 (= c!26598 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72888)))))

(assert (=> d!44417 (= (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72888) e!92153)))

(declare-fun b!141393 () Bool)

(assert (=> b!141393 (= e!92154 (getValueByKey!176 (t!6329 (t!6329 (toList!888 (+!179 lt!72887 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72888))))

(assert (= (and d!44417 c!26598) b!141391))

(assert (= (and d!44417 (not c!26598)) b!141392))

(assert (= (and b!141392 c!26599) b!141393))

(assert (= (and b!141392 (not c!26599)) b!141394))

(declare-fun m!169599 () Bool)

(assert (=> b!141393 m!169599))

(assert (=> b!140737 d!44417))

(declare-fun d!44419 () Bool)

(assert (=> d!44419 (isDefined!129 (getValueByKey!176 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74103 () Unit!4373)

(assert (=> d!44419 (= lt!74103 (choose!864 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92155 () Bool)

(assert (=> d!44419 e!92155))

(declare-fun res!67494 () Bool)

(assert (=> d!44419 (=> (not res!67494) (not e!92155))))

(assert (=> d!44419 (= res!67494 (isStrictlySorted!325 (toList!888 lt!73125)))))

(assert (=> d!44419 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74103)))

(declare-fun b!141395 () Bool)

(assert (=> b!141395 (= e!92155 (containsKey!180 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44419 res!67494) b!141395))

(assert (=> d!44419 m!166507))

(assert (=> d!44419 m!166507))

(assert (=> d!44419 m!166905))

(declare-fun m!169601 () Bool)

(assert (=> d!44419 m!169601))

(declare-fun m!169603 () Bool)

(assert (=> d!44419 m!169603))

(assert (=> b!141395 m!166901))

(assert (=> b!140008 d!44419))

(assert (=> b!140008 d!44169))

(assert (=> b!140008 d!43475))

(assert (=> d!43613 d!43615))

(assert (=> d!43613 d!43623))

(assert (=> d!43613 d!43625))

(declare-fun d!44421 () Bool)

(declare-fun e!92156 () Bool)

(assert (=> d!44421 e!92156))

(declare-fun res!67495 () Bool)

(assert (=> d!44421 (=> res!67495 e!92156)))

(declare-fun lt!74106 () Bool)

(assert (=> d!44421 (= res!67495 (not lt!74106))))

(declare-fun lt!74104 () Bool)

(assert (=> d!44421 (= lt!74106 lt!74104)))

(declare-fun lt!74105 () Unit!4373)

(declare-fun e!92157 () Unit!4373)

(assert (=> d!44421 (= lt!74105 e!92157)))

(declare-fun c!26600 () Bool)

(assert (=> d!44421 (= c!26600 lt!74104)))

(assert (=> d!44421 (= lt!74104 (containsKey!180 (toList!888 lt!73330) lt!73325))))

(assert (=> d!44421 (= (contains!923 lt!73330 lt!73325) lt!74106)))

(declare-fun b!141396 () Bool)

(declare-fun lt!74107 () Unit!4373)

(assert (=> b!141396 (= e!92157 lt!74107)))

(assert (=> b!141396 (= lt!74107 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73330) lt!73325))))

(assert (=> b!141396 (isDefined!129 (getValueByKey!176 (toList!888 lt!73330) lt!73325))))

(declare-fun b!141397 () Bool)

(declare-fun Unit!4459 () Unit!4373)

(assert (=> b!141397 (= e!92157 Unit!4459)))

(declare-fun b!141398 () Bool)

(assert (=> b!141398 (= e!92156 (isDefined!129 (getValueByKey!176 (toList!888 lt!73330) lt!73325)))))

(assert (= (and d!44421 c!26600) b!141396))

(assert (= (and d!44421 (not c!26600)) b!141397))

(assert (= (and d!44421 (not res!67495)) b!141398))

(declare-fun m!169605 () Bool)

(assert (=> d!44421 m!169605))

(declare-fun m!169607 () Bool)

(assert (=> b!141396 m!169607))

(assert (=> b!141396 m!167425))

(assert (=> b!141396 m!167425))

(declare-fun m!169609 () Bool)

(assert (=> b!141396 m!169609))

(assert (=> b!141398 m!167425))

(assert (=> b!141398 m!167425))

(assert (=> b!141398 m!169609))

(assert (=> d!43613 d!44421))

(declare-fun d!44423 () Bool)

(assert (=> d!44423 (= (apply!120 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) lt!73325) (apply!120 lt!73330 lt!73325))))

(assert (=> d!44423 true))

(declare-fun _$34!1006 () Unit!4373)

(assert (=> d!44423 (= (choose!856 lt!73330 lt!73326 (minValue!2790 newMap!16) lt!73325) _$34!1006)))

(declare-fun bs!5930 () Bool)

(assert (= bs!5930 d!44423))

(assert (=> bs!5930 m!166829))

(assert (=> bs!5930 m!166829))

(assert (=> bs!5930 m!166831))

(assert (=> bs!5930 m!166819))

(assert (=> d!43613 d!44423))

(declare-fun d!44425 () Bool)

(assert (=> d!44425 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74108 () Unit!4373)

(assert (=> d!44425 (= lt!74108 (choose!864 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92158 () Bool)

(assert (=> d!44425 e!92158))

(declare-fun res!67496 () Bool)

(assert (=> d!44425 (=> (not res!67496) (not e!92158))))

(assert (=> d!44425 (= res!67496 (isStrictlySorted!325 (toList!888 lt!73332)))))

(assert (=> d!44425 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74108)))

(declare-fun b!141399 () Bool)

(assert (=> b!141399 (= e!92158 (containsKey!180 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44425 res!67496) b!141399))

(assert (=> d!44425 m!167035))

(assert (=> d!44425 m!167035))

(assert (=> d!44425 m!167567))

(declare-fun m!169611 () Bool)

(assert (=> d!44425 m!169611))

(assert (=> d!44425 m!169133))

(assert (=> b!141399 m!167563))

(assert (=> b!140306 d!44425))

(assert (=> b!140306 d!44213))

(assert (=> b!140306 d!44215))

(assert (=> d!43715 d!43527))

(declare-fun d!44427 () Bool)

(declare-fun e!92159 () Bool)

(assert (=> d!44427 e!92159))

(declare-fun res!67497 () Bool)

(assert (=> d!44427 (=> res!67497 e!92159)))

(declare-fun lt!74111 () Bool)

(assert (=> d!44427 (= res!67497 (not lt!74111))))

(declare-fun lt!74109 () Bool)

(assert (=> d!44427 (= lt!74111 lt!74109)))

(declare-fun lt!74110 () Unit!4373)

(declare-fun e!92160 () Unit!4373)

(assert (=> d!44427 (= lt!74110 e!92160)))

(declare-fun c!26601 () Bool)

(assert (=> d!44427 (= c!26601 lt!74109)))

(assert (=> d!44427 (= lt!74109 (containsKey!180 (toList!888 lt!73413) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (=> d!44427 (= (contains!923 lt!73413 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!74111)))

(declare-fun b!141400 () Bool)

(declare-fun lt!74112 () Unit!4373)

(assert (=> b!141400 (= e!92160 lt!74112)))

(assert (=> b!141400 (= lt!74112 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73413) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (=> b!141400 (isDefined!129 (getValueByKey!176 (toList!888 lt!73413) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(declare-fun b!141401 () Bool)

(declare-fun Unit!4460 () Unit!4373)

(assert (=> b!141401 (= e!92160 Unit!4460)))

(declare-fun b!141402 () Bool)

(assert (=> b!141402 (= e!92159 (isDefined!129 (getValueByKey!176 (toList!888 lt!73413) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(assert (= (and d!44427 c!26601) b!141400))

(assert (= (and d!44427 (not c!26601)) b!141401))

(assert (= (and d!44427 (not res!67497)) b!141402))

(declare-fun m!169613 () Bool)

(assert (=> d!44427 m!169613))

(declare-fun m!169615 () Bool)

(assert (=> b!141400 m!169615))

(assert (=> b!141400 m!167127))

(assert (=> b!141400 m!167127))

(declare-fun m!169617 () Bool)

(assert (=> b!141400 m!169617))

(assert (=> b!141402 m!167127))

(assert (=> b!141402 m!167127))

(assert (=> b!141402 m!169617))

(assert (=> d!43513 d!44427))

(declare-fun b!141406 () Bool)

(declare-fun e!92162 () Option!182)

(assert (=> b!141406 (= e!92162 None!180)))

(declare-fun b!141403 () Bool)

(declare-fun e!92161 () Option!182)

(assert (=> b!141403 (= e!92161 (Some!181 (_2!1360 (h!2348 lt!73410))))))

(declare-fun b!141404 () Bool)

(assert (=> b!141404 (= e!92161 e!92162)))

(declare-fun c!26603 () Bool)

(assert (=> b!141404 (= c!26603 (and ((_ is Cons!1741) lt!73410) (not (= (_1!1360 (h!2348 lt!73410)) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))))

(declare-fun c!26602 () Bool)

(declare-fun d!44429 () Bool)

(assert (=> d!44429 (= c!26602 (and ((_ is Cons!1741) lt!73410) (= (_1!1360 (h!2348 lt!73410)) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(assert (=> d!44429 (= (getValueByKey!176 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) e!92161)))

(declare-fun b!141405 () Bool)

(assert (=> b!141405 (= e!92162 (getValueByKey!176 (t!6329 lt!73410) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (= (and d!44429 c!26602) b!141403))

(assert (= (and d!44429 (not c!26602)) b!141404))

(assert (= (and b!141404 c!26603) b!141405))

(assert (= (and b!141404 (not c!26603)) b!141406))

(declare-fun m!169619 () Bool)

(assert (=> b!141405 m!169619))

(assert (=> d!43513 d!44429))

(declare-fun d!44431 () Bool)

(assert (=> d!44431 (= (getValueByKey!176 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(declare-fun lt!74113 () Unit!4373)

(assert (=> d!44431 (= lt!74113 (choose!865 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(declare-fun e!92163 () Bool)

(assert (=> d!44431 e!92163))

(declare-fun res!67498 () Bool)

(assert (=> d!44431 (=> (not res!67498) (not e!92163))))

(assert (=> d!44431 (= res!67498 (isStrictlySorted!325 lt!73410))))

(assert (=> d!44431 (= (lemmaContainsTupThenGetReturnValue!90 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!74113)))

(declare-fun b!141407 () Bool)

(declare-fun res!67499 () Bool)

(assert (=> b!141407 (=> (not res!67499) (not e!92163))))

(assert (=> b!141407 (= res!67499 (containsKey!180 lt!73410 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(declare-fun b!141408 () Bool)

(assert (=> b!141408 (= e!92163 (contains!925 lt!73410 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(assert (= (and d!44431 res!67498) b!141407))

(assert (= (and b!141407 res!67499) b!141408))

(assert (=> d!44431 m!167121))

(declare-fun m!169621 () Bool)

(assert (=> d!44431 m!169621))

(declare-fun m!169623 () Bool)

(assert (=> d!44431 m!169623))

(declare-fun m!169625 () Bool)

(assert (=> b!141407 m!169625))

(declare-fun m!169627 () Bool)

(assert (=> b!141408 m!169627))

(assert (=> d!43513 d!44431))

(declare-fun b!141409 () Bool)

(declare-fun e!92164 () List!1745)

(declare-fun call!15693 () List!1745)

(assert (=> b!141409 (= e!92164 call!15693)))

(declare-fun bm!15688 () Bool)

(declare-fun call!15691 () List!1745)

(assert (=> bm!15688 (= call!15693 call!15691)))

(declare-fun d!44433 () Bool)

(declare-fun e!92168 () Bool)

(assert (=> d!44433 e!92168))

(declare-fun res!67500 () Bool)

(assert (=> d!44433 (=> (not res!67500) (not e!92168))))

(declare-fun lt!74114 () List!1745)

(assert (=> d!44433 (= res!67500 (isStrictlySorted!325 lt!74114))))

(declare-fun e!92165 () List!1745)

(assert (=> d!44433 (= lt!74114 e!92165)))

(declare-fun c!26606 () Bool)

(assert (=> d!44433 (= c!26606 (and ((_ is Cons!1741) (toList!888 lt!73140)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73140))) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(assert (=> d!44433 (isStrictlySorted!325 (toList!888 lt!73140))))

(assert (=> d!44433 (= (insertStrictlySorted!93 (toList!888 lt!73140) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!74114)))

(declare-fun bm!15689 () Bool)

(declare-fun call!15692 () List!1745)

(assert (=> bm!15689 (= call!15691 call!15692)))

(declare-fun b!141410 () Bool)

(declare-fun e!92166 () List!1745)

(assert (=> b!141410 (= e!92165 e!92166)))

(declare-fun c!26605 () Bool)

(assert (=> b!141410 (= c!26605 (and ((_ is Cons!1741) (toList!888 lt!73140)) (= (_1!1360 (h!2348 (toList!888 lt!73140))) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(declare-fun b!141411 () Bool)

(assert (=> b!141411 (= e!92165 call!15692)))

(declare-fun e!92167 () List!1745)

(declare-fun bm!15690 () Bool)

(assert (=> bm!15690 (= call!15692 ($colon$colon!94 e!92167 (ite c!26606 (h!2348 (toList!888 lt!73140)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))))

(declare-fun c!26604 () Bool)

(assert (=> bm!15690 (= c!26604 c!26606)))

(declare-fun b!141412 () Bool)

(declare-fun c!26607 () Bool)

(assert (=> b!141412 (= e!92167 (ite c!26605 (t!6329 (toList!888 lt!73140)) (ite c!26607 (Cons!1741 (h!2348 (toList!888 lt!73140)) (t!6329 (toList!888 lt!73140))) Nil!1742)))))

(declare-fun b!141413 () Bool)

(assert (=> b!141413 (= e!92166 call!15691)))

(declare-fun b!141414 () Bool)

(assert (=> b!141414 (= e!92168 (contains!925 lt!74114 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(declare-fun b!141415 () Bool)

(assert (=> b!141415 (= e!92167 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73140)) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(declare-fun b!141416 () Bool)

(assert (=> b!141416 (= e!92164 call!15693)))

(declare-fun b!141417 () Bool)

(assert (=> b!141417 (= c!26607 (and ((_ is Cons!1741) (toList!888 lt!73140)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73140))) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(assert (=> b!141417 (= e!92166 e!92164)))

(declare-fun b!141418 () Bool)

(declare-fun res!67501 () Bool)

(assert (=> b!141418 (=> (not res!67501) (not e!92168))))

(assert (=> b!141418 (= res!67501 (containsKey!180 lt!74114 (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (= (and d!44433 c!26606) b!141411))

(assert (= (and d!44433 (not c!26606)) b!141410))

(assert (= (and b!141410 c!26605) b!141413))

(assert (= (and b!141410 (not c!26605)) b!141417))

(assert (= (and b!141417 c!26607) b!141416))

(assert (= (and b!141417 (not c!26607)) b!141409))

(assert (= (or b!141416 b!141409) bm!15688))

(assert (= (or b!141413 bm!15688) bm!15689))

(assert (= (or b!141411 bm!15689) bm!15690))

(assert (= (and bm!15690 c!26604) b!141415))

(assert (= (and bm!15690 (not c!26604)) b!141412))

(assert (= (and d!44433 res!67500) b!141418))

(assert (= (and b!141418 res!67501) b!141414))

(declare-fun m!169629 () Bool)

(assert (=> b!141415 m!169629))

(declare-fun m!169631 () Bool)

(assert (=> d!44433 m!169631))

(declare-fun m!169633 () Bool)

(assert (=> d!44433 m!169633))

(declare-fun m!169635 () Bool)

(assert (=> b!141418 m!169635))

(declare-fun m!169637 () Bool)

(assert (=> bm!15690 m!169637))

(declare-fun m!169639 () Bool)

(assert (=> b!141414 m!169639))

(assert (=> d!43513 d!44433))

(declare-fun d!44435 () Bool)

(declare-fun e!92169 () Bool)

(assert (=> d!44435 e!92169))

(declare-fun res!67502 () Bool)

(assert (=> d!44435 (=> (not res!67502) (not e!92169))))

(declare-fun lt!74118 () ListLongMap!1745)

(assert (=> d!44435 (= res!67502 (contains!923 lt!74118 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74115 () List!1745)

(assert (=> d!44435 (= lt!74118 (ListLongMap!1746 lt!74115))))

(declare-fun lt!74116 () Unit!4373)

(declare-fun lt!74117 () Unit!4373)

(assert (=> d!44435 (= lt!74116 lt!74117)))

(assert (=> d!44435 (= (getValueByKey!176 lt!74115 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44435 (= lt!74117 (lemmaContainsTupThenGetReturnValue!90 lt!74115 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44435 (= lt!74115 (insertStrictlySorted!93 (toList!888 call!15601) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44435 (= (+!179 call!15601 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74118)))

(declare-fun b!141419 () Bool)

(declare-fun res!67503 () Bool)

(assert (=> b!141419 (=> (not res!67503) (not e!92169))))

(assert (=> b!141419 (= res!67503 (= (getValueByKey!176 (toList!888 lt!74118) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141420 () Bool)

(assert (=> b!141420 (= e!92169 (contains!925 (toList!888 lt!74118) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44435 res!67502) b!141419))

(assert (= (and b!141419 res!67503) b!141420))

(declare-fun m!169641 () Bool)

(assert (=> d!44435 m!169641))

(declare-fun m!169643 () Bool)

(assert (=> d!44435 m!169643))

(declare-fun m!169645 () Bool)

(assert (=> d!44435 m!169645))

(declare-fun m!169647 () Bool)

(assert (=> d!44435 m!169647))

(declare-fun m!169649 () Bool)

(assert (=> b!141419 m!169649))

(declare-fun m!169651 () Bool)

(assert (=> b!141420 m!169651))

(assert (=> b!140440 d!44435))

(declare-fun d!44437 () Bool)

(assert (=> d!44437 (= (isEmpty!418 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not ((_ is Some!181) (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(assert (=> d!43467 d!44437))

(declare-fun d!44439 () Bool)

(assert (=> d!44439 (= (validKeyInArray!0 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 lt!73240) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 lt!73240) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140399 d!44439))

(declare-fun b!141421 () Bool)

(declare-fun e!92171 () SeekEntryResult!279)

(assert (=> b!141421 (= e!92171 (MissingVacant!279 (index!3281 lt!73101)))))

(declare-fun b!141423 () Bool)

(declare-fun e!92172 () SeekEntryResult!279)

(assert (=> b!141423 (= e!92172 (Found!279 (nextIndex!0 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16))))))

(declare-fun b!141424 () Bool)

(assert (=> b!141424 (= e!92171 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16136 lt!73101) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16)) (bvadd (x!16136 lt!73101) #b00000000000000000000000000000001) (mask!7280 newMap!16)) (index!3281 lt!73101) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!141425 () Bool)

(declare-fun e!92170 () SeekEntryResult!279)

(assert (=> b!141425 (= e!92170 e!92172)))

(declare-fun lt!74120 () (_ BitVec 64))

(declare-fun c!26608 () Bool)

(assert (=> b!141425 (= c!26608 (= lt!74120 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun b!141426 () Bool)

(assert (=> b!141426 (= e!92170 Undefined!279)))

(declare-fun b!141422 () Bool)

(declare-fun c!26610 () Bool)

(assert (=> b!141422 (= c!26610 (= lt!74120 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141422 (= e!92172 e!92171)))

(declare-fun d!44441 () Bool)

(declare-fun lt!74119 () SeekEntryResult!279)

(assert (=> d!44441 (and (or ((_ is Undefined!279) lt!74119) (not ((_ is Found!279) lt!74119)) (and (bvsge (index!3280 lt!74119) #b00000000000000000000000000000000) (bvslt (index!3280 lt!74119) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74119) ((_ is Found!279) lt!74119) (not ((_ is MissingVacant!279) lt!74119)) (not (= (index!3282 lt!74119) (index!3281 lt!73101))) (and (bvsge (index!3282 lt!74119) #b00000000000000000000000000000000) (bvslt (index!3282 lt!74119) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74119) (ite ((_ is Found!279) lt!74119) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!74119)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (and ((_ is MissingVacant!279) lt!74119) (= (index!3282 lt!74119) (index!3281 lt!73101)) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!74119)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!44441 (= lt!74119 e!92170)))

(declare-fun c!26609 () Bool)

(assert (=> d!44441 (= c!26609 (bvsge (bvadd (x!16136 lt!73101) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!44441 (= lt!74120 (select (arr!2315 (_keys!4699 newMap!16)) (nextIndex!0 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16))))))

(assert (=> d!44441 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44441 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!16136 lt!73101) #b00000000000000000000000000000001) (nextIndex!0 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16)) (index!3281 lt!73101) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74119)))

(assert (= (and d!44441 c!26609) b!141426))

(assert (= (and d!44441 (not c!26609)) b!141425))

(assert (= (and b!141425 c!26608) b!141423))

(assert (= (and b!141425 (not c!26608)) b!141422))

(assert (= (and b!141422 c!26610) b!141421))

(assert (= (and b!141422 (not c!26610)) b!141424))

(assert (=> b!141424 m!168601))

(declare-fun m!169653 () Bool)

(assert (=> b!141424 m!169653))

(assert (=> b!141424 m!169653))

(assert (=> b!141424 m!166013))

(declare-fun m!169655 () Bool)

(assert (=> b!141424 m!169655))

(declare-fun m!169657 () Bool)

(assert (=> d!44441 m!169657))

(declare-fun m!169659 () Bool)

(assert (=> d!44441 m!169659))

(assert (=> d!44441 m!168601))

(declare-fun m!169661 () Bool)

(assert (=> d!44441 m!169661))

(assert (=> d!44441 m!166429))

(assert (=> b!140803 d!44441))

(declare-fun d!44443 () Bool)

(declare-fun lt!74123 () (_ BitVec 32))

(assert (=> d!44443 (and (bvsge lt!74123 #b00000000000000000000000000000000) (bvslt lt!74123 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!44443 (= lt!74123 (choose!52 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16)))))

(assert (=> d!44443 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44443 (= (nextIndex!0 (index!3281 lt!73101) (x!16136 lt!73101) (mask!7280 newMap!16)) lt!74123)))

(declare-fun bs!5931 () Bool)

(assert (= bs!5931 d!44443))

(declare-fun m!169663 () Bool)

(assert (=> bs!5931 m!169663))

(assert (=> bs!5931 m!166429))

(assert (=> b!140803 d!44443))

(declare-fun d!44445 () Bool)

(assert (=> d!44445 (= (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328)) (not (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))))

(declare-fun bs!5932 () Bool)

(assert (= bs!5932 d!44445))

(assert (=> bs!5932 m!167413))

(declare-fun m!169665 () Bool)

(assert (=> bs!5932 m!169665))

(assert (=> b!140255 d!44445))

(declare-fun b!141430 () Bool)

(declare-fun e!92174 () Option!182)

(assert (=> b!141430 (= e!92174 None!180)))

(declare-fun e!92173 () Option!182)

(declare-fun b!141427 () Bool)

(assert (=> b!141427 (= e!92173 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))))

(declare-fun b!141428 () Bool)

(assert (=> b!141428 (= e!92173 e!92174)))

(declare-fun c!26612 () Bool)

(assert (=> b!141428 (= c!26612 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))) lt!73328))))))

(declare-fun c!26611 () Bool)

(declare-fun d!44447 () Bool)

(assert (=> d!44447 (= c!26611 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))) lt!73328)))))

(assert (=> d!44447 (= (getValueByKey!176 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328) e!92173)))

(declare-fun b!141429 () Bool)

(assert (=> b!141429 (= e!92174 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))) lt!73328))))

(assert (= (and d!44447 c!26611) b!141427))

(assert (= (and d!44447 (not c!26611)) b!141428))

(assert (= (and b!141428 c!26612) b!141429))

(assert (= (and b!141428 (not c!26612)) b!141430))

(declare-fun m!169667 () Bool)

(assert (=> b!141429 m!169667))

(assert (=> b!140255 d!44447))

(declare-fun d!44449 () Bool)

(declare-fun e!92175 () Bool)

(assert (=> d!44449 e!92175))

(declare-fun res!67504 () Bool)

(assert (=> d!44449 (=> res!67504 e!92175)))

(declare-fun lt!74126 () Bool)

(assert (=> d!44449 (= res!67504 (not lt!74126))))

(declare-fun lt!74124 () Bool)

(assert (=> d!44449 (= lt!74126 lt!74124)))

(declare-fun lt!74125 () Unit!4373)

(declare-fun e!92176 () Unit!4373)

(assert (=> d!44449 (= lt!74125 e!92176)))

(declare-fun c!26613 () Bool)

(assert (=> d!44449 (= c!26613 lt!74124)))

(assert (=> d!44449 (= lt!74124 (containsKey!180 (toList!888 lt!73702) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44449 (= (contains!923 lt!73702 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74126)))

(declare-fun b!141431 () Bool)

(declare-fun lt!74127 () Unit!4373)

(assert (=> b!141431 (= e!92176 lt!74127)))

(assert (=> b!141431 (= lt!74127 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73702) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141431 (isDefined!129 (getValueByKey!176 (toList!888 lt!73702) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141432 () Bool)

(declare-fun Unit!4461 () Unit!4373)

(assert (=> b!141432 (= e!92176 Unit!4461)))

(declare-fun b!141433 () Bool)

(assert (=> b!141433 (= e!92175 (isDefined!129 (getValueByKey!176 (toList!888 lt!73702) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44449 c!26613) b!141431))

(assert (= (and d!44449 (not c!26613)) b!141432))

(assert (= (and d!44449 (not res!67504)) b!141433))

(declare-fun m!169669 () Bool)

(assert (=> d!44449 m!169669))

(declare-fun m!169671 () Bool)

(assert (=> b!141431 m!169671))

(declare-fun m!169673 () Bool)

(assert (=> b!141431 m!169673))

(assert (=> b!141431 m!169673))

(declare-fun m!169675 () Bool)

(assert (=> b!141431 m!169675))

(assert (=> b!141433 m!169673))

(assert (=> b!141433 m!169673))

(assert (=> b!141433 m!169675))

(assert (=> bm!15615 d!44449))

(declare-fun b!141437 () Bool)

(declare-fun e!92178 () Option!182)

(assert (=> b!141437 (= e!92178 None!180)))

(declare-fun b!141434 () Bool)

(declare-fun e!92177 () Option!182)

(assert (=> b!141434 (= e!92177 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73397)))))))

(declare-fun b!141435 () Bool)

(assert (=> b!141435 (= e!92177 e!92178)))

(declare-fun c!26615 () Bool)

(assert (=> b!141435 (= c!26615 (and ((_ is Cons!1741) (toList!888 lt!73397)) (not (= (_1!1360 (h!2348 (toList!888 lt!73397))) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26614 () Bool)

(declare-fun d!44451 () Bool)

(assert (=> d!44451 (= c!26614 (and ((_ is Cons!1741) (toList!888 lt!73397)) (= (_1!1360 (h!2348 (toList!888 lt!73397))) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44451 (= (getValueByKey!176 (toList!888 lt!73397) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) e!92177)))

(declare-fun b!141436 () Bool)

(assert (=> b!141436 (= e!92178 (getValueByKey!176 (t!6329 (toList!888 lt!73397)) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44451 c!26614) b!141434))

(assert (= (and d!44451 (not c!26614)) b!141435))

(assert (= (and b!141435 c!26615) b!141436))

(assert (= (and b!141435 (not c!26615)) b!141437))

(declare-fun m!169677 () Bool)

(assert (=> b!141436 m!169677))

(assert (=> b!140079 d!44451))

(declare-fun d!44453 () Bool)

(declare-fun e!92179 () Bool)

(assert (=> d!44453 e!92179))

(declare-fun res!67505 () Bool)

(assert (=> d!44453 (=> res!67505 e!92179)))

(declare-fun lt!74130 () Bool)

(assert (=> d!44453 (= res!67505 (not lt!74130))))

(declare-fun lt!74128 () Bool)

(assert (=> d!44453 (= lt!74130 lt!74128)))

(declare-fun lt!74129 () Unit!4373)

(declare-fun e!92180 () Unit!4373)

(assert (=> d!44453 (= lt!74129 e!92180)))

(declare-fun c!26616 () Bool)

(assert (=> d!44453 (= c!26616 lt!74128)))

(assert (=> d!44453 (= lt!74128 (containsKey!180 (toList!888 lt!73523) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44453 (= (contains!923 lt!73523 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!74130)))

(declare-fun b!141438 () Bool)

(declare-fun lt!74131 () Unit!4373)

(assert (=> b!141438 (= e!92180 lt!74131)))

(assert (=> b!141438 (= lt!74131 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73523) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (=> b!141438 (isDefined!129 (getValueByKey!176 (toList!888 lt!73523) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141439 () Bool)

(declare-fun Unit!4462 () Unit!4373)

(assert (=> b!141439 (= e!92180 Unit!4462)))

(declare-fun b!141440 () Bool)

(assert (=> b!141440 (= e!92179 (isDefined!129 (getValueByKey!176 (toList!888 lt!73523) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44453 c!26616) b!141438))

(assert (= (and d!44453 (not c!26616)) b!141439))

(assert (= (and d!44453 (not res!67505)) b!141440))

(declare-fun m!169679 () Bool)

(assert (=> d!44453 m!169679))

(declare-fun m!169681 () Bool)

(assert (=> b!141438 m!169681))

(assert (=> b!141438 m!167497))

(assert (=> b!141438 m!167497))

(declare-fun m!169683 () Bool)

(assert (=> b!141438 m!169683))

(assert (=> b!141440 m!167497))

(assert (=> b!141440 m!167497))

(assert (=> b!141440 m!169683))

(assert (=> d!43635 d!44453))

(declare-fun b!141444 () Bool)

(declare-fun e!92182 () Option!182)

(assert (=> b!141444 (= e!92182 None!180)))

(declare-fun b!141441 () Bool)

(declare-fun e!92181 () Option!182)

(assert (=> b!141441 (= e!92181 (Some!181 (_2!1360 (h!2348 lt!73520))))))

(declare-fun b!141442 () Bool)

(assert (=> b!141442 (= e!92181 e!92182)))

(declare-fun c!26618 () Bool)

(assert (=> b!141442 (= c!26618 (and ((_ is Cons!1741) lt!73520) (not (= (_1!1360 (h!2348 lt!73520)) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))))

(declare-fun d!44455 () Bool)

(declare-fun c!26617 () Bool)

(assert (=> d!44455 (= c!26617 (and ((_ is Cons!1741) lt!73520) (= (_1!1360 (h!2348 lt!73520)) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44455 (= (getValueByKey!176 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) e!92181)))

(declare-fun b!141443 () Bool)

(assert (=> b!141443 (= e!92182 (getValueByKey!176 (t!6329 lt!73520) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44455 c!26617) b!141441))

(assert (= (and d!44455 (not c!26617)) b!141442))

(assert (= (and b!141442 c!26618) b!141443))

(assert (= (and b!141442 (not c!26618)) b!141444))

(declare-fun m!169685 () Bool)

(assert (=> b!141443 m!169685))

(assert (=> d!43635 d!44455))

(declare-fun d!44457 () Bool)

(assert (=> d!44457 (= (getValueByKey!176 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74132 () Unit!4373)

(assert (=> d!44457 (= lt!74132 (choose!865 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92183 () Bool)

(assert (=> d!44457 e!92183))

(declare-fun res!67506 () Bool)

(assert (=> d!44457 (=> (not res!67506) (not e!92183))))

(assert (=> d!44457 (= res!67506 (isStrictlySorted!325 lt!73520))))

(assert (=> d!44457 (= (lemmaContainsTupThenGetReturnValue!90 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!74132)))

(declare-fun b!141445 () Bool)

(declare-fun res!67507 () Bool)

(assert (=> b!141445 (=> (not res!67507) (not e!92183))))

(assert (=> b!141445 (= res!67507 (containsKey!180 lt!73520 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141446 () Bool)

(assert (=> b!141446 (= e!92183 (contains!925 lt!73520 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44457 res!67506) b!141445))

(assert (= (and b!141445 res!67507) b!141446))

(assert (=> d!44457 m!167491))

(declare-fun m!169687 () Bool)

(assert (=> d!44457 m!169687))

(declare-fun m!169689 () Bool)

(assert (=> d!44457 m!169689))

(declare-fun m!169691 () Bool)

(assert (=> b!141445 m!169691))

(declare-fun m!169693 () Bool)

(assert (=> b!141446 m!169693))

(assert (=> d!43635 d!44457))

(declare-fun b!141447 () Bool)

(declare-fun e!92184 () List!1745)

(declare-fun call!15696 () List!1745)

(assert (=> b!141447 (= e!92184 call!15696)))

(declare-fun bm!15691 () Bool)

(declare-fun call!15694 () List!1745)

(assert (=> bm!15691 (= call!15696 call!15694)))

(declare-fun d!44459 () Bool)

(declare-fun e!92188 () Bool)

(assert (=> d!44459 e!92188))

(declare-fun res!67508 () Bool)

(assert (=> d!44459 (=> (not res!67508) (not e!92188))))

(declare-fun lt!74133 () List!1745)

(assert (=> d!44459 (= res!67508 (isStrictlySorted!325 lt!74133))))

(declare-fun e!92185 () List!1745)

(assert (=> d!44459 (= lt!74133 e!92185)))

(declare-fun c!26621 () Bool)

(assert (=> d!44459 (= c!26621 (and ((_ is Cons!1741) (toList!888 lt!73327)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73327))) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44459 (isStrictlySorted!325 (toList!888 lt!73327))))

(assert (=> d!44459 (= (insertStrictlySorted!93 (toList!888 lt!73327) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!74133)))

(declare-fun bm!15692 () Bool)

(declare-fun call!15695 () List!1745)

(assert (=> bm!15692 (= call!15694 call!15695)))

(declare-fun b!141448 () Bool)

(declare-fun e!92186 () List!1745)

(assert (=> b!141448 (= e!92185 e!92186)))

(declare-fun c!26620 () Bool)

(assert (=> b!141448 (= c!26620 (and ((_ is Cons!1741) (toList!888 lt!73327)) (= (_1!1360 (h!2348 (toList!888 lt!73327))) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141449 () Bool)

(assert (=> b!141449 (= e!92185 call!15695)))

(declare-fun e!92187 () List!1745)

(declare-fun bm!15693 () Bool)

(assert (=> bm!15693 (= call!15695 ($colon$colon!94 e!92187 (ite c!26621 (h!2348 (toList!888 lt!73327)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26619 () Bool)

(assert (=> bm!15693 (= c!26619 c!26621)))

(declare-fun c!26622 () Bool)

(declare-fun b!141450 () Bool)

(assert (=> b!141450 (= e!92187 (ite c!26620 (t!6329 (toList!888 lt!73327)) (ite c!26622 (Cons!1741 (h!2348 (toList!888 lt!73327)) (t!6329 (toList!888 lt!73327))) Nil!1742)))))

(declare-fun b!141451 () Bool)

(assert (=> b!141451 (= e!92186 call!15694)))

(declare-fun b!141452 () Bool)

(assert (=> b!141452 (= e!92188 (contains!925 lt!74133 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141453 () Bool)

(assert (=> b!141453 (= e!92187 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73327)) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141454 () Bool)

(assert (=> b!141454 (= e!92184 call!15696)))

(declare-fun b!141455 () Bool)

(assert (=> b!141455 (= c!26622 (and ((_ is Cons!1741) (toList!888 lt!73327)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73327))) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (=> b!141455 (= e!92186 e!92184)))

(declare-fun b!141456 () Bool)

(declare-fun res!67509 () Bool)

(assert (=> b!141456 (=> (not res!67509) (not e!92188))))

(assert (=> b!141456 (= res!67509 (containsKey!180 lt!74133 (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44459 c!26621) b!141449))

(assert (= (and d!44459 (not c!26621)) b!141448))

(assert (= (and b!141448 c!26620) b!141451))

(assert (= (and b!141448 (not c!26620)) b!141455))

(assert (= (and b!141455 c!26622) b!141454))

(assert (= (and b!141455 (not c!26622)) b!141447))

(assert (= (or b!141454 b!141447) bm!15691))

(assert (= (or b!141451 bm!15691) bm!15692))

(assert (= (or b!141449 bm!15692) bm!15693))

(assert (= (and bm!15693 c!26619) b!141453))

(assert (= (and bm!15693 (not c!26619)) b!141450))

(assert (= (and d!44459 res!67508) b!141456))

(assert (= (and b!141456 res!67509) b!141452))

(declare-fun m!169695 () Bool)

(assert (=> b!141453 m!169695))

(declare-fun m!169697 () Bool)

(assert (=> d!44459 m!169697))

(declare-fun m!169699 () Bool)

(assert (=> d!44459 m!169699))

(declare-fun m!169701 () Bool)

(assert (=> b!141456 m!169701))

(declare-fun m!169703 () Bool)

(assert (=> bm!15693 m!169703))

(declare-fun m!169705 () Bool)

(assert (=> b!141452 m!169705))

(assert (=> d!43635 d!44459))

(declare-fun d!44461 () Bool)

(declare-fun res!67510 () Bool)

(declare-fun e!92189 () Bool)

(assert (=> d!44461 (=> res!67510 e!92189)))

(assert (=> d!44461 (= res!67510 (and ((_ is Cons!1741) lt!73878) (= (_1!1360 (h!2348 lt!73878)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44461 (= (containsKey!180 lt!73878 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92189)))

(declare-fun b!141457 () Bool)

(declare-fun e!92190 () Bool)

(assert (=> b!141457 (= e!92189 e!92190)))

(declare-fun res!67511 () Bool)

(assert (=> b!141457 (=> (not res!67511) (not e!92190))))

(assert (=> b!141457 (= res!67511 (and (or (not ((_ is Cons!1741) lt!73878)) (bvsle (_1!1360 (h!2348 lt!73878)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73878) (bvslt (_1!1360 (h!2348 lt!73878)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141458 () Bool)

(assert (=> b!141458 (= e!92190 (containsKey!180 (t!6329 lt!73878) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44461 (not res!67510)) b!141457))

(assert (= (and b!141457 res!67511) b!141458))

(declare-fun m!169707 () Bool)

(assert (=> b!141458 m!169707))

(assert (=> b!140780 d!44461))

(declare-fun b!141459 () Bool)

(declare-fun lt!74140 () Unit!4373)

(declare-fun lt!74136 () Unit!4373)

(assert (=> b!141459 (= lt!74140 lt!74136)))

(declare-fun lt!74139 () ListLongMap!1745)

(declare-fun lt!74138 () (_ BitVec 64))

(declare-fun lt!74135 () V!3555)

(declare-fun lt!74134 () (_ BitVec 64))

(assert (=> b!141459 (not (contains!923 (+!179 lt!74139 (tuple2!2699 lt!74138 lt!74135)) lt!74134))))

(assert (=> b!141459 (= lt!74136 (addStillNotContains!64 lt!74139 lt!74138 lt!74135 lt!74134))))

(assert (=> b!141459 (= lt!74134 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141459 (= lt!74135 (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141459 (= lt!74138 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15697 () ListLongMap!1745)

(assert (=> b!141459 (= lt!74139 call!15697)))

(declare-fun e!92191 () ListLongMap!1745)

(assert (=> b!141459 (= e!92191 (+!179 call!15697 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141461 () Bool)

(declare-fun e!92193 () ListLongMap!1745)

(assert (=> b!141461 (= e!92193 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141462 () Bool)

(declare-fun e!92197 () Bool)

(declare-fun e!92192 () Bool)

(assert (=> b!141462 (= e!92197 e!92192)))

(assert (=> b!141462 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67515 () Bool)

(declare-fun lt!74137 () ListLongMap!1745)

(assert (=> b!141462 (= res!67515 (contains!923 lt!74137 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141462 (=> (not res!67515) (not e!92192))))

(declare-fun b!141463 () Bool)

(declare-fun res!67512 () Bool)

(declare-fun e!92196 () Bool)

(assert (=> b!141463 (=> (not res!67512) (not e!92196))))

(assert (=> b!141463 (= res!67512 (not (contains!923 lt!74137 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141464 () Bool)

(declare-fun e!92194 () Bool)

(assert (=> b!141464 (= e!92197 e!92194)))

(declare-fun c!26625 () Bool)

(assert (=> b!141464 (= c!26625 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141465 () Bool)

(assert (=> b!141465 (= e!92193 e!92191)))

(declare-fun c!26626 () Bool)

(assert (=> b!141465 (= c!26626 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141466 () Bool)

(declare-fun e!92195 () Bool)

(assert (=> b!141466 (= e!92195 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141466 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!15694 () Bool)

(assert (=> bm!15694 (= call!15697 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141467 () Bool)

(assert (=> b!141467 (= e!92194 (= lt!74137 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141468 () Bool)

(assert (=> b!141468 (= e!92196 e!92197)))

(declare-fun c!26623 () Bool)

(assert (=> b!141468 (= c!26623 e!92195)))

(declare-fun res!67514 () Bool)

(assert (=> b!141468 (=> (not res!67514) (not e!92195))))

(assert (=> b!141468 (= res!67514 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44463 () Bool)

(assert (=> d!44463 e!92196))

(declare-fun res!67513 () Bool)

(assert (=> d!44463 (=> (not res!67513) (not e!92196))))

(assert (=> d!44463 (= res!67513 (not (contains!923 lt!74137 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44463 (= lt!74137 e!92193)))

(declare-fun c!26624 () Bool)

(assert (=> d!44463 (= c!26624 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44463 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44463 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74137)))

(declare-fun b!141460 () Bool)

(assert (=> b!141460 (= e!92194 (isEmpty!417 lt!74137))))

(declare-fun b!141469 () Bool)

(assert (=> b!141469 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141469 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2588 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))))

(assert (=> b!141469 (= e!92192 (= (apply!120 lt!74137 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141470 () Bool)

(assert (=> b!141470 (= e!92191 call!15697)))

(assert (= (and d!44463 c!26624) b!141461))

(assert (= (and d!44463 (not c!26624)) b!141465))

(assert (= (and b!141465 c!26626) b!141459))

(assert (= (and b!141465 (not c!26626)) b!141470))

(assert (= (or b!141459 b!141470) bm!15694))

(assert (= (and d!44463 res!67513) b!141463))

(assert (= (and b!141463 res!67512) b!141468))

(assert (= (and b!141468 res!67514) b!141466))

(assert (= (and b!141468 c!26623) b!141462))

(assert (= (and b!141468 (not c!26623)) b!141464))

(assert (= (and b!141462 res!67515) b!141469))

(assert (= (and b!141464 c!26625) b!141467))

(assert (= (and b!141464 (not c!26625)) b!141460))

(declare-fun b_lambda!6333 () Bool)

(assert (=> (not b_lambda!6333) (not b!141459)))

(assert (=> b!141459 t!6337))

(declare-fun b_and!8823 () Bool)

(assert (= b_and!8819 (and (=> t!6337 result!4191) b_and!8823)))

(assert (=> b!141459 t!6339))

(declare-fun b_and!8825 () Bool)

(assert (= b_and!8821 (and (=> t!6339 result!4193) b_and!8825)))

(declare-fun b_lambda!6335 () Bool)

(assert (=> (not b_lambda!6335) (not b!141469)))

(assert (=> b!141469 t!6337))

(declare-fun b_and!8827 () Bool)

(assert (= b_and!8823 (and (=> t!6337 result!4191) b_and!8827)))

(assert (=> b!141469 t!6339))

(declare-fun b_and!8829 () Bool)

(assert (= b_and!8825 (and (=> t!6339 result!4193) b_and!8829)))

(declare-fun m!169709 () Bool)

(assert (=> b!141463 m!169709))

(assert (=> b!141465 m!167999))

(assert (=> b!141465 m!167999))

(assert (=> b!141465 m!168003))

(declare-fun m!169711 () Bool)

(assert (=> d!44463 m!169711))

(assert (=> d!44463 m!166429))

(assert (=> b!141459 m!166443))

(declare-fun m!169713 () Bool)

(assert (=> b!141459 m!169713))

(declare-fun m!169715 () Bool)

(assert (=> b!141459 m!169715))

(assert (=> b!141459 m!169713))

(declare-fun m!169717 () Bool)

(assert (=> b!141459 m!169717))

(declare-fun m!169719 () Bool)

(assert (=> b!141459 m!169719))

(assert (=> b!141459 m!169717))

(assert (=> b!141459 m!166443))

(declare-fun m!169721 () Bool)

(assert (=> b!141459 m!169721))

(declare-fun m!169723 () Bool)

(assert (=> b!141459 m!169723))

(assert (=> b!141459 m!167999))

(assert (=> b!141466 m!167999))

(assert (=> b!141466 m!167999))

(assert (=> b!141466 m!168003))

(declare-fun m!169725 () Bool)

(assert (=> bm!15694 m!169725))

(declare-fun m!169727 () Bool)

(assert (=> b!141460 m!169727))

(assert (=> b!141469 m!166443))

(assert (=> b!141469 m!167999))

(declare-fun m!169729 () Bool)

(assert (=> b!141469 m!169729))

(assert (=> b!141469 m!169717))

(assert (=> b!141469 m!169717))

(assert (=> b!141469 m!166443))

(assert (=> b!141469 m!169721))

(assert (=> b!141469 m!167999))

(assert (=> b!141462 m!167999))

(assert (=> b!141462 m!167999))

(declare-fun m!169731 () Bool)

(assert (=> b!141462 m!169731))

(assert (=> b!141467 m!169725))

(assert (=> b!140093 d!44463))

(declare-fun d!44465 () Bool)

(assert (=> d!44465 (= (get!1531 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3284 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43935 d!44465))

(declare-fun b!141474 () Bool)

(declare-fun e!92199 () Option!182)

(assert (=> b!141474 (= e!92199 None!180)))

(declare-fun b!141471 () Bool)

(declare-fun e!92198 () Option!182)

(assert (=> b!141471 (= e!92198 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73052)))))))

(declare-fun b!141472 () Bool)

(assert (=> b!141472 (= e!92198 e!92199)))

(declare-fun c!26628 () Bool)

(assert (=> b!141472 (= c!26628 (and ((_ is Cons!1741) (toList!888 lt!73052)) (not (= (_1!1360 (h!2348 (toList!888 lt!73052))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!44467 () Bool)

(declare-fun c!26627 () Bool)

(assert (=> d!44467 (= c!26627 (and ((_ is Cons!1741) (toList!888 lt!73052)) (= (_1!1360 (h!2348 (toList!888 lt!73052))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44467 (= (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92198)))

(declare-fun b!141473 () Bool)

(assert (=> b!141473 (= e!92199 (getValueByKey!176 (t!6329 (toList!888 lt!73052)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44467 c!26627) b!141471))

(assert (= (and d!44467 (not c!26627)) b!141472))

(assert (= (and b!141472 c!26628) b!141473))

(assert (= (and b!141472 (not c!26628)) b!141474))

(assert (=> b!141473 m!166121))

(declare-fun m!169733 () Bool)

(assert (=> b!141473 m!169733))

(assert (=> d!43935 d!44467))

(declare-fun d!44469 () Bool)

(declare-fun e!92200 () Bool)

(assert (=> d!44469 e!92200))

(declare-fun res!67516 () Bool)

(assert (=> d!44469 (=> res!67516 e!92200)))

(declare-fun lt!74143 () Bool)

(assert (=> d!44469 (= res!67516 (not lt!74143))))

(declare-fun lt!74141 () Bool)

(assert (=> d!44469 (= lt!74143 lt!74141)))

(declare-fun lt!74142 () Unit!4373)

(declare-fun e!92201 () Unit!4373)

(assert (=> d!44469 (= lt!74142 e!92201)))

(declare-fun c!26629 () Bool)

(assert (=> d!44469 (= c!26629 lt!74141)))

(assert (=> d!44469 (= lt!74141 (containsKey!180 (toList!888 lt!73550) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44469 (= (contains!923 lt!73550 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74143)))

(declare-fun b!141475 () Bool)

(declare-fun lt!74144 () Unit!4373)

(assert (=> b!141475 (= e!92201 lt!74144)))

(assert (=> b!141475 (= lt!74144 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73550) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141475 (isDefined!129 (getValueByKey!176 (toList!888 lt!73550) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141476 () Bool)

(declare-fun Unit!4463 () Unit!4373)

(assert (=> b!141476 (= e!92201 Unit!4463)))

(declare-fun b!141477 () Bool)

(assert (=> b!141477 (= e!92200 (isDefined!129 (getValueByKey!176 (toList!888 lt!73550) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44469 c!26629) b!141475))

(assert (= (and d!44469 (not c!26629)) b!141476))

(assert (= (and d!44469 (not res!67516)) b!141477))

(assert (=> d!44469 m!166385))

(declare-fun m!169735 () Bool)

(assert (=> d!44469 m!169735))

(assert (=> b!141475 m!166385))

(declare-fun m!169737 () Bool)

(assert (=> b!141475 m!169737))

(assert (=> b!141475 m!166385))

(declare-fun m!169739 () Bool)

(assert (=> b!141475 m!169739))

(assert (=> b!141475 m!169739))

(declare-fun m!169741 () Bool)

(assert (=> b!141475 m!169741))

(assert (=> b!141477 m!166385))

(assert (=> b!141477 m!169739))

(assert (=> b!141477 m!169739))

(assert (=> b!141477 m!169741))

(assert (=> b!140325 d!44469))

(declare-fun d!44471 () Bool)

(assert (=> d!44471 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5933 () Bool)

(assert (= bs!5933 d!44471))

(assert (=> bs!5933 m!167677))

(declare-fun m!169743 () Bool)

(assert (=> bs!5933 m!169743))

(assert (=> b!140368 d!44471))

(assert (=> b!140368 d!44013))

(declare-fun b!141481 () Bool)

(declare-fun e!92203 () Option!182)

(assert (=> b!141481 (= e!92203 None!180)))

(declare-fun b!141478 () Bool)

(declare-fun e!92202 () Option!182)

(assert (=> b!141478 (= e!92202 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 call!15479))))))))

(declare-fun b!141479 () Bool)

(assert (=> b!141479 (= e!92202 e!92203)))

(declare-fun c!26631 () Bool)

(assert (=> b!141479 (= c!26631 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15479))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15479)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun d!44473 () Bool)

(declare-fun c!26630 () Bool)

(assert (=> d!44473 (= c!26630 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15479))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15479)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!44473 (= (getValueByKey!176 (t!6329 (toList!888 call!15479)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92202)))

(declare-fun b!141480 () Bool)

(assert (=> b!141480 (= e!92203 (getValueByKey!176 (t!6329 (t!6329 (toList!888 call!15479))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44473 c!26630) b!141478))

(assert (= (and d!44473 (not c!26630)) b!141479))

(assert (= (and b!141479 c!26631) b!141480))

(assert (= (and b!141479 (not c!26631)) b!141481))

(assert (=> b!141480 m!166013))

(declare-fun m!169745 () Bool)

(assert (=> b!141480 m!169745))

(assert (=> b!140316 d!44473))

(declare-fun d!44475 () Bool)

(declare-fun e!92204 () Bool)

(assert (=> d!44475 e!92204))

(declare-fun res!67517 () Bool)

(assert (=> d!44475 (=> res!67517 e!92204)))

(declare-fun lt!74147 () Bool)

(assert (=> d!44475 (= res!67517 (not lt!74147))))

(declare-fun lt!74145 () Bool)

(assert (=> d!44475 (= lt!74147 lt!74145)))

(declare-fun lt!74146 () Unit!4373)

(declare-fun e!92205 () Unit!4373)

(assert (=> d!44475 (= lt!74146 e!92205)))

(declare-fun c!26632 () Bool)

(assert (=> d!44475 (= c!26632 lt!74145)))

(assert (=> d!44475 (= lt!74145 (containsKey!180 (toList!888 lt!73487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44475 (= (contains!923 lt!73487 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74147)))

(declare-fun b!141482 () Bool)

(declare-fun lt!74148 () Unit!4373)

(assert (=> b!141482 (= e!92205 lt!74148)))

(assert (=> b!141482 (= lt!74148 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141482 (isDefined!129 (getValueByKey!176 (toList!888 lt!73487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141483 () Bool)

(declare-fun Unit!4464 () Unit!4373)

(assert (=> b!141483 (= e!92205 Unit!4464)))

(declare-fun b!141484 () Bool)

(assert (=> b!141484 (= e!92204 (isDefined!129 (getValueByKey!176 (toList!888 lt!73487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44475 c!26632) b!141482))

(assert (= (and d!44475 (not c!26632)) b!141483))

(assert (= (and d!44475 (not res!67517)) b!141484))

(declare-fun m!169747 () Bool)

(assert (=> d!44475 m!169747))

(declare-fun m!169749 () Bool)

(assert (=> b!141482 m!169749))

(declare-fun m!169751 () Bool)

(assert (=> b!141482 m!169751))

(assert (=> b!141482 m!169751))

(declare-fun m!169753 () Bool)

(assert (=> b!141482 m!169753))

(assert (=> b!141484 m!169751))

(assert (=> b!141484 m!169751))

(assert (=> b!141484 m!169753))

(assert (=> bm!15573 d!44475))

(assert (=> d!43811 d!43809))

(declare-fun d!44477 () Bool)

(assert (=> d!44477 (= (getValueByKey!176 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!44477 true))

(declare-fun _$22!495 () Unit!4373)

(assert (=> d!44477 (= (choose!865 lt!73056 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) _$22!495)))

(declare-fun bs!5934 () Bool)

(assert (= bs!5934 d!44477))

(assert (=> bs!5934 m!166331))

(assert (=> d!43811 d!44477))

(declare-fun d!44479 () Bool)

(declare-fun res!67518 () Bool)

(declare-fun e!92206 () Bool)

(assert (=> d!44479 (=> res!67518 e!92206)))

(assert (=> d!44479 (= res!67518 (or ((_ is Nil!1742) lt!73056) ((_ is Nil!1742) (t!6329 lt!73056))))))

(assert (=> d!44479 (= (isStrictlySorted!325 lt!73056) e!92206)))

(declare-fun b!141485 () Bool)

(declare-fun e!92207 () Bool)

(assert (=> b!141485 (= e!92206 e!92207)))

(declare-fun res!67519 () Bool)

(assert (=> b!141485 (=> (not res!67519) (not e!92207))))

(assert (=> b!141485 (= res!67519 (bvslt (_1!1360 (h!2348 lt!73056)) (_1!1360 (h!2348 (t!6329 lt!73056)))))))

(declare-fun b!141486 () Bool)

(assert (=> b!141486 (= e!92207 (isStrictlySorted!325 (t!6329 lt!73056)))))

(assert (= (and d!44479 (not res!67518)) b!141485))

(assert (= (and b!141485 res!67519) b!141486))

(declare-fun m!169755 () Bool)

(assert (=> b!141486 m!169755))

(assert (=> d!43811 d!44479))

(declare-fun d!44481 () Bool)

(declare-fun res!67520 () Bool)

(declare-fun e!92208 () Bool)

(assert (=> d!44481 (=> res!67520 e!92208)))

(assert (=> d!44481 (= res!67520 (and ((_ is Cons!1741) (toList!888 lt!73019)) (= (_1!1360 (h!2348 (toList!888 lt!73019))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44481 (= (containsKey!180 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92208)))

(declare-fun b!141487 () Bool)

(declare-fun e!92209 () Bool)

(assert (=> b!141487 (= e!92208 e!92209)))

(declare-fun res!67521 () Bool)

(assert (=> b!141487 (=> (not res!67521) (not e!92209))))

(assert (=> b!141487 (= res!67521 (and (or (not ((_ is Cons!1741) (toList!888 lt!73019))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73019))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1741) (toList!888 lt!73019)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73019))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141488 () Bool)

(assert (=> b!141488 (= e!92209 (containsKey!180 (t!6329 (toList!888 lt!73019)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44481 (not res!67520)) b!141487))

(assert (= (and b!141487 res!67521) b!141488))

(declare-fun m!169757 () Bool)

(assert (=> b!141488 m!169757))

(assert (=> d!43541 d!44481))

(assert (=> d!43725 d!43527))

(declare-fun d!44483 () Bool)

(declare-fun res!67522 () Bool)

(declare-fun e!92210 () Bool)

(assert (=> d!44483 (=> res!67522 e!92210)))

(assert (=> d!44483 (= res!67522 (and ((_ is Cons!1741) lt!73028) (= (_1!1360 (h!2348 lt!73028)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44483 (= (containsKey!180 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92210)))

(declare-fun b!141489 () Bool)

(declare-fun e!92211 () Bool)

(assert (=> b!141489 (= e!92210 e!92211)))

(declare-fun res!67523 () Bool)

(assert (=> b!141489 (=> (not res!67523) (not e!92211))))

(assert (=> b!141489 (= res!67523 (and (or (not ((_ is Cons!1741) lt!73028)) (bvsle (_1!1360 (h!2348 lt!73028)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73028) (bvslt (_1!1360 (h!2348 lt!73028)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141490 () Bool)

(assert (=> b!141490 (= e!92211 (containsKey!180 (t!6329 lt!73028) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44483 (not res!67522)) b!141489))

(assert (= (and b!141489 res!67523) b!141490))

(declare-fun m!169759 () Bool)

(assert (=> b!141490 m!169759))

(assert (=> b!140619 d!44483))

(declare-fun d!44485 () Bool)

(assert (=> d!44485 (= (validMask!0 (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (and (or (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000001111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000011111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000001111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000011111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000001111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000011111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000001111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000011111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000001111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000011111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000001111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000011111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000001111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000011111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000111111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000001111111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000011111111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000111111111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00001111111111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00011111111111111111111111111111) (= (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00111111111111111111111111111111)) (bvsle (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00111111111111111111111111111111)))))

(assert (=> d!43459 d!44485))

(declare-fun d!44487 () Bool)

(declare-fun e!92212 () Bool)

(assert (=> d!44487 e!92212))

(declare-fun res!67524 () Bool)

(assert (=> d!44487 (=> res!67524 e!92212)))

(declare-fun lt!74151 () Bool)

(assert (=> d!44487 (= res!67524 (not lt!74151))))

(declare-fun lt!74149 () Bool)

(assert (=> d!44487 (= lt!74151 lt!74149)))

(declare-fun lt!74150 () Unit!4373)

(declare-fun e!92213 () Unit!4373)

(assert (=> d!44487 (= lt!74150 e!92213)))

(declare-fun c!26633 () Bool)

(assert (=> d!44487 (= c!26633 lt!74149)))

(assert (=> d!44487 (= lt!74149 (containsKey!180 (toList!888 lt!73406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44487 (= (contains!923 lt!73406 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74151)))

(declare-fun b!141491 () Bool)

(declare-fun lt!74152 () Unit!4373)

(assert (=> b!141491 (= e!92213 lt!74152)))

(assert (=> b!141491 (= lt!74152 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141491 (isDefined!129 (getValueByKey!176 (toList!888 lt!73406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141492 () Bool)

(declare-fun Unit!4465 () Unit!4373)

(assert (=> b!141492 (= e!92213 Unit!4465)))

(declare-fun b!141493 () Bool)

(assert (=> b!141493 (= e!92212 (isDefined!129 (getValueByKey!176 (toList!888 lt!73406) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44487 c!26633) b!141491))

(assert (= (and d!44487 (not c!26633)) b!141492))

(assert (= (and d!44487 (not res!67524)) b!141493))

(declare-fun m!169761 () Bool)

(assert (=> d!44487 m!169761))

(declare-fun m!169763 () Bool)

(assert (=> b!141491 m!169763))

(declare-fun m!169765 () Bool)

(assert (=> b!141491 m!169765))

(assert (=> b!141491 m!169765))

(declare-fun m!169767 () Bool)

(assert (=> b!141491 m!169767))

(assert (=> b!141493 m!169765))

(assert (=> b!141493 m!169765))

(assert (=> b!141493 m!169767))

(assert (=> d!43511 d!44487))

(assert (=> d!43511 d!43527))

(assert (=> d!43539 d!43731))

(assert (=> d!43539 d!43733))

(declare-fun d!44489 () Bool)

(declare-fun res!67525 () Bool)

(declare-fun e!92214 () Bool)

(assert (=> d!44489 (=> res!67525 e!92214)))

(assert (=> d!44489 (= res!67525 (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!44489 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92214)))

(declare-fun b!141494 () Bool)

(declare-fun e!92215 () Bool)

(assert (=> b!141494 (= e!92214 e!92215)))

(declare-fun res!67526 () Bool)

(assert (=> b!141494 (=> (not res!67526) (not e!92215))))

(assert (=> b!141494 (= res!67526 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!141495 () Bool)

(assert (=> b!141495 (= e!92215 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44489 (not res!67525)) b!141494))

(assert (= (and b!141494 res!67526) b!141495))

(declare-fun m!169769 () Bool)

(assert (=> d!44489 m!169769))

(assert (=> b!141495 m!166013))

(declare-fun m!169771 () Bool)

(assert (=> b!141495 m!169771))

(assert (=> b!140321 d!44489))

(declare-fun b!141499 () Bool)

(declare-fun e!92217 () Option!182)

(assert (=> b!141499 (= e!92217 None!180)))

(declare-fun b!141496 () Bool)

(declare-fun e!92216 () Option!182)

(assert (=> b!141496 (= e!92216 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73466)))))))

(declare-fun b!141497 () Bool)

(assert (=> b!141497 (= e!92216 e!92217)))

(declare-fun c!26635 () Bool)

(assert (=> b!141497 (= c!26635 (and ((_ is Cons!1741) (toList!888 lt!73466)) (not (= (_1!1360 (h!2348 (toList!888 lt!73466))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!44491 () Bool)

(declare-fun c!26634 () Bool)

(assert (=> d!44491 (= c!26634 (and ((_ is Cons!1741) (toList!888 lt!73466)) (= (_1!1360 (h!2348 (toList!888 lt!73466))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44491 (= (getValueByKey!176 (toList!888 lt!73466) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92216)))

(declare-fun b!141498 () Bool)

(assert (=> b!141498 (= e!92217 (getValueByKey!176 (t!6329 (toList!888 lt!73466)) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44491 c!26634) b!141496))

(assert (= (and d!44491 (not c!26634)) b!141497))

(assert (= (and b!141497 c!26635) b!141498))

(assert (= (and b!141497 (not c!26635)) b!141499))

(declare-fun m!169773 () Bool)

(assert (=> b!141498 m!169773))

(assert (=> b!140209 d!44491))

(declare-fun d!44493 () Bool)

(declare-fun res!67527 () Bool)

(declare-fun e!92218 () Bool)

(assert (=> d!44493 (=> res!67527 e!92218)))

(assert (=> d!44493 (= res!67527 (and ((_ is Cons!1741) (toList!888 lt!73285)) (= (_1!1360 (h!2348 (toList!888 lt!73285))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!44493 (= (containsKey!180 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!92218)))

(declare-fun b!141500 () Bool)

(declare-fun e!92219 () Bool)

(assert (=> b!141500 (= e!92218 e!92219)))

(declare-fun res!67528 () Bool)

(assert (=> b!141500 (=> (not res!67528) (not e!92219))))

(assert (=> b!141500 (= res!67528 (and (or (not ((_ is Cons!1741) (toList!888 lt!73285))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73285))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) ((_ is Cons!1741) (toList!888 lt!73285)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73285))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!141501 () Bool)

(assert (=> b!141501 (= e!92219 (containsKey!180 (t!6329 (toList!888 lt!73285)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44493 (not res!67527)) b!141500))

(assert (= (and b!141500 res!67528) b!141501))

(declare-fun m!169775 () Bool)

(assert (=> b!141501 m!169775))

(assert (=> d!43685 d!44493))

(declare-fun d!44495 () Bool)

(declare-fun e!92220 () Bool)

(assert (=> d!44495 e!92220))

(declare-fun res!67529 () Bool)

(assert (=> d!44495 (=> res!67529 e!92220)))

(declare-fun lt!74155 () Bool)

(assert (=> d!44495 (= res!67529 (not lt!74155))))

(declare-fun lt!74153 () Bool)

(assert (=> d!44495 (= lt!74155 lt!74153)))

(declare-fun lt!74154 () Unit!4373)

(declare-fun e!92221 () Unit!4373)

(assert (=> d!44495 (= lt!74154 e!92221)))

(declare-fun c!26636 () Bool)

(assert (=> d!44495 (= c!26636 lt!74153)))

(assert (=> d!44495 (= lt!74153 (containsKey!180 (toList!888 lt!73514) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (=> d!44495 (= (contains!923 lt!73514 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!74155)))

(declare-fun b!141502 () Bool)

(declare-fun lt!74156 () Unit!4373)

(assert (=> b!141502 (= e!92221 lt!74156)))

(assert (=> b!141502 (= lt!74156 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73514) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (=> b!141502 (isDefined!129 (getValueByKey!176 (toList!888 lt!73514) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(declare-fun b!141503 () Bool)

(declare-fun Unit!4466 () Unit!4373)

(assert (=> b!141503 (= e!92221 Unit!4466)))

(declare-fun b!141504 () Bool)

(assert (=> b!141504 (= e!92220 (isDefined!129 (getValueByKey!176 (toList!888 lt!73514) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(assert (= (and d!44495 c!26636) b!141502))

(assert (= (and d!44495 (not c!26636)) b!141503))

(assert (= (and d!44495 (not res!67529)) b!141504))

(declare-fun m!169777 () Bool)

(assert (=> d!44495 m!169777))

(declare-fun m!169779 () Bool)

(assert (=> b!141502 m!169779))

(assert (=> b!141502 m!167461))

(assert (=> b!141502 m!167461))

(declare-fun m!169781 () Bool)

(assert (=> b!141502 m!169781))

(assert (=> b!141504 m!167461))

(assert (=> b!141504 m!167461))

(assert (=> b!141504 m!169781))

(assert (=> d!43625 d!44495))

(declare-fun b!141508 () Bool)

(declare-fun e!92223 () Option!182)

(assert (=> b!141508 (= e!92223 None!180)))

(declare-fun b!141505 () Bool)

(declare-fun e!92222 () Option!182)

(assert (=> b!141505 (= e!92222 (Some!181 (_2!1360 (h!2348 lt!73511))))))

(declare-fun b!141506 () Bool)

(assert (=> b!141506 (= e!92222 e!92223)))

(declare-fun c!26638 () Bool)

(assert (=> b!141506 (= c!26638 (and ((_ is Cons!1741) lt!73511) (not (= (_1!1360 (h!2348 lt!73511)) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))))

(declare-fun d!44497 () Bool)

(declare-fun c!26637 () Bool)

(assert (=> d!44497 (= c!26637 (and ((_ is Cons!1741) lt!73511) (= (_1!1360 (h!2348 lt!73511)) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(assert (=> d!44497 (= (getValueByKey!176 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) e!92222)))

(declare-fun b!141507 () Bool)

(assert (=> b!141507 (= e!92223 (getValueByKey!176 (t!6329 lt!73511) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (= (and d!44497 c!26637) b!141505))

(assert (= (and d!44497 (not c!26637)) b!141506))

(assert (= (and b!141506 c!26638) b!141507))

(assert (= (and b!141506 (not c!26638)) b!141508))

(declare-fun m!169783 () Bool)

(assert (=> b!141507 m!169783))

(assert (=> d!43625 d!44497))

(declare-fun d!44499 () Bool)

(assert (=> d!44499 (= (getValueByKey!176 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(declare-fun lt!74157 () Unit!4373)

(assert (=> d!44499 (= lt!74157 (choose!865 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(declare-fun e!92224 () Bool)

(assert (=> d!44499 e!92224))

(declare-fun res!67530 () Bool)

(assert (=> d!44499 (=> (not res!67530) (not e!92224))))

(assert (=> d!44499 (= res!67530 (isStrictlySorted!325 lt!73511))))

(assert (=> d!44499 (= (lemmaContainsTupThenGetReturnValue!90 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!74157)))

(declare-fun b!141509 () Bool)

(declare-fun res!67531 () Bool)

(assert (=> b!141509 (=> (not res!67531) (not e!92224))))

(assert (=> b!141509 (= res!67531 (containsKey!180 lt!73511 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(declare-fun b!141510 () Bool)

(assert (=> b!141510 (= e!92224 (contains!925 lt!73511 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(assert (= (and d!44499 res!67530) b!141509))

(assert (= (and b!141509 res!67531) b!141510))

(assert (=> d!44499 m!167455))

(declare-fun m!169785 () Bool)

(assert (=> d!44499 m!169785))

(declare-fun m!169787 () Bool)

(assert (=> d!44499 m!169787))

(declare-fun m!169789 () Bool)

(assert (=> b!141509 m!169789))

(declare-fun m!169791 () Bool)

(assert (=> b!141510 m!169791))

(assert (=> d!43625 d!44499))

(declare-fun b!141511 () Bool)

(declare-fun e!92225 () List!1745)

(declare-fun call!15700 () List!1745)

(assert (=> b!141511 (= e!92225 call!15700)))

(declare-fun bm!15695 () Bool)

(declare-fun call!15698 () List!1745)

(assert (=> bm!15695 (= call!15700 call!15698)))

(declare-fun d!44501 () Bool)

(declare-fun e!92229 () Bool)

(assert (=> d!44501 e!92229))

(declare-fun res!67532 () Bool)

(assert (=> d!44501 (=> (not res!67532) (not e!92229))))

(declare-fun lt!74158 () List!1745)

(assert (=> d!44501 (= res!67532 (isStrictlySorted!325 lt!74158))))

(declare-fun e!92226 () List!1745)

(assert (=> d!44501 (= lt!74158 e!92226)))

(declare-fun c!26641 () Bool)

(assert (=> d!44501 (= c!26641 (and ((_ is Cons!1741) (toList!888 lt!73330)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73330))) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(assert (=> d!44501 (isStrictlySorted!325 (toList!888 lt!73330))))

(assert (=> d!44501 (= (insertStrictlySorted!93 (toList!888 lt!73330) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!74158)))

(declare-fun bm!15696 () Bool)

(declare-fun call!15699 () List!1745)

(assert (=> bm!15696 (= call!15698 call!15699)))

(declare-fun b!141512 () Bool)

(declare-fun e!92227 () List!1745)

(assert (=> b!141512 (= e!92226 e!92227)))

(declare-fun c!26640 () Bool)

(assert (=> b!141512 (= c!26640 (and ((_ is Cons!1741) (toList!888 lt!73330)) (= (_1!1360 (h!2348 (toList!888 lt!73330))) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(declare-fun b!141513 () Bool)

(assert (=> b!141513 (= e!92226 call!15699)))

(declare-fun e!92228 () List!1745)

(declare-fun bm!15697 () Bool)

(assert (=> bm!15697 (= call!15699 ($colon$colon!94 e!92228 (ite c!26641 (h!2348 (toList!888 lt!73330)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))))

(declare-fun c!26639 () Bool)

(assert (=> bm!15697 (= c!26639 c!26641)))

(declare-fun b!141514 () Bool)

(declare-fun c!26642 () Bool)

(assert (=> b!141514 (= e!92228 (ite c!26640 (t!6329 (toList!888 lt!73330)) (ite c!26642 (Cons!1741 (h!2348 (toList!888 lt!73330)) (t!6329 (toList!888 lt!73330))) Nil!1742)))))

(declare-fun b!141515 () Bool)

(assert (=> b!141515 (= e!92227 call!15698)))

(declare-fun b!141516 () Bool)

(assert (=> b!141516 (= e!92229 (contains!925 lt!74158 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(declare-fun b!141517 () Bool)

(assert (=> b!141517 (= e!92228 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73330)) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(declare-fun b!141518 () Bool)

(assert (=> b!141518 (= e!92225 call!15700)))

(declare-fun b!141519 () Bool)

(assert (=> b!141519 (= c!26642 (and ((_ is Cons!1741) (toList!888 lt!73330)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73330))) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(assert (=> b!141519 (= e!92227 e!92225)))

(declare-fun b!141520 () Bool)

(declare-fun res!67533 () Bool)

(assert (=> b!141520 (=> (not res!67533) (not e!92229))))

(assert (=> b!141520 (= res!67533 (containsKey!180 lt!74158 (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (= (and d!44501 c!26641) b!141513))

(assert (= (and d!44501 (not c!26641)) b!141512))

(assert (= (and b!141512 c!26640) b!141515))

(assert (= (and b!141512 (not c!26640)) b!141519))

(assert (= (and b!141519 c!26642) b!141518))

(assert (= (and b!141519 (not c!26642)) b!141511))

(assert (= (or b!141518 b!141511) bm!15695))

(assert (= (or b!141515 bm!15695) bm!15696))

(assert (= (or b!141513 bm!15696) bm!15697))

(assert (= (and bm!15697 c!26639) b!141517))

(assert (= (and bm!15697 (not c!26639)) b!141514))

(assert (= (and d!44501 res!67532) b!141520))

(assert (= (and b!141520 res!67533) b!141516))

(declare-fun m!169793 () Bool)

(assert (=> b!141517 m!169793))

(declare-fun m!169795 () Bool)

(assert (=> d!44501 m!169795))

(declare-fun m!169797 () Bool)

(assert (=> d!44501 m!169797))

(declare-fun m!169799 () Bool)

(assert (=> b!141520 m!169799))

(declare-fun m!169801 () Bool)

(assert (=> bm!15697 m!169801))

(declare-fun m!169803 () Bool)

(assert (=> b!141516 m!169803))

(assert (=> d!43625 d!44501))

(declare-fun d!44503 () Bool)

(assert (=> d!44503 (= ($colon$colon!94 e!91379 (ite c!26221 (h!2348 (toList!888 call!15459)) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1741 (ite c!26221 (h!2348 (toList!888 call!15459)) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91379))))

(assert (=> bm!15560 d!44503))

(declare-fun b!141524 () Bool)

(declare-fun e!92231 () Option!182)

(assert (=> b!141524 (= e!92231 None!180)))

(declare-fun b!141521 () Bool)

(declare-fun e!92230 () Option!182)

(assert (=> b!141521 (= e!92230 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73557)))))))

(declare-fun b!141522 () Bool)

(assert (=> b!141522 (= e!92230 e!92231)))

(declare-fun c!26644 () Bool)

(assert (=> b!141522 (= c!26644 (and ((_ is Cons!1741) (toList!888 lt!73557)) (not (= (_1!1360 (h!2348 (toList!888 lt!73557))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26643 () Bool)

(declare-fun d!44505 () Bool)

(assert (=> d!44505 (= c!26643 (and ((_ is Cons!1741) (toList!888 lt!73557)) (= (_1!1360 (h!2348 (toList!888 lt!73557))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44505 (= (getValueByKey!176 (toList!888 lt!73557) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92230)))

(declare-fun b!141523 () Bool)

(assert (=> b!141523 (= e!92231 (getValueByKey!176 (t!6329 (toList!888 lt!73557)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44505 c!26643) b!141521))

(assert (= (and d!44505 (not c!26643)) b!141522))

(assert (= (and b!141522 c!26644) b!141523))

(assert (= (and b!141522 (not c!26644)) b!141524))

(declare-fun m!169805 () Bool)

(assert (=> b!141523 m!169805))

(assert (=> b!140334 d!44505))

(declare-fun b!141528 () Bool)

(declare-fun e!92233 () Option!182)

(assert (=> b!141528 (= e!92233 None!180)))

(declare-fun b!141525 () Bool)

(declare-fun e!92232 () Option!182)

(assert (=> b!141525 (= e!92232 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73831)))))))

(declare-fun b!141526 () Bool)

(assert (=> b!141526 (= e!92232 e!92233)))

(declare-fun c!26646 () Bool)

(assert (=> b!141526 (= c!26646 (and ((_ is Cons!1741) (toList!888 lt!73831)) (not (= (_1!1360 (h!2348 (toList!888 lt!73831))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26645 () Bool)

(declare-fun d!44507 () Bool)

(assert (=> d!44507 (= c!26645 (and ((_ is Cons!1741) (toList!888 lt!73831)) (= (_1!1360 (h!2348 (toList!888 lt!73831))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44507 (= (getValueByKey!176 (toList!888 lt!73831) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92232)))

(declare-fun b!141527 () Bool)

(assert (=> b!141527 (= e!92233 (getValueByKey!176 (t!6329 (toList!888 lt!73831)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!44507 c!26645) b!141525))

(assert (= (and d!44507 (not c!26645)) b!141526))

(assert (= (and b!141526 c!26646) b!141527))

(assert (= (and b!141526 (not c!26646)) b!141528))

(declare-fun m!169807 () Bool)

(assert (=> b!141527 m!169807))

(assert (=> b!140722 d!44507))

(declare-fun d!44509 () Bool)

(assert (=> d!44509 (= (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)) (and (not (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140383 d!44509))

(declare-fun d!44511 () Bool)

(assert (=> d!44511 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140670 d!44511))

(assert (=> d!43939 d!43575))

(assert (=> d!43939 d!43577))

(declare-fun d!44513 () Bool)

(assert (=> d!44513 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44513 true))

(declare-fun _$12!414 () Unit!4373)

(assert (=> d!44513 (= (choose!864 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!414)))

(declare-fun bs!5935 () Bool)

(assert (= bs!5935 d!44513))

(assert (=> bs!5935 m!166489))

(assert (=> bs!5935 m!166489))

(assert (=> bs!5935 m!166491))

(assert (=> d!43939 d!44513))

(assert (=> d!43939 d!44335))

(declare-fun b!141529 () Bool)

(declare-fun lt!74165 () Unit!4373)

(declare-fun lt!74161 () Unit!4373)

(assert (=> b!141529 (= lt!74165 lt!74161)))

(declare-fun lt!74159 () (_ BitVec 64))

(declare-fun lt!74164 () ListLongMap!1745)

(declare-fun lt!74163 () (_ BitVec 64))

(declare-fun lt!74160 () V!3555)

(assert (=> b!141529 (not (contains!923 (+!179 lt!74164 (tuple2!2699 lt!74163 lt!74160)) lt!74159))))

(assert (=> b!141529 (= lt!74161 (addStillNotContains!64 lt!74164 lt!74163 lt!74160 lt!74159))))

(assert (=> b!141529 (= lt!74159 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141529 (= lt!74160 (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141529 (= lt!74163 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))

(declare-fun call!15701 () ListLongMap!1745)

(assert (=> b!141529 (= lt!74164 call!15701)))

(declare-fun e!92234 () ListLongMap!1745)

(assert (=> b!141529 (= e!92234 (+!179 call!15701 (tuple2!2699 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141531 () Bool)

(declare-fun e!92236 () ListLongMap!1745)

(assert (=> b!141531 (= e!92236 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141532 () Bool)

(declare-fun e!92240 () Bool)

(declare-fun e!92235 () Bool)

(assert (=> b!141532 (= e!92240 e!92235)))

(assert (=> b!141532 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun res!67537 () Bool)

(declare-fun lt!74162 () ListLongMap!1745)

(assert (=> b!141532 (= res!67537 (contains!923 lt!74162 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(assert (=> b!141532 (=> (not res!67537) (not e!92235))))

(declare-fun b!141533 () Bool)

(declare-fun res!67534 () Bool)

(declare-fun e!92239 () Bool)

(assert (=> b!141533 (=> (not res!67534) (not e!92239))))

(assert (=> b!141533 (= res!67534 (not (contains!923 lt!74162 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141534 () Bool)

(declare-fun e!92237 () Bool)

(assert (=> b!141534 (= e!92240 e!92237)))

(declare-fun c!26649 () Bool)

(assert (=> b!141534 (= c!26649 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun b!141535 () Bool)

(assert (=> b!141535 (= e!92236 e!92234)))

(declare-fun c!26650 () Bool)

(assert (=> b!141535 (= c!26650 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(declare-fun b!141536 () Bool)

(declare-fun e!92238 () Bool)

(assert (=> b!141536 (= e!92238 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(assert (=> b!141536 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15698 () Bool)

(assert (=> bm!15698 (= call!15701 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))

(declare-fun b!141537 () Bool)

(assert (=> b!141537 (= e!92237 (= lt!74162 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun b!141538 () Bool)

(assert (=> b!141538 (= e!92239 e!92240)))

(declare-fun c!26647 () Bool)

(assert (=> b!141538 (= c!26647 e!92238)))

(declare-fun res!67536 () Bool)

(assert (=> b!141538 (=> (not res!67536) (not e!92238))))

(assert (=> b!141538 (= res!67536 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(declare-fun d!44515 () Bool)

(assert (=> d!44515 e!92239))

(declare-fun res!67535 () Bool)

(assert (=> d!44515 (=> (not res!67535) (not e!92239))))

(assert (=> d!44515 (= res!67535 (not (contains!923 lt!74162 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44515 (= lt!74162 e!92236)))

(declare-fun c!26648 () Bool)

(assert (=> d!44515 (= c!26648 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (=> d!44515 (validMask!0 (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))

(assert (=> d!44515 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (mask!7280 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (extraKeys!2695 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16))) lt!74162)))

(declare-fun b!141530 () Bool)

(assert (=> b!141530 (= e!92237 (isEmpty!417 lt!74162))))

(declare-fun b!141539 () Bool)

(assert (=> b!141539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (=> b!141539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (=> b!141539 (= e!92235 (= (apply!120 lt!74162 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141540 () Bool)

(assert (=> b!141540 (= e!92234 call!15701)))

(assert (= (and d!44515 c!26648) b!141531))

(assert (= (and d!44515 (not c!26648)) b!141535))

(assert (= (and b!141535 c!26650) b!141529))

(assert (= (and b!141535 (not c!26650)) b!141540))

(assert (= (or b!141529 b!141540) bm!15698))

(assert (= (and d!44515 res!67535) b!141533))

(assert (= (and b!141533 res!67534) b!141538))

(assert (= (and b!141538 res!67536) b!141536))

(assert (= (and b!141538 c!26647) b!141532))

(assert (= (and b!141538 (not c!26647)) b!141534))

(assert (= (and b!141532 res!67537) b!141539))

(assert (= (and b!141534 c!26649) b!141537))

(assert (= (and b!141534 (not c!26649)) b!141530))

(declare-fun b_lambda!6337 () Bool)

(assert (=> (not b_lambda!6337) (not b!141529)))

(assert (=> b!141529 t!6345))

(declare-fun b_and!8831 () Bool)

(assert (= b_and!8827 (and (=> t!6345 result!4199) b_and!8831)))

(assert (=> b!141529 t!6347))

(declare-fun b_and!8833 () Bool)

(assert (= b_and!8829 (and (=> t!6347 result!4201) b_and!8833)))

(declare-fun b_lambda!6339 () Bool)

(assert (=> (not b_lambda!6339) (not b!141539)))

(assert (=> b!141539 t!6345))

(declare-fun b_and!8835 () Bool)

(assert (= b_and!8831 (and (=> t!6345 result!4199) b_and!8835)))

(assert (=> b!141539 t!6347))

(declare-fun b_and!8837 () Bool)

(assert (= b_and!8833 (and (=> t!6347 result!4201) b_and!8837)))

(declare-fun m!169809 () Bool)

(assert (=> b!141533 m!169809))

(assert (=> b!141535 m!167955))

(assert (=> b!141535 m!167955))

(assert (=> b!141535 m!167975))

(declare-fun m!169811 () Bool)

(assert (=> d!44515 m!169811))

(assert (=> d!44515 m!167971))

(assert (=> b!141529 m!167987))

(declare-fun m!169813 () Bool)

(assert (=> b!141529 m!169813))

(declare-fun m!169815 () Bool)

(assert (=> b!141529 m!169815))

(assert (=> b!141529 m!169813))

(assert (=> b!141529 m!167985))

(declare-fun m!169817 () Bool)

(assert (=> b!141529 m!169817))

(assert (=> b!141529 m!167985))

(assert (=> b!141529 m!167987))

(assert (=> b!141529 m!167989))

(declare-fun m!169819 () Bool)

(assert (=> b!141529 m!169819))

(assert (=> b!141529 m!167955))

(assert (=> b!141536 m!167955))

(assert (=> b!141536 m!167955))

(assert (=> b!141536 m!167975))

(declare-fun m!169821 () Bool)

(assert (=> bm!15698 m!169821))

(declare-fun m!169823 () Bool)

(assert (=> b!141530 m!169823))

(assert (=> b!141539 m!167987))

(assert (=> b!141539 m!167955))

(declare-fun m!169825 () Bool)

(assert (=> b!141539 m!169825))

(assert (=> b!141539 m!167985))

(assert (=> b!141539 m!167985))

(assert (=> b!141539 m!167987))

(assert (=> b!141539 m!167989))

(assert (=> b!141539 m!167955))

(assert (=> b!141532 m!167955))

(assert (=> b!141532 m!167955))

(declare-fun m!169827 () Bool)

(assert (=> b!141532 m!169827))

(assert (=> b!141537 m!169821))

(assert (=> bm!15613 d!44515))

(declare-fun d!44517 () Bool)

(declare-fun res!67538 () Bool)

(declare-fun e!92241 () Bool)

(assert (=> d!44517 (=> res!67538 e!92241)))

(assert (=> d!44517 (= res!67538 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15465))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15465)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!44517 (= (containsKey!180 (t!6329 (toList!888 call!15465)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92241)))

(declare-fun b!141541 () Bool)

(declare-fun e!92242 () Bool)

(assert (=> b!141541 (= e!92241 e!92242)))

(declare-fun res!67539 () Bool)

(assert (=> b!141541 (=> (not res!67539) (not e!92242))))

(assert (=> b!141541 (= res!67539 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 call!15465)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 call!15465)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (t!6329 (toList!888 call!15465))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 call!15465)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!141542 () Bool)

(assert (=> b!141542 (= e!92242 (containsKey!180 (t!6329 (t!6329 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44517 (not res!67538)) b!141541))

(assert (= (and b!141541 res!67539) b!141542))

(assert (=> b!141542 m!166013))

(declare-fun m!169829 () Bool)

(assert (=> b!141542 m!169829))

(assert (=> b!140538 d!44517))

(declare-fun d!44519 () Bool)

(declare-fun res!67540 () Bool)

(declare-fun e!92243 () Bool)

(assert (=> d!44519 (=> res!67540 e!92243)))

(assert (=> d!44519 (= res!67540 (and ((_ is Cons!1741) (toList!888 lt!72889)) (= (_1!1360 (h!2348 (toList!888 lt!72889))) lt!72894)))))

(assert (=> d!44519 (= (containsKey!180 (toList!888 lt!72889) lt!72894) e!92243)))

(declare-fun b!141543 () Bool)

(declare-fun e!92244 () Bool)

(assert (=> b!141543 (= e!92243 e!92244)))

(declare-fun res!67541 () Bool)

(assert (=> b!141543 (=> (not res!67541) (not e!92244))))

(assert (=> b!141543 (= res!67541 (and (or (not ((_ is Cons!1741) (toList!888 lt!72889))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72889))) lt!72894)) ((_ is Cons!1741) (toList!888 lt!72889)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72889))) lt!72894)))))

(declare-fun b!141544 () Bool)

(assert (=> b!141544 (= e!92244 (containsKey!180 (t!6329 (toList!888 lt!72889)) lt!72894))))

(assert (= (and d!44519 (not res!67540)) b!141543))

(assert (= (and b!141543 res!67541) b!141544))

(declare-fun m!169831 () Bool)

(assert (=> b!141544 m!169831))

(assert (=> d!43895 d!44519))

(declare-fun d!44521 () Bool)

(assert (=> d!44521 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun bs!5936 () Bool)

(assert (= bs!5936 d!44521))

(assert (=> bs!5936 m!166365))

(declare-fun m!169833 () Bool)

(assert (=> bs!5936 m!169833))

(assert (=> b!140289 d!44521))

(assert (=> b!140289 d!43661))

(declare-fun b!141545 () Bool)

(declare-fun lt!74172 () Unit!4373)

(declare-fun lt!74168 () Unit!4373)

(assert (=> b!141545 (= lt!74172 lt!74168)))

(declare-fun lt!74167 () V!3555)

(declare-fun lt!74166 () (_ BitVec 64))

(declare-fun lt!74171 () ListLongMap!1745)

(declare-fun lt!74170 () (_ BitVec 64))

(assert (=> b!141545 (not (contains!923 (+!179 lt!74171 (tuple2!2699 lt!74170 lt!74167)) lt!74166))))

(assert (=> b!141545 (= lt!74168 (addStillNotContains!64 lt!74171 lt!74170 lt!74167 lt!74166))))

(assert (=> b!141545 (= lt!74166 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141545 (= lt!74167 (get!1528 (select (arr!2316 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141545 (= lt!74170 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15702 () ListLongMap!1745)

(assert (=> b!141545 (= lt!74171 call!15702)))

(declare-fun e!92245 () ListLongMap!1745)

(assert (=> b!141545 (= e!92245 (+!179 call!15702 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141547 () Bool)

(declare-fun e!92247 () ListLongMap!1745)

(assert (=> b!141547 (= e!92247 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141548 () Bool)

(declare-fun e!92251 () Bool)

(declare-fun e!92246 () Bool)

(assert (=> b!141548 (= e!92251 e!92246)))

(assert (=> b!141548 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67545 () Bool)

(declare-fun lt!74169 () ListLongMap!1745)

(assert (=> b!141548 (= res!67545 (contains!923 lt!74169 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141548 (=> (not res!67545) (not e!92246))))

(declare-fun b!141549 () Bool)

(declare-fun res!67542 () Bool)

(declare-fun e!92250 () Bool)

(assert (=> b!141549 (=> (not res!67542) (not e!92250))))

(assert (=> b!141549 (= res!67542 (not (contains!923 lt!74169 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141550 () Bool)

(declare-fun e!92248 () Bool)

(assert (=> b!141550 (= e!92251 e!92248)))

(declare-fun c!26653 () Bool)

(assert (=> b!141550 (= c!26653 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141551 () Bool)

(assert (=> b!141551 (= e!92247 e!92245)))

(declare-fun c!26654 () Bool)

(assert (=> b!141551 (= c!26654 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141552 () Bool)

(declare-fun e!92249 () Bool)

(assert (=> b!141552 (= e!92249 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141552 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!15699 () Bool)

(assert (=> bm!15699 (= call!15702 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141553 () Bool)

(assert (=> b!141553 (= e!92248 (= lt!74169 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141554 () Bool)

(assert (=> b!141554 (= e!92250 e!92251)))

(declare-fun c!26651 () Bool)

(assert (=> b!141554 (= c!26651 e!92249)))

(declare-fun res!67544 () Bool)

(assert (=> b!141554 (=> (not res!67544) (not e!92249))))

(assert (=> b!141554 (= res!67544 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44523 () Bool)

(assert (=> d!44523 e!92250))

(declare-fun res!67543 () Bool)

(assert (=> d!44523 (=> (not res!67543) (not e!92250))))

(assert (=> d!44523 (= res!67543 (not (contains!923 lt!74169 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44523 (= lt!74169 e!92247)))

(declare-fun c!26652 () Bool)

(assert (=> d!44523 (= c!26652 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44523 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44523 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74169)))

(declare-fun b!141546 () Bool)

(assert (=> b!141546 (= e!92248 (isEmpty!417 lt!74169))))

(declare-fun b!141555 () Bool)

(assert (=> b!141555 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141555 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!141555 (= e!92246 (= (apply!120 lt!74169 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141556 () Bool)

(assert (=> b!141556 (= e!92245 call!15702)))

(assert (= (and d!44523 c!26652) b!141547))

(assert (= (and d!44523 (not c!26652)) b!141551))

(assert (= (and b!141551 c!26654) b!141545))

(assert (= (and b!141551 (not c!26654)) b!141556))

(assert (= (or b!141545 b!141556) bm!15699))

(assert (= (and d!44523 res!67543) b!141549))

(assert (= (and b!141549 res!67542) b!141554))

(assert (= (and b!141554 res!67544) b!141552))

(assert (= (and b!141554 c!26651) b!141548))

(assert (= (and b!141554 (not c!26651)) b!141550))

(assert (= (and b!141548 res!67545) b!141555))

(assert (= (and b!141550 c!26653) b!141553))

(assert (= (and b!141550 (not c!26653)) b!141546))

(declare-fun b_lambda!6341 () Bool)

(assert (=> (not b_lambda!6341) (not b!141545)))

(assert (=> b!141545 t!6337))

(declare-fun b_and!8839 () Bool)

(assert (= b_and!8835 (and (=> t!6337 result!4191) b_and!8839)))

(assert (=> b!141545 t!6339))

(declare-fun b_and!8841 () Bool)

(assert (= b_and!8837 (and (=> t!6339 result!4193) b_and!8841)))

(declare-fun b_lambda!6343 () Bool)

(assert (=> (not b_lambda!6343) (not b!141555)))

(assert (=> b!141555 t!6337))

(declare-fun b_and!8843 () Bool)

(assert (= b_and!8839 (and (=> t!6337 result!4191) b_and!8843)))

(assert (=> b!141555 t!6339))

(declare-fun b_and!8845 () Bool)

(assert (= b_and!8841 (and (=> t!6339 result!4193) b_and!8845)))

(declare-fun m!169835 () Bool)

(assert (=> b!141549 m!169835))

(assert (=> b!141551 m!167999))

(assert (=> b!141551 m!167999))

(assert (=> b!141551 m!168003))

(declare-fun m!169837 () Bool)

(assert (=> d!44523 m!169837))

(assert (=> d!44523 m!166429))

(assert (=> b!141545 m!166443))

(declare-fun m!169839 () Bool)

(assert (=> b!141545 m!169839))

(declare-fun m!169841 () Bool)

(assert (=> b!141545 m!169841))

(assert (=> b!141545 m!169839))

(assert (=> b!141545 m!168983))

(declare-fun m!169843 () Bool)

(assert (=> b!141545 m!169843))

(assert (=> b!141545 m!168983))

(assert (=> b!141545 m!166443))

(assert (=> b!141545 m!168987))

(declare-fun m!169845 () Bool)

(assert (=> b!141545 m!169845))

(assert (=> b!141545 m!167999))

(assert (=> b!141552 m!167999))

(assert (=> b!141552 m!167999))

(assert (=> b!141552 m!168003))

(declare-fun m!169847 () Bool)

(assert (=> bm!15699 m!169847))

(declare-fun m!169849 () Bool)

(assert (=> b!141546 m!169849))

(assert (=> b!141555 m!166443))

(assert (=> b!141555 m!167999))

(declare-fun m!169851 () Bool)

(assert (=> b!141555 m!169851))

(assert (=> b!141555 m!168983))

(assert (=> b!141555 m!168983))

(assert (=> b!141555 m!166443))

(assert (=> b!141555 m!168987))

(assert (=> b!141555 m!167999))

(assert (=> b!141548 m!167999))

(assert (=> b!141548 m!167999))

(declare-fun m!169853 () Bool)

(assert (=> b!141548 m!169853))

(assert (=> b!141553 m!169847))

(assert (=> b!140275 d!44523))

(assert (=> b!140526 d!44053))

(declare-fun d!44525 () Bool)

(declare-fun lt!74173 () Bool)

(assert (=> d!44525 (= lt!74173 (select (content!138 (t!6329 (toList!888 lt!73059))) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!92253 () Bool)

(assert (=> d!44525 (= lt!74173 e!92253)))

(declare-fun res!67546 () Bool)

(assert (=> d!44525 (=> (not res!67546) (not e!92253))))

(assert (=> d!44525 (= res!67546 ((_ is Cons!1741) (t!6329 (toList!888 lt!73059))))))

(assert (=> d!44525 (= (contains!925 (t!6329 (toList!888 lt!73059)) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!74173)))

(declare-fun b!141557 () Bool)

(declare-fun e!92252 () Bool)

(assert (=> b!141557 (= e!92253 e!92252)))

(declare-fun res!67547 () Bool)

(assert (=> b!141557 (=> res!67547 e!92252)))

(assert (=> b!141557 (= res!67547 (= (h!2348 (t!6329 (toList!888 lt!73059))) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!141558 () Bool)

(assert (=> b!141558 (= e!92252 (contains!925 (t!6329 (t!6329 (toList!888 lt!73059))) (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!44525 res!67546) b!141557))

(assert (= (and b!141557 (not res!67547)) b!141558))

(declare-fun m!169855 () Bool)

(assert (=> d!44525 m!169855))

(declare-fun m!169857 () Bool)

(assert (=> d!44525 m!169857))

(declare-fun m!169859 () Bool)

(assert (=> b!141558 m!169859))

(assert (=> b!140721 d!44525))

(declare-fun d!44527 () Bool)

(declare-fun lt!74174 () Bool)

(assert (=> d!44527 (= lt!74174 (select (content!138 lt!73752) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92255 () Bool)

(assert (=> d!44527 (= lt!74174 e!92255)))

(declare-fun res!67548 () Bool)

(assert (=> d!44527 (=> (not res!67548) (not e!92255))))

(assert (=> d!44527 (= res!67548 ((_ is Cons!1741) lt!73752))))

(assert (=> d!44527 (= (contains!925 lt!73752 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74174)))

(declare-fun b!141559 () Bool)

(declare-fun e!92254 () Bool)

(assert (=> b!141559 (= e!92255 e!92254)))

(declare-fun res!67549 () Bool)

(assert (=> b!141559 (=> res!67549 e!92254)))

(assert (=> b!141559 (= res!67549 (= (h!2348 lt!73752) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141560 () Bool)

(assert (=> b!141560 (= e!92254 (contains!925 (t!6329 lt!73752) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44527 res!67548) b!141559))

(assert (= (and b!141559 (not res!67549)) b!141560))

(declare-fun m!169861 () Bool)

(assert (=> d!44527 m!169861))

(declare-fun m!169863 () Bool)

(assert (=> d!44527 m!169863))

(declare-fun m!169865 () Bool)

(assert (=> b!141560 m!169865))

(assert (=> b!140626 d!44527))

(declare-fun d!44529 () Bool)

(assert (=> d!44529 (isDefined!129 (getValueByKey!176 (toList!888 lt!72902) lt!72903))))

(declare-fun lt!74175 () Unit!4373)

(assert (=> d!44529 (= lt!74175 (choose!864 (toList!888 lt!72902) lt!72903))))

(declare-fun e!92256 () Bool)

(assert (=> d!44529 e!92256))

(declare-fun res!67550 () Bool)

(assert (=> d!44529 (=> (not res!67550) (not e!92256))))

(assert (=> d!44529 (= res!67550 (isStrictlySorted!325 (toList!888 lt!72902)))))

(assert (=> d!44529 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72902) lt!72903) lt!74175)))

(declare-fun b!141561 () Bool)

(assert (=> b!141561 (= e!92256 (containsKey!180 (toList!888 lt!72902) lt!72903))))

(assert (= (and d!44529 res!67550) b!141561))

(assert (=> d!44529 m!167637))

(assert (=> d!44529 m!167637))

(assert (=> d!44529 m!167639))

(declare-fun m!169867 () Bool)

(assert (=> d!44529 m!169867))

(assert (=> d!44529 m!167555))

(assert (=> b!141561 m!167633))

(assert (=> b!140339 d!44529))

(assert (=> b!140339 d!44371))

(assert (=> b!140339 d!44373))

(declare-fun d!44531 () Bool)

(assert (=> d!44531 (= (isEmpty!419 (toList!888 lt!73052)) ((_ is Nil!1742) (toList!888 lt!73052)))))

(assert (=> d!43753 d!44531))

(declare-fun b!141565 () Bool)

(declare-fun e!92258 () Option!182)

(assert (=> b!141565 (= e!92258 None!180)))

(declare-fun b!141562 () Bool)

(declare-fun e!92257 () Option!182)

(assert (=> b!141562 (= e!92257 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73891)))))))

(declare-fun b!141563 () Bool)

(assert (=> b!141563 (= e!92257 e!92258)))

(declare-fun c!26656 () Bool)

(assert (=> b!141563 (= c!26656 (and ((_ is Cons!1741) (toList!888 lt!73891)) (not (= (_1!1360 (h!2348 (toList!888 lt!73891))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun d!44533 () Bool)

(declare-fun c!26655 () Bool)

(assert (=> d!44533 (= c!26655 (and ((_ is Cons!1741) (toList!888 lt!73891)) (= (_1!1360 (h!2348 (toList!888 lt!73891))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44533 (= (getValueByKey!176 (toList!888 lt!73891) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92257)))

(declare-fun b!141564 () Bool)

(assert (=> b!141564 (= e!92258 (getValueByKey!176 (t!6329 (toList!888 lt!73891)) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44533 c!26655) b!141562))

(assert (= (and d!44533 (not c!26655)) b!141563))

(assert (= (and b!141563 c!26656) b!141564))

(assert (= (and b!141563 (not c!26656)) b!141565))

(declare-fun m!169869 () Bool)

(assert (=> b!141564 m!169869))

(assert (=> b!140810 d!44533))

(declare-fun d!44535 () Bool)

(assert (=> d!44535 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))

(declare-fun lt!74176 () Unit!4373)

(assert (=> d!44535 (= lt!74176 (choose!864 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))

(declare-fun e!92259 () Bool)

(assert (=> d!44535 e!92259))

(declare-fun res!67551 () Bool)

(assert (=> d!44535 (=> (not res!67551) (not e!92259))))

(assert (=> d!44535 (= res!67551 (isStrictlySorted!325 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (=> d!44535 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049) lt!74176)))

(declare-fun b!141566 () Bool)

(assert (=> b!141566 (= e!92259 (containsKey!180 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049))))

(assert (= (and d!44535 res!67551) b!141566))

(assert (=> d!44535 m!167267))

(assert (=> d!44535 m!167267))

(assert (=> d!44535 m!167269))

(declare-fun m!169871 () Bool)

(assert (=> d!44535 m!169871))

(declare-fun m!169873 () Bool)

(assert (=> d!44535 m!169873))

(assert (=> b!141566 m!167263))

(assert (=> b!140196 d!44535))

(assert (=> b!140196 d!44375))

(assert (=> b!140196 d!44377))

(declare-fun d!44537 () Bool)

(assert (=> d!44537 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5937 () Bool)

(assert (= bs!5937 d!44537))

(assert (=> bs!5937 m!168049))

(declare-fun m!169875 () Bool)

(assert (=> bs!5937 m!169875))

(assert (=> b!140761 d!44537))

(assert (=> b!140761 d!44259))

(assert (=> b!140248 d!43523))

(declare-fun b!141570 () Bool)

(declare-fun e!92261 () Option!182)

(assert (=> b!141570 (= e!92261 None!180)))

(declare-fun b!141567 () Bool)

(declare-fun e!92260 () Option!182)

(assert (=> b!141567 (= e!92260 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73417)))))))

(declare-fun b!141568 () Bool)

(assert (=> b!141568 (= e!92260 e!92261)))

(declare-fun c!26658 () Bool)

(assert (=> b!141568 (= c!26658 (and ((_ is Cons!1741) (toList!888 lt!73417)) (not (= (_1!1360 (h!2348 (toList!888 lt!73417))) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))))

(declare-fun c!26657 () Bool)

(declare-fun d!44539 () Bool)

(assert (=> d!44539 (= c!26657 (and ((_ is Cons!1741) (toList!888 lt!73417)) (= (_1!1360 (h!2348 (toList!888 lt!73417))) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(assert (=> d!44539 (= (getValueByKey!176 (toList!888 lt!73417) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) e!92260)))

(declare-fun b!141569 () Bool)

(assert (=> b!141569 (= e!92261 (getValueByKey!176 (t!6329 (toList!888 lt!73417)) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (= (and d!44539 c!26657) b!141567))

(assert (= (and d!44539 (not c!26657)) b!141568))

(assert (= (and b!141568 c!26658) b!141569))

(assert (= (and b!141568 (not c!26658)) b!141570))

(declare-fun m!169877 () Bool)

(assert (=> b!141569 m!169877))

(assert (=> b!140099 d!44539))

(assert (=> d!43865 d!43347))

(declare-fun d!44541 () Bool)

(declare-fun e!92262 () Bool)

(assert (=> d!44541 e!92262))

(declare-fun res!67552 () Bool)

(assert (=> d!44541 (=> res!67552 e!92262)))

(declare-fun lt!74179 () Bool)

(assert (=> d!44541 (= res!67552 (not lt!74179))))

(declare-fun lt!74177 () Bool)

(assert (=> d!44541 (= lt!74179 lt!74177)))

(declare-fun lt!74178 () Unit!4373)

(declare-fun e!92263 () Unit!4373)

(assert (=> d!44541 (= lt!74178 e!92263)))

(declare-fun c!26659 () Bool)

(assert (=> d!44541 (= c!26659 lt!74177)))

(assert (=> d!44541 (= lt!74177 (containsKey!180 (toList!888 lt!73773) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44541 (= (contains!923 lt!73773 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!74179)))

(declare-fun b!141571 () Bool)

(declare-fun lt!74180 () Unit!4373)

(assert (=> b!141571 (= e!92263 lt!74180)))

(assert (=> b!141571 (= lt!74180 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73773) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (=> b!141571 (isDefined!129 (getValueByKey!176 (toList!888 lt!73773) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141572 () Bool)

(declare-fun Unit!4467 () Unit!4373)

(assert (=> b!141572 (= e!92263 Unit!4467)))

(declare-fun b!141573 () Bool)

(assert (=> b!141573 (= e!92262 (isDefined!129 (getValueByKey!176 (toList!888 lt!73773) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44541 c!26659) b!141571))

(assert (= (and d!44541 (not c!26659)) b!141572))

(assert (= (and d!44541 (not res!67552)) b!141573))

(declare-fun m!169879 () Bool)

(assert (=> d!44541 m!169879))

(declare-fun m!169881 () Bool)

(assert (=> b!141571 m!169881))

(assert (=> b!141571 m!168251))

(assert (=> b!141571 m!168251))

(declare-fun m!169883 () Bool)

(assert (=> b!141571 m!169883))

(assert (=> b!141573 m!168251))

(assert (=> b!141573 m!168251))

(assert (=> b!141573 m!169883))

(assert (=> d!43835 d!44541))

(declare-fun b!141577 () Bool)

(declare-fun e!92265 () Option!182)

(assert (=> b!141577 (= e!92265 None!180)))

(declare-fun b!141574 () Bool)

(declare-fun e!92264 () Option!182)

(assert (=> b!141574 (= e!92264 (Some!181 (_2!1360 (h!2348 lt!73770))))))

(declare-fun b!141575 () Bool)

(assert (=> b!141575 (= e!92264 e!92265)))

(declare-fun c!26661 () Bool)

(assert (=> b!141575 (= c!26661 (and ((_ is Cons!1741) lt!73770) (not (= (_1!1360 (h!2348 lt!73770)) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))))

(declare-fun d!44543 () Bool)

(declare-fun c!26660 () Bool)

(assert (=> d!44543 (= c!26660 (and ((_ is Cons!1741) lt!73770) (= (_1!1360 (h!2348 lt!73770)) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44543 (= (getValueByKey!176 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) e!92264)))

(declare-fun b!141576 () Bool)

(assert (=> b!141576 (= e!92265 (getValueByKey!176 (t!6329 lt!73770) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44543 c!26660) b!141574))

(assert (= (and d!44543 (not c!26660)) b!141575))

(assert (= (and b!141575 c!26661) b!141576))

(assert (= (and b!141575 (not c!26661)) b!141577))

(declare-fun m!169885 () Bool)

(assert (=> b!141576 m!169885))

(assert (=> d!43835 d!44543))

(declare-fun d!44545 () Bool)

(assert (=> d!44545 (= (getValueByKey!176 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74181 () Unit!4373)

(assert (=> d!44545 (= lt!74181 (choose!865 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92266 () Bool)

(assert (=> d!44545 e!92266))

(declare-fun res!67553 () Bool)

(assert (=> d!44545 (=> (not res!67553) (not e!92266))))

(assert (=> d!44545 (= res!67553 (isStrictlySorted!325 lt!73770))))

(assert (=> d!44545 (= (lemmaContainsTupThenGetReturnValue!90 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!74181)))

(declare-fun b!141578 () Bool)

(declare-fun res!67554 () Bool)

(assert (=> b!141578 (=> (not res!67554) (not e!92266))))

(assert (=> b!141578 (= res!67554 (containsKey!180 lt!73770 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141579 () Bool)

(assert (=> b!141579 (= e!92266 (contains!925 lt!73770 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44545 res!67553) b!141578))

(assert (= (and b!141578 res!67554) b!141579))

(assert (=> d!44545 m!168245))

(declare-fun m!169887 () Bool)

(assert (=> d!44545 m!169887))

(declare-fun m!169889 () Bool)

(assert (=> d!44545 m!169889))

(declare-fun m!169891 () Bool)

(assert (=> b!141578 m!169891))

(declare-fun m!169893 () Bool)

(assert (=> b!141579 m!169893))

(assert (=> d!43835 d!44545))

(declare-fun b!141580 () Bool)

(declare-fun e!92267 () List!1745)

(declare-fun call!15705 () List!1745)

(assert (=> b!141580 (= e!92267 call!15705)))

(declare-fun bm!15700 () Bool)

(declare-fun call!15703 () List!1745)

(assert (=> bm!15700 (= call!15705 call!15703)))

(declare-fun d!44547 () Bool)

(declare-fun e!92271 () Bool)

(assert (=> d!44547 e!92271))

(declare-fun res!67555 () Bool)

(assert (=> d!44547 (=> (not res!67555) (not e!92271))))

(declare-fun lt!74182 () List!1745)

(assert (=> d!44547 (= res!67555 (isStrictlySorted!325 lt!74182))))

(declare-fun e!92268 () List!1745)

(assert (=> d!44547 (= lt!74182 e!92268)))

(declare-fun c!26664 () Bool)

(assert (=> d!44547 (= c!26664 (and ((_ is Cons!1741) (toList!888 lt!73286)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73286))) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44547 (isStrictlySorted!325 (toList!888 lt!73286))))

(assert (=> d!44547 (= (insertStrictlySorted!93 (toList!888 lt!73286) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!74182)))

(declare-fun bm!15701 () Bool)

(declare-fun call!15704 () List!1745)

(assert (=> bm!15701 (= call!15703 call!15704)))

(declare-fun b!141581 () Bool)

(declare-fun e!92269 () List!1745)

(assert (=> b!141581 (= e!92268 e!92269)))

(declare-fun c!26663 () Bool)

(assert (=> b!141581 (= c!26663 (and ((_ is Cons!1741) (toList!888 lt!73286)) (= (_1!1360 (h!2348 (toList!888 lt!73286))) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141582 () Bool)

(assert (=> b!141582 (= e!92268 call!15704)))

(declare-fun e!92270 () List!1745)

(declare-fun bm!15702 () Bool)

(assert (=> bm!15702 (= call!15704 ($colon$colon!94 e!92270 (ite c!26664 (h!2348 (toList!888 lt!73286)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26662 () Bool)

(assert (=> bm!15702 (= c!26662 c!26664)))

(declare-fun b!141583 () Bool)

(declare-fun c!26665 () Bool)

(assert (=> b!141583 (= e!92270 (ite c!26663 (t!6329 (toList!888 lt!73286)) (ite c!26665 (Cons!1741 (h!2348 (toList!888 lt!73286)) (t!6329 (toList!888 lt!73286))) Nil!1742)))))

(declare-fun b!141584 () Bool)

(assert (=> b!141584 (= e!92269 call!15703)))

(declare-fun b!141585 () Bool)

(assert (=> b!141585 (= e!92271 (contains!925 lt!74182 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141586 () Bool)

(assert (=> b!141586 (= e!92270 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73286)) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141587 () Bool)

(assert (=> b!141587 (= e!92267 call!15705)))

(declare-fun b!141588 () Bool)

(assert (=> b!141588 (= c!26665 (and ((_ is Cons!1741) (toList!888 lt!73286)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73286))) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(assert (=> b!141588 (= e!92269 e!92267)))

(declare-fun b!141589 () Bool)

(declare-fun res!67556 () Bool)

(assert (=> b!141589 (=> (not res!67556) (not e!92271))))

(assert (=> b!141589 (= res!67556 (containsKey!180 lt!74182 (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44547 c!26664) b!141582))

(assert (= (and d!44547 (not c!26664)) b!141581))

(assert (= (and b!141581 c!26663) b!141584))

(assert (= (and b!141581 (not c!26663)) b!141588))

(assert (= (and b!141588 c!26665) b!141587))

(assert (= (and b!141588 (not c!26665)) b!141580))

(assert (= (or b!141587 b!141580) bm!15700))

(assert (= (or b!141584 bm!15700) bm!15701))

(assert (= (or b!141582 bm!15701) bm!15702))

(assert (= (and bm!15702 c!26662) b!141586))

(assert (= (and bm!15702 (not c!26662)) b!141583))

(assert (= (and d!44547 res!67555) b!141589))

(assert (= (and b!141589 res!67556) b!141585))

(declare-fun m!169895 () Bool)

(assert (=> b!141586 m!169895))

(declare-fun m!169897 () Bool)

(assert (=> d!44547 m!169897))

(declare-fun m!169899 () Bool)

(assert (=> d!44547 m!169899))

(declare-fun m!169901 () Bool)

(assert (=> b!141589 m!169901))

(declare-fun m!169903 () Bool)

(assert (=> bm!15702 m!169903))

(declare-fun m!169905 () Bool)

(assert (=> b!141585 m!169905))

(assert (=> d!43835 d!44547))

(declare-fun d!44549 () Bool)

(assert (=> d!44549 (= (validMask!0 (mask!7280 (_2!1361 lt!72992))) (and (or (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000000000111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000000001111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000000011111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000000111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000001111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000011111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000000111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000001111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000011111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000000111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000001111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000011111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000000111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000001111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000011111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000000111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000001111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000011111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000000111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000001111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000011111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000000111111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000001111111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000011111111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00000111111111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00001111111111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00011111111111111111111111111111) (= (mask!7280 (_2!1361 lt!72992)) #b00111111111111111111111111111111)) (bvsle (mask!7280 (_2!1361 lt!72992)) #b00111111111111111111111111111111)))))

(assert (=> d!43645 d!44549))

(declare-fun d!44551 () Bool)

(declare-fun e!92272 () Bool)

(assert (=> d!44551 e!92272))

(declare-fun res!67557 () Bool)

(assert (=> d!44551 (=> res!67557 e!92272)))

(declare-fun lt!74185 () Bool)

(assert (=> d!44551 (= res!67557 (not lt!74185))))

(declare-fun lt!74183 () Bool)

(assert (=> d!44551 (= lt!74185 lt!74183)))

(declare-fun lt!74184 () Unit!4373)

(declare-fun e!92273 () Unit!4373)

(assert (=> d!44551 (= lt!74184 e!92273)))

(declare-fun c!26666 () Bool)

(assert (=> d!44551 (= c!26666 lt!74183)))

(assert (=> d!44551 (= lt!74183 (containsKey!180 (toList!888 lt!73550) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44551 (= (contains!923 lt!73550 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74185)))

(declare-fun b!141590 () Bool)

(declare-fun lt!74186 () Unit!4373)

(assert (=> b!141590 (= e!92273 lt!74186)))

(assert (=> b!141590 (= lt!74186 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73550) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141590 (isDefined!129 (getValueByKey!176 (toList!888 lt!73550) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141591 () Bool)

(declare-fun Unit!4468 () Unit!4373)

(assert (=> b!141591 (= e!92273 Unit!4468)))

(declare-fun b!141592 () Bool)

(assert (=> b!141592 (= e!92272 (isDefined!129 (getValueByKey!176 (toList!888 lt!73550) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44551 c!26666) b!141590))

(assert (= (and d!44551 (not c!26666)) b!141591))

(assert (= (and d!44551 (not res!67557)) b!141592))

(declare-fun m!169907 () Bool)

(assert (=> d!44551 m!169907))

(declare-fun m!169909 () Bool)

(assert (=> b!141590 m!169909))

(declare-fun m!169911 () Bool)

(assert (=> b!141590 m!169911))

(assert (=> b!141590 m!169911))

(declare-fun m!169913 () Bool)

(assert (=> b!141590 m!169913))

(assert (=> b!141592 m!169911))

(assert (=> b!141592 m!169911))

(assert (=> b!141592 m!169913))

(assert (=> b!140326 d!44551))

(declare-fun d!44553 () Bool)

(declare-fun e!92274 () Bool)

(assert (=> d!44553 e!92274))

(declare-fun res!67558 () Bool)

(assert (=> d!44553 (=> res!67558 e!92274)))

(declare-fun lt!74189 () Bool)

(assert (=> d!44553 (= res!67558 (not lt!74189))))

(declare-fun lt!74187 () Bool)

(assert (=> d!44553 (= lt!74189 lt!74187)))

(declare-fun lt!74188 () Unit!4373)

(declare-fun e!92275 () Unit!4373)

(assert (=> d!44553 (= lt!74188 e!92275)))

(declare-fun c!26667 () Bool)

(assert (=> d!44553 (= c!26667 lt!74187)))

(assert (=> d!44553 (= lt!74187 (containsKey!180 (toList!888 lt!73650) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44553 (= (contains!923 lt!73650 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74189)))

(declare-fun b!141593 () Bool)

(declare-fun lt!74190 () Unit!4373)

(assert (=> b!141593 (= e!92275 lt!74190)))

(assert (=> b!141593 (= lt!74190 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73650) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141593 (isDefined!129 (getValueByKey!176 (toList!888 lt!73650) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141594 () Bool)

(declare-fun Unit!4469 () Unit!4373)

(assert (=> b!141594 (= e!92275 Unit!4469)))

(declare-fun b!141595 () Bool)

(assert (=> b!141595 (= e!92274 (isDefined!129 (getValueByKey!176 (toList!888 lt!73650) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44553 c!26667) b!141593))

(assert (= (and d!44553 (not c!26667)) b!141594))

(assert (= (and d!44553 (not res!67558)) b!141595))

(declare-fun m!169915 () Bool)

(assert (=> d!44553 m!169915))

(declare-fun m!169917 () Bool)

(assert (=> b!141593 m!169917))

(declare-fun m!169919 () Bool)

(assert (=> b!141593 m!169919))

(assert (=> b!141593 m!169919))

(declare-fun m!169921 () Bool)

(assert (=> b!141593 m!169921))

(assert (=> b!141595 m!169919))

(assert (=> b!141595 m!169919))

(assert (=> b!141595 m!169921))

(assert (=> bm!15600 d!44553))

(declare-fun d!44555 () Bool)

(declare-fun e!92276 () Bool)

(assert (=> d!44555 e!92276))

(declare-fun res!67559 () Bool)

(assert (=> d!44555 (=> res!67559 e!92276)))

(declare-fun lt!74193 () Bool)

(assert (=> d!44555 (= res!67559 (not lt!74193))))

(declare-fun lt!74191 () Bool)

(assert (=> d!44555 (= lt!74193 lt!74191)))

(declare-fun lt!74192 () Unit!4373)

(declare-fun e!92277 () Unit!4373)

(assert (=> d!44555 (= lt!74192 e!92277)))

(declare-fun c!26668 () Bool)

(assert (=> d!44555 (= c!26668 lt!74191)))

(assert (=> d!44555 (= lt!74191 (containsKey!180 (toList!888 lt!73729) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44555 (= (contains!923 lt!73729 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74193)))

(declare-fun b!141596 () Bool)

(declare-fun lt!74194 () Unit!4373)

(assert (=> b!141596 (= e!92277 lt!74194)))

(assert (=> b!141596 (= lt!74194 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73729) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141596 (isDefined!129 (getValueByKey!176 (toList!888 lt!73729) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141597 () Bool)

(declare-fun Unit!4470 () Unit!4373)

(assert (=> b!141597 (= e!92277 Unit!4470)))

(declare-fun b!141598 () Bool)

(assert (=> b!141598 (= e!92276 (isDefined!129 (getValueByKey!176 (toList!888 lt!73729) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44555 c!26668) b!141596))

(assert (= (and d!44555 (not c!26668)) b!141597))

(assert (= (and d!44555 (not res!67559)) b!141598))

(assert (=> d!44555 m!166385))

(declare-fun m!169923 () Bool)

(assert (=> d!44555 m!169923))

(assert (=> b!141596 m!166385))

(declare-fun m!169925 () Bool)

(assert (=> b!141596 m!169925))

(assert (=> b!141596 m!166385))

(declare-fun m!169927 () Bool)

(assert (=> b!141596 m!169927))

(assert (=> b!141596 m!169927))

(declare-fun m!169929 () Bool)

(assert (=> b!141596 m!169929))

(assert (=> b!141598 m!166385))

(assert (=> b!141598 m!169927))

(assert (=> b!141598 m!169927))

(assert (=> b!141598 m!169929))

(assert (=> b!140580 d!44555))

(assert (=> d!43989 d!43337))

(assert (=> d!43989 d!43315))

(assert (=> d!43989 d!43321))

(declare-fun lt!74195 () Bool)

(declare-fun d!44557 () Bool)

(assert (=> d!44557 (= lt!74195 (select (content!138 lt!73028) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92279 () Bool)

(assert (=> d!44557 (= lt!74195 e!92279)))

(declare-fun res!67560 () Bool)

(assert (=> d!44557 (=> (not res!67560) (not e!92279))))

(assert (=> d!44557 (= res!67560 ((_ is Cons!1741) lt!73028))))

(assert (=> d!44557 (= (contains!925 lt!73028 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74195)))

(declare-fun b!141599 () Bool)

(declare-fun e!92278 () Bool)

(assert (=> b!141599 (= e!92279 e!92278)))

(declare-fun res!67561 () Bool)

(assert (=> b!141599 (=> res!67561 e!92278)))

(assert (=> b!141599 (= res!67561 (= (h!2348 lt!73028) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141600 () Bool)

(assert (=> b!141600 (= e!92278 (contains!925 (t!6329 lt!73028) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44557 res!67560) b!141599))

(assert (= (and b!141599 (not res!67561)) b!141600))

(declare-fun m!169931 () Bool)

(assert (=> d!44557 m!169931))

(declare-fun m!169933 () Bool)

(assert (=> d!44557 m!169933))

(declare-fun m!169935 () Bool)

(assert (=> b!141600 m!169935))

(assert (=> b!140620 d!44557))

(declare-fun d!44559 () Bool)

(declare-fun res!67562 () Bool)

(declare-fun e!92280 () Bool)

(assert (=> d!44559 (=> res!67562 e!92280)))

(assert (=> d!44559 (= res!67562 (and ((_ is Cons!1741) (toList!888 lt!73158)) (= (_1!1360 (h!2348 (toList!888 lt!73158))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44559 (= (containsKey!180 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000) e!92280)))

(declare-fun b!141601 () Bool)

(declare-fun e!92281 () Bool)

(assert (=> b!141601 (= e!92280 e!92281)))

(declare-fun res!67563 () Bool)

(assert (=> b!141601 (=> (not res!67563) (not e!92281))))

(assert (=> b!141601 (= res!67563 (and (or (not ((_ is Cons!1741) (toList!888 lt!73158))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73158))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73158)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73158))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141602 () Bool)

(assert (=> b!141602 (= e!92281 (containsKey!180 (t!6329 (toList!888 lt!73158)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44559 (not res!67562)) b!141601))

(assert (= (and b!141601 res!67563) b!141602))

(declare-fun m!169937 () Bool)

(assert (=> b!141602 m!169937))

(assert (=> d!43559 d!44559))

(declare-fun d!44561 () Bool)

(declare-fun e!92282 () Bool)

(assert (=> d!44561 e!92282))

(declare-fun res!67564 () Bool)

(assert (=> d!44561 (=> res!67564 e!92282)))

(declare-fun lt!74198 () Bool)

(assert (=> d!44561 (= res!67564 (not lt!74198))))

(declare-fun lt!74196 () Bool)

(assert (=> d!44561 (= lt!74198 lt!74196)))

(declare-fun lt!74197 () Unit!4373)

(declare-fun e!92283 () Unit!4373)

(assert (=> d!44561 (= lt!74197 e!92283)))

(declare-fun c!26669 () Bool)

(assert (=> d!44561 (= c!26669 lt!74196)))

(assert (=> d!44561 (= lt!74196 (containsKey!180 (toList!888 lt!73528) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44561 (= (contains!923 lt!73528 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74198)))

(declare-fun b!141603 () Bool)

(declare-fun lt!74199 () Unit!4373)

(assert (=> b!141603 (= e!92283 lt!74199)))

(assert (=> b!141603 (= lt!74199 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73528) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141603 (isDefined!129 (getValueByKey!176 (toList!888 lt!73528) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141604 () Bool)

(declare-fun Unit!4471 () Unit!4373)

(assert (=> b!141604 (= e!92283 Unit!4471)))

(declare-fun b!141605 () Bool)

(assert (=> b!141605 (= e!92282 (isDefined!129 (getValueByKey!176 (toList!888 lt!73528) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44561 c!26669) b!141603))

(assert (= (and d!44561 (not c!26669)) b!141604))

(assert (= (and d!44561 (not res!67564)) b!141605))

(declare-fun m!169939 () Bool)

(assert (=> d!44561 m!169939))

(declare-fun m!169941 () Bool)

(assert (=> b!141603 m!169941))

(declare-fun m!169943 () Bool)

(assert (=> b!141603 m!169943))

(assert (=> b!141603 m!169943))

(declare-fun m!169945 () Bool)

(assert (=> b!141603 m!169945))

(assert (=> b!141605 m!169943))

(assert (=> b!141605 m!169943))

(assert (=> b!141605 m!169945))

(assert (=> d!43639 d!44561))

(assert (=> d!43639 d!43527))

(assert (=> d!43529 d!43531))

(assert (=> d!43529 d!43533))

(declare-fun d!44563 () Bool)

(assert (=> d!44563 (isDefined!129 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44563 true))

(declare-fun _$12!415 () Unit!4373)

(assert (=> d!44563 (= (choose!864 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!415)))

(declare-fun bs!5938 () Bool)

(assert (= bs!5938 d!44563))

(assert (=> bs!5938 m!166691))

(assert (=> bs!5938 m!166691))

(assert (=> bs!5938 m!166715))

(assert (=> d!43529 d!44563))

(assert (=> d!43529 d!44335))

(declare-fun d!44565 () Bool)

(assert (=> d!44565 (isDefined!129 (getValueByKey!176 (toList!888 lt!72887) lt!72888))))

(declare-fun lt!74200 () Unit!4373)

(assert (=> d!44565 (= lt!74200 (choose!864 (toList!888 lt!72887) lt!72888))))

(declare-fun e!92284 () Bool)

(assert (=> d!44565 e!92284))

(declare-fun res!67565 () Bool)

(assert (=> d!44565 (=> (not res!67565) (not e!92284))))

(assert (=> d!44565 (= res!67565 (isStrictlySorted!325 (toList!888 lt!72887)))))

(assert (=> d!44565 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72887) lt!72888) lt!74200)))

(declare-fun b!141606 () Bool)

(assert (=> b!141606 (= e!92284 (containsKey!180 (toList!888 lt!72887) lt!72888))))

(assert (= (and d!44565 res!67565) b!141606))

(assert (=> d!44565 m!166349))

(assert (=> d!44565 m!166349))

(assert (=> d!44565 m!167043))

(declare-fun m!169947 () Bool)

(assert (=> d!44565 m!169947))

(assert (=> d!44565 m!168179))

(assert (=> b!141606 m!167039))

(assert (=> b!140071 d!44565))

(assert (=> b!140071 d!44379))

(assert (=> b!140071 d!43489))

(declare-fun d!44567 () Bool)

(declare-fun res!67566 () Bool)

(declare-fun e!92285 () Bool)

(assert (=> d!44567 (=> res!67566 e!92285)))

(assert (=> d!44567 (= res!67566 (and ((_ is Cons!1741) lt!73343) (= (_1!1360 (h!2348 lt!73343)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44567 (= (containsKey!180 lt!73343 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92285)))

(declare-fun b!141607 () Bool)

(declare-fun e!92286 () Bool)

(assert (=> b!141607 (= e!92285 e!92286)))

(declare-fun res!67567 () Bool)

(assert (=> b!141607 (=> (not res!67567) (not e!92286))))

(assert (=> b!141607 (= res!67567 (and (or (not ((_ is Cons!1741) lt!73343)) (bvsle (_1!1360 (h!2348 lt!73343)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73343) (bvslt (_1!1360 (h!2348 lt!73343)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141608 () Bool)

(assert (=> b!141608 (= e!92286 (containsKey!180 (t!6329 lt!73343) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44567 (not res!67566)) b!141607))

(assert (= (and b!141607 res!67567) b!141608))

(declare-fun m!169949 () Bool)

(assert (=> b!141608 m!169949))

(assert (=> b!140001 d!44567))

(declare-fun d!44569 () Bool)

(declare-fun e!92287 () Bool)

(assert (=> d!44569 e!92287))

(declare-fun res!67568 () Bool)

(assert (=> d!44569 (=> res!67568 e!92287)))

(declare-fun lt!74203 () Bool)

(assert (=> d!44569 (= res!67568 (not lt!74203))))

(declare-fun lt!74201 () Bool)

(assert (=> d!44569 (= lt!74203 lt!74201)))

(declare-fun lt!74202 () Unit!4373)

(declare-fun e!92288 () Unit!4373)

(assert (=> d!44569 (= lt!74202 e!92288)))

(declare-fun c!26670 () Bool)

(assert (=> d!44569 (= c!26670 lt!74201)))

(assert (=> d!44569 (= lt!74201 (containsKey!180 (toList!888 lt!73378) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44569 (= (contains!923 lt!73378 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74203)))

(declare-fun b!141609 () Bool)

(declare-fun lt!74204 () Unit!4373)

(assert (=> b!141609 (= e!92288 lt!74204)))

(assert (=> b!141609 (= lt!74204 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73378) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141609 (isDefined!129 (getValueByKey!176 (toList!888 lt!73378) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141610 () Bool)

(declare-fun Unit!4472 () Unit!4373)

(assert (=> b!141610 (= e!92288 Unit!4472)))

(declare-fun b!141611 () Bool)

(assert (=> b!141611 (= e!92287 (isDefined!129 (getValueByKey!176 (toList!888 lt!73378) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44569 c!26670) b!141609))

(assert (= (and d!44569 (not c!26670)) b!141610))

(assert (= (and d!44569 (not res!67568)) b!141611))

(declare-fun m!169951 () Bool)

(assert (=> d!44569 m!169951))

(declare-fun m!169953 () Bool)

(assert (=> b!141609 m!169953))

(declare-fun m!169955 () Bool)

(assert (=> b!141609 m!169955))

(assert (=> b!141609 m!169955))

(declare-fun m!169957 () Bool)

(assert (=> b!141609 m!169957))

(assert (=> b!141611 m!169955))

(assert (=> b!141611 m!169955))

(assert (=> b!141611 m!169957))

(assert (=> bm!15555 d!44569))

(declare-fun lt!74205 () Bool)

(declare-fun d!44571 () Bool)

(assert (=> d!44571 (= lt!74205 (select (content!138 (toList!888 lt!73557)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92290 () Bool)

(assert (=> d!44571 (= lt!74205 e!92290)))

(declare-fun res!67569 () Bool)

(assert (=> d!44571 (=> (not res!67569) (not e!92290))))

(assert (=> d!44571 (= res!67569 ((_ is Cons!1741) (toList!888 lt!73557)))))

(assert (=> d!44571 (= (contains!925 (toList!888 lt!73557) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74205)))

(declare-fun b!141612 () Bool)

(declare-fun e!92289 () Bool)

(assert (=> b!141612 (= e!92290 e!92289)))

(declare-fun res!67570 () Bool)

(assert (=> b!141612 (=> res!67570 e!92289)))

(assert (=> b!141612 (= res!67570 (= (h!2348 (toList!888 lt!73557)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141613 () Bool)

(assert (=> b!141613 (= e!92289 (contains!925 (t!6329 (toList!888 lt!73557)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44571 res!67569) b!141612))

(assert (= (and b!141612 (not res!67570)) b!141613))

(declare-fun m!169959 () Bool)

(assert (=> d!44571 m!169959))

(declare-fun m!169961 () Bool)

(assert (=> d!44571 m!169961))

(declare-fun m!169963 () Bool)

(assert (=> b!141613 m!169963))

(assert (=> b!140335 d!44571))

(assert (=> b!140700 d!43479))

(declare-fun d!44573 () Bool)

(declare-fun res!67571 () Bool)

(declare-fun e!92291 () Bool)

(assert (=> d!44573 (=> res!67571 e!92291)))

(assert (=> d!44573 (= res!67571 (and ((_ is Cons!1741) lt!73024) (= (_1!1360 (h!2348 lt!73024)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44573 (= (containsKey!180 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92291)))

(declare-fun b!141614 () Bool)

(declare-fun e!92292 () Bool)

(assert (=> b!141614 (= e!92291 e!92292)))

(declare-fun res!67572 () Bool)

(assert (=> b!141614 (=> (not res!67572) (not e!92292))))

(assert (=> b!141614 (= res!67572 (and (or (not ((_ is Cons!1741) lt!73024)) (bvsle (_1!1360 (h!2348 lt!73024)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73024) (bvslt (_1!1360 (h!2348 lt!73024)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141615 () Bool)

(assert (=> b!141615 (= e!92292 (containsKey!180 (t!6329 lt!73024) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44573 (not res!67571)) b!141614))

(assert (= (and b!141614 res!67572) b!141615))

(declare-fun m!169965 () Bool)

(assert (=> b!141615 m!169965))

(assert (=> b!139970 d!44573))

(declare-fun d!44575 () Bool)

(assert (=> d!44575 (= (apply!120 lt!73487 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5939 () Bool)

(assert (= bs!5939 d!44575))

(declare-fun m!169967 () Bool)

(assert (=> bs!5939 m!169967))

(assert (=> bs!5939 m!169967))

(declare-fun m!169969 () Bool)

(assert (=> bs!5939 m!169969))

(assert (=> b!140221 d!44575))

(declare-fun d!44577 () Bool)

(assert (=> d!44577 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))

(declare-fun lt!74206 () Unit!4373)

(assert (=> d!44577 (= lt!74206 (choose!864 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))

(declare-fun e!92293 () Bool)

(assert (=> d!44577 e!92293))

(declare-fun res!67573 () Bool)

(assert (=> d!44577 (=> (not res!67573) (not e!92293))))

(assert (=> d!44577 (= res!67573 (isStrictlySorted!325 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44577 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328) lt!74206)))

(declare-fun b!141616 () Bool)

(assert (=> b!141616 (= e!92293 (containsKey!180 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328))))

(assert (= (and d!44577 res!67573) b!141616))

(assert (=> d!44577 m!167413))

(assert (=> d!44577 m!167413))

(assert (=> d!44577 m!167415))

(declare-fun m!169971 () Bool)

(assert (=> d!44577 m!169971))

(declare-fun m!169973 () Bool)

(assert (=> d!44577 m!169973))

(assert (=> b!141616 m!167409))

(assert (=> b!140253 d!44577))

(assert (=> b!140253 d!44445))

(assert (=> b!140253 d!44447))

(declare-fun b!141620 () Bool)

(declare-fun e!92295 () Option!182)

(assert (=> b!141620 (= e!92295 None!180)))

(declare-fun b!141617 () Bool)

(declare-fun e!92294 () Option!182)

(assert (=> b!141617 (= e!92294 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73059))))))))

(declare-fun b!141618 () Bool)

(assert (=> b!141618 (= e!92294 e!92295)))

(declare-fun c!26672 () Bool)

(assert (=> b!141618 (= c!26672 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73059))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73059)))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!44579 () Bool)

(declare-fun c!26671 () Bool)

(assert (=> d!44579 (= c!26671 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73059))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73059)))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44579 (= (getValueByKey!176 (t!6329 (toList!888 lt!73059)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92294)))

(declare-fun b!141619 () Bool)

(assert (=> b!141619 (= e!92295 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73059))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44579 c!26671) b!141617))

(assert (= (and d!44579 (not c!26671)) b!141618))

(assert (= (and b!141618 c!26672) b!141619))

(assert (= (and b!141618 (not c!26672)) b!141620))

(declare-fun m!169975 () Bool)

(assert (=> b!141619 m!169975))

(assert (=> b!140517 d!44579))

(declare-fun d!44581 () Bool)

(declare-fun lt!74207 () Bool)

(assert (=> d!44581 (= lt!74207 (select (content!138 (toList!888 lt!73466)) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92297 () Bool)

(assert (=> d!44581 (= lt!74207 e!92297)))

(declare-fun res!67574 () Bool)

(assert (=> d!44581 (=> (not res!67574) (not e!92297))))

(assert (=> d!44581 (= res!67574 ((_ is Cons!1741) (toList!888 lt!73466)))))

(assert (=> d!44581 (= (contains!925 (toList!888 lt!73466) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74207)))

(declare-fun b!141621 () Bool)

(declare-fun e!92296 () Bool)

(assert (=> b!141621 (= e!92297 e!92296)))

(declare-fun res!67575 () Bool)

(assert (=> b!141621 (=> res!67575 e!92296)))

(assert (=> b!141621 (= res!67575 (= (h!2348 (toList!888 lt!73466)) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141622 () Bool)

(assert (=> b!141622 (= e!92296 (contains!925 (t!6329 (toList!888 lt!73466)) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44581 res!67574) b!141621))

(assert (= (and b!141621 (not res!67575)) b!141622))

(declare-fun m!169977 () Bool)

(assert (=> d!44581 m!169977))

(declare-fun m!169979 () Bool)

(assert (=> d!44581 m!169979))

(declare-fun m!169981 () Bool)

(assert (=> b!141622 m!169981))

(assert (=> b!140210 d!44581))

(declare-fun d!44583 () Bool)

(assert (=> d!44583 (= ($colon$colon!94 e!91514 (ite c!26286 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))) (Cons!1741 (ite c!26286 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) (tuple2!2699 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) e!91514))))

(assert (=> bm!15583 d!44583))

(declare-fun d!44585 () Bool)

(declare-fun e!92298 () Bool)

(assert (=> d!44585 e!92298))

(declare-fun res!67576 () Bool)

(assert (=> d!44585 (=> res!67576 e!92298)))

(declare-fun lt!74210 () Bool)

(assert (=> d!44585 (= res!67576 (not lt!74210))))

(declare-fun lt!74208 () Bool)

(assert (=> d!44585 (= lt!74210 lt!74208)))

(declare-fun lt!74209 () Unit!4373)

(declare-fun e!92299 () Unit!4373)

(assert (=> d!44585 (= lt!74209 e!92299)))

(declare-fun c!26673 () Bool)

(assert (=> d!44585 (= c!26673 lt!74208)))

(assert (=> d!44585 (= lt!74208 (containsKey!180 (toList!888 lt!73680) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44585 (= (contains!923 lt!73680 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74210)))

(declare-fun b!141623 () Bool)

(declare-fun lt!74211 () Unit!4373)

(assert (=> b!141623 (= e!92299 lt!74211)))

(assert (=> b!141623 (= lt!74211 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73680) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141623 (isDefined!129 (getValueByKey!176 (toList!888 lt!73680) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141624 () Bool)

(declare-fun Unit!4473 () Unit!4373)

(assert (=> b!141624 (= e!92299 Unit!4473)))

(declare-fun b!141625 () Bool)

(assert (=> b!141625 (= e!92298 (isDefined!129 (getValueByKey!176 (toList!888 lt!73680) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44585 c!26673) b!141623))

(assert (= (and d!44585 (not c!26673)) b!141624))

(assert (= (and d!44585 (not res!67576)) b!141625))

(assert (=> d!44585 m!166385))

(declare-fun m!169983 () Bool)

(assert (=> d!44585 m!169983))

(assert (=> b!141623 m!166385))

(declare-fun m!169985 () Bool)

(assert (=> b!141623 m!169985))

(assert (=> b!141623 m!166385))

(assert (=> b!141623 m!169469))

(assert (=> b!141623 m!169469))

(declare-fun m!169987 () Bool)

(assert (=> b!141623 m!169987))

(assert (=> b!141625 m!166385))

(assert (=> b!141625 m!169469))

(assert (=> b!141625 m!169469))

(assert (=> b!141625 m!169987))

(assert (=> b!140486 d!44585))

(declare-fun d!44587 () Bool)

(assert (=> d!44587 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!73145)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!73145)))))

(assert (=> d!43497 d!44587))

(declare-fun b!141629 () Bool)

(declare-fun e!92301 () Option!182)

(assert (=> b!141629 (= e!92301 None!180)))

(declare-fun b!141626 () Bool)

(declare-fun e!92300 () Option!182)

(assert (=> b!141626 (= e!92300 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))))

(declare-fun b!141627 () Bool)

(assert (=> b!141627 (= e!92300 e!92301)))

(declare-fun c!26675 () Bool)

(assert (=> b!141627 (= c!26675 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))) lt!73145))))))

(declare-fun c!26674 () Bool)

(declare-fun d!44589 () Bool)

(assert (=> d!44589 (= c!26674 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))) lt!73145)))))

(assert (=> d!44589 (= (getValueByKey!176 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) lt!73145) e!92300)))

(declare-fun b!141628 () Bool)

(assert (=> b!141628 (= e!92301 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73140 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))) lt!73145))))

(assert (= (and d!44589 c!26674) b!141626))

(assert (= (and d!44589 (not c!26674)) b!141627))

(assert (= (and b!141627 c!26675) b!141628))

(assert (= (and b!141627 (not c!26675)) b!141629))

(declare-fun m!169989 () Bool)

(assert (=> b!141628 m!169989))

(assert (=> d!43497 d!44589))

(declare-fun b!141630 () Bool)

(declare-fun lt!74218 () Unit!4373)

(declare-fun lt!74214 () Unit!4373)

(assert (=> b!141630 (= lt!74218 lt!74214)))

(declare-fun lt!74212 () (_ BitVec 64))

(declare-fun lt!74217 () ListLongMap!1745)

(declare-fun lt!74216 () (_ BitVec 64))

(declare-fun lt!74213 () V!3555)

(assert (=> b!141630 (not (contains!923 (+!179 lt!74217 (tuple2!2699 lt!74216 lt!74213)) lt!74212))))

(assert (=> b!141630 (= lt!74214 (addStillNotContains!64 lt!74217 lt!74216 lt!74213 lt!74212))))

(assert (=> b!141630 (= lt!74212 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141630 (= lt!74213 (get!1528 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141630 (= lt!74216 (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))

(declare-fun call!15706 () ListLongMap!1745)

(assert (=> b!141630 (= lt!74217 call!15706)))

(declare-fun e!92302 () ListLongMap!1745)

(assert (=> b!141630 (= e!92302 (+!179 call!15706 (tuple2!2699 (select (arr!2315 lt!73240) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141632 () Bool)

(declare-fun e!92304 () ListLongMap!1745)

(assert (=> b!141632 (= e!92304 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141633 () Bool)

(declare-fun e!92308 () Bool)

(declare-fun e!92303 () Bool)

(assert (=> b!141633 (= e!92308 e!92303)))

(assert (=> b!141633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(declare-fun res!67580 () Bool)

(declare-fun lt!74215 () ListLongMap!1745)

(assert (=> b!141633 (= res!67580 (contains!923 lt!74215 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(assert (=> b!141633 (=> (not res!67580) (not e!92303))))

(declare-fun b!141634 () Bool)

(declare-fun res!67577 () Bool)

(declare-fun e!92307 () Bool)

(assert (=> b!141634 (=> (not res!67577) (not e!92307))))

(assert (=> b!141634 (= res!67577 (not (contains!923 lt!74215 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141635 () Bool)

(declare-fun e!92305 () Bool)

(assert (=> b!141635 (= e!92308 e!92305)))

(declare-fun c!26678 () Bool)

(assert (=> b!141635 (= c!26678 (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(declare-fun b!141636 () Bool)

(assert (=> b!141636 (= e!92304 e!92302)))

(declare-fun c!26679 () Bool)

(assert (=> b!141636 (= c!26679 (validKeyInArray!0 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(declare-fun b!141637 () Bool)

(declare-fun e!92306 () Bool)

(assert (=> b!141637 (= e!92306 (validKeyInArray!0 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(assert (=> b!141637 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15703 () Bool)

(assert (=> bm!15703 (= call!15706 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141638 () Bool)

(assert (=> b!141638 (= e!92305 (= lt!74215 (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141639 () Bool)

(assert (=> b!141639 (= e!92307 e!92308)))

(declare-fun c!26676 () Bool)

(assert (=> b!141639 (= c!26676 e!92306)))

(declare-fun res!67579 () Bool)

(assert (=> b!141639 (=> (not res!67579) (not e!92306))))

(assert (=> b!141639 (= res!67579 (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(declare-fun d!44591 () Bool)

(assert (=> d!44591 e!92307))

(declare-fun res!67578 () Bool)

(assert (=> d!44591 (=> (not res!67578) (not e!92307))))

(assert (=> d!44591 (= res!67578 (not (contains!923 lt!74215 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44591 (= lt!74215 e!92304)))

(declare-fun c!26677 () Bool)

(assert (=> d!44591 (= c!26677 (bvsge #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(assert (=> d!44591 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44591 (= (getCurrentListMapNoExtraKeys!145 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74215)))

(declare-fun b!141631 () Bool)

(assert (=> b!141631 (= e!92305 (isEmpty!417 lt!74215))))

(declare-fun b!141640 () Bool)

(assert (=> b!141640 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73240)))))

(assert (=> b!141640 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 lt!73236)))))

(assert (=> b!141640 (= e!92303 (= (apply!120 lt!74215 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141641 () Bool)

(assert (=> b!141641 (= e!92302 call!15706)))

(assert (= (and d!44591 c!26677) b!141632))

(assert (= (and d!44591 (not c!26677)) b!141636))

(assert (= (and b!141636 c!26679) b!141630))

(assert (= (and b!141636 (not c!26679)) b!141641))

(assert (= (or b!141630 b!141641) bm!15703))

(assert (= (and d!44591 res!67578) b!141634))

(assert (= (and b!141634 res!67577) b!141639))

(assert (= (and b!141639 res!67579) b!141637))

(assert (= (and b!141639 c!26676) b!141633))

(assert (= (and b!141639 (not c!26676)) b!141635))

(assert (= (and b!141633 res!67580) b!141640))

(assert (= (and b!141635 c!26678) b!141638))

(assert (= (and b!141635 (not c!26678)) b!141631))

(declare-fun b_lambda!6345 () Bool)

(assert (=> (not b_lambda!6345) (not b!141630)))

(assert (=> b!141630 t!6337))

(declare-fun b_and!8847 () Bool)

(assert (= b_and!8843 (and (=> t!6337 result!4191) b_and!8847)))

(assert (=> b!141630 t!6339))

(declare-fun b_and!8849 () Bool)

(assert (= b_and!8845 (and (=> t!6339 result!4193) b_and!8849)))

(declare-fun b_lambda!6347 () Bool)

(assert (=> (not b_lambda!6347) (not b!141640)))

(assert (=> b!141640 t!6337))

(declare-fun b_and!8851 () Bool)

(assert (= b_and!8847 (and (=> t!6337 result!4191) b_and!8851)))

(assert (=> b!141640 t!6339))

(declare-fun b_and!8853 () Bool)

(assert (= b_and!8849 (and (=> t!6339 result!4193) b_and!8853)))

(declare-fun m!169991 () Bool)

(assert (=> b!141634 m!169991))

(assert (=> b!141636 m!167755))

(assert (=> b!141636 m!167755))

(assert (=> b!141636 m!167773))

(declare-fun m!169993 () Bool)

(assert (=> d!44591 m!169993))

(assert (=> d!44591 m!166429))

(assert (=> b!141630 m!166443))

(declare-fun m!169995 () Bool)

(assert (=> b!141630 m!169995))

(declare-fun m!169997 () Bool)

(assert (=> b!141630 m!169997))

(assert (=> b!141630 m!169995))

(assert (=> b!141630 m!167783))

(declare-fun m!169999 () Bool)

(assert (=> b!141630 m!169999))

(assert (=> b!141630 m!167783))

(assert (=> b!141630 m!166443))

(assert (=> b!141630 m!167785))

(declare-fun m!170001 () Bool)

(assert (=> b!141630 m!170001))

(assert (=> b!141630 m!167755))

(assert (=> b!141637 m!167755))

(assert (=> b!141637 m!167755))

(assert (=> b!141637 m!167773))

(declare-fun m!170003 () Bool)

(assert (=> bm!15703 m!170003))

(declare-fun m!170005 () Bool)

(assert (=> b!141631 m!170005))

(assert (=> b!141640 m!166443))

(assert (=> b!141640 m!167755))

(declare-fun m!170007 () Bool)

(assert (=> b!141640 m!170007))

(assert (=> b!141640 m!167783))

(assert (=> b!141640 m!167783))

(assert (=> b!141640 m!166443))

(assert (=> b!141640 m!167785))

(assert (=> b!141640 m!167755))

(assert (=> b!141633 m!167755))

(assert (=> b!141633 m!167755))

(declare-fun m!170009 () Bool)

(assert (=> b!141633 m!170009))

(assert (=> b!141638 m!170003))

(assert (=> bm!15590 d!44591))

(declare-fun d!44593 () Bool)

(assert (=> d!44593 (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) lt!73245 lt!73258)))

(assert (=> d!44593 true))

(declare-fun _$65!65 () Unit!4373)

(assert (=> d!44593 (= (choose!41 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) lt!73245 lt!73258) _$65!65)))

(declare-fun bs!5940 () Bool)

(assert (= bs!5940 d!44593))

(assert (=> bs!5940 m!166671))

(assert (=> bs!5940 m!166645))

(assert (=> d!43717 d!44593))

(assert (=> b!140384 d!44509))

(declare-fun d!44595 () Bool)

(declare-fun e!92309 () Bool)

(assert (=> d!44595 e!92309))

(declare-fun res!67581 () Bool)

(assert (=> d!44595 (=> (not res!67581) (not e!92309))))

(declare-fun lt!74222 () ListLongMap!1745)

(assert (=> d!44595 (= res!67581 (contains!923 lt!74222 (_1!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun lt!74219 () List!1745)

(assert (=> d!44595 (= lt!74222 (ListLongMap!1746 lt!74219))))

(declare-fun lt!74220 () Unit!4373)

(declare-fun lt!74221 () Unit!4373)

(assert (=> d!44595 (= lt!74220 lt!74221)))

(assert (=> d!44595 (= (getValueByKey!176 lt!74219 (_1!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))) (Some!181 (_2!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(assert (=> d!44595 (= lt!74221 (lemmaContainsTupThenGetReturnValue!90 lt!74219 (_1!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (_2!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(assert (=> d!44595 (= lt!74219 (insertStrictlySorted!93 (toList!888 (ite c!26318 call!15615 (ite c!26320 call!15613 call!15618))) (_1!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (_2!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(assert (=> d!44595 (= (+!179 (ite c!26318 call!15615 (ite c!26320 call!15613 call!15618)) (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!74222)))

(declare-fun b!141642 () Bool)

(declare-fun res!67582 () Bool)

(assert (=> b!141642 (=> (not res!67582) (not e!92309))))

(assert (=> b!141642 (= res!67582 (= (getValueByKey!176 (toList!888 lt!74222) (_1!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))) (Some!181 (_2!1360 (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))))

(declare-fun b!141643 () Bool)

(assert (=> b!141643 (= e!92309 (contains!925 (toList!888 lt!74222) (ite (or c!26318 c!26320) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (= (and d!44595 res!67581) b!141642))

(assert (= (and b!141642 res!67582) b!141643))

(declare-fun m!170011 () Bool)

(assert (=> d!44595 m!170011))

(declare-fun m!170013 () Bool)

(assert (=> d!44595 m!170013))

(declare-fun m!170015 () Bool)

(assert (=> d!44595 m!170015))

(declare-fun m!170017 () Bool)

(assert (=> d!44595 m!170017))

(declare-fun m!170019 () Bool)

(assert (=> b!141642 m!170019))

(declare-fun m!170021 () Bool)

(assert (=> b!141643 m!170021))

(assert (=> bm!15614 d!44595))

(assert (=> b!140671 d!44511))

(declare-fun b!141647 () Bool)

(declare-fun e!92311 () Option!182)

(assert (=> b!141647 (= e!92311 None!180)))

(declare-fun b!141644 () Bool)

(declare-fun e!92310 () Option!182)

(assert (=> b!141644 (= e!92310 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73020)))))))

(declare-fun b!141645 () Bool)

(assert (=> b!141645 (= e!92310 e!92311)))

(declare-fun c!26681 () Bool)

(assert (=> b!141645 (= c!26681 (and ((_ is Cons!1741) (t!6329 lt!73020)) (not (= (_1!1360 (h!2348 (t!6329 lt!73020))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!44597 () Bool)

(declare-fun c!26680 () Bool)

(assert (=> d!44597 (= c!26680 (and ((_ is Cons!1741) (t!6329 lt!73020)) (= (_1!1360 (h!2348 (t!6329 lt!73020))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44597 (= (getValueByKey!176 (t!6329 lt!73020) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92310)))

(declare-fun b!141646 () Bool)

(assert (=> b!141646 (= e!92311 (getValueByKey!176 (t!6329 (t!6329 lt!73020)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44597 c!26680) b!141644))

(assert (= (and d!44597 (not c!26680)) b!141645))

(assert (= (and b!141645 c!26681) b!141646))

(assert (= (and b!141645 (not c!26681)) b!141647))

(declare-fun m!170023 () Bool)

(assert (=> b!141646 m!170023))

(assert (=> b!140767 d!44597))

(declare-fun d!44599 () Bool)

(assert (=> d!44599 (isDefined!129 (getValueByKey!176 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!74223 () Unit!4373)

(assert (=> d!44599 (= lt!74223 (choose!864 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!92312 () Bool)

(assert (=> d!44599 e!92312))

(declare-fun res!67583 () Bool)

(assert (=> d!44599 (=> (not res!67583) (not e!92312))))

(assert (=> d!44599 (= res!67583 (isStrictlySorted!325 (toList!888 lt!73023)))))

(assert (=> d!44599 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74223)))

(declare-fun b!141648 () Bool)

(assert (=> b!141648 (= e!92312 (containsKey!180 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44599 res!67583) b!141648))

(assert (=> d!44599 m!166265))

(assert (=> d!44599 m!166265))

(assert (=> d!44599 m!168571))

(declare-fun m!170025 () Bool)

(assert (=> d!44599 m!170025))

(declare-fun m!170027 () Bool)

(assert (=> d!44599 m!170027))

(assert (=> b!141648 m!168567))

(assert (=> b!140762 d!44599))

(assert (=> b!140762 d!44343))

(assert (=> b!140762 d!43885))

(declare-fun d!44601 () Bool)

(declare-fun c!26682 () Bool)

(assert (=> d!44601 (= c!26682 ((_ is Nil!1742) (toList!888 lt!73027)))))

(declare-fun e!92313 () (InoxSet tuple2!2698))

(assert (=> d!44601 (= (content!138 (toList!888 lt!73027)) e!92313)))

(declare-fun b!141649 () Bool)

(assert (=> b!141649 (= e!92313 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!141650 () Bool)

(assert (=> b!141650 (= e!92313 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73027)) true) (content!138 (t!6329 (toList!888 lt!73027)))))))

(assert (= (and d!44601 c!26682) b!141649))

(assert (= (and d!44601 (not c!26682)) b!141650))

(declare-fun m!170029 () Bool)

(assert (=> b!141650 m!170029))

(declare-fun m!170031 () Bool)

(assert (=> b!141650 m!170031))

(assert (=> d!43557 d!44601))

(assert (=> b!140471 d!43479))

(declare-fun d!44603 () Bool)

(declare-fun lt!74224 () Bool)

(assert (=> d!44603 (= lt!74224 (select (content!138 (toList!888 lt!73831)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun e!92315 () Bool)

(assert (=> d!44603 (= lt!74224 e!92315)))

(declare-fun res!67584 () Bool)

(assert (=> d!44603 (=> (not res!67584) (not e!92315))))

(assert (=> d!44603 (= res!67584 ((_ is Cons!1741) (toList!888 lt!73831)))))

(assert (=> d!44603 (= (contains!925 (toList!888 lt!73831) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74224)))

(declare-fun b!141651 () Bool)

(declare-fun e!92314 () Bool)

(assert (=> b!141651 (= e!92315 e!92314)))

(declare-fun res!67585 () Bool)

(assert (=> b!141651 (=> res!67585 e!92314)))

(assert (=> b!141651 (= res!67585 (= (h!2348 (toList!888 lt!73831)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!141652 () Bool)

(assert (=> b!141652 (= e!92314 (contains!925 (t!6329 (toList!888 lt!73831)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!44603 res!67584) b!141651))

(assert (= (and b!141651 (not res!67585)) b!141652))

(declare-fun m!170033 () Bool)

(assert (=> d!44603 m!170033))

(declare-fun m!170035 () Bool)

(assert (=> d!44603 m!170035))

(declare-fun m!170037 () Bool)

(assert (=> b!141652 m!170037))

(assert (=> b!140723 d!44603))

(declare-fun d!44605 () Bool)

(declare-fun res!67586 () Bool)

(declare-fun e!92316 () Bool)

(assert (=> d!44605 (=> res!67586 e!92316)))

(assert (=> d!44605 (= res!67586 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44605 (= (containsKey!180 (t!6329 (toList!888 lt!72907)) #b0000000000000000000000000000000000000000000000000000000000000000) e!92316)))

(declare-fun b!141653 () Bool)

(declare-fun e!92317 () Bool)

(assert (=> b!141653 (= e!92316 e!92317)))

(declare-fun res!67587 () Bool)

(assert (=> b!141653 (=> (not res!67587) (not e!92317))))

(assert (=> b!141653 (= res!67587 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 lt!72907)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141654 () Bool)

(assert (=> b!141654 (= e!92317 (containsKey!180 (t!6329 (t!6329 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44605 (not res!67586)) b!141653))

(assert (= (and b!141653 res!67587) b!141654))

(declare-fun m!170039 () Bool)

(assert (=> b!141654 m!170039))

(assert (=> b!140839 d!44605))

(assert (=> b!140574 d!44331))

(declare-fun d!44607 () Bool)

(assert (=> d!44607 (= (isEmpty!417 lt!73550) (isEmpty!419 (toList!888 lt!73550)))))

(declare-fun bs!5941 () Bool)

(assert (= bs!5941 d!44607))

(declare-fun m!170041 () Bool)

(assert (=> bs!5941 m!170041))

(assert (=> b!140323 d!44607))

(declare-fun b!141655 () Bool)

(declare-fun lt!74231 () Unit!4373)

(declare-fun lt!74227 () Unit!4373)

(assert (=> b!141655 (= lt!74231 lt!74227)))

(declare-fun lt!74226 () V!3555)

(declare-fun lt!74230 () ListLongMap!1745)

(declare-fun lt!74229 () (_ BitVec 64))

(declare-fun lt!74225 () (_ BitVec 64))

(assert (=> b!141655 (not (contains!923 (+!179 lt!74230 (tuple2!2699 lt!74229 lt!74226)) lt!74225))))

(assert (=> b!141655 (= lt!74227 (addStillNotContains!64 lt!74230 lt!74229 lt!74226 lt!74225))))

(assert (=> b!141655 (= lt!74225 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141655 (= lt!74226 (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141655 (= lt!74229 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))

(declare-fun call!15707 () ListLongMap!1745)

(assert (=> b!141655 (= lt!74230 call!15707)))

(declare-fun e!92318 () ListLongMap!1745)

(assert (=> b!141655 (= e!92318 (+!179 call!15707 (tuple2!2699 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141657 () Bool)

(declare-fun e!92320 () ListLongMap!1745)

(assert (=> b!141657 (= e!92320 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141658 () Bool)

(declare-fun e!92324 () Bool)

(declare-fun e!92319 () Bool)

(assert (=> b!141658 (= e!92324 e!92319)))

(assert (=> b!141658 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun lt!74228 () ListLongMap!1745)

(declare-fun res!67591 () Bool)

(assert (=> b!141658 (= res!67591 (contains!923 lt!74228 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(assert (=> b!141658 (=> (not res!67591) (not e!92319))))

(declare-fun b!141659 () Bool)

(declare-fun res!67588 () Bool)

(declare-fun e!92323 () Bool)

(assert (=> b!141659 (=> (not res!67588) (not e!92323))))

(assert (=> b!141659 (= res!67588 (not (contains!923 lt!74228 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141660 () Bool)

(declare-fun e!92321 () Bool)

(assert (=> b!141660 (= e!92324 e!92321)))

(declare-fun c!26685 () Bool)

(assert (=> b!141660 (= c!26685 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun b!141661 () Bool)

(assert (=> b!141661 (= e!92320 e!92318)))

(declare-fun c!26686 () Bool)

(assert (=> b!141661 (= c!26686 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(declare-fun e!92322 () Bool)

(declare-fun b!141662 () Bool)

(assert (=> b!141662 (= e!92322 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(assert (=> b!141662 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15704 () Bool)

(assert (=> bm!15704 (= call!15707 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))

(declare-fun b!141663 () Bool)

(assert (=> b!141663 (= e!92321 (= lt!74228 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun b!141664 () Bool)

(assert (=> b!141664 (= e!92323 e!92324)))

(declare-fun c!26683 () Bool)

(assert (=> b!141664 (= c!26683 e!92322)))

(declare-fun res!67590 () Bool)

(assert (=> b!141664 (=> (not res!67590) (not e!92322))))

(assert (=> b!141664 (= res!67590 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(declare-fun d!44609 () Bool)

(assert (=> d!44609 e!92323))

(declare-fun res!67589 () Bool)

(assert (=> d!44609 (=> (not res!67589) (not e!92323))))

(assert (=> d!44609 (= res!67589 (not (contains!923 lt!74228 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44609 (= lt!74228 e!92320)))

(declare-fun c!26684 () Bool)

(assert (=> d!44609 (= c!26684 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (=> d!44609 (validMask!0 (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))

(assert (=> d!44609 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (mask!7280 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (extraKeys!2695 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b00000000000000000000000000000000 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) lt!74228)))

(declare-fun b!141656 () Bool)

(assert (=> b!141656 (= e!92321 (isEmpty!417 lt!74228))))

(declare-fun b!141665 () Bool)

(assert (=> b!141665 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (=> b!141665 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (=> b!141665 (= e!92319 (= (apply!120 lt!74228 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141666 () Bool)

(assert (=> b!141666 (= e!92318 call!15707)))

(assert (= (and d!44609 c!26684) b!141657))

(assert (= (and d!44609 (not c!26684)) b!141661))

(assert (= (and b!141661 c!26686) b!141655))

(assert (= (and b!141661 (not c!26686)) b!141666))

(assert (= (or b!141655 b!141666) bm!15704))

(assert (= (and d!44609 res!67589) b!141659))

(assert (= (and b!141659 res!67588) b!141664))

(assert (= (and b!141664 res!67590) b!141662))

(assert (= (and b!141664 c!26683) b!141658))

(assert (= (and b!141664 (not c!26683)) b!141660))

(assert (= (and b!141658 res!67591) b!141665))

(assert (= (and b!141660 c!26685) b!141663))

(assert (= (and b!141660 (not c!26685)) b!141656))

(declare-fun b_lambda!6349 () Bool)

(assert (=> (not b_lambda!6349) (not b!141655)))

(assert (=> b!141655 t!6341))

(declare-fun b_and!8855 () Bool)

(assert (= b_and!8851 (and (=> t!6341 result!4195) b_and!8855)))

(assert (=> b!141655 t!6343))

(declare-fun b_and!8857 () Bool)

(assert (= b_and!8853 (and (=> t!6343 result!4197) b_and!8857)))

(declare-fun b_lambda!6351 () Bool)

(assert (=> (not b_lambda!6351) (not b!141665)))

(assert (=> b!141665 t!6341))

(declare-fun b_and!8859 () Bool)

(assert (= b_and!8855 (and (=> t!6341 result!4195) b_and!8859)))

(assert (=> b!141665 t!6343))

(declare-fun b_and!8861 () Bool)

(assert (= b_and!8857 (and (=> t!6343 result!4197) b_and!8861)))

(declare-fun m!170043 () Bool)

(assert (=> b!141659 m!170043))

(assert (=> b!141661 m!166951))

(assert (=> b!141661 m!166951))

(assert (=> b!141661 m!166971))

(declare-fun m!170045 () Bool)

(assert (=> d!44609 m!170045))

(assert (=> d!44609 m!166967))

(assert (=> b!141655 m!166983))

(declare-fun m!170047 () Bool)

(assert (=> b!141655 m!170047))

(declare-fun m!170049 () Bool)

(assert (=> b!141655 m!170049))

(assert (=> b!141655 m!170047))

(assert (=> b!141655 m!166981))

(declare-fun m!170051 () Bool)

(assert (=> b!141655 m!170051))

(assert (=> b!141655 m!166981))

(assert (=> b!141655 m!166983))

(assert (=> b!141655 m!166985))

(declare-fun m!170053 () Bool)

(assert (=> b!141655 m!170053))

(assert (=> b!141655 m!166951))

(assert (=> b!141662 m!166951))

(assert (=> b!141662 m!166951))

(assert (=> b!141662 m!166971))

(declare-fun m!170055 () Bool)

(assert (=> bm!15704 m!170055))

(declare-fun m!170057 () Bool)

(assert (=> b!141656 m!170057))

(assert (=> b!141665 m!166983))

(assert (=> b!141665 m!166951))

(declare-fun m!170059 () Bool)

(assert (=> b!141665 m!170059))

(assert (=> b!141665 m!166981))

(assert (=> b!141665 m!166981))

(assert (=> b!141665 m!166983))

(assert (=> b!141665 m!166985))

(assert (=> b!141665 m!166951))

(assert (=> b!141658 m!166951))

(assert (=> b!141658 m!166951))

(declare-fun m!170061 () Bool)

(assert (=> b!141658 m!170061))

(assert (=> b!141663 m!170055))

(assert (=> bm!15553 d!44609))

(declare-fun lt!74232 () Bool)

(declare-fun d!44611 () Bool)

(assert (=> d!44611 (= lt!74232 (select (content!138 (toList!888 lt!73740)) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92326 () Bool)

(assert (=> d!44611 (= lt!74232 e!92326)))

(declare-fun res!67592 () Bool)

(assert (=> d!44611 (=> (not res!67592) (not e!92326))))

(assert (=> d!44611 (= res!67592 ((_ is Cons!1741) (toList!888 lt!73740)))))

(assert (=> d!44611 (= (contains!925 (toList!888 lt!73740) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74232)))

(declare-fun b!141667 () Bool)

(declare-fun e!92325 () Bool)

(assert (=> b!141667 (= e!92326 e!92325)))

(declare-fun res!67593 () Bool)

(assert (=> b!141667 (=> res!67593 e!92325)))

(assert (=> b!141667 (= res!67593 (= (h!2348 (toList!888 lt!73740)) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141668 () Bool)

(assert (=> b!141668 (= e!92325 (contains!925 (t!6329 (toList!888 lt!73740)) (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!44611 res!67592) b!141667))

(assert (= (and b!141667 (not res!67593)) b!141668))

(declare-fun m!170063 () Bool)

(assert (=> d!44611 m!170063))

(declare-fun m!170065 () Bool)

(assert (=> d!44611 m!170065))

(declare-fun m!170067 () Bool)

(assert (=> b!141668 m!170067))

(assert (=> b!140597 d!44611))

(declare-fun b!141669 () Bool)

(declare-fun e!92327 () List!1745)

(declare-fun call!15710 () List!1745)

(assert (=> b!141669 (= e!92327 call!15710)))

(declare-fun bm!15705 () Bool)

(declare-fun call!15708 () List!1745)

(assert (=> bm!15705 (= call!15710 call!15708)))

(declare-fun d!44613 () Bool)

(declare-fun e!92331 () Bool)

(assert (=> d!44613 e!92331))

(declare-fun res!67594 () Bool)

(assert (=> d!44613 (=> (not res!67594) (not e!92331))))

(declare-fun lt!74233 () List!1745)

(assert (=> d!44613 (= res!67594 (isStrictlySorted!325 lt!74233))))

(declare-fun e!92328 () List!1745)

(assert (=> d!44613 (= lt!74233 e!92328)))

(declare-fun c!26689 () Bool)

(assert (=> d!44613 (= c!26689 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72889))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72889)))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44613 (isStrictlySorted!325 (t!6329 (toList!888 lt!72889)))))

(assert (=> d!44613 (= (insertStrictlySorted!93 (t!6329 (toList!888 lt!72889)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74233)))

(declare-fun bm!15706 () Bool)

(declare-fun call!15709 () List!1745)

(assert (=> bm!15706 (= call!15708 call!15709)))

(declare-fun b!141670 () Bool)

(declare-fun e!92329 () List!1745)

(assert (=> b!141670 (= e!92328 e!92329)))

(declare-fun c!26688 () Bool)

(assert (=> b!141670 (= c!26688 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72889))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72889)))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141671 () Bool)

(assert (=> b!141671 (= e!92328 call!15709)))

(declare-fun e!92330 () List!1745)

(declare-fun bm!15707 () Bool)

(assert (=> bm!15707 (= call!15709 ($colon$colon!94 e!92330 (ite c!26689 (h!2348 (t!6329 (toList!888 lt!72889))) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26687 () Bool)

(assert (=> bm!15707 (= c!26687 c!26689)))

(declare-fun b!141672 () Bool)

(declare-fun c!26690 () Bool)

(assert (=> b!141672 (= e!92330 (ite c!26688 (t!6329 (t!6329 (toList!888 lt!72889))) (ite c!26690 (Cons!1741 (h!2348 (t!6329 (toList!888 lt!72889))) (t!6329 (t!6329 (toList!888 lt!72889)))) Nil!1742)))))

(declare-fun b!141673 () Bool)

(assert (=> b!141673 (= e!92329 call!15708)))

(declare-fun b!141674 () Bool)

(assert (=> b!141674 (= e!92331 (contains!925 lt!74233 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141675 () Bool)

(assert (=> b!141675 (= e!92330 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 lt!72889))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!141676 () Bool)

(assert (=> b!141676 (= e!92327 call!15710)))

(declare-fun b!141677 () Bool)

(assert (=> b!141677 (= c!26690 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72889))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72889)))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!141677 (= e!92329 e!92327)))

(declare-fun b!141678 () Bool)

(declare-fun res!67595 () Bool)

(assert (=> b!141678 (=> (not res!67595) (not e!92331))))

(assert (=> b!141678 (= res!67595 (containsKey!180 lt!74233 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44613 c!26689) b!141671))

(assert (= (and d!44613 (not c!26689)) b!141670))

(assert (= (and b!141670 c!26688) b!141673))

(assert (= (and b!141670 (not c!26688)) b!141677))

(assert (= (and b!141677 c!26690) b!141676))

(assert (= (and b!141677 (not c!26690)) b!141669))

(assert (= (or b!141676 b!141669) bm!15705))

(assert (= (or b!141673 bm!15705) bm!15706))

(assert (= (or b!141671 bm!15706) bm!15707))

(assert (= (and bm!15707 c!26687) b!141675))

(assert (= (and bm!15707 (not c!26687)) b!141672))

(assert (= (and d!44613 res!67594) b!141678))

(assert (= (and b!141678 res!67595) b!141674))

(declare-fun m!170069 () Bool)

(assert (=> b!141675 m!170069))

(declare-fun m!170071 () Bool)

(assert (=> d!44613 m!170071))

(declare-fun m!170073 () Bool)

(assert (=> d!44613 m!170073))

(declare-fun m!170075 () Bool)

(assert (=> b!141678 m!170075))

(declare-fun m!170077 () Bool)

(assert (=> bm!15707 m!170077))

(declare-fun m!170079 () Bool)

(assert (=> b!141674 m!170079))

(assert (=> b!139998 d!44613))

(declare-fun d!44615 () Bool)

(declare-fun lt!74234 () Bool)

(assert (=> d!44615 (= lt!74234 (select (content!138 (toList!888 lt!73492)) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92333 () Bool)

(assert (=> d!44615 (= lt!74234 e!92333)))

(declare-fun res!67596 () Bool)

(assert (=> d!44615 (=> (not res!67596) (not e!92333))))

(assert (=> d!44615 (= res!67596 ((_ is Cons!1741) (toList!888 lt!73492)))))

(assert (=> d!44615 (= (contains!925 (toList!888 lt!73492) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74234)))

(declare-fun b!141679 () Bool)

(declare-fun e!92332 () Bool)

(assert (=> b!141679 (= e!92333 e!92332)))

(declare-fun res!67597 () Bool)

(assert (=> b!141679 (=> res!67597 e!92332)))

(assert (=> b!141679 (= res!67597 (= (h!2348 (toList!888 lt!73492)) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141680 () Bool)

(assert (=> b!141680 (= e!92332 (contains!925 (t!6329 (toList!888 lt!73492)) (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44615 res!67596) b!141679))

(assert (= (and b!141679 (not res!67597)) b!141680))

(declare-fun m!170081 () Bool)

(assert (=> d!44615 m!170081))

(declare-fun m!170083 () Bool)

(assert (=> d!44615 m!170083))

(declare-fun m!170085 () Bool)

(assert (=> b!141680 m!170085))

(assert (=> b!140233 d!44615))

(assert (=> d!43689 d!43687))

(declare-fun d!44617 () Bool)

(assert (=> d!44617 (= (getValueByKey!176 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (Some!181 (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44617 true))

(declare-fun _$22!496 () Unit!4373)

(assert (=> d!44617 (= (choose!865 lt!73282 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (_2!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) _$22!496)))

(declare-fun bs!5942 () Bool)

(assert (= bs!5942 d!44617))

(assert (=> bs!5942 m!166729))

(assert (=> d!43689 d!44617))

(declare-fun d!44619 () Bool)

(declare-fun res!67598 () Bool)

(declare-fun e!92334 () Bool)

(assert (=> d!44619 (=> res!67598 e!92334)))

(assert (=> d!44619 (= res!67598 (or ((_ is Nil!1742) lt!73282) ((_ is Nil!1742) (t!6329 lt!73282))))))

(assert (=> d!44619 (= (isStrictlySorted!325 lt!73282) e!92334)))

(declare-fun b!141681 () Bool)

(declare-fun e!92335 () Bool)

(assert (=> b!141681 (= e!92334 e!92335)))

(declare-fun res!67599 () Bool)

(assert (=> b!141681 (=> (not res!67599) (not e!92335))))

(assert (=> b!141681 (= res!67599 (bvslt (_1!1360 (h!2348 lt!73282)) (_1!1360 (h!2348 (t!6329 lt!73282)))))))

(declare-fun b!141682 () Bool)

(assert (=> b!141682 (= e!92335 (isStrictlySorted!325 (t!6329 lt!73282)))))

(assert (= (and d!44619 (not res!67598)) b!141681))

(assert (= (and b!141681 res!67599) b!141682))

(declare-fun m!170087 () Bool)

(assert (=> b!141682 m!170087))

(assert (=> d!43689 d!44619))

(declare-fun d!44621 () Bool)

(assert (=> d!44621 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74235 () Unit!4373)

(assert (=> d!44621 (= lt!74235 (choose!864 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92336 () Bool)

(assert (=> d!44621 e!92336))

(declare-fun res!67600 () Bool)

(assert (=> d!44621 (=> (not res!67600) (not e!92336))))

(assert (=> d!44621 (= res!67600 (isStrictlySorted!325 (toList!888 lt!73093)))))

(assert (=> d!44621 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74235)))

(declare-fun b!141683 () Bool)

(assert (=> b!141683 (= e!92336 (containsKey!180 (toList!888 lt!73093) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44621 res!67600) b!141683))

(assert (=> d!44621 m!167677))

(assert (=> d!44621 m!167677))

(assert (=> d!44621 m!167679))

(declare-fun m!170089 () Bool)

(assert (=> d!44621 m!170089))

(assert (=> d!44621 m!168933))

(assert (=> b!141683 m!167673))

(assert (=> b!140366 d!44621))

(assert (=> b!140366 d!44471))

(assert (=> b!140366 d!44013))

(assert (=> b!140092 d!43479))

(declare-fun b!141684 () Bool)

(declare-fun lt!74242 () Unit!4373)

(declare-fun lt!74238 () Unit!4373)

(assert (=> b!141684 (= lt!74242 lt!74238)))

(declare-fun lt!74241 () ListLongMap!1745)

(declare-fun lt!74236 () (_ BitVec 64))

(declare-fun lt!74240 () (_ BitVec 64))

(declare-fun lt!74237 () V!3555)

(assert (=> b!141684 (not (contains!923 (+!179 lt!74241 (tuple2!2699 lt!74240 lt!74237)) lt!74236))))

(assert (=> b!141684 (= lt!74238 (addStillNotContains!64 lt!74241 lt!74240 lt!74237 lt!74236))))

(assert (=> b!141684 (= lt!74236 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141684 (= lt!74237 (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141684 (= lt!74240 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun call!15711 () ListLongMap!1745)

(assert (=> b!141684 (= lt!74241 call!15711)))

(declare-fun e!92337 () ListLongMap!1745)

(assert (=> b!141684 (= e!92337 (+!179 call!15711 (tuple2!2699 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141686 () Bool)

(declare-fun e!92339 () ListLongMap!1745)

(assert (=> b!141686 (= e!92339 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141687 () Bool)

(declare-fun e!92343 () Bool)

(declare-fun e!92338 () Bool)

(assert (=> b!141687 (= e!92343 e!92338)))

(assert (=> b!141687 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun lt!74239 () ListLongMap!1745)

(declare-fun res!67604 () Bool)

(assert (=> b!141687 (= res!67604 (contains!923 lt!74239 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141687 (=> (not res!67604) (not e!92338))))

(declare-fun b!141688 () Bool)

(declare-fun res!67601 () Bool)

(declare-fun e!92342 () Bool)

(assert (=> b!141688 (=> (not res!67601) (not e!92342))))

(assert (=> b!141688 (= res!67601 (not (contains!923 lt!74239 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141689 () Bool)

(declare-fun e!92340 () Bool)

(assert (=> b!141689 (= e!92343 e!92340)))

(declare-fun c!26693 () Bool)

(assert (=> b!141689 (= c!26693 (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun b!141690 () Bool)

(assert (=> b!141690 (= e!92339 e!92337)))

(declare-fun c!26694 () Bool)

(assert (=> b!141690 (= c!26694 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!92341 () Bool)

(declare-fun b!141691 () Bool)

(assert (=> b!141691 (= e!92341 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141691 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15708 () Bool)

(assert (=> bm!15708 (= call!15711 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141692 () Bool)

(assert (=> b!141692 (= e!92340 (= lt!74239 (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141693 () Bool)

(assert (=> b!141693 (= e!92342 e!92343)))

(declare-fun c!26691 () Bool)

(assert (=> b!141693 (= c!26691 e!92341)))

(declare-fun res!67603 () Bool)

(assert (=> b!141693 (=> (not res!67603) (not e!92341))))

(assert (=> b!141693 (= res!67603 (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(declare-fun d!44623 () Bool)

(assert (=> d!44623 e!92342))

(declare-fun res!67602 () Bool)

(assert (=> d!44623 (=> (not res!67602) (not e!92342))))

(assert (=> d!44623 (= res!67602 (not (contains!923 lt!74239 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44623 (= lt!74239 e!92339)))

(declare-fun c!26692 () Bool)

(assert (=> d!44623 (= c!26692 (bvsge #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!44623 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44623 (= (getCurrentListMapNoExtraKeys!145 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74239)))

(declare-fun b!141685 () Bool)

(assert (=> b!141685 (= e!92340 (isEmpty!417 lt!74239))))

(declare-fun b!141694 () Bool)

(assert (=> b!141694 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> b!141694 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))))))))

(assert (=> b!141694 (= e!92338 (= (apply!120 lt!74239 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141695 () Bool)

(assert (=> b!141695 (= e!92337 call!15711)))

(assert (= (and d!44623 c!26692) b!141686))

(assert (= (and d!44623 (not c!26692)) b!141690))

(assert (= (and b!141690 c!26694) b!141684))

(assert (= (and b!141690 (not c!26694)) b!141695))

(assert (= (or b!141684 b!141695) bm!15708))

(assert (= (and d!44623 res!67602) b!141688))

(assert (= (and b!141688 res!67601) b!141693))

(assert (= (and b!141693 res!67603) b!141691))

(assert (= (and b!141693 c!26691) b!141687))

(assert (= (and b!141693 (not c!26691)) b!141689))

(assert (= (and b!141687 res!67604) b!141694))

(assert (= (and b!141689 c!26693) b!141692))

(assert (= (and b!141689 (not c!26693)) b!141685))

(declare-fun b_lambda!6353 () Bool)

(assert (=> (not b_lambda!6353) (not b!141684)))

(assert (=> b!141684 t!6337))

(declare-fun b_and!8863 () Bool)

(assert (= b_and!8859 (and (=> t!6337 result!4191) b_and!8863)))

(assert (=> b!141684 t!6339))

(declare-fun b_and!8865 () Bool)

(assert (= b_and!8861 (and (=> t!6339 result!4193) b_and!8865)))

(declare-fun b_lambda!6355 () Bool)

(assert (=> (not b_lambda!6355) (not b!141694)))

(assert (=> b!141694 t!6337))

(declare-fun b_and!8867 () Bool)

(assert (= b_and!8863 (and (=> t!6337 result!4191) b_and!8867)))

(assert (=> b!141694 t!6339))

(declare-fun b_and!8869 () Bool)

(assert (= b_and!8865 (and (=> t!6339 result!4193) b_and!8869)))

(declare-fun m!170091 () Bool)

(assert (=> b!141688 m!170091))

(assert (=> b!141690 m!167709))

(assert (=> b!141690 m!167709))

(assert (=> b!141690 m!167711))

(declare-fun m!170093 () Bool)

(assert (=> d!44623 m!170093))

(assert (=> d!44623 m!166429))

(assert (=> b!141684 m!166443))

(declare-fun m!170095 () Bool)

(assert (=> b!141684 m!170095))

(declare-fun m!170097 () Bool)

(assert (=> b!141684 m!170097))

(assert (=> b!141684 m!170095))

(assert (=> b!141684 m!167859))

(declare-fun m!170099 () Bool)

(assert (=> b!141684 m!170099))

(assert (=> b!141684 m!167859))

(assert (=> b!141684 m!166443))

(assert (=> b!141684 m!167861))

(declare-fun m!170101 () Bool)

(assert (=> b!141684 m!170101))

(assert (=> b!141684 m!167709))

(assert (=> b!141691 m!167709))

(assert (=> b!141691 m!167709))

(assert (=> b!141691 m!167711))

(declare-fun m!170103 () Bool)

(assert (=> bm!15708 m!170103))

(declare-fun m!170105 () Bool)

(assert (=> b!141685 m!170105))

(assert (=> b!141694 m!166443))

(assert (=> b!141694 m!167709))

(declare-fun m!170107 () Bool)

(assert (=> b!141694 m!170107))

(assert (=> b!141694 m!167859))

(assert (=> b!141694 m!167859))

(assert (=> b!141694 m!166443))

(assert (=> b!141694 m!167861))

(assert (=> b!141694 m!167709))

(assert (=> b!141687 m!167709))

(assert (=> b!141687 m!167709))

(declare-fun m!170109 () Bool)

(assert (=> b!141687 m!170109))

(assert (=> b!141692 m!170103))

(assert (=> bm!15598 d!44623))

(declare-fun d!44625 () Bool)

(declare-fun e!92344 () Bool)

(assert (=> d!44625 e!92344))

(declare-fun res!67605 () Bool)

(assert (=> d!44625 (=> (not res!67605) (not e!92344))))

(declare-fun lt!74246 () ListLongMap!1745)

(assert (=> d!44625 (= res!67605 (contains!923 lt!74246 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74243 () List!1745)

(assert (=> d!44625 (= lt!74246 (ListLongMap!1746 lt!74243))))

(declare-fun lt!74244 () Unit!4373)

(declare-fun lt!74245 () Unit!4373)

(assert (=> d!44625 (= lt!74244 lt!74245)))

(assert (=> d!44625 (= (getValueByKey!176 lt!74243 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44625 (= lt!74245 (lemmaContainsTupThenGetReturnValue!90 lt!74243 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44625 (= lt!74243 (insertStrictlySorted!93 (toList!888 call!15620) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44625 (= (+!179 call!15620 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74246)))

(declare-fun b!141696 () Bool)

(declare-fun res!67606 () Bool)

(assert (=> b!141696 (=> (not res!67606) (not e!92344))))

(assert (=> b!141696 (= res!67606 (= (getValueByKey!176 (toList!888 lt!74246) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141697 () Bool)

(assert (=> b!141697 (= e!92344 (contains!925 (toList!888 lt!74246) (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44625 res!67605) b!141696))

(assert (= (and b!141696 res!67606) b!141697))

(declare-fun m!170111 () Bool)

(assert (=> d!44625 m!170111))

(declare-fun m!170113 () Bool)

(assert (=> d!44625 m!170113))

(declare-fun m!170115 () Bool)

(assert (=> d!44625 m!170115))

(declare-fun m!170117 () Bool)

(assert (=> d!44625 m!170117))

(declare-fun m!170119 () Bool)

(assert (=> b!141696 m!170119))

(declare-fun m!170121 () Bool)

(assert (=> b!141697 m!170121))

(assert (=> b!140577 d!44625))

(declare-fun d!44627 () Bool)

(assert (=> d!44627 (not (contains!923 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727)) lt!73726))))

(declare-fun lt!74247 () Unit!4373)

(assert (=> d!44627 (= lt!74247 (choose!866 lt!73731 lt!73730 lt!73727 lt!73726))))

(declare-fun e!92345 () Bool)

(assert (=> d!44627 e!92345))

(declare-fun res!67607 () Bool)

(assert (=> d!44627 (=> (not res!67607) (not e!92345))))

(assert (=> d!44627 (= res!67607 (not (contains!923 lt!73731 lt!73726)))))

(assert (=> d!44627 (= (addStillNotContains!64 lt!73731 lt!73730 lt!73727 lt!73726) lt!74247)))

(declare-fun b!141698 () Bool)

(assert (=> b!141698 (= e!92345 (not (= lt!73730 lt!73726)))))

(assert (= (and d!44627 res!67607) b!141698))

(assert (=> d!44627 m!168059))

(assert (=> d!44627 m!168059))

(assert (=> d!44627 m!168061))

(declare-fun m!170123 () Bool)

(assert (=> d!44627 m!170123))

(declare-fun m!170125 () Bool)

(assert (=> d!44627 m!170125))

(assert (=> b!140577 d!44627))

(assert (=> b!140577 d!43893))

(declare-fun d!44629 () Bool)

(declare-fun e!92346 () Bool)

(assert (=> d!44629 e!92346))

(declare-fun res!67608 () Bool)

(assert (=> d!44629 (=> res!67608 e!92346)))

(declare-fun lt!74250 () Bool)

(assert (=> d!44629 (= res!67608 (not lt!74250))))

(declare-fun lt!74248 () Bool)

(assert (=> d!44629 (= lt!74250 lt!74248)))

(declare-fun lt!74249 () Unit!4373)

(declare-fun e!92347 () Unit!4373)

(assert (=> d!44629 (= lt!74249 e!92347)))

(declare-fun c!26695 () Bool)

(assert (=> d!44629 (= c!26695 lt!74248)))

(assert (=> d!44629 (= lt!74248 (containsKey!180 (toList!888 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727))) lt!73726))))

(assert (=> d!44629 (= (contains!923 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727)) lt!73726) lt!74250)))

(declare-fun b!141699 () Bool)

(declare-fun lt!74251 () Unit!4373)

(assert (=> b!141699 (= e!92347 lt!74251)))

(assert (=> b!141699 (= lt!74251 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727))) lt!73726))))

(assert (=> b!141699 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727))) lt!73726))))

(declare-fun b!141700 () Bool)

(declare-fun Unit!4474 () Unit!4373)

(assert (=> b!141700 (= e!92347 Unit!4474)))

(declare-fun b!141701 () Bool)

(assert (=> b!141701 (= e!92346 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727))) lt!73726)))))

(assert (= (and d!44629 c!26695) b!141699))

(assert (= (and d!44629 (not c!26695)) b!141700))

(assert (= (and d!44629 (not res!67608)) b!141701))

(declare-fun m!170127 () Bool)

(assert (=> d!44629 m!170127))

(declare-fun m!170129 () Bool)

(assert (=> b!141699 m!170129))

(declare-fun m!170131 () Bool)

(assert (=> b!141699 m!170131))

(assert (=> b!141699 m!170131))

(declare-fun m!170133 () Bool)

(assert (=> b!141699 m!170133))

(assert (=> b!141701 m!170131))

(assert (=> b!141701 m!170131))

(assert (=> b!141701 m!170133))

(assert (=> b!140577 d!44629))

(declare-fun d!44631 () Bool)

(declare-fun e!92348 () Bool)

(assert (=> d!44631 e!92348))

(declare-fun res!67609 () Bool)

(assert (=> d!44631 (=> (not res!67609) (not e!92348))))

(declare-fun lt!74255 () ListLongMap!1745)

(assert (=> d!44631 (= res!67609 (contains!923 lt!74255 (_1!1360 (tuple2!2699 lt!73730 lt!73727))))))

(declare-fun lt!74252 () List!1745)

(assert (=> d!44631 (= lt!74255 (ListLongMap!1746 lt!74252))))

(declare-fun lt!74253 () Unit!4373)

(declare-fun lt!74254 () Unit!4373)

(assert (=> d!44631 (= lt!74253 lt!74254)))

(assert (=> d!44631 (= (getValueByKey!176 lt!74252 (_1!1360 (tuple2!2699 lt!73730 lt!73727))) (Some!181 (_2!1360 (tuple2!2699 lt!73730 lt!73727))))))

(assert (=> d!44631 (= lt!74254 (lemmaContainsTupThenGetReturnValue!90 lt!74252 (_1!1360 (tuple2!2699 lt!73730 lt!73727)) (_2!1360 (tuple2!2699 lt!73730 lt!73727))))))

(assert (=> d!44631 (= lt!74252 (insertStrictlySorted!93 (toList!888 lt!73731) (_1!1360 (tuple2!2699 lt!73730 lt!73727)) (_2!1360 (tuple2!2699 lt!73730 lt!73727))))))

(assert (=> d!44631 (= (+!179 lt!73731 (tuple2!2699 lt!73730 lt!73727)) lt!74255)))

(declare-fun b!141702 () Bool)

(declare-fun res!67610 () Bool)

(assert (=> b!141702 (=> (not res!67610) (not e!92348))))

(assert (=> b!141702 (= res!67610 (= (getValueByKey!176 (toList!888 lt!74255) (_1!1360 (tuple2!2699 lt!73730 lt!73727))) (Some!181 (_2!1360 (tuple2!2699 lt!73730 lt!73727)))))))

(declare-fun b!141703 () Bool)

(assert (=> b!141703 (= e!92348 (contains!925 (toList!888 lt!74255) (tuple2!2699 lt!73730 lt!73727)))))

(assert (= (and d!44631 res!67609) b!141702))

(assert (= (and b!141702 res!67610) b!141703))

(declare-fun m!170135 () Bool)

(assert (=> d!44631 m!170135))

(declare-fun m!170137 () Bool)

(assert (=> d!44631 m!170137))

(declare-fun m!170139 () Bool)

(assert (=> d!44631 m!170139))

(declare-fun m!170141 () Bool)

(assert (=> d!44631 m!170141))

(declare-fun m!170143 () Bool)

(assert (=> b!141702 m!170143))

(declare-fun m!170145 () Bool)

(assert (=> b!141703 m!170145))

(assert (=> b!140577 d!44631))

(declare-fun d!44633 () Bool)

(declare-fun e!92349 () Bool)

(assert (=> d!44633 e!92349))

(declare-fun res!67611 () Bool)

(assert (=> d!44633 (=> (not res!67611) (not e!92349))))

(declare-fun lt!74259 () ListLongMap!1745)

(assert (=> d!44633 (= res!67611 (contains!923 lt!74259 (_1!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74256 () List!1745)

(assert (=> d!44633 (= lt!74259 (ListLongMap!1746 lt!74256))))

(declare-fun lt!74257 () Unit!4373)

(declare-fun lt!74258 () Unit!4373)

(assert (=> d!44633 (= lt!74257 lt!74258)))

(assert (=> d!44633 (= (getValueByKey!176 lt!74256 (_1!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44633 (= lt!74258 (lemmaContainsTupThenGetReturnValue!90 lt!74256 (_1!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44633 (= lt!74256 (insertStrictlySorted!93 (toList!888 (ite c!26246 call!15573 (ite c!26248 call!15571 call!15576))) (_1!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44633 (= (+!179 (ite c!26246 call!15573 (ite c!26248 call!15571 call!15576)) (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74259)))

(declare-fun b!141704 () Bool)

(declare-fun res!67612 () Bool)

(assert (=> b!141704 (=> (not res!67612) (not e!92349))))

(assert (=> b!141704 (= res!67612 (= (getValueByKey!176 (toList!888 lt!74259) (_1!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141705 () Bool)

(assert (=> b!141705 (= e!92349 (contains!925 (toList!888 lt!74259) (ite (or c!26246 c!26248) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44633 res!67611) b!141704))

(assert (= (and b!141704 res!67612) b!141705))

(declare-fun m!170147 () Bool)

(assert (=> d!44633 m!170147))

(declare-fun m!170149 () Bool)

(assert (=> d!44633 m!170149))

(declare-fun m!170151 () Bool)

(assert (=> d!44633 m!170151))

(declare-fun m!170153 () Bool)

(assert (=> d!44633 m!170153))

(declare-fun m!170155 () Bool)

(assert (=> b!141704 m!170155))

(declare-fun m!170157 () Bool)

(assert (=> b!141705 m!170157))

(assert (=> bm!15572 d!44633))

(declare-fun b!141706 () Bool)

(declare-fun e!92350 () SeekEntryResult!279)

(assert (=> b!141706 (= e!92350 (Intermediate!279 false (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!141707 () Bool)

(declare-fun e!92351 () SeekEntryResult!279)

(assert (=> b!141707 (= e!92351 (Intermediate!279 true (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!141708 () Bool)

(declare-fun lt!74260 () SeekEntryResult!279)

(assert (=> b!141708 (and (bvsge (index!3281 lt!74260) #b00000000000000000000000000000000) (bvslt (index!3281 lt!74260) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67615 () Bool)

(assert (=> b!141708 (= res!67615 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74260)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92353 () Bool)

(assert (=> b!141708 (=> res!67615 e!92353)))

(declare-fun b!141709 () Bool)

(assert (=> b!141709 (and (bvsge (index!3281 lt!74260) #b00000000000000000000000000000000) (bvslt (index!3281 lt!74260) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67613 () Bool)

(assert (=> b!141709 (= res!67613 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74260)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141709 (=> res!67613 e!92353)))

(declare-fun e!92354 () Bool)

(assert (=> b!141709 (= e!92354 e!92353)))

(declare-fun b!141710 () Bool)

(assert (=> b!141710 (and (bvsge (index!3281 lt!74260) #b00000000000000000000000000000000) (bvslt (index!3281 lt!74260) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141710 (= e!92353 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74260)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141711 () Bool)

(assert (=> b!141711 (= e!92350 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!141712 () Bool)

(declare-fun e!92352 () Bool)

(assert (=> b!141712 (= e!92352 e!92354)))

(declare-fun res!67614 () Bool)

(assert (=> b!141712 (= res!67614 (and ((_ is Intermediate!279) lt!74260) (not (undefined!1091 lt!74260)) (bvslt (x!16136 lt!74260) #b01111111111111111111111111111110) (bvsge (x!16136 lt!74260) #b00000000000000000000000000000000) (bvsge (x!16136 lt!74260) #b00000000000000000000000000000000)))))

(assert (=> b!141712 (=> (not res!67614) (not e!92354))))

(declare-fun d!44635 () Bool)

(assert (=> d!44635 e!92352))

(declare-fun c!26697 () Bool)

(assert (=> d!44635 (= c!26697 (and ((_ is Intermediate!279) lt!74260) (undefined!1091 lt!74260)))))

(assert (=> d!44635 (= lt!74260 e!92351)))

(declare-fun c!26698 () Bool)

(assert (=> d!44635 (= c!26698 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!74261 () (_ BitVec 64))

(assert (=> d!44635 (= lt!74261 (select (arr!2315 (_keys!4699 newMap!16)) (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16))))))

(assert (=> d!44635 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44635 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74260)))

(declare-fun b!141713 () Bool)

(assert (=> b!141713 (= e!92352 (bvsge (x!16136 lt!74260) #b01111111111111111111111111111110))))

(declare-fun b!141714 () Bool)

(assert (=> b!141714 (= e!92351 e!92350)))

(declare-fun c!26696 () Bool)

(assert (=> b!141714 (= c!26696 (or (= lt!74261 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!74261 lt!74261) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44635 c!26698) b!141707))

(assert (= (and d!44635 (not c!26698)) b!141714))

(assert (= (and b!141714 c!26696) b!141706))

(assert (= (and b!141714 (not c!26696)) b!141711))

(assert (= (and d!44635 c!26697) b!141713))

(assert (= (and d!44635 (not c!26697)) b!141712))

(assert (= (and b!141712 res!67614) b!141709))

(assert (= (and b!141709 (not res!67613)) b!141708))

(assert (= (and b!141708 (not res!67615)) b!141710))

(declare-fun m!170159 () Bool)

(assert (=> b!141710 m!170159))

(assert (=> b!141711 m!168111))

(declare-fun m!170161 () Bool)

(assert (=> b!141711 m!170161))

(assert (=> b!141711 m!170161))

(assert (=> b!141711 m!166385))

(declare-fun m!170163 () Bool)

(assert (=> b!141711 m!170163))

(assert (=> b!141708 m!170159))

(assert (=> b!141709 m!170159))

(assert (=> d!44635 m!168111))

(declare-fun m!170165 () Bool)

(assert (=> d!44635 m!170165))

(assert (=> d!44635 m!166429))

(assert (=> d!43795 d!44635))

(declare-fun d!44637 () Bool)

(declare-fun lt!74263 () (_ BitVec 32))

(declare-fun lt!74262 () (_ BitVec 32))

(assert (=> d!44637 (= lt!74263 (bvmul (bvxor lt!74262 (bvlshr lt!74262 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!44637 (= lt!74262 ((_ extract 31 0) (bvand (bvxor (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!44637 (and (bvsge (mask!7280 newMap!16) #b00000000000000000000000000000000) (let ((res!67193 (let ((h!2351 ((_ extract 31 0) (bvand (bvxor (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16239 (bvmul (bvxor h!2351 (bvlshr h!2351 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16239 (bvlshr x!16239 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))) (and (bvslt res!67193 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67193 #b00000000000000000000000000000000))))))

(assert (=> d!44637 (= (toIndex!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (bvand (bvxor lt!74263 (bvlshr lt!74263 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))

(assert (=> d!43795 d!44637))

(assert (=> d!43795 d!43527))

(declare-fun d!44639 () Bool)

(assert (=> d!44639 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73299)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73299)))))

(assert (=> d!43817 d!44639))

(declare-fun b!141718 () Bool)

(declare-fun e!92356 () Option!182)

(assert (=> b!141718 (= e!92356 None!180)))

(declare-fun e!92355 () Option!182)

(declare-fun b!141715 () Bool)

(assert (=> b!141715 (= e!92355 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun b!141716 () Bool)

(assert (=> b!141716 (= e!92355 e!92356)))

(declare-fun c!26700 () Bool)

(assert (=> b!141716 (= c!26700 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73299))))))

(declare-fun c!26699 () Bool)

(declare-fun d!44641 () Bool)

(assert (=> d!44641 (= c!26699 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73299)))))

(assert (=> d!44641 (= (getValueByKey!176 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73299) e!92355)))

(declare-fun b!141717 () Bool)

(assert (=> b!141717 (= e!92356 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73299))))

(assert (= (and d!44641 c!26699) b!141715))

(assert (= (and d!44641 (not c!26699)) b!141716))

(assert (= (and b!141716 c!26700) b!141717))

(assert (= (and b!141716 (not c!26700)) b!141718))

(declare-fun m!170167 () Bool)

(assert (=> b!141717 m!170167))

(assert (=> d!43817 d!44641))

(declare-fun d!44643 () Bool)

(assert (=> d!44643 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!74264 () Unit!4373)

(assert (=> d!44643 (= lt!74264 (choose!864 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!92357 () Bool)

(assert (=> d!44643 e!92357))

(declare-fun res!67616 () Bool)

(assert (=> d!44643 (=> (not res!67616) (not e!92357))))

(assert (=> d!44643 (= res!67616 (isStrictlySorted!325 (toList!888 lt!73052)))))

(assert (=> d!44643 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!74264)))

(declare-fun b!141719 () Bool)

(assert (=> b!141719 (= e!92357 (containsKey!180 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44643 res!67616) b!141719))

(assert (=> d!44643 m!166121))

(assert (=> d!44643 m!168541))

(assert (=> d!44643 m!168541))

(assert (=> d!44643 m!168647))

(assert (=> d!44643 m!166121))

(declare-fun m!170169 () Bool)

(assert (=> d!44643 m!170169))

(assert (=> d!44643 m!169081))

(assert (=> b!141719 m!166121))

(assert (=> b!141719 m!168643))

(assert (=> b!140814 d!44643))

(declare-fun d!44645 () Bool)

(assert (=> d!44645 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73052) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5943 () Bool)

(assert (= bs!5943 d!44645))

(assert (=> bs!5943 m!168541))

(declare-fun m!170171 () Bool)

(assert (=> bs!5943 m!170171))

(assert (=> b!140814 d!44645))

(assert (=> b!140814 d!44467))

(declare-fun d!44647 () Bool)

(declare-fun res!67617 () Bool)

(declare-fun e!92358 () Bool)

(assert (=> d!44647 (=> res!67617 e!92358)))

(assert (=> d!44647 (= res!67617 (and ((_ is Cons!1741) (toList!888 lt!73306)) (= (_1!1360 (h!2348 (toList!888 lt!73306))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44647 (= (containsKey!180 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000) e!92358)))

(declare-fun b!141720 () Bool)

(declare-fun e!92359 () Bool)

(assert (=> b!141720 (= e!92358 e!92359)))

(declare-fun res!67618 () Bool)

(assert (=> b!141720 (=> (not res!67618) (not e!92359))))

(assert (=> b!141720 (= res!67618 (and (or (not ((_ is Cons!1741) (toList!888 lt!73306))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73306))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73306)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73306))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141721 () Bool)

(assert (=> b!141721 (= e!92359 (containsKey!180 (t!6329 (toList!888 lt!73306)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44647 (not res!67617)) b!141720))

(assert (= (and b!141720 res!67618) b!141721))

(declare-fun m!170173 () Bool)

(assert (=> b!141721 m!170173))

(assert (=> d!43987 d!44647))

(assert (=> d!43969 d!43659))

(declare-fun d!44649 () Bool)

(assert (=> d!44649 (isDefined!129 (getValueByKey!176 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!74265 () Unit!4373)

(assert (=> d!44649 (= lt!74265 (choose!864 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!92360 () Bool)

(assert (=> d!44649 e!92360))

(declare-fun res!67619 () Bool)

(assert (=> d!44649 (=> (not res!67619) (not e!92360))))

(assert (=> d!44649 (= res!67619 (isStrictlySorted!325 (toList!888 lt!73067)))))

(assert (=> d!44649 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74265)))

(declare-fun b!141722 () Bool)

(assert (=> b!141722 (= e!92360 (containsKey!180 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44649 res!67619) b!141722))

(assert (=> d!44649 m!166365))

(assert (=> d!44649 m!166365))

(assert (=> d!44649 m!167539))

(declare-fun m!170175 () Bool)

(assert (=> d!44649 m!170175))

(declare-fun m!170177 () Bool)

(assert (=> d!44649 m!170177))

(assert (=> b!141722 m!167535))

(assert (=> b!140287 d!44649))

(assert (=> b!140287 d!44521))

(assert (=> b!140287 d!43661))

(declare-fun d!44651 () Bool)

(declare-fun res!67620 () Bool)

(declare-fun e!92361 () Bool)

(assert (=> d!44651 (=> res!67620 e!92361)))

(assert (=> d!44651 (= res!67620 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44651 (= (containsKey!180 (t!6329 (toList!888 lt!72907)) #b1000000000000000000000000000000000000000000000000000000000000000) e!92361)))

(declare-fun b!141723 () Bool)

(declare-fun e!92362 () Bool)

(assert (=> b!141723 (= e!92361 e!92362)))

(declare-fun res!67621 () Bool)

(assert (=> b!141723 (=> (not res!67621) (not e!92362))))

(assert (=> b!141723 (= res!67621 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 lt!72907)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141724 () Bool)

(assert (=> b!141724 (= e!92362 (containsKey!180 (t!6329 (t!6329 (toList!888 lt!72907))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44651 (not res!67620)) b!141723))

(assert (= (and b!141723 res!67621) b!141724))

(declare-fun m!170179 () Bool)

(assert (=> b!141724 m!170179))

(assert (=> b!140695 d!44651))

(declare-fun b!141728 () Bool)

(declare-fun e!92364 () Option!182)

(assert (=> b!141728 (= e!92364 None!180)))

(declare-fun b!141725 () Bool)

(declare-fun e!92363 () Option!182)

(assert (=> b!141725 (= e!92363 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73064)))))))

(declare-fun b!141726 () Bool)

(assert (=> b!141726 (= e!92363 e!92364)))

(declare-fun c!26702 () Bool)

(assert (=> b!141726 (= c!26702 (and ((_ is Cons!1741) (t!6329 lt!73064)) (not (= (_1!1360 (h!2348 (t!6329 lt!73064))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26701 () Bool)

(declare-fun d!44653 () Bool)

(assert (=> d!44653 (= c!26701 (and ((_ is Cons!1741) (t!6329 lt!73064)) (= (_1!1360 (h!2348 (t!6329 lt!73064))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44653 (= (getValueByKey!176 (t!6329 lt!73064) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92363)))

(declare-fun b!141727 () Bool)

(assert (=> b!141727 (= e!92364 (getValueByKey!176 (t!6329 (t!6329 lt!73064)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44653 c!26701) b!141725))

(assert (= (and d!44653 (not c!26701)) b!141726))

(assert (= (and b!141726 c!26702) b!141727))

(assert (= (and b!141726 (not c!26702)) b!141728))

(declare-fun m!170181 () Bool)

(assert (=> b!141727 m!170181))

(assert (=> b!140292 d!44653))

(declare-fun b!141732 () Bool)

(declare-fun e!92366 () Option!182)

(assert (=> b!141732 (= e!92366 None!180)))

(declare-fun b!141729 () Bool)

(declare-fun e!92365 () Option!182)

(assert (=> b!141729 (= e!92365 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73777)))))))

(declare-fun b!141730 () Bool)

(assert (=> b!141730 (= e!92365 e!92366)))

(declare-fun c!26704 () Bool)

(assert (=> b!141730 (= c!26704 (and ((_ is Cons!1741) (toList!888 lt!73777)) (not (= (_1!1360 (h!2348 (toList!888 lt!73777))) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26703 () Bool)

(declare-fun d!44655 () Bool)

(assert (=> d!44655 (= c!26703 (and ((_ is Cons!1741) (toList!888 lt!73777)) (= (_1!1360 (h!2348 (toList!888 lt!73777))) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44655 (= (getValueByKey!176 (toList!888 lt!73777) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) e!92365)))

(declare-fun b!141731 () Bool)

(assert (=> b!141731 (= e!92366 (getValueByKey!176 (t!6329 (toList!888 lt!73777)) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44655 c!26703) b!141729))

(assert (= (and d!44655 (not c!26703)) b!141730))

(assert (= (and b!141730 c!26704) b!141731))

(assert (= (and b!141730 (not c!26704)) b!141732))

(declare-fun m!170183 () Bool)

(assert (=> b!141731 m!170183))

(assert (=> b!140659 d!44655))

(assert (=> b!140218 d!43479))

(declare-fun lt!74266 () Bool)

(declare-fun d!44657 () Bool)

(assert (=> d!44657 (= lt!74266 (select (content!138 lt!73357) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!92368 () Bool)

(assert (=> d!44657 (= lt!74266 e!92368)))

(declare-fun res!67622 () Bool)

(assert (=> d!44657 (=> (not res!67622) (not e!92368))))

(assert (=> d!44657 (= res!67622 ((_ is Cons!1741) lt!73357))))

(assert (=> d!44657 (= (contains!925 lt!73357 (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74266)))

(declare-fun b!141733 () Bool)

(declare-fun e!92367 () Bool)

(assert (=> b!141733 (= e!92368 e!92367)))

(declare-fun res!67623 () Bool)

(assert (=> b!141733 (=> res!67623 e!92367)))

(assert (=> b!141733 (= res!67623 (= (h!2348 lt!73357) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141734 () Bool)

(assert (=> b!141734 (= e!92367 (contains!925 (t!6329 lt!73357) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44657 res!67622) b!141733))

(assert (= (and b!141733 (not res!67623)) b!141734))

(declare-fun m!170185 () Bool)

(assert (=> d!44657 m!170185))

(declare-fun m!170187 () Bool)

(assert (=> d!44657 m!170187))

(declare-fun m!170189 () Bool)

(assert (=> b!141734 m!170189))

(assert (=> b!140022 d!44657))

(declare-fun b!141738 () Bool)

(declare-fun e!92370 () Option!182)

(assert (=> b!141738 (= e!92370 None!180)))

(declare-fun b!141735 () Bool)

(declare-fun e!92369 () Option!182)

(assert (=> b!141735 (= e!92369 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 call!15465))))))))

(declare-fun b!141736 () Bool)

(assert (=> b!141736 (= e!92369 e!92370)))

(declare-fun c!26706 () Bool)

(assert (=> b!141736 (= c!26706 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15465))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15465)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun c!26705 () Bool)

(declare-fun d!44659 () Bool)

(assert (=> d!44659 (= c!26705 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15465))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15465)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!44659 (= (getValueByKey!176 (t!6329 (toList!888 call!15465)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92369)))

(declare-fun b!141737 () Bool)

(assert (=> b!141737 (= e!92370 (getValueByKey!176 (t!6329 (t!6329 (toList!888 call!15465))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!44659 c!26705) b!141735))

(assert (= (and d!44659 (not c!26705)) b!141736))

(assert (= (and b!141736 c!26706) b!141737))

(assert (= (and b!141736 (not c!26706)) b!141738))

(assert (=> b!141737 m!166013))

(declare-fun m!170191 () Bool)

(assert (=> b!141737 m!170191))

(assert (=> b!140054 d!44659))

(declare-fun d!44661 () Bool)

(declare-fun lt!74267 () Bool)

(assert (=> d!44661 (= lt!74267 (select (content!137 lt!73258) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)))))

(declare-fun e!92372 () Bool)

(assert (=> d!44661 (= lt!74267 e!92372)))

(declare-fun res!67624 () Bool)

(assert (=> d!44661 (=> (not res!67624) (not e!92372))))

(assert (=> d!44661 (= res!67624 ((_ is Cons!1742) lt!73258))))

(assert (=> d!44661 (= (contains!924 lt!73258 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)) lt!74267)))

(declare-fun b!141739 () Bool)

(declare-fun e!92371 () Bool)

(assert (=> b!141739 (= e!92372 e!92371)))

(declare-fun res!67625 () Bool)

(assert (=> b!141739 (=> res!67625 e!92371)))

(assert (=> b!141739 (= res!67625 (= (h!2349 lt!73258) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)))))

(declare-fun b!141740 () Bool)

(assert (=> b!141740 (= e!92371 (contains!924 (t!6330 lt!73258) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245)))))

(assert (= (and d!44661 res!67624) b!141739))

(assert (= (and b!141739 (not res!67625)) b!141740))

(declare-fun m!170193 () Bool)

(assert (=> d!44661 m!170193))

(assert (=> d!44661 m!167713))

(declare-fun m!170195 () Bool)

(assert (=> d!44661 m!170195))

(assert (=> b!141740 m!167713))

(declare-fun m!170197 () Bool)

(assert (=> b!141740 m!170197))

(assert (=> b!140381 d!44661))

(declare-fun lt!74268 () Bool)

(declare-fun d!44663 () Bool)

(assert (=> d!44663 (= lt!74268 (select (content!137 (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!92374 () Bool)

(assert (=> d!44663 (= lt!74268 e!92374)))

(declare-fun res!67626 () Bool)

(assert (=> d!44663 (=> (not res!67626) (not e!92374))))

(assert (=> d!44663 (= res!67626 ((_ is Cons!1742) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))))))

(assert (=> d!44663 (= (contains!924 (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!74268)))

(declare-fun b!141741 () Bool)

(declare-fun e!92373 () Bool)

(assert (=> b!141741 (= e!92374 e!92373)))

(declare-fun res!67627 () Bool)

(assert (=> b!141741 (=> res!67627 e!92373)))

(assert (=> b!141741 (= res!67627 (= (h!2349 (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141742 () Bool)

(assert (=> b!141742 (= e!92373 (contains!924 (t!6330 (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!44663 res!67626) b!141741))

(assert (= (and b!141741 (not res!67627)) b!141742))

(declare-fun m!170199 () Bool)

(assert (=> d!44663 m!170199))

(assert (=> d!44663 m!168291))

(declare-fun m!170201 () Bool)

(assert (=> d!44663 m!170201))

(assert (=> b!141742 m!168291))

(declare-fun m!170203 () Bool)

(assert (=> b!141742 m!170203))

(assert (=> b!140668 d!44663))

(declare-fun d!44665 () Bool)

(assert (=> d!44665 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5944 () Bool)

(assert (= bs!5944 d!44665))

(assert (=> bs!5944 m!168025))

(declare-fun m!170205 () Bool)

(assert (=> bs!5944 m!170205))

(assert (=> b!140541 d!44665))

(assert (=> b!140541 d!44267))

(declare-fun d!44667 () Bool)

(assert (=> d!44667 (= (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) (not (isEmpty!418 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(declare-fun bs!5945 () Bool)

(assert (= bs!5945 d!44667))

(assert (=> bs!5945 m!167877))

(declare-fun m!170207 () Bool)

(assert (=> bs!5945 m!170207))

(assert (=> b!140468 d!44667))

(declare-fun b!141746 () Bool)

(declare-fun e!92376 () Option!182)

(assert (=> b!141746 (= e!92376 None!180)))

(declare-fun b!141743 () Bool)

(declare-fun e!92375 () Option!182)

(assert (=> b!141743 (= e!92375 (Some!181 (_2!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))))

(declare-fun b!141744 () Bool)

(assert (=> b!141744 (= e!92375 e!92376)))

(declare-fun c!26708 () Bool)

(assert (=> b!141744 (= c!26708 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (not (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(declare-fun d!44669 () Bool)

(declare-fun c!26707 () Bool)

(assert (=> d!44669 (= c!26707 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (=> d!44669 (= (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))) e!92375)))

(declare-fun b!141745 () Bool)

(assert (=> b!141745 (= e!92376 (getValueByKey!176 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(assert (= (and d!44669 c!26707) b!141743))

(assert (= (and d!44669 (not c!26707)) b!141744))

(assert (= (and b!141744 c!26708) b!141745))

(assert (= (and b!141744 (not c!26708)) b!141746))

(assert (=> b!141745 m!166199))

(declare-fun m!170209 () Bool)

(assert (=> b!141745 m!170209))

(assert (=> b!140468 d!44669))

(assert (=> d!43791 d!43793))

(declare-fun d!44671 () Bool)

(assert (=> d!44671 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000)))

(assert (=> d!44671 true))

(declare-fun _$60!369 () Unit!4373)

(assert (=> d!44671 (= (choose!13 (_keys!4699 newMap!16) lt!73273 #b00000000000000000000000000000000) _$60!369)))

(declare-fun bs!5946 () Bool)

(assert (= bs!5946 d!44671))

(assert (=> bs!5946 m!166697))

(assert (=> d!43791 d!44671))

(declare-fun d!44673 () Bool)

(declare-fun e!92377 () Bool)

(assert (=> d!44673 e!92377))

(declare-fun res!67628 () Bool)

(assert (=> d!44673 (=> res!67628 e!92377)))

(declare-fun lt!74271 () Bool)

(assert (=> d!44673 (= res!67628 (not lt!74271))))

(declare-fun lt!74269 () Bool)

(assert (=> d!44673 (= lt!74271 lt!74269)))

(declare-fun lt!74270 () Unit!4373)

(declare-fun e!92378 () Unit!4373)

(assert (=> d!44673 (= lt!74270 e!92378)))

(declare-fun c!26709 () Bool)

(assert (=> d!44673 (= c!26709 lt!74269)))

(assert (=> d!44673 (= lt!74269 (containsKey!180 (toList!888 lt!73702) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44673 (= (contains!923 lt!73702 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74271)))

(declare-fun b!141747 () Bool)

(declare-fun lt!74272 () Unit!4373)

(assert (=> b!141747 (= e!92378 lt!74272)))

(assert (=> b!141747 (= lt!74272 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73702) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141747 (isDefined!129 (getValueByKey!176 (toList!888 lt!73702) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141748 () Bool)

(declare-fun Unit!4475 () Unit!4373)

(assert (=> b!141748 (= e!92378 Unit!4475)))

(declare-fun b!141749 () Bool)

(assert (=> b!141749 (= e!92377 (isDefined!129 (getValueByKey!176 (toList!888 lt!73702) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44673 c!26709) b!141747))

(assert (= (and d!44673 (not c!26709)) b!141748))

(assert (= (and d!44673 (not res!67628)) b!141749))

(declare-fun m!170211 () Bool)

(assert (=> d!44673 m!170211))

(declare-fun m!170213 () Bool)

(assert (=> b!141747 m!170213))

(assert (=> b!141747 m!168919))

(assert (=> b!141747 m!168919))

(declare-fun m!170215 () Bool)

(assert (=> b!141747 m!170215))

(assert (=> b!141749 m!168919))

(assert (=> b!141749 m!168919))

(assert (=> b!141749 m!170215))

(assert (=> bm!15609 d!44673))

(declare-fun d!44675 () Bool)

(declare-fun lt!74273 () Bool)

(assert (=> d!44675 (= lt!74273 (select (content!138 lt!73122) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!92380 () Bool)

(assert (=> d!44675 (= lt!74273 e!92380)))

(declare-fun res!67629 () Bool)

(assert (=> d!44675 (=> (not res!67629) (not e!92380))))

(assert (=> d!44675 (= res!67629 ((_ is Cons!1741) lt!73122))))

(assert (=> d!44675 (= (contains!925 lt!73122 (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74273)))

(declare-fun b!141750 () Bool)

(declare-fun e!92379 () Bool)

(assert (=> b!141750 (= e!92380 e!92379)))

(declare-fun res!67630 () Bool)

(assert (=> b!141750 (=> res!67630 e!92379)))

(assert (=> b!141750 (= res!67630 (= (h!2348 lt!73122) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141751 () Bool)

(assert (=> b!141751 (= e!92379 (contains!925 (t!6329 lt!73122) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44675 res!67629) b!141750))

(assert (= (and b!141750 (not res!67630)) b!141751))

(declare-fun m!170217 () Bool)

(assert (=> d!44675 m!170217))

(declare-fun m!170219 () Bool)

(assert (=> d!44675 m!170219))

(declare-fun m!170221 () Bool)

(assert (=> b!141751 m!170221))

(assert (=> b!140016 d!44675))

(declare-fun d!44677 () Bool)

(assert (=> d!44677 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73293)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73293)))))

(assert (=> d!43829 d!44677))

(declare-fun b!141755 () Bool)

(declare-fun e!92382 () Option!182)

(assert (=> b!141755 (= e!92382 None!180)))

(declare-fun b!141752 () Bool)

(declare-fun e!92381 () Option!182)

(assert (=> b!141752 (= e!92381 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun b!141753 () Bool)

(assert (=> b!141753 (= e!92381 e!92382)))

(declare-fun c!26711 () Bool)

(assert (=> b!141753 (= c!26711 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73293))))))

(declare-fun c!26710 () Bool)

(declare-fun d!44679 () Bool)

(assert (=> d!44679 (= c!26710 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73293)))))

(assert (=> d!44679 (= (getValueByKey!176 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73293) e!92381)))

(declare-fun b!141754 () Bool)

(assert (=> b!141754 (= e!92382 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73288 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73293))))

(assert (= (and d!44679 c!26710) b!141752))

(assert (= (and d!44679 (not c!26710)) b!141753))

(assert (= (and b!141753 c!26711) b!141754))

(assert (= (and b!141753 (not c!26711)) b!141755))

(declare-fun m!170223 () Bool)

(assert (=> b!141754 m!170223))

(assert (=> d!43829 d!44679))

(declare-fun d!44681 () Bool)

(declare-fun res!67631 () Bool)

(declare-fun e!92383 () Bool)

(assert (=> d!44681 (=> res!67631 e!92383)))

(assert (=> d!44681 (= res!67631 (and ((_ is Cons!1741) (toList!888 lt!73306)) (= (_1!1360 (h!2348 (toList!888 lt!73306))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44681 (= (containsKey!180 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92383)))

(declare-fun b!141756 () Bool)

(declare-fun e!92384 () Bool)

(assert (=> b!141756 (= e!92383 e!92384)))

(declare-fun res!67632 () Bool)

(assert (=> b!141756 (=> (not res!67632) (not e!92384))))

(assert (=> b!141756 (= res!67632 (and (or (not ((_ is Cons!1741) (toList!888 lt!73306))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73306))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1741) (toList!888 lt!73306)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73306))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!141757 () Bool)

(assert (=> b!141757 (= e!92384 (containsKey!180 (t!6329 (toList!888 lt!73306)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44681 (not res!67631)) b!141756))

(assert (= (and b!141756 res!67632) b!141757))

(assert (=> b!141757 m!166385))

(declare-fun m!170225 () Bool)

(assert (=> b!141757 m!170225))

(assert (=> d!43445 d!44681))

(declare-fun d!44683 () Bool)

(assert (=> d!44683 (= (apply!120 lt!73615 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73615) (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))))

(declare-fun bs!5947 () Bool)

(assert (= bs!5947 d!44683))

(assert (=> bs!5947 m!167755))

(declare-fun m!170227 () Bool)

(assert (=> bs!5947 m!170227))

(assert (=> bs!5947 m!170227))

(declare-fun m!170229 () Bool)

(assert (=> bs!5947 m!170229))

(assert (=> b!140396 d!44683))

(declare-fun d!44685 () Bool)

(declare-fun c!26712 () Bool)

(assert (=> d!44685 (= c!26712 ((_ is ValueCellFull!1122) (select (arr!2316 lt!73236) #b00000000000000000000000000000000)))))

(declare-fun e!92385 () V!3555)

(assert (=> d!44685 (= (get!1528 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92385)))

(declare-fun b!141758 () Bool)

(assert (=> b!141758 (= e!92385 (get!1529 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141759 () Bool)

(assert (=> b!141759 (= e!92385 (get!1530 (select (arr!2316 lt!73236) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44685 c!26712) b!141758))

(assert (= (and d!44685 (not c!26712)) b!141759))

(assert (=> b!141758 m!167783))

(assert (=> b!141758 m!166443))

(declare-fun m!170231 () Bool)

(assert (=> b!141758 m!170231))

(assert (=> b!141759 m!167783))

(assert (=> b!141759 m!166443))

(declare-fun m!170233 () Bool)

(assert (=> b!141759 m!170233))

(assert (=> b!140396 d!44685))

(assert (=> b!140274 d!43479))

(declare-fun d!44687 () Bool)

(assert (=> d!44687 (= ($colon$colon!94 e!91682 (ite c!26355 (h!2348 (toList!888 lt!72905)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (Cons!1741 (ite c!26355 (h!2348 (toList!888 lt!72905)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91682))))

(assert (=> bm!15621 d!44687))

(declare-fun b!141763 () Bool)

(declare-fun e!92387 () Option!182)

(assert (=> b!141763 (= e!92387 None!180)))

(declare-fun b!141760 () Bool)

(declare-fun e!92386 () Option!182)

(assert (=> b!141760 (= e!92386 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73519)))))))

(declare-fun b!141761 () Bool)

(assert (=> b!141761 (= e!92386 e!92387)))

(declare-fun c!26714 () Bool)

(assert (=> b!141761 (= c!26714 (and ((_ is Cons!1741) (toList!888 lt!73519)) (not (= (_1!1360 (h!2348 (toList!888 lt!73519))) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26713 () Bool)

(declare-fun d!44689 () Bool)

(assert (=> d!44689 (= c!26713 (and ((_ is Cons!1741) (toList!888 lt!73519)) (= (_1!1360 (h!2348 (toList!888 lt!73519))) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44689 (= (getValueByKey!176 (toList!888 lt!73519) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) e!92386)))

(declare-fun b!141762 () Bool)

(assert (=> b!141762 (= e!92387 (getValueByKey!176 (t!6329 (toList!888 lt!73519)) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44689 c!26713) b!141760))

(assert (= (and d!44689 (not c!26713)) b!141761))

(assert (= (and b!141761 c!26714) b!141762))

(assert (= (and b!141761 (not c!26714)) b!141763))

(declare-fun m!170235 () Bool)

(assert (=> b!141762 m!170235))

(assert (=> b!140263 d!44689))

(declare-fun d!44691 () Bool)

(declare-fun res!67633 () Bool)

(declare-fun e!92388 () Bool)

(assert (=> d!44691 (=> res!67633 e!92388)))

(assert (=> d!44691 (= res!67633 (and ((_ is Cons!1741) (toList!888 lt!73027)) (= (_1!1360 (h!2348 (toList!888 lt!73027))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!44691 (= (containsKey!180 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92388)))

(declare-fun b!141764 () Bool)

(declare-fun e!92389 () Bool)

(assert (=> b!141764 (= e!92388 e!92389)))

(declare-fun res!67634 () Bool)

(assert (=> b!141764 (=> (not res!67634) (not e!92389))))

(assert (=> b!141764 (= res!67634 (and (or (not ((_ is Cons!1741) (toList!888 lt!73027))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73027))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) (toList!888 lt!73027)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73027))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!141765 () Bool)

(assert (=> b!141765 (= e!92389 (containsKey!180 (t!6329 (toList!888 lt!73027)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44691 (not res!67633)) b!141764))

(assert (= (and b!141764 res!67634) b!141765))

(declare-fun m!170237 () Bool)

(assert (=> b!141765 m!170237))

(assert (=> d!43437 d!44691))

(assert (=> bm!15557 d!44463))

(declare-fun d!44693 () Bool)

(declare-fun res!67635 () Bool)

(declare-fun e!92390 () Bool)

(assert (=> d!44693 (=> res!67635 e!92390)))

(assert (=> d!44693 (= res!67635 (or ((_ is Nil!1742) lt!73758) ((_ is Nil!1742) (t!6329 lt!73758))))))

(assert (=> d!44693 (= (isStrictlySorted!325 lt!73758) e!92390)))

(declare-fun b!141766 () Bool)

(declare-fun e!92391 () Bool)

(assert (=> b!141766 (= e!92390 e!92391)))

(declare-fun res!67636 () Bool)

(assert (=> b!141766 (=> (not res!67636) (not e!92391))))

(assert (=> b!141766 (= res!67636 (bvslt (_1!1360 (h!2348 lt!73758)) (_1!1360 (h!2348 (t!6329 lt!73758)))))))

(declare-fun b!141767 () Bool)

(assert (=> b!141767 (= e!92391 (isStrictlySorted!325 (t!6329 lt!73758)))))

(assert (= (and d!44693 (not res!67635)) b!141766))

(assert (= (and b!141766 res!67636) b!141767))

(declare-fun m!170239 () Bool)

(assert (=> b!141767 m!170239))

(assert (=> d!43813 d!44693))

(declare-fun d!44695 () Bool)

(declare-fun res!67637 () Bool)

(declare-fun e!92392 () Bool)

(assert (=> d!44695 (=> res!67637 e!92392)))

(assert (=> d!44695 (= res!67637 (or ((_ is Nil!1742) (toList!888 lt!72887)) ((_ is Nil!1742) (t!6329 (toList!888 lt!72887)))))))

(assert (=> d!44695 (= (isStrictlySorted!325 (toList!888 lt!72887)) e!92392)))

(declare-fun b!141768 () Bool)

(declare-fun e!92393 () Bool)

(assert (=> b!141768 (= e!92392 e!92393)))

(declare-fun res!67638 () Bool)

(assert (=> b!141768 (=> (not res!67638) (not e!92393))))

(assert (=> b!141768 (= res!67638 (bvslt (_1!1360 (h!2348 (toList!888 lt!72887))) (_1!1360 (h!2348 (t!6329 (toList!888 lt!72887))))))))

(declare-fun b!141769 () Bool)

(assert (=> b!141769 (= e!92393 (isStrictlySorted!325 (t!6329 (toList!888 lt!72887))))))

(assert (= (and d!44695 (not res!67637)) b!141768))

(assert (= (and b!141768 res!67638) b!141769))

(declare-fun m!170241 () Bool)

(assert (=> b!141769 m!170241))

(assert (=> d!43813 d!44695))

(declare-fun d!44697 () Bool)

(declare-fun res!67639 () Bool)

(declare-fun e!92394 () Bool)

(assert (=> d!44697 (=> res!67639 e!92394)))

(assert (=> d!44697 (= res!67639 (and ((_ is Cons!1741) (toList!888 lt!73158)) (= (_1!1360 (h!2348 (toList!888 lt!73158))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44697 (= (containsKey!180 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92394)))

(declare-fun b!141770 () Bool)

(declare-fun e!92395 () Bool)

(assert (=> b!141770 (= e!92394 e!92395)))

(declare-fun res!67640 () Bool)

(assert (=> b!141770 (=> (not res!67640) (not e!92395))))

(assert (=> b!141770 (= res!67640 (and (or (not ((_ is Cons!1741) (toList!888 lt!73158))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73158))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1741) (toList!888 lt!73158)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73158))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!141771 () Bool)

(assert (=> b!141771 (= e!92395 (containsKey!180 (t!6329 (toList!888 lt!73158)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44697 (not res!67639)) b!141770))

(assert (= (and b!141770 res!67640) b!141771))

(assert (=> b!141771 m!166385))

(declare-fun m!170243 () Bool)

(assert (=> b!141771 m!170243))

(assert (=> d!43845 d!44697))

(assert (=> d!43721 d!43727))

(declare-fun d!44699 () Bool)

(assert (=> d!44699 (= (arrayCountValidKeys!0 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (bvadd (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!44699 true))

(declare-fun _$85!15 () Unit!4373)

(assert (=> d!44699 (= (choose!2 lt!73246 (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) _$85!15)))

(declare-fun bs!5948 () Bool)

(assert (= bs!5948 d!44699))

(assert (=> bs!5948 m!166667))

(assert (=> d!43721 d!44699))

(declare-fun d!44701 () Bool)

(assert (=> d!44701 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74274 () Unit!4373)

(assert (=> d!44701 (= lt!74274 (choose!864 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92396 () Bool)

(assert (=> d!44701 e!92396))

(declare-fun res!67641 () Bool)

(assert (=> d!44701 (=> (not res!67641) (not e!92396))))

(assert (=> d!44701 (= res!67641 (isStrictlySorted!325 (toList!888 lt!73306)))))

(assert (=> d!44701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74274)))

(declare-fun b!141772 () Bool)

(assert (=> b!141772 (= e!92396 (containsKey!180 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44701 res!67641) b!141772))

(assert (=> d!44701 m!168049))

(assert (=> d!44701 m!168049))

(assert (=> d!44701 m!168565))

(declare-fun m!170245 () Bool)

(assert (=> d!44701 m!170245))

(declare-fun m!170247 () Bool)

(assert (=> d!44701 m!170247))

(assert (=> b!141772 m!168561))

(assert (=> b!140759 d!44701))

(assert (=> b!140759 d!44537))

(assert (=> b!140759 d!44259))

(declare-fun d!44703 () Bool)

(assert (=> d!44703 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!73151)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!73151)))))

(assert (=> d!43501 d!44703))

(declare-fun b!141776 () Bool)

(declare-fun e!92398 () Option!182)

(assert (=> b!141776 (= e!92398 None!180)))

(declare-fun b!141773 () Bool)

(declare-fun e!92397 () Option!182)

(assert (=> b!141773 (= e!92397 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))))

(declare-fun b!141774 () Bool)

(assert (=> b!141774 (= e!92397 e!92398)))

(declare-fun c!26716 () Bool)

(assert (=> b!141774 (= c!26716 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))) lt!73151))))))

(declare-fun d!44705 () Bool)

(declare-fun c!26715 () Bool)

(assert (=> d!44705 (= c!26715 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))) lt!73151)))))

(assert (=> d!44705 (= (getValueByKey!176 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!73151) e!92397)))

(declare-fun b!141775 () Bool)

(assert (=> b!141775 (= e!92398 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))) lt!73151))))

(assert (= (and d!44705 c!26715) b!141773))

(assert (= (and d!44705 (not c!26715)) b!141774))

(assert (= (and b!141774 c!26716) b!141775))

(assert (= (and b!141774 (not c!26716)) b!141776))

(declare-fun m!170249 () Bool)

(assert (=> b!141775 m!170249))

(assert (=> d!43501 d!44705))

(assert (=> b!140313 d!43587))

(assert (=> d!43877 d!43467))

(assert (=> d!43877 d!43469))

(declare-fun d!44707 () Bool)

(assert (=> d!44707 (isDefined!129 (getValueByKey!176 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!44707 true))

(declare-fun _$12!416 () Unit!4373)

(assert (=> d!44707 (= (choose!864 (toList!888 call!15465) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) _$12!416)))

(declare-fun bs!5949 () Bool)

(assert (= bs!5949 d!44707))

(assert (=> bs!5949 m!166013))

(assert (=> bs!5949 m!166797))

(assert (=> bs!5949 m!166797))

(assert (=> bs!5949 m!166799))

(assert (=> d!43877 d!44707))

(declare-fun d!44709 () Bool)

(declare-fun res!67642 () Bool)

(declare-fun e!92399 () Bool)

(assert (=> d!44709 (=> res!67642 e!92399)))

(assert (=> d!44709 (= res!67642 (or ((_ is Nil!1742) (toList!888 call!15465)) ((_ is Nil!1742) (t!6329 (toList!888 call!15465)))))))

(assert (=> d!44709 (= (isStrictlySorted!325 (toList!888 call!15465)) e!92399)))

(declare-fun b!141777 () Bool)

(declare-fun e!92400 () Bool)

(assert (=> b!141777 (= e!92399 e!92400)))

(declare-fun res!67643 () Bool)

(assert (=> b!141777 (=> (not res!67643) (not e!92400))))

(assert (=> b!141777 (= res!67643 (bvslt (_1!1360 (h!2348 (toList!888 call!15465))) (_1!1360 (h!2348 (t!6329 (toList!888 call!15465))))))))

(declare-fun b!141778 () Bool)

(assert (=> b!141778 (= e!92400 (isStrictlySorted!325 (t!6329 (toList!888 call!15465))))))

(assert (= (and d!44709 (not res!67642)) b!141777))

(assert (= (and b!141777 res!67643) b!141778))

(declare-fun m!170251 () Bool)

(assert (=> b!141778 m!170251))

(assert (=> d!43877 d!44709))

(declare-fun d!44711 () Bool)

(assert (=> d!44711 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72905) lt!72900)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72905) lt!72900))))))

(declare-fun bs!5950 () Bool)

(assert (= bs!5950 d!44711))

(assert (=> bs!5950 m!166321))

(declare-fun m!170253 () Bool)

(assert (=> bs!5950 m!170253))

(assert (=> b!140835 d!44711))

(assert (=> b!140835 d!43551))

(declare-fun b!141782 () Bool)

(declare-fun e!92402 () Option!182)

(assert (=> b!141782 (= e!92402 None!180)))

(declare-fun b!141779 () Bool)

(declare-fun e!92401 () Option!182)

(assert (=> b!141779 (= e!92401 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72889))))))))

(declare-fun b!141780 () Bool)

(assert (=> b!141780 (= e!92401 e!92402)))

(declare-fun c!26718 () Bool)

(assert (=> b!141780 (= c!26718 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72889))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72889)))) lt!72894))))))

(declare-fun d!44713 () Bool)

(declare-fun c!26717 () Bool)

(assert (=> d!44713 (= c!26717 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72889))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72889)))) lt!72894)))))

(assert (=> d!44713 (= (getValueByKey!176 (t!6329 (toList!888 lt!72889)) lt!72894) e!92401)))

(declare-fun b!141781 () Bool)

(assert (=> b!141781 (= e!92402 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72889))) lt!72894))))

(assert (= (and d!44713 c!26717) b!141779))

(assert (= (and d!44713 (not c!26717)) b!141780))

(assert (= (and b!141780 c!26718) b!141781))

(assert (= (and b!141780 (not c!26718)) b!141782))

(declare-fun m!170255 () Bool)

(assert (=> b!141781 m!170255))

(assert (=> b!140521 d!44713))

(declare-fun d!44715 () Bool)

(declare-fun e!92403 () Bool)

(assert (=> d!44715 e!92403))

(declare-fun res!67644 () Bool)

(assert (=> d!44715 (=> res!67644 e!92403)))

(declare-fun lt!74277 () Bool)

(assert (=> d!44715 (= res!67644 (not lt!74277))))

(declare-fun lt!74275 () Bool)

(assert (=> d!44715 (= lt!74277 lt!74275)))

(declare-fun lt!74276 () Unit!4373)

(declare-fun e!92404 () Unit!4373)

(assert (=> d!44715 (= lt!74276 e!92404)))

(declare-fun c!26719 () Bool)

(assert (=> d!44715 (= c!26719 lt!74275)))

(assert (=> d!44715 (= lt!74275 (containsKey!180 (toList!888 lt!73421) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44715 (= (contains!923 lt!73421 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!74277)))

(declare-fun b!141783 () Bool)

(declare-fun lt!74278 () Unit!4373)

(assert (=> b!141783 (= e!92404 lt!74278)))

(assert (=> b!141783 (= lt!74278 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73421) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (=> b!141783 (isDefined!129 (getValueByKey!176 (toList!888 lt!73421) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141784 () Bool)

(declare-fun Unit!4476 () Unit!4373)

(assert (=> b!141784 (= e!92404 Unit!4476)))

(declare-fun b!141785 () Bool)

(assert (=> b!141785 (= e!92403 (isDefined!129 (getValueByKey!176 (toList!888 lt!73421) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44715 c!26719) b!141783))

(assert (= (and d!44715 (not c!26719)) b!141784))

(assert (= (and d!44715 (not res!67644)) b!141785))

(declare-fun m!170257 () Bool)

(assert (=> d!44715 m!170257))

(declare-fun m!170259 () Bool)

(assert (=> b!141783 m!170259))

(assert (=> b!141783 m!167151))

(assert (=> b!141783 m!167151))

(declare-fun m!170261 () Bool)

(assert (=> b!141783 m!170261))

(assert (=> b!141785 m!167151))

(assert (=> b!141785 m!167151))

(assert (=> b!141785 m!170261))

(assert (=> d!43517 d!44715))

(declare-fun b!141789 () Bool)

(declare-fun e!92406 () Option!182)

(assert (=> b!141789 (= e!92406 None!180)))

(declare-fun b!141786 () Bool)

(declare-fun e!92405 () Option!182)

(assert (=> b!141786 (= e!92405 (Some!181 (_2!1360 (h!2348 lt!73418))))))

(declare-fun b!141787 () Bool)

(assert (=> b!141787 (= e!92405 e!92406)))

(declare-fun c!26721 () Bool)

(assert (=> b!141787 (= c!26721 (and ((_ is Cons!1741) lt!73418) (not (= (_1!1360 (h!2348 lt!73418)) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26720 () Bool)

(declare-fun d!44717 () Bool)

(assert (=> d!44717 (= c!26720 (and ((_ is Cons!1741) lt!73418) (= (_1!1360 (h!2348 lt!73418)) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44717 (= (getValueByKey!176 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) e!92405)))

(declare-fun b!141788 () Bool)

(assert (=> b!141788 (= e!92406 (getValueByKey!176 (t!6329 lt!73418) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44717 c!26720) b!141786))

(assert (= (and d!44717 (not c!26720)) b!141787))

(assert (= (and b!141787 c!26721) b!141788))

(assert (= (and b!141787 (not c!26721)) b!141789))

(declare-fun m!170263 () Bool)

(assert (=> b!141788 m!170263))

(assert (=> d!43517 d!44717))

(declare-fun d!44719 () Bool)

(assert (=> d!44719 (= (getValueByKey!176 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74279 () Unit!4373)

(assert (=> d!44719 (= lt!74279 (choose!865 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92407 () Bool)

(assert (=> d!44719 e!92407))

(declare-fun res!67645 () Bool)

(assert (=> d!44719 (=> (not res!67645) (not e!92407))))

(assert (=> d!44719 (= res!67645 (isStrictlySorted!325 lt!73418))))

(assert (=> d!44719 (= (lemmaContainsTupThenGetReturnValue!90 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!74279)))

(declare-fun b!141790 () Bool)

(declare-fun res!67646 () Bool)

(assert (=> b!141790 (=> (not res!67646) (not e!92407))))

(assert (=> b!141790 (= res!67646 (containsKey!180 lt!73418 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141791 () Bool)

(assert (=> b!141791 (= e!92407 (contains!925 lt!73418 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44719 res!67645) b!141790))

(assert (= (and b!141790 res!67646) b!141791))

(assert (=> d!44719 m!167145))

(declare-fun m!170265 () Bool)

(assert (=> d!44719 m!170265))

(declare-fun m!170267 () Bool)

(assert (=> d!44719 m!170267))

(declare-fun m!170269 () Bool)

(assert (=> b!141790 m!170269))

(declare-fun m!170271 () Bool)

(assert (=> b!141791 m!170271))

(assert (=> d!43517 d!44719))

(declare-fun b!141792 () Bool)

(declare-fun e!92408 () List!1745)

(declare-fun call!15714 () List!1745)

(assert (=> b!141792 (= e!92408 call!15714)))

(declare-fun bm!15709 () Bool)

(declare-fun call!15712 () List!1745)

(assert (=> bm!15709 (= call!15714 call!15712)))

(declare-fun d!44721 () Bool)

(declare-fun e!92412 () Bool)

(assert (=> d!44721 e!92412))

(declare-fun res!67647 () Bool)

(assert (=> d!44721 (=> (not res!67647) (not e!92412))))

(declare-fun lt!74280 () List!1745)

(assert (=> d!44721 (= res!67647 (isStrictlySorted!325 lt!74280))))

(declare-fun e!92409 () List!1745)

(assert (=> d!44721 (= lt!74280 e!92409)))

(declare-fun c!26724 () Bool)

(assert (=> d!44721 (= c!26724 (and ((_ is Cons!1741) (toList!888 lt!73138)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73138))) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44721 (isStrictlySorted!325 (toList!888 lt!73138))))

(assert (=> d!44721 (= (insertStrictlySorted!93 (toList!888 lt!73138) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!74280)))

(declare-fun bm!15710 () Bool)

(declare-fun call!15713 () List!1745)

(assert (=> bm!15710 (= call!15712 call!15713)))

(declare-fun b!141793 () Bool)

(declare-fun e!92410 () List!1745)

(assert (=> b!141793 (= e!92409 e!92410)))

(declare-fun c!26723 () Bool)

(assert (=> b!141793 (= c!26723 (and ((_ is Cons!1741) (toList!888 lt!73138)) (= (_1!1360 (h!2348 (toList!888 lt!73138))) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141794 () Bool)

(assert (=> b!141794 (= e!92409 call!15713)))

(declare-fun e!92411 () List!1745)

(declare-fun bm!15711 () Bool)

(assert (=> bm!15711 (= call!15713 ($colon$colon!94 e!92411 (ite c!26724 (h!2348 (toList!888 lt!73138)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26722 () Bool)

(assert (=> bm!15711 (= c!26722 c!26724)))

(declare-fun b!141795 () Bool)

(declare-fun c!26725 () Bool)

(assert (=> b!141795 (= e!92411 (ite c!26723 (t!6329 (toList!888 lt!73138)) (ite c!26725 (Cons!1741 (h!2348 (toList!888 lt!73138)) (t!6329 (toList!888 lt!73138))) Nil!1742)))))

(declare-fun b!141796 () Bool)

(assert (=> b!141796 (= e!92410 call!15712)))

(declare-fun b!141797 () Bool)

(assert (=> b!141797 (= e!92412 (contains!925 lt!74280 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141798 () Bool)

(assert (=> b!141798 (= e!92411 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73138)) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141799 () Bool)

(assert (=> b!141799 (= e!92408 call!15714)))

(declare-fun b!141800 () Bool)

(assert (=> b!141800 (= c!26725 (and ((_ is Cons!1741) (toList!888 lt!73138)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73138))) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(assert (=> b!141800 (= e!92410 e!92408)))

(declare-fun b!141801 () Bool)

(declare-fun res!67648 () Bool)

(assert (=> b!141801 (=> (not res!67648) (not e!92412))))

(assert (=> b!141801 (= res!67648 (containsKey!180 lt!74280 (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44721 c!26724) b!141794))

(assert (= (and d!44721 (not c!26724)) b!141793))

(assert (= (and b!141793 c!26723) b!141796))

(assert (= (and b!141793 (not c!26723)) b!141800))

(assert (= (and b!141800 c!26725) b!141799))

(assert (= (and b!141800 (not c!26725)) b!141792))

(assert (= (or b!141799 b!141792) bm!15709))

(assert (= (or b!141796 bm!15709) bm!15710))

(assert (= (or b!141794 bm!15710) bm!15711))

(assert (= (and bm!15711 c!26722) b!141798))

(assert (= (and bm!15711 (not c!26722)) b!141795))

(assert (= (and d!44721 res!67647) b!141801))

(assert (= (and b!141801 res!67648) b!141797))

(declare-fun m!170273 () Bool)

(assert (=> b!141798 m!170273))

(declare-fun m!170275 () Bool)

(assert (=> d!44721 m!170275))

(declare-fun m!170277 () Bool)

(assert (=> d!44721 m!170277))

(declare-fun m!170279 () Bool)

(assert (=> b!141801 m!170279))

(declare-fun m!170281 () Bool)

(assert (=> bm!15711 m!170281))

(declare-fun m!170283 () Bool)

(assert (=> b!141797 m!170283))

(assert (=> d!43517 d!44721))

(declare-fun d!44723 () Bool)

(declare-fun e!92413 () Bool)

(assert (=> d!44723 e!92413))

(declare-fun res!67649 () Bool)

(assert (=> d!44723 (=> (not res!67649) (not e!92413))))

(declare-fun lt!74284 () ListLongMap!1745)

(assert (=> d!44723 (= res!67649 (contains!923 lt!74284 (_1!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74281 () List!1745)

(assert (=> d!44723 (= lt!74284 (ListLongMap!1746 lt!74281))))

(declare-fun lt!74282 () Unit!4373)

(declare-fun lt!74283 () Unit!4373)

(assert (=> d!44723 (= lt!74282 lt!74283)))

(assert (=> d!44723 (= (getValueByKey!176 lt!74281 (_1!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44723 (= lt!74283 (lemmaContainsTupThenGetReturnValue!90 lt!74281 (_1!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44723 (= lt!74281 (insertStrictlySorted!93 (toList!888 (ite c!26303 call!15600 (ite c!26305 call!15598 call!15603))) (_1!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44723 (= (+!179 (ite c!26303 call!15600 (ite c!26305 call!15598 call!15603)) (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74284)))

(declare-fun b!141802 () Bool)

(declare-fun res!67650 () Bool)

(assert (=> b!141802 (=> (not res!67650) (not e!92413))))

(assert (=> b!141802 (= res!67650 (= (getValueByKey!176 (toList!888 lt!74284) (_1!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141803 () Bool)

(assert (=> b!141803 (= e!92413 (contains!925 (toList!888 lt!74284) (ite (or c!26303 c!26305) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44723 res!67649) b!141802))

(assert (= (and b!141802 res!67650) b!141803))

(declare-fun m!170285 () Bool)

(assert (=> d!44723 m!170285))

(declare-fun m!170287 () Bool)

(assert (=> d!44723 m!170287))

(declare-fun m!170289 () Bool)

(assert (=> d!44723 m!170289))

(declare-fun m!170291 () Bool)

(assert (=> d!44723 m!170291))

(declare-fun m!170293 () Bool)

(assert (=> b!141802 m!170293))

(declare-fun m!170295 () Bool)

(assert (=> b!141803 m!170295))

(assert (=> bm!15599 d!44723))

(declare-fun d!44725 () Bool)

(assert (=> d!44725 (= (isEmpty!417 lt!73729) (isEmpty!419 (toList!888 lt!73729)))))

(declare-fun bs!5951 () Bool)

(assert (= bs!5951 d!44725))

(declare-fun m!170297 () Bool)

(assert (=> bs!5951 m!170297))

(assert (=> b!140578 d!44725))

(assert (=> d!43591 d!43527))

(declare-fun b!141804 () Bool)

(declare-fun res!67654 () Bool)

(declare-fun e!92414 () Bool)

(assert (=> b!141804 (=> (not res!67654) (not e!92414))))

(assert (=> b!141804 (= res!67654 (and (= (size!2588 (_values!2923 (_2!1361 lt!73257))) (bvadd (mask!7280 (_2!1361 lt!73257)) #b00000000000000000000000000000001)) (= (size!2587 (_keys!4699 (_2!1361 lt!73257))) (size!2588 (_values!2923 (_2!1361 lt!73257)))) (bvsge (_size!625 (_2!1361 lt!73257)) #b00000000000000000000000000000000) (bvsle (_size!625 (_2!1361 lt!73257)) (bvadd (mask!7280 (_2!1361 lt!73257)) #b00000000000000000000000000000001))))))

(declare-fun b!141806 () Bool)

(declare-fun res!67653 () Bool)

(assert (=> b!141806 (=> (not res!67653) (not e!92414))))

(assert (=> b!141806 (= res!67653 (= (size!2591 (_2!1361 lt!73257)) (bvadd (_size!625 (_2!1361 lt!73257)) (bvsdiv (bvadd (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!141807 () Bool)

(assert (=> b!141807 (= e!92414 (and (bvsge (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000011) (bvsge (_vacant!625 (_2!1361 lt!73257)) #b00000000000000000000000000000000)))))

(declare-fun d!44727 () Bool)

(declare-fun res!67652 () Bool)

(assert (=> d!44727 (=> (not res!67652) (not e!92414))))

(assert (=> d!44727 (= res!67652 (validMask!0 (mask!7280 (_2!1361 lt!73257))))))

(assert (=> d!44727 (= (simpleValid!96 (_2!1361 lt!73257)) e!92414)))

(declare-fun b!141805 () Bool)

(declare-fun res!67651 () Bool)

(assert (=> b!141805 (=> (not res!67651) (not e!92414))))

(assert (=> b!141805 (= res!67651 (bvsge (size!2591 (_2!1361 lt!73257)) (_size!625 (_2!1361 lt!73257))))))

(assert (= (and d!44727 res!67652) b!141804))

(assert (= (and b!141804 res!67654) b!141805))

(assert (= (and b!141805 res!67651) b!141806))

(assert (= (and b!141806 res!67653) b!141807))

(declare-fun m!170299 () Bool)

(assert (=> b!141806 m!170299))

(declare-fun m!170301 () Bool)

(assert (=> d!44727 m!170301))

(assert (=> b!141805 m!170299))

(assert (=> d!43525 d!44727))

(declare-fun d!44729 () Bool)

(assert (=> d!44729 (= (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302)) (not (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))))

(declare-fun bs!5952 () Bool)

(assert (= bs!5952 d!44729))

(assert (=> bs!5952 m!168275))

(declare-fun m!170303 () Bool)

(assert (=> bs!5952 m!170303))

(assert (=> b!140663 d!44729))

(declare-fun b!141811 () Bool)

(declare-fun e!92416 () Option!182)

(assert (=> b!141811 (= e!92416 None!180)))

(declare-fun b!141808 () Bool)

(declare-fun e!92415 () Option!182)

(assert (=> b!141808 (= e!92415 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))))

(declare-fun b!141809 () Bool)

(assert (=> b!141809 (= e!92415 e!92416)))

(declare-fun c!26727 () Bool)

(assert (=> b!141809 (= c!26727 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))) lt!73302))))))

(declare-fun c!26726 () Bool)

(declare-fun d!44731 () Bool)

(assert (=> d!44731 (= c!26726 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))) lt!73302)))))

(assert (=> d!44731 (= (getValueByKey!176 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302) e!92415)))

(declare-fun b!141810 () Bool)

(assert (=> b!141810 (= e!92416 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))) lt!73302))))

(assert (= (and d!44731 c!26726) b!141808))

(assert (= (and d!44731 (not c!26726)) b!141809))

(assert (= (and b!141809 c!26727) b!141810))

(assert (= (and b!141809 (not c!26727)) b!141811))

(declare-fun m!170305 () Bool)

(assert (=> b!141810 m!170305))

(assert (=> b!140663 d!44731))

(declare-fun d!44733 () Bool)

(declare-fun e!92417 () Bool)

(assert (=> d!44733 e!92417))

(declare-fun res!67655 () Bool)

(assert (=> d!44733 (=> res!67655 e!92417)))

(declare-fun lt!74287 () Bool)

(assert (=> d!44733 (= res!67655 (not lt!74287))))

(declare-fun lt!74285 () Bool)

(assert (=> d!44733 (= lt!74287 lt!74285)))

(declare-fun lt!74286 () Unit!4373)

(declare-fun e!92418 () Unit!4373)

(assert (=> d!44733 (= lt!74286 e!92418)))

(declare-fun c!26728 () Bool)

(assert (=> d!44733 (= c!26728 lt!74285)))

(assert (=> d!44733 (= lt!74285 (containsKey!180 (toList!888 lt!73843) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44733 (= (contains!923 lt!73843 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74287)))

(declare-fun b!141812 () Bool)

(declare-fun lt!74288 () Unit!4373)

(assert (=> b!141812 (= e!92418 lt!74288)))

(assert (=> b!141812 (= lt!74288 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73843) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> b!141812 (isDefined!129 (getValueByKey!176 (toList!888 lt!73843) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141813 () Bool)

(declare-fun Unit!4477 () Unit!4373)

(assert (=> b!141813 (= e!92418 Unit!4477)))

(declare-fun b!141814 () Bool)

(assert (=> b!141814 (= e!92417 (isDefined!129 (getValueByKey!176 (toList!888 lt!73843) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!44733 c!26728) b!141812))

(assert (= (and d!44733 (not c!26728)) b!141813))

(assert (= (and d!44733 (not res!67655)) b!141814))

(declare-fun m!170307 () Bool)

(assert (=> d!44733 m!170307))

(declare-fun m!170309 () Bool)

(assert (=> b!141812 m!170309))

(assert (=> b!141812 m!168457))

(assert (=> b!141812 m!168457))

(declare-fun m!170311 () Bool)

(assert (=> b!141812 m!170311))

(assert (=> b!141814 m!168457))

(assert (=> b!141814 m!168457))

(assert (=> b!141814 m!170311))

(assert (=> d!43907 d!44733))

(declare-fun b!141818 () Bool)

(declare-fun e!92420 () Option!182)

(assert (=> b!141818 (= e!92420 None!180)))

(declare-fun b!141815 () Bool)

(declare-fun e!92419 () Option!182)

(assert (=> b!141815 (= e!92419 (Some!181 (_2!1360 (h!2348 lt!73840))))))

(declare-fun b!141816 () Bool)

(assert (=> b!141816 (= e!92419 e!92420)))

(declare-fun c!26730 () Bool)

(assert (=> b!141816 (= c!26730 (and ((_ is Cons!1741) lt!73840) (not (= (_1!1360 (h!2348 lt!73840)) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun d!44735 () Bool)

(declare-fun c!26729 () Bool)

(assert (=> d!44735 (= c!26729 (and ((_ is Cons!1741) lt!73840) (= (_1!1360 (h!2348 lt!73840)) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44735 (= (getValueByKey!176 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92419)))

(declare-fun b!141817 () Bool)

(assert (=> b!141817 (= e!92420 (getValueByKey!176 (t!6329 lt!73840) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44735 c!26729) b!141815))

(assert (= (and d!44735 (not c!26729)) b!141816))

(assert (= (and b!141816 c!26730) b!141817))

(assert (= (and b!141816 (not c!26730)) b!141818))

(declare-fun m!170313 () Bool)

(assert (=> b!141817 m!170313))

(assert (=> d!43907 d!44735))

(declare-fun d!44737 () Bool)

(assert (=> d!44737 (= (getValueByKey!176 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!74289 () Unit!4373)

(assert (=> d!44737 (= lt!74289 (choose!865 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun e!92421 () Bool)

(assert (=> d!44737 e!92421))

(declare-fun res!67656 () Bool)

(assert (=> d!44737 (=> (not res!67656) (not e!92421))))

(assert (=> d!44737 (= res!67656 (isStrictlySorted!325 lt!73840))))

(assert (=> d!44737 (= (lemmaContainsTupThenGetReturnValue!90 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74289)))

(declare-fun b!141819 () Bool)

(declare-fun res!67657 () Bool)

(assert (=> b!141819 (=> (not res!67657) (not e!92421))))

(assert (=> b!141819 (= res!67657 (containsKey!180 lt!73840 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141820 () Bool)

(assert (=> b!141820 (= e!92421 (contains!925 lt!73840 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!44737 res!67656) b!141819))

(assert (= (and b!141819 res!67657) b!141820))

(assert (=> d!44737 m!168451))

(declare-fun m!170315 () Bool)

(assert (=> d!44737 m!170315))

(declare-fun m!170317 () Bool)

(assert (=> d!44737 m!170317))

(declare-fun m!170319 () Bool)

(assert (=> b!141819 m!170319))

(declare-fun m!170321 () Bool)

(assert (=> b!141820 m!170321))

(assert (=> d!43907 d!44737))

(declare-fun b!141821 () Bool)

(declare-fun e!92422 () List!1745)

(declare-fun call!15717 () List!1745)

(assert (=> b!141821 (= e!92422 call!15717)))

(declare-fun bm!15712 () Bool)

(declare-fun call!15715 () List!1745)

(assert (=> bm!15712 (= call!15717 call!15715)))

(declare-fun d!44739 () Bool)

(declare-fun e!92426 () Bool)

(assert (=> d!44739 e!92426))

(declare-fun res!67658 () Bool)

(assert (=> d!44739 (=> (not res!67658) (not e!92426))))

(declare-fun lt!74290 () List!1745)

(assert (=> d!44739 (= res!67658 (isStrictlySorted!325 lt!74290))))

(declare-fun e!92423 () List!1745)

(assert (=> d!44739 (= lt!74290 e!92423)))

(declare-fun c!26733 () Bool)

(assert (=> d!44739 (= c!26733 (and ((_ is Cons!1741) (toList!888 lt!73088)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73088))) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44739 (isStrictlySorted!325 (toList!888 lt!73088))))

(assert (=> d!44739 (= (insertStrictlySorted!93 (toList!888 lt!73088) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74290)))

(declare-fun bm!15713 () Bool)

(declare-fun call!15716 () List!1745)

(assert (=> bm!15713 (= call!15715 call!15716)))

(declare-fun b!141822 () Bool)

(declare-fun e!92424 () List!1745)

(assert (=> b!141822 (= e!92423 e!92424)))

(declare-fun c!26732 () Bool)

(assert (=> b!141822 (= c!26732 (and ((_ is Cons!1741) (toList!888 lt!73088)) (= (_1!1360 (h!2348 (toList!888 lt!73088))) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141823 () Bool)

(assert (=> b!141823 (= e!92423 call!15716)))

(declare-fun e!92425 () List!1745)

(declare-fun bm!15714 () Bool)

(assert (=> bm!15714 (= call!15716 ($colon$colon!94 e!92425 (ite c!26733 (h!2348 (toList!888 lt!73088)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26731 () Bool)

(assert (=> bm!15714 (= c!26731 c!26733)))

(declare-fun c!26734 () Bool)

(declare-fun b!141824 () Bool)

(assert (=> b!141824 (= e!92425 (ite c!26732 (t!6329 (toList!888 lt!73088)) (ite c!26734 (Cons!1741 (h!2348 (toList!888 lt!73088)) (t!6329 (toList!888 lt!73088))) Nil!1742)))))

(declare-fun b!141825 () Bool)

(assert (=> b!141825 (= e!92424 call!15715)))

(declare-fun b!141826 () Bool)

(assert (=> b!141826 (= e!92426 (contains!925 lt!74290 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141827 () Bool)

(assert (=> b!141827 (= e!92425 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73088)) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141828 () Bool)

(assert (=> b!141828 (= e!92422 call!15717)))

(declare-fun b!141829 () Bool)

(assert (=> b!141829 (= c!26734 (and ((_ is Cons!1741) (toList!888 lt!73088)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73088))) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> b!141829 (= e!92424 e!92422)))

(declare-fun b!141830 () Bool)

(declare-fun res!67659 () Bool)

(assert (=> b!141830 (=> (not res!67659) (not e!92426))))

(assert (=> b!141830 (= res!67659 (containsKey!180 lt!74290 (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44739 c!26733) b!141823))

(assert (= (and d!44739 (not c!26733)) b!141822))

(assert (= (and b!141822 c!26732) b!141825))

(assert (= (and b!141822 (not c!26732)) b!141829))

(assert (= (and b!141829 c!26734) b!141828))

(assert (= (and b!141829 (not c!26734)) b!141821))

(assert (= (or b!141828 b!141821) bm!15712))

(assert (= (or b!141825 bm!15712) bm!15713))

(assert (= (or b!141823 bm!15713) bm!15714))

(assert (= (and bm!15714 c!26731) b!141827))

(assert (= (and bm!15714 (not c!26731)) b!141824))

(assert (= (and d!44739 res!67658) b!141830))

(assert (= (and b!141830 res!67659) b!141826))

(declare-fun m!170323 () Bool)

(assert (=> b!141827 m!170323))

(declare-fun m!170325 () Bool)

(assert (=> d!44739 m!170325))

(declare-fun m!170327 () Bool)

(assert (=> d!44739 m!170327))

(declare-fun m!170329 () Bool)

(assert (=> b!141830 m!170329))

(declare-fun m!170331 () Bool)

(assert (=> bm!15714 m!170331))

(declare-fun m!170333 () Bool)

(assert (=> b!141826 m!170333))

(assert (=> d!43907 d!44739))

(declare-fun d!44741 () Bool)

(declare-fun lt!74291 () Bool)

(assert (=> d!44741 (= lt!74291 (select (content!138 (t!6329 (toList!888 lt!73285))) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!92428 () Bool)

(assert (=> d!44741 (= lt!74291 e!92428)))

(declare-fun res!67660 () Bool)

(assert (=> d!44741 (=> (not res!67660) (not e!92428))))

(assert (=> d!44741 (= res!67660 ((_ is Cons!1741) (t!6329 (toList!888 lt!73285))))))

(assert (=> d!44741 (= (contains!925 (t!6329 (toList!888 lt!73285)) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74291)))

(declare-fun b!141831 () Bool)

(declare-fun e!92427 () Bool)

(assert (=> b!141831 (= e!92428 e!92427)))

(declare-fun res!67661 () Bool)

(assert (=> b!141831 (=> res!67661 e!92427)))

(assert (=> b!141831 (= res!67661 (= (h!2348 (t!6329 (toList!888 lt!73285))) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!141832 () Bool)

(assert (=> b!141832 (= e!92427 (contains!925 (t!6329 (t!6329 (toList!888 lt!73285))) (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!44741 res!67660) b!141831))

(assert (= (and b!141831 (not res!67661)) b!141832))

(declare-fun m!170335 () Bool)

(assert (=> d!44741 m!170335))

(declare-fun m!170337 () Bool)

(assert (=> d!44741 m!170337))

(declare-fun m!170339 () Bool)

(assert (=> b!141832 m!170339))

(assert (=> b!140543 d!44741))

(declare-fun d!44743 () Bool)

(declare-fun e!92429 () Bool)

(assert (=> d!44743 e!92429))

(declare-fun res!67662 () Bool)

(assert (=> d!44743 (=> (not res!67662) (not e!92429))))

(declare-fun lt!74295 () ListLongMap!1745)

(assert (=> d!44743 (= res!67662 (contains!923 lt!74295 (_1!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun lt!74292 () List!1745)

(assert (=> d!44743 (= lt!74295 (ListLongMap!1746 lt!74292))))

(declare-fun lt!74293 () Unit!4373)

(declare-fun lt!74294 () Unit!4373)

(assert (=> d!44743 (= lt!74293 lt!74294)))

(assert (=> d!44743 (= (getValueByKey!176 lt!74292 (_1!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))) (Some!181 (_2!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(assert (=> d!44743 (= lt!74294 (lemmaContainsTupThenGetReturnValue!90 lt!74292 (_1!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (_2!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(assert (=> d!44743 (= lt!74292 (insertStrictlySorted!93 (toList!888 (ite c!26193 call!15555 (ite c!26195 call!15553 call!15558))) (_1!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (_2!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(assert (=> d!44743 (= (+!179 (ite c!26193 call!15555 (ite c!26195 call!15553 call!15558)) (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!74295)))

(declare-fun b!141833 () Bool)

(declare-fun res!67663 () Bool)

(assert (=> b!141833 (=> (not res!67663) (not e!92429))))

(assert (=> b!141833 (= res!67663 (= (getValueByKey!176 (toList!888 lt!74295) (_1!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))) (Some!181 (_2!1360 (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))))

(declare-fun b!141834 () Bool)

(assert (=> b!141834 (= e!92429 (contains!925 (toList!888 lt!74295) (ite (or c!26193 c!26195) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (= (and d!44743 res!67662) b!141833))

(assert (= (and b!141833 res!67663) b!141834))

(declare-fun m!170341 () Bool)

(assert (=> d!44743 m!170341))

(declare-fun m!170343 () Bool)

(assert (=> d!44743 m!170343))

(declare-fun m!170345 () Bool)

(assert (=> d!44743 m!170345))

(declare-fun m!170347 () Bool)

(assert (=> d!44743 m!170347))

(declare-fun m!170349 () Bool)

(assert (=> b!141833 m!170349))

(declare-fun m!170351 () Bool)

(assert (=> b!141834 m!170351))

(assert (=> bm!15554 d!44743))

(declare-fun d!44745 () Bool)

(declare-fun c!26737 () Bool)

(assert (=> d!44745 (= c!26737 ((_ is Nil!1743) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))))

(declare-fun e!92432 () (InoxSet (_ BitVec 64)))

(assert (=> d!44745 (= (content!137 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) e!92432)))

(declare-fun b!141839 () Bool)

(assert (=> b!141839 (= e!92432 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!141840 () Bool)

(assert (=> b!141840 (= e!92432 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2349 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) true) (content!137 (t!6330 (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))))))

(assert (= (and d!44745 c!26737) b!141839))

(assert (= (and d!44745 (not c!26737)) b!141840))

(declare-fun m!170353 () Bool)

(assert (=> b!141840 m!170353))

(assert (=> b!141840 m!169071))

(assert (=> d!43473 d!44745))

(declare-fun d!44747 () Bool)

(declare-fun c!26738 () Bool)

(assert (=> d!44747 (= c!26738 ((_ is Nil!1742) (toList!888 lt!73125)))))

(declare-fun e!92433 () (InoxSet tuple2!2698))

(assert (=> d!44747 (= (content!138 (toList!888 lt!73125)) e!92433)))

(declare-fun b!141841 () Bool)

(assert (=> b!141841 (= e!92433 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!141842 () Bool)

(assert (=> b!141842 (= e!92433 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73125)) true) (content!138 (t!6329 (toList!888 lt!73125)))))))

(assert (= (and d!44747 c!26738) b!141841))

(assert (= (and d!44747 (not c!26738)) b!141842))

(declare-fun m!170355 () Bool)

(assert (=> b!141842 m!170355))

(assert (=> b!141842 m!169037))

(assert (=> d!43677 d!44747))

(assert (=> d!43875 d!43871))

(assert (=> d!43875 d!43435))

(assert (=> d!43875 d!43873))

(assert (=> b!140436 d!44043))

(declare-fun d!44749 () Bool)

(declare-fun e!92434 () Bool)

(assert (=> d!44749 e!92434))

(declare-fun res!67664 () Bool)

(assert (=> d!44749 (=> res!67664 e!92434)))

(declare-fun lt!74298 () Bool)

(assert (=> d!44749 (= res!67664 (not lt!74298))))

(declare-fun lt!74296 () Bool)

(assert (=> d!44749 (= lt!74298 lt!74296)))

(declare-fun lt!74297 () Unit!4373)

(declare-fun e!92435 () Unit!4373)

(assert (=> d!44749 (= lt!74297 e!92435)))

(declare-fun c!26739 () Bool)

(assert (=> d!44749 (= c!26739 lt!74296)))

(assert (=> d!44749 (= lt!74296 (containsKey!180 (toList!888 lt!73583) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44749 (= (contains!923 lt!73583 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74298)))

(declare-fun b!141843 () Bool)

(declare-fun lt!74299 () Unit!4373)

(assert (=> b!141843 (= e!92435 lt!74299)))

(assert (=> b!141843 (= lt!74299 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73583) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!141843 (isDefined!129 (getValueByKey!176 (toList!888 lt!73583) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141844 () Bool)

(declare-fun Unit!4478 () Unit!4373)

(assert (=> b!141844 (= e!92435 Unit!4478)))

(declare-fun b!141845 () Bool)

(assert (=> b!141845 (= e!92434 (isDefined!129 (getValueByKey!176 (toList!888 lt!73583) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44749 c!26739) b!141843))

(assert (= (and d!44749 (not c!26739)) b!141844))

(assert (= (and d!44749 (not res!67664)) b!141845))

(declare-fun m!170357 () Bool)

(assert (=> d!44749 m!170357))

(declare-fun m!170359 () Bool)

(assert (=> b!141843 m!170359))

(assert (=> b!141843 m!167699))

(assert (=> b!141843 m!167699))

(declare-fun m!170361 () Bool)

(assert (=> b!141843 m!170361))

(assert (=> b!141845 m!167699))

(assert (=> b!141845 m!167699))

(assert (=> b!141845 m!170361))

(assert (=> d!43699 d!44749))

(declare-fun b!141849 () Bool)

(declare-fun e!92437 () Option!182)

(assert (=> b!141849 (= e!92437 None!180)))

(declare-fun b!141846 () Bool)

(declare-fun e!92436 () Option!182)

(assert (=> b!141846 (= e!92436 (Some!181 (_2!1360 (h!2348 lt!73580))))))

(declare-fun b!141847 () Bool)

(assert (=> b!141847 (= e!92436 e!92437)))

(declare-fun c!26741 () Bool)

(assert (=> b!141847 (= c!26741 (and ((_ is Cons!1741) lt!73580) (not (= (_1!1360 (h!2348 lt!73580)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26740 () Bool)

(declare-fun d!44751 () Bool)

(assert (=> d!44751 (= c!26740 (and ((_ is Cons!1741) lt!73580) (= (_1!1360 (h!2348 lt!73580)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44751 (= (getValueByKey!176 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92436)))

(declare-fun b!141848 () Bool)

(assert (=> b!141848 (= e!92437 (getValueByKey!176 (t!6329 lt!73580) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44751 c!26740) b!141846))

(assert (= (and d!44751 (not c!26740)) b!141847))

(assert (= (and b!141847 c!26741) b!141848))

(assert (= (and b!141847 (not c!26741)) b!141849))

(declare-fun m!170363 () Bool)

(assert (=> b!141848 m!170363))

(assert (=> d!43699 d!44751))

(declare-fun d!44753 () Bool)

(assert (=> d!44753 (= (getValueByKey!176 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74300 () Unit!4373)

(assert (=> d!44753 (= lt!74300 (choose!865 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92438 () Bool)

(assert (=> d!44753 e!92438))

(declare-fun res!67665 () Bool)

(assert (=> d!44753 (=> (not res!67665) (not e!92438))))

(assert (=> d!44753 (= res!67665 (isStrictlySorted!325 lt!73580))))

(assert (=> d!44753 (= (lemmaContainsTupThenGetReturnValue!90 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74300)))

(declare-fun b!141850 () Bool)

(declare-fun res!67666 () Bool)

(assert (=> b!141850 (=> (not res!67666) (not e!92438))))

(assert (=> b!141850 (= res!67666 (containsKey!180 lt!73580 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141851 () Bool)

(assert (=> b!141851 (= e!92438 (contains!925 lt!73580 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44753 res!67665) b!141850))

(assert (= (and b!141850 res!67666) b!141851))

(assert (=> d!44753 m!167693))

(declare-fun m!170365 () Bool)

(assert (=> d!44753 m!170365))

(declare-fun m!170367 () Bool)

(assert (=> d!44753 m!170367))

(declare-fun m!170369 () Bool)

(assert (=> b!141850 m!170369))

(declare-fun m!170371 () Bool)

(assert (=> b!141851 m!170371))

(assert (=> d!43699 d!44753))

(declare-fun b!141852 () Bool)

(declare-fun e!92439 () List!1745)

(declare-fun call!15720 () List!1745)

(assert (=> b!141852 (= e!92439 call!15720)))

(declare-fun bm!15715 () Bool)

(declare-fun call!15718 () List!1745)

(assert (=> bm!15715 (= call!15720 call!15718)))

(declare-fun d!44755 () Bool)

(declare-fun e!92443 () Bool)

(assert (=> d!44755 e!92443))

(declare-fun res!67667 () Bool)

(assert (=> d!44755 (=> (not res!67667) (not e!92443))))

(declare-fun lt!74301 () List!1745)

(assert (=> d!44755 (= res!67667 (isStrictlySorted!325 lt!74301))))

(declare-fun e!92440 () List!1745)

(assert (=> d!44755 (= lt!74301 e!92440)))

(declare-fun c!26744 () Bool)

(assert (=> d!44755 (= c!26744 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44755 (isStrictlySorted!325 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (=> d!44755 (= (insertStrictlySorted!93 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74301)))

(declare-fun bm!15716 () Bool)

(declare-fun call!15719 () List!1745)

(assert (=> bm!15716 (= call!15718 call!15719)))

(declare-fun b!141853 () Bool)

(declare-fun e!92441 () List!1745)

(assert (=> b!141853 (= e!92440 e!92441)))

(declare-fun c!26743 () Bool)

(assert (=> b!141853 (= c!26743 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141854 () Bool)

(assert (=> b!141854 (= e!92440 call!15719)))

(declare-fun bm!15717 () Bool)

(declare-fun e!92442 () List!1745)

(assert (=> bm!15717 (= call!15719 ($colon$colon!94 e!92442 (ite c!26744 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26742 () Bool)

(assert (=> bm!15717 (= c!26742 c!26744)))

(declare-fun b!141855 () Bool)

(declare-fun c!26745 () Bool)

(assert (=> b!141855 (= e!92442 (ite c!26743 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (ite c!26745 (Cons!1741 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) Nil!1742)))))

(declare-fun b!141856 () Bool)

(assert (=> b!141856 (= e!92441 call!15718)))

(declare-fun b!141857 () Bool)

(assert (=> b!141857 (= e!92443 (contains!925 lt!74301 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141858 () Bool)

(assert (=> b!141858 (= e!92442 (insertStrictlySorted!93 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141859 () Bool)

(assert (=> b!141859 (= e!92439 call!15720)))

(declare-fun b!141860 () Bool)

(assert (=> b!141860 (= c!26745 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvsgt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!141860 (= e!92441 e!92439)))

(declare-fun b!141861 () Bool)

(declare-fun res!67668 () Bool)

(assert (=> b!141861 (=> (not res!67668) (not e!92443))))

(assert (=> b!141861 (= res!67668 (containsKey!180 lt!74301 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44755 c!26744) b!141854))

(assert (= (and d!44755 (not c!26744)) b!141853))

(assert (= (and b!141853 c!26743) b!141856))

(assert (= (and b!141853 (not c!26743)) b!141860))

(assert (= (and b!141860 c!26745) b!141859))

(assert (= (and b!141860 (not c!26745)) b!141852))

(assert (= (or b!141859 b!141852) bm!15715))

(assert (= (or b!141856 bm!15715) bm!15716))

(assert (= (or b!141854 bm!15716) bm!15717))

(assert (= (and bm!15717 c!26742) b!141858))

(assert (= (and bm!15717 (not c!26742)) b!141855))

(assert (= (and d!44755 res!67667) b!141861))

(assert (= (and b!141861 res!67668) b!141857))

(declare-fun m!170373 () Bool)

(assert (=> b!141858 m!170373))

(declare-fun m!170375 () Bool)

(assert (=> d!44755 m!170375))

(assert (=> d!44755 m!168729))

(declare-fun m!170377 () Bool)

(assert (=> b!141861 m!170377))

(declare-fun m!170379 () Bool)

(assert (=> bm!15717 m!170379))

(declare-fun m!170381 () Bool)

(assert (=> b!141857 m!170381))

(assert (=> d!43699 d!44755))

(declare-fun d!44757 () Bool)

(declare-fun e!92444 () Bool)

(assert (=> d!44757 e!92444))

(declare-fun res!67669 () Bool)

(assert (=> d!44757 (=> res!67669 e!92444)))

(declare-fun lt!74304 () Bool)

(assert (=> d!44757 (= res!67669 (not lt!74304))))

(declare-fun lt!74302 () Bool)

(assert (=> d!44757 (= lt!74304 lt!74302)))

(declare-fun lt!74303 () Unit!4373)

(declare-fun e!92445 () Unit!4373)

(assert (=> d!44757 (= lt!74303 e!92445)))

(declare-fun c!26746 () Bool)

(assert (=> d!44757 (= c!26746 lt!74302)))

(assert (=> d!44757 (= lt!74302 (containsKey!180 (toList!888 lt!73859) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (=> d!44757 (= (contains!923 lt!73859 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!74304)))

(declare-fun b!141862 () Bool)

(declare-fun lt!74305 () Unit!4373)

(assert (=> b!141862 (= e!92445 lt!74305)))

(assert (=> b!141862 (= lt!74305 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73859) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (=> b!141862 (isDefined!129 (getValueByKey!176 (toList!888 lt!73859) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(declare-fun b!141863 () Bool)

(declare-fun Unit!4479 () Unit!4373)

(assert (=> b!141863 (= e!92445 Unit!4479)))

(declare-fun b!141864 () Bool)

(assert (=> b!141864 (= e!92444 (isDefined!129 (getValueByKey!176 (toList!888 lt!73859) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(assert (= (and d!44757 c!26746) b!141862))

(assert (= (and d!44757 (not c!26746)) b!141863))

(assert (= (and d!44757 (not res!67669)) b!141864))

(declare-fun m!170383 () Bool)

(assert (=> d!44757 m!170383))

(declare-fun m!170385 () Bool)

(assert (=> b!141862 m!170385))

(assert (=> b!141862 m!168525))

(assert (=> b!141862 m!168525))

(declare-fun m!170387 () Bool)

(assert (=> b!141862 m!170387))

(assert (=> b!141864 m!168525))

(assert (=> b!141864 m!168525))

(assert (=> b!141864 m!170387))

(assert (=> d!43929 d!44757))

(declare-fun b!141868 () Bool)

(declare-fun e!92447 () Option!182)

(assert (=> b!141868 (= e!92447 None!180)))

(declare-fun b!141865 () Bool)

(declare-fun e!92446 () Option!182)

(assert (=> b!141865 (= e!92446 (Some!181 (_2!1360 (h!2348 lt!73856))))))

(declare-fun b!141866 () Bool)

(assert (=> b!141866 (= e!92446 e!92447)))

(declare-fun c!26748 () Bool)

(assert (=> b!141866 (= c!26748 (and ((_ is Cons!1741) lt!73856) (not (= (_1!1360 (h!2348 lt!73856)) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))))

(declare-fun c!26747 () Bool)

(declare-fun d!44759 () Bool)

(assert (=> d!44759 (= c!26747 (and ((_ is Cons!1741) lt!73856) (= (_1!1360 (h!2348 lt!73856)) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(assert (=> d!44759 (= (getValueByKey!176 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) e!92446)))

(declare-fun b!141867 () Bool)

(assert (=> b!141867 (= e!92447 (getValueByKey!176 (t!6329 lt!73856) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (= (and d!44759 c!26747) b!141865))

(assert (= (and d!44759 (not c!26747)) b!141866))

(assert (= (and b!141866 c!26748) b!141867))

(assert (= (and b!141866 (not c!26748)) b!141868))

(declare-fun m!170389 () Bool)

(assert (=> b!141867 m!170389))

(assert (=> d!43929 d!44759))

(declare-fun d!44761 () Bool)

(assert (=> d!44761 (= (getValueByKey!176 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(declare-fun lt!74306 () Unit!4373)

(assert (=> d!44761 (= lt!74306 (choose!865 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(declare-fun e!92448 () Bool)

(assert (=> d!44761 e!92448))

(declare-fun res!67670 () Bool)

(assert (=> d!44761 (=> (not res!67670) (not e!92448))))

(assert (=> d!44761 (= res!67670 (isStrictlySorted!325 lt!73856))))

(assert (=> d!44761 (= (lemmaContainsTupThenGetReturnValue!90 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!74306)))

(declare-fun b!141869 () Bool)

(declare-fun res!67671 () Bool)

(assert (=> b!141869 (=> (not res!67671) (not e!92448))))

(assert (=> b!141869 (= res!67671 (containsKey!180 lt!73856 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(declare-fun b!141870 () Bool)

(assert (=> b!141870 (= e!92448 (contains!925 lt!73856 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(assert (= (and d!44761 res!67670) b!141869))

(assert (= (and b!141869 res!67671) b!141870))

(assert (=> d!44761 m!168519))

(declare-fun m!170391 () Bool)

(assert (=> d!44761 m!170391))

(declare-fun m!170393 () Bool)

(assert (=> d!44761 m!170393))

(declare-fun m!170395 () Bool)

(assert (=> b!141869 m!170395))

(declare-fun m!170397 () Bool)

(assert (=> b!141870 m!170397))

(assert (=> d!43929 d!44761))

(declare-fun b!141871 () Bool)

(declare-fun e!92449 () List!1745)

(declare-fun call!15723 () List!1745)

(assert (=> b!141871 (= e!92449 call!15723)))

(declare-fun bm!15718 () Bool)

(declare-fun call!15721 () List!1745)

(assert (=> bm!15718 (= call!15723 call!15721)))

(declare-fun d!44763 () Bool)

(declare-fun e!92453 () Bool)

(assert (=> d!44763 e!92453))

(declare-fun res!67672 () Bool)

(assert (=> d!44763 (=> (not res!67672) (not e!92453))))

(declare-fun lt!74307 () List!1745)

(assert (=> d!44763 (= res!67672 (isStrictlySorted!325 lt!74307))))

(declare-fun e!92450 () List!1745)

(assert (=> d!44763 (= lt!74307 e!92450)))

(declare-fun c!26751 () Bool)

(assert (=> d!44763 (= c!26751 (and ((_ is Cons!1741) (toList!888 lt!73091)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73091))) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(assert (=> d!44763 (isStrictlySorted!325 (toList!888 lt!73091))))

(assert (=> d!44763 (= (insertStrictlySorted!93 (toList!888 lt!73091) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!74307)))

(declare-fun bm!15719 () Bool)

(declare-fun call!15722 () List!1745)

(assert (=> bm!15719 (= call!15721 call!15722)))

(declare-fun b!141872 () Bool)

(declare-fun e!92451 () List!1745)

(assert (=> b!141872 (= e!92450 e!92451)))

(declare-fun c!26750 () Bool)

(assert (=> b!141872 (= c!26750 (and ((_ is Cons!1741) (toList!888 lt!73091)) (= (_1!1360 (h!2348 (toList!888 lt!73091))) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(declare-fun b!141873 () Bool)

(assert (=> b!141873 (= e!92450 call!15722)))

(declare-fun e!92452 () List!1745)

(declare-fun bm!15720 () Bool)

(assert (=> bm!15720 (= call!15722 ($colon$colon!94 e!92452 (ite c!26751 (h!2348 (toList!888 lt!73091)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))))

(declare-fun c!26749 () Bool)

(assert (=> bm!15720 (= c!26749 c!26751)))

(declare-fun b!141874 () Bool)

(declare-fun c!26752 () Bool)

(assert (=> b!141874 (= e!92452 (ite c!26750 (t!6329 (toList!888 lt!73091)) (ite c!26752 (Cons!1741 (h!2348 (toList!888 lt!73091)) (t!6329 (toList!888 lt!73091))) Nil!1742)))))

(declare-fun b!141875 () Bool)

(assert (=> b!141875 (= e!92451 call!15721)))

(declare-fun b!141876 () Bool)

(assert (=> b!141876 (= e!92453 (contains!925 lt!74307 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(declare-fun b!141877 () Bool)

(assert (=> b!141877 (= e!92452 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73091)) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(declare-fun b!141878 () Bool)

(assert (=> b!141878 (= e!92449 call!15723)))

(declare-fun b!141879 () Bool)

(assert (=> b!141879 (= c!26752 (and ((_ is Cons!1741) (toList!888 lt!73091)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73091))) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(assert (=> b!141879 (= e!92451 e!92449)))

(declare-fun b!141880 () Bool)

(declare-fun res!67673 () Bool)

(assert (=> b!141880 (=> (not res!67673) (not e!92453))))

(assert (=> b!141880 (= res!67673 (containsKey!180 lt!74307 (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (= (and d!44763 c!26751) b!141873))

(assert (= (and d!44763 (not c!26751)) b!141872))

(assert (= (and b!141872 c!26750) b!141875))

(assert (= (and b!141872 (not c!26750)) b!141879))

(assert (= (and b!141879 c!26752) b!141878))

(assert (= (and b!141879 (not c!26752)) b!141871))

(assert (= (or b!141878 b!141871) bm!15718))

(assert (= (or b!141875 bm!15718) bm!15719))

(assert (= (or b!141873 bm!15719) bm!15720))

(assert (= (and bm!15720 c!26749) b!141877))

(assert (= (and bm!15720 (not c!26749)) b!141874))

(assert (= (and d!44763 res!67672) b!141880))

(assert (= (and b!141880 res!67673) b!141876))

(declare-fun m!170399 () Bool)

(assert (=> b!141877 m!170399))

(declare-fun m!170401 () Bool)

(assert (=> d!44763 m!170401))

(declare-fun m!170403 () Bool)

(assert (=> d!44763 m!170403))

(declare-fun m!170405 () Bool)

(assert (=> b!141880 m!170405))

(declare-fun m!170407 () Bool)

(assert (=> bm!15720 m!170407))

(declare-fun m!170409 () Bool)

(assert (=> b!141876 m!170409))

(assert (=> d!43929 d!44763))

(declare-fun d!44765 () Bool)

(declare-fun e!92454 () Bool)

(assert (=> d!44765 e!92454))

(declare-fun res!67674 () Bool)

(assert (=> d!44765 (=> (not res!67674) (not e!92454))))

(declare-fun lt!74311 () ListLongMap!1745)

(assert (=> d!44765 (= res!67674 (contains!923 lt!74311 (_1!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74308 () List!1745)

(assert (=> d!44765 (= lt!74311 (ListLongMap!1746 lt!74308))))

(declare-fun lt!74309 () Unit!4373)

(declare-fun lt!74310 () Unit!4373)

(assert (=> d!44765 (= lt!74309 lt!74310)))

(assert (=> d!44765 (= (getValueByKey!176 lt!74308 (_1!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44765 (= lt!74310 (lemmaContainsTupThenGetReturnValue!90 lt!74308 (_1!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44765 (= lt!74308 (insertStrictlySorted!93 (toList!888 lt!73804) (_1!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44765 (= (+!179 lt!73804 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))) lt!74311)))

(declare-fun b!141881 () Bool)

(declare-fun res!67675 () Bool)

(assert (=> b!141881 (=> (not res!67675) (not e!92454))))

(assert (=> b!141881 (= res!67675 (= (getValueByKey!176 (toList!888 lt!74311) (_1!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141882 () Bool)

(assert (=> b!141882 (= e!92454 (contains!925 (toList!888 lt!74311) (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44765 res!67674) b!141881))

(assert (= (and b!141881 res!67675) b!141882))

(declare-fun m!170411 () Bool)

(assert (=> d!44765 m!170411))

(declare-fun m!170413 () Bool)

(assert (=> d!44765 m!170413))

(declare-fun m!170415 () Bool)

(assert (=> d!44765 m!170415))

(declare-fun m!170417 () Bool)

(assert (=> d!44765 m!170417))

(declare-fun m!170419 () Bool)

(assert (=> b!141881 m!170419))

(declare-fun m!170421 () Bool)

(assert (=> b!141882 m!170421))

(assert (=> b!140698 d!44765))

(declare-fun d!44767 () Bool)

(declare-fun e!92455 () Bool)

(assert (=> d!44767 e!92455))

(declare-fun res!67676 () Bool)

(assert (=> d!44767 (=> res!67676 e!92455)))

(declare-fun lt!74314 () Bool)

(assert (=> d!44767 (= res!67676 (not lt!74314))))

(declare-fun lt!74312 () Bool)

(assert (=> d!44767 (= lt!74314 lt!74312)))

(declare-fun lt!74313 () Unit!4373)

(declare-fun e!92456 () Unit!4373)

(assert (=> d!44767 (= lt!74313 e!92456)))

(declare-fun c!26753 () Bool)

(assert (=> d!44767 (= c!26753 lt!74312)))

(assert (=> d!44767 (= lt!74312 (containsKey!180 (toList!888 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))) lt!73820))))

(assert (=> d!44767 (= (contains!923 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))) lt!73820) lt!74314)))

(declare-fun b!141883 () Bool)

(declare-fun lt!74315 () Unit!4373)

(assert (=> b!141883 (= e!92456 lt!74315)))

(assert (=> b!141883 (= lt!74315 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))) lt!73820))))

(assert (=> b!141883 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))) lt!73820))))

(declare-fun b!141884 () Bool)

(declare-fun Unit!4480 () Unit!4373)

(assert (=> b!141884 (= e!92456 Unit!4480)))

(declare-fun b!141885 () Bool)

(assert (=> b!141885 (= e!92455 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))) lt!73820)))))

(assert (= (and d!44767 c!26753) b!141883))

(assert (= (and d!44767 (not c!26753)) b!141884))

(assert (= (and d!44767 (not res!67676)) b!141885))

(declare-fun m!170423 () Bool)

(assert (=> d!44767 m!170423))

(declare-fun m!170425 () Bool)

(assert (=> b!141883 m!170425))

(declare-fun m!170427 () Bool)

(assert (=> b!141883 m!170427))

(assert (=> b!141883 m!170427))

(declare-fun m!170429 () Bool)

(assert (=> b!141883 m!170429))

(assert (=> b!141885 m!170427))

(assert (=> b!141885 m!170427))

(assert (=> b!141885 m!170429))

(assert (=> b!140698 d!44767))

(declare-fun d!44769 () Bool)

(assert (=> d!44769 (= (apply!120 (+!179 lt!73822 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73817) (apply!120 lt!73822 lt!73817))))

(declare-fun lt!74316 () Unit!4373)

(assert (=> d!44769 (= lt!74316 (choose!856 lt!73822 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73817))))

(declare-fun e!92457 () Bool)

(assert (=> d!44769 e!92457))

(declare-fun res!67677 () Bool)

(assert (=> d!44769 (=> (not res!67677) (not e!92457))))

(assert (=> d!44769 (= res!67677 (contains!923 lt!73822 lt!73817))))

(assert (=> d!44769 (= (addApplyDifferent!96 lt!73822 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73817) lt!74316)))

(declare-fun b!141886 () Bool)

(assert (=> b!141886 (= e!92457 (not (= lt!73817 lt!73818)))))

(assert (= (and d!44769 res!67677) b!141886))

(assert (=> d!44769 m!168361))

(declare-fun m!170431 () Bool)

(assert (=> d!44769 m!170431))

(assert (=> d!44769 m!166029))

(declare-fun m!170433 () Bool)

(assert (=> d!44769 m!170433))

(assert (=> d!44769 m!168371))

(assert (=> d!44769 m!168371))

(assert (=> d!44769 m!168373))

(assert (=> b!140698 d!44769))

(declare-fun d!44771 () Bool)

(assert (=> d!44771 (= (apply!120 (+!179 lt!73804 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))) lt!73805) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73804 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16)))) lt!73805)))))

(declare-fun bs!5953 () Bool)

(assert (= bs!5953 d!44771))

(declare-fun m!170435 () Bool)

(assert (=> bs!5953 m!170435))

(assert (=> bs!5953 m!170435))

(declare-fun m!170437 () Bool)

(assert (=> bs!5953 m!170437))

(assert (=> b!140698 d!44771))

(declare-fun d!44773 () Bool)

(declare-fun e!92458 () Bool)

(assert (=> d!44773 e!92458))

(declare-fun res!67678 () Bool)

(assert (=> d!44773 (=> (not res!67678) (not e!92458))))

(declare-fun lt!74320 () ListLongMap!1745)

(assert (=> d!44773 (= res!67678 (contains!923 lt!74320 (_1!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74317 () List!1745)

(assert (=> d!44773 (= lt!74320 (ListLongMap!1746 lt!74317))))

(declare-fun lt!74318 () Unit!4373)

(declare-fun lt!74319 () Unit!4373)

(assert (=> d!44773 (= lt!74318 lt!74319)))

(assert (=> d!44773 (= (getValueByKey!176 lt!74317 (_1!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44773 (= lt!74319 (lemmaContainsTupThenGetReturnValue!90 lt!74317 (_1!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44773 (= lt!74317 (insertStrictlySorted!93 (toList!888 lt!73819) (_1!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44773 (= (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))) lt!74320)))

(declare-fun b!141887 () Bool)

(declare-fun res!67679 () Bool)

(assert (=> b!141887 (=> (not res!67679) (not e!92458))))

(assert (=> b!141887 (= res!67679 (= (getValueByKey!176 (toList!888 lt!74320) (_1!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141888 () Bool)

(assert (=> b!141888 (= e!92458 (contains!925 (toList!888 lt!74320) (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44773 res!67678) b!141887))

(assert (= (and b!141887 res!67679) b!141888))

(declare-fun m!170439 () Bool)

(assert (=> d!44773 m!170439))

(declare-fun m!170441 () Bool)

(assert (=> d!44773 m!170441))

(declare-fun m!170443 () Bool)

(assert (=> d!44773 m!170443))

(declare-fun m!170445 () Bool)

(assert (=> d!44773 m!170445))

(declare-fun m!170447 () Bool)

(assert (=> b!141887 m!170447))

(declare-fun m!170449 () Bool)

(assert (=> b!141888 m!170449))

(assert (=> b!140698 d!44773))

(declare-fun b!141889 () Bool)

(declare-fun lt!74327 () Unit!4373)

(declare-fun lt!74323 () Unit!4373)

(assert (=> b!141889 (= lt!74327 lt!74323)))

(declare-fun lt!74321 () (_ BitVec 64))

(declare-fun lt!74325 () (_ BitVec 64))

(declare-fun lt!74326 () ListLongMap!1745)

(declare-fun lt!74322 () V!3555)

(assert (=> b!141889 (not (contains!923 (+!179 lt!74326 (tuple2!2699 lt!74325 lt!74322)) lt!74321))))

(assert (=> b!141889 (= lt!74323 (addStillNotContains!64 lt!74326 lt!74325 lt!74322 lt!74321))))

(assert (=> b!141889 (= lt!74321 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141889 (= lt!74322 (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141889 (= lt!74325 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15724 () ListLongMap!1745)

(assert (=> b!141889 (= lt!74326 call!15724)))

(declare-fun e!92459 () ListLongMap!1745)

(assert (=> b!141889 (= e!92459 (+!179 call!15724 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141891 () Bool)

(declare-fun e!92461 () ListLongMap!1745)

(assert (=> b!141891 (= e!92461 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141892 () Bool)

(declare-fun e!92465 () Bool)

(declare-fun e!92460 () Bool)

(assert (=> b!141892 (= e!92465 e!92460)))

(assert (=> b!141892 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67683 () Bool)

(declare-fun lt!74324 () ListLongMap!1745)

(assert (=> b!141892 (= res!67683 (contains!923 lt!74324 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141892 (=> (not res!67683) (not e!92460))))

(declare-fun b!141893 () Bool)

(declare-fun res!67680 () Bool)

(declare-fun e!92464 () Bool)

(assert (=> b!141893 (=> (not res!67680) (not e!92464))))

(assert (=> b!141893 (= res!67680 (not (contains!923 lt!74324 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141894 () Bool)

(declare-fun e!92462 () Bool)

(assert (=> b!141894 (= e!92465 e!92462)))

(declare-fun c!26756 () Bool)

(assert (=> b!141894 (= c!26756 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141895 () Bool)

(assert (=> b!141895 (= e!92461 e!92459)))

(declare-fun c!26757 () Bool)

(assert (=> b!141895 (= c!26757 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141896 () Bool)

(declare-fun e!92463 () Bool)

(assert (=> b!141896 (= e!92463 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141896 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15721 () Bool)

(assert (=> bm!15721 (= call!15724 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141897 () Bool)

(assert (=> b!141897 (= e!92462 (= lt!74324 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141898 () Bool)

(assert (=> b!141898 (= e!92464 e!92465)))

(declare-fun c!26754 () Bool)

(assert (=> b!141898 (= c!26754 e!92463)))

(declare-fun res!67682 () Bool)

(assert (=> b!141898 (=> (not res!67682) (not e!92463))))

(assert (=> b!141898 (= res!67682 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44775 () Bool)

(assert (=> d!44775 e!92464))

(declare-fun res!67681 () Bool)

(assert (=> d!44775 (=> (not res!67681) (not e!92464))))

(assert (=> d!44775 (= res!67681 (not (contains!923 lt!74324 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44775 (= lt!74324 e!92461)))

(declare-fun c!26755 () Bool)

(assert (=> d!44775 (= c!26755 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44775 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44775 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72994 (zeroValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74324)))

(declare-fun b!141890 () Bool)

(assert (=> b!141890 (= e!92462 (isEmpty!417 lt!74324))))

(declare-fun b!141899 () Bool)

(assert (=> b!141899 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141899 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!141899 (= e!92460 (= (apply!120 lt!74324 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141900 () Bool)

(assert (=> b!141900 (= e!92459 call!15724)))

(assert (= (and d!44775 c!26755) b!141891))

(assert (= (and d!44775 (not c!26755)) b!141895))

(assert (= (and b!141895 c!26757) b!141889))

(assert (= (and b!141895 (not c!26757)) b!141900))

(assert (= (or b!141889 b!141900) bm!15721))

(assert (= (and d!44775 res!67681) b!141893))

(assert (= (and b!141893 res!67680) b!141898))

(assert (= (and b!141898 res!67682) b!141896))

(assert (= (and b!141898 c!26754) b!141892))

(assert (= (and b!141898 (not c!26754)) b!141894))

(assert (= (and b!141892 res!67683) b!141899))

(assert (= (and b!141894 c!26756) b!141897))

(assert (= (and b!141894 (not c!26756)) b!141890))

(declare-fun b_lambda!6357 () Bool)

(assert (=> (not b_lambda!6357) (not b!141889)))

(assert (=> b!141889 t!6337))

(declare-fun b_and!8871 () Bool)

(assert (= b_and!8867 (and (=> t!6337 result!4191) b_and!8871)))

(assert (=> b!141889 t!6339))

(declare-fun b_and!8873 () Bool)

(assert (= b_and!8869 (and (=> t!6339 result!4193) b_and!8873)))

(declare-fun b_lambda!6359 () Bool)

(assert (=> (not b_lambda!6359) (not b!141899)))

(assert (=> b!141899 t!6337))

(declare-fun b_and!8875 () Bool)

(assert (= b_and!8871 (and (=> t!6337 result!4191) b_and!8875)))

(assert (=> b!141899 t!6339))

(declare-fun b_and!8877 () Bool)

(assert (= b_and!8873 (and (=> t!6339 result!4193) b_and!8877)))

(declare-fun m!170451 () Bool)

(assert (=> b!141893 m!170451))

(assert (=> b!141895 m!166385))

(assert (=> b!141895 m!166385))

(assert (=> b!141895 m!166389))

(declare-fun m!170453 () Bool)

(assert (=> d!44775 m!170453))

(assert (=> d!44775 m!166429))

(assert (=> b!141889 m!166443))

(declare-fun m!170455 () Bool)

(assert (=> b!141889 m!170455))

(declare-fun m!170457 () Bool)

(assert (=> b!141889 m!170457))

(assert (=> b!141889 m!170455))

(assert (=> b!141889 m!166785))

(declare-fun m!170459 () Bool)

(assert (=> b!141889 m!170459))

(assert (=> b!141889 m!166785))

(assert (=> b!141889 m!166443))

(assert (=> b!141889 m!166787))

(declare-fun m!170461 () Bool)

(assert (=> b!141889 m!170461))

(assert (=> b!141889 m!166385))

(assert (=> b!141896 m!166385))

(assert (=> b!141896 m!166385))

(assert (=> b!141896 m!166389))

(assert (=> bm!15721 m!166029))

(declare-fun m!170463 () Bool)

(assert (=> bm!15721 m!170463))

(declare-fun m!170465 () Bool)

(assert (=> b!141890 m!170465))

(assert (=> b!141899 m!166443))

(assert (=> b!141899 m!166385))

(declare-fun m!170467 () Bool)

(assert (=> b!141899 m!170467))

(assert (=> b!141899 m!166785))

(assert (=> b!141899 m!166785))

(assert (=> b!141899 m!166443))

(assert (=> b!141899 m!166787))

(assert (=> b!141899 m!166385))

(assert (=> b!141892 m!166385))

(assert (=> b!141892 m!166385))

(declare-fun m!170469 () Bool)

(assert (=> b!141892 m!170469))

(assert (=> b!141897 m!166029))

(assert (=> b!141897 m!170463))

(assert (=> b!140698 d!44775))

(declare-fun d!44777 () Bool)

(assert (=> d!44777 (= (apply!120 (+!179 lt!73806 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73811) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73806 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73811)))))

(declare-fun bs!5954 () Bool)

(assert (= bs!5954 d!44777))

(declare-fun m!170471 () Bool)

(assert (=> bs!5954 m!170471))

(assert (=> bs!5954 m!170471))

(declare-fun m!170473 () Bool)

(assert (=> bs!5954 m!170473))

(assert (=> b!140698 d!44777))

(declare-fun d!44779 () Bool)

(assert (=> d!44779 (= (apply!120 (+!179 lt!73822 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73817) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73822 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73817)))))

(declare-fun bs!5955 () Bool)

(assert (= bs!5955 d!44779))

(declare-fun m!170475 () Bool)

(assert (=> bs!5955 m!170475))

(assert (=> bs!5955 m!170475))

(declare-fun m!170477 () Bool)

(assert (=> bs!5955 m!170477))

(assert (=> b!140698 d!44779))

(declare-fun d!44781 () Bool)

(declare-fun e!92466 () Bool)

(assert (=> d!44781 e!92466))

(declare-fun res!67684 () Bool)

(assert (=> d!44781 (=> (not res!67684) (not e!92466))))

(declare-fun lt!74331 () ListLongMap!1745)

(assert (=> d!44781 (= res!67684 (contains!923 lt!74331 (_1!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74328 () List!1745)

(assert (=> d!44781 (= lt!74331 (ListLongMap!1746 lt!74328))))

(declare-fun lt!74329 () Unit!4373)

(declare-fun lt!74330 () Unit!4373)

(assert (=> d!44781 (= lt!74329 lt!74330)))

(assert (=> d!44781 (= (getValueByKey!176 lt!74328 (_1!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44781 (= lt!74330 (lemmaContainsTupThenGetReturnValue!90 lt!74328 (_1!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44781 (= lt!74328 (insertStrictlySorted!93 (toList!888 lt!73822) (_1!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44781 (= (+!179 lt!73822 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74331)))

(declare-fun b!141901 () Bool)

(declare-fun res!67685 () Bool)

(assert (=> b!141901 (=> (not res!67685) (not e!92466))))

(assert (=> b!141901 (= res!67685 (= (getValueByKey!176 (toList!888 lt!74331) (_1!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141902 () Bool)

(assert (=> b!141902 (= e!92466 (contains!925 (toList!888 lt!74331) (tuple2!2699 lt!73818 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44781 res!67684) b!141901))

(assert (= (and b!141901 res!67685) b!141902))

(declare-fun m!170479 () Bool)

(assert (=> d!44781 m!170479))

(declare-fun m!170481 () Bool)

(assert (=> d!44781 m!170481))

(declare-fun m!170483 () Bool)

(assert (=> d!44781 m!170483))

(declare-fun m!170485 () Bool)

(assert (=> d!44781 m!170485))

(declare-fun m!170487 () Bool)

(assert (=> b!141901 m!170487))

(declare-fun m!170489 () Bool)

(assert (=> b!141902 m!170489))

(assert (=> b!140698 d!44781))

(declare-fun d!44783 () Bool)

(assert (=> d!44783 (contains!923 (+!179 lt!73819 (tuple2!2699 lt!73821 (zeroValue!2790 newMap!16))) lt!73820)))

(declare-fun lt!74332 () Unit!4373)

(assert (=> d!44783 (= lt!74332 (choose!857 lt!73819 lt!73821 (zeroValue!2790 newMap!16) lt!73820))))

(assert (=> d!44783 (contains!923 lt!73819 lt!73820)))

(assert (=> d!44783 (= (addStillContains!96 lt!73819 lt!73821 (zeroValue!2790 newMap!16) lt!73820) lt!74332)))

(declare-fun bs!5956 () Bool)

(assert (= bs!5956 d!44783))

(assert (=> bs!5956 m!168353))

(assert (=> bs!5956 m!168353))

(assert (=> bs!5956 m!168369))

(declare-fun m!170491 () Bool)

(assert (=> bs!5956 m!170491))

(declare-fun m!170493 () Bool)

(assert (=> bs!5956 m!170493))

(assert (=> b!140698 d!44783))

(declare-fun d!44785 () Bool)

(assert (=> d!44785 (= (apply!120 (+!179 lt!73806 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73811) (apply!120 lt!73806 lt!73811))))

(declare-fun lt!74333 () Unit!4373)

(assert (=> d!44785 (= lt!74333 (choose!856 lt!73806 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73811))))

(declare-fun e!92467 () Bool)

(assert (=> d!44785 e!92467))

(declare-fun res!67686 () Bool)

(assert (=> d!44785 (=> (not res!67686) (not e!92467))))

(assert (=> d!44785 (= res!67686 (contains!923 lt!73806 lt!73811))))

(assert (=> d!44785 (= (addApplyDifferent!96 lt!73806 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73811) lt!74333)))

(declare-fun b!141903 () Bool)

(assert (=> b!141903 (= e!92467 (not (= lt!73811 lt!73807)))))

(assert (= (and d!44785 res!67686) b!141903))

(assert (=> d!44785 m!168375))

(declare-fun m!170495 () Bool)

(assert (=> d!44785 m!170495))

(assert (=> d!44785 m!166029))

(declare-fun m!170497 () Bool)

(assert (=> d!44785 m!170497))

(assert (=> d!44785 m!168363))

(assert (=> d!44785 m!168363))

(assert (=> d!44785 m!168365))

(assert (=> b!140698 d!44785))

(declare-fun d!44787 () Bool)

(assert (=> d!44787 (= (apply!120 lt!73804 lt!73805) (get!1531 (getValueByKey!176 (toList!888 lt!73804) lt!73805)))))

(declare-fun bs!5957 () Bool)

(assert (= bs!5957 d!44787))

(declare-fun m!170499 () Bool)

(assert (=> bs!5957 m!170499))

(assert (=> bs!5957 m!170499))

(declare-fun m!170501 () Bool)

(assert (=> bs!5957 m!170501))

(assert (=> b!140698 d!44787))

(declare-fun d!44789 () Bool)

(assert (=> d!44789 (= (apply!120 lt!73822 lt!73817) (get!1531 (getValueByKey!176 (toList!888 lt!73822) lt!73817)))))

(declare-fun bs!5958 () Bool)

(assert (= bs!5958 d!44789))

(declare-fun m!170503 () Bool)

(assert (=> bs!5958 m!170503))

(assert (=> bs!5958 m!170503))

(declare-fun m!170505 () Bool)

(assert (=> bs!5958 m!170505))

(assert (=> b!140698 d!44789))

(declare-fun d!44791 () Bool)

(assert (=> d!44791 (= (apply!120 lt!73806 lt!73811) (get!1531 (getValueByKey!176 (toList!888 lt!73806) lt!73811)))))

(declare-fun bs!5959 () Bool)

(assert (= bs!5959 d!44791))

(declare-fun m!170507 () Bool)

(assert (=> bs!5959 m!170507))

(assert (=> bs!5959 m!170507))

(declare-fun m!170509 () Bool)

(assert (=> bs!5959 m!170509))

(assert (=> b!140698 d!44791))

(declare-fun d!44793 () Bool)

(assert (=> d!44793 (= (apply!120 (+!179 lt!73804 (tuple2!2699 lt!73808 (zeroValue!2790 newMap!16))) lt!73805) (apply!120 lt!73804 lt!73805))))

(declare-fun lt!74334 () Unit!4373)

(assert (=> d!44793 (= lt!74334 (choose!856 lt!73804 lt!73808 (zeroValue!2790 newMap!16) lt!73805))))

(declare-fun e!92468 () Bool)

(assert (=> d!44793 e!92468))

(declare-fun res!67687 () Bool)

(assert (=> d!44793 (=> (not res!67687) (not e!92468))))

(assert (=> d!44793 (= res!67687 (contains!923 lt!73804 lt!73805))))

(assert (=> d!44793 (= (addApplyDifferent!96 lt!73804 lt!73808 (zeroValue!2790 newMap!16) lt!73805) lt!74334)))

(declare-fun b!141904 () Bool)

(assert (=> b!141904 (= e!92468 (not (= lt!73805 lt!73808)))))

(assert (= (and d!44793 res!67687) b!141904))

(assert (=> d!44793 m!168367))

(declare-fun m!170511 () Bool)

(assert (=> d!44793 m!170511))

(declare-fun m!170513 () Bool)

(assert (=> d!44793 m!170513))

(assert (=> d!44793 m!168355))

(assert (=> d!44793 m!168355))

(assert (=> d!44793 m!168357))

(assert (=> b!140698 d!44793))

(declare-fun d!44795 () Bool)

(declare-fun e!92469 () Bool)

(assert (=> d!44795 e!92469))

(declare-fun res!67688 () Bool)

(assert (=> d!44795 (=> (not res!67688) (not e!92469))))

(declare-fun lt!74338 () ListLongMap!1745)

(assert (=> d!44795 (= res!67688 (contains!923 lt!74338 (_1!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74335 () List!1745)

(assert (=> d!44795 (= lt!74338 (ListLongMap!1746 lt!74335))))

(declare-fun lt!74336 () Unit!4373)

(declare-fun lt!74337 () Unit!4373)

(assert (=> d!44795 (= lt!74336 lt!74337)))

(assert (=> d!44795 (= (getValueByKey!176 lt!74335 (_1!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44795 (= lt!74337 (lemmaContainsTupThenGetReturnValue!90 lt!74335 (_1!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44795 (= lt!74335 (insertStrictlySorted!93 (toList!888 lt!73806) (_1!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44795 (= (+!179 lt!73806 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74338)))

(declare-fun b!141905 () Bool)

(declare-fun res!67689 () Bool)

(assert (=> b!141905 (=> (not res!67689) (not e!92469))))

(assert (=> b!141905 (= res!67689 (= (getValueByKey!176 (toList!888 lt!74338) (_1!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141906 () Bool)

(assert (=> b!141906 (= e!92469 (contains!925 (toList!888 lt!74338) (tuple2!2699 lt!73807 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44795 res!67688) b!141905))

(assert (= (and b!141905 res!67689) b!141906))

(declare-fun m!170515 () Bool)

(assert (=> d!44795 m!170515))

(declare-fun m!170517 () Bool)

(assert (=> d!44795 m!170517))

(declare-fun m!170519 () Bool)

(assert (=> d!44795 m!170519))

(declare-fun m!170521 () Bool)

(assert (=> d!44795 m!170521))

(declare-fun m!170523 () Bool)

(assert (=> b!141905 m!170523))

(declare-fun m!170525 () Bool)

(assert (=> b!141906 m!170525))

(assert (=> b!140698 d!44795))

(assert (=> b!140816 d!44645))

(assert (=> b!140816 d!44467))

(declare-fun d!44797 () Bool)

(assert (=> d!44797 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140034 d!44797))

(declare-fun d!44799 () Bool)

(declare-fun res!67690 () Bool)

(declare-fun e!92470 () Bool)

(assert (=> d!44799 (=> res!67690 e!92470)))

(assert (=> d!44799 (= res!67690 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44799 (= (containsKey!180 (t!6329 (toList!888 lt!72907)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92470)))

(declare-fun b!141907 () Bool)

(declare-fun e!92471 () Bool)

(assert (=> b!141907 (= e!92470 e!92471)))

(declare-fun res!67691 () Bool)

(assert (=> b!141907 (=> (not res!67691) (not e!92471))))

(assert (=> b!141907 (= res!67691 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 lt!72907)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!141908 () Bool)

(assert (=> b!141908 (= e!92471 (containsKey!180 (t!6329 (t!6329 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44799 (not res!67690)) b!141907))

(assert (= (and b!141907 res!67691) b!141908))

(assert (=> b!141908 m!166121))

(declare-fun m!170527 () Bool)

(assert (=> b!141908 m!170527))

(assert (=> b!140590 d!44799))

(assert (=> b!140391 d!43699))

(assert (=> b!140391 d!43435))

(assert (=> b!140391 d!43725))

(declare-fun d!44801 () Bool)

(declare-fun res!67692 () Bool)

(declare-fun e!92472 () Bool)

(assert (=> d!44801 (=> res!67692 e!92472)))

(assert (=> d!44801 (= res!67692 (= (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!44801 (= (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92472)))

(declare-fun b!141909 () Bool)

(declare-fun e!92473 () Bool)

(assert (=> b!141909 (= e!92472 e!92473)))

(declare-fun res!67693 () Bool)

(assert (=> b!141909 (=> (not res!67693) (not e!92473))))

(assert (=> b!141909 (= res!67693 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141910 () Bool)

(assert (=> b!141910 (= e!92473 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44801 (not res!67692)) b!141909))

(assert (= (and b!141909 res!67693) b!141910))

(assert (=> d!44801 m!168763))

(assert (=> b!141910 m!166013))

(declare-fun m!170529 () Bool)

(assert (=> b!141910 m!170529))

(assert (=> b!140783 d!44801))

(declare-fun b!141911 () Bool)

(declare-fun e!92474 () List!1745)

(declare-fun call!15727 () List!1745)

(assert (=> b!141911 (= e!92474 call!15727)))

(declare-fun bm!15722 () Bool)

(declare-fun call!15725 () List!1745)

(assert (=> bm!15722 (= call!15727 call!15725)))

(declare-fun d!44803 () Bool)

(declare-fun e!92478 () Bool)

(assert (=> d!44803 e!92478))

(declare-fun res!67694 () Bool)

(assert (=> d!44803 (=> (not res!67694) (not e!92478))))

(declare-fun lt!74339 () List!1745)

(assert (=> d!44803 (= res!67694 (isStrictlySorted!325 lt!74339))))

(declare-fun e!92475 () List!1745)

(assert (=> d!44803 (= lt!74339 e!92475)))

(declare-fun c!26760 () Bool)

(assert (=> d!44803 (= c!26760 (and ((_ is Cons!1741) (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44803 (isStrictlySorted!325 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))))))

(assert (=> d!44803 (= (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74339)))

(declare-fun bm!15723 () Bool)

(declare-fun call!15726 () List!1745)

(assert (=> bm!15723 (= call!15725 call!15726)))

(declare-fun b!141912 () Bool)

(declare-fun e!92476 () List!1745)

(assert (=> b!141912 (= e!92475 e!92476)))

(declare-fun c!26759 () Bool)

(assert (=> b!141912 (= c!26759 (and ((_ is Cons!1741) (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141913 () Bool)

(assert (=> b!141913 (= e!92475 call!15726)))

(declare-fun bm!15724 () Bool)

(declare-fun e!92477 () List!1745)

(assert (=> bm!15724 (= call!15726 ($colon$colon!94 e!92477 (ite c!26760 (h!2348 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26758 () Bool)

(assert (=> bm!15724 (= c!26758 c!26760)))

(declare-fun b!141914 () Bool)

(declare-fun c!26761 () Bool)

(assert (=> b!141914 (= e!92477 (ite c!26759 (t!6329 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (ite c!26761 (Cons!1741 (h!2348 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (t!6329 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))))) Nil!1742)))))

(declare-fun b!141915 () Bool)

(assert (=> b!141915 (= e!92476 call!15725)))

(declare-fun b!141916 () Bool)

(assert (=> b!141916 (= e!92478 (contains!925 lt!74339 (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141917 () Bool)

(assert (=> b!141917 (= e!92477 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141918 () Bool)

(assert (=> b!141918 (= e!92474 call!15727)))

(declare-fun b!141919 () Bool)

(assert (=> b!141919 (= c!26761 (and ((_ is Cons!1741) (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!141919 (= e!92476 e!92474)))

(declare-fun b!141920 () Bool)

(declare-fun res!67695 () Bool)

(assert (=> b!141920 (=> (not res!67695) (not e!92478))))

(assert (=> b!141920 (= res!67695 (containsKey!180 lt!74339 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44803 c!26760) b!141913))

(assert (= (and d!44803 (not c!26760)) b!141912))

(assert (= (and b!141912 c!26759) b!141915))

(assert (= (and b!141912 (not c!26759)) b!141919))

(assert (= (and b!141919 c!26761) b!141918))

(assert (= (and b!141919 (not c!26761)) b!141911))

(assert (= (or b!141918 b!141911) bm!15722))

(assert (= (or b!141915 bm!15722) bm!15723))

(assert (= (or b!141913 bm!15723) bm!15724))

(assert (= (and bm!15724 c!26758) b!141917))

(assert (= (and bm!15724 (not c!26758)) b!141914))

(assert (= (and d!44803 res!67694) b!141920))

(assert (= (and b!141920 res!67695) b!141916))

(declare-fun m!170531 () Bool)

(assert (=> b!141917 m!170531))

(declare-fun m!170533 () Bool)

(assert (=> d!44803 m!170533))

(declare-fun m!170535 () Bool)

(assert (=> d!44803 m!170535))

(declare-fun m!170537 () Bool)

(assert (=> b!141920 m!170537))

(declare-fun m!170539 () Bool)

(assert (=> bm!15724 m!170539))

(declare-fun m!170541 () Bool)

(assert (=> b!141916 m!170541))

(assert (=> b!140023 d!44803))

(declare-fun d!44805 () Bool)

(declare-fun lt!74340 () Bool)

(assert (=> d!44805 (= lt!74340 (select (content!138 (toList!888 lt!73519)) (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))

(declare-fun e!92480 () Bool)

(assert (=> d!44805 (= lt!74340 e!92480)))

(declare-fun res!67696 () Bool)

(assert (=> d!44805 (=> (not res!67696) (not e!92480))))

(assert (=> d!44805 (= res!67696 ((_ is Cons!1741) (toList!888 lt!73519)))))

(assert (=> d!44805 (= (contains!925 (toList!888 lt!73519) (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) lt!74340)))

(declare-fun b!141921 () Bool)

(declare-fun e!92479 () Bool)

(assert (=> b!141921 (= e!92480 e!92479)))

(declare-fun res!67697 () Bool)

(assert (=> b!141921 (=> res!67697 e!92479)))

(assert (=> b!141921 (= res!67697 (= (h!2348 (toList!888 lt!73519)) (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))

(declare-fun b!141922 () Bool)

(assert (=> b!141922 (= e!92479 (contains!925 (t!6329 (toList!888 lt!73519)) (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44805 res!67696) b!141921))

(assert (= (and b!141921 (not res!67697)) b!141922))

(declare-fun m!170543 () Bool)

(assert (=> d!44805 m!170543))

(declare-fun m!170545 () Bool)

(assert (=> d!44805 m!170545))

(declare-fun m!170547 () Bool)

(assert (=> b!141922 m!170547))

(assert (=> b!140264 d!44805))

(declare-fun d!44807 () Bool)

(assert (=> d!44807 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5960 () Bool)

(assert (= bs!5960 d!44807))

(assert (=> bs!5960 m!166989))

(declare-fun m!170549 () Bool)

(assert (=> bs!5960 m!170549))

(assert (=> b!140684 d!44807))

(declare-fun b!141926 () Bool)

(declare-fun e!92482 () Option!182)

(assert (=> b!141926 (= e!92482 None!180)))

(declare-fun b!141923 () Bool)

(declare-fun e!92481 () Option!182)

(assert (=> b!141923 (= e!92481 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73332)))))))

(declare-fun b!141924 () Bool)

(assert (=> b!141924 (= e!92481 e!92482)))

(declare-fun c!26763 () Bool)

(assert (=> b!141924 (= c!26763 (and ((_ is Cons!1741) (toList!888 lt!73332)) (not (= (_1!1360 (h!2348 (toList!888 lt!73332))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!44809 () Bool)

(declare-fun c!26762 () Bool)

(assert (=> d!44809 (= c!26762 (and ((_ is Cons!1741) (toList!888 lt!73332)) (= (_1!1360 (h!2348 (toList!888 lt!73332))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44809 (= (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92481)))

(declare-fun b!141925 () Bool)

(assert (=> b!141925 (= e!92482 (getValueByKey!176 (t!6329 (toList!888 lt!73332)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44809 c!26762) b!141923))

(assert (= (and d!44809 (not c!26762)) b!141924))

(assert (= (and b!141924 c!26763) b!141925))

(assert (= (and b!141924 (not c!26763)) b!141926))

(assert (=> b!141925 m!166385))

(declare-fun m!170551 () Bool)

(assert (=> b!141925 m!170551))

(assert (=> b!140684 d!44809))

(declare-fun b!141927 () Bool)

(declare-fun lt!74347 () Unit!4373)

(declare-fun lt!74343 () Unit!4373)

(assert (=> b!141927 (= lt!74347 lt!74343)))

(declare-fun lt!74341 () (_ BitVec 64))

(declare-fun lt!74342 () V!3555)

(declare-fun lt!74345 () (_ BitVec 64))

(declare-fun lt!74346 () ListLongMap!1745)

(assert (=> b!141927 (not (contains!923 (+!179 lt!74346 (tuple2!2699 lt!74345 lt!74342)) lt!74341))))

(assert (=> b!141927 (= lt!74343 (addStillNotContains!64 lt!74346 lt!74345 lt!74342 lt!74341))))

(assert (=> b!141927 (= lt!74341 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141927 (= lt!74342 (get!1528 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141927 (= lt!74345 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15728 () ListLongMap!1745)

(assert (=> b!141927 (= lt!74346 call!15728)))

(declare-fun e!92483 () ListLongMap!1745)

(assert (=> b!141927 (= e!92483 (+!179 call!15728 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141929 () Bool)

(declare-fun e!92485 () ListLongMap!1745)

(assert (=> b!141929 (= e!92485 (ListLongMap!1746 Nil!1742))))

(declare-fun b!141930 () Bool)

(declare-fun e!92489 () Bool)

(declare-fun e!92484 () Bool)

(assert (=> b!141930 (= e!92489 e!92484)))

(assert (=> b!141930 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67701 () Bool)

(declare-fun lt!74344 () ListLongMap!1745)

(assert (=> b!141930 (= res!67701 (contains!923 lt!74344 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141930 (=> (not res!67701) (not e!92484))))

(declare-fun b!141931 () Bool)

(declare-fun res!67698 () Bool)

(declare-fun e!92488 () Bool)

(assert (=> b!141931 (=> (not res!67698) (not e!92488))))

(assert (=> b!141931 (= res!67698 (not (contains!923 lt!74344 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141932 () Bool)

(declare-fun e!92486 () Bool)

(assert (=> b!141932 (= e!92489 e!92486)))

(declare-fun c!26766 () Bool)

(assert (=> b!141932 (= c!26766 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!141933 () Bool)

(assert (=> b!141933 (= e!92485 e!92483)))

(declare-fun c!26767 () Bool)

(assert (=> b!141933 (= c!26767 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141934 () Bool)

(declare-fun e!92487 () Bool)

(assert (=> b!141934 (= e!92487 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141934 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15725 () Bool)

(assert (=> bm!15725 (= call!15728 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141935 () Bool)

(assert (=> b!141935 (= e!92486 (= lt!74344 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141936 () Bool)

(assert (=> b!141936 (= e!92488 e!92489)))

(declare-fun c!26764 () Bool)

(assert (=> b!141936 (= c!26764 e!92487)))

(declare-fun res!67700 () Bool)

(assert (=> b!141936 (=> (not res!67700) (not e!92487))))

(assert (=> b!141936 (= res!67700 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44811 () Bool)

(assert (=> d!44811 e!92488))

(declare-fun res!67699 () Bool)

(assert (=> d!44811 (=> (not res!67699) (not e!92488))))

(assert (=> d!44811 (= res!67699 (not (contains!923 lt!74344 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44811 (= lt!74344 e!92485)))

(declare-fun c!26765 () Bool)

(assert (=> d!44811 (= c!26765 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44811 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44811 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74344)))

(declare-fun b!141928 () Bool)

(assert (=> b!141928 (= e!92486 (isEmpty!417 lt!74344))))

(declare-fun b!141937 () Bool)

(assert (=> b!141937 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!141937 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 lt!72983)))))

(assert (=> b!141937 (= e!92484 (= (apply!120 lt!74344 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 lt!72983) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141938 () Bool)

(assert (=> b!141938 (= e!92483 call!15728)))

(assert (= (and d!44811 c!26765) b!141929))

(assert (= (and d!44811 (not c!26765)) b!141933))

(assert (= (and b!141933 c!26767) b!141927))

(assert (= (and b!141933 (not c!26767)) b!141938))

(assert (= (or b!141927 b!141938) bm!15725))

(assert (= (and d!44811 res!67699) b!141931))

(assert (= (and b!141931 res!67698) b!141936))

(assert (= (and b!141936 res!67700) b!141934))

(assert (= (and b!141936 c!26764) b!141930))

(assert (= (and b!141936 (not c!26764)) b!141932))

(assert (= (and b!141930 res!67701) b!141937))

(assert (= (and b!141932 c!26766) b!141935))

(assert (= (and b!141932 (not c!26766)) b!141928))

(declare-fun b_lambda!6361 () Bool)

(assert (=> (not b_lambda!6361) (not b!141927)))

(assert (=> b!141927 t!6337))

(declare-fun b_and!8879 () Bool)

(assert (= b_and!8875 (and (=> t!6337 result!4191) b_and!8879)))

(assert (=> b!141927 t!6339))

(declare-fun b_and!8881 () Bool)

(assert (= b_and!8877 (and (=> t!6339 result!4193) b_and!8881)))

(declare-fun b_lambda!6363 () Bool)

(assert (=> (not b_lambda!6363) (not b!141937)))

(assert (=> b!141937 t!6337))

(declare-fun b_and!8883 () Bool)

(assert (= b_and!8879 (and (=> t!6337 result!4191) b_and!8883)))

(assert (=> b!141937 t!6339))

(declare-fun b_and!8885 () Bool)

(assert (= b_and!8881 (and (=> t!6339 result!4193) b_and!8885)))

(declare-fun m!170553 () Bool)

(assert (=> b!141931 m!170553))

(assert (=> b!141933 m!166385))

(assert (=> b!141933 m!166385))

(assert (=> b!141933 m!166389))

(declare-fun m!170555 () Bool)

(assert (=> d!44811 m!170555))

(assert (=> d!44811 m!166429))

(assert (=> b!141927 m!166443))

(declare-fun m!170557 () Bool)

(assert (=> b!141927 m!170557))

(declare-fun m!170559 () Bool)

(assert (=> b!141927 m!170559))

(assert (=> b!141927 m!170557))

(assert (=> b!141927 m!167927))

(declare-fun m!170561 () Bool)

(assert (=> b!141927 m!170561))

(assert (=> b!141927 m!167927))

(assert (=> b!141927 m!166443))

(assert (=> b!141927 m!167929))

(declare-fun m!170563 () Bool)

(assert (=> b!141927 m!170563))

(assert (=> b!141927 m!166385))

(assert (=> b!141934 m!166385))

(assert (=> b!141934 m!166385))

(assert (=> b!141934 m!166389))

(declare-fun m!170565 () Bool)

(assert (=> bm!15725 m!170565))

(declare-fun m!170567 () Bool)

(assert (=> b!141928 m!170567))

(assert (=> b!141937 m!166443))

(assert (=> b!141937 m!166385))

(declare-fun m!170569 () Bool)

(assert (=> b!141937 m!170569))

(assert (=> b!141937 m!167927))

(assert (=> b!141937 m!167927))

(assert (=> b!141937 m!166443))

(assert (=> b!141937 m!167929))

(assert (=> b!141937 m!166385))

(assert (=> b!141930 m!166385))

(assert (=> b!141930 m!166385))

(declare-fun m!170571 () Bool)

(assert (=> b!141930 m!170571))

(assert (=> b!141935 m!170565))

(assert (=> b!140469 d!44811))

(declare-fun d!44813 () Bool)

(declare-fun e!92490 () Bool)

(assert (=> d!44813 e!92490))

(declare-fun res!67702 () Bool)

(assert (=> d!44813 (=> (not res!67702) (not e!92490))))

(declare-fun lt!74351 () ListLongMap!1745)

(assert (=> d!44813 (= res!67702 (contains!923 lt!74351 (_1!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))))))

(declare-fun lt!74348 () List!1745)

(assert (=> d!44813 (= lt!74351 (ListLongMap!1746 lt!74348))))

(declare-fun lt!74349 () Unit!4373)

(declare-fun lt!74350 () Unit!4373)

(assert (=> d!44813 (= lt!74349 lt!74350)))

(assert (=> d!44813 (= (getValueByKey!176 lt!74348 (_1!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))))))

(assert (=> d!44813 (= lt!74350 (lemmaContainsTupThenGetReturnValue!90 lt!74348 (_1!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))))))

(assert (=> d!44813 (= lt!74348 (insertStrictlySorted!93 (toList!888 lt!73678) (_1!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))))))

(assert (=> d!44813 (= (+!179 lt!73678 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))) lt!74351)))

(declare-fun b!141939 () Bool)

(declare-fun res!67703 () Bool)

(assert (=> b!141939 (=> (not res!67703) (not e!92490))))

(assert (=> b!141939 (= res!67703 (= (getValueByKey!176 (toList!888 lt!74351) (_1!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))))))))

(declare-fun b!141940 () Bool)

(assert (=> b!141940 (= e!92490 (contains!925 (toList!888 lt!74351) (tuple2!2699 lt!73674 (minValue!2790 newMap!16))))))

(assert (= (and d!44813 res!67702) b!141939))

(assert (= (and b!141939 res!67703) b!141940))

(declare-fun m!170573 () Bool)

(assert (=> d!44813 m!170573))

(declare-fun m!170575 () Bool)

(assert (=> d!44813 m!170575))

(declare-fun m!170577 () Bool)

(assert (=> d!44813 m!170577))

(declare-fun m!170579 () Bool)

(assert (=> d!44813 m!170579))

(declare-fun m!170581 () Bool)

(assert (=> b!141939 m!170581))

(declare-fun m!170583 () Bool)

(assert (=> b!141940 m!170583))

(assert (=> b!140469 d!44813))

(declare-fun d!44815 () Bool)

(assert (=> d!44815 (= (apply!120 lt!73660 lt!73661) (get!1531 (getValueByKey!176 (toList!888 lt!73660) lt!73661)))))

(declare-fun bs!5961 () Bool)

(assert (= bs!5961 d!44815))

(declare-fun m!170585 () Bool)

(assert (=> bs!5961 m!170585))

(assert (=> bs!5961 m!170585))

(declare-fun m!170587 () Bool)

(assert (=> bs!5961 m!170587))

(assert (=> b!140469 d!44815))

(declare-fun d!44817 () Bool)

(assert (=> d!44817 (contains!923 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))) lt!73676)))

(declare-fun lt!74352 () Unit!4373)

(assert (=> d!44817 (= lt!74352 (choose!857 lt!73675 lt!73677 (zeroValue!2790 newMap!16) lt!73676))))

(assert (=> d!44817 (contains!923 lt!73675 lt!73676)))

(assert (=> d!44817 (= (addStillContains!96 lt!73675 lt!73677 (zeroValue!2790 newMap!16) lt!73676) lt!74352)))

(declare-fun bs!5962 () Bool)

(assert (= bs!5962 d!44817))

(assert (=> bs!5962 m!167889))

(assert (=> bs!5962 m!167889))

(assert (=> bs!5962 m!167905))

(declare-fun m!170589 () Bool)

(assert (=> bs!5962 m!170589))

(declare-fun m!170591 () Bool)

(assert (=> bs!5962 m!170591))

(assert (=> b!140469 d!44817))

(declare-fun d!44819 () Bool)

(assert (=> d!44819 (= (apply!120 (+!179 lt!73660 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))) lt!73661) (apply!120 lt!73660 lt!73661))))

(declare-fun lt!74353 () Unit!4373)

(assert (=> d!44819 (= lt!74353 (choose!856 lt!73660 lt!73664 (zeroValue!2790 newMap!16) lt!73661))))

(declare-fun e!92491 () Bool)

(assert (=> d!44819 e!92491))

(declare-fun res!67704 () Bool)

(assert (=> d!44819 (=> (not res!67704) (not e!92491))))

(assert (=> d!44819 (= res!67704 (contains!923 lt!73660 lt!73661))))

(assert (=> d!44819 (= (addApplyDifferent!96 lt!73660 lt!73664 (zeroValue!2790 newMap!16) lt!73661) lt!74353)))

(declare-fun b!141941 () Bool)

(assert (=> b!141941 (= e!92491 (not (= lt!73661 lt!73664)))))

(assert (= (and d!44819 res!67704) b!141941))

(assert (=> d!44819 m!167903))

(declare-fun m!170593 () Bool)

(assert (=> d!44819 m!170593))

(declare-fun m!170595 () Bool)

(assert (=> d!44819 m!170595))

(assert (=> d!44819 m!167891))

(assert (=> d!44819 m!167891))

(assert (=> d!44819 m!167893))

(assert (=> b!140469 d!44819))

(declare-fun d!44821 () Bool)

(assert (=> d!44821 (= (apply!120 (+!179 lt!73678 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))) lt!73673) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73678 (tuple2!2699 lt!73674 (minValue!2790 newMap!16)))) lt!73673)))))

(declare-fun bs!5963 () Bool)

(assert (= bs!5963 d!44821))

(declare-fun m!170597 () Bool)

(assert (=> bs!5963 m!170597))

(assert (=> bs!5963 m!170597))

(declare-fun m!170599 () Bool)

(assert (=> bs!5963 m!170599))

(assert (=> b!140469 d!44821))

(declare-fun d!44823 () Bool)

(declare-fun e!92492 () Bool)

(assert (=> d!44823 e!92492))

(declare-fun res!67705 () Bool)

(assert (=> d!44823 (=> (not res!67705) (not e!92492))))

(declare-fun lt!74357 () ListLongMap!1745)

(assert (=> d!44823 (= res!67705 (contains!923 lt!74357 (_1!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74354 () List!1745)

(assert (=> d!44823 (= lt!74357 (ListLongMap!1746 lt!74354))))

(declare-fun lt!74355 () Unit!4373)

(declare-fun lt!74356 () Unit!4373)

(assert (=> d!44823 (= lt!74355 lt!74356)))

(assert (=> d!44823 (= (getValueByKey!176 lt!74354 (_1!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44823 (= lt!74356 (lemmaContainsTupThenGetReturnValue!90 lt!74354 (_1!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44823 (= lt!74354 (insertStrictlySorted!93 (toList!888 lt!73660) (_1!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44823 (= (+!179 lt!73660 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))) lt!74357)))

(declare-fun b!141942 () Bool)

(declare-fun res!67706 () Bool)

(assert (=> b!141942 (=> (not res!67706) (not e!92492))))

(assert (=> b!141942 (= res!67706 (= (getValueByKey!176 (toList!888 lt!74357) (_1!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141943 () Bool)

(assert (=> b!141943 (= e!92492 (contains!925 (toList!888 lt!74357) (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44823 res!67705) b!141942))

(assert (= (and b!141942 res!67706) b!141943))

(declare-fun m!170601 () Bool)

(assert (=> d!44823 m!170601))

(declare-fun m!170603 () Bool)

(assert (=> d!44823 m!170603))

(declare-fun m!170605 () Bool)

(assert (=> d!44823 m!170605))

(declare-fun m!170607 () Bool)

(assert (=> d!44823 m!170607))

(declare-fun m!170609 () Bool)

(assert (=> b!141942 m!170609))

(declare-fun m!170611 () Bool)

(assert (=> b!141943 m!170611))

(assert (=> b!140469 d!44823))

(declare-fun d!44825 () Bool)

(assert (=> d!44825 (= (apply!120 (+!179 lt!73662 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))) lt!73667) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73662 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))) lt!73667)))))

(declare-fun bs!5964 () Bool)

(assert (= bs!5964 d!44825))

(declare-fun m!170613 () Bool)

(assert (=> bs!5964 m!170613))

(assert (=> bs!5964 m!170613))

(declare-fun m!170615 () Bool)

(assert (=> bs!5964 m!170615))

(assert (=> b!140469 d!44825))

(declare-fun d!44827 () Bool)

(assert (=> d!44827 (= (apply!120 lt!73662 lt!73667) (get!1531 (getValueByKey!176 (toList!888 lt!73662) lt!73667)))))

(declare-fun bs!5965 () Bool)

(assert (= bs!5965 d!44827))

(declare-fun m!170617 () Bool)

(assert (=> bs!5965 m!170617))

(assert (=> bs!5965 m!170617))

(declare-fun m!170619 () Bool)

(assert (=> bs!5965 m!170619))

(assert (=> b!140469 d!44827))

(declare-fun d!44829 () Bool)

(declare-fun e!92493 () Bool)

(assert (=> d!44829 e!92493))

(declare-fun res!67707 () Bool)

(assert (=> d!44829 (=> (not res!67707) (not e!92493))))

(declare-fun lt!74361 () ListLongMap!1745)

(assert (=> d!44829 (= res!67707 (contains!923 lt!74361 (_1!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74358 () List!1745)

(assert (=> d!44829 (= lt!74361 (ListLongMap!1746 lt!74358))))

(declare-fun lt!74359 () Unit!4373)

(declare-fun lt!74360 () Unit!4373)

(assert (=> d!44829 (= lt!74359 lt!74360)))

(assert (=> d!44829 (= (getValueByKey!176 lt!74358 (_1!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44829 (= lt!74360 (lemmaContainsTupThenGetReturnValue!90 lt!74358 (_1!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44829 (= lt!74358 (insertStrictlySorted!93 (toList!888 lt!73675) (_1!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44829 (= (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))) lt!74361)))

(declare-fun b!141944 () Bool)

(declare-fun res!67708 () Bool)

(assert (=> b!141944 (=> (not res!67708) (not e!92493))))

(assert (=> b!141944 (= res!67708 (= (getValueByKey!176 (toList!888 lt!74361) (_1!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141945 () Bool)

(assert (=> b!141945 (= e!92493 (contains!925 (toList!888 lt!74361) (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44829 res!67707) b!141944))

(assert (= (and b!141944 res!67708) b!141945))

(declare-fun m!170621 () Bool)

(assert (=> d!44829 m!170621))

(declare-fun m!170623 () Bool)

(assert (=> d!44829 m!170623))

(declare-fun m!170625 () Bool)

(assert (=> d!44829 m!170625))

(declare-fun m!170627 () Bool)

(assert (=> d!44829 m!170627))

(declare-fun m!170629 () Bool)

(assert (=> b!141944 m!170629))

(declare-fun m!170631 () Bool)

(assert (=> b!141945 m!170631))

(assert (=> b!140469 d!44829))

(declare-fun d!44831 () Bool)

(assert (=> d!44831 (= (apply!120 (+!179 lt!73662 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))) lt!73667) (apply!120 lt!73662 lt!73667))))

(declare-fun lt!74362 () Unit!4373)

(assert (=> d!44831 (= lt!74362 (choose!856 lt!73662 lt!73663 (minValue!2790 newMap!16) lt!73667))))

(declare-fun e!92494 () Bool)

(assert (=> d!44831 e!92494))

(declare-fun res!67709 () Bool)

(assert (=> d!44831 (=> (not res!67709) (not e!92494))))

(assert (=> d!44831 (= res!67709 (contains!923 lt!73662 lt!73667))))

(assert (=> d!44831 (= (addApplyDifferent!96 lt!73662 lt!73663 (minValue!2790 newMap!16) lt!73667) lt!74362)))

(declare-fun b!141946 () Bool)

(assert (=> b!141946 (= e!92494 (not (= lt!73667 lt!73663)))))

(assert (= (and d!44831 res!67709) b!141946))

(assert (=> d!44831 m!167911))

(declare-fun m!170633 () Bool)

(assert (=> d!44831 m!170633))

(declare-fun m!170635 () Bool)

(assert (=> d!44831 m!170635))

(assert (=> d!44831 m!167899))

(assert (=> d!44831 m!167899))

(assert (=> d!44831 m!167901))

(assert (=> b!140469 d!44831))

(declare-fun d!44833 () Bool)

(declare-fun e!92495 () Bool)

(assert (=> d!44833 e!92495))

(declare-fun res!67710 () Bool)

(assert (=> d!44833 (=> res!67710 e!92495)))

(declare-fun lt!74365 () Bool)

(assert (=> d!44833 (= res!67710 (not lt!74365))))

(declare-fun lt!74363 () Bool)

(assert (=> d!44833 (= lt!74365 lt!74363)))

(declare-fun lt!74364 () Unit!4373)

(declare-fun e!92496 () Unit!4373)

(assert (=> d!44833 (= lt!74364 e!92496)))

(declare-fun c!26768 () Bool)

(assert (=> d!44833 (= c!26768 lt!74363)))

(assert (=> d!44833 (= lt!74363 (containsKey!180 (toList!888 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))) lt!73676))))

(assert (=> d!44833 (= (contains!923 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16))) lt!73676) lt!74365)))

(declare-fun b!141947 () Bool)

(declare-fun lt!74366 () Unit!4373)

(assert (=> b!141947 (= e!92496 lt!74366)))

(assert (=> b!141947 (= lt!74366 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))) lt!73676))))

(assert (=> b!141947 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))) lt!73676))))

(declare-fun b!141948 () Bool)

(declare-fun Unit!4481 () Unit!4373)

(assert (=> b!141948 (= e!92496 Unit!4481)))

(declare-fun b!141949 () Bool)

(assert (=> b!141949 (= e!92495 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73675 (tuple2!2699 lt!73677 (zeroValue!2790 newMap!16)))) lt!73676)))))

(assert (= (and d!44833 c!26768) b!141947))

(assert (= (and d!44833 (not c!26768)) b!141948))

(assert (= (and d!44833 (not res!67710)) b!141949))

(declare-fun m!170637 () Bool)

(assert (=> d!44833 m!170637))

(declare-fun m!170639 () Bool)

(assert (=> b!141947 m!170639))

(declare-fun m!170641 () Bool)

(assert (=> b!141947 m!170641))

(assert (=> b!141947 m!170641))

(declare-fun m!170643 () Bool)

(assert (=> b!141947 m!170643))

(assert (=> b!141949 m!170641))

(assert (=> b!141949 m!170641))

(assert (=> b!141949 m!170643))

(assert (=> b!140469 d!44833))

(declare-fun d!44835 () Bool)

(assert (=> d!44835 (= (apply!120 (+!179 lt!73660 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16))) lt!73661) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73660 (tuple2!2699 lt!73664 (zeroValue!2790 newMap!16)))) lt!73661)))))

(declare-fun bs!5966 () Bool)

(assert (= bs!5966 d!44835))

(declare-fun m!170645 () Bool)

(assert (=> bs!5966 m!170645))

(assert (=> bs!5966 m!170645))

(declare-fun m!170647 () Bool)

(assert (=> bs!5966 m!170647))

(assert (=> b!140469 d!44835))

(declare-fun d!44837 () Bool)

(assert (=> d!44837 (= (apply!120 lt!73678 lt!73673) (get!1531 (getValueByKey!176 (toList!888 lt!73678) lt!73673)))))

(declare-fun bs!5967 () Bool)

(assert (= bs!5967 d!44837))

(declare-fun m!170649 () Bool)

(assert (=> bs!5967 m!170649))

(assert (=> bs!5967 m!170649))

(declare-fun m!170651 () Bool)

(assert (=> bs!5967 m!170651))

(assert (=> b!140469 d!44837))

(declare-fun d!44839 () Bool)

(assert (=> d!44839 (= (apply!120 (+!179 lt!73678 (tuple2!2699 lt!73674 (minValue!2790 newMap!16))) lt!73673) (apply!120 lt!73678 lt!73673))))

(declare-fun lt!74367 () Unit!4373)

(assert (=> d!44839 (= lt!74367 (choose!856 lt!73678 lt!73674 (minValue!2790 newMap!16) lt!73673))))

(declare-fun e!92497 () Bool)

(assert (=> d!44839 e!92497))

(declare-fun res!67711 () Bool)

(assert (=> d!44839 (=> (not res!67711) (not e!92497))))

(assert (=> d!44839 (= res!67711 (contains!923 lt!73678 lt!73673))))

(assert (=> d!44839 (= (addApplyDifferent!96 lt!73678 lt!73674 (minValue!2790 newMap!16) lt!73673) lt!74367)))

(declare-fun b!141950 () Bool)

(assert (=> b!141950 (= e!92497 (not (= lt!73673 lt!73674)))))

(assert (= (and d!44839 res!67711) b!141950))

(assert (=> d!44839 m!167897))

(declare-fun m!170653 () Bool)

(assert (=> d!44839 m!170653))

(declare-fun m!170655 () Bool)

(assert (=> d!44839 m!170655))

(assert (=> d!44839 m!167907))

(assert (=> d!44839 m!167907))

(assert (=> d!44839 m!167909))

(assert (=> b!140469 d!44839))

(declare-fun d!44841 () Bool)

(declare-fun e!92498 () Bool)

(assert (=> d!44841 e!92498))

(declare-fun res!67712 () Bool)

(assert (=> d!44841 (=> (not res!67712) (not e!92498))))

(declare-fun lt!74371 () ListLongMap!1745)

(assert (=> d!44841 (= res!67712 (contains!923 lt!74371 (_1!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))))))

(declare-fun lt!74368 () List!1745)

(assert (=> d!44841 (= lt!74371 (ListLongMap!1746 lt!74368))))

(declare-fun lt!74369 () Unit!4373)

(declare-fun lt!74370 () Unit!4373)

(assert (=> d!44841 (= lt!74369 lt!74370)))

(assert (=> d!44841 (= (getValueByKey!176 lt!74368 (_1!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))))))

(assert (=> d!44841 (= lt!74370 (lemmaContainsTupThenGetReturnValue!90 lt!74368 (_1!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))))))

(assert (=> d!44841 (= lt!74368 (insertStrictlySorted!93 (toList!888 lt!73662) (_1!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))))))

(assert (=> d!44841 (= (+!179 lt!73662 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))) lt!74371)))

(declare-fun b!141951 () Bool)

(declare-fun res!67713 () Bool)

(assert (=> b!141951 (=> (not res!67713) (not e!92498))))

(assert (=> b!141951 (= res!67713 (= (getValueByKey!176 (toList!888 lt!74371) (_1!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73663 (minValue!2790 newMap!16))))))))

(declare-fun b!141952 () Bool)

(assert (=> b!141952 (= e!92498 (contains!925 (toList!888 lt!74371) (tuple2!2699 lt!73663 (minValue!2790 newMap!16))))))

(assert (= (and d!44841 res!67712) b!141951))

(assert (= (and b!141951 res!67713) b!141952))

(declare-fun m!170657 () Bool)

(assert (=> d!44841 m!170657))

(declare-fun m!170659 () Bool)

(assert (=> d!44841 m!170659))

(declare-fun m!170661 () Bool)

(assert (=> d!44841 m!170661))

(declare-fun m!170663 () Bool)

(assert (=> d!44841 m!170663))

(declare-fun m!170665 () Bool)

(assert (=> b!141951 m!170665))

(declare-fun m!170667 () Bool)

(assert (=> b!141952 m!170667))

(assert (=> b!140469 d!44841))

(declare-fun d!44843 () Bool)

(declare-fun e!92499 () Bool)

(assert (=> d!44843 e!92499))

(declare-fun res!67714 () Bool)

(assert (=> d!44843 (=> res!67714 e!92499)))

(declare-fun lt!74374 () Bool)

(assert (=> d!44843 (= res!67714 (not lt!74374))))

(declare-fun lt!74372 () Bool)

(assert (=> d!44843 (= lt!74374 lt!74372)))

(declare-fun lt!74373 () Unit!4373)

(declare-fun e!92500 () Unit!4373)

(assert (=> d!44843 (= lt!74373 e!92500)))

(declare-fun c!26769 () Bool)

(assert (=> d!44843 (= c!26769 lt!74372)))

(assert (=> d!44843 (= lt!74372 (containsKey!180 (toList!888 lt!73615) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44843 (= (contains!923 lt!73615 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74374)))

(declare-fun b!141953 () Bool)

(declare-fun lt!74375 () Unit!4373)

(assert (=> b!141953 (= e!92500 lt!74375)))

(assert (=> b!141953 (= lt!74375 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73615) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141953 (isDefined!129 (getValueByKey!176 (toList!888 lt!73615) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141954 () Bool)

(declare-fun Unit!4482 () Unit!4373)

(assert (=> b!141954 (= e!92500 Unit!4482)))

(declare-fun b!141955 () Bool)

(assert (=> b!141955 (= e!92499 (isDefined!129 (getValueByKey!176 (toList!888 lt!73615) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44843 c!26769) b!141953))

(assert (= (and d!44843 (not c!26769)) b!141954))

(assert (= (and d!44843 (not res!67714)) b!141955))

(declare-fun m!170669 () Bool)

(assert (=> d!44843 m!170669))

(declare-fun m!170671 () Bool)

(assert (=> b!141953 m!170671))

(declare-fun m!170673 () Bool)

(assert (=> b!141953 m!170673))

(assert (=> b!141953 m!170673))

(declare-fun m!170675 () Bool)

(assert (=> b!141953 m!170675))

(assert (=> b!141955 m!170673))

(assert (=> b!141955 m!170673))

(assert (=> b!141955 m!170675))

(assert (=> bm!15586 d!44843))

(declare-fun d!44845 () Bool)

(assert (=> d!44845 (= (get!1531 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43647 d!44845))

(declare-fun b!141959 () Bool)

(declare-fun e!92502 () Option!182)

(assert (=> b!141959 (= e!92502 None!180)))

(declare-fun b!141956 () Bool)

(declare-fun e!92501 () Option!182)

(assert (=> b!141956 (= e!92501 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73306)))))))

(declare-fun b!141957 () Bool)

(assert (=> b!141957 (= e!92501 e!92502)))

(declare-fun c!26771 () Bool)

(assert (=> b!141957 (= c!26771 (and ((_ is Cons!1741) (toList!888 lt!73306)) (not (= (_1!1360 (h!2348 (toList!888 lt!73306))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!44847 () Bool)

(declare-fun c!26770 () Bool)

(assert (=> d!44847 (= c!26770 (and ((_ is Cons!1741) (toList!888 lt!73306)) (= (_1!1360 (h!2348 (toList!888 lt!73306))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44847 (= (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000) e!92501)))

(declare-fun b!141958 () Bool)

(assert (=> b!141958 (= e!92502 (getValueByKey!176 (t!6329 (toList!888 lt!73306)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44847 c!26770) b!141956))

(assert (= (and d!44847 (not c!26770)) b!141957))

(assert (= (and b!141957 c!26771) b!141958))

(assert (= (and b!141957 (not c!26771)) b!141959))

(declare-fun m!170677 () Bool)

(assert (=> b!141958 m!170677))

(assert (=> d!43647 d!44847))

(declare-fun d!44849 () Bool)

(assert (=> d!44849 (= (inRange!0 (ite c!26233 (index!3279 lt!73447) (index!3282 lt!73447)) (mask!7280 newMap!16)) (and (bvsge (ite c!26233 (index!3279 lt!73447) (index!3282 lt!73447)) #b00000000000000000000000000000000) (bvslt (ite c!26233 (index!3279 lt!73447) (index!3282 lt!73447)) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15566 d!44849))

(declare-fun d!44851 () Bool)

(declare-fun lt!74376 () Bool)

(assert (=> d!44851 (= lt!74376 (select (content!138 (toList!888 lt!73777)) (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))

(declare-fun e!92504 () Bool)

(assert (=> d!44851 (= lt!74376 e!92504)))

(declare-fun res!67715 () Bool)

(assert (=> d!44851 (=> (not res!67715) (not e!92504))))

(assert (=> d!44851 (= res!67715 ((_ is Cons!1741) (toList!888 lt!73777)))))

(assert (=> d!44851 (= (contains!925 (toList!888 lt!73777) (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) lt!74376)))

(declare-fun b!141960 () Bool)

(declare-fun e!92503 () Bool)

(assert (=> b!141960 (= e!92504 e!92503)))

(declare-fun res!67716 () Bool)

(assert (=> b!141960 (=> res!67716 e!92503)))

(assert (=> b!141960 (= res!67716 (= (h!2348 (toList!888 lt!73777)) (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))

(declare-fun b!141961 () Bool)

(assert (=> b!141961 (= e!92503 (contains!925 (t!6329 (toList!888 lt!73777)) (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44851 res!67715) b!141960))

(assert (= (and b!141960 (not res!67716)) b!141961))

(declare-fun m!170679 () Bool)

(assert (=> d!44851 m!170679))

(declare-fun m!170681 () Bool)

(assert (=> d!44851 m!170681))

(declare-fun m!170683 () Bool)

(assert (=> b!141961 m!170683))

(assert (=> b!140660 d!44851))

(declare-fun d!44853 () Bool)

(declare-fun lt!74377 () Bool)

(assert (=> d!44853 (= lt!74377 (select (content!137 (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!92506 () Bool)

(assert (=> d!44853 (= lt!74377 e!92506)))

(declare-fun res!67717 () Bool)

(assert (=> d!44853 (=> (not res!67717) (not e!92506))))

(assert (=> d!44853 (= res!67717 ((_ is Cons!1742) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)))))

(assert (=> d!44853 (= (contains!924 (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!74377)))

(declare-fun b!141962 () Bool)

(declare-fun e!92505 () Bool)

(assert (=> b!141962 (= e!92506 e!92505)))

(declare-fun res!67718 () Bool)

(assert (=> b!141962 (=> res!67718 e!92505)))

(assert (=> b!141962 (= res!67718 (= (h!2349 (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141963 () Bool)

(assert (=> b!141963 (= e!92505 (contains!924 (t!6330 (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!44853 res!67717) b!141962))

(assert (= (and b!141962 (not res!67718)) b!141963))

(declare-fun m!170685 () Bool)

(assert (=> d!44853 m!170685))

(assert (=> d!44853 m!167999))

(declare-fun m!170687 () Bool)

(assert (=> d!44853 m!170687))

(assert (=> b!141963 m!167999))

(declare-fun m!170689 () Bool)

(assert (=> b!141963 m!170689))

(assert (=> b!140524 d!44853))

(declare-fun d!44855 () Bool)

(declare-fun lt!74378 () Bool)

(assert (=> d!44855 (= lt!74378 (select (content!138 (t!6329 (toList!888 lt!73023))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!92508 () Bool)

(assert (=> d!44855 (= lt!74378 e!92508)))

(declare-fun res!67719 () Bool)

(assert (=> d!44855 (=> (not res!67719) (not e!92508))))

(assert (=> d!44855 (= res!67719 ((_ is Cons!1741) (t!6329 (toList!888 lt!73023))))))

(assert (=> d!44855 (= (contains!925 (t!6329 (toList!888 lt!73023)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!74378)))

(declare-fun b!141964 () Bool)

(declare-fun e!92507 () Bool)

(assert (=> b!141964 (= e!92508 e!92507)))

(declare-fun res!67720 () Bool)

(assert (=> b!141964 (=> res!67720 e!92507)))

(assert (=> b!141964 (= res!67720 (= (h!2348 (t!6329 (toList!888 lt!73023))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!141965 () Bool)

(assert (=> b!141965 (= e!92507 (contains!925 (t!6329 (t!6329 (toList!888 lt!73023))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!44855 res!67719) b!141964))

(assert (= (and b!141964 (not res!67720)) b!141965))

(declare-fun m!170691 () Bool)

(assert (=> d!44855 m!170691))

(declare-fun m!170693 () Bool)

(assert (=> d!44855 m!170693))

(declare-fun m!170695 () Bool)

(assert (=> b!141965 m!170695))

(assert (=> b!140837 d!44855))

(assert (=> bm!15575 d!44523))

(declare-fun d!44857 () Bool)

(declare-fun e!92509 () Bool)

(assert (=> d!44857 e!92509))

(declare-fun res!67721 () Bool)

(assert (=> d!44857 (=> res!67721 e!92509)))

(declare-fun lt!74381 () Bool)

(assert (=> d!44857 (= res!67721 (not lt!74381))))

(declare-fun lt!74379 () Bool)

(assert (=> d!44857 (= lt!74381 lt!74379)))

(declare-fun lt!74380 () Unit!4373)

(declare-fun e!92510 () Unit!4373)

(assert (=> d!44857 (= lt!74380 e!92510)))

(declare-fun c!26772 () Bool)

(assert (=> d!44857 (= c!26772 lt!74379)))

(assert (=> d!44857 (= lt!74379 (containsKey!180 (toList!888 lt!73895) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44857 (= (contains!923 lt!73895 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74381)))

(declare-fun b!141966 () Bool)

(declare-fun lt!74382 () Unit!4373)

(assert (=> b!141966 (= e!92510 lt!74382)))

(assert (=> b!141966 (= lt!74382 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73895) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> b!141966 (isDefined!129 (getValueByKey!176 (toList!888 lt!73895) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141967 () Bool)

(declare-fun Unit!4483 () Unit!4373)

(assert (=> b!141967 (= e!92510 Unit!4483)))

(declare-fun b!141968 () Bool)

(assert (=> b!141968 (= e!92509 (isDefined!129 (getValueByKey!176 (toList!888 lt!73895) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44857 c!26772) b!141966))

(assert (= (and d!44857 (not c!26772)) b!141967))

(assert (= (and d!44857 (not res!67721)) b!141968))

(declare-fun m!170697 () Bool)

(assert (=> d!44857 m!170697))

(declare-fun m!170699 () Bool)

(assert (=> b!141966 m!170699))

(assert (=> b!141966 m!168639))

(assert (=> b!141966 m!168639))

(declare-fun m!170701 () Bool)

(assert (=> b!141966 m!170701))

(assert (=> b!141968 m!168639))

(assert (=> b!141968 m!168639))

(assert (=> b!141968 m!170701))

(assert (=> d!43977 d!44857))

(declare-fun b!141972 () Bool)

(declare-fun e!92512 () Option!182)

(assert (=> b!141972 (= e!92512 None!180)))

(declare-fun b!141969 () Bool)

(declare-fun e!92511 () Option!182)

(assert (=> b!141969 (= e!92511 (Some!181 (_2!1360 (h!2348 lt!73892))))))

(declare-fun b!141970 () Bool)

(assert (=> b!141970 (= e!92511 e!92512)))

(declare-fun c!26774 () Bool)

(assert (=> b!141970 (= c!26774 (and ((_ is Cons!1741) lt!73892) (not (= (_1!1360 (h!2348 lt!73892)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun d!44859 () Bool)

(declare-fun c!26773 () Bool)

(assert (=> d!44859 (= c!26773 (and ((_ is Cons!1741) lt!73892) (= (_1!1360 (h!2348 lt!73892)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44859 (= (getValueByKey!176 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92511)))

(declare-fun b!141971 () Bool)

(assert (=> b!141971 (= e!92512 (getValueByKey!176 (t!6329 lt!73892) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44859 c!26773) b!141969))

(assert (= (and d!44859 (not c!26773)) b!141970))

(assert (= (and b!141970 c!26774) b!141971))

(assert (= (and b!141970 (not c!26774)) b!141972))

(declare-fun m!170703 () Bool)

(assert (=> b!141971 m!170703))

(assert (=> d!43977 d!44859))

(declare-fun d!44861 () Bool)

(assert (=> d!44861 (= (getValueByKey!176 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74383 () Unit!4373)

(assert (=> d!44861 (= lt!74383 (choose!865 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92513 () Bool)

(assert (=> d!44861 e!92513))

(declare-fun res!67722 () Bool)

(assert (=> d!44861 (=> (not res!67722) (not e!92513))))

(assert (=> d!44861 (= res!67722 (isStrictlySorted!325 lt!73892))))

(assert (=> d!44861 (= (lemmaContainsTupThenGetReturnValue!90 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74383)))

(declare-fun b!141973 () Bool)

(declare-fun res!67723 () Bool)

(assert (=> b!141973 (=> (not res!67723) (not e!92513))))

(assert (=> b!141973 (= res!67723 (containsKey!180 lt!73892 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141974 () Bool)

(assert (=> b!141974 (= e!92513 (contains!925 lt!73892 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44861 res!67722) b!141973))

(assert (= (and b!141973 res!67723) b!141974))

(assert (=> d!44861 m!168633))

(declare-fun m!170705 () Bool)

(assert (=> d!44861 m!170705))

(declare-fun m!170707 () Bool)

(assert (=> d!44861 m!170707))

(declare-fun m!170709 () Bool)

(assert (=> b!141973 m!170709))

(declare-fun m!170711 () Bool)

(assert (=> b!141974 m!170711))

(assert (=> d!43977 d!44861))

(declare-fun b!141975 () Bool)

(declare-fun e!92514 () List!1745)

(declare-fun call!15731 () List!1745)

(assert (=> b!141975 (= e!92514 call!15731)))

(declare-fun bm!15726 () Bool)

(declare-fun call!15729 () List!1745)

(assert (=> bm!15726 (= call!15731 call!15729)))

(declare-fun d!44863 () Bool)

(declare-fun e!92518 () Bool)

(assert (=> d!44863 e!92518))

(declare-fun res!67724 () Bool)

(assert (=> d!44863 (=> (not res!67724) (not e!92518))))

(declare-fun lt!74384 () List!1745)

(assert (=> d!44863 (= res!67724 (isStrictlySorted!325 lt!74384))))

(declare-fun e!92515 () List!1745)

(assert (=> d!44863 (= lt!74384 e!92515)))

(declare-fun c!26777 () Bool)

(assert (=> d!44863 (= c!26777 (and ((_ is Cons!1741) (toList!888 call!15491)) (bvslt (_1!1360 (h!2348 (toList!888 call!15491))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44863 (isStrictlySorted!325 (toList!888 call!15491))))

(assert (=> d!44863 (= (insertStrictlySorted!93 (toList!888 call!15491) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74384)))

(declare-fun bm!15727 () Bool)

(declare-fun call!15730 () List!1745)

(assert (=> bm!15727 (= call!15729 call!15730)))

(declare-fun b!141976 () Bool)

(declare-fun e!92516 () List!1745)

(assert (=> b!141976 (= e!92515 e!92516)))

(declare-fun c!26776 () Bool)

(assert (=> b!141976 (= c!26776 (and ((_ is Cons!1741) (toList!888 call!15491)) (= (_1!1360 (h!2348 (toList!888 call!15491))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141977 () Bool)

(assert (=> b!141977 (= e!92515 call!15730)))

(declare-fun bm!15728 () Bool)

(declare-fun e!92517 () List!1745)

(assert (=> bm!15728 (= call!15730 ($colon$colon!94 e!92517 (ite c!26777 (h!2348 (toList!888 call!15491)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun c!26775 () Bool)

(assert (=> bm!15728 (= c!26775 c!26777)))

(declare-fun b!141978 () Bool)

(declare-fun c!26778 () Bool)

(assert (=> b!141978 (= e!92517 (ite c!26776 (t!6329 (toList!888 call!15491)) (ite c!26778 (Cons!1741 (h!2348 (toList!888 call!15491)) (t!6329 (toList!888 call!15491))) Nil!1742)))))

(declare-fun b!141979 () Bool)

(assert (=> b!141979 (= e!92516 call!15729)))

(declare-fun b!141980 () Bool)

(assert (=> b!141980 (= e!92518 (contains!925 lt!74384 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141981 () Bool)

(assert (=> b!141981 (= e!92517 (insertStrictlySorted!93 (t!6329 (toList!888 call!15491)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141982 () Bool)

(assert (=> b!141982 (= e!92514 call!15731)))

(declare-fun b!141983 () Bool)

(assert (=> b!141983 (= c!26778 (and ((_ is Cons!1741) (toList!888 call!15491)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15491))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!141983 (= e!92516 e!92514)))

(declare-fun b!141984 () Bool)

(declare-fun res!67725 () Bool)

(assert (=> b!141984 (=> (not res!67725) (not e!92518))))

(assert (=> b!141984 (= res!67725 (containsKey!180 lt!74384 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44863 c!26777) b!141977))

(assert (= (and d!44863 (not c!26777)) b!141976))

(assert (= (and b!141976 c!26776) b!141979))

(assert (= (and b!141976 (not c!26776)) b!141983))

(assert (= (and b!141983 c!26778) b!141982))

(assert (= (and b!141983 (not c!26778)) b!141975))

(assert (= (or b!141982 b!141975) bm!15726))

(assert (= (or b!141979 bm!15726) bm!15727))

(assert (= (or b!141977 bm!15727) bm!15728))

(assert (= (and bm!15728 c!26775) b!141981))

(assert (= (and bm!15728 (not c!26775)) b!141978))

(assert (= (and d!44863 res!67724) b!141984))

(assert (= (and b!141984 res!67725) b!141980))

(declare-fun m!170713 () Bool)

(assert (=> b!141981 m!170713))

(declare-fun m!170715 () Bool)

(assert (=> d!44863 m!170715))

(declare-fun m!170717 () Bool)

(assert (=> d!44863 m!170717))

(declare-fun m!170719 () Bool)

(assert (=> b!141984 m!170719))

(declare-fun m!170721 () Bool)

(assert (=> bm!15728 m!170721))

(declare-fun m!170723 () Bool)

(assert (=> b!141980 m!170723))

(assert (=> d!43977 d!44863))

(declare-fun d!44865 () Bool)

(declare-fun res!67726 () Bool)

(declare-fun e!92519 () Bool)

(assert (=> d!44865 (=> res!67726 e!92519)))

(assert (=> d!44865 (= res!67726 (or ((_ is Nil!1742) lt!73343) ((_ is Nil!1742) (t!6329 lt!73343))))))

(assert (=> d!44865 (= (isStrictlySorted!325 lt!73343) e!92519)))

(declare-fun b!141985 () Bool)

(declare-fun e!92520 () Bool)

(assert (=> b!141985 (= e!92519 e!92520)))

(declare-fun res!67727 () Bool)

(assert (=> b!141985 (=> (not res!67727) (not e!92520))))

(assert (=> b!141985 (= res!67727 (bvslt (_1!1360 (h!2348 lt!73343)) (_1!1360 (h!2348 (t!6329 lt!73343)))))))

(declare-fun b!141986 () Bool)

(assert (=> b!141986 (= e!92520 (isStrictlySorted!325 (t!6329 lt!73343)))))

(assert (= (and d!44865 (not res!67726)) b!141985))

(assert (= (and b!141985 res!67727) b!141986))

(declare-fun m!170725 () Bool)

(assert (=> b!141986 m!170725))

(assert (=> d!43443 d!44865))

(declare-fun d!44867 () Bool)

(declare-fun res!67728 () Bool)

(declare-fun e!92521 () Bool)

(assert (=> d!44867 (=> res!67728 e!92521)))

(assert (=> d!44867 (= res!67728 (or ((_ is Nil!1742) (toList!888 lt!72889)) ((_ is Nil!1742) (t!6329 (toList!888 lt!72889)))))))

(assert (=> d!44867 (= (isStrictlySorted!325 (toList!888 lt!72889)) e!92521)))

(declare-fun b!141987 () Bool)

(declare-fun e!92522 () Bool)

(assert (=> b!141987 (= e!92521 e!92522)))

(declare-fun res!67729 () Bool)

(assert (=> b!141987 (=> (not res!67729) (not e!92522))))

(assert (=> b!141987 (= res!67729 (bvslt (_1!1360 (h!2348 (toList!888 lt!72889))) (_1!1360 (h!2348 (t!6329 (toList!888 lt!72889))))))))

(declare-fun b!141988 () Bool)

(assert (=> b!141988 (= e!92522 (isStrictlySorted!325 (t!6329 (toList!888 lt!72889))))))

(assert (= (and d!44867 (not res!67728)) b!141987))

(assert (= (and b!141987 res!67729) b!141988))

(assert (=> b!141988 m!170073))

(assert (=> d!43443 d!44867))

(declare-fun d!44869 () Bool)

(assert (=> d!44869 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73074)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73074)))))

(assert (=> d!43919 d!44869))

(declare-fun b!141992 () Bool)

(declare-fun e!92524 () Option!182)

(assert (=> b!141992 (= e!92524 None!180)))

(declare-fun e!92523 () Option!182)

(declare-fun b!141989 () Bool)

(assert (=> b!141989 (= e!92523 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))))

(declare-fun b!141990 () Bool)

(assert (=> b!141990 (= e!92523 e!92524)))

(declare-fun c!26780 () Bool)

(assert (=> b!141990 (= c!26780 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73074))))))

(declare-fun d!44871 () Bool)

(declare-fun c!26779 () Bool)

(assert (=> d!44871 (= c!26779 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73074)))))

(assert (=> d!44871 (= (getValueByKey!176 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73074) e!92523)))

(declare-fun b!141991 () Bool)

(assert (=> b!141991 (= e!92524 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) lt!73074))))

(assert (= (and d!44871 c!26779) b!141989))

(assert (= (and d!44871 (not c!26779)) b!141990))

(assert (= (and b!141990 c!26780) b!141991))

(assert (= (and b!141990 (not c!26780)) b!141992))

(declare-fun m!170727 () Bool)

(assert (=> b!141991 m!170727))

(assert (=> d!43919 d!44871))

(declare-fun d!44873 () Bool)

(declare-fun res!67730 () Bool)

(declare-fun e!92525 () Bool)

(assert (=> d!44873 (=> res!67730 e!92525)))

(assert (=> d!44873 (= res!67730 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73089)))))

(assert (=> d!44873 (= (containsKey!180 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73089) e!92525)))

(declare-fun b!141993 () Bool)

(declare-fun e!92526 () Bool)

(assert (=> b!141993 (= e!92525 e!92526)))

(declare-fun res!67731 () Bool)

(assert (=> b!141993 (=> (not res!67731) (not e!92526))))

(assert (=> b!141993 (= res!67731 (and (or (not ((_ is Cons!1741) (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) (bvsle (_1!1360 (h!2348 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73089)) ((_ is Cons!1741) (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73089)))))

(declare-fun b!141994 () Bool)

(assert (=> b!141994 (= e!92526 (containsKey!180 (t!6329 (toList!888 (+!179 lt!73088 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) lt!73089))))

(assert (= (and d!44873 (not res!67730)) b!141993))

(assert (= (and b!141993 res!67731) b!141994))

(declare-fun m!170729 () Bool)

(assert (=> b!141994 m!170729))

(assert (=> d!43933 d!44873))

(declare-fun d!44875 () Bool)

(declare-fun e!92527 () Bool)

(assert (=> d!44875 e!92527))

(declare-fun res!67732 () Bool)

(assert (=> d!44875 (=> res!67732 e!92527)))

(declare-fun lt!74387 () Bool)

(assert (=> d!44875 (= res!67732 (not lt!74387))))

(declare-fun lt!74385 () Bool)

(assert (=> d!44875 (= lt!74387 lt!74385)))

(declare-fun lt!74386 () Unit!4373)

(declare-fun e!92528 () Unit!4373)

(assert (=> d!44875 (= lt!74386 e!92528)))

(declare-fun c!26781 () Bool)

(assert (=> d!44875 (= c!26781 lt!74385)))

(assert (=> d!44875 (= lt!74385 (containsKey!180 (toList!888 lt!73835) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44875 (= (contains!923 lt!73835 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74387)))

(declare-fun b!141995 () Bool)

(declare-fun lt!74388 () Unit!4373)

(assert (=> b!141995 (= e!92528 lt!74388)))

(assert (=> b!141995 (= lt!74388 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73835) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!141995 (isDefined!129 (getValueByKey!176 (toList!888 lt!73835) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141996 () Bool)

(declare-fun Unit!4484 () Unit!4373)

(assert (=> b!141996 (= e!92528 Unit!4484)))

(declare-fun b!141997 () Bool)

(assert (=> b!141997 (= e!92527 (isDefined!129 (getValueByKey!176 (toList!888 lt!73835) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!44875 c!26781) b!141995))

(assert (= (and d!44875 (not c!26781)) b!141996))

(assert (= (and d!44875 (not res!67732)) b!141997))

(declare-fun m!170731 () Bool)

(assert (=> d!44875 m!170731))

(declare-fun m!170733 () Bool)

(assert (=> b!141995 m!170733))

(assert (=> b!141995 m!168425))

(assert (=> b!141995 m!168425))

(declare-fun m!170735 () Bool)

(assert (=> b!141995 m!170735))

(assert (=> b!141997 m!168425))

(assert (=> b!141997 m!168425))

(assert (=> b!141997 m!170735))

(assert (=> d!43889 d!44875))

(declare-fun b!142001 () Bool)

(declare-fun e!92530 () Option!182)

(assert (=> b!142001 (= e!92530 None!180)))

(declare-fun b!141998 () Bool)

(declare-fun e!92529 () Option!182)

(assert (=> b!141998 (= e!92529 (Some!181 (_2!1360 (h!2348 lt!73832))))))

(declare-fun b!141999 () Bool)

(assert (=> b!141999 (= e!92529 e!92530)))

(declare-fun c!26783 () Bool)

(assert (=> b!141999 (= c!26783 (and ((_ is Cons!1741) lt!73832) (not (= (_1!1360 (h!2348 lt!73832)) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun d!44877 () Bool)

(declare-fun c!26782 () Bool)

(assert (=> d!44877 (= c!26782 (and ((_ is Cons!1741) lt!73832) (= (_1!1360 (h!2348 lt!73832)) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44877 (= (getValueByKey!176 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92529)))

(declare-fun b!142000 () Bool)

(assert (=> b!142000 (= e!92530 (getValueByKey!176 (t!6329 lt!73832) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44877 c!26782) b!141998))

(assert (= (and d!44877 (not c!26782)) b!141999))

(assert (= (and b!141999 c!26783) b!142000))

(assert (= (and b!141999 (not c!26783)) b!142001))

(declare-fun m!170737 () Bool)

(assert (=> b!142000 m!170737))

(assert (=> d!43889 d!44877))

(declare-fun d!44879 () Bool)

(assert (=> d!44879 (= (getValueByKey!176 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74389 () Unit!4373)

(assert (=> d!44879 (= lt!74389 (choose!865 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!92531 () Bool)

(assert (=> d!44879 e!92531))

(declare-fun res!67733 () Bool)

(assert (=> d!44879 (=> (not res!67733) (not e!92531))))

(assert (=> d!44879 (= res!67733 (isStrictlySorted!325 lt!73832))))

(assert (=> d!44879 (= (lemmaContainsTupThenGetReturnValue!90 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74389)))

(declare-fun b!142002 () Bool)

(declare-fun res!67734 () Bool)

(assert (=> b!142002 (=> (not res!67734) (not e!92531))))

(assert (=> b!142002 (= res!67734 (containsKey!180 lt!73832 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142003 () Bool)

(assert (=> b!142003 (= e!92531 (contains!925 lt!73832 (tuple2!2699 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!44879 res!67733) b!142002))

(assert (= (and b!142002 res!67734) b!142003))

(assert (=> d!44879 m!168419))

(declare-fun m!170739 () Bool)

(assert (=> d!44879 m!170739))

(declare-fun m!170741 () Bool)

(assert (=> d!44879 m!170741))

(declare-fun m!170743 () Bool)

(assert (=> b!142002 m!170743))

(declare-fun m!170745 () Bool)

(assert (=> b!142003 m!170745))

(assert (=> d!43889 d!44879))

(declare-fun b!142004 () Bool)

(declare-fun e!92532 () List!1745)

(declare-fun call!15734 () List!1745)

(assert (=> b!142004 (= e!92532 call!15734)))

(declare-fun bm!15729 () Bool)

(declare-fun call!15732 () List!1745)

(assert (=> bm!15729 (= call!15734 call!15732)))

(declare-fun d!44881 () Bool)

(declare-fun e!92536 () Bool)

(assert (=> d!44881 e!92536))

(declare-fun res!67735 () Bool)

(assert (=> d!44881 (=> (not res!67735) (not e!92536))))

(declare-fun lt!74390 () List!1745)

(assert (=> d!44881 (= res!67735 (isStrictlySorted!325 lt!74390))))

(declare-fun e!92533 () List!1745)

(assert (=> d!44881 (= lt!74390 e!92533)))

(declare-fun c!26786 () Bool)

(assert (=> d!44881 (= c!26786 (and ((_ is Cons!1741) (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44881 (isStrictlySorted!325 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))))))

(assert (=> d!44881 (= (insertStrictlySorted!93 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74390)))

(declare-fun bm!15730 () Bool)

(declare-fun call!15733 () List!1745)

(assert (=> bm!15730 (= call!15732 call!15733)))

(declare-fun b!142005 () Bool)

(declare-fun e!92534 () List!1745)

(assert (=> b!142005 (= e!92533 e!92534)))

(declare-fun c!26785 () Bool)

(assert (=> b!142005 (= c!26785 (and ((_ is Cons!1741) (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (= (_1!1360 (h!2348 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142006 () Bool)

(assert (=> b!142006 (= e!92533 call!15733)))

(declare-fun bm!15731 () Bool)

(declare-fun e!92535 () List!1745)

(assert (=> bm!15731 (= call!15733 ($colon$colon!94 e!92535 (ite c!26786 (h!2348 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (tuple2!2699 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26784 () Bool)

(assert (=> bm!15731 (= c!26784 c!26786)))

(declare-fun c!26787 () Bool)

(declare-fun b!142007 () Bool)

(assert (=> b!142007 (= e!92535 (ite c!26785 (t!6329 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (ite c!26787 (Cons!1741 (h!2348 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (t!6329 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))))) Nil!1742)))))

(declare-fun b!142008 () Bool)

(assert (=> b!142008 (= e!92534 call!15732)))

(declare-fun b!142009 () Bool)

(assert (=> b!142009 (= e!92536 (contains!925 lt!74390 (tuple2!2699 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142010 () Bool)

(assert (=> b!142010 (= e!92535 (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142011 () Bool)

(assert (=> b!142011 (= e!92532 call!15734)))

(declare-fun b!142012 () Bool)

(assert (=> b!142012 (= c!26787 (and ((_ is Cons!1741) (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493)))) (bvsgt (_1!1360 (h!2348 (toList!888 (ite c!26092 call!15490 (ite c!26094 call!15488 call!15493))))) (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> b!142012 (= e!92534 e!92532)))

(declare-fun b!142013 () Bool)

(declare-fun res!67736 () Bool)

(assert (=> b!142013 (=> (not res!67736) (not e!92536))))

(assert (=> b!142013 (= res!67736 (containsKey!180 lt!74390 (_1!1360 (ite (or c!26092 c!26094) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44881 c!26786) b!142006))

(assert (= (and d!44881 (not c!26786)) b!142005))

(assert (= (and b!142005 c!26785) b!142008))

(assert (= (and b!142005 (not c!26785)) b!142012))

(assert (= (and b!142012 c!26787) b!142011))

(assert (= (and b!142012 (not c!26787)) b!142004))

(assert (= (or b!142011 b!142004) bm!15729))

(assert (= (or b!142008 bm!15729) bm!15730))

(assert (= (or b!142006 bm!15730) bm!15731))

(assert (= (and bm!15731 c!26784) b!142010))

(assert (= (and bm!15731 (not c!26784)) b!142007))

(assert (= (and d!44881 res!67735) b!142013))

(assert (= (and b!142013 res!67736) b!142009))

(declare-fun m!170747 () Bool)

(assert (=> b!142010 m!170747))

(declare-fun m!170749 () Bool)

(assert (=> d!44881 m!170749))

(declare-fun m!170751 () Bool)

(assert (=> d!44881 m!170751))

(declare-fun m!170753 () Bool)

(assert (=> b!142013 m!170753))

(declare-fun m!170755 () Bool)

(assert (=> bm!15731 m!170755))

(declare-fun m!170757 () Bool)

(assert (=> b!142009 m!170757))

(assert (=> d!43889 d!44881))

(declare-fun b!142014 () Bool)

(declare-fun e!92537 () (_ BitVec 32))

(assert (=> b!142014 (= e!92537 #b00000000000000000000000000000000)))

(declare-fun b!142015 () Bool)

(declare-fun e!92538 () (_ BitVec 32))

(declare-fun call!15735 () (_ BitVec 32))

(assert (=> b!142015 (= e!92538 call!15735)))

(declare-fun bm!15732 () Bool)

(assert (=> bm!15732 (= call!15735 (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun d!44883 () Bool)

(declare-fun lt!74391 () (_ BitVec 32))

(assert (=> d!44883 (and (bvsge lt!74391 #b00000000000000000000000000000000) (bvsle lt!74391 (bvsub (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44883 (= lt!74391 e!92537)))

(declare-fun c!26788 () Bool)

(assert (=> d!44883 (= c!26788 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!44883 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!44883 (= (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))) lt!74391)))

(declare-fun b!142016 () Bool)

(assert (=> b!142016 (= e!92537 e!92538)))

(declare-fun c!26789 () Bool)

(assert (=> b!142016 (= c!26789 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142017 () Bool)

(assert (=> b!142017 (= e!92538 (bvadd #b00000000000000000000000000000001 call!15735))))

(assert (= (and d!44883 c!26788) b!142014))

(assert (= (and d!44883 (not c!26788)) b!142016))

(assert (= (and b!142016 c!26789) b!142017))

(assert (= (and b!142016 (not c!26789)) b!142015))

(assert (= (or b!142017 b!142015) bm!15732))

(declare-fun m!170759 () Bool)

(assert (=> bm!15732 m!170759))

(assert (=> b!142016 m!168905))

(assert (=> b!142016 m!168905))

(assert (=> b!142016 m!168915))

(assert (=> bm!15638 d!44883))

(declare-fun d!44885 () Bool)

(declare-fun e!92539 () Bool)

(assert (=> d!44885 e!92539))

(declare-fun res!67737 () Bool)

(assert (=> d!44885 (=> (not res!67737) (not e!92539))))

(declare-fun lt!74395 () ListLongMap!1745)

(assert (=> d!44885 (= res!67737 (contains!923 lt!74395 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74392 () List!1745)

(assert (=> d!44885 (= lt!74395 (ListLongMap!1746 lt!74392))))

(declare-fun lt!74393 () Unit!4373)

(declare-fun lt!74394 () Unit!4373)

(assert (=> d!44885 (= lt!74393 lt!74394)))

(assert (=> d!44885 (= (getValueByKey!176 lt!74392 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44885 (= lt!74394 (lemmaContainsTupThenGetReturnValue!90 lt!74392 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44885 (= lt!74392 (insertStrictlySorted!93 (toList!888 call!15634) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44885 (= (+!179 call!15634 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74395)))

(declare-fun b!142018 () Bool)

(declare-fun res!67738 () Bool)

(assert (=> b!142018 (=> (not res!67738) (not e!92539))))

(assert (=> b!142018 (= res!67738 (= (getValueByKey!176 (toList!888 lt!74395) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142019 () Bool)

(assert (=> b!142019 (= e!92539 (contains!925 (toList!888 lt!74395) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44885 res!67737) b!142018))

(assert (= (and b!142018 res!67738) b!142019))

(declare-fun m!170761 () Bool)

(assert (=> d!44885 m!170761))

(declare-fun m!170763 () Bool)

(assert (=> d!44885 m!170763))

(declare-fun m!170765 () Bool)

(assert (=> d!44885 m!170765))

(declare-fun m!170767 () Bool)

(assert (=> d!44885 m!170767))

(declare-fun m!170769 () Bool)

(assert (=> b!142018 m!170769))

(declare-fun m!170771 () Bool)

(assert (=> b!142019 m!170771))

(assert (=> b!140709 d!44885))

(assert (=> b!140757 d!44139))

(declare-fun d!44887 () Bool)

(assert (=> d!44887 (= ($colon$colon!94 e!91315 (ite c!26189 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1741 (ite c!26189 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) (tuple2!2699 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!91315))))

(assert (=> bm!15548 d!44887))

(declare-fun d!44889 () Bool)

(assert (=> d!44889 (= (apply!120 (+!179 lt!73156 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) lt!73151) (apply!120 lt!73156 lt!73151))))

(assert (=> d!44889 true))

(declare-fun _$34!1007 () Unit!4373)

(assert (=> d!44889 (= (choose!856 lt!73156 lt!73152 (minValue!2790 newMap!16) lt!73151) _$34!1007)))

(declare-fun bs!5968 () Bool)

(assert (= bs!5968 d!44889))

(assert (=> bs!5968 m!166565))

(assert (=> bs!5968 m!166565))

(assert (=> bs!5968 m!166567))

(assert (=> bs!5968 m!166555))

(assert (=> d!43521 d!44889))

(assert (=> d!43521 d!43501))

(assert (=> d!43521 d!43507))

(assert (=> d!43521 d!43515))

(declare-fun d!44891 () Bool)

(declare-fun e!92540 () Bool)

(assert (=> d!44891 e!92540))

(declare-fun res!67739 () Bool)

(assert (=> d!44891 (=> res!67739 e!92540)))

(declare-fun lt!74398 () Bool)

(assert (=> d!44891 (= res!67739 (not lt!74398))))

(declare-fun lt!74396 () Bool)

(assert (=> d!44891 (= lt!74398 lt!74396)))

(declare-fun lt!74397 () Unit!4373)

(declare-fun e!92541 () Unit!4373)

(assert (=> d!44891 (= lt!74397 e!92541)))

(declare-fun c!26790 () Bool)

(assert (=> d!44891 (= c!26790 lt!74396)))

(assert (=> d!44891 (= lt!74396 (containsKey!180 (toList!888 lt!73156) lt!73151))))

(assert (=> d!44891 (= (contains!923 lt!73156 lt!73151) lt!74398)))

(declare-fun b!142020 () Bool)

(declare-fun lt!74399 () Unit!4373)

(assert (=> b!142020 (= e!92541 lt!74399)))

(assert (=> b!142020 (= lt!74399 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73156) lt!73151))))

(assert (=> b!142020 (isDefined!129 (getValueByKey!176 (toList!888 lt!73156) lt!73151))))

(declare-fun b!142021 () Bool)

(declare-fun Unit!4485 () Unit!4373)

(assert (=> b!142021 (= e!92541 Unit!4485)))

(declare-fun b!142022 () Bool)

(assert (=> b!142022 (= e!92540 (isDefined!129 (getValueByKey!176 (toList!888 lt!73156) lt!73151)))))

(assert (= (and d!44891 c!26790) b!142020))

(assert (= (and d!44891 (not c!26790)) b!142021))

(assert (= (and d!44891 (not res!67739)) b!142022))

(declare-fun m!170773 () Bool)

(assert (=> d!44891 m!170773))

(declare-fun m!170775 () Bool)

(assert (=> b!142020 m!170775))

(assert (=> b!142020 m!167087))

(assert (=> b!142020 m!167087))

(declare-fun m!170777 () Bool)

(assert (=> b!142020 m!170777))

(assert (=> b!142022 m!167087))

(assert (=> b!142022 m!167087))

(assert (=> b!142022 m!170777))

(assert (=> d!43521 d!44891))

(declare-fun d!44893 () Bool)

(declare-fun lt!74400 () Bool)

(assert (=> d!44893 (= lt!74400 (select (content!138 lt!73020) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92543 () Bool)

(assert (=> d!44893 (= lt!74400 e!92543)))

(declare-fun res!67740 () Bool)

(assert (=> d!44893 (=> (not res!67740) (not e!92543))))

(assert (=> d!44893 (= res!67740 ((_ is Cons!1741) lt!73020))))

(assert (=> d!44893 (= (contains!925 lt!73020 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74400)))

(declare-fun b!142023 () Bool)

(declare-fun e!92542 () Bool)

(assert (=> b!142023 (= e!92543 e!92542)))

(declare-fun res!67741 () Bool)

(assert (=> b!142023 (=> res!67741 e!92542)))

(assert (=> b!142023 (= res!67741 (= (h!2348 lt!73020) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142024 () Bool)

(assert (=> b!142024 (= e!92542 (contains!925 (t!6329 lt!73020) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44893 res!67740) b!142023))

(assert (= (and b!142023 (not res!67741)) b!142024))

(declare-fun m!170779 () Bool)

(assert (=> d!44893 m!170779))

(declare-fun m!170781 () Bool)

(assert (=> d!44893 m!170781))

(declare-fun m!170783 () Bool)

(assert (=> b!142024 m!170783))

(assert (=> b!140770 d!44893))

(declare-fun d!44895 () Bool)

(declare-fun e!92544 () Bool)

(assert (=> d!44895 e!92544))

(declare-fun res!67742 () Bool)

(assert (=> d!44895 (=> res!67742 e!92544)))

(declare-fun lt!74403 () Bool)

(assert (=> d!44895 (= res!67742 (not lt!74403))))

(declare-fun lt!74401 () Bool)

(assert (=> d!44895 (= lt!74403 lt!74401)))

(declare-fun lt!74402 () Unit!4373)

(declare-fun e!92545 () Unit!4373)

(assert (=> d!44895 (= lt!74402 e!92545)))

(declare-fun c!26791 () Bool)

(assert (=> d!44895 (= c!26791 lt!74401)))

(assert (=> d!44895 (= lt!74401 (containsKey!180 (toList!888 lt!73397) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44895 (= (contains!923 lt!73397 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!74403)))

(declare-fun b!142025 () Bool)

(declare-fun lt!74404 () Unit!4373)

(assert (=> b!142025 (= e!92545 lt!74404)))

(assert (=> b!142025 (= lt!74404 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73397) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142025 (isDefined!129 (getValueByKey!176 (toList!888 lt!73397) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142026 () Bool)

(declare-fun Unit!4486 () Unit!4373)

(assert (=> b!142026 (= e!92545 Unit!4486)))

(declare-fun b!142027 () Bool)

(assert (=> b!142027 (= e!92544 (isDefined!129 (getValueByKey!176 (toList!888 lt!73397) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44895 c!26791) b!142025))

(assert (= (and d!44895 (not c!26791)) b!142026))

(assert (= (and d!44895 (not res!67742)) b!142027))

(declare-fun m!170785 () Bool)

(assert (=> d!44895 m!170785))

(declare-fun m!170787 () Bool)

(assert (=> b!142025 m!170787))

(assert (=> b!142025 m!167063))

(assert (=> b!142025 m!167063))

(declare-fun m!170789 () Bool)

(assert (=> b!142025 m!170789))

(assert (=> b!142027 m!167063))

(assert (=> b!142027 m!167063))

(assert (=> b!142027 m!170789))

(assert (=> d!43495 d!44895))

(declare-fun b!142031 () Bool)

(declare-fun e!92547 () Option!182)

(assert (=> b!142031 (= e!92547 None!180)))

(declare-fun b!142028 () Bool)

(declare-fun e!92546 () Option!182)

(assert (=> b!142028 (= e!92546 (Some!181 (_2!1360 (h!2348 lt!73394))))))

(declare-fun b!142029 () Bool)

(assert (=> b!142029 (= e!92546 e!92547)))

(declare-fun c!26793 () Bool)

(assert (=> b!142029 (= c!26793 (and ((_ is Cons!1741) lt!73394) (not (= (_1!1360 (h!2348 lt!73394)) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))))

(declare-fun d!44897 () Bool)

(declare-fun c!26792 () Bool)

(assert (=> d!44897 (= c!26792 (and ((_ is Cons!1741) lt!73394) (= (_1!1360 (h!2348 lt!73394)) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44897 (= (getValueByKey!176 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) e!92546)))

(declare-fun b!142030 () Bool)

(assert (=> b!142030 (= e!92547 (getValueByKey!176 (t!6329 lt!73394) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44897 c!26792) b!142028))

(assert (= (and d!44897 (not c!26792)) b!142029))

(assert (= (and b!142029 c!26793) b!142030))

(assert (= (and b!142029 (not c!26793)) b!142031))

(declare-fun m!170791 () Bool)

(assert (=> b!142030 m!170791))

(assert (=> d!43495 d!44897))

(declare-fun d!44899 () Bool)

(assert (=> d!44899 (= (getValueByKey!176 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74405 () Unit!4373)

(assert (=> d!44899 (= lt!74405 (choose!865 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92548 () Bool)

(assert (=> d!44899 e!92548))

(declare-fun res!67743 () Bool)

(assert (=> d!44899 (=> (not res!67743) (not e!92548))))

(assert (=> d!44899 (= res!67743 (isStrictlySorted!325 lt!73394))))

(assert (=> d!44899 (= (lemmaContainsTupThenGetReturnValue!90 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!74405)))

(declare-fun b!142032 () Bool)

(declare-fun res!67744 () Bool)

(assert (=> b!142032 (=> (not res!67744) (not e!92548))))

(assert (=> b!142032 (= res!67744 (containsKey!180 lt!73394 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142033 () Bool)

(assert (=> b!142033 (= e!92548 (contains!925 lt!73394 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44899 res!67743) b!142032))

(assert (= (and b!142032 res!67744) b!142033))

(assert (=> d!44899 m!167057))

(declare-fun m!170793 () Bool)

(assert (=> d!44899 m!170793))

(declare-fun m!170795 () Bool)

(assert (=> d!44899 m!170795))

(declare-fun m!170797 () Bool)

(assert (=> b!142032 m!170797))

(declare-fun m!170799 () Bool)

(assert (=> b!142033 m!170799))

(assert (=> d!43495 d!44899))

(declare-fun b!142034 () Bool)

(declare-fun e!92549 () List!1745)

(declare-fun call!15738 () List!1745)

(assert (=> b!142034 (= e!92549 call!15738)))

(declare-fun bm!15733 () Bool)

(declare-fun call!15736 () List!1745)

(assert (=> bm!15733 (= call!15738 call!15736)))

(declare-fun d!44901 () Bool)

(declare-fun e!92553 () Bool)

(assert (=> d!44901 e!92553))

(declare-fun res!67745 () Bool)

(assert (=> d!44901 (=> (not res!67745) (not e!92553))))

(declare-fun lt!74406 () List!1745)

(assert (=> d!44901 (= res!67745 (isStrictlySorted!325 lt!74406))))

(declare-fun e!92550 () List!1745)

(assert (=> d!44901 (= lt!74406 e!92550)))

(declare-fun c!26796 () Bool)

(assert (=> d!44901 (= c!26796 (and ((_ is Cons!1741) (toList!888 lt!73153)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73153))) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44901 (isStrictlySorted!325 (toList!888 lt!73153))))

(assert (=> d!44901 (= (insertStrictlySorted!93 (toList!888 lt!73153) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!74406)))

(declare-fun bm!15734 () Bool)

(declare-fun call!15737 () List!1745)

(assert (=> bm!15734 (= call!15736 call!15737)))

(declare-fun b!142035 () Bool)

(declare-fun e!92551 () List!1745)

(assert (=> b!142035 (= e!92550 e!92551)))

(declare-fun c!26795 () Bool)

(assert (=> b!142035 (= c!26795 (and ((_ is Cons!1741) (toList!888 lt!73153)) (= (_1!1360 (h!2348 (toList!888 lt!73153))) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142036 () Bool)

(assert (=> b!142036 (= e!92550 call!15737)))

(declare-fun bm!15735 () Bool)

(declare-fun e!92552 () List!1745)

(assert (=> bm!15735 (= call!15737 ($colon$colon!94 e!92552 (ite c!26796 (h!2348 (toList!888 lt!73153)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26794 () Bool)

(assert (=> bm!15735 (= c!26794 c!26796)))

(declare-fun c!26797 () Bool)

(declare-fun b!142037 () Bool)

(assert (=> b!142037 (= e!92552 (ite c!26795 (t!6329 (toList!888 lt!73153)) (ite c!26797 (Cons!1741 (h!2348 (toList!888 lt!73153)) (t!6329 (toList!888 lt!73153))) Nil!1742)))))

(declare-fun b!142038 () Bool)

(assert (=> b!142038 (= e!92551 call!15736)))

(declare-fun b!142039 () Bool)

(assert (=> b!142039 (= e!92553 (contains!925 lt!74406 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142040 () Bool)

(assert (=> b!142040 (= e!92552 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73153)) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142041 () Bool)

(assert (=> b!142041 (= e!92549 call!15738)))

(declare-fun b!142042 () Bool)

(assert (=> b!142042 (= c!26797 (and ((_ is Cons!1741) (toList!888 lt!73153)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73153))) (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142042 (= e!92551 e!92549)))

(declare-fun b!142043 () Bool)

(declare-fun res!67746 () Bool)

(assert (=> b!142043 (=> (not res!67746) (not e!92553))))

(assert (=> b!142043 (= res!67746 (containsKey!180 lt!74406 (_1!1360 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44901 c!26796) b!142036))

(assert (= (and d!44901 (not c!26796)) b!142035))

(assert (= (and b!142035 c!26795) b!142038))

(assert (= (and b!142035 (not c!26795)) b!142042))

(assert (= (and b!142042 c!26797) b!142041))

(assert (= (and b!142042 (not c!26797)) b!142034))

(assert (= (or b!142041 b!142034) bm!15733))

(assert (= (or b!142038 bm!15733) bm!15734))

(assert (= (or b!142036 bm!15734) bm!15735))

(assert (= (and bm!15735 c!26794) b!142040))

(assert (= (and bm!15735 (not c!26794)) b!142037))

(assert (= (and d!44901 res!67745) b!142043))

(assert (= (and b!142043 res!67746) b!142039))

(declare-fun m!170801 () Bool)

(assert (=> b!142040 m!170801))

(declare-fun m!170803 () Bool)

(assert (=> d!44901 m!170803))

(declare-fun m!170805 () Bool)

(assert (=> d!44901 m!170805))

(declare-fun m!170807 () Bool)

(assert (=> b!142043 m!170807))

(declare-fun m!170809 () Bool)

(assert (=> bm!15735 m!170809))

(declare-fun m!170811 () Bool)

(assert (=> b!142039 m!170811))

(assert (=> d!43495 d!44901))

(declare-fun d!44903 () Bool)

(assert (=> d!44903 (= (apply!120 (+!179 lt!73073 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73074) (apply!120 lt!73073 lt!73074))))

(assert (=> d!44903 true))

(declare-fun _$34!1008 () Unit!4373)

(assert (=> d!44903 (= (choose!856 lt!73073 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73074) _$34!1008)))

(declare-fun bs!5969 () Bool)

(assert (= bs!5969 d!44903))

(assert (=> bs!5969 m!166403))

(assert (=> bs!5969 m!166403))

(assert (=> bs!5969 m!166405))

(assert (=> bs!5969 m!166415))

(assert (=> d!43915 d!44903))

(assert (=> d!43915 d!43925))

(declare-fun d!44905 () Bool)

(declare-fun e!92554 () Bool)

(assert (=> d!44905 e!92554))

(declare-fun res!67747 () Bool)

(assert (=> d!44905 (=> res!67747 e!92554)))

(declare-fun lt!74409 () Bool)

(assert (=> d!44905 (= res!67747 (not lt!74409))))

(declare-fun lt!74407 () Bool)

(assert (=> d!44905 (= lt!74409 lt!74407)))

(declare-fun lt!74408 () Unit!4373)

(declare-fun e!92555 () Unit!4373)

(assert (=> d!44905 (= lt!74408 e!92555)))

(declare-fun c!26798 () Bool)

(assert (=> d!44905 (= c!26798 lt!74407)))

(assert (=> d!44905 (= lt!74407 (containsKey!180 (toList!888 lt!73073) lt!73074))))

(assert (=> d!44905 (= (contains!923 lt!73073 lt!73074) lt!74409)))

(declare-fun b!142044 () Bool)

(declare-fun lt!74410 () Unit!4373)

(assert (=> b!142044 (= e!92555 lt!74410)))

(assert (=> b!142044 (= lt!74410 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73073) lt!73074))))

(assert (=> b!142044 (isDefined!129 (getValueByKey!176 (toList!888 lt!73073) lt!73074))))

(declare-fun b!142045 () Bool)

(declare-fun Unit!4487 () Unit!4373)

(assert (=> b!142045 (= e!92555 Unit!4487)))

(declare-fun b!142046 () Bool)

(assert (=> b!142046 (= e!92554 (isDefined!129 (getValueByKey!176 (toList!888 lt!73073) lt!73074)))))

(assert (= (and d!44905 c!26798) b!142044))

(assert (= (and d!44905 (not c!26798)) b!142045))

(assert (= (and d!44905 (not res!67747)) b!142046))

(declare-fun m!170813 () Bool)

(assert (=> d!44905 m!170813))

(declare-fun m!170815 () Bool)

(assert (=> b!142044 m!170815))

(assert (=> b!142044 m!168513))

(assert (=> b!142044 m!168513))

(declare-fun m!170817 () Bool)

(assert (=> b!142044 m!170817))

(assert (=> b!142046 m!168513))

(assert (=> b!142046 m!168513))

(assert (=> b!142046 m!170817))

(assert (=> d!43915 d!44905))

(assert (=> d!43915 d!43927))

(assert (=> d!43915 d!43919))

(declare-fun d!44907 () Bool)

(declare-fun res!67748 () Bool)

(declare-fun e!92556 () Bool)

(assert (=> d!44907 (=> res!67748 e!92556)))

(assert (=> d!44907 (= res!67748 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))))

(assert (=> d!44907 (= (containsKey!180 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) e!92556)))

(declare-fun b!142047 () Bool)

(declare-fun e!92557 () Bool)

(assert (=> b!142047 (= e!92556 e!92557)))

(declare-fun res!67749 () Bool)

(assert (=> b!142047 (=> (not res!67749) (not e!92557))))

(assert (=> b!142047 (= res!67749 (and (or (not ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (bvsle (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))) ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))))

(declare-fun b!142048 () Bool)

(assert (=> b!142048 (= e!92557 (containsKey!180 (t!6329 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (= (and d!44907 (not res!67748)) b!142047))

(assert (= (and b!142047 res!67749) b!142048))

(assert (=> b!142048 m!166659))

(declare-fun m!170819 () Bool)

(assert (=> b!142048 m!170819))

(assert (=> d!43723 d!44907))

(declare-fun lt!74411 () Bool)

(declare-fun d!44909 () Bool)

(assert (=> d!44909 (= lt!74411 (select (content!138 (toList!888 lt!73523)) (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))

(declare-fun e!92559 () Bool)

(assert (=> d!44909 (= lt!74411 e!92559)))

(declare-fun res!67750 () Bool)

(assert (=> d!44909 (=> (not res!67750) (not e!92559))))

(assert (=> d!44909 (= res!67750 ((_ is Cons!1741) (toList!888 lt!73523)))))

(assert (=> d!44909 (= (contains!925 (toList!888 lt!73523) (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) lt!74411)))

(declare-fun b!142049 () Bool)

(declare-fun e!92558 () Bool)

(assert (=> b!142049 (= e!92559 e!92558)))

(declare-fun res!67751 () Bool)

(assert (=> b!142049 (=> res!67751 e!92558)))

(assert (=> b!142049 (= res!67751 (= (h!2348 (toList!888 lt!73523)) (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))

(declare-fun b!142050 () Bool)

(assert (=> b!142050 (= e!92558 (contains!925 (t!6329 (toList!888 lt!73523)) (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44909 res!67750) b!142049))

(assert (= (and b!142049 (not res!67751)) b!142050))

(declare-fun m!170821 () Bool)

(assert (=> d!44909 m!170821))

(declare-fun m!170823 () Bool)

(assert (=> d!44909 m!170823))

(declare-fun m!170825 () Bool)

(assert (=> b!142050 m!170825))

(assert (=> b!140266 d!44909))

(declare-fun d!44911 () Bool)

(declare-fun e!92560 () Bool)

(assert (=> d!44911 e!92560))

(declare-fun res!67752 () Bool)

(assert (=> d!44911 (=> (not res!67752) (not e!92560))))

(declare-fun lt!74415 () ListLongMap!1745)

(assert (=> d!44911 (= res!67752 (contains!923 lt!74415 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74412 () List!1745)

(assert (=> d!44911 (= lt!74415 (ListLongMap!1746 lt!74412))))

(declare-fun lt!74413 () Unit!4373)

(declare-fun lt!74414 () Unit!4373)

(assert (=> d!44911 (= lt!74413 lt!74414)))

(assert (=> d!44911 (= (getValueByKey!176 lt!74412 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44911 (= lt!74414 (lemmaContainsTupThenGetReturnValue!90 lt!74412 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44911 (= lt!74412 (insertStrictlySorted!93 (toList!888 call!15609) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44911 (= (+!179 call!15609 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74415)))

(declare-fun b!142051 () Bool)

(declare-fun res!67753 () Bool)

(assert (=> b!142051 (=> (not res!67753) (not e!92560))))

(assert (=> b!142051 (= res!67753 (= (getValueByKey!176 (toList!888 lt!74415) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142052 () Bool)

(assert (=> b!142052 (= e!92560 (contains!925 (toList!888 lt!74415) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44911 res!67752) b!142051))

(assert (= (and b!142051 res!67753) b!142052))

(declare-fun m!170827 () Bool)

(assert (=> d!44911 m!170827))

(declare-fun m!170829 () Bool)

(assert (=> d!44911 m!170829))

(declare-fun m!170831 () Bool)

(assert (=> d!44911 m!170831))

(declare-fun m!170833 () Bool)

(assert (=> d!44911 m!170833))

(declare-fun m!170835 () Bool)

(assert (=> b!142051 m!170835))

(declare-fun m!170837 () Bool)

(assert (=> b!142052 m!170837))

(assert (=> b!140480 d!44911))

(declare-fun d!44913 () Bool)

(declare-fun e!92561 () Bool)

(assert (=> d!44913 e!92561))

(declare-fun res!67754 () Bool)

(assert (=> d!44913 (=> res!67754 e!92561)))

(declare-fun lt!74418 () Bool)

(assert (=> d!44913 (= res!67754 (not lt!74418))))

(declare-fun lt!74416 () Bool)

(assert (=> d!44913 (= lt!74418 lt!74416)))

(declare-fun lt!74417 () Unit!4373)

(declare-fun e!92562 () Unit!4373)

(assert (=> d!44913 (= lt!74417 e!92562)))

(declare-fun c!26799 () Bool)

(assert (=> d!44913 (= c!26799 lt!74416)))

(assert (=> d!44913 (= lt!74416 (containsKey!180 (toList!888 lt!73650) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44913 (= (contains!923 lt!73650 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74418)))

(declare-fun b!142053 () Bool)

(declare-fun lt!74419 () Unit!4373)

(assert (=> b!142053 (= e!92562 lt!74419)))

(assert (=> b!142053 (= lt!74419 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73650) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142053 (isDefined!129 (getValueByKey!176 (toList!888 lt!73650) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142054 () Bool)

(declare-fun Unit!4488 () Unit!4373)

(assert (=> b!142054 (= e!92562 Unit!4488)))

(declare-fun b!142055 () Bool)

(assert (=> b!142055 (= e!92561 (isDefined!129 (getValueByKey!176 (toList!888 lt!73650) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44913 c!26799) b!142053))

(assert (= (and d!44913 (not c!26799)) b!142054))

(assert (= (and d!44913 (not res!67754)) b!142055))

(declare-fun m!170839 () Bool)

(assert (=> d!44913 m!170839))

(declare-fun m!170841 () Bool)

(assert (=> b!142053 m!170841))

(assert (=> b!142053 m!169453))

(assert (=> b!142053 m!169453))

(declare-fun m!170843 () Bool)

(assert (=> b!142053 m!170843))

(assert (=> b!142055 m!169453))

(assert (=> b!142055 m!169453))

(assert (=> b!142055 m!170843))

(assert (=> bm!15594 d!44913))

(declare-fun d!44915 () Bool)

(declare-fun e!92563 () Bool)

(assert (=> d!44915 e!92563))

(declare-fun res!67755 () Bool)

(assert (=> d!44915 (=> res!67755 e!92563)))

(declare-fun lt!74422 () Bool)

(assert (=> d!44915 (= res!67755 (not lt!74422))))

(declare-fun lt!74420 () Bool)

(assert (=> d!44915 (= lt!74422 lt!74420)))

(declare-fun lt!74421 () Unit!4373)

(declare-fun e!92564 () Unit!4373)

(assert (=> d!44915 (= lt!74421 e!92564)))

(declare-fun c!26800 () Bool)

(assert (=> d!44915 (= c!26800 lt!74420)))

(assert (=> d!44915 (= lt!74420 (containsKey!180 (toList!888 lt!73378) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44915 (= (contains!923 lt!73378 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74422)))

(declare-fun b!142056 () Bool)

(declare-fun lt!74423 () Unit!4373)

(assert (=> b!142056 (= e!92564 lt!74423)))

(assert (=> b!142056 (= lt!74423 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73378) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142056 (isDefined!129 (getValueByKey!176 (toList!888 lt!73378) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142057 () Bool)

(declare-fun Unit!4489 () Unit!4373)

(assert (=> b!142057 (= e!92564 Unit!4489)))

(declare-fun b!142058 () Bool)

(assert (=> b!142058 (= e!92563 (isDefined!129 (getValueByKey!176 (toList!888 lt!73378) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44915 c!26800) b!142056))

(assert (= (and d!44915 (not c!26800)) b!142057))

(assert (= (and d!44915 (not res!67755)) b!142058))

(declare-fun m!170845 () Bool)

(assert (=> d!44915 m!170845))

(declare-fun m!170847 () Bool)

(assert (=> b!142056 m!170847))

(assert (=> b!142056 m!169343))

(assert (=> b!142056 m!169343))

(declare-fun m!170849 () Bool)

(assert (=> b!142056 m!170849))

(assert (=> b!142058 m!169343))

(assert (=> b!142058 m!169343))

(assert (=> b!142058 m!170849))

(assert (=> bm!15549 d!44915))

(declare-fun d!44917 () Bool)

(declare-fun lt!74424 () Bool)

(assert (=> d!44917 (= lt!74424 (select (content!138 (toList!888 lt!73413)) (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))

(declare-fun e!92566 () Bool)

(assert (=> d!44917 (= lt!74424 e!92566)))

(declare-fun res!67756 () Bool)

(assert (=> d!44917 (=> (not res!67756) (not e!92566))))

(assert (=> d!44917 (= res!67756 ((_ is Cons!1741) (toList!888 lt!73413)))))

(assert (=> d!44917 (= (contains!925 (toList!888 lt!73413) (tuple2!2699 lt!73141 (minValue!2790 newMap!16))) lt!74424)))

(declare-fun b!142059 () Bool)

(declare-fun e!92565 () Bool)

(assert (=> b!142059 (= e!92566 e!92565)))

(declare-fun res!67757 () Bool)

(assert (=> b!142059 (=> res!67757 e!92565)))

(assert (=> b!142059 (= res!67757 (= (h!2348 (toList!888 lt!73413)) (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))

(declare-fun b!142060 () Bool)

(assert (=> b!142060 (= e!92565 (contains!925 (t!6329 (toList!888 lt!73413)) (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))

(assert (= (and d!44917 res!67756) b!142059))

(assert (= (and b!142059 (not res!67757)) b!142060))

(declare-fun m!170851 () Bool)

(assert (=> d!44917 m!170851))

(declare-fun m!170853 () Bool)

(assert (=> d!44917 m!170853))

(declare-fun m!170855 () Bool)

(assert (=> b!142060 m!170855))

(assert (=> b!140098 d!44917))

(declare-fun d!44919 () Bool)

(declare-fun res!67758 () Bool)

(declare-fun e!92567 () Bool)

(assert (=> d!44919 (=> res!67758 e!92567)))

(assert (=> d!44919 (= res!67758 (and ((_ is Cons!1741) (toList!888 lt!73093)) (= (_1!1360 (h!2348 (toList!888 lt!73093))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44919 (= (containsKey!180 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000) e!92567)))

(declare-fun b!142061 () Bool)

(declare-fun e!92568 () Bool)

(assert (=> b!142061 (= e!92567 e!92568)))

(declare-fun res!67759 () Bool)

(assert (=> b!142061 (=> (not res!67759) (not e!92568))))

(assert (=> b!142061 (= res!67759 (and (or (not ((_ is Cons!1741) (toList!888 lt!73093))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73093))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73093)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73093))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142062 () Bool)

(assert (=> b!142062 (= e!92568 (containsKey!180 (t!6329 (toList!888 lt!73093)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44919 (not res!67758)) b!142061))

(assert (= (and b!142061 res!67759) b!142062))

(declare-fun m!170857 () Bool)

(assert (=> b!142062 m!170857))

(assert (=> d!43537 d!44919))

(declare-fun call!15739 () Bool)

(declare-fun bm!15736 () Bool)

(declare-fun c!26801 () Bool)

(assert (=> bm!15736 (= call!15739 (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (bvadd lt!73245 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26801 (Cons!1742 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd lt!73245 #b00000000000000000000000000000001)) (ite c!26292 (Cons!1742 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) lt!73258) lt!73258)) (ite c!26292 (Cons!1742 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) lt!73258) lt!73258))))))

(declare-fun b!142063 () Bool)

(declare-fun e!92572 () Bool)

(assert (=> b!142063 (= e!92572 call!15739)))

(declare-fun b!142065 () Bool)

(assert (=> b!142065 (= e!92572 call!15739)))

(declare-fun b!142066 () Bool)

(declare-fun e!92569 () Bool)

(declare-fun e!92570 () Bool)

(assert (=> b!142066 (= e!92569 e!92570)))

(declare-fun res!67761 () Bool)

(assert (=> b!142066 (=> (not res!67761) (not e!92570))))

(declare-fun e!92571 () Bool)

(assert (=> b!142066 (= res!67761 (not e!92571))))

(declare-fun res!67762 () Bool)

(assert (=> b!142066 (=> (not res!67762) (not e!92571))))

(assert (=> b!142066 (= res!67762 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd lt!73245 #b00000000000000000000000000000001))))))

(declare-fun b!142067 () Bool)

(assert (=> b!142067 (= e!92570 e!92572)))

(assert (=> b!142067 (= c!26801 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd lt!73245 #b00000000000000000000000000000001))))))

(declare-fun d!44921 () Bool)

(declare-fun res!67760 () Bool)

(assert (=> d!44921 (=> res!67760 e!92569)))

(assert (=> d!44921 (= res!67760 (bvsge (bvadd lt!73245 #b00000000000000000000000000000001) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!44921 (= (arrayNoDuplicates!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (bvadd lt!73245 #b00000000000000000000000000000001) (ite c!26292 (Cons!1742 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) lt!73258) lt!73258)) e!92569)))

(declare-fun b!142064 () Bool)

(assert (=> b!142064 (= e!92571 (contains!924 (ite c!26292 (Cons!1742 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) lt!73245) lt!73258) lt!73258) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd lt!73245 #b00000000000000000000000000000001))))))

(assert (= (and d!44921 (not res!67760)) b!142066))

(assert (= (and b!142066 res!67762) b!142064))

(assert (= (and b!142066 res!67761) b!142067))

(assert (= (and b!142067 c!26801) b!142063))

(assert (= (and b!142067 (not c!26801)) b!142065))

(assert (= (or b!142063 b!142065) bm!15736))

(declare-fun m!170859 () Bool)

(assert (=> bm!15736 m!170859))

(declare-fun m!170861 () Bool)

(assert (=> bm!15736 m!170861))

(assert (=> b!142066 m!170859))

(assert (=> b!142066 m!170859))

(declare-fun m!170863 () Bool)

(assert (=> b!142066 m!170863))

(assert (=> b!142067 m!170859))

(assert (=> b!142067 m!170859))

(assert (=> b!142067 m!170863))

(assert (=> b!142064 m!170859))

(assert (=> b!142064 m!170859))

(declare-fun m!170865 () Bool)

(assert (=> b!142064 m!170865))

(assert (=> bm!15585 d!44921))

(declare-fun bm!15737 () Bool)

(declare-fun c!26802 () Bool)

(declare-fun call!15740 () Bool)

(assert (=> bm!15737 (= call!15740 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26802 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26366 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))) (ite c!26366 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))))))))

(declare-fun b!142068 () Bool)

(declare-fun e!92576 () Bool)

(assert (=> b!142068 (= e!92576 call!15740)))

(declare-fun b!142070 () Bool)

(assert (=> b!142070 (= e!92576 call!15740)))

(declare-fun b!142071 () Bool)

(declare-fun e!92573 () Bool)

(declare-fun e!92574 () Bool)

(assert (=> b!142071 (= e!92573 e!92574)))

(declare-fun res!67764 () Bool)

(assert (=> b!142071 (=> (not res!67764) (not e!92574))))

(declare-fun e!92575 () Bool)

(assert (=> b!142071 (= res!67764 (not e!92575))))

(declare-fun res!67765 () Bool)

(assert (=> b!142071 (=> (not res!67765) (not e!92575))))

(assert (=> b!142071 (= res!67765 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142072 () Bool)

(assert (=> b!142072 (= e!92574 e!92576)))

(assert (=> b!142072 (= c!26802 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!44923 () Bool)

(declare-fun res!67763 () Bool)

(assert (=> d!44923 (=> res!67763 e!92573)))

(assert (=> d!44923 (= res!67763 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!44923 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26366 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)))) e!92573)))

(declare-fun b!142069 () Bool)

(assert (=> b!142069 (= e!92575 (contains!924 (ite c!26366 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (ite c!26127 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743)) (ite c!26030 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) Nil!1743) Nil!1743))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!44923 (not res!67763)) b!142071))

(assert (= (and b!142071 res!67765) b!142069))

(assert (= (and b!142071 res!67764) b!142072))

(assert (= (and b!142072 c!26802) b!142068))

(assert (= (and b!142072 (not c!26802)) b!142070))

(assert (= (or b!142068 b!142070) bm!15737))

(declare-fun m!170867 () Bool)

(assert (=> bm!15737 m!170867))

(declare-fun m!170869 () Bool)

(assert (=> bm!15737 m!170869))

(assert (=> b!142071 m!170867))

(assert (=> b!142071 m!170867))

(declare-fun m!170871 () Bool)

(assert (=> b!142071 m!170871))

(assert (=> b!142072 m!170867))

(assert (=> b!142072 m!170867))

(assert (=> b!142072 m!170871))

(assert (=> b!142069 m!170867))

(assert (=> b!142069 m!170867))

(declare-fun m!170873 () Bool)

(assert (=> b!142069 m!170873))

(assert (=> bm!15625 d!44923))

(declare-fun d!44925 () Bool)

(declare-fun res!67766 () Bool)

(declare-fun e!92577 () Bool)

(assert (=> d!44925 (=> res!67766 e!92577)))

(assert (=> d!44925 (= res!67766 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))) lt!73154)))))

(assert (=> d!44925 (= (containsKey!180 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))) lt!73154) e!92577)))

(declare-fun b!142073 () Bool)

(declare-fun e!92578 () Bool)

(assert (=> b!142073 (= e!92577 e!92578)))

(declare-fun res!67767 () Bool)

(assert (=> b!142073 (=> (not res!67767) (not e!92578))))

(assert (=> b!142073 (= res!67767 (and (or (not ((_ is Cons!1741) (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))) (bvsle (_1!1360 (h!2348 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))) lt!73154)) ((_ is Cons!1741) (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))) (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16)))))) lt!73154)))))

(declare-fun b!142074 () Bool)

(assert (=> b!142074 (= e!92578 (containsKey!180 (t!6329 (toList!888 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))))) lt!73154))))

(assert (= (and d!44925 (not res!67766)) b!142073))

(assert (= (and b!142073 res!67767) b!142074))

(declare-fun m!170875 () Bool)

(assert (=> b!142074 m!170875))

(assert (=> d!43509 d!44925))

(declare-fun d!44927 () Bool)

(assert (=> d!44927 (= (apply!120 lt!73702 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73702) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5970 () Bool)

(assert (= bs!5970 d!44927))

(assert (=> bs!5970 m!169673))

(assert (=> bs!5970 m!169673))

(declare-fun m!170877 () Bool)

(assert (=> bs!5970 m!170877))

(assert (=> b!140508 d!44927))

(declare-fun d!44929 () Bool)

(assert (=> d!44929 (isDefined!129 (getValueByKey!176 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74425 () Unit!4373)

(assert (=> d!44929 (= lt!74425 (choose!864 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92579 () Bool)

(assert (=> d!44929 e!92579))

(declare-fun res!67768 () Bool)

(assert (=> d!44929 (=> (not res!67768) (not e!92579))))

(assert (=> d!44929 (= res!67768 (isStrictlySorted!325 (toList!888 lt!73093)))))

(assert (=> d!44929 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74425)))

(declare-fun b!142075 () Bool)

(assert (=> b!142075 (= e!92579 (containsKey!180 (toList!888 lt!73093) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44929 res!67768) b!142075))

(assert (=> d!44929 m!166385))

(assert (=> d!44929 m!168025))

(assert (=> d!44929 m!168025))

(assert (=> d!44929 m!168027))

(assert (=> d!44929 m!166385))

(declare-fun m!170879 () Bool)

(assert (=> d!44929 m!170879))

(assert (=> d!44929 m!168933))

(assert (=> b!142075 m!166385))

(assert (=> b!142075 m!168021))

(assert (=> b!140539 d!44929))

(assert (=> b!140539 d!44665))

(assert (=> b!140539 d!44267))

(declare-fun b!142079 () Bool)

(declare-fun e!92581 () Option!182)

(assert (=> b!142079 (= e!92581 None!180)))

(declare-fun b!142076 () Bool)

(declare-fun e!92580 () Option!182)

(assert (=> b!142076 (= e!92580 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73546)))))))

(declare-fun b!142077 () Bool)

(assert (=> b!142077 (= e!92580 e!92581)))

(declare-fun c!26804 () Bool)

(assert (=> b!142077 (= c!26804 (and ((_ is Cons!1741) (toList!888 lt!73546)) (not (= (_1!1360 (h!2348 (toList!888 lt!73546))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun d!44931 () Bool)

(declare-fun c!26803 () Bool)

(assert (=> d!44931 (= c!26803 (and ((_ is Cons!1741) (toList!888 lt!73546)) (= (_1!1360 (h!2348 (toList!888 lt!73546))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44931 (= (getValueByKey!176 (toList!888 lt!73546) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92580)))

(declare-fun b!142078 () Bool)

(assert (=> b!142078 (= e!92581 (getValueByKey!176 (t!6329 (toList!888 lt!73546)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44931 c!26803) b!142076))

(assert (= (and d!44931 (not c!26803)) b!142077))

(assert (= (and b!142077 c!26804) b!142078))

(assert (= (and b!142077 (not c!26804)) b!142079))

(declare-fun m!170881 () Bool)

(assert (=> b!142078 m!170881))

(assert (=> b!140318 d!44931))

(declare-fun d!44933 () Bool)

(assert (=> d!44933 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(declare-fun lt!74426 () Unit!4373)

(assert (=> d!44933 (= lt!74426 (choose!864 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(declare-fun e!92582 () Bool)

(assert (=> d!44933 e!92582))

(declare-fun res!67769 () Bool)

(assert (=> d!44933 (=> (not res!67769) (not e!92582))))

(assert (=> d!44933 (= res!67769 (isStrictlySorted!325 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))

(assert (=> d!44933 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))) lt!74426)))

(declare-fun b!142080 () Bool)

(assert (=> b!142080 (= e!92582 (containsKey!180 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) lt!72983 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))

(assert (= (and d!44933 res!67769) b!142080))

(assert (=> d!44933 m!166199))

(assert (=> d!44933 m!167877))

(assert (=> d!44933 m!167877))

(assert (=> d!44933 m!167879))

(assert (=> d!44933 m!166199))

(declare-fun m!170883 () Bool)

(assert (=> d!44933 m!170883))

(declare-fun m!170885 () Bool)

(assert (=> d!44933 m!170885))

(assert (=> b!142080 m!166199))

(assert (=> b!142080 m!167873))

(assert (=> b!140466 d!44933))

(assert (=> b!140466 d!44667))

(assert (=> b!140466 d!44669))

(assert (=> b!140824 d!44139))

(declare-fun d!44935 () Bool)

(assert (=> d!44935 (= (apply!120 lt!73496 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1531 (getValueByKey!176 (toList!888 lt!73496) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!5971 () Bool)

(assert (= bs!5971 d!44935))

(assert (=> bs!5971 m!166463))

(assert (=> bs!5971 m!168871))

(assert (=> bs!5971 m!168871))

(declare-fun m!170887 () Bool)

(assert (=> bs!5971 m!170887))

(assert (=> b!140244 d!44935))

(assert (=> b!140244 d!44243))

(declare-fun d!44937 () Bool)

(assert (=> d!44937 (= (get!1531 (getValueByKey!176 (toList!888 lt!73312) lt!73313)) (v!3284 (getValueByKey!176 (toList!888 lt!73312) lt!73313)))))

(assert (=> d!43633 d!44937))

(declare-fun b!142084 () Bool)

(declare-fun e!92584 () Option!182)

(assert (=> b!142084 (= e!92584 None!180)))

(declare-fun b!142081 () Bool)

(declare-fun e!92583 () Option!182)

(assert (=> b!142081 (= e!92583 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73312)))))))

(declare-fun b!142082 () Bool)

(assert (=> b!142082 (= e!92583 e!92584)))

(declare-fun c!26806 () Bool)

(assert (=> b!142082 (= c!26806 (and ((_ is Cons!1741) (toList!888 lt!73312)) (not (= (_1!1360 (h!2348 (toList!888 lt!73312))) lt!73313))))))

(declare-fun d!44939 () Bool)

(declare-fun c!26805 () Bool)

(assert (=> d!44939 (= c!26805 (and ((_ is Cons!1741) (toList!888 lt!73312)) (= (_1!1360 (h!2348 (toList!888 lt!73312))) lt!73313)))))

(assert (=> d!44939 (= (getValueByKey!176 (toList!888 lt!73312) lt!73313) e!92583)))

(declare-fun b!142083 () Bool)

(assert (=> b!142083 (= e!92584 (getValueByKey!176 (t!6329 (toList!888 lt!73312)) lt!73313))))

(assert (= (and d!44939 c!26805) b!142081))

(assert (= (and d!44939 (not c!26805)) b!142082))

(assert (= (and b!142082 c!26806) b!142083))

(assert (= (and b!142082 (not c!26806)) b!142084))

(declare-fun m!170889 () Bool)

(assert (=> b!142083 m!170889))

(assert (=> d!43633 d!44939))

(declare-fun b!142088 () Bool)

(declare-fun e!92586 () Option!182)

(assert (=> b!142088 (= e!92586 None!180)))

(declare-fun b!142085 () Bool)

(declare-fun e!92585 () Option!182)

(assert (=> b!142085 (= e!92585 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73847)))))))

(declare-fun b!142086 () Bool)

(assert (=> b!142086 (= e!92585 e!92586)))

(declare-fun c!26808 () Bool)

(assert (=> b!142086 (= c!26808 (and ((_ is Cons!1741) (toList!888 lt!73847)) (not (= (_1!1360 (h!2348 (toList!888 lt!73847))) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))))

(declare-fun d!44941 () Bool)

(declare-fun c!26807 () Bool)

(assert (=> d!44941 (= c!26807 (and ((_ is Cons!1741) (toList!888 lt!73847)) (= (_1!1360 (h!2348 (toList!888 lt!73847))) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))))

(assert (=> d!44941 (= (getValueByKey!176 (toList!888 lt!73847) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))) e!92585)))

(declare-fun b!142087 () Bool)

(assert (=> b!142087 (= e!92586 (getValueByKey!176 (t!6329 (toList!888 lt!73847)) (_1!1360 (tuple2!2699 lt!73076 (minValue!2790 newMap!16)))))))

(assert (= (and d!44941 c!26807) b!142085))

(assert (= (and d!44941 (not c!26807)) b!142086))

(assert (= (and b!142086 c!26808) b!142087))

(assert (= (and b!142086 (not c!26808)) b!142088))

(declare-fun m!170891 () Bool)

(assert (=> b!142087 m!170891))

(assert (=> b!140741 d!44941))

(declare-fun d!44943 () Bool)

(declare-fun e!92587 () Bool)

(assert (=> d!44943 e!92587))

(declare-fun res!67770 () Bool)

(assert (=> d!44943 (=> res!67770 e!92587)))

(declare-fun lt!74429 () Bool)

(assert (=> d!44943 (= res!67770 (not lt!74429))))

(declare-fun lt!74427 () Bool)

(assert (=> d!44943 (= lt!74429 lt!74427)))

(declare-fun lt!74428 () Unit!4373)

(declare-fun e!92588 () Unit!4373)

(assert (=> d!44943 (= lt!74428 e!92588)))

(declare-fun c!26809 () Bool)

(assert (=> d!44943 (= c!26809 lt!74427)))

(assert (=> d!44943 (= lt!74427 (containsKey!180 (toList!888 lt!73455) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (=> d!44943 (= (contains!923 lt!73455 (_1!1360 (tuple2!2699 lt!73053 lt!73050))) lt!74429)))

(declare-fun b!142089 () Bool)

(declare-fun lt!74430 () Unit!4373)

(assert (=> b!142089 (= e!92588 lt!74430)))

(assert (=> b!142089 (= lt!74430 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73455) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (=> b!142089 (isDefined!129 (getValueByKey!176 (toList!888 lt!73455) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(declare-fun b!142090 () Bool)

(declare-fun Unit!4490 () Unit!4373)

(assert (=> b!142090 (= e!92588 Unit!4490)))

(declare-fun b!142091 () Bool)

(assert (=> b!142091 (= e!92587 (isDefined!129 (getValueByKey!176 (toList!888 lt!73455) (_1!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (= (and d!44943 c!26809) b!142089))

(assert (= (and d!44943 (not c!26809)) b!142090))

(assert (= (and d!44943 (not res!67770)) b!142091))

(declare-fun m!170893 () Bool)

(assert (=> d!44943 m!170893))

(declare-fun m!170895 () Bool)

(assert (=> b!142089 m!170895))

(assert (=> b!142089 m!167279))

(assert (=> b!142089 m!167279))

(declare-fun m!170897 () Bool)

(assert (=> b!142089 m!170897))

(assert (=> b!142091 m!167279))

(assert (=> b!142091 m!167279))

(assert (=> b!142091 m!170897))

(assert (=> d!43581 d!44943))

(declare-fun b!142095 () Bool)

(declare-fun e!92590 () Option!182)

(assert (=> b!142095 (= e!92590 None!180)))

(declare-fun b!142092 () Bool)

(declare-fun e!92589 () Option!182)

(assert (=> b!142092 (= e!92589 (Some!181 (_2!1360 (h!2348 lt!73452))))))

(declare-fun b!142093 () Bool)

(assert (=> b!142093 (= e!92589 e!92590)))

(declare-fun c!26811 () Bool)

(assert (=> b!142093 (= c!26811 (and ((_ is Cons!1741) lt!73452) (not (= (_1!1360 (h!2348 lt!73452)) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))))

(declare-fun c!26810 () Bool)

(declare-fun d!44945 () Bool)

(assert (=> d!44945 (= c!26810 (and ((_ is Cons!1741) lt!73452) (= (_1!1360 (h!2348 lt!73452)) (_1!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (=> d!44945 (= (getValueByKey!176 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050))) e!92589)))

(declare-fun b!142094 () Bool)

(assert (=> b!142094 (= e!92590 (getValueByKey!176 (t!6329 lt!73452) (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (= (and d!44945 c!26810) b!142092))

(assert (= (and d!44945 (not c!26810)) b!142093))

(assert (= (and b!142093 c!26811) b!142094))

(assert (= (and b!142093 (not c!26811)) b!142095))

(declare-fun m!170899 () Bool)

(assert (=> b!142094 m!170899))

(assert (=> d!43581 d!44945))

(declare-fun d!44947 () Bool)

(assert (=> d!44947 (= (getValueByKey!176 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050))) (Some!181 (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))

(declare-fun lt!74431 () Unit!4373)

(assert (=> d!44947 (= lt!74431 (choose!865 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))

(declare-fun e!92591 () Bool)

(assert (=> d!44947 e!92591))

(declare-fun res!67771 () Bool)

(assert (=> d!44947 (=> (not res!67771) (not e!92591))))

(assert (=> d!44947 (= res!67771 (isStrictlySorted!325 lt!73452))))

(assert (=> d!44947 (= (lemmaContainsTupThenGetReturnValue!90 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))) lt!74431)))

(declare-fun b!142096 () Bool)

(declare-fun res!67772 () Bool)

(assert (=> b!142096 (=> (not res!67772) (not e!92591))))

(assert (=> b!142096 (= res!67772 (containsKey!180 lt!73452 (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(declare-fun b!142097 () Bool)

(assert (=> b!142097 (= e!92591 (contains!925 lt!73452 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (= (and d!44947 res!67771) b!142096))

(assert (= (and b!142096 res!67772) b!142097))

(assert (=> d!44947 m!167273))

(declare-fun m!170901 () Bool)

(assert (=> d!44947 m!170901))

(declare-fun m!170903 () Bool)

(assert (=> d!44947 m!170903))

(declare-fun m!170905 () Bool)

(assert (=> b!142096 m!170905))

(declare-fun m!170907 () Bool)

(assert (=> b!142097 m!170907))

(assert (=> d!43581 d!44947))

(declare-fun b!142098 () Bool)

(declare-fun e!92592 () List!1745)

(declare-fun call!15743 () List!1745)

(assert (=> b!142098 (= e!92592 call!15743)))

(declare-fun bm!15738 () Bool)

(declare-fun call!15741 () List!1745)

(assert (=> bm!15738 (= call!15743 call!15741)))

(declare-fun d!44949 () Bool)

(declare-fun e!92596 () Bool)

(assert (=> d!44949 e!92596))

(declare-fun res!67773 () Bool)

(assert (=> d!44949 (=> (not res!67773) (not e!92596))))

(declare-fun lt!74432 () List!1745)

(assert (=> d!44949 (= res!67773 (isStrictlySorted!325 lt!74432))))

(declare-fun e!92593 () List!1745)

(assert (=> d!44949 (= lt!74432 e!92593)))

(declare-fun c!26814 () Bool)

(assert (=> d!44949 (= c!26814 (and ((_ is Cons!1741) (toList!888 lt!73054)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73054))) (_1!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (=> d!44949 (isStrictlySorted!325 (toList!888 lt!73054))))

(assert (=> d!44949 (= (insertStrictlySorted!93 (toList!888 lt!73054) (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))) lt!74432)))

(declare-fun bm!15739 () Bool)

(declare-fun call!15742 () List!1745)

(assert (=> bm!15739 (= call!15741 call!15742)))

(declare-fun b!142099 () Bool)

(declare-fun e!92594 () List!1745)

(assert (=> b!142099 (= e!92593 e!92594)))

(declare-fun c!26813 () Bool)

(assert (=> b!142099 (= c!26813 (and ((_ is Cons!1741) (toList!888 lt!73054)) (= (_1!1360 (h!2348 (toList!888 lt!73054))) (_1!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(declare-fun b!142100 () Bool)

(assert (=> b!142100 (= e!92593 call!15742)))

(declare-fun bm!15740 () Bool)

(declare-fun e!92595 () List!1745)

(assert (=> bm!15740 (= call!15742 ($colon$colon!94 e!92595 (ite c!26814 (h!2348 (toList!888 lt!73054)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))))

(declare-fun c!26812 () Bool)

(assert (=> bm!15740 (= c!26812 c!26814)))

(declare-fun b!142101 () Bool)

(declare-fun c!26815 () Bool)

(assert (=> b!142101 (= e!92595 (ite c!26813 (t!6329 (toList!888 lt!73054)) (ite c!26815 (Cons!1741 (h!2348 (toList!888 lt!73054)) (t!6329 (toList!888 lt!73054))) Nil!1742)))))

(declare-fun b!142102 () Bool)

(assert (=> b!142102 (= e!92594 call!15741)))

(declare-fun b!142103 () Bool)

(assert (=> b!142103 (= e!92596 (contains!925 lt!74432 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(declare-fun b!142104 () Bool)

(assert (=> b!142104 (= e!92595 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73054)) (_1!1360 (tuple2!2699 lt!73053 lt!73050)) (_2!1360 (tuple2!2699 lt!73053 lt!73050))))))

(declare-fun b!142105 () Bool)

(assert (=> b!142105 (= e!92592 call!15743)))

(declare-fun b!142106 () Bool)

(assert (=> b!142106 (= c!26815 (and ((_ is Cons!1741) (toList!888 lt!73054)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73054))) (_1!1360 (tuple2!2699 lt!73053 lt!73050)))))))

(assert (=> b!142106 (= e!92594 e!92592)))

(declare-fun b!142107 () Bool)

(declare-fun res!67774 () Bool)

(assert (=> b!142107 (=> (not res!67774) (not e!92596))))

(assert (=> b!142107 (= res!67774 (containsKey!180 lt!74432 (_1!1360 (tuple2!2699 lt!73053 lt!73050))))))

(assert (= (and d!44949 c!26814) b!142100))

(assert (= (and d!44949 (not c!26814)) b!142099))

(assert (= (and b!142099 c!26813) b!142102))

(assert (= (and b!142099 (not c!26813)) b!142106))

(assert (= (and b!142106 c!26815) b!142105))

(assert (= (and b!142106 (not c!26815)) b!142098))

(assert (= (or b!142105 b!142098) bm!15738))

(assert (= (or b!142102 bm!15738) bm!15739))

(assert (= (or b!142100 bm!15739) bm!15740))

(assert (= (and bm!15740 c!26812) b!142104))

(assert (= (and bm!15740 (not c!26812)) b!142101))

(assert (= (and d!44949 res!67773) b!142107))

(assert (= (and b!142107 res!67774) b!142103))

(declare-fun m!170909 () Bool)

(assert (=> b!142104 m!170909))

(declare-fun m!170911 () Bool)

(assert (=> d!44949 m!170911))

(declare-fun m!170913 () Bool)

(assert (=> d!44949 m!170913))

(declare-fun m!170915 () Bool)

(assert (=> b!142107 m!170915))

(declare-fun m!170917 () Bool)

(assert (=> bm!15740 m!170917))

(declare-fun m!170919 () Bool)

(assert (=> b!142103 m!170919))

(assert (=> d!43581 d!44949))

(assert (=> d!43441 d!43439))

(declare-fun d!44951 () Bool)

(assert (=> d!44951 (= (getValueByKey!176 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!44951 true))

(declare-fun _$22!497 () Unit!4373)

(assert (=> d!44951 (= (choose!865 lt!73024 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) _$22!497)))

(declare-fun bs!5972 () Bool)

(assert (= bs!5972 d!44951))

(assert (=> bs!5972 m!166275))

(assert (=> d!43441 d!44951))

(declare-fun d!44953 () Bool)

(declare-fun res!67775 () Bool)

(declare-fun e!92597 () Bool)

(assert (=> d!44953 (=> res!67775 e!92597)))

(assert (=> d!44953 (= res!67775 (or ((_ is Nil!1742) lt!73024) ((_ is Nil!1742) (t!6329 lt!73024))))))

(assert (=> d!44953 (= (isStrictlySorted!325 lt!73024) e!92597)))

(declare-fun b!142108 () Bool)

(declare-fun e!92598 () Bool)

(assert (=> b!142108 (= e!92597 e!92598)))

(declare-fun res!67776 () Bool)

(assert (=> b!142108 (=> (not res!67776) (not e!92598))))

(assert (=> b!142108 (= res!67776 (bvslt (_1!1360 (h!2348 lt!73024)) (_1!1360 (h!2348 (t!6329 lt!73024)))))))

(declare-fun b!142109 () Bool)

(assert (=> b!142109 (= e!92598 (isStrictlySorted!325 (t!6329 lt!73024)))))

(assert (= (and d!44953 (not res!67775)) b!142108))

(assert (= (and b!142108 res!67776) b!142109))

(declare-fun m!170921 () Bool)

(assert (=> b!142109 m!170921))

(assert (=> d!43441 d!44953))

(assert (=> b!140394 d!44439))

(declare-fun d!44955 () Bool)

(declare-fun res!67777 () Bool)

(declare-fun e!92599 () Bool)

(assert (=> d!44955 (=> res!67777 e!92599)))

(assert (=> d!44955 (= res!67777 (or ((_ is Nil!1742) lt!73433) ((_ is Nil!1742) (t!6329 lt!73433))))))

(assert (=> d!44955 (= (isStrictlySorted!325 lt!73433) e!92599)))

(declare-fun b!142110 () Bool)

(declare-fun e!92600 () Bool)

(assert (=> b!142110 (= e!92599 e!92600)))

(declare-fun res!67778 () Bool)

(assert (=> b!142110 (=> (not res!67778) (not e!92600))))

(assert (=> b!142110 (= res!67778 (bvslt (_1!1360 (h!2348 lt!73433)) (_1!1360 (h!2348 (t!6329 lt!73433)))))))

(declare-fun b!142111 () Bool)

(assert (=> b!142111 (= e!92600 (isStrictlySorted!325 (t!6329 lt!73433)))))

(assert (= (and d!44955 (not res!67777)) b!142110))

(assert (= (and b!142110 res!67778) b!142111))

(declare-fun m!170923 () Bool)

(assert (=> b!142111 m!170923))

(assert (=> d!43547 d!44955))

(declare-fun d!44957 () Bool)

(declare-fun res!67779 () Bool)

(declare-fun e!92601 () Bool)

(assert (=> d!44957 (=> res!67779 e!92601)))

(assert (=> d!44957 (= res!67779 (or ((_ is Nil!1742) (toList!888 call!15459)) ((_ is Nil!1742) (t!6329 (toList!888 call!15459)))))))

(assert (=> d!44957 (= (isStrictlySorted!325 (toList!888 call!15459)) e!92601)))

(declare-fun b!142112 () Bool)

(declare-fun e!92602 () Bool)

(assert (=> b!142112 (= e!92601 e!92602)))

(declare-fun res!67780 () Bool)

(assert (=> b!142112 (=> (not res!67780) (not e!92602))))

(assert (=> b!142112 (= res!67780 (bvslt (_1!1360 (h!2348 (toList!888 call!15459))) (_1!1360 (h!2348 (t!6329 (toList!888 call!15459))))))))

(declare-fun b!142113 () Bool)

(assert (=> b!142113 (= e!92602 (isStrictlySorted!325 (t!6329 (toList!888 call!15459))))))

(assert (= (and d!44957 (not res!67779)) b!142112))

(assert (= (and b!142112 res!67780) b!142113))

(assert (=> b!142113 m!168835))

(assert (=> d!43547 d!44957))

(declare-fun lt!74433 () Bool)

(declare-fun d!44959 () Bool)

(assert (=> d!44959 (= lt!74433 (select (content!138 (toList!888 lt!73510)) (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))

(declare-fun e!92604 () Bool)

(assert (=> d!44959 (= lt!74433 e!92604)))

(declare-fun res!67781 () Bool)

(assert (=> d!44959 (=> (not res!67781) (not e!92604))))

(assert (=> d!44959 (= res!67781 ((_ is Cons!1741) (toList!888 lt!73510)))))

(assert (=> d!44959 (= (contains!925 (toList!888 lt!73510) (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) lt!74433)))

(declare-fun b!142114 () Bool)

(declare-fun e!92603 () Bool)

(assert (=> b!142114 (= e!92604 e!92603)))

(declare-fun res!67782 () Bool)

(assert (=> b!142114 (=> res!67782 e!92603)))

(assert (=> b!142114 (= res!67782 (= (h!2348 (toList!888 lt!73510)) (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))

(declare-fun b!142115 () Bool)

(assert (=> b!142115 (= e!92603 (contains!925 (t!6329 (toList!888 lt!73510)) (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))

(assert (= (and d!44959 res!67781) b!142114))

(assert (= (and b!142114 (not res!67782)) b!142115))

(declare-fun m!170925 () Bool)

(assert (=> d!44959 m!170925))

(declare-fun m!170927 () Bool)

(assert (=> d!44959 m!170927))

(declare-fun m!170929 () Bool)

(assert (=> b!142115 m!170929))

(assert (=> b!140259 d!44959))

(assert (=> b!140465 d!43703))

(assert (=> b!140465 d!43353))

(declare-fun d!44961 () Bool)

(declare-fun lt!74434 () Bool)

(assert (=> d!44961 (= lt!74434 (select (content!138 lt!73878) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92606 () Bool)

(assert (=> d!44961 (= lt!74434 e!92606)))

(declare-fun res!67783 () Bool)

(assert (=> d!44961 (=> (not res!67783) (not e!92606))))

(assert (=> d!44961 (= res!67783 ((_ is Cons!1741) lt!73878))))

(assert (=> d!44961 (= (contains!925 lt!73878 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74434)))

(declare-fun b!142116 () Bool)

(declare-fun e!92605 () Bool)

(assert (=> b!142116 (= e!92606 e!92605)))

(declare-fun res!67784 () Bool)

(assert (=> b!142116 (=> res!67784 e!92605)))

(assert (=> b!142116 (= res!67784 (= (h!2348 lt!73878) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142117 () Bool)

(assert (=> b!142117 (= e!92605 (contains!925 (t!6329 lt!73878) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44961 res!67783) b!142116))

(assert (= (and b!142116 (not res!67784)) b!142117))

(declare-fun m!170931 () Bool)

(assert (=> d!44961 m!170931))

(declare-fun m!170933 () Bool)

(assert (=> d!44961 m!170933))

(declare-fun m!170935 () Bool)

(assert (=> b!142117 m!170935))

(assert (=> b!140776 d!44961))

(declare-fun d!44963 () Bool)

(assert (=> d!44963 (= (get!1531 (getValueByKey!176 (toList!888 lt!73091) lt!73086)) (v!3284 (getValueByKey!176 (toList!888 lt!73091) lt!73086)))))

(assert (=> d!43923 d!44963))

(declare-fun b!142121 () Bool)

(declare-fun e!92608 () Option!182)

(assert (=> b!142121 (= e!92608 None!180)))

(declare-fun b!142118 () Bool)

(declare-fun e!92607 () Option!182)

(assert (=> b!142118 (= e!92607 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73091)))))))

(declare-fun b!142119 () Bool)

(assert (=> b!142119 (= e!92607 e!92608)))

(declare-fun c!26817 () Bool)

(assert (=> b!142119 (= c!26817 (and ((_ is Cons!1741) (toList!888 lt!73091)) (not (= (_1!1360 (h!2348 (toList!888 lt!73091))) lt!73086))))))

(declare-fun d!44965 () Bool)

(declare-fun c!26816 () Bool)

(assert (=> d!44965 (= c!26816 (and ((_ is Cons!1741) (toList!888 lt!73091)) (= (_1!1360 (h!2348 (toList!888 lt!73091))) lt!73086)))))

(assert (=> d!44965 (= (getValueByKey!176 (toList!888 lt!73091) lt!73086) e!92607)))

(declare-fun b!142120 () Bool)

(assert (=> b!142120 (= e!92608 (getValueByKey!176 (t!6329 (toList!888 lt!73091)) lt!73086))))

(assert (= (and d!44965 c!26816) b!142118))

(assert (= (and d!44965 (not c!26816)) b!142119))

(assert (= (and b!142119 c!26817) b!142120))

(assert (= (and b!142119 (not c!26817)) b!142121))

(declare-fun m!170937 () Bool)

(assert (=> b!142120 m!170937))

(assert (=> d!43923 d!44965))

(declare-fun d!44967 () Bool)

(assert (=> d!44967 (= (apply!120 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) lt!73139) (apply!120 lt!73138 lt!73139))))

(assert (=> d!44967 true))

(declare-fun _$34!1009 () Unit!4373)

(assert (=> d!44967 (= (choose!856 lt!73138 lt!73142 (zeroValue!2790 newMap!16) lt!73139) _$34!1009)))

(declare-fun bs!5973 () Bool)

(assert (= bs!5973 d!44967))

(assert (=> bs!5973 m!166549))

(assert (=> bs!5973 m!166549))

(assert (=> bs!5973 m!166551))

(assert (=> bs!5973 m!166561))

(assert (=> d!43505 d!44967))

(declare-fun d!44969 () Bool)

(declare-fun e!92609 () Bool)

(assert (=> d!44969 e!92609))

(declare-fun res!67785 () Bool)

(assert (=> d!44969 (=> res!67785 e!92609)))

(declare-fun lt!74437 () Bool)

(assert (=> d!44969 (= res!67785 (not lt!74437))))

(declare-fun lt!74435 () Bool)

(assert (=> d!44969 (= lt!74437 lt!74435)))

(declare-fun lt!74436 () Unit!4373)

(declare-fun e!92610 () Unit!4373)

(assert (=> d!44969 (= lt!74436 e!92610)))

(declare-fun c!26818 () Bool)

(assert (=> d!44969 (= c!26818 lt!74435)))

(assert (=> d!44969 (= lt!74435 (containsKey!180 (toList!888 lt!73138) lt!73139))))

(assert (=> d!44969 (= (contains!923 lt!73138 lt!73139) lt!74437)))

(declare-fun b!142122 () Bool)

(declare-fun lt!74438 () Unit!4373)

(assert (=> b!142122 (= e!92610 lt!74438)))

(assert (=> b!142122 (= lt!74438 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73138) lt!73139))))

(assert (=> b!142122 (isDefined!129 (getValueByKey!176 (toList!888 lt!73138) lt!73139))))

(declare-fun b!142123 () Bool)

(declare-fun Unit!4491 () Unit!4373)

(assert (=> b!142123 (= e!92610 Unit!4491)))

(declare-fun b!142124 () Bool)

(assert (=> b!142124 (= e!92609 (isDefined!129 (getValueByKey!176 (toList!888 lt!73138) lt!73139)))))

(assert (= (and d!44969 c!26818) b!142122))

(assert (= (and d!44969 (not c!26818)) b!142123))

(assert (= (and d!44969 (not res!67785)) b!142124))

(declare-fun m!170939 () Bool)

(assert (=> d!44969 m!170939))

(declare-fun m!170941 () Bool)

(assert (=> b!142122 m!170941))

(assert (=> b!142122 m!167079))

(assert (=> b!142122 m!167079))

(declare-fun m!170943 () Bool)

(assert (=> b!142122 m!170943))

(assert (=> b!142124 m!167079))

(assert (=> b!142124 m!167079))

(assert (=> b!142124 m!170943))

(assert (=> d!43505 d!44969))

(assert (=> d!43505 d!43499))

(assert (=> d!43505 d!43503))

(assert (=> d!43505 d!43517))

(declare-fun d!44971 () Bool)

(declare-fun lt!74439 () Bool)

(assert (=> d!44971 (= lt!74439 (select (content!138 lt!73343) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92612 () Bool)

(assert (=> d!44971 (= lt!74439 e!92612)))

(declare-fun res!67786 () Bool)

(assert (=> d!44971 (=> (not res!67786) (not e!92612))))

(assert (=> d!44971 (= res!67786 ((_ is Cons!1741) lt!73343))))

(assert (=> d!44971 (= (contains!925 lt!73343 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74439)))

(declare-fun b!142125 () Bool)

(declare-fun e!92611 () Bool)

(assert (=> b!142125 (= e!92612 e!92611)))

(declare-fun res!67787 () Bool)

(assert (=> b!142125 (=> res!67787 e!92611)))

(assert (=> b!142125 (= res!67787 (= (h!2348 lt!73343) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142126 () Bool)

(assert (=> b!142126 (= e!92611 (contains!925 (t!6329 lt!73343) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!44971 res!67786) b!142125))

(assert (= (and b!142125 (not res!67787)) b!142126))

(declare-fun m!170945 () Bool)

(assert (=> d!44971 m!170945))

(declare-fun m!170947 () Bool)

(assert (=> d!44971 m!170947))

(declare-fun m!170949 () Bool)

(assert (=> b!142126 m!170949))

(assert (=> b!139997 d!44971))

(declare-fun b!142130 () Bool)

(declare-fun e!92614 () Option!182)

(assert (=> b!142130 (= e!92614 None!180)))

(declare-fun b!142127 () Bool)

(declare-fun e!92613 () Option!182)

(assert (=> b!142127 (= e!92613 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73492)))))))

(declare-fun b!142128 () Bool)

(assert (=> b!142128 (= e!92613 e!92614)))

(declare-fun c!26820 () Bool)

(assert (=> b!142128 (= c!26820 (and ((_ is Cons!1741) (toList!888 lt!73492)) (not (= (_1!1360 (h!2348 (toList!888 lt!73492))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26819 () Bool)

(declare-fun d!44973 () Bool)

(assert (=> d!44973 (= c!26819 (and ((_ is Cons!1741) (toList!888 lt!73492)) (= (_1!1360 (h!2348 (toList!888 lt!73492))) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44973 (= (getValueByKey!176 (toList!888 lt!73492) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92613)))

(declare-fun b!142129 () Bool)

(assert (=> b!142129 (= e!92614 (getValueByKey!176 (t!6329 (toList!888 lt!73492)) (_1!1360 (ite (or c!26163 c!26165) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44973 c!26819) b!142127))

(assert (= (and d!44973 (not c!26819)) b!142128))

(assert (= (and b!142128 c!26820) b!142129))

(assert (= (and b!142128 (not c!26820)) b!142130))

(declare-fun m!170951 () Bool)

(assert (=> b!142129 m!170951))

(assert (=> b!140232 d!44973))

(declare-fun d!44975 () Bool)

(assert (=> d!44975 (isDefined!129 (getValueByKey!176 (toList!888 lt!72905) lt!72900))))

(declare-fun lt!74440 () Unit!4373)

(assert (=> d!44975 (= lt!74440 (choose!864 (toList!888 lt!72905) lt!72900))))

(declare-fun e!92615 () Bool)

(assert (=> d!44975 e!92615))

(declare-fun res!67788 () Bool)

(assert (=> d!44975 (=> (not res!67788) (not e!92615))))

(assert (=> d!44975 (= res!67788 (isStrictlySorted!325 (toList!888 lt!72905)))))

(assert (=> d!44975 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72905) lt!72900) lt!74440)))

(declare-fun b!142131 () Bool)

(assert (=> b!142131 (= e!92615 (containsKey!180 (toList!888 lt!72905) lt!72900))))

(assert (= (and d!44975 res!67788) b!142131))

(assert (=> d!44975 m!166321))

(assert (=> d!44975 m!166321))

(assert (=> d!44975 m!168673))

(declare-fun m!170953 () Bool)

(assert (=> d!44975 m!170953))

(assert (=> d!44975 m!168151))

(assert (=> b!142131 m!168669))

(assert (=> b!140833 d!44975))

(assert (=> b!140833 d!44711))

(assert (=> b!140833 d!43551))

(declare-fun b!142132 () Bool)

(declare-fun lt!74447 () Unit!4373)

(declare-fun lt!74443 () Unit!4373)

(assert (=> b!142132 (= lt!74447 lt!74443)))

(declare-fun lt!74442 () V!3555)

(declare-fun lt!74446 () ListLongMap!1745)

(declare-fun lt!74441 () (_ BitVec 64))

(declare-fun lt!74445 () (_ BitVec 64))

(assert (=> b!142132 (not (contains!923 (+!179 lt!74446 (tuple2!2699 lt!74445 lt!74442)) lt!74441))))

(assert (=> b!142132 (= lt!74443 (addStillNotContains!64 lt!74446 lt!74445 lt!74442 lt!74441))))

(assert (=> b!142132 (= lt!74441 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142132 (= lt!74442 (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142132 (= lt!74445 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15744 () ListLongMap!1745)

(assert (=> b!142132 (= lt!74446 call!15744)))

(declare-fun e!92616 () ListLongMap!1745)

(assert (=> b!142132 (= e!92616 (+!179 call!15744 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142134 () Bool)

(declare-fun e!92618 () ListLongMap!1745)

(assert (=> b!142134 (= e!92618 (ListLongMap!1746 Nil!1742))))

(declare-fun b!142135 () Bool)

(declare-fun e!92622 () Bool)

(declare-fun e!92617 () Bool)

(assert (=> b!142135 (= e!92622 e!92617)))

(assert (=> b!142135 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67792 () Bool)

(declare-fun lt!74444 () ListLongMap!1745)

(assert (=> b!142135 (= res!67792 (contains!923 lt!74444 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142135 (=> (not res!67792) (not e!92617))))

(declare-fun b!142136 () Bool)

(declare-fun res!67789 () Bool)

(declare-fun e!92621 () Bool)

(assert (=> b!142136 (=> (not res!67789) (not e!92621))))

(assert (=> b!142136 (= res!67789 (not (contains!923 lt!74444 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142137 () Bool)

(declare-fun e!92619 () Bool)

(assert (=> b!142137 (= e!92622 e!92619)))

(declare-fun c!26823 () Bool)

(assert (=> b!142137 (= c!26823 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!142138 () Bool)

(assert (=> b!142138 (= e!92618 e!92616)))

(declare-fun c!26824 () Bool)

(assert (=> b!142138 (= c!26824 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142139 () Bool)

(declare-fun e!92620 () Bool)

(assert (=> b!142139 (= e!92620 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142139 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!15741 () Bool)

(assert (=> bm!15741 (= call!15744 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!142140 () Bool)

(assert (=> b!142140 (= e!92619 (= lt!74444 (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!142141 () Bool)

(assert (=> b!142141 (= e!92621 e!92622)))

(declare-fun c!26821 () Bool)

(assert (=> b!142141 (= c!26821 e!92620)))

(declare-fun res!67791 () Bool)

(assert (=> b!142141 (=> (not res!67791) (not e!92620))))

(assert (=> b!142141 (= res!67791 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(declare-fun d!44977 () Bool)

(assert (=> d!44977 e!92621))

(declare-fun res!67790 () Bool)

(assert (=> d!44977 (=> (not res!67790) (not e!92621))))

(assert (=> d!44977 (= res!67790 (not (contains!923 lt!74444 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44977 (= lt!74444 e!92618)))

(declare-fun c!26822 () Bool)

(assert (=> d!44977 (= c!26822 (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!44977 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44977 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!72995 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74444)))

(declare-fun b!142133 () Bool)

(assert (=> b!142133 (= e!92619 (isEmpty!417 lt!74444))))

(declare-fun b!142142 () Bool)

(assert (=> b!142142 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!142142 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 newMap!16))))))

(assert (=> b!142142 (= e!92617 (= (apply!120 lt!74444 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142143 () Bool)

(assert (=> b!142143 (= e!92616 call!15744)))

(assert (= (and d!44977 c!26822) b!142134))

(assert (= (and d!44977 (not c!26822)) b!142138))

(assert (= (and b!142138 c!26824) b!142132))

(assert (= (and b!142138 (not c!26824)) b!142143))

(assert (= (or b!142132 b!142143) bm!15741))

(assert (= (and d!44977 res!67790) b!142136))

(assert (= (and b!142136 res!67789) b!142141))

(assert (= (and b!142141 res!67791) b!142139))

(assert (= (and b!142141 c!26821) b!142135))

(assert (= (and b!142141 (not c!26821)) b!142137))

(assert (= (and b!142135 res!67792) b!142142))

(assert (= (and b!142137 c!26823) b!142140))

(assert (= (and b!142137 (not c!26823)) b!142133))

(declare-fun b_lambda!6365 () Bool)

(assert (=> (not b_lambda!6365) (not b!142132)))

(assert (=> b!142132 t!6337))

(declare-fun b_and!8887 () Bool)

(assert (= b_and!8883 (and (=> t!6337 result!4191) b_and!8887)))

(assert (=> b!142132 t!6339))

(declare-fun b_and!8889 () Bool)

(assert (= b_and!8885 (and (=> t!6339 result!4193) b_and!8889)))

(declare-fun b_lambda!6367 () Bool)

(assert (=> (not b_lambda!6367) (not b!142142)))

(assert (=> b!142142 t!6337))

(declare-fun b_and!8891 () Bool)

(assert (= b_and!8887 (and (=> t!6337 result!4191) b_and!8891)))

(assert (=> b!142142 t!6339))

(declare-fun b_and!8893 () Bool)

(assert (= b_and!8889 (and (=> t!6339 result!4193) b_and!8893)))

(declare-fun m!170955 () Bool)

(assert (=> b!142136 m!170955))

(assert (=> b!142138 m!166385))

(assert (=> b!142138 m!166385))

(assert (=> b!142138 m!166389))

(declare-fun m!170957 () Bool)

(assert (=> d!44977 m!170957))

(assert (=> d!44977 m!166429))

(assert (=> b!142132 m!166443))

(declare-fun m!170959 () Bool)

(assert (=> b!142132 m!170959))

(declare-fun m!170961 () Bool)

(assert (=> b!142132 m!170961))

(assert (=> b!142132 m!170959))

(assert (=> b!142132 m!166785))

(declare-fun m!170963 () Bool)

(assert (=> b!142132 m!170963))

(assert (=> b!142132 m!166785))

(assert (=> b!142132 m!166443))

(assert (=> b!142132 m!166787))

(declare-fun m!170965 () Bool)

(assert (=> b!142132 m!170965))

(assert (=> b!142132 m!166385))

(assert (=> b!142139 m!166385))

(assert (=> b!142139 m!166385))

(assert (=> b!142139 m!166389))

(assert (=> bm!15741 m!166029))

(declare-fun m!170967 () Bool)

(assert (=> bm!15741 m!170967))

(declare-fun m!170969 () Bool)

(assert (=> b!142133 m!170969))

(assert (=> b!142142 m!166443))

(assert (=> b!142142 m!166385))

(declare-fun m!170971 () Bool)

(assert (=> b!142142 m!170971))

(assert (=> b!142142 m!166785))

(assert (=> b!142142 m!166785))

(assert (=> b!142142 m!166443))

(assert (=> b!142142 m!166787))

(assert (=> b!142142 m!166385))

(assert (=> b!142135 m!166385))

(assert (=> b!142135 m!166385))

(declare-fun m!170973 () Bool)

(assert (=> b!142135 m!170973))

(assert (=> b!142140 m!166029))

(assert (=> b!142140 m!170967))

(assert (=> bm!15571 d!44977))

(declare-fun d!44979 () Bool)

(assert (=> d!44979 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))

(declare-fun lt!74448 () Unit!4373)

(assert (=> d!44979 (= lt!74448 (choose!864 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))

(declare-fun e!92623 () Bool)

(assert (=> d!44979 e!92623))

(declare-fun res!67793 () Bool)

(assert (=> d!44979 (=> (not res!67793) (not e!92623))))

(assert (=> d!44979 (= res!67793 (isStrictlySorted!325 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44979 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302) lt!74448)))

(declare-fun b!142144 () Bool)

(assert (=> b!142144 (= e!92623 (containsKey!180 (toList!888 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!73302))))

(assert (= (and d!44979 res!67793) b!142144))

(assert (=> d!44979 m!168275))

(assert (=> d!44979 m!168275))

(assert (=> d!44979 m!168277))

(declare-fun m!170975 () Bool)

(assert (=> d!44979 m!170975))

(declare-fun m!170977 () Bool)

(assert (=> d!44979 m!170977))

(assert (=> b!142144 m!168271))

(assert (=> b!140661 d!44979))

(assert (=> b!140661 d!44729))

(assert (=> b!140661 d!44731))

(declare-fun b!142148 () Bool)

(declare-fun e!92625 () Option!182)

(assert (=> b!142148 (= e!92625 None!180)))

(declare-fun b!142145 () Bool)

(declare-fun e!92624 () Option!182)

(assert (=> b!142145 (= e!92624 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72905))))))))

(declare-fun b!142146 () Bool)

(assert (=> b!142146 (= e!92624 e!92625)))

(declare-fun c!26826 () Bool)

(assert (=> b!142146 (= c!26826 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72905))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72905)))) lt!72900))))))

(declare-fun d!44981 () Bool)

(declare-fun c!26825 () Bool)

(assert (=> d!44981 (= c!26825 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72905))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72905)))) lt!72900)))))

(assert (=> d!44981 (= (getValueByKey!176 (t!6329 (toList!888 lt!72905)) lt!72900) e!92624)))

(declare-fun b!142147 () Bool)

(assert (=> b!142147 (= e!92625 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72905))) lt!72900))))

(assert (= (and d!44981 c!26825) b!142145))

(assert (= (and d!44981 (not c!26825)) b!142146))

(assert (= (and b!142146 c!26826) b!142147))

(assert (= (and b!142146 (not c!26826)) b!142148))

(declare-fun m!170979 () Bool)

(assert (=> b!142147 m!170979))

(assert (=> b!140138 d!44981))

(assert (=> d!43679 d!43327))

(assert (=> d!43679 d!43333))

(declare-fun d!44983 () Bool)

(declare-fun res!67794 () Bool)

(declare-fun e!92626 () Bool)

(assert (=> d!44983 (=> res!67794 e!92626)))

(assert (=> d!44983 (= res!67794 (and ((_ is Cons!1741) (toList!888 lt!73158)) (= (_1!1360 (h!2348 (toList!888 lt!73158))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44983 (= (containsKey!180 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000) e!92626)))

(declare-fun b!142149 () Bool)

(declare-fun e!92627 () Bool)

(assert (=> b!142149 (= e!92626 e!92627)))

(declare-fun res!67795 () Bool)

(assert (=> b!142149 (=> (not res!67795) (not e!92627))))

(assert (=> b!142149 (= res!67795 (and (or (not ((_ is Cons!1741) (toList!888 lt!73158))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73158))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73158)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73158))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142150 () Bool)

(assert (=> b!142150 (= e!92627 (containsKey!180 (t!6329 (toList!888 lt!73158)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44983 (not res!67794)) b!142149))

(assert (= (and b!142149 res!67795) b!142150))

(declare-fun m!170981 () Bool)

(assert (=> b!142150 m!170981))

(assert (=> d!43751 d!44983))

(assert (=> b!140091 d!43479))

(declare-fun d!44985 () Bool)

(assert (=> d!44985 (= (get!1531 (getValueByKey!176 (toList!888 lt!73330) lt!73325)) (v!3284 (getValueByKey!176 (toList!888 lt!73330) lt!73325)))))

(assert (=> d!43615 d!44985))

(declare-fun b!142154 () Bool)

(declare-fun e!92629 () Option!182)

(assert (=> b!142154 (= e!92629 None!180)))

(declare-fun b!142151 () Bool)

(declare-fun e!92628 () Option!182)

(assert (=> b!142151 (= e!92628 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73330)))))))

(declare-fun b!142152 () Bool)

(assert (=> b!142152 (= e!92628 e!92629)))

(declare-fun c!26828 () Bool)

(assert (=> b!142152 (= c!26828 (and ((_ is Cons!1741) (toList!888 lt!73330)) (not (= (_1!1360 (h!2348 (toList!888 lt!73330))) lt!73325))))))

(declare-fun d!44987 () Bool)

(declare-fun c!26827 () Bool)

(assert (=> d!44987 (= c!26827 (and ((_ is Cons!1741) (toList!888 lt!73330)) (= (_1!1360 (h!2348 (toList!888 lt!73330))) lt!73325)))))

(assert (=> d!44987 (= (getValueByKey!176 (toList!888 lt!73330) lt!73325) e!92628)))

(declare-fun b!142153 () Bool)

(assert (=> b!142153 (= e!92629 (getValueByKey!176 (t!6329 (toList!888 lt!73330)) lt!73325))))

(assert (= (and d!44987 c!26827) b!142151))

(assert (= (and d!44987 (not c!26827)) b!142152))

(assert (= (and b!142152 c!26828) b!142153))

(assert (= (and b!142152 (not c!26828)) b!142154))

(declare-fun m!170983 () Bool)

(assert (=> b!142153 m!170983))

(assert (=> d!43615 d!44987))

(assert (=> b!140322 d!43463))

(declare-fun d!44989 () Bool)

(assert (=> d!44989 (not (contains!923 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548)) lt!73547))))

(declare-fun lt!74449 () Unit!4373)

(assert (=> d!44989 (= lt!74449 (choose!866 lt!73552 lt!73551 lt!73548 lt!73547))))

(declare-fun e!92630 () Bool)

(assert (=> d!44989 e!92630))

(declare-fun res!67796 () Bool)

(assert (=> d!44989 (=> (not res!67796) (not e!92630))))

(assert (=> d!44989 (= res!67796 (not (contains!923 lt!73552 lt!73547)))))

(assert (=> d!44989 (= (addStillNotContains!64 lt!73552 lt!73551 lt!73548 lt!73547) lt!74449)))

(declare-fun b!142155 () Bool)

(assert (=> b!142155 (= e!92630 (not (= lt!73551 lt!73547)))))

(assert (= (and d!44989 res!67796) b!142155))

(assert (=> d!44989 m!167599))

(assert (=> d!44989 m!167599))

(assert (=> d!44989 m!167601))

(declare-fun m!170985 () Bool)

(assert (=> d!44989 m!170985))

(declare-fun m!170987 () Bool)

(assert (=> d!44989 m!170987))

(assert (=> b!140322 d!44989))

(declare-fun d!44991 () Bool)

(declare-fun e!92631 () Bool)

(assert (=> d!44991 e!92631))

(declare-fun res!67797 () Bool)

(assert (=> d!44991 (=> (not res!67797) (not e!92631))))

(declare-fun lt!74453 () ListLongMap!1745)

(assert (=> d!44991 (= res!67797 (contains!923 lt!74453 (_1!1360 (tuple2!2699 lt!73551 lt!73548))))))

(declare-fun lt!74450 () List!1745)

(assert (=> d!44991 (= lt!74453 (ListLongMap!1746 lt!74450))))

(declare-fun lt!74451 () Unit!4373)

(declare-fun lt!74452 () Unit!4373)

(assert (=> d!44991 (= lt!74451 lt!74452)))

(assert (=> d!44991 (= (getValueByKey!176 lt!74450 (_1!1360 (tuple2!2699 lt!73551 lt!73548))) (Some!181 (_2!1360 (tuple2!2699 lt!73551 lt!73548))))))

(assert (=> d!44991 (= lt!74452 (lemmaContainsTupThenGetReturnValue!90 lt!74450 (_1!1360 (tuple2!2699 lt!73551 lt!73548)) (_2!1360 (tuple2!2699 lt!73551 lt!73548))))))

(assert (=> d!44991 (= lt!74450 (insertStrictlySorted!93 (toList!888 lt!73552) (_1!1360 (tuple2!2699 lt!73551 lt!73548)) (_2!1360 (tuple2!2699 lt!73551 lt!73548))))))

(assert (=> d!44991 (= (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548)) lt!74453)))

(declare-fun b!142156 () Bool)

(declare-fun res!67798 () Bool)

(assert (=> b!142156 (=> (not res!67798) (not e!92631))))

(assert (=> b!142156 (= res!67798 (= (getValueByKey!176 (toList!888 lt!74453) (_1!1360 (tuple2!2699 lt!73551 lt!73548))) (Some!181 (_2!1360 (tuple2!2699 lt!73551 lt!73548)))))))

(declare-fun b!142157 () Bool)

(assert (=> b!142157 (= e!92631 (contains!925 (toList!888 lt!74453) (tuple2!2699 lt!73551 lt!73548)))))

(assert (= (and d!44991 res!67797) b!142156))

(assert (= (and b!142156 res!67798) b!142157))

(declare-fun m!170989 () Bool)

(assert (=> d!44991 m!170989))

(declare-fun m!170991 () Bool)

(assert (=> d!44991 m!170991))

(declare-fun m!170993 () Bool)

(assert (=> d!44991 m!170993))

(declare-fun m!170995 () Bool)

(assert (=> d!44991 m!170995))

(declare-fun m!170997 () Bool)

(assert (=> b!142156 m!170997))

(declare-fun m!170999 () Bool)

(assert (=> b!142157 m!170999))

(assert (=> b!140322 d!44991))

(declare-fun d!44993 () Bool)

(declare-fun e!92632 () Bool)

(assert (=> d!44993 e!92632))

(declare-fun res!67799 () Bool)

(assert (=> d!44993 (=> (not res!67799) (not e!92632))))

(declare-fun lt!74457 () ListLongMap!1745)

(assert (=> d!44993 (= res!67799 (contains!923 lt!74457 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74454 () List!1745)

(assert (=> d!44993 (= lt!74457 (ListLongMap!1746 lt!74454))))

(declare-fun lt!74455 () Unit!4373)

(declare-fun lt!74456 () Unit!4373)

(assert (=> d!44993 (= lt!74455 lt!74456)))

(assert (=> d!44993 (= (getValueByKey!176 lt!74454 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44993 (= lt!74456 (lemmaContainsTupThenGetReturnValue!90 lt!74454 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44993 (= lt!74454 (insertStrictlySorted!93 (toList!888 call!15582) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44993 (= (+!179 call!15582 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74457)))

(declare-fun b!142158 () Bool)

(declare-fun res!67800 () Bool)

(assert (=> b!142158 (=> (not res!67800) (not e!92632))))

(assert (=> b!142158 (= res!67800 (= (getValueByKey!176 (toList!888 lt!74457) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142159 () Bool)

(assert (=> b!142159 (= e!92632 (contains!925 (toList!888 lt!74457) (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44993 res!67799) b!142158))

(assert (= (and b!142158 res!67800) b!142159))

(declare-fun m!171001 () Bool)

(assert (=> d!44993 m!171001))

(declare-fun m!171003 () Bool)

(assert (=> d!44993 m!171003))

(declare-fun m!171005 () Bool)

(assert (=> d!44993 m!171005))

(declare-fun m!171007 () Bool)

(assert (=> d!44993 m!171007))

(declare-fun m!171009 () Bool)

(assert (=> b!142158 m!171009))

(declare-fun m!171011 () Bool)

(assert (=> b!142159 m!171011))

(assert (=> b!140322 d!44993))

(declare-fun d!44995 () Bool)

(declare-fun e!92633 () Bool)

(assert (=> d!44995 e!92633))

(declare-fun res!67801 () Bool)

(assert (=> d!44995 (=> res!67801 e!92633)))

(declare-fun lt!74460 () Bool)

(assert (=> d!44995 (= res!67801 (not lt!74460))))

(declare-fun lt!74458 () Bool)

(assert (=> d!44995 (= lt!74460 lt!74458)))

(declare-fun lt!74459 () Unit!4373)

(declare-fun e!92634 () Unit!4373)

(assert (=> d!44995 (= lt!74459 e!92634)))

(declare-fun c!26829 () Bool)

(assert (=> d!44995 (= c!26829 lt!74458)))

(assert (=> d!44995 (= lt!74458 (containsKey!180 (toList!888 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548))) lt!73547))))

(assert (=> d!44995 (= (contains!923 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548)) lt!73547) lt!74460)))

(declare-fun b!142160 () Bool)

(declare-fun lt!74461 () Unit!4373)

(assert (=> b!142160 (= e!92634 lt!74461)))

(assert (=> b!142160 (= lt!74461 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548))) lt!73547))))

(assert (=> b!142160 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548))) lt!73547))))

(declare-fun b!142161 () Bool)

(declare-fun Unit!4492 () Unit!4373)

(assert (=> b!142161 (= e!92634 Unit!4492)))

(declare-fun b!142162 () Bool)

(assert (=> b!142162 (= e!92633 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73552 (tuple2!2699 lt!73551 lt!73548))) lt!73547)))))

(assert (= (and d!44995 c!26829) b!142160))

(assert (= (and d!44995 (not c!26829)) b!142161))

(assert (= (and d!44995 (not res!67801)) b!142162))

(declare-fun m!171013 () Bool)

(assert (=> d!44995 m!171013))

(declare-fun m!171015 () Bool)

(assert (=> b!142160 m!171015))

(declare-fun m!171017 () Bool)

(assert (=> b!142160 m!171017))

(assert (=> b!142160 m!171017))

(declare-fun m!171019 () Bool)

(assert (=> b!142160 m!171019))

(assert (=> b!142162 m!171017))

(assert (=> b!142162 m!171017))

(assert (=> b!142162 m!171019))

(assert (=> b!140322 d!44995))

(declare-fun d!44997 () Bool)

(assert (=> d!44997 (= (get!1531 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3284 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43461 d!44997))

(assert (=> d!43461 d!44809))

(assert (=> d!43483 d!43323))

(assert (=> d!43483 d!43325))

(assert (=> d!43483 d!43329))

(declare-fun d!44999 () Bool)

(assert (=> d!44999 (= (isDefined!129 (getValueByKey!176 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) (not (isEmpty!418 (getValueByKey!176 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun bs!5974 () Bool)

(assert (= bs!5974 d!44999))

(assert (=> bs!5974 m!166895))

(declare-fun m!171021 () Bool)

(assert (=> bs!5974 m!171021))

(assert (=> b!140007 d!44999))

(declare-fun b!142166 () Bool)

(declare-fun e!92636 () Option!182)

(assert (=> b!142166 (= e!92636 None!180)))

(declare-fun b!142163 () Bool)

(declare-fun e!92635 () Option!182)

(assert (=> b!142163 (= e!92635 (Some!181 (_2!1360 (h!2348 (toList!888 (map!1442 (_2!1361 lt!73257)))))))))

(declare-fun b!142164 () Bool)

(assert (=> b!142164 (= e!92635 e!92636)))

(declare-fun c!26831 () Bool)

(assert (=> b!142164 (= c!26831 (and ((_ is Cons!1741) (toList!888 (map!1442 (_2!1361 lt!73257)))) (not (= (_1!1360 (h!2348 (toList!888 (map!1442 (_2!1361 lt!73257))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun c!26830 () Bool)

(declare-fun d!45001 () Bool)

(assert (=> d!45001 (= c!26830 (and ((_ is Cons!1741) (toList!888 (map!1442 (_2!1361 lt!73257)))) (= (_1!1360 (h!2348 (toList!888 (map!1442 (_2!1361 lt!73257))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!45001 (= (getValueByKey!176 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92635)))

(declare-fun b!142165 () Bool)

(assert (=> b!142165 (= e!92636 (getValueByKey!176 (t!6329 (toList!888 (map!1442 (_2!1361 lt!73257)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!45001 c!26830) b!142163))

(assert (= (and d!45001 (not c!26830)) b!142164))

(assert (= (and b!142164 c!26831) b!142165))

(assert (= (and b!142164 (not c!26831)) b!142166))

(assert (=> b!142165 m!166013))

(declare-fun m!171023 () Bool)

(assert (=> b!142165 m!171023))

(assert (=> b!140007 d!45001))

(declare-fun d!45003 () Bool)

(declare-fun res!67802 () Bool)

(declare-fun e!92637 () Bool)

(assert (=> d!45003 (=> res!67802 e!92637)))

(assert (=> d!45003 (= res!67802 (and ((_ is Cons!1741) (toList!888 lt!73052)) (= (_1!1360 (h!2348 (toList!888 lt!73052))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45003 (= (containsKey!180 (toList!888 lt!73052) #b0000000000000000000000000000000000000000000000000000000000000000) e!92637)))

(declare-fun b!142167 () Bool)

(declare-fun e!92638 () Bool)

(assert (=> b!142167 (= e!92637 e!92638)))

(declare-fun res!67803 () Bool)

(assert (=> b!142167 (=> (not res!67803) (not e!92638))))

(assert (=> b!142167 (= res!67803 (and (or (not ((_ is Cons!1741) (toList!888 lt!73052))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73052))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73052)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73052))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142168 () Bool)

(assert (=> b!142168 (= e!92638 (containsKey!180 (t!6329 (toList!888 lt!73052)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45003 (not res!67802)) b!142167))

(assert (= (and b!142167 res!67803) b!142168))

(declare-fun m!171025 () Bool)

(assert (=> b!142168 m!171025))

(assert (=> d!43863 d!45003))

(declare-fun d!45005 () Bool)

(assert (=> d!45005 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140786 d!45005))

(declare-fun d!45007 () Bool)

(assert (=> d!45007 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73319)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73319)))))

(assert (=> d!43611 d!45007))

(declare-fun b!142172 () Bool)

(declare-fun e!92640 () Option!182)

(assert (=> b!142172 (= e!92640 None!180)))

(declare-fun e!92639 () Option!182)

(declare-fun b!142169 () Bool)

(assert (=> b!142169 (= e!92639 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))))

(declare-fun b!142170 () Bool)

(assert (=> b!142170 (= e!92639 e!92640)))

(declare-fun c!26833 () Bool)

(assert (=> b!142170 (= c!26833 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))) lt!73319))))))

(declare-fun c!26832 () Bool)

(declare-fun d!45009 () Bool)

(assert (=> d!45009 (= c!26832 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))) lt!73319)))))

(assert (=> d!45009 (= (getValueByKey!176 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) lt!73319) e!92639)))

(declare-fun b!142171 () Bool)

(assert (=> b!142171 (= e!92640 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))) lt!73319))))

(assert (= (and d!45009 c!26832) b!142169))

(assert (= (and d!45009 (not c!26832)) b!142170))

(assert (= (and b!142170 c!26833) b!142171))

(assert (= (and b!142170 (not c!26833)) b!142172))

(declare-fun m!171027 () Bool)

(assert (=> b!142171 m!171027))

(assert (=> d!43611 d!45009))

(declare-fun b!142176 () Bool)

(declare-fun e!92642 () Option!182)

(assert (=> b!142176 (= e!92642 None!180)))

(declare-fun b!142173 () Bool)

(declare-fun e!92641 () Option!182)

(assert (=> b!142173 (= e!92641 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73765)))))))

(declare-fun b!142174 () Bool)

(assert (=> b!142174 (= e!92641 e!92642)))

(declare-fun c!26835 () Bool)

(assert (=> b!142174 (= c!26835 (and ((_ is Cons!1741) (toList!888 lt!73765)) (not (= (_1!1360 (h!2348 (toList!888 lt!73765))) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun d!45011 () Bool)

(declare-fun c!26834 () Bool)

(assert (=> d!45011 (= c!26834 (and ((_ is Cons!1741) (toList!888 lt!73765)) (= (_1!1360 (h!2348 (toList!888 lt!73765))) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45011 (= (getValueByKey!176 (toList!888 lt!73765) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92641)))

(declare-fun b!142175 () Bool)

(assert (=> b!142175 (= e!92642 (getValueByKey!176 (t!6329 (toList!888 lt!73765)) (_1!1360 (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!45011 c!26834) b!142173))

(assert (= (and d!45011 (not c!26834)) b!142174))

(assert (= (and b!142174 c!26835) b!142175))

(assert (= (and b!142174 (not c!26835)) b!142176))

(declare-fun m!171029 () Bool)

(assert (=> b!142175 m!171029))

(assert (=> b!140653 d!45011))

(declare-fun d!45013 () Bool)

(declare-fun e!92643 () Bool)

(assert (=> d!45013 e!92643))

(declare-fun res!67804 () Bool)

(assert (=> d!45013 (=> res!67804 e!92643)))

(declare-fun lt!74464 () Bool)

(assert (=> d!45013 (= res!67804 (not lt!74464))))

(declare-fun lt!74462 () Bool)

(assert (=> d!45013 (= lt!74464 lt!74462)))

(declare-fun lt!74463 () Unit!4373)

(declare-fun e!92644 () Unit!4373)

(assert (=> d!45013 (= lt!74463 e!92644)))

(declare-fun c!26836 () Bool)

(assert (=> d!45013 (= c!26836 lt!74462)))

(assert (=> d!45013 (= lt!74462 (containsKey!180 (toList!888 lt!73615) (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(assert (=> d!45013 (= (contains!923 lt!73615 (select (arr!2315 lt!73240) #b00000000000000000000000000000000)) lt!74464)))

(declare-fun b!142177 () Bool)

(declare-fun lt!74465 () Unit!4373)

(assert (=> b!142177 (= e!92644 lt!74465)))

(assert (=> b!142177 (= lt!74465 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73615) (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(assert (=> b!142177 (isDefined!129 (getValueByKey!176 (toList!888 lt!73615) (select (arr!2315 lt!73240) #b00000000000000000000000000000000)))))

(declare-fun b!142178 () Bool)

(declare-fun Unit!4493 () Unit!4373)

(assert (=> b!142178 (= e!92644 Unit!4493)))

(declare-fun b!142179 () Bool)

(assert (=> b!142179 (= e!92643 (isDefined!129 (getValueByKey!176 (toList!888 lt!73615) (select (arr!2315 lt!73240) #b00000000000000000000000000000000))))))

(assert (= (and d!45013 c!26836) b!142177))

(assert (= (and d!45013 (not c!26836)) b!142178))

(assert (= (and d!45013 (not res!67804)) b!142179))

(assert (=> d!45013 m!167755))

(declare-fun m!171031 () Bool)

(assert (=> d!45013 m!171031))

(assert (=> b!142177 m!167755))

(declare-fun m!171033 () Bool)

(assert (=> b!142177 m!171033))

(assert (=> b!142177 m!167755))

(assert (=> b!142177 m!170227))

(assert (=> b!142177 m!170227))

(declare-fun m!171035 () Bool)

(assert (=> b!142177 m!171035))

(assert (=> b!142179 m!167755))

(assert (=> b!142179 m!170227))

(assert (=> b!142179 m!170227))

(assert (=> b!142179 m!171035))

(assert (=> b!140409 d!45013))

(declare-fun d!45015 () Bool)

(assert (=> d!45015 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun bs!5975 () Bool)

(assert (= bs!5975 d!45015))

(assert (=> bs!5975 m!166337))

(declare-fun m!171037 () Bool)

(assert (=> bs!5975 m!171037))

(assert (=> b!140633 d!45015))

(assert (=> b!140633 d!43739))

(assert (=> d!43839 d!43841))

(assert (=> d!43839 d!43837))

(declare-fun d!45017 () Bool)

(assert (=> d!45017 (contains!923 (+!179 lt!73301 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) lt!73302)))

(assert (=> d!45017 true))

(declare-fun _$35!391 () Unit!4373)

(assert (=> d!45017 (= (choose!857 lt!73301 lt!73303 (zeroValue!2790 newMap!16) lt!73302) _$35!391)))

(declare-fun bs!5976 () Bool)

(assert (= bs!5976 d!45017))

(assert (=> bs!5976 m!166747))

(assert (=> bs!5976 m!166747))

(assert (=> bs!5976 m!166763))

(assert (=> d!43839 d!45017))

(declare-fun d!45019 () Bool)

(declare-fun e!92645 () Bool)

(assert (=> d!45019 e!92645))

(declare-fun res!67805 () Bool)

(assert (=> d!45019 (=> res!67805 e!92645)))

(declare-fun lt!74468 () Bool)

(assert (=> d!45019 (= res!67805 (not lt!74468))))

(declare-fun lt!74466 () Bool)

(assert (=> d!45019 (= lt!74468 lt!74466)))

(declare-fun lt!74467 () Unit!4373)

(declare-fun e!92646 () Unit!4373)

(assert (=> d!45019 (= lt!74467 e!92646)))

(declare-fun c!26837 () Bool)

(assert (=> d!45019 (= c!26837 lt!74466)))

(assert (=> d!45019 (= lt!74466 (containsKey!180 (toList!888 lt!73301) lt!73302))))

(assert (=> d!45019 (= (contains!923 lt!73301 lt!73302) lt!74468)))

(declare-fun b!142180 () Bool)

(declare-fun lt!74469 () Unit!4373)

(assert (=> b!142180 (= e!92646 lt!74469)))

(assert (=> b!142180 (= lt!74469 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73301) lt!73302))))

(assert (=> b!142180 (isDefined!129 (getValueByKey!176 (toList!888 lt!73301) lt!73302))))

(declare-fun b!142181 () Bool)

(declare-fun Unit!4494 () Unit!4373)

(assert (=> b!142181 (= e!92646 Unit!4494)))

(declare-fun b!142182 () Bool)

(assert (=> b!142182 (= e!92645 (isDefined!129 (getValueByKey!176 (toList!888 lt!73301) lt!73302)))))

(assert (= (and d!45019 c!26837) b!142180))

(assert (= (and d!45019 (not c!26837)) b!142181))

(assert (= (and d!45019 (not res!67805)) b!142182))

(declare-fun m!171039 () Bool)

(assert (=> d!45019 m!171039))

(declare-fun m!171041 () Bool)

(assert (=> b!142180 m!171041))

(declare-fun m!171043 () Bool)

(assert (=> b!142180 m!171043))

(assert (=> b!142180 m!171043))

(declare-fun m!171045 () Bool)

(assert (=> b!142180 m!171045))

(assert (=> b!142182 m!171043))

(assert (=> b!142182 m!171043))

(assert (=> b!142182 m!171045))

(assert (=> d!43839 d!45019))

(declare-fun d!45021 () Bool)

(declare-fun res!67806 () Bool)

(declare-fun e!92647 () Bool)

(assert (=> d!45021 (=> res!67806 e!92647)))

(assert (=> d!45021 (= res!67806 (and ((_ is Cons!1741) (toList!888 lt!73332)) (= (_1!1360 (h!2348 (toList!888 lt!73332))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45021 (= (containsKey!180 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000) e!92647)))

(declare-fun b!142183 () Bool)

(declare-fun e!92648 () Bool)

(assert (=> b!142183 (= e!92647 e!92648)))

(declare-fun res!67807 () Bool)

(assert (=> b!142183 (=> (not res!67807) (not e!92648))))

(assert (=> b!142183 (= res!67807 (and (or (not ((_ is Cons!1741) (toList!888 lt!73332))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73332))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73332)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73332))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142184 () Bool)

(assert (=> b!142184 (= e!92648 (containsKey!180 (t!6329 (toList!888 lt!73332)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45021 (not res!67806)) b!142183))

(assert (= (and b!142183 res!67807) b!142184))

(declare-fun m!171047 () Bool)

(assert (=> b!142184 m!171047))

(assert (=> d!43781 d!45021))

(declare-fun d!45023 () Bool)

(declare-fun lt!74470 () Bool)

(assert (=> d!45023 (= lt!74470 (select (content!138 (toList!888 lt!73765)) (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun e!92650 () Bool)

(assert (=> d!45023 (= lt!74470 e!92650)))

(declare-fun res!67808 () Bool)

(assert (=> d!45023 (=> (not res!67808) (not e!92650))))

(assert (=> d!45023 (= res!67808 ((_ is Cons!1741) (toList!888 lt!73765)))))

(assert (=> d!45023 (= (contains!925 (toList!888 lt!73765) (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74470)))

(declare-fun b!142185 () Bool)

(declare-fun e!92649 () Bool)

(assert (=> b!142185 (= e!92650 e!92649)))

(declare-fun res!67809 () Bool)

(assert (=> b!142185 (=> res!67809 e!92649)))

(assert (=> b!142185 (= res!67809 (= (h!2348 (toList!888 lt!73765)) (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!142186 () Bool)

(assert (=> b!142186 (= e!92649 (contains!925 (t!6329 (toList!888 lt!73765)) (tuple2!2699 lt!73289 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!45023 res!67808) b!142185))

(assert (= (and b!142185 (not res!67809)) b!142186))

(declare-fun m!171049 () Bool)

(assert (=> d!45023 m!171049))

(declare-fun m!171051 () Bool)

(assert (=> d!45023 m!171051))

(declare-fun m!171053 () Bool)

(assert (=> b!142186 m!171053))

(assert (=> b!140654 d!45023))

(assert (=> b!140273 d!43479))

(declare-fun d!45025 () Bool)

(declare-fun lt!74471 () Bool)

(assert (=> d!45025 (= lt!74471 (select (content!138 (toList!888 lt!73546)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun e!92652 () Bool)

(assert (=> d!45025 (= lt!74471 e!92652)))

(declare-fun res!67810 () Bool)

(assert (=> d!45025 (=> (not res!67810) (not e!92652))))

(assert (=> d!45025 (= res!67810 ((_ is Cons!1741) (toList!888 lt!73546)))))

(assert (=> d!45025 (= (contains!925 (toList!888 lt!73546) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74471)))

(declare-fun b!142187 () Bool)

(declare-fun e!92651 () Bool)

(assert (=> b!142187 (= e!92652 e!92651)))

(declare-fun res!67811 () Bool)

(assert (=> b!142187 (=> res!67811 e!92651)))

(assert (=> b!142187 (= res!67811 (= (h!2348 (toList!888 lt!73546)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!142188 () Bool)

(assert (=> b!142188 (= e!92651 (contains!925 (t!6329 (toList!888 lt!73546)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!45025 res!67810) b!142187))

(assert (= (and b!142187 (not res!67811)) b!142188))

(declare-fun m!171055 () Bool)

(assert (=> d!45025 m!171055))

(declare-fun m!171057 () Bool)

(assert (=> d!45025 m!171057))

(declare-fun m!171059 () Bool)

(assert (=> b!142188 m!171059))

(assert (=> b!140319 d!45025))

(declare-fun d!45027 () Bool)

(assert (=> d!45027 (= (apply!120 lt!73615 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73615) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5977 () Bool)

(assert (= bs!5977 d!45027))

(assert (=> bs!5977 m!168815))

(assert (=> bs!5977 m!168815))

(declare-fun m!171061 () Bool)

(assert (=> bs!5977 m!171061))

(assert (=> b!140410 d!45027))

(declare-fun d!45029 () Bool)

(declare-fun res!67812 () Bool)

(declare-fun e!92653 () Bool)

(assert (=> d!45029 (=> res!67812 e!92653)))

(assert (=> d!45029 (= res!67812 (and ((_ is Cons!1741) (toList!888 lt!73031)) (= (_1!1360 (h!2348 (toList!888 lt!73031))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45029 (= (containsKey!180 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92653)))

(declare-fun b!142189 () Bool)

(declare-fun e!92654 () Bool)

(assert (=> b!142189 (= e!92653 e!92654)))

(declare-fun res!67813 () Bool)

(assert (=> b!142189 (=> (not res!67813) (not e!92654))))

(assert (=> b!142189 (= res!67813 (and (or (not ((_ is Cons!1741) (toList!888 lt!73031))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73031))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) (toList!888 lt!73031)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73031))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142190 () Bool)

(assert (=> b!142190 (= e!92654 (containsKey!180 (t!6329 (toList!888 lt!73031)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45029 (not res!67812)) b!142189))

(assert (= (and b!142189 res!67813) b!142190))

(declare-fun m!171063 () Bool)

(assert (=> b!142190 m!171063))

(assert (=> d!43799 d!45029))

(declare-fun d!45031 () Bool)

(assert (=> d!45031 (= (inRange!0 (index!3280 lt!73799) (mask!7280 newMap!16)) (and (bvsge (index!3280 lt!73799) #b00000000000000000000000000000000) (bvslt (index!3280 lt!73799) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!140692 d!45031))

(declare-fun d!45033 () Bool)

(declare-fun e!92655 () Bool)

(assert (=> d!45033 e!92655))

(declare-fun res!67814 () Bool)

(assert (=> d!45033 (=> res!67814 e!92655)))

(declare-fun lt!74474 () Bool)

(assert (=> d!45033 (= res!67814 (not lt!74474))))

(declare-fun lt!74472 () Bool)

(assert (=> d!45033 (= lt!74474 lt!74472)))

(declare-fun lt!74473 () Unit!4373)

(declare-fun e!92656 () Unit!4373)

(assert (=> d!45033 (= lt!74473 e!92656)))

(declare-fun c!26838 () Bool)

(assert (=> d!45033 (= c!26838 lt!74472)))

(assert (=> d!45033 (= lt!74472 (containsKey!180 (toList!888 lt!73383) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45033 (= (contains!923 lt!73383 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74474)))

(declare-fun b!142191 () Bool)

(declare-fun lt!74475 () Unit!4373)

(assert (=> b!142191 (= e!92656 lt!74475)))

(assert (=> b!142191 (= lt!74475 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73383) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> b!142191 (isDefined!129 (getValueByKey!176 (toList!888 lt!73383) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142192 () Bool)

(declare-fun Unit!4495 () Unit!4373)

(assert (=> b!142192 (= e!92656 Unit!4495)))

(declare-fun b!142193 () Bool)

(assert (=> b!142193 (= e!92655 (isDefined!129 (getValueByKey!176 (toList!888 lt!73383) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45033 c!26838) b!142191))

(assert (= (and d!45033 (not c!26838)) b!142192))

(assert (= (and d!45033 (not res!67814)) b!142193))

(declare-fun m!171065 () Bool)

(assert (=> d!45033 m!171065))

(declare-fun m!171067 () Bool)

(assert (=> b!142191 m!171067))

(assert (=> b!142191 m!167005))

(assert (=> b!142191 m!167005))

(declare-fun m!171069 () Bool)

(assert (=> b!142191 m!171069))

(assert (=> b!142193 m!167005))

(assert (=> b!142193 m!167005))

(assert (=> b!142193 m!171069))

(assert (=> d!43465 d!45033))

(declare-fun b!142197 () Bool)

(declare-fun e!92658 () Option!182)

(assert (=> b!142197 (= e!92658 None!180)))

(declare-fun b!142194 () Bool)

(declare-fun e!92657 () Option!182)

(assert (=> b!142194 (= e!92657 (Some!181 (_2!1360 (h!2348 lt!73380))))))

(declare-fun b!142195 () Bool)

(assert (=> b!142195 (= e!92657 e!92658)))

(declare-fun c!26840 () Bool)

(assert (=> b!142195 (= c!26840 (and ((_ is Cons!1741) lt!73380) (not (= (_1!1360 (h!2348 lt!73380)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun d!45035 () Bool)

(declare-fun c!26839 () Bool)

(assert (=> d!45035 (= c!26839 (and ((_ is Cons!1741) lt!73380) (= (_1!1360 (h!2348 lt!73380)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45035 (= (getValueByKey!176 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92657)))

(declare-fun b!142196 () Bool)

(assert (=> b!142196 (= e!92658 (getValueByKey!176 (t!6329 lt!73380) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!45035 c!26839) b!142194))

(assert (= (and d!45035 (not c!26839)) b!142195))

(assert (= (and b!142195 c!26840) b!142196))

(assert (= (and b!142195 (not c!26840)) b!142197))

(declare-fun m!171071 () Bool)

(assert (=> b!142196 m!171071))

(assert (=> d!43465 d!45035))

(declare-fun d!45037 () Bool)

(assert (=> d!45037 (= (getValueByKey!176 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74476 () Unit!4373)

(assert (=> d!45037 (= lt!74476 (choose!865 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92659 () Bool)

(assert (=> d!45037 e!92659))

(declare-fun res!67815 () Bool)

(assert (=> d!45037 (=> (not res!67815) (not e!92659))))

(assert (=> d!45037 (= res!67815 (isStrictlySorted!325 lt!73380))))

(assert (=> d!45037 (= (lemmaContainsTupThenGetReturnValue!90 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74476)))

(declare-fun b!142198 () Bool)

(declare-fun res!67816 () Bool)

(assert (=> b!142198 (=> (not res!67816) (not e!92659))))

(assert (=> b!142198 (= res!67816 (containsKey!180 lt!73380 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142199 () Bool)

(assert (=> b!142199 (= e!92659 (contains!925 lt!73380 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45037 res!67815) b!142198))

(assert (= (and b!142198 res!67816) b!142199))

(assert (=> d!45037 m!166999))

(declare-fun m!171073 () Bool)

(assert (=> d!45037 m!171073))

(declare-fun m!171075 () Bool)

(assert (=> d!45037 m!171075))

(declare-fun m!171077 () Bool)

(assert (=> b!142198 m!171077))

(declare-fun m!171079 () Bool)

(assert (=> b!142199 m!171079))

(assert (=> d!43465 d!45037))

(declare-fun b!142200 () Bool)

(declare-fun e!92660 () List!1745)

(declare-fun call!15747 () List!1745)

(assert (=> b!142200 (= e!92660 call!15747)))

(declare-fun bm!15742 () Bool)

(declare-fun call!15745 () List!1745)

(assert (=> bm!15742 (= call!15747 call!15745)))

(declare-fun d!45039 () Bool)

(declare-fun e!92664 () Bool)

(assert (=> d!45039 e!92664))

(declare-fun res!67817 () Bool)

(assert (=> d!45039 (=> (not res!67817) (not e!92664))))

(declare-fun lt!74477 () List!1745)

(assert (=> d!45039 (= res!67817 (isStrictlySorted!325 lt!74477))))

(declare-fun e!92661 () List!1745)

(assert (=> d!45039 (= lt!74477 e!92661)))

(declare-fun c!26843 () Bool)

(assert (=> d!45039 (= c!26843 (and ((_ is Cons!1741) (toList!888 call!15501)) (bvslt (_1!1360 (h!2348 (toList!888 call!15501))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45039 (isStrictlySorted!325 (toList!888 call!15501))))

(assert (=> d!45039 (= (insertStrictlySorted!93 (toList!888 call!15501) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74477)))

(declare-fun bm!15743 () Bool)

(declare-fun call!15746 () List!1745)

(assert (=> bm!15743 (= call!15745 call!15746)))

(declare-fun b!142201 () Bool)

(declare-fun e!92662 () List!1745)

(assert (=> b!142201 (= e!92661 e!92662)))

(declare-fun c!26842 () Bool)

(assert (=> b!142201 (= c!26842 (and ((_ is Cons!1741) (toList!888 call!15501)) (= (_1!1360 (h!2348 (toList!888 call!15501))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142202 () Bool)

(assert (=> b!142202 (= e!92661 call!15746)))

(declare-fun bm!15744 () Bool)

(declare-fun e!92663 () List!1745)

(assert (=> bm!15744 (= call!15746 ($colon$colon!94 e!92663 (ite c!26843 (h!2348 (toList!888 call!15501)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun c!26841 () Bool)

(assert (=> bm!15744 (= c!26841 c!26843)))

(declare-fun c!26844 () Bool)

(declare-fun b!142203 () Bool)

(assert (=> b!142203 (= e!92663 (ite c!26842 (t!6329 (toList!888 call!15501)) (ite c!26844 (Cons!1741 (h!2348 (toList!888 call!15501)) (t!6329 (toList!888 call!15501))) Nil!1742)))))

(declare-fun b!142204 () Bool)

(assert (=> b!142204 (= e!92662 call!15745)))

(declare-fun b!142205 () Bool)

(assert (=> b!142205 (= e!92664 (contains!925 lt!74477 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142206 () Bool)

(assert (=> b!142206 (= e!92663 (insertStrictlySorted!93 (t!6329 (toList!888 call!15501)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142207 () Bool)

(assert (=> b!142207 (= e!92660 call!15747)))

(declare-fun b!142208 () Bool)

(assert (=> b!142208 (= c!26844 (and ((_ is Cons!1741) (toList!888 call!15501)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15501))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!142208 (= e!92662 e!92660)))

(declare-fun b!142209 () Bool)

(declare-fun res!67818 () Bool)

(assert (=> b!142209 (=> (not res!67818) (not e!92664))))

(assert (=> b!142209 (= res!67818 (containsKey!180 lt!74477 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!45039 c!26843) b!142202))

(assert (= (and d!45039 (not c!26843)) b!142201))

(assert (= (and b!142201 c!26842) b!142204))

(assert (= (and b!142201 (not c!26842)) b!142208))

(assert (= (and b!142208 c!26844) b!142207))

(assert (= (and b!142208 (not c!26844)) b!142200))

(assert (= (or b!142207 b!142200) bm!15742))

(assert (= (or b!142204 bm!15742) bm!15743))

(assert (= (or b!142202 bm!15743) bm!15744))

(assert (= (and bm!15744 c!26841) b!142206))

(assert (= (and bm!15744 (not c!26841)) b!142203))

(assert (= (and d!45039 res!67817) b!142209))

(assert (= (and b!142209 res!67818) b!142205))

(declare-fun m!171081 () Bool)

(assert (=> b!142206 m!171081))

(declare-fun m!171083 () Bool)

(assert (=> d!45039 m!171083))

(declare-fun m!171085 () Bool)

(assert (=> d!45039 m!171085))

(declare-fun m!171087 () Bool)

(assert (=> b!142209 m!171087))

(declare-fun m!171089 () Bool)

(assert (=> bm!15744 m!171089))

(declare-fun m!171091 () Bool)

(assert (=> b!142205 m!171091))

(assert (=> d!43465 d!45039))

(declare-fun d!45041 () Bool)

(declare-fun res!67819 () Bool)

(declare-fun e!92665 () Bool)

(assert (=> d!45041 (=> res!67819 e!92665)))

(assert (=> d!45041 (= res!67819 (and ((_ is Cons!1741) lt!73122) (= (_1!1360 (h!2348 lt!73122)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45041 (= (containsKey!180 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92665)))

(declare-fun b!142210 () Bool)

(declare-fun e!92666 () Bool)

(assert (=> b!142210 (= e!92665 e!92666)))

(declare-fun res!67820 () Bool)

(assert (=> b!142210 (=> (not res!67820) (not e!92666))))

(assert (=> b!142210 (= res!67820 (and (or (not ((_ is Cons!1741) lt!73122)) (bvsle (_1!1360 (h!2348 lt!73122)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1741) lt!73122) (bvslt (_1!1360 (h!2348 lt!73122)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142211 () Bool)

(assert (=> b!142211 (= e!92666 (containsKey!180 (t!6329 lt!73122) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45041 (not res!67819)) b!142210))

(assert (= (and b!142210 res!67820) b!142211))

(declare-fun m!171093 () Bool)

(assert (=> b!142211 m!171093))

(assert (=> b!140015 d!45041))

(assert (=> d!43601 d!43603))

(assert (=> d!43601 d!43605))

(declare-fun d!45043 () Bool)

(assert (=> d!45043 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))

(assert (=> d!45043 true))

(declare-fun _$12!417 () Unit!4373)

(assert (=> d!45043 (= (choose!864 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903) _$12!417)))

(declare-fun bs!5978 () Bool)

(assert (= bs!5978 d!45043))

(assert (=> bs!5978 m!166345))

(assert (=> bs!5978 m!166345))

(assert (=> bs!5978 m!166347))

(assert (=> d!43601 d!45043))

(declare-fun d!45045 () Bool)

(declare-fun res!67821 () Bool)

(declare-fun e!92667 () Bool)

(assert (=> d!45045 (=> res!67821 e!92667)))

(assert (=> d!45045 (= res!67821 (or ((_ is Nil!1742) (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Nil!1742) (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(assert (=> d!45045 (= (isStrictlySorted!325 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!92667)))

(declare-fun b!142212 () Bool)

(declare-fun e!92668 () Bool)

(assert (=> b!142212 (= e!92667 e!92668)))

(declare-fun res!67822 () Bool)

(assert (=> b!142212 (=> (not res!67822) (not e!92668))))

(assert (=> b!142212 (= res!67822 (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))))

(declare-fun b!142213 () Bool)

(assert (=> b!142213 (= e!92668 (isStrictlySorted!325 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (= (and d!45045 (not res!67821)) b!142212))

(assert (= (and b!142212 res!67822) b!142213))

(declare-fun m!171095 () Bool)

(assert (=> b!142213 m!171095))

(assert (=> d!43601 d!45045))

(declare-fun d!45047 () Bool)

(assert (=> d!45047 (= (apply!120 lt!73702 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73702) (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))))

(declare-fun bs!5979 () Bool)

(assert (= bs!5979 d!45047))

(assert (=> bs!5979 m!167955))

(declare-fun m!171097 () Bool)

(assert (=> bs!5979 m!171097))

(assert (=> bs!5979 m!171097))

(declare-fun m!171099 () Bool)

(assert (=> bs!5979 m!171099))

(assert (=> b!140494 d!45047))

(declare-fun c!26845 () Bool)

(declare-fun d!45049 () Bool)

(assert (=> d!45049 (= c!26845 ((_ is ValueCellFull!1122) (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(declare-fun e!92669 () V!3555)

(assert (=> d!45049 (= (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92669)))

(declare-fun b!142214 () Bool)

(assert (=> b!142214 (= e!92669 (get!1529 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142215 () Bool)

(assert (=> b!142215 (= e!92669 (get!1530 (select (arr!2316 (_values!2923 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45049 c!26845) b!142214))

(assert (= (and d!45049 (not c!26845)) b!142215))

(assert (=> b!142214 m!167985))

(assert (=> b!142214 m!167987))

(declare-fun m!171101 () Bool)

(assert (=> b!142214 m!171101))

(assert (=> b!142215 m!167985))

(assert (=> b!142215 m!167987))

(declare-fun m!171103 () Bool)

(assert (=> b!142215 m!171103))

(assert (=> b!140494 d!45049))

(assert (=> b!140825 d!44139))

(declare-fun d!45051 () Bool)

(assert (=> d!45051 (isDefined!129 (getValueByKey!176 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74478 () Unit!4373)

(assert (=> d!45051 (= lt!74478 (choose!864 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92670 () Bool)

(assert (=> d!45051 e!92670))

(declare-fun res!67823 () Bool)

(assert (=> d!45051 (=> (not res!67823) (not e!92670))))

(assert (=> d!45051 (= res!67823 (isStrictlySorted!325 (toList!888 lt!73332)))))

(assert (=> d!45051 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74478)))

(declare-fun b!142216 () Bool)

(assert (=> b!142216 (= e!92670 (containsKey!180 (toList!888 lt!73332) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45051 res!67823) b!142216))

(assert (=> d!45051 m!166385))

(assert (=> d!45051 m!166989))

(assert (=> d!45051 m!166989))

(assert (=> d!45051 m!168313))

(assert (=> d!45051 m!166385))

(declare-fun m!171105 () Bool)

(assert (=> d!45051 m!171105))

(assert (=> d!45051 m!169133))

(assert (=> b!142216 m!166385))

(assert (=> b!142216 m!168309))

(assert (=> b!140682 d!45051))

(assert (=> b!140682 d!44807))

(assert (=> b!140682 d!44809))

(assert (=> d!43629 d!43611))

(assert (=> d!43629 d!43621))

(declare-fun d!45053 () Bool)

(declare-fun e!92671 () Bool)

(assert (=> d!45053 e!92671))

(declare-fun res!67824 () Bool)

(assert (=> d!45053 (=> res!67824 e!92671)))

(declare-fun lt!74481 () Bool)

(assert (=> d!45053 (= res!67824 (not lt!74481))))

(declare-fun lt!74479 () Bool)

(assert (=> d!45053 (= lt!74481 lt!74479)))

(declare-fun lt!74480 () Unit!4373)

(declare-fun e!92672 () Unit!4373)

(assert (=> d!45053 (= lt!74480 e!92672)))

(declare-fun c!26846 () Bool)

(assert (=> d!45053 (= c!26846 lt!74479)))

(assert (=> d!45053 (= lt!74479 (containsKey!180 (toList!888 lt!73314) lt!73319))))

(assert (=> d!45053 (= (contains!923 lt!73314 lt!73319) lt!74481)))

(declare-fun b!142217 () Bool)

(declare-fun lt!74482 () Unit!4373)

(assert (=> b!142217 (= e!92672 lt!74482)))

(assert (=> b!142217 (= lt!74482 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73314) lt!73319))))

(assert (=> b!142217 (isDefined!129 (getValueByKey!176 (toList!888 lt!73314) lt!73319))))

(declare-fun b!142218 () Bool)

(declare-fun Unit!4496 () Unit!4373)

(assert (=> b!142218 (= e!92672 Unit!4496)))

(declare-fun b!142219 () Bool)

(assert (=> b!142219 (= e!92671 (isDefined!129 (getValueByKey!176 (toList!888 lt!73314) lt!73319)))))

(assert (= (and d!45053 c!26846) b!142217))

(assert (= (and d!45053 (not c!26846)) b!142218))

(assert (= (and d!45053 (not res!67824)) b!142219))

(declare-fun m!171107 () Bool)

(assert (=> d!45053 m!171107))

(declare-fun m!171109 () Bool)

(assert (=> b!142217 m!171109))

(assert (=> b!142217 m!167465))

(assert (=> b!142217 m!167465))

(declare-fun m!171111 () Bool)

(assert (=> b!142217 m!171111))

(assert (=> b!142219 m!167465))

(assert (=> b!142219 m!167465))

(assert (=> b!142219 m!171111))

(assert (=> d!43629 d!45053))

(declare-fun d!45055 () Bool)

(assert (=> d!45055 (= (apply!120 (+!179 lt!73314 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))) lt!73319) (apply!120 lt!73314 lt!73319))))

(assert (=> d!45055 true))

(declare-fun _$34!1010 () Unit!4373)

(assert (=> d!45055 (= (choose!856 lt!73314 lt!73315 (minValue!2790 newMap!16) lt!73319) _$34!1010)))

(declare-fun bs!5980 () Bool)

(assert (= bs!5980 d!45055))

(assert (=> bs!5980 m!166821))

(assert (=> bs!5980 m!166821))

(assert (=> bs!5980 m!166823))

(assert (=> bs!5980 m!166833))

(assert (=> d!43629 d!45055))

(assert (=> d!43629 d!43627))

(declare-fun d!45057 () Bool)

(declare-fun res!67825 () Bool)

(declare-fun e!92673 () Bool)

(assert (=> d!45057 (=> res!67825 e!92673)))

(assert (=> d!45057 (= res!67825 (or ((_ is Nil!1742) lt!73568) ((_ is Nil!1742) (t!6329 lt!73568))))))

(assert (=> d!45057 (= (isStrictlySorted!325 lt!73568) e!92673)))

(declare-fun b!142220 () Bool)

(declare-fun e!92674 () Bool)

(assert (=> b!142220 (= e!92673 e!92674)))

(declare-fun res!67826 () Bool)

(assert (=> b!142220 (=> (not res!67826) (not e!92674))))

(assert (=> b!142220 (= res!67826 (bvslt (_1!1360 (h!2348 lt!73568)) (_1!1360 (h!2348 (t!6329 lt!73568)))))))

(declare-fun b!142221 () Bool)

(assert (=> b!142221 (= e!92674 (isStrictlySorted!325 (t!6329 lt!73568)))))

(assert (= (and d!45057 (not res!67825)) b!142220))

(assert (= (and b!142220 res!67826) b!142221))

(declare-fun m!171113 () Bool)

(assert (=> b!142221 m!171113))

(assert (=> d!43691 d!45057))

(declare-fun d!45059 () Bool)

(declare-fun res!67827 () Bool)

(declare-fun e!92675 () Bool)

(assert (=> d!45059 (=> res!67827 e!92675)))

(assert (=> d!45059 (= res!67827 (or ((_ is Nil!1742) (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) ((_ is Nil!1742) (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))))))))

(assert (=> d!45059 (= (isStrictlySorted!325 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407)))) e!92675)))

(declare-fun b!142222 () Bool)

(declare-fun e!92676 () Bool)

(assert (=> b!142222 (= e!92675 e!92676)))

(declare-fun res!67828 () Bool)

(assert (=> b!142222 (=> (not res!67828) (not e!92676))))

(assert (=> b!142222 (= res!67828 (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))) (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))))))))

(declare-fun b!142223 () Bool)

(assert (=> b!142223 (= e!92676 (isStrictlySorted!325 (t!6329 (toList!888 (ite c!26024 call!15404 (ite c!26026 call!15402 call!15407))))))))

(assert (= (and d!45059 (not res!67827)) b!142222))

(assert (= (and b!142222 res!67828) b!142223))

(assert (=> b!142223 m!169193))

(assert (=> d!43691 d!45059))

(declare-fun d!45061 () Bool)

(declare-fun lt!74483 () Bool)

(assert (=> d!45061 (= lt!74483 (select (content!138 (toList!888 lt!73847)) (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))

(declare-fun e!92678 () Bool)

(assert (=> d!45061 (= lt!74483 e!92678)))

(declare-fun res!67829 () Bool)

(assert (=> d!45061 (=> (not res!67829) (not e!92678))))

(assert (=> d!45061 (= res!67829 ((_ is Cons!1741) (toList!888 lt!73847)))))

(assert (=> d!45061 (= (contains!925 (toList!888 lt!73847) (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) lt!74483)))

(declare-fun b!142224 () Bool)

(declare-fun e!92677 () Bool)

(assert (=> b!142224 (= e!92678 e!92677)))

(declare-fun res!67830 () Bool)

(assert (=> b!142224 (=> res!67830 e!92677)))

(assert (=> b!142224 (= res!67830 (= (h!2348 (toList!888 lt!73847)) (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))

(declare-fun b!142225 () Bool)

(assert (=> b!142225 (= e!92677 (contains!925 (t!6329 (toList!888 lt!73847)) (tuple2!2699 lt!73076 (minValue!2790 newMap!16))))))

(assert (= (and d!45061 res!67829) b!142224))

(assert (= (and b!142224 (not res!67830)) b!142225))

(declare-fun m!171115 () Bool)

(assert (=> d!45061 m!171115))

(declare-fun m!171117 () Bool)

(assert (=> d!45061 m!171117))

(declare-fun m!171119 () Bool)

(assert (=> b!142225 m!171119))

(assert (=> b!140742 d!45061))

(declare-fun b!142229 () Bool)

(declare-fun e!92680 () Option!182)

(assert (=> b!142229 (= e!92680 None!180)))

(declare-fun b!142226 () Bool)

(declare-fun e!92679 () Option!182)

(assert (=> b!142226 (= e!92679 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73740)))))))

(declare-fun b!142227 () Bool)

(assert (=> b!142227 (= e!92679 e!92680)))

(declare-fun c!26848 () Bool)

(assert (=> b!142227 (= c!26848 (and ((_ is Cons!1741) (toList!888 lt!73740)) (not (= (_1!1360 (h!2348 (toList!888 lt!73740))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun c!26847 () Bool)

(declare-fun d!45063 () Bool)

(assert (=> d!45063 (= c!26847 (and ((_ is Cons!1741) (toList!888 lt!73740)) (= (_1!1360 (h!2348 (toList!888 lt!73740))) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> d!45063 (= (getValueByKey!176 (toList!888 lt!73740) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) e!92679)))

(declare-fun b!142228 () Bool)

(assert (=> b!142228 (= e!92680 (getValueByKey!176 (t!6329 (toList!888 lt!73740)) (_1!1360 (ite (or c!26153 c!26155) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!45063 c!26847) b!142226))

(assert (= (and d!45063 (not c!26847)) b!142227))

(assert (= (and b!142227 c!26848) b!142228))

(assert (= (and b!142227 (not c!26848)) b!142229))

(declare-fun m!171121 () Bool)

(assert (=> b!142228 m!171121))

(assert (=> b!140596 d!45063))

(declare-fun b!142230 () Bool)

(declare-fun e!92681 () List!1745)

(declare-fun call!15750 () List!1745)

(assert (=> b!142230 (= e!92681 call!15750)))

(declare-fun bm!15745 () Bool)

(declare-fun call!15748 () List!1745)

(assert (=> bm!15745 (= call!15750 call!15748)))

(declare-fun d!45065 () Bool)

(declare-fun e!92685 () Bool)

(assert (=> d!45065 e!92685))

(declare-fun res!67831 () Bool)

(assert (=> d!45065 (=> (not res!67831) (not e!92685))))

(declare-fun lt!74484 () List!1745)

(assert (=> d!45065 (= res!67831 (isStrictlySorted!325 lt!74484))))

(declare-fun e!92682 () List!1745)

(assert (=> d!45065 (= lt!74484 e!92682)))

(declare-fun c!26851 () Bool)

(assert (=> d!45065 (= c!26851 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15405))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 call!15405)))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45065 (isStrictlySorted!325 (t!6329 (toList!888 call!15405)))))

(assert (=> d!45065 (= (insertStrictlySorted!93 (t!6329 (toList!888 call!15405)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74484)))

(declare-fun bm!15746 () Bool)

(declare-fun call!15749 () List!1745)

(assert (=> bm!15746 (= call!15748 call!15749)))

(declare-fun b!142231 () Bool)

(declare-fun e!92683 () List!1745)

(assert (=> b!142231 (= e!92682 e!92683)))

(declare-fun c!26850 () Bool)

(assert (=> b!142231 (= c!26850 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15405))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15405)))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142232 () Bool)

(assert (=> b!142232 (= e!92682 call!15749)))

(declare-fun bm!15747 () Bool)

(declare-fun e!92684 () List!1745)

(assert (=> bm!15747 (= call!15749 ($colon$colon!94 e!92684 (ite c!26851 (h!2348 (t!6329 (toList!888 call!15405))) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26849 () Bool)

(assert (=> bm!15747 (= c!26849 c!26851)))

(declare-fun c!26852 () Bool)

(declare-fun b!142233 () Bool)

(assert (=> b!142233 (= e!92684 (ite c!26850 (t!6329 (t!6329 (toList!888 call!15405))) (ite c!26852 (Cons!1741 (h!2348 (t!6329 (toList!888 call!15405))) (t!6329 (t!6329 (toList!888 call!15405)))) Nil!1742)))))

(declare-fun b!142234 () Bool)

(assert (=> b!142234 (= e!92683 call!15748)))

(declare-fun b!142235 () Bool)

(assert (=> b!142235 (= e!92685 (contains!925 lt!74484 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142236 () Bool)

(assert (=> b!142236 (= e!92684 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 call!15405))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!142237 () Bool)

(assert (=> b!142237 (= e!92681 call!15750)))

(declare-fun b!142238 () Bool)

(assert (=> b!142238 (= c!26852 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15405))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 call!15405)))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!142238 (= e!92683 e!92681)))

(declare-fun b!142239 () Bool)

(declare-fun res!67832 () Bool)

(assert (=> b!142239 (=> (not res!67832) (not e!92685))))

(assert (=> b!142239 (= res!67832 (containsKey!180 lt!74484 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45065 c!26851) b!142232))

(assert (= (and d!45065 (not c!26851)) b!142231))

(assert (= (and b!142231 c!26850) b!142234))

(assert (= (and b!142231 (not c!26850)) b!142238))

(assert (= (and b!142238 c!26852) b!142237))

(assert (= (and b!142238 (not c!26852)) b!142230))

(assert (= (or b!142237 b!142230) bm!15745))

(assert (= (or b!142234 bm!15745) bm!15746))

(assert (= (or b!142232 bm!15746) bm!15747))

(assert (= (and bm!15747 c!26849) b!142236))

(assert (= (and bm!15747 (not c!26849)) b!142233))

(assert (= (and d!45065 res!67831) b!142239))

(assert (= (and b!142239 res!67832) b!142235))

(declare-fun m!171123 () Bool)

(assert (=> b!142236 m!171123))

(declare-fun m!171125 () Bool)

(assert (=> d!45065 m!171125))

(assert (=> d!45065 m!169141))

(declare-fun m!171127 () Bool)

(assert (=> b!142239 m!171127))

(declare-fun m!171129 () Bool)

(assert (=> bm!15747 m!171129))

(declare-fun m!171131 () Bool)

(assert (=> b!142235 m!171131))

(assert (=> b!140777 d!45065))

(declare-fun d!45067 () Bool)

(declare-fun res!67833 () Bool)

(declare-fun e!92686 () Bool)

(assert (=> d!45067 (=> res!67833 e!92686)))

(assert (=> d!45067 (= res!67833 (and ((_ is Cons!1741) (toList!888 lt!73052)) (= (_1!1360 (h!2348 (toList!888 lt!73052))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45067 (= (containsKey!180 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000) e!92686)))

(declare-fun b!142240 () Bool)

(declare-fun e!92687 () Bool)

(assert (=> b!142240 (= e!92686 e!92687)))

(declare-fun res!67834 () Bool)

(assert (=> b!142240 (=> (not res!67834) (not e!92687))))

(assert (=> b!142240 (= res!67834 (and (or (not ((_ is Cons!1741) (toList!888 lt!73052))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73052))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73052)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73052))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142241 () Bool)

(assert (=> b!142241 (= e!92687 (containsKey!180 (t!6329 (toList!888 lt!73052)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45067 (not res!67833)) b!142240))

(assert (= (and b!142240 res!67834) b!142241))

(declare-fun m!171133 () Bool)

(assert (=> b!142241 m!171133))

(assert (=> d!43555 d!45067))

(declare-fun d!45069 () Bool)

(declare-fun res!67835 () Bool)

(declare-fun e!92688 () Bool)

(assert (=> d!45069 (=> res!67835 e!92688)))

(assert (=> d!45069 (= res!67835 (and ((_ is Cons!1741) lt!73537) (= (_1!1360 (h!2348 lt!73537)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45069 (= (containsKey!180 lt!73537 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92688)))

(declare-fun b!142242 () Bool)

(declare-fun e!92689 () Bool)

(assert (=> b!142242 (= e!92688 e!92689)))

(declare-fun res!67836 () Bool)

(assert (=> b!142242 (=> (not res!67836) (not e!92689))))

(assert (=> b!142242 (= res!67836 (and (or (not ((_ is Cons!1741) lt!73537)) (bvsle (_1!1360 (h!2348 lt!73537)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73537) (bvslt (_1!1360 (h!2348 lt!73537)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142243 () Bool)

(assert (=> b!142243 (= e!92689 (containsKey!180 (t!6329 lt!73537) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45069 (not res!67835)) b!142242))

(assert (= (and b!142242 res!67836) b!142243))

(declare-fun m!171135 () Bool)

(assert (=> b!142243 m!171135))

(assert (=> b!140305 d!45069))

(declare-fun lt!74485 () Bool)

(declare-fun d!45071 () Bool)

(assert (=> d!45071 (= lt!74485 (select (content!138 (t!6329 (toList!888 lt!73031))) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!92691 () Bool)

(assert (=> d!45071 (= lt!74485 e!92691)))

(declare-fun res!67837 () Bool)

(assert (=> d!45071 (=> (not res!67837) (not e!92691))))

(assert (=> d!45071 (= res!67837 ((_ is Cons!1741) (t!6329 (toList!888 lt!73031))))))

(assert (=> d!45071 (= (contains!925 (t!6329 (toList!888 lt!73031)) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!74485)))

(declare-fun b!142244 () Bool)

(declare-fun e!92690 () Bool)

(assert (=> b!142244 (= e!92691 e!92690)))

(declare-fun res!67838 () Bool)

(assert (=> b!142244 (=> res!67838 e!92690)))

(assert (=> b!142244 (= res!67838 (= (h!2348 (t!6329 (toList!888 lt!73031))) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!142245 () Bool)

(assert (=> b!142245 (= e!92690 (contains!925 (t!6329 (t!6329 (toList!888 lt!73031))) (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!45071 res!67837) b!142244))

(assert (= (and b!142244 (not res!67838)) b!142245))

(declare-fun m!171137 () Bool)

(assert (=> d!45071 m!171137))

(declare-fun m!171139 () Bool)

(assert (=> d!45071 m!171139))

(declare-fun m!171141 () Bool)

(assert (=> b!142245 m!171141))

(assert (=> b!140681 d!45071))

(assert (=> d!43545 d!43543))

(declare-fun d!45073 () Bool)

(assert (=> d!45073 (= (getValueByKey!176 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45073 true))

(declare-fun _$22!498 () Unit!4373)

(assert (=> d!45073 (= (choose!865 lt!73016 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!498)))

(declare-fun bs!5981 () Bool)

(assert (= bs!5981 d!45073))

(assert (=> bs!5981 m!166247))

(assert (=> d!43545 d!45073))

(declare-fun d!45075 () Bool)

(declare-fun res!67839 () Bool)

(declare-fun e!92692 () Bool)

(assert (=> d!45075 (=> res!67839 e!92692)))

(assert (=> d!45075 (= res!67839 (or ((_ is Nil!1742) lt!73016) ((_ is Nil!1742) (t!6329 lt!73016))))))

(assert (=> d!45075 (= (isStrictlySorted!325 lt!73016) e!92692)))

(declare-fun b!142246 () Bool)

(declare-fun e!92693 () Bool)

(assert (=> b!142246 (= e!92692 e!92693)))

(declare-fun res!67840 () Bool)

(assert (=> b!142246 (=> (not res!67840) (not e!92693))))

(assert (=> b!142246 (= res!67840 (bvslt (_1!1360 (h!2348 lt!73016)) (_1!1360 (h!2348 (t!6329 lt!73016)))))))

(declare-fun b!142247 () Bool)

(assert (=> b!142247 (= e!92693 (isStrictlySorted!325 (t!6329 lt!73016)))))

(assert (= (and d!45075 (not res!67839)) b!142246))

(assert (= (and b!142246 res!67840) b!142247))

(declare-fun m!171143 () Bool)

(assert (=> b!142247 m!171143))

(assert (=> d!43545 d!45075))

(declare-fun d!45077 () Bool)

(assert (=> d!45077 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!73313)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!73313)))))

(assert (=> d!43619 d!45077))

(declare-fun b!142251 () Bool)

(declare-fun e!92695 () Option!182)

(assert (=> b!142251 (= e!92695 None!180)))

(declare-fun b!142248 () Bool)

(declare-fun e!92694 () Option!182)

(assert (=> b!142248 (= e!92694 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))))

(declare-fun b!142249 () Bool)

(assert (=> b!142249 (= e!92694 e!92695)))

(declare-fun c!26854 () Bool)

(assert (=> b!142249 (= c!26854 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))) lt!73313))))))

(declare-fun c!26853 () Bool)

(declare-fun d!45079 () Bool)

(assert (=> d!45079 (= c!26853 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))) lt!73313)))))

(assert (=> d!45079 (= (getValueByKey!176 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!73313) e!92694)))

(declare-fun b!142250 () Bool)

(assert (=> b!142250 (= e!92695 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73312 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))) lt!73313))))

(assert (= (and d!45079 c!26853) b!142248))

(assert (= (and d!45079 (not c!26853)) b!142249))

(assert (= (and b!142249 c!26854) b!142250))

(assert (= (and b!142249 (not c!26854)) b!142251))

(declare-fun m!171145 () Bool)

(assert (=> b!142250 m!171145))

(assert (=> d!43619 d!45079))

(declare-fun c!26855 () Bool)

(declare-fun bm!15748 () Bool)

(declare-fun call!15751 () Bool)

(assert (=> bm!15748 (= call!15751 (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26855 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26328 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743))) (ite c!26328 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)))))))

(declare-fun b!142252 () Bool)

(declare-fun e!92699 () Bool)

(assert (=> b!142252 (= e!92699 call!15751)))

(declare-fun b!142254 () Bool)

(assert (=> b!142254 (= e!92699 call!15751)))

(declare-fun b!142255 () Bool)

(declare-fun e!92696 () Bool)

(declare-fun e!92697 () Bool)

(assert (=> b!142255 (= e!92696 e!92697)))

(declare-fun res!67842 () Bool)

(assert (=> b!142255 (=> (not res!67842) (not e!92697))))

(declare-fun e!92698 () Bool)

(assert (=> b!142255 (= res!67842 (not e!92698))))

(declare-fun res!67843 () Bool)

(assert (=> b!142255 (=> (not res!67843) (not e!92698))))

(assert (=> b!142255 (= res!67843 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142256 () Bool)

(assert (=> b!142256 (= e!92697 e!92699)))

(assert (=> b!142256 (= c!26855 (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!45081 () Bool)

(declare-fun res!67841 () Bool)

(assert (=> d!45081 (=> res!67841 e!92696)))

(assert (=> d!45081 (= res!67841 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!45081 (= (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26328 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743))) e!92696)))

(declare-fun b!142253 () Bool)

(assert (=> b!142253 (= e!92698 (contains!924 (ite c!26328 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26089 (Cons!1742 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!45081 (not res!67841)) b!142255))

(assert (= (and b!142255 res!67843) b!142253))

(assert (= (and b!142255 res!67842) b!142256))

(assert (= (and b!142256 c!26855) b!142252))

(assert (= (and b!142256 (not c!26855)) b!142254))

(assert (= (or b!142252 b!142254) bm!15748))

(assert (=> bm!15748 m!168763))

(declare-fun m!171147 () Bool)

(assert (=> bm!15748 m!171147))

(assert (=> b!142255 m!168763))

(assert (=> b!142255 m!168763))

(assert (=> b!142255 m!168773))

(assert (=> b!142256 m!168763))

(assert (=> b!142256 m!168763))

(assert (=> b!142256 m!168773))

(assert (=> b!142253 m!168763))

(assert (=> b!142253 m!168763))

(declare-fun m!171149 () Bool)

(assert (=> b!142253 m!171149))

(assert (=> bm!15616 d!45081))

(declare-fun b!142260 () Bool)

(declare-fun e!92701 () Option!182)

(assert (=> b!142260 (= e!92701 None!180)))

(declare-fun b!142257 () Bool)

(declare-fun e!92700 () Option!182)

(assert (=> b!142257 (= e!92700 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73803)))))))

(declare-fun b!142258 () Bool)

(assert (=> b!142258 (= e!92700 e!92701)))

(declare-fun c!26857 () Bool)

(assert (=> b!142258 (= c!26857 (and ((_ is Cons!1741) (toList!888 lt!73803)) (not (= (_1!1360 (h!2348 (toList!888 lt!73803))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!45083 () Bool)

(declare-fun c!26856 () Bool)

(assert (=> d!45083 (= c!26856 (and ((_ is Cons!1741) (toList!888 lt!73803)) (= (_1!1360 (h!2348 (toList!888 lt!73803))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45083 (= (getValueByKey!176 (toList!888 lt!73803) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92700)))

(declare-fun b!142259 () Bool)

(assert (=> b!142259 (= e!92701 (getValueByKey!176 (t!6329 (toList!888 lt!73803)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45083 c!26856) b!142257))

(assert (= (and d!45083 (not c!26856)) b!142258))

(assert (= (and b!142258 c!26857) b!142259))

(assert (= (and b!142258 (not c!26857)) b!142260))

(declare-fun m!171151 () Bool)

(assert (=> b!142259 m!171151))

(assert (=> b!140696 d!45083))

(assert (=> b!140345 d!45005))

(declare-fun d!45085 () Bool)

(assert (=> d!45085 (= (apply!120 lt!73378 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73378) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5982 () Bool)

(assert (= bs!5982 d!45085))

(assert (=> bs!5982 m!169955))

(assert (=> bs!5982 m!169955))

(declare-fun m!171153 () Bool)

(assert (=> bs!5982 m!171153))

(assert (=> b!140045 d!45085))

(declare-fun b!142264 () Bool)

(declare-fun e!92703 () Option!182)

(assert (=> b!142264 (= e!92703 None!180)))

(declare-fun b!142261 () Bool)

(declare-fun e!92702 () Option!182)

(assert (=> b!142261 (= e!92702 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73459)))))))

(declare-fun b!142262 () Bool)

(assert (=> b!142262 (= e!92702 e!92703)))

(declare-fun c!26859 () Bool)

(assert (=> b!142262 (= c!26859 (and ((_ is Cons!1741) (toList!888 lt!73459)) (not (= (_1!1360 (h!2348 (toList!888 lt!73459))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26858 () Bool)

(declare-fun d!45087 () Bool)

(assert (=> d!45087 (= c!26858 (and ((_ is Cons!1741) (toList!888 lt!73459)) (= (_1!1360 (h!2348 (toList!888 lt!73459))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45087 (= (getValueByKey!176 (toList!888 lt!73459) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92702)))

(declare-fun b!142263 () Bool)

(assert (=> b!142263 (= e!92703 (getValueByKey!176 (t!6329 (toList!888 lt!73459)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45087 c!26858) b!142261))

(assert (= (and d!45087 (not c!26858)) b!142262))

(assert (= (and b!142262 c!26859) b!142263))

(assert (= (and b!142262 (not c!26859)) b!142264))

(declare-fun m!171155 () Bool)

(assert (=> b!142263 m!171155))

(assert (=> b!140201 d!45087))

(declare-fun d!45089 () Bool)

(assert (=> d!45089 (= ($colon$colon!94 e!91301 (ite c!26180 (h!2348 (toList!888 lt!72889)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (Cons!1741 (ite c!26180 (h!2348 (toList!888 lt!72889)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91301))))

(assert (=> bm!15545 d!45089))

(declare-fun d!45091 () Bool)

(declare-fun res!67844 () Bool)

(declare-fun e!92704 () Bool)

(assert (=> d!45091 (=> res!67844 e!92704)))

(assert (=> d!45091 (= res!67844 (= (select (arr!2315 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!73273))))

(assert (=> d!45091 (= (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!92704)))

(declare-fun b!142265 () Bool)

(declare-fun e!92705 () Bool)

(assert (=> b!142265 (= e!92704 e!92705)))

(declare-fun res!67845 () Bool)

(assert (=> b!142265 (=> (not res!67845) (not e!92705))))

(assert (=> b!142265 (= res!67845 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun b!142266 () Bool)

(assert (=> b!142266 (= e!92705 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45091 (not res!67844)) b!142265))

(assert (= (and b!142265 res!67845) b!142266))

(assert (=> d!45091 m!167999))

(declare-fun m!171157 () Bool)

(assert (=> b!142266 m!171157))

(assert (=> b!140601 d!45091))

(declare-fun b!142270 () Bool)

(declare-fun e!92707 () Option!182)

(assert (=> b!142270 (= e!92707 None!180)))

(declare-fun b!142267 () Bool)

(declare-fun e!92706 () Option!182)

(assert (=> b!142267 (= e!92706 (Some!181 (_2!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825)))))))))

(declare-fun b!142268 () Bool)

(assert (=> b!142268 (= e!92706 e!92707)))

(declare-fun c!26861 () Bool)

(assert (=> b!142268 (= c!26861 (and ((_ is Cons!1741) (t!6329 (t!6329 (toList!888 lt!72825)))) (not (= (_1!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))))

(declare-fun c!26860 () Bool)

(declare-fun d!45093 () Bool)

(assert (=> d!45093 (= c!26860 (and ((_ is Cons!1741) (t!6329 (t!6329 (toList!888 lt!72825)))) (= (_1!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!45093 (= (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92706)))

(declare-fun b!142269 () Bool)

(assert (=> b!142269 (= e!92707 (getValueByKey!176 (t!6329 (t!6329 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!45093 c!26860) b!142267))

(assert (= (and d!45093 (not c!26860)) b!142268))

(assert (= (and b!142268 c!26861) b!142269))

(assert (= (and b!142268 (not c!26861)) b!142270))

(assert (=> b!142269 m!166013))

(declare-fun m!171159 () Bool)

(assert (=> b!142269 m!171159))

(assert (=> b!140058 d!45093))

(declare-fun d!45095 () Bool)

(assert (=> d!45095 (= (apply!120 lt!73650 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73650) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5983 () Bool)

(assert (= bs!5983 d!45095))

(assert (=> bs!5983 m!169919))

(assert (=> bs!5983 m!169919))

(declare-fun m!171161 () Bool)

(assert (=> bs!5983 m!171161))

(assert (=> b!140447 d!45095))

(declare-fun b!142271 () Bool)

(declare-fun lt!74492 () Unit!4373)

(declare-fun lt!74488 () Unit!4373)

(assert (=> b!142271 (= lt!74492 lt!74488)))

(declare-fun lt!74490 () (_ BitVec 64))

(declare-fun lt!74491 () ListLongMap!1745)

(declare-fun lt!74487 () V!3555)

(declare-fun lt!74486 () (_ BitVec 64))

(assert (=> b!142271 (not (contains!923 (+!179 lt!74491 (tuple2!2699 lt!74490 lt!74487)) lt!74486))))

(assert (=> b!142271 (= lt!74488 (addStillNotContains!64 lt!74491 lt!74490 lt!74487 lt!74486))))

(assert (=> b!142271 (= lt!74486 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142271 (= lt!74487 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142271 (= lt!74490 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!15752 () ListLongMap!1745)

(assert (=> b!142271 (= lt!74491 call!15752)))

(declare-fun e!92708 () ListLongMap!1745)

(assert (=> b!142271 (= e!92708 (+!179 call!15752 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142273 () Bool)

(declare-fun e!92710 () ListLongMap!1745)

(assert (=> b!142273 (= e!92710 (ListLongMap!1746 Nil!1742))))

(declare-fun b!142274 () Bool)

(declare-fun e!92714 () Bool)

(declare-fun e!92709 () Bool)

(assert (=> b!142274 (= e!92714 e!92709)))

(assert (=> b!142274 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun lt!74489 () ListLongMap!1745)

(declare-fun res!67849 () Bool)

(assert (=> b!142274 (= res!67849 (contains!923 lt!74489 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!142274 (=> (not res!67849) (not e!92709))))

(declare-fun b!142275 () Bool)

(declare-fun res!67846 () Bool)

(declare-fun e!92713 () Bool)

(assert (=> b!142275 (=> (not res!67846) (not e!92713))))

(assert (=> b!142275 (= res!67846 (not (contains!923 lt!74489 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142276 () Bool)

(declare-fun e!92711 () Bool)

(assert (=> b!142276 (= e!92714 e!92711)))

(declare-fun c!26864 () Bool)

(assert (=> b!142276 (= c!26864 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!142277 () Bool)

(assert (=> b!142277 (= e!92710 e!92708)))

(declare-fun c!26865 () Bool)

(assert (=> b!142277 (= c!26865 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142278 () Bool)

(declare-fun e!92712 () Bool)

(assert (=> b!142278 (= e!92712 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!142278 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!15749 () Bool)

(assert (=> bm!15749 (= call!15752 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))))))

(declare-fun b!142279 () Bool)

(assert (=> b!142279 (= e!92711 (= lt!74489 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!142280 () Bool)

(assert (=> b!142280 (= e!92713 e!92714)))

(declare-fun c!26862 () Bool)

(assert (=> b!142280 (= c!26862 e!92712)))

(declare-fun res!67848 () Bool)

(assert (=> b!142280 (=> (not res!67848) (not e!92712))))

(assert (=> b!142280 (= res!67848 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun d!45097 () Bool)

(assert (=> d!45097 e!92713))

(declare-fun res!67847 () Bool)

(assert (=> d!45097 (=> (not res!67847) (not e!92713))))

(assert (=> d!45097 (= res!67847 (not (contains!923 lt!74489 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45097 (= lt!74489 e!92710)))

(declare-fun c!26863 () Bool)

(assert (=> d!45097 (= c!26863 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!45097 (validMask!0 (mask!7280 (v!3280 (underlying!480 thiss!992))))))

(assert (=> d!45097 (= (getCurrentListMapNoExtraKeys!145 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (_values!2923 (v!3280 (underlying!480 thiss!992))) (mask!7280 (v!3280 (underlying!480 thiss!992))) (extraKeys!2695 (v!3280 (underlying!480 thiss!992))) (zeroValue!2790 (v!3280 (underlying!480 thiss!992))) (minValue!2790 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992)))) lt!74489)))

(declare-fun b!142272 () Bool)

(assert (=> b!142272 (= e!92711 (isEmpty!417 lt!74489))))

(declare-fun b!142281 () Bool)

(assert (=> b!142281 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!142281 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2588 (_values!2923 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> b!142281 (= e!92709 (= (apply!120 lt!74489 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142282 () Bool)

(assert (=> b!142282 (= e!92708 call!15752)))

(assert (= (and d!45097 c!26863) b!142273))

(assert (= (and d!45097 (not c!26863)) b!142277))

(assert (= (and b!142277 c!26865) b!142271))

(assert (= (and b!142277 (not c!26865)) b!142282))

(assert (= (or b!142271 b!142282) bm!15749))

(assert (= (and d!45097 res!67847) b!142275))

(assert (= (and b!142275 res!67846) b!142280))

(assert (= (and b!142280 res!67848) b!142278))

(assert (= (and b!142280 c!26862) b!142274))

(assert (= (and b!142280 (not c!26862)) b!142276))

(assert (= (and b!142274 res!67849) b!142281))

(assert (= (and b!142276 c!26864) b!142279))

(assert (= (and b!142276 (not c!26864)) b!142272))

(declare-fun b_lambda!6369 () Bool)

(assert (=> (not b_lambda!6369) (not b!142271)))

(assert (=> b!142271 t!6326))

(declare-fun b_and!8895 () Bool)

(assert (= b_and!8891 (and (=> t!6326 result!4177) b_and!8895)))

(assert (=> b!142271 t!6328))

(declare-fun b_and!8897 () Bool)

(assert (= b_and!8893 (and (=> t!6328 result!4181) b_and!8897)))

(declare-fun b_lambda!6371 () Bool)

(assert (=> (not b_lambda!6371) (not b!142281)))

(assert (=> b!142281 t!6326))

(declare-fun b_and!8899 () Bool)

(assert (= b_and!8895 (and (=> t!6326 result!4177) b_and!8899)))

(assert (=> b!142281 t!6328))

(declare-fun b_and!8901 () Bool)

(assert (= b_and!8897 (and (=> t!6328 result!4181) b_and!8901)))

(declare-fun m!171163 () Bool)

(assert (=> b!142275 m!171163))

(assert (=> b!142277 m!167591))

(assert (=> b!142277 m!167591))

(declare-fun m!171165 () Bool)

(assert (=> b!142277 m!171165))

(declare-fun m!171167 () Bool)

(assert (=> d!45097 m!171167))

(assert (=> d!45097 m!166137))

(assert (=> b!142271 m!166027))

(declare-fun m!171169 () Bool)

(assert (=> b!142271 m!171169))

(declare-fun m!171171 () Bool)

(assert (=> b!142271 m!171171))

(assert (=> b!142271 m!171169))

(declare-fun m!171173 () Bool)

(assert (=> b!142271 m!171173))

(declare-fun m!171175 () Bool)

(assert (=> b!142271 m!171175))

(assert (=> b!142271 m!171173))

(assert (=> b!142271 m!166027))

(declare-fun m!171177 () Bool)

(assert (=> b!142271 m!171177))

(declare-fun m!171179 () Bool)

(assert (=> b!142271 m!171179))

(assert (=> b!142271 m!167591))

(assert (=> b!142278 m!167591))

(assert (=> b!142278 m!167591))

(assert (=> b!142278 m!171165))

(declare-fun m!171181 () Bool)

(assert (=> bm!15749 m!171181))

(declare-fun m!171183 () Bool)

(assert (=> b!142272 m!171183))

(assert (=> b!142281 m!166027))

(assert (=> b!142281 m!167591))

(declare-fun m!171185 () Bool)

(assert (=> b!142281 m!171185))

(assert (=> b!142281 m!171173))

(assert (=> b!142281 m!171173))

(assert (=> b!142281 m!166027))

(assert (=> b!142281 m!171177))

(assert (=> b!142281 m!167591))

(assert (=> b!142274 m!167591))

(assert (=> b!142274 m!167591))

(declare-fun m!171187 () Bool)

(assert (=> b!142274 m!171187))

(assert (=> b!142279 m!171181))

(assert (=> bm!15574 d!45097))

(declare-fun b!142286 () Bool)

(declare-fun e!92716 () Option!182)

(assert (=> b!142286 (= e!92716 None!180)))

(declare-fun b!142283 () Bool)

(declare-fun e!92715 () Option!182)

(assert (=> b!142283 (= e!92715 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73027))))))))

(declare-fun b!142284 () Bool)

(assert (=> b!142284 (= e!92715 e!92716)))

(declare-fun c!26867 () Bool)

(assert (=> b!142284 (= c!26867 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73027))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73027)))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26866 () Bool)

(declare-fun d!45099 () Bool)

(assert (=> d!45099 (= c!26866 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73027))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73027)))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45099 (= (getValueByKey!176 (t!6329 (toList!888 lt!73027)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92715)))

(declare-fun b!142285 () Bool)

(assert (=> b!142285 (= e!92716 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73027))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45099 c!26866) b!142283))

(assert (= (and d!45099 (not c!26866)) b!142284))

(assert (= (and b!142284 c!26867) b!142285))

(assert (= (and b!142284 (not c!26867)) b!142286))

(declare-fun m!171189 () Bool)

(assert (=> b!142285 m!171189))

(assert (=> b!140828 d!45099))

(declare-fun d!45101 () Bool)

(assert (=> d!45101 (= (get!1531 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73158) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43943 d!45101))

(assert (=> d!43943 d!44191))

(declare-fun d!45103 () Bool)

(assert (=> d!45103 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!73325)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!73325)))))

(assert (=> d!43623 d!45103))

(declare-fun b!142290 () Bool)

(declare-fun e!92718 () Option!182)

(assert (=> b!142290 (= e!92718 None!180)))

(declare-fun b!142287 () Bool)

(declare-fun e!92717 () Option!182)

(assert (=> b!142287 (= e!92717 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))))

(declare-fun b!142288 () Bool)

(assert (=> b!142288 (= e!92717 e!92718)))

(declare-fun c!26869 () Bool)

(assert (=> b!142288 (= c!26869 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))) lt!73325))))))

(declare-fun c!26868 () Bool)

(declare-fun d!45105 () Bool)

(assert (=> d!45105 (= c!26868 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))) lt!73325)))))

(assert (=> d!45105 (= (getValueByKey!176 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) lt!73325) e!92717)))

(declare-fun b!142289 () Bool)

(assert (=> b!142289 (= e!92718 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73330 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))) lt!73325))))

(assert (= (and d!45105 c!26868) b!142287))

(assert (= (and d!45105 (not c!26868)) b!142288))

(assert (= (and b!142288 c!26869) b!142289))

(assert (= (and b!142288 (not c!26869)) b!142290))

(declare-fun m!171191 () Bool)

(assert (=> b!142289 m!171191))

(assert (=> d!43623 d!45105))

(declare-fun d!45107 () Bool)

(assert (=> d!45107 (= (apply!120 lt!73487 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73487) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5984 () Bool)

(assert (= bs!5984 d!45107))

(assert (=> bs!5984 m!166385))

(declare-fun m!171193 () Bool)

(assert (=> bs!5984 m!171193))

(assert (=> bs!5984 m!171193))

(declare-fun m!171195 () Bool)

(assert (=> bs!5984 m!171195))

(assert (=> b!140215 d!45107))

(assert (=> b!140215 d!43463))

(declare-fun d!45109 () Bool)

(declare-fun res!67850 () Bool)

(declare-fun e!92719 () Bool)

(assert (=> d!45109 (=> res!67850 e!92719)))

(assert (=> d!45109 (= res!67850 (and ((_ is Cons!1741) lt!73758) (= (_1!1360 (h!2348 lt!73758)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45109 (= (containsKey!180 lt!73758 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92719)))

(declare-fun b!142291 () Bool)

(declare-fun e!92720 () Bool)

(assert (=> b!142291 (= e!92719 e!92720)))

(declare-fun res!67851 () Bool)

(assert (=> b!142291 (=> (not res!67851) (not e!92720))))

(assert (=> b!142291 (= res!67851 (and (or (not ((_ is Cons!1741) lt!73758)) (bvsle (_1!1360 (h!2348 lt!73758)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73758) (bvslt (_1!1360 (h!2348 lt!73758)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142292 () Bool)

(assert (=> b!142292 (= e!92720 (containsKey!180 (t!6329 lt!73758) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45109 (not res!67850)) b!142291))

(assert (= (and b!142291 res!67851) b!142292))

(declare-fun m!171197 () Bool)

(assert (=> b!142292 m!171197))

(assert (=> b!140649 d!45109))

(declare-fun d!45111 () Bool)

(assert (=> d!45111 (= (get!1531 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3284 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43789 d!45111))

(declare-fun b!142296 () Bool)

(declare-fun e!92722 () Option!182)

(assert (=> b!142296 (= e!92722 None!180)))

(declare-fun b!142293 () Bool)

(declare-fun e!92721 () Option!182)

(assert (=> b!142293 (= e!92721 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73306)))))))

(declare-fun b!142294 () Bool)

(assert (=> b!142294 (= e!92721 e!92722)))

(declare-fun c!26871 () Bool)

(assert (=> b!142294 (= c!26871 (and ((_ is Cons!1741) (toList!888 lt!73306)) (not (= (_1!1360 (h!2348 (toList!888 lt!73306))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!45113 () Bool)

(declare-fun c!26870 () Bool)

(assert (=> d!45113 (= c!26870 (and ((_ is Cons!1741) (toList!888 lt!73306)) (= (_1!1360 (h!2348 (toList!888 lt!73306))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45113 (= (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92721)))

(declare-fun b!142295 () Bool)

(assert (=> b!142295 (= e!92722 (getValueByKey!176 (t!6329 (toList!888 lt!73306)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45113 c!26870) b!142293))

(assert (= (and d!45113 (not c!26870)) b!142294))

(assert (= (and b!142294 c!26871) b!142295))

(assert (= (and b!142294 (not c!26871)) b!142296))

(assert (=> b!142295 m!166385))

(declare-fun m!171199 () Bool)

(assert (=> b!142295 m!171199))

(assert (=> d!43789 d!45113))

(declare-fun b!142300 () Bool)

(declare-fun e!92724 () Option!182)

(assert (=> b!142300 (= e!92724 None!180)))

(declare-fun b!142297 () Bool)

(declare-fun e!92723 () Option!182)

(assert (=> b!142297 (= e!92723 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73855)))))))

(declare-fun b!142298 () Bool)

(assert (=> b!142298 (= e!92723 e!92724)))

(declare-fun c!26873 () Bool)

(assert (=> b!142298 (= c!26873 (and ((_ is Cons!1741) (toList!888 lt!73855)) (not (= (_1!1360 (h!2348 (toList!888 lt!73855))) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun d!45115 () Bool)

(declare-fun c!26872 () Bool)

(assert (=> d!45115 (= c!26872 (and ((_ is Cons!1741) (toList!888 lt!73855)) (= (_1!1360 (h!2348 (toList!888 lt!73855))) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!45115 (= (getValueByKey!176 (toList!888 lt!73855) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92723)))

(declare-fun b!142299 () Bool)

(assert (=> b!142299 (= e!92724 (getValueByKey!176 (t!6329 (toList!888 lt!73855)) (_1!1360 (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45115 c!26872) b!142297))

(assert (= (and d!45115 (not c!26872)) b!142298))

(assert (= (and b!142298 c!26873) b!142299))

(assert (= (and b!142298 (not c!26873)) b!142300))

(declare-fun m!171201 () Bool)

(assert (=> b!142299 m!171201))

(assert (=> b!140746 d!45115))

(assert (=> d!43491 d!43509))

(assert (=> d!43491 d!43495))

(declare-fun d!45117 () Bool)

(assert (=> d!45117 (contains!923 (+!179 lt!73153 (tuple2!2699 lt!73155 (zeroValue!2790 newMap!16))) lt!73154)))

(assert (=> d!45117 true))

(declare-fun _$35!392 () Unit!4373)

(assert (=> d!45117 (= (choose!857 lt!73153 lt!73155 (zeroValue!2790 newMap!16) lt!73154) _$35!392)))

(declare-fun bs!5985 () Bool)

(assert (= bs!5985 d!45117))

(assert (=> bs!5985 m!166547))

(assert (=> bs!5985 m!166547))

(assert (=> bs!5985 m!166563))

(assert (=> d!43491 d!45117))

(declare-fun d!45119 () Bool)

(declare-fun e!92725 () Bool)

(assert (=> d!45119 e!92725))

(declare-fun res!67852 () Bool)

(assert (=> d!45119 (=> res!67852 e!92725)))

(declare-fun lt!74495 () Bool)

(assert (=> d!45119 (= res!67852 (not lt!74495))))

(declare-fun lt!74493 () Bool)

(assert (=> d!45119 (= lt!74495 lt!74493)))

(declare-fun lt!74494 () Unit!4373)

(declare-fun e!92726 () Unit!4373)

(assert (=> d!45119 (= lt!74494 e!92726)))

(declare-fun c!26874 () Bool)

(assert (=> d!45119 (= c!26874 lt!74493)))

(assert (=> d!45119 (= lt!74493 (containsKey!180 (toList!888 lt!73153) lt!73154))))

(assert (=> d!45119 (= (contains!923 lt!73153 lt!73154) lt!74495)))

(declare-fun b!142301 () Bool)

(declare-fun lt!74496 () Unit!4373)

(assert (=> b!142301 (= e!92726 lt!74496)))

(assert (=> b!142301 (= lt!74496 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73153) lt!73154))))

(assert (=> b!142301 (isDefined!129 (getValueByKey!176 (toList!888 lt!73153) lt!73154))))

(declare-fun b!142302 () Bool)

(declare-fun Unit!4497 () Unit!4373)

(assert (=> b!142302 (= e!92726 Unit!4497)))

(declare-fun b!142303 () Bool)

(assert (=> b!142303 (= e!92725 (isDefined!129 (getValueByKey!176 (toList!888 lt!73153) lt!73154)))))

(assert (= (and d!45119 c!26874) b!142301))

(assert (= (and d!45119 (not c!26874)) b!142302))

(assert (= (and d!45119 (not res!67852)) b!142303))

(declare-fun m!171203 () Bool)

(assert (=> d!45119 m!171203))

(declare-fun m!171205 () Bool)

(assert (=> b!142301 m!171205))

(declare-fun m!171207 () Bool)

(assert (=> b!142301 m!171207))

(assert (=> b!142301 m!171207))

(declare-fun m!171209 () Bool)

(assert (=> b!142301 m!171209))

(assert (=> b!142303 m!171207))

(assert (=> b!142303 m!171207))

(assert (=> b!142303 m!171209))

(assert (=> d!43491 d!45119))

(declare-fun b!142304 () Bool)

(declare-fun e!92727 () List!1745)

(declare-fun call!15755 () List!1745)

(assert (=> b!142304 (= e!92727 call!15755)))

(declare-fun bm!15750 () Bool)

(declare-fun call!15753 () List!1745)

(assert (=> bm!15750 (= call!15755 call!15753)))

(declare-fun d!45121 () Bool)

(declare-fun e!92731 () Bool)

(assert (=> d!45121 e!92731))

(declare-fun res!67853 () Bool)

(assert (=> d!45121 (=> (not res!67853) (not e!92731))))

(declare-fun lt!74497 () List!1745)

(assert (=> d!45121 (= res!67853 (isStrictlySorted!325 lt!74497))))

(declare-fun e!92728 () List!1745)

(assert (=> d!45121 (= lt!74497 e!92728)))

(declare-fun c!26877 () Bool)

(assert (=> d!45121 (= c!26877 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72902))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72902)))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45121 (isStrictlySorted!325 (t!6329 (toList!888 lt!72902)))))

(assert (=> d!45121 (= (insertStrictlySorted!93 (t!6329 (toList!888 lt!72902)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74497)))

(declare-fun bm!15751 () Bool)

(declare-fun call!15754 () List!1745)

(assert (=> bm!15751 (= call!15753 call!15754)))

(declare-fun b!142305 () Bool)

(declare-fun e!92729 () List!1745)

(assert (=> b!142305 (= e!92728 e!92729)))

(declare-fun c!26876 () Bool)

(assert (=> b!142305 (= c!26876 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72902))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72902)))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142306 () Bool)

(assert (=> b!142306 (= e!92728 call!15754)))

(declare-fun e!92730 () List!1745)

(declare-fun bm!15752 () Bool)

(assert (=> bm!15752 (= call!15754 ($colon$colon!94 e!92730 (ite c!26877 (h!2348 (t!6329 (toList!888 lt!72902))) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26875 () Bool)

(assert (=> bm!15752 (= c!26875 c!26877)))

(declare-fun c!26878 () Bool)

(declare-fun b!142307 () Bool)

(assert (=> b!142307 (= e!92730 (ite c!26876 (t!6329 (t!6329 (toList!888 lt!72902))) (ite c!26878 (Cons!1741 (h!2348 (t!6329 (toList!888 lt!72902))) (t!6329 (t!6329 (toList!888 lt!72902)))) Nil!1742)))))

(declare-fun b!142308 () Bool)

(assert (=> b!142308 (= e!92729 call!15753)))

(declare-fun b!142309 () Bool)

(assert (=> b!142309 (= e!92731 (contains!925 lt!74497 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142310 () Bool)

(assert (=> b!142310 (= e!92730 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 lt!72902))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!142311 () Bool)

(assert (=> b!142311 (= e!92727 call!15755)))

(declare-fun b!142312 () Bool)

(assert (=> b!142312 (= c!26878 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72902))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72902)))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!142312 (= e!92729 e!92727)))

(declare-fun b!142313 () Bool)

(declare-fun res!67854 () Bool)

(assert (=> b!142313 (=> (not res!67854) (not e!92731))))

(assert (=> b!142313 (= res!67854 (containsKey!180 lt!74497 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45121 c!26877) b!142306))

(assert (= (and d!45121 (not c!26877)) b!142305))

(assert (= (and b!142305 c!26876) b!142308))

(assert (= (and b!142305 (not c!26876)) b!142312))

(assert (= (and b!142312 c!26878) b!142311))

(assert (= (and b!142312 (not c!26878)) b!142304))

(assert (= (or b!142311 b!142304) bm!15750))

(assert (= (or b!142308 bm!15750) bm!15751))

(assert (= (or b!142306 bm!15751) bm!15752))

(assert (= (and bm!15752 c!26875) b!142310))

(assert (= (and bm!15752 (not c!26875)) b!142307))

(assert (= (and d!45121 res!67853) b!142313))

(assert (= (and b!142313 res!67854) b!142309))

(declare-fun m!171211 () Bool)

(assert (=> b!142310 m!171211))

(declare-fun m!171213 () Bool)

(assert (=> d!45121 m!171213))

(assert (=> d!45121 m!169539))

(declare-fun m!171215 () Bool)

(assert (=> b!142313 m!171215))

(declare-fun m!171217 () Bool)

(assert (=> bm!15752 m!171217))

(declare-fun m!171219 () Bool)

(assert (=> b!142309 m!171219))

(assert (=> b!140302 d!45121))

(assert (=> d!43773 d!43385))

(declare-fun d!45123 () Bool)

(declare-fun lt!74498 () Bool)

(assert (=> d!45123 (= lt!74498 (select (content!137 Nil!1743) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun e!92733 () Bool)

(assert (=> d!45123 (= lt!74498 e!92733)))

(declare-fun res!67855 () Bool)

(assert (=> d!45123 (=> (not res!67855) (not e!92733))))

(assert (=> d!45123 (= res!67855 ((_ is Cons!1742) Nil!1743))))

(assert (=> d!45123 (= (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)) lt!74498)))

(declare-fun b!142314 () Bool)

(declare-fun e!92732 () Bool)

(assert (=> b!142314 (= e!92733 e!92732)))

(declare-fun res!67856 () Bool)

(assert (=> b!142314 (=> res!67856 e!92732)))

(assert (=> b!142314 (= res!67856 (= (h!2349 Nil!1743) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun b!142315 () Bool)

(assert (=> b!142315 (= e!92732 (contains!924 (t!6330 Nil!1743) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(assert (= (and d!45123 res!67855) b!142314))

(assert (= (and b!142314 (not res!67856)) b!142315))

(assert (=> d!45123 m!166611))

(assert (=> d!45123 m!168127))

(declare-fun m!171221 () Bool)

(assert (=> d!45123 m!171221))

(assert (=> b!142315 m!168127))

(declare-fun m!171223 () Bool)

(assert (=> b!142315 m!171223))

(assert (=> b!140822 d!45123))

(declare-fun d!45125 () Bool)

(declare-fun e!92734 () Bool)

(assert (=> d!45125 e!92734))

(declare-fun res!67857 () Bool)

(assert (=> d!45125 (=> (not res!67857) (not e!92734))))

(declare-fun lt!74502 () ListLongMap!1745)

(assert (=> d!45125 (= res!67857 (contains!923 lt!74502 (_1!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74499 () List!1745)

(assert (=> d!45125 (= lt!74502 (ListLongMap!1746 lt!74499))))

(declare-fun lt!74500 () Unit!4373)

(declare-fun lt!74501 () Unit!4373)

(assert (=> d!45125 (= lt!74500 lt!74501)))

(assert (=> d!45125 (= (getValueByKey!176 lt!74499 (_1!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45125 (= lt!74501 (lemmaContainsTupThenGetReturnValue!90 lt!74499 (_1!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45125 (= lt!74499 (insertStrictlySorted!93 (toList!888 lt!73610) (_1!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45125 (= (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))) lt!74502)))

(declare-fun b!142316 () Bool)

(declare-fun res!67858 () Bool)

(assert (=> b!142316 (=> (not res!67858) (not e!92734))))

(assert (=> b!142316 (= res!67858 (= (getValueByKey!176 (toList!888 lt!74502) (_1!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142317 () Bool)

(assert (=> b!142317 (= e!92734 (contains!925 (toList!888 lt!74502) (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45125 res!67857) b!142316))

(assert (= (and b!142316 res!67858) b!142317))

(declare-fun m!171225 () Bool)

(assert (=> d!45125 m!171225))

(declare-fun m!171227 () Bool)

(assert (=> d!45125 m!171227))

(declare-fun m!171229 () Bool)

(assert (=> d!45125 m!171229))

(declare-fun m!171231 () Bool)

(assert (=> d!45125 m!171231))

(declare-fun m!171233 () Bool)

(assert (=> b!142316 m!171233))

(declare-fun m!171235 () Bool)

(assert (=> b!142317 m!171235))

(assert (=> b!140392 d!45125))

(declare-fun d!45127 () Bool)

(assert (=> d!45127 (= (apply!120 (+!179 lt!73597 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))) lt!73602) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73597 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))) lt!73602)))))

(declare-fun bs!5986 () Bool)

(assert (= bs!5986 d!45127))

(declare-fun m!171237 () Bool)

(assert (=> bs!5986 m!171237))

(assert (=> bs!5986 m!171237))

(declare-fun m!171239 () Bool)

(assert (=> bs!5986 m!171239))

(assert (=> b!140392 d!45127))

(declare-fun d!45129 () Bool)

(assert (=> d!45129 (= (apply!120 lt!73613 lt!73608) (get!1531 (getValueByKey!176 (toList!888 lt!73613) lt!73608)))))

(declare-fun bs!5987 () Bool)

(assert (= bs!5987 d!45129))

(declare-fun m!171241 () Bool)

(assert (=> bs!5987 m!171241))

(assert (=> bs!5987 m!171241))

(declare-fun m!171243 () Bool)

(assert (=> bs!5987 m!171243))

(assert (=> b!140392 d!45129))

(assert (=> b!140392 d!44591))

(declare-fun d!45131 () Bool)

(declare-fun e!92735 () Bool)

(assert (=> d!45131 e!92735))

(declare-fun res!67859 () Bool)

(assert (=> d!45131 (=> (not res!67859) (not e!92735))))

(declare-fun lt!74506 () ListLongMap!1745)

(assert (=> d!45131 (= res!67859 (contains!923 lt!74506 (_1!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74503 () List!1745)

(assert (=> d!45131 (= lt!74506 (ListLongMap!1746 lt!74503))))

(declare-fun lt!74504 () Unit!4373)

(declare-fun lt!74505 () Unit!4373)

(assert (=> d!45131 (= lt!74504 lt!74505)))

(assert (=> d!45131 (= (getValueByKey!176 lt!74503 (_1!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45131 (= lt!74505 (lemmaContainsTupThenGetReturnValue!90 lt!74503 (_1!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45131 (= lt!74503 (insertStrictlySorted!93 (toList!888 lt!73595) (_1!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45131 (= (+!179 lt!73595 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))) lt!74506)))

(declare-fun b!142318 () Bool)

(declare-fun res!67860 () Bool)

(assert (=> b!142318 (=> (not res!67860) (not e!92735))))

(assert (=> b!142318 (= res!67860 (= (getValueByKey!176 (toList!888 lt!74506) (_1!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142319 () Bool)

(assert (=> b!142319 (= e!92735 (contains!925 (toList!888 lt!74506) (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45131 res!67859) b!142318))

(assert (= (and b!142318 res!67860) b!142319))

(declare-fun m!171245 () Bool)

(assert (=> d!45131 m!171245))

(declare-fun m!171247 () Bool)

(assert (=> d!45131 m!171247))

(declare-fun m!171249 () Bool)

(assert (=> d!45131 m!171249))

(declare-fun m!171251 () Bool)

(assert (=> d!45131 m!171251))

(declare-fun m!171253 () Bool)

(assert (=> b!142318 m!171253))

(declare-fun m!171255 () Bool)

(assert (=> b!142319 m!171255))

(assert (=> b!140392 d!45131))

(declare-fun d!45133 () Bool)

(assert (=> d!45133 (= (apply!120 (+!179 lt!73597 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))) lt!73602) (apply!120 lt!73597 lt!73602))))

(declare-fun lt!74507 () Unit!4373)

(assert (=> d!45133 (= lt!74507 (choose!856 lt!73597 lt!73598 (minValue!2790 newMap!16) lt!73602))))

(declare-fun e!92736 () Bool)

(assert (=> d!45133 e!92736))

(declare-fun res!67861 () Bool)

(assert (=> d!45133 (=> (not res!67861) (not e!92736))))

(assert (=> d!45133 (= res!67861 (contains!923 lt!73597 lt!73602))))

(assert (=> d!45133 (= (addApplyDifferent!96 lt!73597 lt!73598 (minValue!2790 newMap!16) lt!73602) lt!74507)))

(declare-fun b!142320 () Bool)

(assert (=> b!142320 (= e!92736 (not (= lt!73602 lt!73598)))))

(assert (= (and d!45133 res!67861) b!142320))

(assert (=> d!45133 m!167765))

(declare-fun m!171257 () Bool)

(assert (=> d!45133 m!171257))

(declare-fun m!171259 () Bool)

(assert (=> d!45133 m!171259))

(assert (=> d!45133 m!167751))

(assert (=> d!45133 m!167751))

(assert (=> d!45133 m!167753))

(assert (=> b!140392 d!45133))

(declare-fun d!45135 () Bool)

(assert (=> d!45135 (= (apply!120 (+!179 lt!73613 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))) lt!73608) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73613 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))) lt!73608)))))

(declare-fun bs!5988 () Bool)

(assert (= bs!5988 d!45135))

(declare-fun m!171261 () Bool)

(assert (=> bs!5988 m!171261))

(assert (=> bs!5988 m!171261))

(declare-fun m!171263 () Bool)

(assert (=> bs!5988 m!171263))

(assert (=> b!140392 d!45135))

(declare-fun d!45137 () Bool)

(assert (=> d!45137 (= (apply!120 (+!179 lt!73613 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))) lt!73608) (apply!120 lt!73613 lt!73608))))

(declare-fun lt!74508 () Unit!4373)

(assert (=> d!45137 (= lt!74508 (choose!856 lt!73613 lt!73609 (minValue!2790 newMap!16) lt!73608))))

(declare-fun e!92737 () Bool)

(assert (=> d!45137 e!92737))

(declare-fun res!67862 () Bool)

(assert (=> d!45137 (=> (not res!67862) (not e!92737))))

(assert (=> d!45137 (= res!67862 (contains!923 lt!73613 lt!73608))))

(assert (=> d!45137 (= (addApplyDifferent!96 lt!73613 lt!73609 (minValue!2790 newMap!16) lt!73608) lt!74508)))

(declare-fun b!142321 () Bool)

(assert (=> b!142321 (= e!92737 (not (= lt!73608 lt!73609)))))

(assert (= (and d!45137 res!67862) b!142321))

(assert (=> d!45137 m!167749))

(declare-fun m!171265 () Bool)

(assert (=> d!45137 m!171265))

(declare-fun m!171267 () Bool)

(assert (=> d!45137 m!171267))

(assert (=> d!45137 m!167761))

(assert (=> d!45137 m!167761))

(assert (=> d!45137 m!167763))

(assert (=> b!140392 d!45137))

(declare-fun d!45139 () Bool)

(declare-fun e!92738 () Bool)

(assert (=> d!45139 e!92738))

(declare-fun res!67863 () Bool)

(assert (=> d!45139 (=> (not res!67863) (not e!92738))))

(declare-fun lt!74512 () ListLongMap!1745)

(assert (=> d!45139 (= res!67863 (contains!923 lt!74512 (_1!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))))))

(declare-fun lt!74509 () List!1745)

(assert (=> d!45139 (= lt!74512 (ListLongMap!1746 lt!74509))))

(declare-fun lt!74510 () Unit!4373)

(declare-fun lt!74511 () Unit!4373)

(assert (=> d!45139 (= lt!74510 lt!74511)))

(assert (=> d!45139 (= (getValueByKey!176 lt!74509 (_1!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))))))

(assert (=> d!45139 (= lt!74511 (lemmaContainsTupThenGetReturnValue!90 lt!74509 (_1!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))))))

(assert (=> d!45139 (= lt!74509 (insertStrictlySorted!93 (toList!888 lt!73613) (_1!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))))))

(assert (=> d!45139 (= (+!179 lt!73613 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))) lt!74512)))

(declare-fun b!142322 () Bool)

(declare-fun res!67864 () Bool)

(assert (=> b!142322 (=> (not res!67864) (not e!92738))))

(assert (=> b!142322 (= res!67864 (= (getValueByKey!176 (toList!888 lt!74512) (_1!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73609 (minValue!2790 newMap!16))))))))

(declare-fun b!142323 () Bool)

(assert (=> b!142323 (= e!92738 (contains!925 (toList!888 lt!74512) (tuple2!2699 lt!73609 (minValue!2790 newMap!16))))))

(assert (= (and d!45139 res!67863) b!142322))

(assert (= (and b!142322 res!67864) b!142323))

(declare-fun m!171269 () Bool)

(assert (=> d!45139 m!171269))

(declare-fun m!171271 () Bool)

(assert (=> d!45139 m!171271))

(declare-fun m!171273 () Bool)

(assert (=> d!45139 m!171273))

(declare-fun m!171275 () Bool)

(assert (=> d!45139 m!171275))

(declare-fun m!171277 () Bool)

(assert (=> b!142322 m!171277))

(declare-fun m!171279 () Bool)

(assert (=> b!142323 m!171279))

(assert (=> b!140392 d!45139))

(declare-fun d!45141 () Bool)

(assert (=> d!45141 (= (apply!120 lt!73597 lt!73602) (get!1531 (getValueByKey!176 (toList!888 lt!73597) lt!73602)))))

(declare-fun bs!5989 () Bool)

(assert (= bs!5989 d!45141))

(declare-fun m!171281 () Bool)

(assert (=> bs!5989 m!171281))

(assert (=> bs!5989 m!171281))

(declare-fun m!171283 () Bool)

(assert (=> bs!5989 m!171283))

(assert (=> b!140392 d!45141))

(declare-fun d!45143 () Bool)

(declare-fun e!92739 () Bool)

(assert (=> d!45143 e!92739))

(declare-fun res!67865 () Bool)

(assert (=> d!45143 (=> res!67865 e!92739)))

(declare-fun lt!74515 () Bool)

(assert (=> d!45143 (= res!67865 (not lt!74515))))

(declare-fun lt!74513 () Bool)

(assert (=> d!45143 (= lt!74515 lt!74513)))

(declare-fun lt!74514 () Unit!4373)

(declare-fun e!92740 () Unit!4373)

(assert (=> d!45143 (= lt!74514 e!92740)))

(declare-fun c!26879 () Bool)

(assert (=> d!45143 (= c!26879 lt!74513)))

(assert (=> d!45143 (= lt!74513 (containsKey!180 (toList!888 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))) lt!73611))))

(assert (=> d!45143 (= (contains!923 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))) lt!73611) lt!74515)))

(declare-fun b!142324 () Bool)

(declare-fun lt!74516 () Unit!4373)

(assert (=> b!142324 (= e!92740 lt!74516)))

(assert (=> b!142324 (= lt!74516 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))) lt!73611))))

(assert (=> b!142324 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))) lt!73611))))

(declare-fun b!142325 () Bool)

(declare-fun Unit!4498 () Unit!4373)

(assert (=> b!142325 (= e!92740 Unit!4498)))

(declare-fun b!142326 () Bool)

(assert (=> b!142326 (= e!92739 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16)))) lt!73611)))))

(assert (= (and d!45143 c!26879) b!142324))

(assert (= (and d!45143 (not c!26879)) b!142325))

(assert (= (and d!45143 (not res!67865)) b!142326))

(declare-fun m!171285 () Bool)

(assert (=> d!45143 m!171285))

(declare-fun m!171287 () Bool)

(assert (=> b!142324 m!171287))

(declare-fun m!171289 () Bool)

(assert (=> b!142324 m!171289))

(assert (=> b!142324 m!171289))

(declare-fun m!171291 () Bool)

(assert (=> b!142324 m!171291))

(assert (=> b!142326 m!171289))

(assert (=> b!142326 m!171289))

(assert (=> b!142326 m!171291))

(assert (=> b!140392 d!45143))

(declare-fun d!45145 () Bool)

(assert (=> d!45145 (contains!923 (+!179 lt!73610 (tuple2!2699 lt!73612 (zeroValue!2790 newMap!16))) lt!73611)))

(declare-fun lt!74517 () Unit!4373)

(assert (=> d!45145 (= lt!74517 (choose!857 lt!73610 lt!73612 (zeroValue!2790 newMap!16) lt!73611))))

(assert (=> d!45145 (contains!923 lt!73610 lt!73611)))

(assert (=> d!45145 (= (addStillContains!96 lt!73610 lt!73612 (zeroValue!2790 newMap!16) lt!73611) lt!74517)))

(declare-fun bs!5990 () Bool)

(assert (= bs!5990 d!45145))

(assert (=> bs!5990 m!167741))

(assert (=> bs!5990 m!167741))

(assert (=> bs!5990 m!167759))

(declare-fun m!171293 () Bool)

(assert (=> bs!5990 m!171293))

(declare-fun m!171295 () Bool)

(assert (=> bs!5990 m!171295))

(assert (=> b!140392 d!45145))

(declare-fun d!45147 () Bool)

(assert (=> d!45147 (= (apply!120 (+!179 lt!73595 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))) lt!73596) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73595 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16)))) lt!73596)))))

(declare-fun bs!5991 () Bool)

(assert (= bs!5991 d!45147))

(declare-fun m!171297 () Bool)

(assert (=> bs!5991 m!171297))

(assert (=> bs!5991 m!171297))

(declare-fun m!171299 () Bool)

(assert (=> bs!5991 m!171299))

(assert (=> b!140392 d!45147))

(declare-fun d!45149 () Bool)

(declare-fun e!92741 () Bool)

(assert (=> d!45149 e!92741))

(declare-fun res!67866 () Bool)

(assert (=> d!45149 (=> (not res!67866) (not e!92741))))

(declare-fun lt!74521 () ListLongMap!1745)

(assert (=> d!45149 (= res!67866 (contains!923 lt!74521 (_1!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))))))

(declare-fun lt!74518 () List!1745)

(assert (=> d!45149 (= lt!74521 (ListLongMap!1746 lt!74518))))

(declare-fun lt!74519 () Unit!4373)

(declare-fun lt!74520 () Unit!4373)

(assert (=> d!45149 (= lt!74519 lt!74520)))

(assert (=> d!45149 (= (getValueByKey!176 lt!74518 (_1!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))))))

(assert (=> d!45149 (= lt!74520 (lemmaContainsTupThenGetReturnValue!90 lt!74518 (_1!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))))))

(assert (=> d!45149 (= lt!74518 (insertStrictlySorted!93 (toList!888 lt!73597) (_1!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))))))

(assert (=> d!45149 (= (+!179 lt!73597 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))) lt!74521)))

(declare-fun b!142327 () Bool)

(declare-fun res!67867 () Bool)

(assert (=> b!142327 (=> (not res!67867) (not e!92741))))

(assert (=> b!142327 (= res!67867 (= (getValueByKey!176 (toList!888 lt!74521) (_1!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73598 (minValue!2790 newMap!16))))))))

(declare-fun b!142328 () Bool)

(assert (=> b!142328 (= e!92741 (contains!925 (toList!888 lt!74521) (tuple2!2699 lt!73598 (minValue!2790 newMap!16))))))

(assert (= (and d!45149 res!67866) b!142327))

(assert (= (and b!142327 res!67867) b!142328))

(declare-fun m!171301 () Bool)

(assert (=> d!45149 m!171301))

(declare-fun m!171303 () Bool)

(assert (=> d!45149 m!171303))

(declare-fun m!171305 () Bool)

(assert (=> d!45149 m!171305))

(declare-fun m!171307 () Bool)

(assert (=> d!45149 m!171307))

(declare-fun m!171309 () Bool)

(assert (=> b!142327 m!171309))

(declare-fun m!171311 () Bool)

(assert (=> b!142328 m!171311))

(assert (=> b!140392 d!45149))

(declare-fun d!45151 () Bool)

(assert (=> d!45151 (= (apply!120 (+!179 lt!73595 (tuple2!2699 lt!73599 (zeroValue!2790 newMap!16))) lt!73596) (apply!120 lt!73595 lt!73596))))

(declare-fun lt!74522 () Unit!4373)

(assert (=> d!45151 (= lt!74522 (choose!856 lt!73595 lt!73599 (zeroValue!2790 newMap!16) lt!73596))))

(declare-fun e!92742 () Bool)

(assert (=> d!45151 e!92742))

(declare-fun res!67868 () Bool)

(assert (=> d!45151 (=> (not res!67868) (not e!92742))))

(assert (=> d!45151 (= res!67868 (contains!923 lt!73595 lt!73596))))

(assert (=> d!45151 (= (addApplyDifferent!96 lt!73595 lt!73599 (zeroValue!2790 newMap!16) lt!73596) lt!74522)))

(declare-fun b!142329 () Bool)

(assert (=> b!142329 (= e!92742 (not (= lt!73596 lt!73599)))))

(assert (= (and d!45151 res!67868) b!142329))

(assert (=> d!45151 m!167757))

(declare-fun m!171313 () Bool)

(assert (=> d!45151 m!171313))

(declare-fun m!171315 () Bool)

(assert (=> d!45151 m!171315))

(assert (=> d!45151 m!167743))

(assert (=> d!45151 m!167743))

(assert (=> d!45151 m!167745))

(assert (=> b!140392 d!45151))

(declare-fun d!45153 () Bool)

(assert (=> d!45153 (= (apply!120 lt!73595 lt!73596) (get!1531 (getValueByKey!176 (toList!888 lt!73595) lt!73596)))))

(declare-fun bs!5992 () Bool)

(assert (= bs!5992 d!45153))

(declare-fun m!171317 () Bool)

(assert (=> bs!5992 m!171317))

(assert (=> bs!5992 m!171317))

(declare-fun m!171319 () Bool)

(assert (=> bs!5992 m!171319))

(assert (=> b!140392 d!45153))

(assert (=> b!140753 d!43779))

(declare-fun d!45155 () Bool)

(assert (=> d!45155 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!72889) lt!72894)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!72889) lt!72894))))))

(declare-fun bs!5993 () Bool)

(assert (= bs!5993 d!45155))

(assert (=> bs!5993 m!166269))

(declare-fun m!171321 () Bool)

(assert (=> bs!5993 m!171321))

(assert (=> b!140734 d!45155))

(assert (=> b!140734 d!43743))

(assert (=> bm!15565 d!43407))

(declare-fun d!45157 () Bool)

(assert (=> d!45157 (= (get!1530 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140731 d!45157))

(declare-fun d!45159 () Bool)

(assert (=> d!45159 (= (isEmpty!418 (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!181) (getValueByKey!176 (toList!888 lt!72907) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!43563 d!45159))

(assert (=> b!140378 d!44043))

(declare-fun d!45161 () Bool)

(declare-fun e!92743 () Bool)

(assert (=> d!45161 e!92743))

(declare-fun res!67869 () Bool)

(assert (=> d!45161 (=> res!67869 e!92743)))

(declare-fun lt!74525 () Bool)

(assert (=> d!45161 (= res!67869 (not lt!74525))))

(declare-fun lt!74523 () Bool)

(assert (=> d!45161 (= lt!74525 lt!74523)))

(declare-fun lt!74524 () Unit!4373)

(declare-fun e!92744 () Unit!4373)

(assert (=> d!45161 (= lt!74524 e!92744)))

(declare-fun c!26880 () Bool)

(assert (=> d!45161 (= c!26880 lt!74523)))

(assert (=> d!45161 (= lt!74523 (containsKey!180 (toList!888 lt!73528) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45161 (= (contains!923 lt!73528 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74525)))

(declare-fun b!142330 () Bool)

(declare-fun lt!74526 () Unit!4373)

(assert (=> b!142330 (= e!92744 lt!74526)))

(assert (=> b!142330 (= lt!74526 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73528) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142330 (isDefined!129 (getValueByKey!176 (toList!888 lt!73528) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142331 () Bool)

(declare-fun Unit!4499 () Unit!4373)

(assert (=> b!142331 (= e!92744 Unit!4499)))

(declare-fun b!142332 () Bool)

(assert (=> b!142332 (= e!92743 (isDefined!129 (getValueByKey!176 (toList!888 lt!73528) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45161 c!26880) b!142330))

(assert (= (and d!45161 (not c!26880)) b!142331))

(assert (= (and d!45161 (not res!67869)) b!142332))

(assert (=> d!45161 m!166385))

(declare-fun m!171323 () Bool)

(assert (=> d!45161 m!171323))

(assert (=> b!142330 m!166385))

(declare-fun m!171325 () Bool)

(assert (=> b!142330 m!171325))

(assert (=> b!142330 m!166385))

(assert (=> b!142330 m!169445))

(assert (=> b!142330 m!169445))

(declare-fun m!171327 () Bool)

(assert (=> b!142330 m!171327))

(assert (=> b!142332 m!166385))

(assert (=> b!142332 m!169445))

(assert (=> b!142332 m!169445))

(assert (=> b!142332 m!171327))

(assert (=> b!140270 d!45161))

(assert (=> b!140463 d!43355))

(declare-fun d!45163 () Bool)

(assert (=> d!45163 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5994 () Bool)

(assert (= bs!5994 d!45163))

(assert (=> bs!5994 m!166253))

(declare-fun m!171329 () Bool)

(assert (=> bs!5994 m!171329))

(assert (=> b!140119 d!45163))

(assert (=> b!140119 d!43553))

(declare-fun d!45165 () Bool)

(declare-fun e!92745 () Bool)

(assert (=> d!45165 e!92745))

(declare-fun res!67870 () Bool)

(assert (=> d!45165 (=> res!67870 e!92745)))

(declare-fun lt!74529 () Bool)

(assert (=> d!45165 (= res!67870 (not lt!74529))))

(declare-fun lt!74527 () Bool)

(assert (=> d!45165 (= lt!74529 lt!74527)))

(declare-fun lt!74528 () Unit!4373)

(declare-fun e!92746 () Unit!4373)

(assert (=> d!45165 (= lt!74528 e!92746)))

(declare-fun c!26881 () Bool)

(assert (=> d!45165 (= c!26881 lt!74527)))

(assert (=> d!45165 (= lt!74527 (containsKey!180 (toList!888 lt!73406) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45165 (= (contains!923 lt!73406 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74529)))

(declare-fun b!142333 () Bool)

(declare-fun lt!74530 () Unit!4373)

(assert (=> b!142333 (= e!92746 lt!74530)))

(assert (=> b!142333 (= lt!74530 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73406) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142333 (isDefined!129 (getValueByKey!176 (toList!888 lt!73406) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142334 () Bool)

(declare-fun Unit!4500 () Unit!4373)

(assert (=> b!142334 (= e!92746 Unit!4500)))

(declare-fun b!142335 () Bool)

(assert (=> b!142335 (= e!92745 (isDefined!129 (getValueByKey!176 (toList!888 lt!73406) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45165 c!26881) b!142333))

(assert (= (and d!45165 (not c!26881)) b!142334))

(assert (= (and d!45165 (not res!67870)) b!142335))

(assert (=> d!45165 m!166385))

(declare-fun m!171331 () Bool)

(assert (=> d!45165 m!171331))

(assert (=> b!142333 m!166385))

(declare-fun m!171333 () Bool)

(assert (=> b!142333 m!171333))

(assert (=> b!142333 m!166385))

(assert (=> b!142333 m!169293))

(assert (=> b!142333 m!169293))

(declare-fun m!171335 () Bool)

(assert (=> b!142333 m!171335))

(assert (=> b!142335 m!166385))

(assert (=> b!142335 m!169293))

(assert (=> b!142335 m!169293))

(assert (=> b!142335 m!171335))

(assert (=> b!140088 d!45165))

(declare-fun b!142339 () Bool)

(declare-fun e!92748 () Option!182)

(assert (=> b!142339 (= e!92748 None!180)))

(declare-fun b!142336 () Bool)

(declare-fun e!92747 () Option!182)

(assert (=> b!142336 (= e!92747 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73285))))))))

(declare-fun b!142337 () Bool)

(assert (=> b!142337 (= e!92747 e!92748)))

(declare-fun c!26883 () Bool)

(assert (=> b!142337 (= c!26883 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73285))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73285)))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun d!45167 () Bool)

(declare-fun c!26882 () Bool)

(assert (=> d!45167 (= c!26882 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73285))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73285)))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!45167 (= (getValueByKey!176 (t!6329 (toList!888 lt!73285)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!92747)))

(declare-fun b!142338 () Bool)

(assert (=> b!142338 (= e!92748 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73285))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45167 c!26882) b!142336))

(assert (= (and d!45167 (not c!26882)) b!142337))

(assert (= (and b!142337 c!26883) b!142338))

(assert (= (and b!142337 (not c!26883)) b!142339))

(declare-fun m!171337 () Bool)

(assert (=> b!142338 m!171337))

(assert (=> b!140281 d!45167))

(declare-fun d!45169 () Bool)

(declare-fun c!26884 () Bool)

(assert (=> d!45169 (= c!26884 ((_ is Nil!1742) (toList!888 lt!73059)))))

(declare-fun e!92749 () (InoxSet tuple2!2698))

(assert (=> d!45169 (= (content!138 (toList!888 lt!73059)) e!92749)))

(declare-fun b!142340 () Bool)

(assert (=> b!142340 (= e!92749 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!142341 () Bool)

(assert (=> b!142341 (= e!92749 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73059)) true) (content!138 (t!6329 (toList!888 lt!73059)))))))

(assert (= (and d!45169 c!26884) b!142340))

(assert (= (and d!45169 (not c!26884)) b!142341))

(declare-fun m!171339 () Bool)

(assert (=> b!142341 m!171339))

(assert (=> b!142341 m!169855))

(assert (=> d!43881 d!45169))

(declare-fun d!45171 () Bool)

(declare-fun lt!74531 () Bool)

(assert (=> d!45171 (= lt!74531 (select (content!138 (t!6329 (toList!888 lt!73019))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92751 () Bool)

(assert (=> d!45171 (= lt!74531 e!92751)))

(declare-fun res!67871 () Bool)

(assert (=> d!45171 (=> (not res!67871) (not e!92751))))

(assert (=> d!45171 (= res!67871 ((_ is Cons!1741) (t!6329 (toList!888 lt!73019))))))

(assert (=> d!45171 (= (contains!925 (t!6329 (toList!888 lt!73019)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74531)))

(declare-fun b!142342 () Bool)

(declare-fun e!92750 () Bool)

(assert (=> b!142342 (= e!92751 e!92750)))

(declare-fun res!67872 () Bool)

(assert (=> b!142342 (=> res!67872 e!92750)))

(assert (=> b!142342 (= res!67872 (= (h!2348 (t!6329 (toList!888 lt!73019))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142343 () Bool)

(assert (=> b!142343 (= e!92750 (contains!925 (t!6329 (t!6329 (toList!888 lt!73019))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45171 res!67871) b!142342))

(assert (= (and b!142342 (not res!67872)) b!142343))

(assert (=> d!45171 m!168761))

(declare-fun m!171341 () Bool)

(assert (=> d!45171 m!171341))

(declare-fun m!171343 () Bool)

(assert (=> b!142343 m!171343))

(assert (=> b!140572 d!45171))

(declare-fun d!45173 () Bool)

(assert (=> d!45173 (= (isEmpty!418 (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!181) (getValueByKey!176 (toList!888 lt!72907) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43531 d!45173))

(declare-fun d!45175 () Bool)

(declare-fun res!67873 () Bool)

(declare-fun e!92752 () Bool)

(assert (=> d!45175 (=> res!67873 e!92752)))

(assert (=> d!45175 (= res!67873 (or ((_ is Nil!1742) lt!73752) ((_ is Nil!1742) (t!6329 lt!73752))))))

(assert (=> d!45175 (= (isStrictlySorted!325 lt!73752) e!92752)))

(declare-fun b!142344 () Bool)

(declare-fun e!92753 () Bool)

(assert (=> b!142344 (= e!92752 e!92753)))

(declare-fun res!67874 () Bool)

(assert (=> b!142344 (=> (not res!67874) (not e!92753))))

(assert (=> b!142344 (= res!67874 (bvslt (_1!1360 (h!2348 lt!73752)) (_1!1360 (h!2348 (t!6329 lt!73752)))))))

(declare-fun b!142345 () Bool)

(assert (=> b!142345 (= e!92753 (isStrictlySorted!325 (t!6329 lt!73752)))))

(assert (= (and d!45175 (not res!67873)) b!142344))

(assert (= (and b!142344 res!67874) b!142345))

(declare-fun m!171345 () Bool)

(assert (=> b!142345 m!171345))

(assert (=> d!43805 d!45175))

(declare-fun d!45177 () Bool)

(declare-fun res!67875 () Bool)

(declare-fun e!92754 () Bool)

(assert (=> d!45177 (=> res!67875 e!92754)))

(assert (=> d!45177 (= res!67875 (or ((_ is Nil!1742) (toList!888 lt!72905)) ((_ is Nil!1742) (t!6329 (toList!888 lt!72905)))))))

(assert (=> d!45177 (= (isStrictlySorted!325 (toList!888 lt!72905)) e!92754)))

(declare-fun b!142346 () Bool)

(declare-fun e!92755 () Bool)

(assert (=> b!142346 (= e!92754 e!92755)))

(declare-fun res!67876 () Bool)

(assert (=> b!142346 (=> (not res!67876) (not e!92755))))

(assert (=> b!142346 (= res!67876 (bvslt (_1!1360 (h!2348 (toList!888 lt!72905))) (_1!1360 (h!2348 (t!6329 (toList!888 lt!72905))))))))

(declare-fun b!142347 () Bool)

(assert (=> b!142347 (= e!92755 (isStrictlySorted!325 (t!6329 (toList!888 lt!72905))))))

(assert (= (and d!45177 (not res!67875)) b!142346))

(assert (= (and b!142346 res!67876) b!142347))

(assert (=> b!142347 m!169207))

(assert (=> d!43805 d!45177))

(declare-fun d!45179 () Bool)

(assert (=> d!45179 (= (apply!120 lt!73824 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73824) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5995 () Bool)

(assert (= bs!5995 d!45179))

(assert (=> bs!5995 m!168827))

(assert (=> bs!5995 m!168827))

(declare-fun m!171347 () Bool)

(assert (=> bs!5995 m!171347))

(assert (=> b!140708 d!45179))

(declare-fun b!142351 () Bool)

(declare-fun e!92757 () Option!182)

(assert (=> b!142351 (= e!92757 None!180)))

(declare-fun b!142348 () Bool)

(declare-fun e!92756 () Option!182)

(assert (=> b!142348 (= e!92756 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73056)))))))

(declare-fun b!142349 () Bool)

(assert (=> b!142349 (= e!92756 e!92757)))

(declare-fun c!26886 () Bool)

(assert (=> b!142349 (= c!26886 (and ((_ is Cons!1741) (t!6329 lt!73056)) (not (= (_1!1360 (h!2348 (t!6329 lt!73056))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!26885 () Bool)

(declare-fun d!45181 () Bool)

(assert (=> d!45181 (= c!26885 (and ((_ is Cons!1741) (t!6329 lt!73056)) (= (_1!1360 (h!2348 (t!6329 lt!73056))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45181 (= (getValueByKey!176 (t!6329 lt!73056) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92756)))

(declare-fun b!142350 () Bool)

(assert (=> b!142350 (= e!92757 (getValueByKey!176 (t!6329 (t!6329 lt!73056)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45181 c!26885) b!142348))

(assert (= (and d!45181 (not c!26885)) b!142349))

(assert (= (and b!142349 c!26886) b!142350))

(assert (= (and b!142349 (not c!26886)) b!142351))

(declare-fun m!171349 () Bool)

(assert (=> b!142350 m!171349))

(assert (=> b!140636 d!45181))

(declare-fun d!45183 () Bool)

(declare-fun e!92758 () Bool)

(assert (=> d!45183 e!92758))

(declare-fun res!67877 () Bool)

(assert (=> d!45183 (=> res!67877 e!92758)))

(declare-fun lt!74534 () Bool)

(assert (=> d!45183 (= res!67877 (not lt!74534))))

(declare-fun lt!74532 () Bool)

(assert (=> d!45183 (= lt!74534 lt!74532)))

(declare-fun lt!74533 () Unit!4373)

(declare-fun e!92759 () Unit!4373)

(assert (=> d!45183 (= lt!74533 e!92759)))

(declare-fun c!26887 () Bool)

(assert (=> d!45183 (= c!26887 lt!74532)))

(assert (=> d!45183 (= lt!74532 (containsKey!180 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (=> d!45183 (= (contains!923 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) lt!74534)))

(declare-fun b!142352 () Bool)

(declare-fun lt!74535 () Unit!4373)

(assert (=> b!142352 (= e!92759 lt!74535)))

(assert (=> b!142352 (= lt!74535 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(assert (=> b!142352 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))))))

(declare-fun b!142353 () Bool)

(declare-fun Unit!4501 () Unit!4373)

(assert (=> b!142353 (= e!92759 Unit!4501)))

(declare-fun b!142354 () Bool)

(assert (=> b!142354 (= e!92758 (isDefined!129 (getValueByKey!176 (toList!888 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))))

(assert (= (and d!45183 c!26887) b!142352))

(assert (= (and d!45183 (not c!26887)) b!142353))

(assert (= (and d!45183 (not res!67877)) b!142354))

(assert (=> d!45183 m!167725))

(declare-fun m!171351 () Bool)

(assert (=> d!45183 m!171351))

(assert (=> b!142352 m!167725))

(declare-fun m!171353 () Bool)

(assert (=> b!142352 m!171353))

(assert (=> b!142352 m!167725))

(declare-fun m!171355 () Bool)

(assert (=> b!142352 m!171355))

(assert (=> b!142352 m!171355))

(declare-fun m!171357 () Bool)

(assert (=> b!142352 m!171357))

(assert (=> b!142354 m!167725))

(assert (=> b!142354 m!171355))

(assert (=> b!142354 m!171355))

(assert (=> b!142354 m!171357))

(assert (=> b!140385 d!45183))

(assert (=> b!140385 d!43715))

(declare-fun b!142355 () Bool)

(declare-fun e!92761 () Bool)

(declare-fun e!92762 () Bool)

(assert (=> b!142355 (= e!92761 e!92762)))

(declare-fun lt!74537 () (_ BitVec 64))

(assert (=> b!142355 (= lt!74537 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74536 () Unit!4373)

(assert (=> b!142355 (= lt!74536 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1361 lt!72992)) lt!74537 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!142355 (arrayContainsKey!0 (_keys!4699 (_2!1361 lt!72992)) lt!74537 #b00000000000000000000000000000000)))

(declare-fun lt!74538 () Unit!4373)

(assert (=> b!142355 (= lt!74538 lt!74536)))

(declare-fun res!67878 () Bool)

(assert (=> b!142355 (= res!67878 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))) (Found!279 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142355 (=> (not res!67878) (not e!92762))))

(declare-fun d!45185 () Bool)

(declare-fun res!67879 () Bool)

(declare-fun e!92760 () Bool)

(assert (=> d!45185 (=> res!67879 e!92760)))

(assert (=> d!45185 (= res!67879 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!45185 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))) e!92760)))

(declare-fun b!142356 () Bool)

(declare-fun call!15756 () Bool)

(assert (=> b!142356 (= e!92762 call!15756)))

(declare-fun bm!15753 () Bool)

(assert (=> bm!15753 (= call!15756 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))))))

(declare-fun b!142357 () Bool)

(assert (=> b!142357 (= e!92760 e!92761)))

(declare-fun c!26888 () Bool)

(assert (=> b!142357 (= c!26888 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142358 () Bool)

(assert (=> b!142358 (= e!92761 call!15756)))

(assert (= (and d!45185 (not res!67879)) b!142357))

(assert (= (and b!142357 c!26888) b!142355))

(assert (= (and b!142357 (not c!26888)) b!142358))

(assert (= (and b!142355 res!67878) b!142356))

(assert (= (or b!142356 b!142358) bm!15753))

(assert (=> b!142355 m!168755))

(declare-fun m!171359 () Bool)

(assert (=> b!142355 m!171359))

(declare-fun m!171361 () Bool)

(assert (=> b!142355 m!171361))

(assert (=> b!142355 m!168755))

(declare-fun m!171363 () Bool)

(assert (=> b!142355 m!171363))

(declare-fun m!171365 () Bool)

(assert (=> bm!15753 m!171365))

(assert (=> b!142357 m!168755))

(assert (=> b!142357 m!168755))

(assert (=> b!142357 m!168757))

(assert (=> bm!15634 d!45185))

(declare-fun b!142359 () Bool)

(declare-fun e!92764 () SeekEntryResult!279)

(assert (=> b!142359 (= e!92764 (MissingVacant!279 (index!3281 lt!73743)))))

(declare-fun b!142361 () Bool)

(declare-fun e!92765 () SeekEntryResult!279)

(assert (=> b!142361 (= e!92765 (Found!279 (index!3281 lt!73743)))))

(declare-fun b!142362 () Bool)

(assert (=> b!142362 (= e!92764 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16136 lt!73743) #b00000000000000000000000000000001) (nextIndex!0 (index!3281 lt!73743) (x!16136 lt!73743) (mask!7280 newMap!16)) (index!3281 lt!73743) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!142363 () Bool)

(declare-fun e!92763 () SeekEntryResult!279)

(assert (=> b!142363 (= e!92763 e!92765)))

(declare-fun c!26889 () Bool)

(declare-fun lt!74540 () (_ BitVec 64))

(assert (=> b!142363 (= c!26889 (= lt!74540 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142364 () Bool)

(assert (=> b!142364 (= e!92763 Undefined!279)))

(declare-fun b!142360 () Bool)

(declare-fun c!26891 () Bool)

(assert (=> b!142360 (= c!26891 (= lt!74540 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142360 (= e!92765 e!92764)))

(declare-fun d!45187 () Bool)

(declare-fun lt!74539 () SeekEntryResult!279)

(assert (=> d!45187 (and (or ((_ is Undefined!279) lt!74539) (not ((_ is Found!279) lt!74539)) (and (bvsge (index!3280 lt!74539) #b00000000000000000000000000000000) (bvslt (index!3280 lt!74539) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74539) ((_ is Found!279) lt!74539) (not ((_ is MissingVacant!279) lt!74539)) (not (= (index!3282 lt!74539) (index!3281 lt!73743))) (and (bvsge (index!3282 lt!74539) #b00000000000000000000000000000000) (bvslt (index!3282 lt!74539) (size!2587 (_keys!4699 newMap!16))))) (or ((_ is Undefined!279) lt!74539) (ite ((_ is Found!279) lt!74539) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!74539)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!279) lt!74539) (= (index!3282 lt!74539) (index!3281 lt!73743)) (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3282 lt!74539)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!45187 (= lt!74539 e!92763)))

(declare-fun c!26890 () Bool)

(assert (=> d!45187 (= c!26890 (bvsge (x!16136 lt!73743) #b01111111111111111111111111111110))))

(assert (=> d!45187 (= lt!74540 (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!73743)))))

(assert (=> d!45187 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45187 (= (seekKeyOrZeroReturnVacant!0 (x!16136 lt!73743) (index!3281 lt!73743) (index!3281 lt!73743) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74539)))

(assert (= (and d!45187 c!26890) b!142364))

(assert (= (and d!45187 (not c!26890)) b!142363))

(assert (= (and b!142363 c!26889) b!142361))

(assert (= (and b!142363 (not c!26889)) b!142360))

(assert (= (and b!142360 c!26891) b!142359))

(assert (= (and b!142360 (not c!26891)) b!142362))

(declare-fun m!171367 () Bool)

(assert (=> b!142362 m!171367))

(assert (=> b!142362 m!171367))

(assert (=> b!142362 m!166385))

(declare-fun m!171369 () Bool)

(assert (=> b!142362 m!171369))

(declare-fun m!171371 () Bool)

(assert (=> d!45187 m!171371))

(declare-fun m!171373 () Bool)

(assert (=> d!45187 m!171373))

(assert (=> d!45187 m!168121))

(assert (=> d!45187 m!166429))

(assert (=> b!140606 d!45187))

(assert (=> d!43821 d!43815))

(declare-fun d!45189 () Bool)

(assert (=> d!45189 (= (apply!120 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) lt!73287) (apply!120 lt!73286 lt!73287))))

(assert (=> d!45189 true))

(declare-fun _$34!1011 () Unit!4373)

(assert (=> d!45189 (= (choose!856 lt!73286 lt!73290 (zeroValue!2790 newMap!16) lt!73287) _$34!1011)))

(declare-fun bs!5996 () Bool)

(assert (= bs!5996 d!45189))

(assert (=> bs!5996 m!166749))

(assert (=> bs!5996 m!166749))

(assert (=> bs!5996 m!166751))

(assert (=> bs!5996 m!166761))

(assert (=> d!43821 d!45189))

(assert (=> d!43821 d!43835))

(assert (=> d!43821 d!43843))

(declare-fun d!45191 () Bool)

(declare-fun e!92766 () Bool)

(assert (=> d!45191 e!92766))

(declare-fun res!67880 () Bool)

(assert (=> d!45191 (=> res!67880 e!92766)))

(declare-fun lt!74543 () Bool)

(assert (=> d!45191 (= res!67880 (not lt!74543))))

(declare-fun lt!74541 () Bool)

(assert (=> d!45191 (= lt!74543 lt!74541)))

(declare-fun lt!74542 () Unit!4373)

(declare-fun e!92767 () Unit!4373)

(assert (=> d!45191 (= lt!74542 e!92767)))

(declare-fun c!26892 () Bool)

(assert (=> d!45191 (= c!26892 lt!74541)))

(assert (=> d!45191 (= lt!74541 (containsKey!180 (toList!888 lt!73286) lt!73287))))

(assert (=> d!45191 (= (contains!923 lt!73286 lt!73287) lt!74543)))

(declare-fun b!142365 () Bool)

(declare-fun lt!74544 () Unit!4373)

(assert (=> b!142365 (= e!92767 lt!74544)))

(assert (=> b!142365 (= lt!74544 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73286) lt!73287))))

(assert (=> b!142365 (isDefined!129 (getValueByKey!176 (toList!888 lt!73286) lt!73287))))

(declare-fun b!142366 () Bool)

(declare-fun Unit!4502 () Unit!4373)

(assert (=> b!142366 (= e!92767 Unit!4502)))

(declare-fun b!142367 () Bool)

(assert (=> b!142367 (= e!92766 (isDefined!129 (getValueByKey!176 (toList!888 lt!73286) lt!73287)))))

(assert (= (and d!45191 c!26892) b!142365))

(assert (= (and d!45191 (not c!26892)) b!142366))

(assert (= (and d!45191 (not res!67880)) b!142367))

(declare-fun m!171375 () Bool)

(assert (=> d!45191 m!171375))

(declare-fun m!171377 () Bool)

(assert (=> b!142365 m!171377))

(assert (=> b!142365 m!168187))

(assert (=> b!142365 m!168187))

(declare-fun m!171379 () Bool)

(assert (=> b!142365 m!171379))

(assert (=> b!142367 m!168187))

(assert (=> b!142367 m!168187))

(assert (=> b!142367 m!171379))

(assert (=> d!43821 d!45191))

(declare-fun d!45193 () Bool)

(declare-fun res!67881 () Bool)

(declare-fun e!92768 () Bool)

(assert (=> d!45193 (=> res!67881 e!92768)))

(assert (=> d!45193 (= res!67881 (and ((_ is Cons!1741) (toList!888 lt!73125)) (= (_1!1360 (h!2348 (toList!888 lt!73125))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45193 (= (containsKey!180 (toList!888 lt!73125) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92768)))

(declare-fun b!142368 () Bool)

(declare-fun e!92769 () Bool)

(assert (=> b!142368 (= e!92768 e!92769)))

(declare-fun res!67882 () Bool)

(assert (=> b!142368 (=> (not res!67882) (not e!92769))))

(assert (=> b!142368 (= res!67882 (and (or (not ((_ is Cons!1741) (toList!888 lt!73125))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73125))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1741) (toList!888 lt!73125)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73125))) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142369 () Bool)

(assert (=> b!142369 (= e!92769 (containsKey!180 (t!6329 (toList!888 lt!73125)) (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45193 (not res!67881)) b!142368))

(assert (= (and b!142368 res!67882) b!142369))

(declare-fun m!171381 () Bool)

(assert (=> b!142369 m!171381))

(assert (=> d!43451 d!45193))

(declare-fun d!45195 () Bool)

(declare-fun res!67883 () Bool)

(declare-fun e!92770 () Bool)

(assert (=> d!45195 (=> res!67883 e!92770)))

(assert (=> d!45195 (= res!67883 (and ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (= (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72903)))))

(assert (=> d!45195 (= (containsKey!180 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!72903) e!92770)))

(declare-fun b!142370 () Bool)

(declare-fun e!92771 () Bool)

(assert (=> b!142370 (= e!92770 e!92771)))

(declare-fun res!67884 () Bool)

(assert (=> b!142370 (=> (not res!67884) (not e!92771))))

(assert (=> b!142370 (= res!67884 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72903)) ((_ is Cons!1741) (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))) lt!72903)))))

(declare-fun b!142371 () Bool)

(assert (=> b!142371 (= e!92771 (containsKey!180 (t!6329 (t!6329 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) lt!72903))))

(assert (= (and d!45195 (not res!67883)) b!142370))

(assert (= (and b!142370 res!67884) b!142371))

(declare-fun m!171383 () Bool)

(assert (=> b!142371 m!171383))

(assert (=> b!140105 d!45195))

(declare-fun b!142375 () Bool)

(declare-fun e!92773 () Option!182)

(assert (=> b!142375 (= e!92773 None!180)))

(declare-fun b!142372 () Bool)

(declare-fun e!92772 () Option!182)

(assert (=> b!142372 (= e!92772 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73523)))))))

(declare-fun b!142373 () Bool)

(assert (=> b!142373 (= e!92772 e!92773)))

(declare-fun c!26894 () Bool)

(assert (=> b!142373 (= c!26894 (and ((_ is Cons!1741) (toList!888 lt!73523)) (not (= (_1!1360 (h!2348 (toList!888 lt!73523))) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))))

(declare-fun d!45197 () Bool)

(declare-fun c!26893 () Bool)

(assert (=> d!45197 (= c!26893 (and ((_ is Cons!1741) (toList!888 lt!73523)) (= (_1!1360 (h!2348 (toList!888 lt!73523))) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45197 (= (getValueByKey!176 (toList!888 lt!73523) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) e!92772)))

(declare-fun b!142374 () Bool)

(assert (=> b!142374 (= e!92773 (getValueByKey!176 (t!6329 (toList!888 lt!73523)) (_1!1360 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45197 c!26893) b!142372))

(assert (= (and d!45197 (not c!26893)) b!142373))

(assert (= (and b!142373 c!26894) b!142374))

(assert (= (and b!142373 (not c!26894)) b!142375))

(declare-fun m!171385 () Bool)

(assert (=> b!142374 m!171385))

(assert (=> b!140265 d!45197))

(declare-fun d!45199 () Bool)

(declare-fun e!92774 () Bool)

(assert (=> d!45199 e!92774))

(declare-fun res!67885 () Bool)

(assert (=> d!45199 (=> res!67885 e!92774)))

(declare-fun lt!74547 () Bool)

(assert (=> d!45199 (= res!67885 (not lt!74547))))

(declare-fun lt!74545 () Bool)

(assert (=> d!45199 (= lt!74547 lt!74545)))

(declare-fun lt!74546 () Unit!4373)

(declare-fun e!92775 () Unit!4373)

(assert (=> d!45199 (= lt!74546 e!92775)))

(declare-fun c!26895 () Bool)

(assert (=> d!45199 (= c!26895 lt!74545)))

(assert (=> d!45199 (= lt!74545 (containsKey!180 (toList!888 lt!73769) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!45199 (= (contains!923 lt!73769 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74547)))

(declare-fun b!142376 () Bool)

(declare-fun lt!74548 () Unit!4373)

(assert (=> b!142376 (= e!92775 lt!74548)))

(assert (=> b!142376 (= lt!74548 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73769) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> b!142376 (isDefined!129 (getValueByKey!176 (toList!888 lt!73769) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142377 () Bool)

(declare-fun Unit!4503 () Unit!4373)

(assert (=> b!142377 (= e!92775 Unit!4503)))

(declare-fun b!142378 () Bool)

(assert (=> b!142378 (= e!92774 (isDefined!129 (getValueByKey!176 (toList!888 lt!73769) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!45199 c!26895) b!142376))

(assert (= (and d!45199 (not c!26895)) b!142377))

(assert (= (and d!45199 (not res!67885)) b!142378))

(declare-fun m!171387 () Bool)

(assert (=> d!45199 m!171387))

(declare-fun m!171389 () Bool)

(assert (=> b!142376 m!171389))

(assert (=> b!142376 m!168239))

(assert (=> b!142376 m!168239))

(declare-fun m!171391 () Bool)

(assert (=> b!142376 m!171391))

(assert (=> b!142378 m!168239))

(assert (=> b!142378 m!168239))

(assert (=> b!142378 m!171391))

(assert (=> d!43833 d!45199))

(declare-fun b!142382 () Bool)

(declare-fun e!92777 () Option!182)

(assert (=> b!142382 (= e!92777 None!180)))

(declare-fun b!142379 () Bool)

(declare-fun e!92776 () Option!182)

(assert (=> b!142379 (= e!92776 (Some!181 (_2!1360 (h!2348 lt!73766))))))

(declare-fun b!142380 () Bool)

(assert (=> b!142380 (= e!92776 e!92777)))

(declare-fun c!26897 () Bool)

(assert (=> b!142380 (= c!26897 (and ((_ is Cons!1741) lt!73766) (not (= (_1!1360 (h!2348 lt!73766)) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26896 () Bool)

(declare-fun d!45201 () Bool)

(assert (=> d!45201 (= c!26896 (and ((_ is Cons!1741) lt!73766) (= (_1!1360 (h!2348 lt!73766)) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45201 (= (getValueByKey!176 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92776)))

(declare-fun b!142381 () Bool)

(assert (=> b!142381 (= e!92777 (getValueByKey!176 (t!6329 lt!73766) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!45201 c!26896) b!142379))

(assert (= (and d!45201 (not c!26896)) b!142380))

(assert (= (and b!142380 c!26897) b!142381))

(assert (= (and b!142380 (not c!26897)) b!142382))

(declare-fun m!171393 () Bool)

(assert (=> b!142381 m!171393))

(assert (=> d!43833 d!45201))

(declare-fun d!45203 () Bool)

(assert (=> d!45203 (= (getValueByKey!176 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74549 () Unit!4373)

(assert (=> d!45203 (= lt!74549 (choose!865 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92778 () Bool)

(assert (=> d!45203 e!92778))

(declare-fun res!67886 () Bool)

(assert (=> d!45203 (=> (not res!67886) (not e!92778))))

(assert (=> d!45203 (= res!67886 (isStrictlySorted!325 lt!73766))))

(assert (=> d!45203 (= (lemmaContainsTupThenGetReturnValue!90 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74549)))

(declare-fun b!142383 () Bool)

(declare-fun res!67887 () Bool)

(assert (=> b!142383 (=> (not res!67887) (not e!92778))))

(assert (=> b!142383 (= res!67887 (containsKey!180 lt!73766 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142384 () Bool)

(assert (=> b!142384 (= e!92778 (contains!925 lt!73766 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!45203 res!67886) b!142383))

(assert (= (and b!142383 res!67887) b!142384))

(assert (=> d!45203 m!168233))

(declare-fun m!171395 () Bool)

(assert (=> d!45203 m!171395))

(declare-fun m!171397 () Bool)

(assert (=> d!45203 m!171397))

(declare-fun m!171399 () Bool)

(assert (=> b!142383 m!171399))

(declare-fun m!171401 () Bool)

(assert (=> b!142384 m!171401))

(assert (=> d!43833 d!45203))

(declare-fun b!142385 () Bool)

(declare-fun e!92779 () List!1745)

(declare-fun call!15759 () List!1745)

(assert (=> b!142385 (= e!92779 call!15759)))

(declare-fun bm!15754 () Bool)

(declare-fun call!15757 () List!1745)

(assert (=> bm!15754 (= call!15759 call!15757)))

(declare-fun d!45205 () Bool)

(declare-fun e!92783 () Bool)

(assert (=> d!45205 e!92783))

(declare-fun res!67888 () Bool)

(assert (=> d!45205 (=> (not res!67888) (not e!92783))))

(declare-fun lt!74550 () List!1745)

(assert (=> d!45205 (= res!67888 (isStrictlySorted!325 lt!74550))))

(declare-fun e!92780 () List!1745)

(assert (=> d!45205 (= lt!74550 e!92780)))

(declare-fun c!26900 () Bool)

(assert (=> d!45205 (= c!26900 (and ((_ is Cons!1741) (toList!888 lt!73304)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73304))) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45205 (isStrictlySorted!325 (toList!888 lt!73304))))

(assert (=> d!45205 (= (insertStrictlySorted!93 (toList!888 lt!73304) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74550)))

(declare-fun bm!15755 () Bool)

(declare-fun call!15758 () List!1745)

(assert (=> bm!15755 (= call!15757 call!15758)))

(declare-fun b!142386 () Bool)

(declare-fun e!92781 () List!1745)

(assert (=> b!142386 (= e!92780 e!92781)))

(declare-fun c!26899 () Bool)

(assert (=> b!142386 (= c!26899 (and ((_ is Cons!1741) (toList!888 lt!73304)) (= (_1!1360 (h!2348 (toList!888 lt!73304))) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142387 () Bool)

(assert (=> b!142387 (= e!92780 call!15758)))

(declare-fun bm!15756 () Bool)

(declare-fun e!92782 () List!1745)

(assert (=> bm!15756 (= call!15758 ($colon$colon!94 e!92782 (ite c!26900 (h!2348 (toList!888 lt!73304)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26898 () Bool)

(assert (=> bm!15756 (= c!26898 c!26900)))

(declare-fun b!142388 () Bool)

(declare-fun c!26901 () Bool)

(assert (=> b!142388 (= e!92782 (ite c!26899 (t!6329 (toList!888 lt!73304)) (ite c!26901 (Cons!1741 (h!2348 (toList!888 lt!73304)) (t!6329 (toList!888 lt!73304))) Nil!1742)))))

(declare-fun b!142389 () Bool)

(assert (=> b!142389 (= e!92781 call!15757)))

(declare-fun b!142390 () Bool)

(assert (=> b!142390 (= e!92783 (contains!925 lt!74550 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142391 () Bool)

(assert (=> b!142391 (= e!92782 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73304)) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142392 () Bool)

(assert (=> b!142392 (= e!92779 call!15759)))

(declare-fun b!142393 () Bool)

(assert (=> b!142393 (= c!26901 (and ((_ is Cons!1741) (toList!888 lt!73304)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73304))) (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!142393 (= e!92781 e!92779)))

(declare-fun b!142394 () Bool)

(declare-fun res!67889 () Bool)

(assert (=> b!142394 (=> (not res!67889) (not e!92783))))

(assert (=> b!142394 (= res!67889 (containsKey!180 lt!74550 (_1!1360 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!45205 c!26900) b!142387))

(assert (= (and d!45205 (not c!26900)) b!142386))

(assert (= (and b!142386 c!26899) b!142389))

(assert (= (and b!142386 (not c!26899)) b!142393))

(assert (= (and b!142393 c!26901) b!142392))

(assert (= (and b!142393 (not c!26901)) b!142385))

(assert (= (or b!142392 b!142385) bm!15754))

(assert (= (or b!142389 bm!15754) bm!15755))

(assert (= (or b!142387 bm!15755) bm!15756))

(assert (= (and bm!15756 c!26898) b!142391))

(assert (= (and bm!15756 (not c!26898)) b!142388))

(assert (= (and d!45205 res!67888) b!142394))

(assert (= (and b!142394 res!67889) b!142390))

(declare-fun m!171403 () Bool)

(assert (=> b!142391 m!171403))

(declare-fun m!171405 () Bool)

(assert (=> d!45205 m!171405))

(declare-fun m!171407 () Bool)

(assert (=> d!45205 m!171407))

(declare-fun m!171409 () Bool)

(assert (=> b!142394 m!171409))

(declare-fun m!171411 () Bool)

(assert (=> bm!15756 m!171411))

(declare-fun m!171413 () Bool)

(assert (=> b!142390 m!171413))

(assert (=> d!43833 d!45205))

(assert (=> d!43663 d!43665))

(assert (=> d!43663 d!43667))

(declare-fun d!45207 () Bool)

(assert (=> d!45207 (isDefined!129 (getValueByKey!176 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!45207 true))

(declare-fun _$12!418 () Unit!4373)

(assert (=> d!45207 (= (choose!864 (toList!888 call!15479) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) _$12!418)))

(declare-fun bs!5997 () Bool)

(assert (= bs!5997 d!45207))

(assert (=> bs!5997 m!166013))

(assert (=> bs!5997 m!166599))

(assert (=> bs!5997 m!166599))

(assert (=> bs!5997 m!166601))

(assert (=> d!43663 d!45207))

(declare-fun d!45209 () Bool)

(declare-fun res!67890 () Bool)

(declare-fun e!92784 () Bool)

(assert (=> d!45209 (=> res!67890 e!92784)))

(assert (=> d!45209 (= res!67890 (or ((_ is Nil!1742) (toList!888 call!15479)) ((_ is Nil!1742) (t!6329 (toList!888 call!15479)))))))

(assert (=> d!45209 (= (isStrictlySorted!325 (toList!888 call!15479)) e!92784)))

(declare-fun b!142395 () Bool)

(declare-fun e!92785 () Bool)

(assert (=> b!142395 (= e!92784 e!92785)))

(declare-fun res!67891 () Bool)

(assert (=> b!142395 (=> (not res!67891) (not e!92785))))

(assert (=> b!142395 (= res!67891 (bvslt (_1!1360 (h!2348 (toList!888 call!15479))) (_1!1360 (h!2348 (t!6329 (toList!888 call!15479))))))))

(declare-fun b!142396 () Bool)

(assert (=> b!142396 (= e!92785 (isStrictlySorted!325 (t!6329 (toList!888 call!15479))))))

(assert (= (and d!45209 (not res!67890)) b!142395))

(assert (= (and b!142395 res!67891) b!142396))

(declare-fun m!171415 () Bool)

(assert (=> b!142396 m!171415))

(assert (=> d!43663 d!45209))

(declare-fun d!45211 () Bool)

(assert (=> d!45211 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun bs!5998 () Bool)

(assert (= bs!5998 d!45211))

(assert (=> bs!5998 m!166735))

(declare-fun m!171417 () Bool)

(assert (=> bs!5998 m!171417))

(assert (=> b!140349 d!45211))

(assert (=> b!140349 d!43641))

(declare-fun lt!74551 () Bool)

(declare-fun d!45213 () Bool)

(assert (=> d!45213 (= lt!74551 (select (content!138 (toList!888 lt!73459)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92787 () Bool)

(assert (=> d!45213 (= lt!74551 e!92787)))

(declare-fun res!67892 () Bool)

(assert (=> d!45213 (=> (not res!67892) (not e!92787))))

(assert (=> d!45213 (= res!67892 ((_ is Cons!1741) (toList!888 lt!73459)))))

(assert (=> d!45213 (= (contains!925 (toList!888 lt!73459) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74551)))

(declare-fun b!142397 () Bool)

(declare-fun e!92786 () Bool)

(assert (=> b!142397 (= e!92787 e!92786)))

(declare-fun res!67893 () Bool)

(assert (=> b!142397 (=> res!67893 e!92786)))

(assert (=> b!142397 (= res!67893 (= (h!2348 (toList!888 lt!73459)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142398 () Bool)

(assert (=> b!142398 (= e!92786 (contains!925 (t!6329 (toList!888 lt!73459)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45213 res!67892) b!142397))

(assert (= (and b!142397 (not res!67893)) b!142398))

(declare-fun m!171419 () Bool)

(assert (=> d!45213 m!171419))

(declare-fun m!171421 () Bool)

(assert (=> d!45213 m!171421))

(declare-fun m!171423 () Bool)

(assert (=> b!142398 m!171423))

(assert (=> b!140202 d!45213))

(declare-fun d!45215 () Bool)

(declare-fun lt!74552 () Bool)

(assert (=> d!45215 (= lt!74552 (select (content!138 (toList!888 lt!73803)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92789 () Bool)

(assert (=> d!45215 (= lt!74552 e!92789)))

(declare-fun res!67894 () Bool)

(assert (=> d!45215 (=> (not res!67894) (not e!92789))))

(assert (=> d!45215 (= res!67894 ((_ is Cons!1741) (toList!888 lt!73803)))))

(assert (=> d!45215 (= (contains!925 (toList!888 lt!73803) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74552)))

(declare-fun b!142399 () Bool)

(declare-fun e!92788 () Bool)

(assert (=> b!142399 (= e!92789 e!92788)))

(declare-fun res!67895 () Bool)

(assert (=> b!142399 (=> res!67895 e!92788)))

(assert (=> b!142399 (= res!67895 (= (h!2348 (toList!888 lt!73803)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142400 () Bool)

(assert (=> b!142400 (= e!92788 (contains!925 (t!6329 (toList!888 lt!73803)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45215 res!67894) b!142399))

(assert (= (and b!142399 (not res!67895)) b!142400))

(declare-fun m!171425 () Bool)

(assert (=> d!45215 m!171425))

(declare-fun m!171427 () Bool)

(assert (=> d!45215 m!171427))

(declare-fun m!171429 () Bool)

(assert (=> b!142400 m!171429))

(assert (=> b!140697 d!45215))

(assert (=> d!43803 d!43801))

(declare-fun d!45217 () Bool)

(assert (=> d!45217 (= (getValueByKey!176 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!45217 true))

(declare-fun _$22!499 () Unit!4373)

(assert (=> d!45217 (= (choose!865 lt!73028 (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) _$22!499)))

(declare-fun bs!5999 () Bool)

(assert (= bs!5999 d!45217))

(assert (=> bs!5999 m!166287))

(assert (=> d!43803 d!45217))

(declare-fun d!45219 () Bool)

(declare-fun res!67896 () Bool)

(declare-fun e!92790 () Bool)

(assert (=> d!45219 (=> res!67896 e!92790)))

(assert (=> d!45219 (= res!67896 (or ((_ is Nil!1742) lt!73028) ((_ is Nil!1742) (t!6329 lt!73028))))))

(assert (=> d!45219 (= (isStrictlySorted!325 lt!73028) e!92790)))

(declare-fun b!142401 () Bool)

(declare-fun e!92791 () Bool)

(assert (=> b!142401 (= e!92790 e!92791)))

(declare-fun res!67897 () Bool)

(assert (=> b!142401 (=> (not res!67897) (not e!92791))))

(assert (=> b!142401 (= res!67897 (bvslt (_1!1360 (h!2348 lt!73028)) (_1!1360 (h!2348 (t!6329 lt!73028)))))))

(declare-fun b!142402 () Bool)

(assert (=> b!142402 (= e!92791 (isStrictlySorted!325 (t!6329 lt!73028)))))

(assert (= (and d!45219 (not res!67896)) b!142401))

(assert (= (and b!142401 res!67897) b!142402))

(declare-fun m!171431 () Bool)

(assert (=> b!142402 m!171431))

(assert (=> d!43803 d!45219))

(declare-fun d!45221 () Bool)

(assert (=> d!45221 (= (get!1531 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3284 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43971 d!45221))

(declare-fun b!142406 () Bool)

(declare-fun e!92793 () Option!182)

(assert (=> b!142406 (= e!92793 None!180)))

(declare-fun b!142403 () Bool)

(declare-fun e!92792 () Option!182)

(assert (=> b!142403 (= e!92792 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73158)))))))

(declare-fun b!142404 () Bool)

(assert (=> b!142404 (= e!92792 e!92793)))

(declare-fun c!26903 () Bool)

(assert (=> b!142404 (= c!26903 (and ((_ is Cons!1741) (toList!888 lt!73158)) (not (= (_1!1360 (h!2348 (toList!888 lt!73158))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!45223 () Bool)

(declare-fun c!26902 () Bool)

(assert (=> d!45223 (= c!26902 (and ((_ is Cons!1741) (toList!888 lt!73158)) (= (_1!1360 (h!2348 (toList!888 lt!73158))) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45223 (= (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92792)))

(declare-fun b!142405 () Bool)

(assert (=> b!142405 (= e!92793 (getValueByKey!176 (t!6329 (toList!888 lt!73158)) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45223 c!26902) b!142403))

(assert (= (and d!45223 (not c!26902)) b!142404))

(assert (= (and b!142404 c!26903) b!142405))

(assert (= (and b!142404 (not c!26903)) b!142406))

(assert (=> b!142405 m!166385))

(declare-fun m!171433 () Bool)

(assert (=> b!142405 m!171433))

(assert (=> d!43971 d!45223))

(declare-fun d!45225 () Bool)

(assert (=> d!45225 (isDefined!129 (getValueByKey!176 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!74553 () Unit!4373)

(assert (=> d!45225 (= lt!74553 (choose!864 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!92794 () Bool)

(assert (=> d!45225 e!92794))

(declare-fun res!67898 () Bool)

(assert (=> d!45225 (=> (not res!67898) (not e!92794))))

(assert (=> d!45225 (= res!67898 (isStrictlySorted!325 (toList!888 lt!73059)))))

(assert (=> d!45225 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74553)))

(declare-fun b!142407 () Bool)

(assert (=> b!142407 (= e!92794 (containsKey!180 (toList!888 lt!73059) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45225 res!67898) b!142407))

(assert (=> d!45225 m!166337))

(assert (=> d!45225 m!166337))

(assert (=> d!45225 m!168163))

(declare-fun m!171435 () Bool)

(assert (=> d!45225 m!171435))

(declare-fun m!171437 () Bool)

(assert (=> d!45225 m!171437))

(assert (=> b!142407 m!168159))

(assert (=> b!140631 d!45225))

(assert (=> b!140631 d!45015))

(assert (=> b!140631 d!43739))

(declare-fun d!45227 () Bool)

(assert (=> d!45227 (isDefined!129 (getValueByKey!176 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun lt!74554 () Unit!4373)

(assert (=> d!45227 (= lt!74554 (choose!864 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(declare-fun e!92795 () Bool)

(assert (=> d!45227 e!92795))

(declare-fun res!67899 () Bool)

(assert (=> d!45227 (=> (not res!67899) (not e!92795))))

(assert (=> d!45227 (= res!67899 (isStrictlySorted!325 (toList!888 (map!1442 (_2!1361 lt!73257)))))))

(assert (=> d!45227 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) lt!74554)))

(declare-fun b!142408 () Bool)

(assert (=> b!142408 (= e!92795 (containsKey!180 (toList!888 (map!1442 (_2!1361 lt!73257))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!45227 res!67899) b!142408))

(assert (=> d!45227 m!166013))

(assert (=> d!45227 m!166895))

(assert (=> d!45227 m!166895))

(assert (=> d!45227 m!166897))

(assert (=> d!45227 m!166013))

(declare-fun m!171439 () Bool)

(assert (=> d!45227 m!171439))

(declare-fun m!171441 () Bool)

(assert (=> d!45227 m!171441))

(assert (=> b!142408 m!166013))

(assert (=> b!142408 m!166891))

(assert (=> b!140005 d!45227))

(assert (=> b!140005 d!44999))

(assert (=> b!140005 d!45001))

(assert (=> b!140242 d!45097))

(declare-fun d!45229 () Bool)

(declare-fun res!67900 () Bool)

(declare-fun e!92796 () Bool)

(assert (=> d!45229 (=> res!67900 e!92796)))

(assert (=> d!45229 (= res!67900 (and ((_ is Cons!1741) (toList!888 lt!73332)) (= (_1!1360 (h!2348 (toList!888 lt!73332))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45229 (= (containsKey!180 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000) e!92796)))

(declare-fun b!142409 () Bool)

(declare-fun e!92797 () Bool)

(assert (=> b!142409 (= e!92796 e!92797)))

(declare-fun res!67901 () Bool)

(assert (=> b!142409 (=> (not res!67901) (not e!92797))))

(assert (=> b!142409 (= res!67901 (and (or (not ((_ is Cons!1741) (toList!888 lt!73332))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73332))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73332)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73332))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142410 () Bool)

(assert (=> b!142410 (= e!92797 (containsKey!180 (t!6329 (toList!888 lt!73332)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45229 (not res!67900)) b!142409))

(assert (= (and b!142409 res!67901) b!142410))

(declare-fun m!171443 () Bool)

(assert (=> b!142410 m!171443))

(assert (=> d!43657 d!45229))

(assert (=> d!43707 d!43701))

(declare-fun d!45231 () Bool)

(assert (=> d!45231 (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!45231 true))

(declare-fun _$60!370 () Unit!4373)

(assert (=> d!45231 (= (choose!13 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) _$60!370)))

(declare-fun bs!6000 () Bool)

(assert (= bs!6000 d!45231))

(assert (=> bs!6000 m!166013))

(assert (=> bs!6000 m!166663))

(assert (=> d!43707 d!45231))

(declare-fun d!45233 () Bool)

(declare-fun res!67902 () Bool)

(declare-fun e!92798 () Bool)

(assert (=> d!45233 (=> res!67902 e!92798)))

(assert (=> d!45233 (= res!67902 (and ((_ is Cons!1741) lt!73020) (= (_1!1360 (h!2348 lt!73020)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45233 (= (containsKey!180 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92798)))

(declare-fun b!142411 () Bool)

(declare-fun e!92799 () Bool)

(assert (=> b!142411 (= e!92798 e!92799)))

(declare-fun res!67903 () Bool)

(assert (=> b!142411 (=> (not res!67903) (not e!92799))))

(assert (=> b!142411 (= res!67903 (and (or (not ((_ is Cons!1741) lt!73020)) (bvsle (_1!1360 (h!2348 lt!73020)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73020) (bvslt (_1!1360 (h!2348 lt!73020)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142412 () Bool)

(assert (=> b!142412 (= e!92799 (containsKey!180 (t!6329 lt!73020) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45233 (not res!67902)) b!142411))

(assert (= (and b!142411 res!67903) b!142412))

(declare-fun m!171445 () Bool)

(assert (=> b!142412 m!171445))

(assert (=> b!140769 d!45233))

(declare-fun d!45235 () Bool)

(assert (=> d!45235 (= (apply!120 lt!73378 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73378) (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))))

(declare-fun bs!6001 () Bool)

(assert (= bs!6001 d!45235))

(assert (=> bs!6001 m!166951))

(declare-fun m!171447 () Bool)

(assert (=> bs!6001 m!171447))

(assert (=> bs!6001 m!171447))

(declare-fun m!171449 () Bool)

(assert (=> bs!6001 m!171449))

(assert (=> b!140031 d!45235))

(declare-fun d!45237 () Bool)

(declare-fun c!26904 () Bool)

(assert (=> d!45237 (= c!26904 ((_ is ValueCellFull!1122) (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(declare-fun e!92800 () V!3555)

(assert (=> d!45237 (= (get!1528 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92800)))

(declare-fun b!142413 () Bool)

(assert (=> b!142413 (= e!92800 (get!1529 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142414 () Bool)

(assert (=> b!142414 (= e!92800 (get!1530 (select (arr!2316 (_values!2923 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45237 c!26904) b!142413))

(assert (= (and d!45237 (not c!26904)) b!142414))

(assert (=> b!142413 m!166981))

(assert (=> b!142413 m!166983))

(declare-fun m!171451 () Bool)

(assert (=> b!142413 m!171451))

(assert (=> b!142414 m!166981))

(assert (=> b!142414 m!166983))

(declare-fun m!171453 () Bool)

(assert (=> b!142414 m!171453))

(assert (=> b!140031 d!45237))

(assert (=> b!140346 d!45005))

(assert (=> d!43911 d!43909))

(declare-fun d!45239 () Bool)

(assert (=> d!45239 (= (apply!120 (+!179 lt!73075 (tuple2!2699 lt!73076 (minValue!2790 newMap!16))) lt!73080) (apply!120 lt!73075 lt!73080))))

(assert (=> d!45239 true))

(declare-fun _$34!1012 () Unit!4373)

(assert (=> d!45239 (= (choose!856 lt!73075 lt!73076 (minValue!2790 newMap!16) lt!73080) _$34!1012)))

(declare-fun bs!6002 () Bool)

(assert (= bs!6002 d!45239))

(assert (=> bs!6002 m!166411))

(assert (=> bs!6002 m!166411))

(assert (=> bs!6002 m!166413))

(assert (=> bs!6002 m!166423))

(assert (=> d!43911 d!45239))

(declare-fun d!45241 () Bool)

(declare-fun e!92801 () Bool)

(assert (=> d!45241 e!92801))

(declare-fun res!67904 () Bool)

(assert (=> d!45241 (=> res!67904 e!92801)))

(declare-fun lt!74557 () Bool)

(assert (=> d!45241 (= res!67904 (not lt!74557))))

(declare-fun lt!74555 () Bool)

(assert (=> d!45241 (= lt!74557 lt!74555)))

(declare-fun lt!74556 () Unit!4373)

(declare-fun e!92802 () Unit!4373)

(assert (=> d!45241 (= lt!74556 e!92802)))

(declare-fun c!26905 () Bool)

(assert (=> d!45241 (= c!26905 lt!74555)))

(assert (=> d!45241 (= lt!74555 (containsKey!180 (toList!888 lt!73075) lt!73080))))

(assert (=> d!45241 (= (contains!923 lt!73075 lt!73080) lt!74557)))

(declare-fun b!142415 () Bool)

(declare-fun lt!74558 () Unit!4373)

(assert (=> b!142415 (= e!92802 lt!74558)))

(assert (=> b!142415 (= lt!74558 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73075) lt!73080))))

(assert (=> b!142415 (isDefined!129 (getValueByKey!176 (toList!888 lt!73075) lt!73080))))

(declare-fun b!142416 () Bool)

(declare-fun Unit!4504 () Unit!4373)

(assert (=> b!142416 (= e!92802 Unit!4504)))

(declare-fun b!142417 () Bool)

(assert (=> b!142417 (= e!92801 (isDefined!129 (getValueByKey!176 (toList!888 lt!73075) lt!73080)))))

(assert (= (and d!45241 c!26905) b!142415))

(assert (= (and d!45241 (not c!26905)) b!142416))

(assert (= (and d!45241 (not res!67904)) b!142417))

(declare-fun m!171455 () Bool)

(assert (=> d!45241 m!171455))

(declare-fun m!171457 () Bool)

(assert (=> b!142415 m!171457))

(assert (=> b!142415 m!168529))

(assert (=> b!142415 m!168529))

(declare-fun m!171459 () Bool)

(assert (=> b!142415 m!171459))

(assert (=> b!142417 m!168529))

(assert (=> b!142417 m!168529))

(assert (=> b!142417 m!171459))

(assert (=> d!43911 d!45241))

(assert (=> d!43911 d!43917))

(assert (=> d!43911 d!43931))

(declare-fun b!142421 () Bool)

(declare-fun e!92804 () Option!182)

(assert (=> b!142421 (= e!92804 None!180)))

(declare-fun b!142418 () Bool)

(declare-fun e!92803 () Option!182)

(assert (=> b!142418 (= e!92803 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73413)))))))

(declare-fun b!142419 () Bool)

(assert (=> b!142419 (= e!92803 e!92804)))

(declare-fun c!26907 () Bool)

(assert (=> b!142419 (= c!26907 (and ((_ is Cons!1741) (toList!888 lt!73413)) (not (= (_1!1360 (h!2348 (toList!888 lt!73413))) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))))

(declare-fun d!45243 () Bool)

(declare-fun c!26906 () Bool)

(assert (=> d!45243 (= c!26906 (and ((_ is Cons!1741) (toList!888 lt!73413)) (= (_1!1360 (h!2348 (toList!888 lt!73413))) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16))))))))

(assert (=> d!45243 (= (getValueByKey!176 (toList!888 lt!73413) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))) e!92803)))

(declare-fun b!142420 () Bool)

(assert (=> b!142420 (= e!92804 (getValueByKey!176 (t!6329 (toList!888 lt!73413)) (_1!1360 (tuple2!2699 lt!73141 (minValue!2790 newMap!16)))))))

(assert (= (and d!45243 c!26906) b!142418))

(assert (= (and d!45243 (not c!26906)) b!142419))

(assert (= (and b!142419 c!26907) b!142420))

(assert (= (and b!142419 (not c!26907)) b!142421))

(declare-fun m!171461 () Bool)

(assert (=> b!142420 m!171461))

(assert (=> b!140097 d!45243))

(declare-fun d!45245 () Bool)

(assert (=> d!45245 (= (isEmpty!418 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))) (not ((_ is Some!181) (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))))

(assert (=> d!43567 d!45245))

(declare-fun d!45247 () Bool)

(declare-fun e!92805 () Bool)

(assert (=> d!45247 e!92805))

(declare-fun res!67905 () Bool)

(assert (=> d!45247 (=> res!67905 e!92805)))

(declare-fun lt!74561 () Bool)

(assert (=> d!45247 (= res!67905 (not lt!74561))))

(declare-fun lt!74559 () Bool)

(assert (=> d!45247 (= lt!74561 lt!74559)))

(declare-fun lt!74560 () Unit!4373)

(declare-fun e!92806 () Unit!4373)

(assert (=> d!45247 (= lt!74560 e!92806)))

(declare-fun c!26908 () Bool)

(assert (=> d!45247 (= c!26908 lt!74559)))

(assert (=> d!45247 (= lt!74559 (containsKey!180 (toList!888 lt!73487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45247 (= (contains!923 lt!73487 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74561)))

(declare-fun b!142422 () Bool)

(declare-fun lt!74562 () Unit!4373)

(assert (=> b!142422 (= e!92806 lt!74562)))

(assert (=> b!142422 (= lt!74562 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142422 (isDefined!129 (getValueByKey!176 (toList!888 lt!73487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142423 () Bool)

(declare-fun Unit!4505 () Unit!4373)

(assert (=> b!142423 (= e!92806 Unit!4505)))

(declare-fun b!142424 () Bool)

(assert (=> b!142424 (= e!92805 (isDefined!129 (getValueByKey!176 (toList!888 lt!73487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45247 c!26908) b!142422))

(assert (= (and d!45247 (not c!26908)) b!142423))

(assert (= (and d!45247 (not res!67905)) b!142424))

(declare-fun m!171463 () Bool)

(assert (=> d!45247 m!171463))

(declare-fun m!171465 () Bool)

(assert (=> b!142422 m!171465))

(assert (=> b!142422 m!169967))

(assert (=> b!142422 m!169967))

(declare-fun m!171467 () Bool)

(assert (=> b!142422 m!171467))

(assert (=> b!142424 m!169967))

(assert (=> b!142424 m!169967))

(assert (=> b!142424 m!171467))

(assert (=> bm!15567 d!45247))

(declare-fun d!45249 () Bool)

(assert (=> d!45249 (= (apply!120 lt!73680 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73680) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6003 () Bool)

(assert (= bs!6003 d!45249))

(assert (=> bs!6003 m!168721))

(assert (=> bs!6003 m!168721))

(declare-fun m!171469 () Bool)

(assert (=> bs!6003 m!171469))

(assert (=> b!140479 d!45249))

(declare-fun d!45251 () Bool)

(assert (=> d!45251 (= (apply!120 lt!73650 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73650) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!6004 () Bool)

(assert (= bs!6004 d!45251))

(assert (=> bs!6004 m!167709))

(declare-fun m!171471 () Bool)

(assert (=> bs!6004 m!171471))

(assert (=> bs!6004 m!171471))

(declare-fun m!171473 () Bool)

(assert (=> bs!6004 m!171473))

(assert (=> b!140433 d!45251))

(declare-fun c!26909 () Bool)

(declare-fun d!45253 () Bool)

(assert (=> d!45253 (= c!26909 ((_ is ValueCellFull!1122) (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!92807 () V!3555)

(assert (=> d!45253 (= (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92807)))

(declare-fun b!142425 () Bool)

(assert (=> b!142425 (= e!92807 (get!1529 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142426 () Bool)

(assert (=> b!142426 (= e!92807 (get!1530 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45253 c!26909) b!142425))

(assert (= (and d!45253 (not c!26909)) b!142426))

(assert (=> b!142425 m!167859))

(assert (=> b!142425 m!166443))

(declare-fun m!171475 () Bool)

(assert (=> b!142425 m!171475))

(assert (=> b!142426 m!167859))

(assert (=> b!142426 m!166443))

(declare-fun m!171477 () Bool)

(assert (=> b!142426 m!171477))

(assert (=> b!140433 d!45253))

(declare-fun d!45255 () Bool)

(declare-fun e!92808 () Bool)

(assert (=> d!45255 e!92808))

(declare-fun res!67906 () Bool)

(assert (=> d!45255 (=> res!67906 e!92808)))

(declare-fun lt!74565 () Bool)

(assert (=> d!45255 (= res!67906 (not lt!74565))))

(declare-fun lt!74563 () Bool)

(assert (=> d!45255 (= lt!74565 lt!74563)))

(declare-fun lt!74564 () Unit!4373)

(declare-fun e!92809 () Unit!4373)

(assert (=> d!45255 (= lt!74564 e!92809)))

(declare-fun c!26910 () Bool)

(assert (=> d!45255 (= c!26910 lt!74563)))

(assert (=> d!45255 (= lt!74563 (containsKey!180 (toList!888 lt!73528) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45255 (= (contains!923 lt!73528 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74565)))

(declare-fun b!142427 () Bool)

(declare-fun lt!74566 () Unit!4373)

(assert (=> b!142427 (= e!92809 lt!74566)))

(assert (=> b!142427 (= lt!74566 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73528) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142427 (isDefined!129 (getValueByKey!176 (toList!888 lt!73528) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142428 () Bool)

(declare-fun Unit!4506 () Unit!4373)

(assert (=> b!142428 (= e!92809 Unit!4506)))

(declare-fun b!142429 () Bool)

(assert (=> b!142429 (= e!92808 (isDefined!129 (getValueByKey!176 (toList!888 lt!73528) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45255 c!26910) b!142427))

(assert (= (and d!45255 (not c!26910)) b!142428))

(assert (= (and d!45255 (not res!67906)) b!142429))

(declare-fun m!171479 () Bool)

(assert (=> d!45255 m!171479))

(declare-fun m!171481 () Bool)

(assert (=> b!142427 m!171481))

(declare-fun m!171483 () Bool)

(assert (=> b!142427 m!171483))

(assert (=> b!142427 m!171483))

(declare-fun m!171485 () Bool)

(assert (=> b!142427 m!171485))

(assert (=> b!142429 m!171483))

(assert (=> b!142429 m!171483))

(assert (=> b!142429 m!171485))

(assert (=> b!140271 d!45255))

(assert (=> d!43747 d!43409))

(assert (=> d!43747 d!43411))

(declare-fun d!45257 () Bool)

(declare-fun res!67907 () Bool)

(declare-fun e!92810 () Bool)

(assert (=> d!45257 (=> res!67907 e!92810)))

(assert (=> d!45257 (= res!67907 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!45257 (= (containsKey!180 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92810)))

(declare-fun b!142430 () Bool)

(declare-fun e!92811 () Bool)

(assert (=> b!142430 (= e!92810 e!92811)))

(declare-fun res!67908 () Bool)

(assert (=> b!142430 (=> (not res!67908) (not e!92811))))

(assert (=> b!142430 (= res!67908 (and (or (not ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (bvsle (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!142431 () Bool)

(assert (=> b!142431 (= e!92811 (containsKey!180 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!45257 (not res!67907)) b!142430))

(assert (= (and b!142430 res!67908) b!142431))

(assert (=> b!142431 m!166013))

(declare-fun m!171487 () Bool)

(assert (=> b!142431 m!171487))

(assert (=> d!43697 d!45257))

(declare-fun d!45259 () Bool)

(declare-fun e!92812 () Bool)

(assert (=> d!45259 e!92812))

(declare-fun res!67909 () Bool)

(assert (=> d!45259 (=> res!67909 e!92812)))

(declare-fun lt!74569 () Bool)

(assert (=> d!45259 (= res!67909 (not lt!74569))))

(declare-fun lt!74567 () Bool)

(assert (=> d!45259 (= lt!74569 lt!74567)))

(declare-fun lt!74568 () Unit!4373)

(declare-fun e!92813 () Unit!4373)

(assert (=> d!45259 (= lt!74568 e!92813)))

(declare-fun c!26911 () Bool)

(assert (=> d!45259 (= c!26911 lt!74567)))

(assert (=> d!45259 (= lt!74567 (containsKey!180 (toList!888 lt!73702) (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(assert (=> d!45259 (= (contains!923 lt!73702 (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)) lt!74569)))

(declare-fun b!142432 () Bool)

(declare-fun lt!74570 () Unit!4373)

(assert (=> b!142432 (= e!92813 lt!74570)))

(assert (=> b!142432 (= lt!74570 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73702) (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(assert (=> b!142432 (isDefined!129 (getValueByKey!176 (toList!888 lt!73702) (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000)))))

(declare-fun b!142433 () Bool)

(declare-fun Unit!4507 () Unit!4373)

(assert (=> b!142433 (= e!92813 Unit!4507)))

(declare-fun b!142434 () Bool)

(assert (=> b!142434 (= e!92812 (isDefined!129 (getValueByKey!176 (toList!888 lt!73702) (select (arr!2315 (_keys!4699 (ite c!26065 (_2!1361 lt!72992) newMap!16))) #b00000000000000000000000000000000))))))

(assert (= (and d!45259 c!26911) b!142432))

(assert (= (and d!45259 (not c!26911)) b!142433))

(assert (= (and d!45259 (not res!67909)) b!142434))

(assert (=> d!45259 m!167955))

(declare-fun m!171489 () Bool)

(assert (=> d!45259 m!171489))

(assert (=> b!142432 m!167955))

(declare-fun m!171491 () Bool)

(assert (=> b!142432 m!171491))

(assert (=> b!142432 m!167955))

(assert (=> b!142432 m!171097))

(assert (=> b!142432 m!171097))

(declare-fun m!171493 () Bool)

(assert (=> b!142432 m!171493))

(assert (=> b!142434 m!167955))

(assert (=> b!142434 m!171097))

(assert (=> b!142434 m!171097))

(assert (=> b!142434 m!171493))

(assert (=> b!140507 d!45259))

(assert (=> b!140492 d!44237))

(declare-fun d!45261 () Bool)

(declare-fun c!26912 () Bool)

(assert (=> d!45261 (= c!26912 ((_ is Nil!1742) (toList!888 lt!73067)))))

(declare-fun e!92814 () (InoxSet tuple2!2698))

(assert (=> d!45261 (= (content!138 (toList!888 lt!73067)) e!92814)))

(declare-fun b!142435 () Bool)

(assert (=> b!142435 (= e!92814 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!142436 () Bool)

(assert (=> b!142436 (= e!92814 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73067)) true) (content!138 (t!6329 (toList!888 lt!73067)))))))

(assert (= (and d!45261 c!26912) b!142435))

(assert (= (and d!45261 (not c!26912)) b!142436))

(declare-fun m!171495 () Bool)

(assert (=> b!142436 m!171495))

(assert (=> b!142436 m!169215))

(assert (=> d!43787 d!45261))

(declare-fun b!142440 () Bool)

(declare-fun e!92816 () Option!182)

(assert (=> b!142440 (= e!92816 None!180)))

(declare-fun b!142437 () Bool)

(declare-fun e!92815 () Option!182)

(assert (=> b!142437 (= e!92815 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73510)))))))

(declare-fun b!142438 () Bool)

(assert (=> b!142438 (= e!92815 e!92816)))

(declare-fun c!26914 () Bool)

(assert (=> b!142438 (= c!26914 (and ((_ is Cons!1741) (toList!888 lt!73510)) (not (= (_1!1360 (h!2348 (toList!888 lt!73510))) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))))

(declare-fun c!26913 () Bool)

(declare-fun d!45263 () Bool)

(assert (=> d!45263 (= c!26913 (and ((_ is Cons!1741) (toList!888 lt!73510)) (= (_1!1360 (h!2348 (toList!888 lt!73510))) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16))))))))

(assert (=> d!45263 (= (getValueByKey!176 (toList!888 lt!73510) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))) e!92815)))

(declare-fun b!142439 () Bool)

(assert (=> b!142439 (= e!92816 (getValueByKey!176 (t!6329 (toList!888 lt!73510)) (_1!1360 (tuple2!2699 lt!73315 (minValue!2790 newMap!16)))))))

(assert (= (and d!45263 c!26913) b!142437))

(assert (= (and d!45263 (not c!26913)) b!142438))

(assert (= (and b!142438 c!26914) b!142439))

(assert (= (and b!142438 (not c!26914)) b!142440))

(declare-fun m!171497 () Bool)

(assert (=> b!142439 m!171497))

(assert (=> b!140258 d!45263))

(declare-fun lt!74571 () Bool)

(declare-fun d!45265 () Bool)

(assert (=> d!45265 (= lt!74571 (select (content!138 (toList!888 lt!73855)) (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun e!92818 () Bool)

(assert (=> d!45265 (= lt!74571 e!92818)))

(declare-fun res!67910 () Bool)

(assert (=> d!45265 (=> (not res!67910) (not e!92818))))

(assert (=> d!45265 (= res!67910 ((_ is Cons!1741) (toList!888 lt!73855)))))

(assert (=> d!45265 (= (contains!925 (toList!888 lt!73855) (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!74571)))

(declare-fun b!142441 () Bool)

(declare-fun e!92817 () Bool)

(assert (=> b!142441 (= e!92818 e!92817)))

(declare-fun res!67911 () Bool)

(assert (=> b!142441 (=> res!67911 e!92817)))

(assert (=> b!142441 (= res!67911 (= (h!2348 (toList!888 lt!73855)) (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun b!142442 () Bool)

(assert (=> b!142442 (= e!92817 (contains!925 (t!6329 (toList!888 lt!73855)) (tuple2!2699 lt!73077 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45265 res!67910) b!142441))

(assert (= (and b!142441 (not res!67911)) b!142442))

(declare-fun m!171499 () Bool)

(assert (=> d!45265 m!171499))

(declare-fun m!171501 () Bool)

(assert (=> d!45265 m!171501))

(declare-fun m!171503 () Bool)

(assert (=> b!142442 m!171503))

(assert (=> b!140747 d!45265))

(declare-fun d!45267 () Bool)

(declare-fun e!92819 () Bool)

(assert (=> d!45267 e!92819))

(declare-fun res!67912 () Bool)

(assert (=> d!45267 (=> res!67912 e!92819)))

(declare-fun lt!74574 () Bool)

(assert (=> d!45267 (= res!67912 (not lt!74574))))

(declare-fun lt!74572 () Bool)

(assert (=> d!45267 (= lt!74574 lt!74572)))

(declare-fun lt!74573 () Unit!4373)

(declare-fun e!92820 () Unit!4373)

(assert (=> d!45267 (= lt!74573 e!92820)))

(declare-fun c!26915 () Bool)

(assert (=> d!45267 (= c!26915 lt!74572)))

(assert (=> d!45267 (= lt!74572 (containsKey!180 (toList!888 lt!73496) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45267 (= (contains!923 lt!73496 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74574)))

(declare-fun b!142443 () Bool)

(declare-fun lt!74575 () Unit!4373)

(assert (=> b!142443 (= e!92820 lt!74575)))

(assert (=> b!142443 (= lt!74575 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73496) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142443 (isDefined!129 (getValueByKey!176 (toList!888 lt!73496) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142444 () Bool)

(declare-fun Unit!4508 () Unit!4373)

(assert (=> b!142444 (= e!92820 Unit!4508)))

(declare-fun b!142445 () Bool)

(assert (=> b!142445 (= e!92819 (isDefined!129 (getValueByKey!176 (toList!888 lt!73496) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45267 c!26915) b!142443))

(assert (= (and d!45267 (not c!26915)) b!142444))

(assert (= (and d!45267 (not res!67912)) b!142445))

(declare-fun m!171505 () Bool)

(assert (=> d!45267 m!171505))

(declare-fun m!171507 () Bool)

(assert (=> b!142443 m!171507))

(declare-fun m!171509 () Bool)

(assert (=> b!142443 m!171509))

(assert (=> b!142443 m!171509))

(declare-fun m!171511 () Bool)

(assert (=> b!142443 m!171511))

(assert (=> b!142445 m!171509))

(assert (=> b!142445 m!171509))

(assert (=> b!142445 m!171511))

(assert (=> d!43597 d!45267))

(assert (=> d!43597 d!43385))

(assert (=> d!43825 d!43817))

(assert (=> d!43825 d!43833))

(declare-fun d!45269 () Bool)

(assert (=> d!45269 (= (apply!120 (+!179 lt!73304 (tuple2!2699 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73299) (apply!120 lt!73304 lt!73299))))

(assert (=> d!45269 true))

(declare-fun _$34!1013 () Unit!4373)

(assert (=> d!45269 (= (choose!856 lt!73304 lt!73300 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73299) _$34!1013)))

(declare-fun bs!6005 () Bool)

(assert (= bs!6005 d!45269))

(assert (=> bs!6005 m!166765))

(assert (=> bs!6005 m!166765))

(assert (=> bs!6005 m!166767))

(assert (=> bs!6005 m!166755))

(assert (=> d!43825 d!45269))

(declare-fun d!45271 () Bool)

(declare-fun e!92821 () Bool)

(assert (=> d!45271 e!92821))

(declare-fun res!67913 () Bool)

(assert (=> d!45271 (=> res!67913 e!92821)))

(declare-fun lt!74578 () Bool)

(assert (=> d!45271 (= res!67913 (not lt!74578))))

(declare-fun lt!74576 () Bool)

(assert (=> d!45271 (= lt!74578 lt!74576)))

(declare-fun lt!74577 () Unit!4373)

(declare-fun e!92822 () Unit!4373)

(assert (=> d!45271 (= lt!74577 e!92822)))

(declare-fun c!26916 () Bool)

(assert (=> d!45271 (= c!26916 lt!74576)))

(assert (=> d!45271 (= lt!74576 (containsKey!180 (toList!888 lt!73304) lt!73299))))

(assert (=> d!45271 (= (contains!923 lt!73304 lt!73299) lt!74578)))

(declare-fun b!142446 () Bool)

(declare-fun lt!74579 () Unit!4373)

(assert (=> b!142446 (= e!92822 lt!74579)))

(assert (=> b!142446 (= lt!74579 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73304) lt!73299))))

(assert (=> b!142446 (isDefined!129 (getValueByKey!176 (toList!888 lt!73304) lt!73299))))

(declare-fun b!142447 () Bool)

(declare-fun Unit!4509 () Unit!4373)

(assert (=> b!142447 (= e!92822 Unit!4509)))

(declare-fun b!142448 () Bool)

(assert (=> b!142448 (= e!92821 (isDefined!129 (getValueByKey!176 (toList!888 lt!73304) lt!73299)))))

(assert (= (and d!45271 c!26916) b!142446))

(assert (= (and d!45271 (not c!26916)) b!142447))

(assert (= (and d!45271 (not res!67913)) b!142448))

(declare-fun m!171513 () Bool)

(assert (=> d!45271 m!171513))

(declare-fun m!171515 () Bool)

(assert (=> b!142446 m!171515))

(assert (=> b!142446 m!168203))

(assert (=> b!142446 m!168203))

(declare-fun m!171517 () Bool)

(assert (=> b!142446 m!171517))

(assert (=> b!142448 m!168203))

(assert (=> b!142448 m!168203))

(assert (=> b!142448 m!171517))

(assert (=> d!43825 d!45271))

(assert (=> d!43825 d!43823))

(declare-fun d!45273 () Bool)

(declare-fun e!92823 () Bool)

(assert (=> d!45273 e!92823))

(declare-fun res!67914 () Bool)

(assert (=> d!45273 (=> res!67914 e!92823)))

(declare-fun lt!74582 () Bool)

(assert (=> d!45273 (= res!67914 (not lt!74582))))

(declare-fun lt!74580 () Bool)

(assert (=> d!45273 (= lt!74582 lt!74580)))

(declare-fun lt!74581 () Unit!4373)

(declare-fun e!92824 () Unit!4373)

(assert (=> d!45273 (= lt!74581 e!92824)))

(declare-fun c!26917 () Bool)

(assert (=> d!45273 (= c!26917 lt!74580)))

(assert (=> d!45273 (= lt!74580 (containsKey!180 (toList!888 lt!73406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45273 (= (contains!923 lt!73406 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74582)))

(declare-fun b!142449 () Bool)

(declare-fun lt!74583 () Unit!4373)

(assert (=> b!142449 (= e!92824 lt!74583)))

(assert (=> b!142449 (= lt!74583 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142449 (isDefined!129 (getValueByKey!176 (toList!888 lt!73406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142450 () Bool)

(declare-fun Unit!4510 () Unit!4373)

(assert (=> b!142450 (= e!92824 Unit!4510)))

(declare-fun b!142451 () Bool)

(assert (=> b!142451 (= e!92823 (isDefined!129 (getValueByKey!176 (toList!888 lt!73406) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45273 c!26917) b!142449))

(assert (= (and d!45273 (not c!26917)) b!142450))

(assert (= (and d!45273 (not res!67914)) b!142451))

(declare-fun m!171519 () Bool)

(assert (=> d!45273 m!171519))

(declare-fun m!171521 () Bool)

(assert (=> b!142449 m!171521))

(declare-fun m!171523 () Bool)

(assert (=> b!142449 m!171523))

(assert (=> b!142449 m!171523))

(declare-fun m!171525 () Bool)

(assert (=> b!142449 m!171525))

(assert (=> b!142451 m!171523))

(assert (=> b!142451 m!171523))

(assert (=> b!142451 m!171525))

(assert (=> b!140089 d!45273))

(declare-fun d!45275 () Bool)

(declare-fun res!67915 () Bool)

(declare-fun e!92825 () Bool)

(assert (=> d!45275 (=> res!67915 e!92825)))

(assert (=> d!45275 (= res!67915 (= (select (arr!2315 lt!73259) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> d!45275 (= (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!92825)))

(declare-fun b!142452 () Bool)

(declare-fun e!92826 () Bool)

(assert (=> b!142452 (= e!92825 e!92826)))

(declare-fun res!67916 () Bool)

(assert (=> b!142452 (=> (not res!67916) (not e!92826))))

(assert (=> b!142452 (= res!67916 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 lt!73259)))))

(declare-fun b!142453 () Bool)

(assert (=> b!142453 (= e!92826 (arrayContainsKey!0 lt!73259 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45275 (not res!67915)) b!142452))

(assert (= (and b!142452 res!67916) b!142453))

(declare-fun m!171527 () Bool)

(assert (=> d!45275 m!171527))

(assert (=> b!142453 m!166013))

(declare-fun m!171529 () Bool)

(assert (=> b!142453 m!171529))

(assert (=> b!140375 d!45275))

(declare-fun d!45277 () Bool)

(assert (=> d!45277 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6006 () Bool)

(assert (= bs!6006 d!45277))

(assert (=> bs!6006 m!167239))

(declare-fun m!171531 () Bool)

(assert (=> bs!6006 m!171531))

(assert (=> b!140155 d!45277))

(declare-fun b!142457 () Bool)

(declare-fun e!92828 () Option!182)

(assert (=> b!142457 (= e!92828 None!180)))

(declare-fun b!142454 () Bool)

(declare-fun e!92827 () Option!182)

(assert (=> b!142454 (= e!92827 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73158)))))))

(declare-fun b!142455 () Bool)

(assert (=> b!142455 (= e!92827 e!92828)))

(declare-fun c!26919 () Bool)

(assert (=> b!142455 (= c!26919 (and ((_ is Cons!1741) (toList!888 lt!73158)) (not (= (_1!1360 (h!2348 (toList!888 lt!73158))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!45279 () Bool)

(declare-fun c!26918 () Bool)

(assert (=> d!45279 (= c!26918 (and ((_ is Cons!1741) (toList!888 lt!73158)) (= (_1!1360 (h!2348 (toList!888 lt!73158))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45279 (= (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000) e!92827)))

(declare-fun b!142456 () Bool)

(assert (=> b!142456 (= e!92828 (getValueByKey!176 (t!6329 (toList!888 lt!73158)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45279 c!26918) b!142454))

(assert (= (and d!45279 (not c!26918)) b!142455))

(assert (= (and b!142455 c!26919) b!142456))

(assert (= (and b!142455 (not c!26919)) b!142457))

(declare-fun m!171533 () Bool)

(assert (=> b!142456 m!171533))

(assert (=> b!140155 d!45279))

(declare-fun d!45281 () Bool)

(declare-fun lt!74584 () Bool)

(assert (=> d!45281 (= lt!74584 (select (content!137 Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!92830 () Bool)

(assert (=> d!45281 (= lt!74584 e!92830)))

(declare-fun res!67917 () Bool)

(assert (=> d!45281 (=> (not res!67917) (not e!92830))))

(assert (=> d!45281 (= res!67917 ((_ is Cons!1742) Nil!1743))))

(assert (=> d!45281 (= (contains!924 Nil!1743 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)) lt!74584)))

(declare-fun b!142458 () Bool)

(declare-fun e!92829 () Bool)

(assert (=> b!142458 (= e!92830 e!92829)))

(declare-fun res!67918 () Bool)

(assert (=> b!142458 (=> res!67918 e!92829)))

(assert (=> b!142458 (= res!67918 (= (h!2349 Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142459 () Bool)

(assert (=> b!142459 (= e!92829 (contains!924 (t!6330 Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!45281 res!67917) b!142458))

(assert (= (and b!142458 (not res!67918)) b!142459))

(assert (=> d!45281 m!166611))

(assert (=> d!45281 m!167023))

(declare-fun m!171535 () Bool)

(assert (=> d!45281 m!171535))

(assert (=> b!142459 m!167023))

(declare-fun m!171537 () Bool)

(assert (=> b!142459 m!171537))

(assert (=> b!140343 d!45281))

(assert (=> d!43733 d!43527))

(declare-fun d!45283 () Bool)

(assert (=> d!45283 (= (get!1531 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73093) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43861 d!45283))

(assert (=> d!43861 d!44121))

(declare-fun d!45285 () Bool)

(declare-fun res!67919 () Bool)

(declare-fun e!92831 () Bool)

(assert (=> d!45285 (=> res!67919 e!92831)))

(assert (=> d!45285 (= res!67919 (and ((_ is Cons!1741) lt!73568) (= (_1!1360 (h!2348 lt!73568)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!45285 (= (containsKey!180 lt!73568 (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!92831)))

(declare-fun b!142460 () Bool)

(declare-fun e!92832 () Bool)

(assert (=> b!142460 (= e!92831 e!92832)))

(declare-fun res!67920 () Bool)

(assert (=> b!142460 (=> (not res!67920) (not e!92832))))

(assert (=> b!142460 (= res!67920 (and (or (not ((_ is Cons!1741) lt!73568)) (bvsle (_1!1360 (h!2348 lt!73568)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) ((_ is Cons!1741) lt!73568) (bvslt (_1!1360 (h!2348 lt!73568)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun b!142461 () Bool)

(assert (=> b!142461 (= e!92832 (containsKey!180 (t!6329 lt!73568) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45285 (not res!67919)) b!142460))

(assert (= (and b!142460 res!67920) b!142461))

(declare-fun m!171539 () Bool)

(assert (=> b!142461 m!171539))

(assert (=> b!140365 d!45285))

(assert (=> b!140213 d!43479))

(declare-fun d!45287 () Bool)

(declare-fun lt!74585 () Bool)

(assert (=> d!45287 (= lt!74585 (select (content!138 (toList!888 lt!73583)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92834 () Bool)

(assert (=> d!45287 (= lt!74585 e!92834)))

(declare-fun res!67921 () Bool)

(assert (=> d!45287 (=> (not res!67921) (not e!92834))))

(assert (=> d!45287 (= res!67921 ((_ is Cons!1741) (toList!888 lt!73583)))))

(assert (=> d!45287 (= (contains!925 (toList!888 lt!73583) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74585)))

(declare-fun b!142462 () Bool)

(declare-fun e!92833 () Bool)

(assert (=> b!142462 (= e!92834 e!92833)))

(declare-fun res!67922 () Bool)

(assert (=> b!142462 (=> res!67922 e!92833)))

(assert (=> b!142462 (= res!67922 (= (h!2348 (toList!888 lt!73583)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142463 () Bool)

(assert (=> b!142463 (= e!92833 (contains!925 (t!6329 (toList!888 lt!73583)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45287 res!67921) b!142462))

(assert (= (and b!142462 (not res!67922)) b!142463))

(declare-fun m!171541 () Bool)

(assert (=> d!45287 m!171541))

(declare-fun m!171543 () Bool)

(assert (=> d!45287 m!171543))

(declare-fun m!171545 () Bool)

(assert (=> b!142463 m!171545))

(assert (=> b!140373 d!45287))

(declare-fun d!45289 () Bool)

(declare-fun lt!74586 () Bool)

(assert (=> d!45289 (= lt!74586 (select (content!138 (toList!888 lt!73859)) (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))

(declare-fun e!92836 () Bool)

(assert (=> d!45289 (= lt!74586 e!92836)))

(declare-fun res!67923 () Bool)

(assert (=> d!45289 (=> (not res!67923) (not e!92836))))

(assert (=> d!45289 (= res!67923 ((_ is Cons!1741) (toList!888 lt!73859)))))

(assert (=> d!45289 (= (contains!925 (toList!888 lt!73859) (tuple2!2699 lt!73087 (minValue!2790 newMap!16))) lt!74586)))

(declare-fun b!142464 () Bool)

(declare-fun e!92835 () Bool)

(assert (=> b!142464 (= e!92836 e!92835)))

(declare-fun res!67924 () Bool)

(assert (=> b!142464 (=> res!67924 e!92835)))

(assert (=> b!142464 (= res!67924 (= (h!2348 (toList!888 lt!73859)) (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))

(declare-fun b!142465 () Bool)

(assert (=> b!142465 (= e!92835 (contains!925 (t!6329 (toList!888 lt!73859)) (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))

(assert (= (and d!45289 res!67923) b!142464))

(assert (= (and b!142464 (not res!67924)) b!142465))

(declare-fun m!171547 () Bool)

(assert (=> d!45289 m!171547))

(declare-fun m!171549 () Bool)

(assert (=> d!45289 m!171549))

(declare-fun m!171551 () Bool)

(assert (=> b!142465 m!171551))

(assert (=> b!140749 d!45289))

(declare-fun d!45291 () Bool)

(declare-fun e!92837 () Bool)

(assert (=> d!45291 e!92837))

(declare-fun res!67925 () Bool)

(assert (=> d!45291 (=> res!67925 e!92837)))

(declare-fun lt!74589 () Bool)

(assert (=> d!45291 (= res!67925 (not lt!74589))))

(declare-fun lt!74587 () Bool)

(assert (=> d!45291 (= lt!74589 lt!74587)))

(declare-fun lt!74588 () Unit!4373)

(declare-fun e!92838 () Unit!4373)

(assert (=> d!45291 (= lt!74588 e!92838)))

(declare-fun c!26920 () Bool)

(assert (=> d!45291 (= c!26920 lt!74587)))

(assert (=> d!45291 (= lt!74587 (containsKey!180 (toList!888 lt!73487) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45291 (= (contains!923 lt!73487 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74589)))

(declare-fun b!142466 () Bool)

(declare-fun lt!74590 () Unit!4373)

(assert (=> b!142466 (= e!92838 lt!74590)))

(assert (=> b!142466 (= lt!74590 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73487) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142466 (isDefined!129 (getValueByKey!176 (toList!888 lt!73487) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142467 () Bool)

(declare-fun Unit!4511 () Unit!4373)

(assert (=> b!142467 (= e!92838 Unit!4511)))

(declare-fun b!142468 () Bool)

(assert (=> b!142468 (= e!92837 (isDefined!129 (getValueByKey!176 (toList!888 lt!73487) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45291 c!26920) b!142466))

(assert (= (and d!45291 (not c!26920)) b!142467))

(assert (= (and d!45291 (not res!67925)) b!142468))

(assert (=> d!45291 m!166385))

(declare-fun m!171553 () Bool)

(assert (=> d!45291 m!171553))

(assert (=> b!142466 m!166385))

(declare-fun m!171555 () Bool)

(assert (=> b!142466 m!171555))

(assert (=> b!142466 m!166385))

(assert (=> b!142466 m!171193))

(assert (=> b!142466 m!171193))

(declare-fun m!171557 () Bool)

(assert (=> b!142466 m!171557))

(assert (=> b!142468 m!166385))

(assert (=> b!142468 m!171193))

(assert (=> b!142468 m!171193))

(assert (=> b!142468 m!171557))

(assert (=> b!140228 d!45291))

(declare-fun d!45293 () Bool)

(assert (=> d!45293 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun bs!6007 () Bool)

(assert (= bs!6007 d!45293))

(assert (=> bs!6007 m!166293))

(declare-fun m!171559 () Bool)

(assert (=> bs!6007 m!171559))

(assert (=> b!140614 d!45293))

(assert (=> b!140614 d!43737))

(declare-fun d!45295 () Bool)

(declare-fun c!26921 () Bool)

(assert (=> d!45295 (= c!26921 ((_ is Nil!1742) (toList!888 lt!73285)))))

(declare-fun e!92839 () (InoxSet tuple2!2698))

(assert (=> d!45295 (= (content!138 (toList!888 lt!73285)) e!92839)))

(declare-fun b!142469 () Bool)

(assert (=> b!142469 (= e!92839 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!142470 () Bool)

(assert (=> b!142470 (= e!92839 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73285)) true) (content!138 (t!6329 (toList!888 lt!73285)))))))

(assert (= (and d!45295 c!26921) b!142469))

(assert (= (and d!45295 (not c!26921)) b!142470))

(declare-fun m!171561 () Bool)

(assert (=> b!142470 m!171561))

(assert (=> b!142470 m!170335))

(assert (=> d!43761 d!45295))

(declare-fun d!45297 () Bool)

(declare-fun lt!74591 () Bool)

(assert (=> d!45297 (= lt!74591 (select (content!138 (toList!888 lt!73895)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun e!92841 () Bool)

(assert (=> d!45297 (= lt!74591 e!92841)))

(declare-fun res!67926 () Bool)

(assert (=> d!45297 (=> (not res!67926) (not e!92841))))

(assert (=> d!45297 (= res!67926 ((_ is Cons!1741) (toList!888 lt!73895)))))

(assert (=> d!45297 (= (contains!925 (toList!888 lt!73895) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74591)))

(declare-fun b!142471 () Bool)

(declare-fun e!92840 () Bool)

(assert (=> b!142471 (= e!92841 e!92840)))

(declare-fun res!67927 () Bool)

(assert (=> b!142471 (=> res!67927 e!92840)))

(assert (=> b!142471 (= res!67927 (= (h!2348 (toList!888 lt!73895)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!142472 () Bool)

(assert (=> b!142472 (= e!92840 (contains!925 (t!6329 (toList!888 lt!73895)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!45297 res!67926) b!142471))

(assert (= (and b!142471 (not res!67927)) b!142472))

(declare-fun m!171563 () Bool)

(assert (=> d!45297 m!171563))

(declare-fun m!171565 () Bool)

(assert (=> d!45297 m!171565))

(declare-fun m!171567 () Bool)

(assert (=> b!142472 m!171567))

(assert (=> b!140813 d!45297))

(declare-fun b!142476 () Bool)

(declare-fun e!92843 () Option!182)

(assert (=> b!142476 (= e!92843 None!180)))

(declare-fun b!142473 () Bool)

(declare-fun e!92842 () Option!182)

(assert (=> b!142473 (= e!92842 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73024)))))))

(declare-fun b!142474 () Bool)

(assert (=> b!142474 (= e!92842 e!92843)))

(declare-fun c!26923 () Bool)

(assert (=> b!142474 (= c!26923 (and ((_ is Cons!1741) (t!6329 lt!73024)) (not (= (_1!1360 (h!2348 (t!6329 lt!73024))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!45299 () Bool)

(declare-fun c!26922 () Bool)

(assert (=> d!45299 (= c!26922 (and ((_ is Cons!1741) (t!6329 lt!73024)) (= (_1!1360 (h!2348 (t!6329 lt!73024))) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45299 (= (getValueByKey!176 (t!6329 lt!73024) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92842)))

(declare-fun b!142475 () Bool)

(assert (=> b!142475 (= e!92843 (getValueByKey!176 (t!6329 (t!6329 lt!73024)) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45299 c!26922) b!142473))

(assert (= (and d!45299 (not c!26922)) b!142474))

(assert (= (and b!142474 c!26923) b!142475))

(assert (= (and b!142474 (not c!26923)) b!142476))

(declare-fun m!171569 () Bool)

(assert (=> b!142475 m!171569))

(assert (=> b!139964 d!45299))

(declare-fun d!45301 () Bool)

(declare-fun res!67928 () Bool)

(declare-fun e!92844 () Bool)

(assert (=> d!45301 (=> res!67928 e!92844)))

(assert (=> d!45301 (= res!67928 (or ((_ is Nil!1742) lt!73357) ((_ is Nil!1742) (t!6329 lt!73357))))))

(assert (=> d!45301 (= (isStrictlySorted!325 lt!73357) e!92844)))

(declare-fun b!142477 () Bool)

(declare-fun e!92845 () Bool)

(assert (=> b!142477 (= e!92844 e!92845)))

(declare-fun res!67929 () Bool)

(assert (=> b!142477 (=> (not res!67929) (not e!92845))))

(assert (=> b!142477 (= res!67929 (bvslt (_1!1360 (h!2348 lt!73357)) (_1!1360 (h!2348 (t!6329 lt!73357)))))))

(declare-fun b!142478 () Bool)

(assert (=> b!142478 (= e!92845 (isStrictlySorted!325 (t!6329 lt!73357)))))

(assert (= (and d!45301 (not res!67928)) b!142477))

(assert (= (and b!142477 res!67929) b!142478))

(declare-fun m!171571 () Bool)

(assert (=> b!142478 m!171571))

(assert (=> d!43457 d!45301))

(declare-fun d!45303 () Bool)

(declare-fun res!67930 () Bool)

(declare-fun e!92846 () Bool)

(assert (=> d!45303 (=> res!67930 e!92846)))

(assert (=> d!45303 (= res!67930 (or ((_ is Nil!1742) (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) ((_ is Nil!1742) (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))))))))

(assert (=> d!45303 (= (isStrictlySorted!325 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479))) e!92846)))

(declare-fun b!142479 () Bool)

(declare-fun e!92847 () Bool)

(assert (=> b!142479 (= e!92846 e!92847)))

(declare-fun res!67931 () Bool)

(assert (=> b!142479 (=> (not res!67931) (not e!92847))))

(assert (=> b!142479 (= res!67931 (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))) (_1!1360 (h!2348 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))))))))

(declare-fun b!142480 () Bool)

(assert (=> b!142480 (= e!92847 (isStrictlySorted!325 (t!6329 (toList!888 (ite c!26064 (ite c!26071 call!15475 call!15478) call!15479)))))))

(assert (= (and d!45303 (not res!67930)) b!142479))

(assert (= (and b!142479 res!67931) b!142480))

(assert (=> b!142480 m!170535))

(assert (=> d!43457 d!45303))

(declare-fun d!45305 () Bool)

(declare-fun e!92848 () Bool)

(assert (=> d!45305 e!92848))

(declare-fun res!67932 () Bool)

(assert (=> d!45305 (=> (not res!67932) (not e!92848))))

(declare-fun lt!74595 () ListLongMap!1745)

(assert (=> d!45305 (= res!67932 (contains!923 lt!74595 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74592 () List!1745)

(assert (=> d!45305 (= lt!74595 (ListLongMap!1746 lt!74592))))

(declare-fun lt!74593 () Unit!4373)

(declare-fun lt!74594 () Unit!4373)

(assert (=> d!45305 (= lt!74593 lt!74594)))

(assert (=> d!45305 (= (getValueByKey!176 lt!74592 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45305 (= lt!74594 (lemmaContainsTupThenGetReturnValue!90 lt!74592 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45305 (= lt!74592 (insertStrictlySorted!93 (toList!888 call!15578) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45305 (= (+!179 call!15578 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74595)))

(declare-fun b!142481 () Bool)

(declare-fun res!67933 () Bool)

(assert (=> b!142481 (=> (not res!67933) (not e!92848))))

(assert (=> b!142481 (= res!67933 (= (getValueByKey!176 (toList!888 lt!74595) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142482 () Bool)

(assert (=> b!142482 (= e!92848 (contains!925 (toList!888 lt!74595) (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45305 res!67932) b!142481))

(assert (= (and b!142481 res!67933) b!142482))

(declare-fun m!171573 () Bool)

(assert (=> d!45305 m!171573))

(declare-fun m!171575 () Bool)

(assert (=> d!45305 m!171575))

(declare-fun m!171577 () Bool)

(assert (=> d!45305 m!171577))

(declare-fun m!171579 () Bool)

(assert (=> d!45305 m!171579))

(declare-fun m!171581 () Bool)

(assert (=> b!142481 m!171581))

(declare-fun m!171583 () Bool)

(assert (=> b!142482 m!171583))

(assert (=> b!140267 d!45305))

(assert (=> b!140267 d!43463))

(declare-fun d!45307 () Bool)

(declare-fun e!92849 () Bool)

(assert (=> d!45307 e!92849))

(declare-fun res!67934 () Bool)

(assert (=> d!45307 (=> (not res!67934) (not e!92849))))

(declare-fun lt!74599 () ListLongMap!1745)

(assert (=> d!45307 (= res!67934 (contains!923 lt!74599 (_1!1360 (tuple2!2699 lt!73529 lt!73526))))))

(declare-fun lt!74596 () List!1745)

(assert (=> d!45307 (= lt!74599 (ListLongMap!1746 lt!74596))))

(declare-fun lt!74597 () Unit!4373)

(declare-fun lt!74598 () Unit!4373)

(assert (=> d!45307 (= lt!74597 lt!74598)))

(assert (=> d!45307 (= (getValueByKey!176 lt!74596 (_1!1360 (tuple2!2699 lt!73529 lt!73526))) (Some!181 (_2!1360 (tuple2!2699 lt!73529 lt!73526))))))

(assert (=> d!45307 (= lt!74598 (lemmaContainsTupThenGetReturnValue!90 lt!74596 (_1!1360 (tuple2!2699 lt!73529 lt!73526)) (_2!1360 (tuple2!2699 lt!73529 lt!73526))))))

(assert (=> d!45307 (= lt!74596 (insertStrictlySorted!93 (toList!888 lt!73530) (_1!1360 (tuple2!2699 lt!73529 lt!73526)) (_2!1360 (tuple2!2699 lt!73529 lt!73526))))))

(assert (=> d!45307 (= (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526)) lt!74599)))

(declare-fun b!142483 () Bool)

(declare-fun res!67935 () Bool)

(assert (=> b!142483 (=> (not res!67935) (not e!92849))))

(assert (=> b!142483 (= res!67935 (= (getValueByKey!176 (toList!888 lt!74599) (_1!1360 (tuple2!2699 lt!73529 lt!73526))) (Some!181 (_2!1360 (tuple2!2699 lt!73529 lt!73526)))))))

(declare-fun b!142484 () Bool)

(assert (=> b!142484 (= e!92849 (contains!925 (toList!888 lt!74599) (tuple2!2699 lt!73529 lt!73526)))))

(assert (= (and d!45307 res!67934) b!142483))

(assert (= (and b!142483 res!67935) b!142484))

(declare-fun m!171585 () Bool)

(assert (=> d!45307 m!171585))

(declare-fun m!171587 () Bool)

(assert (=> d!45307 m!171587))

(declare-fun m!171589 () Bool)

(assert (=> d!45307 m!171589))

(declare-fun m!171591 () Bool)

(assert (=> d!45307 m!171591))

(declare-fun m!171593 () Bool)

(assert (=> b!142483 m!171593))

(declare-fun m!171595 () Bool)

(assert (=> b!142484 m!171595))

(assert (=> b!140267 d!45307))

(declare-fun d!45309 () Bool)

(declare-fun e!92850 () Bool)

(assert (=> d!45309 e!92850))

(declare-fun res!67936 () Bool)

(assert (=> d!45309 (=> res!67936 e!92850)))

(declare-fun lt!74602 () Bool)

(assert (=> d!45309 (= res!67936 (not lt!74602))))

(declare-fun lt!74600 () Bool)

(assert (=> d!45309 (= lt!74602 lt!74600)))

(declare-fun lt!74601 () Unit!4373)

(declare-fun e!92851 () Unit!4373)

(assert (=> d!45309 (= lt!74601 e!92851)))

(declare-fun c!26924 () Bool)

(assert (=> d!45309 (= c!26924 lt!74600)))

(assert (=> d!45309 (= lt!74600 (containsKey!180 (toList!888 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526))) lt!73525))))

(assert (=> d!45309 (= (contains!923 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526)) lt!73525) lt!74602)))

(declare-fun b!142485 () Bool)

(declare-fun lt!74603 () Unit!4373)

(assert (=> b!142485 (= e!92851 lt!74603)))

(assert (=> b!142485 (= lt!74603 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526))) lt!73525))))

(assert (=> b!142485 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526))) lt!73525))))

(declare-fun b!142486 () Bool)

(declare-fun Unit!4512 () Unit!4373)

(assert (=> b!142486 (= e!92851 Unit!4512)))

(declare-fun b!142487 () Bool)

(assert (=> b!142487 (= e!92850 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526))) lt!73525)))))

(assert (= (and d!45309 c!26924) b!142485))

(assert (= (and d!45309 (not c!26924)) b!142486))

(assert (= (and d!45309 (not res!67936)) b!142487))

(declare-fun m!171597 () Bool)

(assert (=> d!45309 m!171597))

(declare-fun m!171599 () Bool)

(assert (=> b!142485 m!171599))

(declare-fun m!171601 () Bool)

(assert (=> b!142485 m!171601))

(assert (=> b!142485 m!171601))

(declare-fun m!171603 () Bool)

(assert (=> b!142485 m!171603))

(assert (=> b!142487 m!171601))

(assert (=> b!142487 m!171601))

(assert (=> b!142487 m!171603))

(assert (=> b!140267 d!45309))

(declare-fun d!45311 () Bool)

(assert (=> d!45311 (not (contains!923 (+!179 lt!73530 (tuple2!2699 lt!73529 lt!73526)) lt!73525))))

(declare-fun lt!74604 () Unit!4373)

(assert (=> d!45311 (= lt!74604 (choose!866 lt!73530 lt!73529 lt!73526 lt!73525))))

(declare-fun e!92852 () Bool)

(assert (=> d!45311 e!92852))

(declare-fun res!67937 () Bool)

(assert (=> d!45311 (=> (not res!67937) (not e!92852))))

(assert (=> d!45311 (= res!67937 (not (contains!923 lt!73530 lt!73525)))))

(assert (=> d!45311 (= (addStillNotContains!64 lt!73530 lt!73529 lt!73526 lt!73525) lt!74604)))

(declare-fun b!142488 () Bool)

(assert (=> b!142488 (= e!92852 (not (= lt!73529 lt!73525)))))

(assert (= (and d!45311 res!67937) b!142488))

(assert (=> d!45311 m!167509))

(assert (=> d!45311 m!167509))

(assert (=> d!45311 m!167511))

(declare-fun m!171605 () Bool)

(assert (=> d!45311 m!171605))

(declare-fun m!171607 () Bool)

(assert (=> d!45311 m!171607))

(assert (=> b!140267 d!45311))

(assert (=> b!140476 d!43479))

(declare-fun d!45313 () Bool)

(assert (=> d!45313 (= (+!179 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!561 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!45313 true))

(declare-fun _$3!49 () Unit!4373)

(assert (=> d!45313 (= (choose!868 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) _$3!49)))

(declare-fun bs!6008 () Bool)

(assert (= bs!6008 d!45313))

(assert (=> bs!6008 m!166097))

(assert (=> bs!6008 m!166097))

(assert (=> bs!6008 m!166593))

(assert (=> bs!6008 m!166643))

(assert (=> bs!6008 m!166677))

(assert (=> bs!6008 m!166671))

(assert (=> d!43713 d!45313))

(assert (=> d!43713 d!43527))

(declare-fun d!45315 () Bool)

(assert (=> d!45315 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140240 d!45315))

(declare-fun d!45317 () Bool)

(assert (=> d!45317 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6009 () Bool)

(assert (= bs!6009 d!45317))

(assert (=> bs!6009 m!167225))

(declare-fun m!171609 () Bool)

(assert (=> bs!6009 m!171609))

(assert (=> b!140146 d!45317))

(declare-fun b!142492 () Bool)

(declare-fun e!92854 () Option!182)

(assert (=> b!142492 (= e!92854 None!180)))

(declare-fun b!142489 () Bool)

(declare-fun e!92853 () Option!182)

(assert (=> b!142489 (= e!92853 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73052)))))))

(declare-fun b!142490 () Bool)

(assert (=> b!142490 (= e!92853 e!92854)))

(declare-fun c!26926 () Bool)

(assert (=> b!142490 (= c!26926 (and ((_ is Cons!1741) (toList!888 lt!73052)) (not (= (_1!1360 (h!2348 (toList!888 lt!73052))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!45319 () Bool)

(declare-fun c!26925 () Bool)

(assert (=> d!45319 (= c!26925 (and ((_ is Cons!1741) (toList!888 lt!73052)) (= (_1!1360 (h!2348 (toList!888 lt!73052))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45319 (= (getValueByKey!176 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000) e!92853)))

(declare-fun b!142491 () Bool)

(assert (=> b!142491 (= e!92854 (getValueByKey!176 (t!6329 (toList!888 lt!73052)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45319 c!26925) b!142489))

(assert (= (and d!45319 (not c!26925)) b!142490))

(assert (= (and b!142490 c!26926) b!142491))

(assert (= (and b!142490 (not c!26926)) b!142492))

(declare-fun m!171611 () Bool)

(assert (=> b!142491 m!171611))

(assert (=> b!140146 d!45319))

(declare-fun d!45321 () Bool)

(assert (=> d!45321 (= (size!2591 (_2!1361 lt!72992)) (bvadd (_size!625 (_2!1361 lt!72992)) (bvsdiv (bvadd (extraKeys!2695 (_2!1361 lt!72992)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140285 d!45321))

(declare-fun b!142496 () Bool)

(declare-fun e!92856 () Option!182)

(assert (=> b!142496 (= e!92856 None!180)))

(declare-fun b!142493 () Bool)

(declare-fun e!92855 () Option!182)

(assert (=> b!142493 (= e!92855 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73016)))))))

(declare-fun b!142494 () Bool)

(assert (=> b!142494 (= e!92855 e!92856)))

(declare-fun c!26928 () Bool)

(assert (=> b!142494 (= c!26928 (and ((_ is Cons!1741) (t!6329 lt!73016)) (not (= (_1!1360 (h!2348 (t!6329 lt!73016))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!45323 () Bool)

(declare-fun c!26927 () Bool)

(assert (=> d!45323 (= c!26927 (and ((_ is Cons!1741) (t!6329 lt!73016)) (= (_1!1360 (h!2348 (t!6329 lt!73016))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45323 (= (getValueByKey!176 (t!6329 lt!73016) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92855)))

(declare-fun b!142495 () Bool)

(assert (=> b!142495 (= e!92856 (getValueByKey!176 (t!6329 (t!6329 lt!73016)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45323 c!26927) b!142493))

(assert (= (and d!45323 (not c!26927)) b!142494))

(assert (= (and b!142494 c!26928) b!142495))

(assert (= (and b!142494 (not c!26928)) b!142496))

(declare-fun m!171613 () Bool)

(assert (=> b!142495 m!171613))

(assert (=> b!140122 d!45323))

(declare-fun d!45325 () Bool)

(declare-fun res!67938 () Bool)

(declare-fun e!92857 () Bool)

(assert (=> d!45325 (=> res!67938 e!92857)))

(assert (=> d!45325 (= res!67938 (and ((_ is Cons!1741) (toList!888 lt!73023)) (= (_1!1360 (h!2348 (toList!888 lt!73023))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45325 (= (containsKey!180 (toList!888 lt!73023) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92857)))

(declare-fun b!142497 () Bool)

(declare-fun e!92858 () Bool)

(assert (=> b!142497 (= e!92857 e!92858)))

(declare-fun res!67939 () Bool)

(assert (=> b!142497 (=> (not res!67939) (not e!92858))))

(assert (=> b!142497 (= res!67939 (and (or (not ((_ is Cons!1741) (toList!888 lt!73023))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73023))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) (toList!888 lt!73023)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73023))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142498 () Bool)

(assert (=> b!142498 (= e!92858 (containsKey!180 (t!6329 (toList!888 lt!73023)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45325 (not res!67938)) b!142497))

(assert (= (and b!142497 res!67939) b!142498))

(declare-fun m!171615 () Bool)

(assert (=> b!142498 m!171615))

(assert (=> d!43949 d!45325))

(assert (=> d!43455 d!43453))

(declare-fun d!45327 () Bool)

(assert (=> d!45327 (= (getValueByKey!176 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!181 (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45327 true))

(declare-fun _$22!500 () Unit!4373)

(assert (=> d!45327 (= (choose!865 lt!73122 (_1!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite c!26064 (ite c!26071 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!500)))

(declare-fun bs!6010 () Bool)

(assert (= bs!6010 d!45327))

(assert (=> bs!6010 m!166501))

(assert (=> d!43455 d!45327))

(declare-fun d!45329 () Bool)

(declare-fun res!67940 () Bool)

(declare-fun e!92859 () Bool)

(assert (=> d!45329 (=> res!67940 e!92859)))

(assert (=> d!45329 (= res!67940 (or ((_ is Nil!1742) lt!73122) ((_ is Nil!1742) (t!6329 lt!73122))))))

(assert (=> d!45329 (= (isStrictlySorted!325 lt!73122) e!92859)))

(declare-fun b!142499 () Bool)

(declare-fun e!92860 () Bool)

(assert (=> b!142499 (= e!92859 e!92860)))

(declare-fun res!67941 () Bool)

(assert (=> b!142499 (=> (not res!67941) (not e!92860))))

(assert (=> b!142499 (= res!67941 (bvslt (_1!1360 (h!2348 lt!73122)) (_1!1360 (h!2348 (t!6329 lt!73122)))))))

(declare-fun b!142500 () Bool)

(assert (=> b!142500 (= e!92860 (isStrictlySorted!325 (t!6329 lt!73122)))))

(assert (= (and d!45329 (not res!67940)) b!142499))

(assert (= (and b!142499 res!67941) b!142500))

(declare-fun m!171617 () Bool)

(assert (=> b!142500 m!171617))

(assert (=> d!43455 d!45329))

(declare-fun c!26929 () Bool)

(declare-fun call!15760 () Bool)

(declare-fun bm!15757 () Bool)

(assert (=> bm!15757 (= call!15760 (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!72992)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26929 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26409 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26409 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) Nil!1743) Nil!1743))))))

(declare-fun b!142501 () Bool)

(declare-fun e!92864 () Bool)

(assert (=> b!142501 (= e!92864 call!15760)))

(declare-fun b!142503 () Bool)

(assert (=> b!142503 (= e!92864 call!15760)))

(declare-fun b!142504 () Bool)

(declare-fun e!92861 () Bool)

(declare-fun e!92862 () Bool)

(assert (=> b!142504 (= e!92861 e!92862)))

(declare-fun res!67943 () Bool)

(assert (=> b!142504 (=> (not res!67943) (not e!92862))))

(declare-fun e!92863 () Bool)

(assert (=> b!142504 (= res!67943 (not e!92863))))

(declare-fun res!67944 () Bool)

(assert (=> b!142504 (=> (not res!67944) (not e!92863))))

(assert (=> b!142504 (= res!67944 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142505 () Bool)

(assert (=> b!142505 (= e!92862 e!92864)))

(assert (=> b!142505 (= c!26929 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!45331 () Bool)

(declare-fun res!67942 () Bool)

(assert (=> d!45331 (=> res!67942 e!92861)))

(assert (=> d!45331 (= res!67942 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(assert (=> d!45331 (= (arrayNoDuplicates!0 (_keys!4699 (_2!1361 lt!72992)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26409 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) e!92861)))

(declare-fun b!142502 () Bool)

(assert (=> b!142502 (= e!92863 (contains!924 (ite c!26409 (Cons!1742 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) Nil!1743) Nil!1743) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!45331 (not res!67942)) b!142504))

(assert (= (and b!142504 res!67944) b!142502))

(assert (= (and b!142504 res!67943) b!142505))

(assert (= (and b!142505 c!26929) b!142501))

(assert (= (and b!142505 (not c!26929)) b!142503))

(assert (= (or b!142501 b!142503) bm!15757))

(assert (=> bm!15757 m!168755))

(declare-fun m!171619 () Bool)

(assert (=> bm!15757 m!171619))

(assert (=> b!142504 m!168755))

(assert (=> b!142504 m!168755))

(assert (=> b!142504 m!168757))

(assert (=> b!142505 m!168755))

(assert (=> b!142505 m!168755))

(assert (=> b!142505 m!168757))

(assert (=> b!142502 m!168755))

(assert (=> b!142502 m!168755))

(declare-fun m!171621 () Bool)

(assert (=> b!142502 m!171621))

(assert (=> bm!15640 d!45331))

(assert (=> d!43585 d!43579))

(assert (=> d!43585 d!43581))

(declare-fun d!45333 () Bool)

(assert (=> d!45333 (not (contains!923 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)) lt!73049))))

(assert (=> d!45333 true))

(declare-fun _$36!336 () Unit!4373)

(assert (=> d!45333 (= (choose!866 lt!73054 lt!73053 lt!73050 lt!73049) _$36!336)))

(declare-fun bs!6011 () Bool)

(assert (= bs!6011 d!45333))

(assert (=> bs!6011 m!166305))

(assert (=> bs!6011 m!166305))

(assert (=> bs!6011 m!166307))

(assert (=> d!43585 d!45333))

(declare-fun d!45335 () Bool)

(declare-fun e!92865 () Bool)

(assert (=> d!45335 e!92865))

(declare-fun res!67945 () Bool)

(assert (=> d!45335 (=> res!67945 e!92865)))

(declare-fun lt!74607 () Bool)

(assert (=> d!45335 (= res!67945 (not lt!74607))))

(declare-fun lt!74605 () Bool)

(assert (=> d!45335 (= lt!74607 lt!74605)))

(declare-fun lt!74606 () Unit!4373)

(declare-fun e!92866 () Unit!4373)

(assert (=> d!45335 (= lt!74606 e!92866)))

(declare-fun c!26930 () Bool)

(assert (=> d!45335 (= c!26930 lt!74605)))

(assert (=> d!45335 (= lt!74605 (containsKey!180 (toList!888 lt!73054) lt!73049))))

(assert (=> d!45335 (= (contains!923 lt!73054 lt!73049) lt!74607)))

(declare-fun b!142507 () Bool)

(declare-fun lt!74608 () Unit!4373)

(assert (=> b!142507 (= e!92866 lt!74608)))

(assert (=> b!142507 (= lt!74608 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73054) lt!73049))))

(assert (=> b!142507 (isDefined!129 (getValueByKey!176 (toList!888 lt!73054) lt!73049))))

(declare-fun b!142508 () Bool)

(declare-fun Unit!4513 () Unit!4373)

(assert (=> b!142508 (= e!92866 Unit!4513)))

(declare-fun b!142509 () Bool)

(assert (=> b!142509 (= e!92865 (isDefined!129 (getValueByKey!176 (toList!888 lt!73054) lt!73049)))))

(assert (= (and d!45335 c!26930) b!142507))

(assert (= (and d!45335 (not c!26930)) b!142508))

(assert (= (and d!45335 (not res!67945)) b!142509))

(declare-fun m!171623 () Bool)

(assert (=> d!45335 m!171623))

(declare-fun m!171625 () Bool)

(assert (=> b!142507 m!171625))

(declare-fun m!171627 () Bool)

(assert (=> b!142507 m!171627))

(assert (=> b!142507 m!171627))

(declare-fun m!171629 () Bool)

(assert (=> b!142507 m!171629))

(assert (=> b!142509 m!171627))

(assert (=> b!142509 m!171627))

(assert (=> b!142509 m!171629))

(assert (=> d!43585 d!45335))

(declare-fun d!45337 () Bool)

(assert (=> d!45337 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!6012 () Bool)

(assert (= bs!6012 d!45337))

(assert (=> bs!6012 m!166887))

(declare-fun m!171631 () Bool)

(assert (=> bs!6012 m!171631))

(assert (=> b!140004 d!45337))

(assert (=> b!140004 d!45113))

(declare-fun d!45339 () Bool)

(declare-fun res!67946 () Bool)

(declare-fun e!92867 () Bool)

(assert (=> d!45339 (=> res!67946 e!92867)))

(assert (=> d!45339 (= res!67946 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))))) lt!73049)))))

(assert (=> d!45339 (= (containsKey!180 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))) lt!73049) e!92867)))

(declare-fun b!142510 () Bool)

(declare-fun e!92868 () Bool)

(assert (=> b!142510 (= e!92867 e!92868)))

(declare-fun res!67947 () Bool)

(assert (=> b!142510 (=> (not res!67947) (not e!92868))))

(assert (=> b!142510 (= res!67947 (and (or (not ((_ is Cons!1741) (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))))) (bvsle (_1!1360 (h!2348 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))))) lt!73049)) ((_ is Cons!1741) (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))) (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050))))) lt!73049)))))

(declare-fun b!142511 () Bool)

(assert (=> b!142511 (= e!92868 (containsKey!180 (t!6329 (toList!888 (+!179 lt!73054 (tuple2!2699 lt!73053 lt!73050)))) lt!73049))))

(assert (= (and d!45339 (not res!67946)) b!142510))

(assert (= (and b!142510 res!67947) b!142511))

(declare-fun m!171633 () Bool)

(assert (=> b!142511 m!171633))

(assert (=> d!43579 d!45339))

(declare-fun b!142515 () Bool)

(declare-fun e!92870 () Option!182)

(assert (=> b!142515 (= e!92870 None!180)))

(declare-fun b!142512 () Bool)

(declare-fun e!92869 () Option!182)

(assert (=> b!142512 (= e!92869 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73019))))))))

(declare-fun b!142513 () Bool)

(assert (=> b!142513 (= e!92869 e!92870)))

(declare-fun c!26932 () Bool)

(assert (=> b!142513 (= c!26932 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73019))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73019)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26931 () Bool)

(declare-fun d!45341 () Bool)

(assert (=> d!45341 (= c!26931 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73019))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73019)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45341 (= (getValueByKey!176 (t!6329 (toList!888 lt!73019)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92869)))

(declare-fun b!142514 () Bool)

(assert (=> b!142514 (= e!92870 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73019))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45341 c!26931) b!142512))

(assert (= (and d!45341 (not c!26931)) b!142513))

(assert (= (and b!142513 c!26932) b!142514))

(assert (= (and b!142513 (not c!26932)) b!142515))

(declare-fun m!171635 () Bool)

(assert (=> b!142514 m!171635))

(assert (=> b!140142 d!45341))

(declare-fun d!45343 () Bool)

(declare-fun res!67948 () Bool)

(declare-fun e!92871 () Bool)

(assert (=> d!45343 (=> res!67948 e!92871)))

(assert (=> d!45343 (= res!67948 (and ((_ is Cons!1741) (toList!888 lt!72902)) (= (_1!1360 (h!2348 (toList!888 lt!72902))) lt!72903)))))

(assert (=> d!45343 (= (containsKey!180 (toList!888 lt!72902) lt!72903) e!92871)))

(declare-fun b!142516 () Bool)

(declare-fun e!92872 () Bool)

(assert (=> b!142516 (= e!92871 e!92872)))

(declare-fun res!67949 () Bool)

(assert (=> b!142516 (=> (not res!67949) (not e!92872))))

(assert (=> b!142516 (= res!67949 (and (or (not ((_ is Cons!1741) (toList!888 lt!72902))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72902))) lt!72903)) ((_ is Cons!1741) (toList!888 lt!72902)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72902))) lt!72903)))))

(declare-fun b!142517 () Bool)

(assert (=> b!142517 (= e!92872 (containsKey!180 (t!6329 (toList!888 lt!72902)) lt!72903))))

(assert (= (and d!45343 (not res!67948)) b!142516))

(assert (= (and b!142516 res!67949) b!142517))

(declare-fun m!171637 () Bool)

(assert (=> b!142517 m!171637))

(assert (=> d!43681 d!45343))

(declare-fun b!142521 () Bool)

(declare-fun e!92874 () Option!182)

(assert (=> b!142521 (= e!92874 None!180)))

(declare-fun b!142518 () Bool)

(declare-fun e!92873 () Option!182)

(assert (=> b!142518 (= e!92873 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73773)))))))

(declare-fun b!142519 () Bool)

(assert (=> b!142519 (= e!92873 e!92874)))

(declare-fun c!26934 () Bool)

(assert (=> b!142519 (= c!26934 (and ((_ is Cons!1741) (toList!888 lt!73773)) (not (= (_1!1360 (h!2348 (toList!888 lt!73773))) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26933 () Bool)

(declare-fun d!45345 () Bool)

(assert (=> d!45345 (= c!26933 (and ((_ is Cons!1741) (toList!888 lt!73773)) (= (_1!1360 (h!2348 (toList!888 lt!73773))) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45345 (= (getValueByKey!176 (toList!888 lt!73773) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) e!92873)))

(declare-fun b!142520 () Bool)

(assert (=> b!142520 (= e!92874 (getValueByKey!176 (t!6329 (toList!888 lt!73773)) (_1!1360 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45345 c!26933) b!142518))

(assert (= (and d!45345 (not c!26933)) b!142519))

(assert (= (and b!142519 c!26934) b!142520))

(assert (= (and b!142519 (not c!26934)) b!142521))

(declare-fun m!171639 () Bool)

(assert (=> b!142520 m!171639))

(assert (=> b!140657 d!45345))

(declare-fun d!45347 () Bool)

(declare-fun c!26935 () Bool)

(assert (=> d!45347 (= c!26935 ((_ is Nil!1742) (toList!888 lt!73023)))))

(declare-fun e!92875 () (InoxSet tuple2!2698))

(assert (=> d!45347 (= (content!138 (toList!888 lt!73023)) e!92875)))

(declare-fun b!142522 () Bool)

(assert (=> b!142522 (= e!92875 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!142523 () Bool)

(assert (=> b!142523 (= e!92875 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73023)) true) (content!138 (t!6329 (toList!888 lt!73023)))))))

(assert (= (and d!45347 c!26935) b!142522))

(assert (= (and d!45347 (not c!26935)) b!142523))

(declare-fun m!171641 () Bool)

(assert (=> b!142523 m!171641))

(assert (=> b!142523 m!170691))

(assert (=> d!43995 d!45347))

(declare-fun d!45349 () Bool)

(assert (=> d!45349 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!73139)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!73139)))))

(assert (=> d!43499 d!45349))

(declare-fun b!142527 () Bool)

(declare-fun e!92877 () Option!182)

(assert (=> b!142527 (= e!92877 None!180)))

(declare-fun e!92876 () Option!182)

(declare-fun b!142524 () Bool)

(assert (=> b!142524 (= e!92876 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))))

(declare-fun b!142525 () Bool)

(assert (=> b!142525 (= e!92876 e!92877)))

(declare-fun c!26937 () Bool)

(assert (=> b!142525 (= c!26937 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))) lt!73139))))))

(declare-fun d!45351 () Bool)

(declare-fun c!26936 () Bool)

(assert (=> d!45351 (= c!26936 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))) lt!73139)))))

(assert (=> d!45351 (= (getValueByKey!176 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) lt!73139) e!92876)))

(declare-fun b!142526 () Bool)

(assert (=> b!142526 (= e!92877 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73138 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))) lt!73139))))

(assert (= (and d!45351 c!26936) b!142524))

(assert (= (and d!45351 (not c!26936)) b!142525))

(assert (= (and b!142525 c!26937) b!142526))

(assert (= (and b!142525 (not c!26937)) b!142527))

(declare-fun m!171643 () Bool)

(assert (=> b!142526 m!171643))

(assert (=> d!43499 d!45351))

(declare-fun d!45353 () Bool)

(assert (=> d!45353 (= (apply!120 lt!73729 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73729) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6013 () Bool)

(assert (= bs!6013 d!45353))

(assert (=> bs!6013 m!166385))

(assert (=> bs!6013 m!169927))

(assert (=> bs!6013 m!169927))

(declare-fun m!171645 () Bool)

(assert (=> bs!6013 m!171645))

(assert (=> b!140587 d!45353))

(assert (=> b!140587 d!43893))

(declare-fun d!45355 () Bool)

(assert (=> d!45355 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!73287)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!73287)))))

(assert (=> d!43843 d!45355))

(declare-fun b!142531 () Bool)

(declare-fun e!92879 () Option!182)

(assert (=> b!142531 (= e!92879 None!180)))

(declare-fun e!92878 () Option!182)

(declare-fun b!142528 () Bool)

(assert (=> b!142528 (= e!92878 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))))))

(declare-fun b!142529 () Bool)

(assert (=> b!142529 (= e!92878 e!92879)))

(declare-fun c!26939 () Bool)

(assert (=> b!142529 (= c!26939 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))) lt!73287))))))

(declare-fun c!26938 () Bool)

(declare-fun d!45357 () Bool)

(assert (=> d!45357 (= c!26938 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))))) lt!73287)))))

(assert (=> d!45357 (= (getValueByKey!176 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16)))) lt!73287) e!92878)))

(declare-fun b!142530 () Bool)

(assert (=> b!142530 (= e!92879 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73286 (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))) lt!73287))))

(assert (= (and d!45357 c!26938) b!142528))

(assert (= (and d!45357 (not c!26938)) b!142529))

(assert (= (and b!142529 c!26939) b!142530))

(assert (= (and b!142529 (not c!26939)) b!142531))

(declare-fun m!171647 () Bool)

(assert (=> b!142530 m!171647))

(assert (=> d!43843 d!45357))

(declare-fun d!45359 () Bool)

(declare-fun res!67950 () Bool)

(declare-fun e!92880 () Bool)

(assert (=> d!45359 (=> res!67950 e!92880)))

(assert (=> d!45359 (= res!67950 (and ((_ is Cons!1741) (toList!888 lt!72887)) (= (_1!1360 (h!2348 (toList!888 lt!72887))) lt!72888)))))

(assert (=> d!45359 (= (containsKey!180 (toList!888 lt!72887) lt!72888) e!92880)))

(declare-fun b!142532 () Bool)

(declare-fun e!92881 () Bool)

(assert (=> b!142532 (= e!92880 e!92881)))

(declare-fun res!67951 () Bool)

(assert (=> b!142532 (=> (not res!67951) (not e!92881))))

(assert (=> b!142532 (= res!67951 (and (or (not ((_ is Cons!1741) (toList!888 lt!72887))) (bvsle (_1!1360 (h!2348 (toList!888 lt!72887))) lt!72888)) ((_ is Cons!1741) (toList!888 lt!72887)) (bvslt (_1!1360 (h!2348 (toList!888 lt!72887))) lt!72888)))))

(declare-fun b!142533 () Bool)

(assert (=> b!142533 (= e!92881 (containsKey!180 (t!6329 (toList!888 lt!72887)) lt!72888))))

(assert (= (and d!45359 (not res!67950)) b!142532))

(assert (= (and b!142532 res!67951) b!142533))

(declare-fun m!171649 () Bool)

(assert (=> b!142533 m!171649))

(assert (=> d!43485 d!45359))

(declare-fun b!142537 () Bool)

(declare-fun e!92883 () Option!182)

(assert (=> b!142537 (= e!92883 None!180)))

(declare-fun b!142534 () Bool)

(declare-fun e!92882 () Option!182)

(assert (=> b!142534 (= e!92882 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73514)))))))

(declare-fun b!142535 () Bool)

(assert (=> b!142535 (= e!92882 e!92883)))

(declare-fun c!26941 () Bool)

(assert (=> b!142535 (= c!26941 (and ((_ is Cons!1741) (toList!888 lt!73514)) (not (= (_1!1360 (h!2348 (toList!888 lt!73514))) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))))

(declare-fun d!45361 () Bool)

(declare-fun c!26940 () Bool)

(assert (=> d!45361 (= c!26940 (and ((_ is Cons!1741) (toList!888 lt!73514)) (= (_1!1360 (h!2348 (toList!888 lt!73514))) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))))

(assert (=> d!45361 (= (getValueByKey!176 (toList!888 lt!73514) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))) e!92882)))

(declare-fun b!142536 () Bool)

(assert (=> b!142536 (= e!92883 (getValueByKey!176 (t!6329 (toList!888 lt!73514)) (_1!1360 (tuple2!2699 lt!73326 (minValue!2790 newMap!16)))))))

(assert (= (and d!45361 c!26940) b!142534))

(assert (= (and d!45361 (not c!26940)) b!142535))

(assert (= (and b!142535 c!26941) b!142536))

(assert (= (and b!142535 (not c!26941)) b!142537))

(declare-fun m!171651 () Bool)

(assert (=> b!142536 m!171651))

(assert (=> b!140260 d!45361))

(declare-fun d!45363 () Bool)

(declare-fun res!67952 () Bool)

(declare-fun e!92884 () Bool)

(assert (=> d!45363 (=> res!67952 e!92884)))

(assert (=> d!45363 (= res!67952 (and ((_ is Cons!1741) lt!73064) (= (_1!1360 (h!2348 lt!73064)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45363 (= (containsKey!180 lt!73064 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!92884)))

(declare-fun b!142538 () Bool)

(declare-fun e!92885 () Bool)

(assert (=> b!142538 (= e!92884 e!92885)))

(declare-fun res!67953 () Bool)

(assert (=> b!142538 (=> (not res!67953) (not e!92885))))

(assert (=> b!142538 (= res!67953 (and (or (not ((_ is Cons!1741) lt!73064)) (bvsle (_1!1360 (h!2348 lt!73064)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) lt!73064) (bvslt (_1!1360 (h!2348 lt!73064)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142539 () Bool)

(assert (=> b!142539 (= e!92885 (containsKey!180 (t!6329 lt!73064) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45363 (not res!67952)) b!142538))

(assert (= (and b!142538 res!67953) b!142539))

(declare-fun m!171653 () Bool)

(assert (=> b!142539 m!171653))

(assert (=> b!140294 d!45363))

(assert (=> d!43873 d!43527))

(declare-fun d!45365 () Bool)

(assert (=> d!45365 (= (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!73086)) (v!3284 (getValueByKey!176 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!73086)))))

(assert (=> d!43905 d!45365))

(declare-fun b!142543 () Bool)

(declare-fun e!92887 () Option!182)

(assert (=> b!142543 (= e!92887 None!180)))

(declare-fun e!92886 () Option!182)

(declare-fun b!142540 () Bool)

(assert (=> b!142540 (= e!92886 (Some!181 (_2!1360 (h!2348 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))))

(declare-fun b!142541 () Bool)

(assert (=> b!142541 (= e!92886 e!92887)))

(declare-fun c!26943 () Bool)

(assert (=> b!142541 (= c!26943 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))) (not (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))) lt!73086))))))

(declare-fun d!45367 () Bool)

(declare-fun c!26942 () Bool)

(assert (=> d!45367 (= c!26942 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))) lt!73086)))))

(assert (=> d!45367 (= (getValueByKey!176 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) lt!73086) e!92886)))

(declare-fun b!142542 () Bool)

(assert (=> b!142542 (= e!92887 (getValueByKey!176 (t!6329 (toList!888 (+!179 lt!73091 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))) lt!73086))))

(assert (= (and d!45367 c!26942) b!142540))

(assert (= (and d!45367 (not c!26942)) b!142541))

(assert (= (and b!142541 c!26943) b!142542))

(assert (= (and b!142541 (not c!26943)) b!142543))

(declare-fun m!171655 () Bool)

(assert (=> b!142542 m!171655))

(assert (=> d!43905 d!45367))

(declare-fun d!45369 () Bool)

(assert (=> d!45369 (= (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2587 (_keys!4699 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!45369 true))

(declare-fun _$84!15 () Unit!4373)

(assert (=> d!45369 (= (choose!1 (_keys!4699 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) _$84!15)))

(declare-fun bs!6014 () Bool)

(assert (= bs!6014 d!45369))

(assert (=> bs!6014 m!166671))

(assert (=> bs!6014 m!166653))

(assert (=> bs!6014 m!166091))

(assert (=> d!43729 d!45369))

(assert (=> b!140705 d!43479))

(declare-fun d!45371 () Bool)

(assert (=> d!45371 (= (isEmpty!418 (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!181) (getValueByKey!176 (toList!888 lt!72907) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43575 d!45371))

(declare-fun d!45373 () Bool)

(assert (=> d!45373 (isDefined!129 (getValueByKey!176 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74609 () Unit!4373)

(assert (=> d!45373 (= lt!74609 (choose!864 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92888 () Bool)

(assert (=> d!45373 e!92888))

(declare-fun res!67954 () Bool)

(assert (=> d!45373 (=> (not res!67954) (not e!92888))))

(assert (=> d!45373 (= res!67954 (isStrictlySorted!325 (toList!888 lt!73019)))))

(assert (=> d!45373 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74609)))

(declare-fun b!142544 () Bool)

(assert (=> b!142544 (= e!92888 (containsKey!180 (toList!888 lt!73019) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45373 res!67954) b!142544))

(assert (=> d!45373 m!166253))

(assert (=> d!45373 m!166253))

(assert (=> d!45373 m!167193))

(declare-fun m!171657 () Bool)

(assert (=> d!45373 m!171657))

(declare-fun m!171659 () Bool)

(assert (=> d!45373 m!171659))

(assert (=> b!142544 m!167189))

(assert (=> b!140117 d!45373))

(assert (=> b!140117 d!45163))

(assert (=> b!140117 d!43553))

(declare-fun d!45375 () Bool)

(assert (=> d!45375 (= (isEmpty!417 lt!73406) (isEmpty!419 (toList!888 lt!73406)))))

(declare-fun bs!6015 () Bool)

(assert (= bs!6015 d!45375))

(declare-fun m!171661 () Bool)

(assert (=> bs!6015 m!171661))

(assert (=> b!140086 d!45375))

(declare-fun d!45377 () Bool)

(declare-fun e!92889 () Bool)

(assert (=> d!45377 e!92889))

(declare-fun res!67955 () Bool)

(assert (=> d!45377 (=> res!67955 e!92889)))

(declare-fun lt!74612 () Bool)

(assert (=> d!45377 (= res!67955 (not lt!74612))))

(declare-fun lt!74610 () Bool)

(assert (=> d!45377 (= lt!74612 lt!74610)))

(declare-fun lt!74611 () Unit!4373)

(declare-fun e!92890 () Unit!4373)

(assert (=> d!45377 (= lt!74611 e!92890)))

(declare-fun c!26944 () Bool)

(assert (=> d!45377 (= c!26944 lt!74610)))

(assert (=> d!45377 (= lt!74610 (containsKey!180 (toList!888 lt!73680) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45377 (= (contains!923 lt!73680 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74612)))

(declare-fun b!142545 () Bool)

(declare-fun lt!74613 () Unit!4373)

(assert (=> b!142545 (= e!92890 lt!74613)))

(assert (=> b!142545 (= lt!74613 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73680) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142545 (isDefined!129 (getValueByKey!176 (toList!888 lt!73680) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142546 () Bool)

(declare-fun Unit!4514 () Unit!4373)

(assert (=> b!142546 (= e!92890 Unit!4514)))

(declare-fun b!142547 () Bool)

(assert (=> b!142547 (= e!92889 (isDefined!129 (getValueByKey!176 (toList!888 lt!73680) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45377 c!26944) b!142545))

(assert (= (and d!45377 (not c!26944)) b!142546))

(assert (= (and d!45377 (not res!67955)) b!142547))

(declare-fun m!171663 () Bool)

(assert (=> d!45377 m!171663))

(declare-fun m!171665 () Bool)

(assert (=> b!142545 m!171665))

(assert (=> b!142545 m!169449))

(assert (=> b!142545 m!169449))

(declare-fun m!171667 () Bool)

(assert (=> b!142545 m!171667))

(assert (=> b!142547 m!169449))

(assert (=> b!142547 m!169449))

(assert (=> b!142547 m!171667))

(assert (=> bm!15608 d!45377))

(assert (=> b!140029 d!44797))

(declare-fun d!45379 () Bool)

(declare-fun e!92891 () Bool)

(assert (=> d!45379 e!92891))

(declare-fun res!67956 () Bool)

(assert (=> d!45379 (=> res!67956 e!92891)))

(declare-fun lt!74616 () Bool)

(assert (=> d!45379 (= res!67956 (not lt!74616))))

(declare-fun lt!74614 () Bool)

(assert (=> d!45379 (= lt!74616 lt!74614)))

(declare-fun lt!74615 () Unit!4373)

(declare-fun e!92892 () Unit!4373)

(assert (=> d!45379 (= lt!74615 e!92892)))

(declare-fun c!26945 () Bool)

(assert (=> d!45379 (= c!26945 lt!74614)))

(assert (=> d!45379 (= lt!74614 (containsKey!180 (toList!888 lt!73650) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!45379 (= (contains!923 lt!73650 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) lt!74616)))

(declare-fun b!142548 () Bool)

(declare-fun lt!74617 () Unit!4373)

(assert (=> b!142548 (= e!92892 lt!74617)))

(assert (=> b!142548 (= lt!74617 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73650) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!142548 (isDefined!129 (getValueByKey!176 (toList!888 lt!73650) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!142549 () Bool)

(declare-fun Unit!4515 () Unit!4373)

(assert (=> b!142549 (= e!92892 Unit!4515)))

(declare-fun b!142550 () Bool)

(assert (=> b!142550 (= e!92891 (isDefined!129 (getValueByKey!176 (toList!888 lt!73650) (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!45379 c!26945) b!142548))

(assert (= (and d!45379 (not c!26945)) b!142549))

(assert (= (and d!45379 (not res!67956)) b!142550))

(assert (=> d!45379 m!167709))

(declare-fun m!171669 () Bool)

(assert (=> d!45379 m!171669))

(assert (=> b!142548 m!167709))

(declare-fun m!171671 () Bool)

(assert (=> b!142548 m!171671))

(assert (=> b!142548 m!167709))

(assert (=> b!142548 m!171471))

(assert (=> b!142548 m!171471))

(declare-fun m!171673 () Bool)

(assert (=> b!142548 m!171673))

(assert (=> b!142550 m!167709))

(assert (=> b!142550 m!171471))

(assert (=> b!142550 m!171471))

(assert (=> b!142550 m!171673))

(assert (=> b!140446 d!45379))

(declare-fun d!45381 () Bool)

(assert (=> d!45381 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6016 () Bool)

(assert (= bs!6016 d!45381))

(assert (=> bs!6016 m!167531))

(declare-fun m!171675 () Bool)

(assert (=> bs!6016 m!171675))

(assert (=> b!140832 d!45381))

(assert (=> b!140832 d!44847))

(declare-fun d!45383 () Bool)

(assert (=> d!45383 (arrayContainsKey!0 (_keys!4699 (_2!1361 lt!72992)) lt!73867 #b00000000000000000000000000000000)))

(declare-fun lt!74618 () Unit!4373)

(assert (=> d!45383 (= lt!74618 (choose!13 (_keys!4699 (_2!1361 lt!72992)) lt!73867 #b00000000000000000000000000000000))))

(assert (=> d!45383 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!45383 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1361 lt!72992)) lt!73867 #b00000000000000000000000000000000) lt!74618)))

(declare-fun bs!6017 () Bool)

(assert (= bs!6017 d!45383))

(assert (=> bs!6017 m!168555))

(declare-fun m!171677 () Bool)

(assert (=> bs!6017 m!171677))

(assert (=> b!140755 d!45383))

(declare-fun d!45385 () Bool)

(declare-fun res!67957 () Bool)

(declare-fun e!92893 () Bool)

(assert (=> d!45385 (=> res!67957 e!92893)))

(assert (=> d!45385 (= res!67957 (= (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) lt!73867))))

(assert (=> d!45385 (= (arrayContainsKey!0 (_keys!4699 (_2!1361 lt!72992)) lt!73867 #b00000000000000000000000000000000) e!92893)))

(declare-fun b!142551 () Bool)

(declare-fun e!92894 () Bool)

(assert (=> b!142551 (= e!92893 e!92894)))

(declare-fun res!67958 () Bool)

(assert (=> b!142551 (=> (not res!67958) (not e!92894))))

(assert (=> b!142551 (= res!67958 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))))

(declare-fun b!142552 () Bool)

(assert (=> b!142552 (= e!92894 (arrayContainsKey!0 (_keys!4699 (_2!1361 lt!72992)) lt!73867 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!45385 (not res!67957)) b!142551))

(assert (= (and b!142551 res!67958) b!142552))

(assert (=> d!45385 m!168127))

(declare-fun m!171679 () Bool)

(assert (=> b!142552 m!171679))

(assert (=> b!140755 d!45385))

(declare-fun b!142553 () Bool)

(declare-fun c!26946 () Bool)

(declare-fun lt!74621 () (_ BitVec 64))

(assert (=> b!142553 (= c!26946 (= lt!74621 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92897 () SeekEntryResult!279)

(declare-fun e!92895 () SeekEntryResult!279)

(assert (=> b!142553 (= e!92897 e!92895)))

(declare-fun d!45387 () Bool)

(declare-fun lt!74620 () SeekEntryResult!279)

(assert (=> d!45387 (and (or ((_ is Undefined!279) lt!74620) (not ((_ is Found!279) lt!74620)) (and (bvsge (index!3280 lt!74620) #b00000000000000000000000000000000) (bvslt (index!3280 lt!74620) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))) (or ((_ is Undefined!279) lt!74620) ((_ is Found!279) lt!74620) (not ((_ is MissingZero!279) lt!74620)) (and (bvsge (index!3279 lt!74620) #b00000000000000000000000000000000) (bvslt (index!3279 lt!74620) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))) (or ((_ is Undefined!279) lt!74620) ((_ is Found!279) lt!74620) ((_ is MissingZero!279) lt!74620) (not ((_ is MissingVacant!279) lt!74620)) (and (bvsge (index!3282 lt!74620) #b00000000000000000000000000000000) (bvslt (index!3282 lt!74620) (size!2587 (_keys!4699 (_2!1361 lt!72992)))))) (or ((_ is Undefined!279) lt!74620) (ite ((_ is Found!279) lt!74620) (= (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (index!3280 lt!74620)) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!279) lt!74620) (= (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (index!3279 lt!74620)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!74620) (= (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (index!3282 lt!74620)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92896 () SeekEntryResult!279)

(assert (=> d!45387 (= lt!74620 e!92896)))

(declare-fun c!26948 () Bool)

(declare-fun lt!74619 () SeekEntryResult!279)

(assert (=> d!45387 (= c!26948 (and ((_ is Intermediate!279) lt!74619) (undefined!1091 lt!74619)))))

(assert (=> d!45387 (= lt!74619 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) (mask!7280 (_2!1361 lt!72992))) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))))))

(assert (=> d!45387 (validMask!0 (mask!7280 (_2!1361 lt!72992)))))

(assert (=> d!45387 (= (seekEntryOrOpen!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))) lt!74620)))

(declare-fun b!142554 () Bool)

(assert (=> b!142554 (= e!92896 Undefined!279)))

(declare-fun b!142555 () Bool)

(assert (=> b!142555 (= e!92897 (Found!279 (index!3281 lt!74619)))))

(declare-fun b!142556 () Bool)

(assert (=> b!142556 (= e!92896 e!92897)))

(assert (=> b!142556 (= lt!74621 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) (index!3281 lt!74619)))))

(declare-fun c!26947 () Bool)

(assert (=> b!142556 (= c!26947 (= lt!74621 (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000)))))

(declare-fun b!142557 () Bool)

(assert (=> b!142557 (= e!92895 (seekKeyOrZeroReturnVacant!0 (x!16136 lt!74619) (index!3281 lt!74619) (index!3281 lt!74619) (select (arr!2315 (_keys!4699 (_2!1361 lt!72992))) #b00000000000000000000000000000000) (_keys!4699 (_2!1361 lt!72992)) (mask!7280 (_2!1361 lt!72992))))))

(declare-fun b!142558 () Bool)

(assert (=> b!142558 (= e!92895 (MissingZero!279 (index!3281 lt!74619)))))

(assert (= (and d!45387 c!26948) b!142554))

(assert (= (and d!45387 (not c!26948)) b!142556))

(assert (= (and b!142556 c!26947) b!142555))

(assert (= (and b!142556 (not c!26947)) b!142553))

(assert (= (and b!142553 c!26946) b!142558))

(assert (= (and b!142553 (not c!26946)) b!142557))

(assert (=> d!45387 m!168127))

(declare-fun m!171681 () Bool)

(assert (=> d!45387 m!171681))

(assert (=> d!45387 m!167529))

(declare-fun m!171683 () Bool)

(assert (=> d!45387 m!171683))

(declare-fun m!171685 () Bool)

(assert (=> d!45387 m!171685))

(declare-fun m!171687 () Bool)

(assert (=> d!45387 m!171687))

(assert (=> d!45387 m!171681))

(assert (=> d!45387 m!168127))

(declare-fun m!171689 () Bool)

(assert (=> d!45387 m!171689))

(declare-fun m!171691 () Bool)

(assert (=> b!142556 m!171691))

(assert (=> b!142557 m!168127))

(declare-fun m!171693 () Bool)

(assert (=> b!142557 m!171693))

(assert (=> b!140755 d!45387))

(declare-fun d!45389 () Bool)

(declare-fun res!67959 () Bool)

(declare-fun e!92898 () Bool)

(assert (=> d!45389 (=> res!67959 e!92898)))

(assert (=> d!45389 (= res!67959 (or ((_ is Nil!1742) (t!6329 (toList!888 lt!72825))) ((_ is Nil!1742) (t!6329 (t!6329 (toList!888 lt!72825))))))))

(assert (=> d!45389 (= (isStrictlySorted!325 (t!6329 (toList!888 lt!72825))) e!92898)))

(declare-fun b!142559 () Bool)

(declare-fun e!92899 () Bool)

(assert (=> b!142559 (= e!92898 e!92899)))

(declare-fun res!67960 () Bool)

(assert (=> b!142559 (=> (not res!67960) (not e!92899))))

(assert (=> b!142559 (= res!67960 (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72825)))) (_1!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825)))))))))

(declare-fun b!142560 () Bool)

(assert (=> b!142560 (= e!92899 (isStrictlySorted!325 (t!6329 (t!6329 (toList!888 lt!72825)))))))

(assert (= (and d!45389 (not res!67959)) b!142559))

(assert (= (and b!142559 res!67960) b!142560))

(declare-fun m!171695 () Bool)

(assert (=> b!142560 m!171695))

(assert (=> b!140533 d!45389))

(declare-fun d!45391 () Bool)

(declare-fun e!92900 () Bool)

(assert (=> d!45391 e!92900))

(declare-fun res!67961 () Bool)

(assert (=> d!45391 (=> res!67961 e!92900)))

(declare-fun lt!74624 () Bool)

(assert (=> d!45391 (= res!67961 (not lt!74624))))

(declare-fun lt!74622 () Bool)

(assert (=> d!45391 (= lt!74624 lt!74622)))

(declare-fun lt!74623 () Unit!4373)

(declare-fun e!92901 () Unit!4373)

(assert (=> d!45391 (= lt!74623 e!92901)))

(declare-fun c!26949 () Bool)

(assert (=> d!45391 (= c!26949 lt!74622)))

(assert (=> d!45391 (= lt!74622 (containsKey!180 (toList!888 lt!73557) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45391 (= (contains!923 lt!73557 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74624)))

(declare-fun b!142561 () Bool)

(declare-fun lt!74625 () Unit!4373)

(assert (=> b!142561 (= e!92901 lt!74625)))

(assert (=> b!142561 (= lt!74625 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73557) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142561 (isDefined!129 (getValueByKey!176 (toList!888 lt!73557) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142562 () Bool)

(declare-fun Unit!4516 () Unit!4373)

(assert (=> b!142562 (= e!92901 Unit!4516)))

(declare-fun b!142563 () Bool)

(assert (=> b!142563 (= e!92900 (isDefined!129 (getValueByKey!176 (toList!888 lt!73557) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45391 c!26949) b!142561))

(assert (= (and d!45391 (not c!26949)) b!142562))

(assert (= (and d!45391 (not res!67961)) b!142563))

(declare-fun m!171697 () Bool)

(assert (=> d!45391 m!171697))

(declare-fun m!171699 () Bool)

(assert (=> b!142561 m!171699))

(assert (=> b!142561 m!167623))

(assert (=> b!142561 m!167623))

(declare-fun m!171701 () Bool)

(assert (=> b!142561 m!171701))

(assert (=> b!142563 m!167623))

(assert (=> b!142563 m!167623))

(assert (=> b!142563 m!171701))

(assert (=> d!43675 d!45391))

(declare-fun b!142567 () Bool)

(declare-fun e!92903 () Option!182)

(assert (=> b!142567 (= e!92903 None!180)))

(declare-fun b!142564 () Bool)

(declare-fun e!92902 () Option!182)

(assert (=> b!142564 (= e!92902 (Some!181 (_2!1360 (h!2348 lt!73554))))))

(declare-fun b!142565 () Bool)

(assert (=> b!142565 (= e!92902 e!92903)))

(declare-fun c!26951 () Bool)

(assert (=> b!142565 (= c!26951 (and ((_ is Cons!1741) lt!73554) (not (= (_1!1360 (h!2348 lt!73554)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!45393 () Bool)

(declare-fun c!26950 () Bool)

(assert (=> d!45393 (= c!26950 (and ((_ is Cons!1741) lt!73554) (= (_1!1360 (h!2348 lt!73554)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45393 (= (getValueByKey!176 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92902)))

(declare-fun b!142566 () Bool)

(assert (=> b!142566 (= e!92903 (getValueByKey!176 (t!6329 lt!73554) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45393 c!26950) b!142564))

(assert (= (and d!45393 (not c!26950)) b!142565))

(assert (= (and b!142565 c!26951) b!142566))

(assert (= (and b!142565 (not c!26951)) b!142567))

(declare-fun m!171703 () Bool)

(assert (=> b!142566 m!171703))

(assert (=> d!43675 d!45393))

(declare-fun d!45395 () Bool)

(assert (=> d!45395 (= (getValueByKey!176 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74626 () Unit!4373)

(assert (=> d!45395 (= lt!74626 (choose!865 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92904 () Bool)

(assert (=> d!45395 e!92904))

(declare-fun res!67962 () Bool)

(assert (=> d!45395 (=> (not res!67962) (not e!92904))))

(assert (=> d!45395 (= res!67962 (isStrictlySorted!325 lt!73554))))

(assert (=> d!45395 (= (lemmaContainsTupThenGetReturnValue!90 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74626)))

(declare-fun b!142568 () Bool)

(declare-fun res!67963 () Bool)

(assert (=> b!142568 (=> (not res!67963) (not e!92904))))

(assert (=> b!142568 (= res!67963 (containsKey!180 lt!73554 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142569 () Bool)

(assert (=> b!142569 (= e!92904 (contains!925 lt!73554 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45395 res!67962) b!142568))

(assert (= (and b!142568 res!67963) b!142569))

(assert (=> d!45395 m!167617))

(declare-fun m!171705 () Bool)

(assert (=> d!45395 m!171705))

(declare-fun m!171707 () Bool)

(assert (=> d!45395 m!171707))

(declare-fun m!171709 () Bool)

(assert (=> b!142568 m!171709))

(declare-fun m!171711 () Bool)

(assert (=> b!142569 m!171711))

(assert (=> d!43675 d!45395))

(declare-fun b!142570 () Bool)

(declare-fun e!92905 () List!1745)

(declare-fun call!15763 () List!1745)

(assert (=> b!142570 (= e!92905 call!15763)))

(declare-fun bm!15758 () Bool)

(declare-fun call!15761 () List!1745)

(assert (=> bm!15758 (= call!15763 call!15761)))

(declare-fun d!45397 () Bool)

(declare-fun e!92909 () Bool)

(assert (=> d!45397 e!92909))

(declare-fun res!67964 () Bool)

(assert (=> d!45397 (=> (not res!67964) (not e!92909))))

(declare-fun lt!74627 () List!1745)

(assert (=> d!45397 (= res!67964 (isStrictlySorted!325 lt!74627))))

(declare-fun e!92906 () List!1745)

(assert (=> d!45397 (= lt!74627 e!92906)))

(declare-fun c!26954 () Bool)

(assert (=> d!45397 (= c!26954 (and ((_ is Cons!1741) (toList!888 (map!1442 newMap!16))) (bvslt (_1!1360 (h!2348 (toList!888 (map!1442 newMap!16)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45397 (isStrictlySorted!325 (toList!888 (map!1442 newMap!16)))))

(assert (=> d!45397 (= (insertStrictlySorted!93 (toList!888 (map!1442 newMap!16)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74627)))

(declare-fun bm!15759 () Bool)

(declare-fun call!15762 () List!1745)

(assert (=> bm!15759 (= call!15761 call!15762)))

(declare-fun b!142571 () Bool)

(declare-fun e!92907 () List!1745)

(assert (=> b!142571 (= e!92906 e!92907)))

(declare-fun c!26953 () Bool)

(assert (=> b!142571 (= c!26953 (and ((_ is Cons!1741) (toList!888 (map!1442 newMap!16))) (= (_1!1360 (h!2348 (toList!888 (map!1442 newMap!16)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142572 () Bool)

(assert (=> b!142572 (= e!92906 call!15762)))

(declare-fun bm!15760 () Bool)

(declare-fun e!92908 () List!1745)

(assert (=> bm!15760 (= call!15762 ($colon$colon!94 e!92908 (ite c!26954 (h!2348 (toList!888 (map!1442 newMap!16))) (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26952 () Bool)

(assert (=> bm!15760 (= c!26952 c!26954)))

(declare-fun c!26955 () Bool)

(declare-fun b!142573 () Bool)

(assert (=> b!142573 (= e!92908 (ite c!26953 (t!6329 (toList!888 (map!1442 newMap!16))) (ite c!26955 (Cons!1741 (h!2348 (toList!888 (map!1442 newMap!16))) (t!6329 (toList!888 (map!1442 newMap!16)))) Nil!1742)))))

(declare-fun b!142574 () Bool)

(assert (=> b!142574 (= e!92907 call!15761)))

(declare-fun b!142575 () Bool)

(assert (=> b!142575 (= e!92909 (contains!925 lt!74627 (tuple2!2699 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142576 () Bool)

(assert (=> b!142576 (= e!92908 (insertStrictlySorted!93 (t!6329 (toList!888 (map!1442 newMap!16))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142577 () Bool)

(assert (=> b!142577 (= e!92905 call!15763)))

(declare-fun b!142578 () Bool)

(assert (=> b!142578 (= c!26955 (and ((_ is Cons!1741) (toList!888 (map!1442 newMap!16))) (bvsgt (_1!1360 (h!2348 (toList!888 (map!1442 newMap!16)))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!142578 (= e!92907 e!92905)))

(declare-fun b!142579 () Bool)

(declare-fun res!67965 () Bool)

(assert (=> b!142579 (=> (not res!67965) (not e!92909))))

(assert (=> b!142579 (= res!67965 (containsKey!180 lt!74627 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45397 c!26954) b!142572))

(assert (= (and d!45397 (not c!26954)) b!142571))

(assert (= (and b!142571 c!26953) b!142574))

(assert (= (and b!142571 (not c!26953)) b!142578))

(assert (= (and b!142578 c!26955) b!142577))

(assert (= (and b!142578 (not c!26955)) b!142570))

(assert (= (or b!142577 b!142570) bm!15758))

(assert (= (or b!142574 bm!15758) bm!15759))

(assert (= (or b!142572 bm!15759) bm!15760))

(assert (= (and bm!15760 c!26952) b!142576))

(assert (= (and bm!15760 (not c!26952)) b!142573))

(assert (= (and d!45397 res!67964) b!142579))

(assert (= (and b!142579 res!67965) b!142575))

(declare-fun m!171713 () Bool)

(assert (=> b!142576 m!171713))

(declare-fun m!171715 () Bool)

(assert (=> d!45397 m!171715))

(declare-fun m!171717 () Bool)

(assert (=> d!45397 m!171717))

(declare-fun m!171719 () Bool)

(assert (=> b!142579 m!171719))

(declare-fun m!171721 () Bool)

(assert (=> bm!15760 m!171721))

(declare-fun m!171723 () Bool)

(assert (=> b!142575 m!171723))

(assert (=> d!43675 d!45397))

(declare-fun d!45399 () Bool)

(declare-fun lt!74628 () Bool)

(assert (=> d!45399 (= lt!74628 (select (content!138 (toList!888 lt!73514)) (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))

(declare-fun e!92911 () Bool)

(assert (=> d!45399 (= lt!74628 e!92911)))

(declare-fun res!67966 () Bool)

(assert (=> d!45399 (=> (not res!67966) (not e!92911))))

(assert (=> d!45399 (= res!67966 ((_ is Cons!1741) (toList!888 lt!73514)))))

(assert (=> d!45399 (= (contains!925 (toList!888 lt!73514) (tuple2!2699 lt!73326 (minValue!2790 newMap!16))) lt!74628)))

(declare-fun b!142580 () Bool)

(declare-fun e!92910 () Bool)

(assert (=> b!142580 (= e!92911 e!92910)))

(declare-fun res!67967 () Bool)

(assert (=> b!142580 (=> res!67967 e!92910)))

(assert (=> b!142580 (= res!67967 (= (h!2348 (toList!888 lt!73514)) (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))

(declare-fun b!142581 () Bool)

(assert (=> b!142581 (= e!92910 (contains!925 (t!6329 (toList!888 lt!73514)) (tuple2!2699 lt!73326 (minValue!2790 newMap!16))))))

(assert (= (and d!45399 res!67966) b!142580))

(assert (= (and b!142580 (not res!67967)) b!142581))

(declare-fun m!171725 () Bool)

(assert (=> d!45399 m!171725))

(declare-fun m!171727 () Bool)

(assert (=> d!45399 m!171727))

(declare-fun m!171729 () Bool)

(assert (=> b!142581 m!171729))

(assert (=> b!140261 d!45399))

(declare-fun d!45401 () Bool)

(declare-fun e!92912 () Bool)

(assert (=> d!45401 e!92912))

(declare-fun res!67968 () Bool)

(assert (=> d!45401 (=> res!67968 e!92912)))

(declare-fun lt!74631 () Bool)

(assert (=> d!45401 (= res!67968 (not lt!74631))))

(declare-fun lt!74629 () Bool)

(assert (=> d!45401 (= lt!74631 lt!74629)))

(declare-fun lt!74630 () Unit!4373)

(declare-fun e!92913 () Unit!4373)

(assert (=> d!45401 (= lt!74630 e!92913)))

(declare-fun c!26956 () Bool)

(assert (=> d!45401 (= c!26956 lt!74629)))

(assert (=> d!45401 (= lt!74629 (containsKey!180 (toList!888 lt!73417) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (=> d!45401 (= (contains!923 lt!73417 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!74631)))

(declare-fun b!142582 () Bool)

(declare-fun lt!74632 () Unit!4373)

(assert (=> b!142582 (= e!92913 lt!74632)))

(assert (=> b!142582 (= lt!74632 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73417) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (=> b!142582 (isDefined!129 (getValueByKey!176 (toList!888 lt!73417) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(declare-fun b!142583 () Bool)

(declare-fun Unit!4517 () Unit!4373)

(assert (=> b!142583 (= e!92913 Unit!4517)))

(declare-fun b!142584 () Bool)

(assert (=> b!142584 (= e!92912 (isDefined!129 (getValueByKey!176 (toList!888 lt!73417) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(assert (= (and d!45401 c!26956) b!142582))

(assert (= (and d!45401 (not c!26956)) b!142583))

(assert (= (and d!45401 (not res!67968)) b!142584))

(declare-fun m!171731 () Bool)

(assert (=> d!45401 m!171731))

(declare-fun m!171733 () Bool)

(assert (=> b!142582 m!171733))

(assert (=> b!142582 m!167139))

(assert (=> b!142582 m!167139))

(declare-fun m!171735 () Bool)

(assert (=> b!142582 m!171735))

(assert (=> b!142584 m!167139))

(assert (=> b!142584 m!167139))

(assert (=> b!142584 m!171735))

(assert (=> d!43515 d!45401))

(declare-fun b!142588 () Bool)

(declare-fun e!92915 () Option!182)

(assert (=> b!142588 (= e!92915 None!180)))

(declare-fun b!142585 () Bool)

(declare-fun e!92914 () Option!182)

(assert (=> b!142585 (= e!92914 (Some!181 (_2!1360 (h!2348 lt!73414))))))

(declare-fun b!142586 () Bool)

(assert (=> b!142586 (= e!92914 e!92915)))

(declare-fun c!26958 () Bool)

(assert (=> b!142586 (= c!26958 (and ((_ is Cons!1741) lt!73414) (not (= (_1!1360 (h!2348 lt!73414)) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))))

(declare-fun c!26957 () Bool)

(declare-fun d!45403 () Bool)

(assert (=> d!45403 (= c!26957 (and ((_ is Cons!1741) lt!73414) (= (_1!1360 (h!2348 lt!73414)) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(assert (=> d!45403 (= (getValueByKey!176 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) e!92914)))

(declare-fun b!142587 () Bool)

(assert (=> b!142587 (= e!92915 (getValueByKey!176 (t!6329 lt!73414) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (= (and d!45403 c!26957) b!142585))

(assert (= (and d!45403 (not c!26957)) b!142586))

(assert (= (and b!142586 c!26958) b!142587))

(assert (= (and b!142586 (not c!26958)) b!142588))

(declare-fun m!171737 () Bool)

(assert (=> b!142587 m!171737))

(assert (=> d!43515 d!45403))

(declare-fun d!45405 () Bool)

(assert (=> d!45405 (= (getValueByKey!176 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(declare-fun lt!74633 () Unit!4373)

(assert (=> d!45405 (= lt!74633 (choose!865 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(declare-fun e!92916 () Bool)

(assert (=> d!45405 e!92916))

(declare-fun res!67969 () Bool)

(assert (=> d!45405 (=> (not res!67969) (not e!92916))))

(assert (=> d!45405 (= res!67969 (isStrictlySorted!325 lt!73414))))

(assert (=> d!45405 (= (lemmaContainsTupThenGetReturnValue!90 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!74633)))

(declare-fun b!142589 () Bool)

(declare-fun res!67970 () Bool)

(assert (=> b!142589 (=> (not res!67970) (not e!92916))))

(assert (=> b!142589 (= res!67970 (containsKey!180 lt!73414 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(declare-fun b!142590 () Bool)

(assert (=> b!142590 (= e!92916 (contains!925 lt!73414 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(assert (= (and d!45405 res!67969) b!142589))

(assert (= (and b!142589 res!67970) b!142590))

(assert (=> d!45405 m!167133))

(declare-fun m!171739 () Bool)

(assert (=> d!45405 m!171739))

(declare-fun m!171741 () Bool)

(assert (=> d!45405 m!171741))

(declare-fun m!171743 () Bool)

(assert (=> b!142589 m!171743))

(declare-fun m!171745 () Bool)

(assert (=> b!142590 m!171745))

(assert (=> d!43515 d!45405))

(declare-fun b!142591 () Bool)

(declare-fun e!92917 () List!1745)

(declare-fun call!15766 () List!1745)

(assert (=> b!142591 (= e!92917 call!15766)))

(declare-fun bm!15761 () Bool)

(declare-fun call!15764 () List!1745)

(assert (=> bm!15761 (= call!15766 call!15764)))

(declare-fun d!45407 () Bool)

(declare-fun e!92921 () Bool)

(assert (=> d!45407 e!92921))

(declare-fun res!67971 () Bool)

(assert (=> d!45407 (=> (not res!67971) (not e!92921))))

(declare-fun lt!74634 () List!1745)

(assert (=> d!45407 (= res!67971 (isStrictlySorted!325 lt!74634))))

(declare-fun e!92918 () List!1745)

(assert (=> d!45407 (= lt!74634 e!92918)))

(declare-fun c!26961 () Bool)

(assert (=> d!45407 (= c!26961 (and ((_ is Cons!1741) (toList!888 lt!73156)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73156))) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(assert (=> d!45407 (isStrictlySorted!325 (toList!888 lt!73156))))

(assert (=> d!45407 (= (insertStrictlySorted!93 (toList!888 lt!73156) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))) lt!74634)))

(declare-fun bm!15762 () Bool)

(declare-fun call!15765 () List!1745)

(assert (=> bm!15762 (= call!15764 call!15765)))

(declare-fun b!142592 () Bool)

(declare-fun e!92919 () List!1745)

(assert (=> b!142592 (= e!92918 e!92919)))

(declare-fun c!26960 () Bool)

(assert (=> b!142592 (= c!26960 (and ((_ is Cons!1741) (toList!888 lt!73156)) (= (_1!1360 (h!2348 (toList!888 lt!73156))) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(declare-fun b!142593 () Bool)

(assert (=> b!142593 (= e!92918 call!15765)))

(declare-fun e!92920 () List!1745)

(declare-fun bm!15763 () Bool)

(assert (=> bm!15763 (= call!15765 ($colon$colon!94 e!92920 (ite c!26961 (h!2348 (toList!888 lt!73156)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))))

(declare-fun c!26959 () Bool)

(assert (=> bm!15763 (= c!26959 c!26961)))

(declare-fun c!26962 () Bool)

(declare-fun b!142594 () Bool)

(assert (=> b!142594 (= e!92920 (ite c!26960 (t!6329 (toList!888 lt!73156)) (ite c!26962 (Cons!1741 (h!2348 (toList!888 lt!73156)) (t!6329 (toList!888 lt!73156))) Nil!1742)))))

(declare-fun b!142595 () Bool)

(assert (=> b!142595 (= e!92919 call!15764)))

(declare-fun b!142596 () Bool)

(assert (=> b!142596 (= e!92921 (contains!925 lt!74634 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(declare-fun b!142597 () Bool)

(assert (=> b!142597 (= e!92920 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73156)) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(declare-fun b!142598 () Bool)

(assert (=> b!142598 (= e!92917 call!15766)))

(declare-fun b!142599 () Bool)

(assert (=> b!142599 (= c!26962 (and ((_ is Cons!1741) (toList!888 lt!73156)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73156))) (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16))))))))

(assert (=> b!142599 (= e!92919 e!92917)))

(declare-fun b!142600 () Bool)

(declare-fun res!67972 () Bool)

(assert (=> b!142600 (=> (not res!67972) (not e!92921))))

(assert (=> b!142600 (= res!67972 (containsKey!180 lt!74634 (_1!1360 (tuple2!2699 lt!73152 (minValue!2790 newMap!16)))))))

(assert (= (and d!45407 c!26961) b!142593))

(assert (= (and d!45407 (not c!26961)) b!142592))

(assert (= (and b!142592 c!26960) b!142595))

(assert (= (and b!142592 (not c!26960)) b!142599))

(assert (= (and b!142599 c!26962) b!142598))

(assert (= (and b!142599 (not c!26962)) b!142591))

(assert (= (or b!142598 b!142591) bm!15761))

(assert (= (or b!142595 bm!15761) bm!15762))

(assert (= (or b!142593 bm!15762) bm!15763))

(assert (= (and bm!15763 c!26959) b!142597))

(assert (= (and bm!15763 (not c!26959)) b!142594))

(assert (= (and d!45407 res!67971) b!142600))

(assert (= (and b!142600 res!67972) b!142596))

(declare-fun m!171747 () Bool)

(assert (=> b!142597 m!171747))

(declare-fun m!171749 () Bool)

(assert (=> d!45407 m!171749))

(declare-fun m!171751 () Bool)

(assert (=> d!45407 m!171751))

(declare-fun m!171753 () Bool)

(assert (=> b!142600 m!171753))

(declare-fun m!171755 () Bool)

(assert (=> bm!15763 m!171755))

(declare-fun m!171757 () Bool)

(assert (=> b!142596 m!171757))

(assert (=> d!43515 d!45407))

(declare-fun lt!74635 () Bool)

(declare-fun d!45409 () Bool)

(assert (=> d!45409 (= lt!74635 (select (content!138 lt!73064) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92923 () Bool)

(assert (=> d!45409 (= lt!74635 e!92923)))

(declare-fun res!67973 () Bool)

(assert (=> d!45409 (=> (not res!67973) (not e!92923))))

(assert (=> d!45409 (= res!67973 ((_ is Cons!1741) lt!73064))))

(assert (=> d!45409 (= (contains!925 lt!73064 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74635)))

(declare-fun b!142601 () Bool)

(declare-fun e!92922 () Bool)

(assert (=> b!142601 (= e!92923 e!92922)))

(declare-fun res!67974 () Bool)

(assert (=> b!142601 (=> res!67974 e!92922)))

(assert (=> b!142601 (= res!67974 (= (h!2348 lt!73064) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142602 () Bool)

(assert (=> b!142602 (= e!92922 (contains!925 (t!6329 lt!73064) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45409 res!67973) b!142601))

(assert (= (and b!142601 (not res!67974)) b!142602))

(declare-fun m!171759 () Bool)

(assert (=> d!45409 m!171759))

(declare-fun m!171761 () Bool)

(assert (=> d!45409 m!171761))

(declare-fun m!171763 () Bool)

(assert (=> b!142602 m!171763))

(assert (=> b!140295 d!45409))

(declare-fun d!45411 () Bool)

(assert (=> d!45411 (= (apply!120 lt!73487 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6018 () Bool)

(assert (= bs!6018 d!45411))

(assert (=> bs!6018 m!169751))

(assert (=> bs!6018 m!169751))

(declare-fun m!171765 () Bool)

(assert (=> bs!6018 m!171765))

(assert (=> b!140229 d!45411))

(declare-fun d!45413 () Bool)

(declare-fun res!67975 () Bool)

(declare-fun e!92924 () Bool)

(assert (=> d!45413 (=> res!67975 e!92924)))

(assert (=> d!45413 (= res!67975 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15463))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15463)))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(assert (=> d!45413 (= (containsKey!180 (t!6329 (toList!888 call!15463)) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) e!92924)))

(declare-fun b!142603 () Bool)

(declare-fun e!92925 () Bool)

(assert (=> b!142603 (= e!92924 e!92925)))

(declare-fun res!67976 () Bool)

(assert (=> b!142603 (=> (not res!67976) (not e!92925))))

(assert (=> b!142603 (= res!67976 (and (or (not ((_ is Cons!1741) (t!6329 (toList!888 call!15463)))) (bvsle (_1!1360 (h!2348 (t!6329 (toList!888 call!15463)))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))) ((_ is Cons!1741) (t!6329 (toList!888 call!15463))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 call!15463)))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(declare-fun b!142604 () Bool)

(assert (=> b!142604 (= e!92925 (containsKey!180 (t!6329 (t!6329 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!45413 (not res!67975)) b!142603))

(assert (= (and b!142603 res!67976) b!142604))

(declare-fun m!171767 () Bool)

(assert (=> b!142604 m!171767))

(assert (=> b!140592 d!45413))

(declare-fun e!92926 () SeekEntryResult!279)

(declare-fun b!142605 () Bool)

(assert (=> b!142605 (= e!92926 (Intermediate!279 false (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun e!92927 () SeekEntryResult!279)

(declare-fun b!142606 () Bool)

(assert (=> b!142606 (= e!92927 (Intermediate!279 true (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!142607 () Bool)

(declare-fun lt!74636 () SeekEntryResult!279)

(assert (=> b!142607 (and (bvsge (index!3281 lt!74636) #b00000000000000000000000000000000) (bvslt (index!3281 lt!74636) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67979 () Bool)

(assert (=> b!142607 (= res!67979 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74636)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92929 () Bool)

(assert (=> b!142607 (=> res!67979 e!92929)))

(declare-fun b!142608 () Bool)

(assert (=> b!142608 (and (bvsge (index!3281 lt!74636) #b00000000000000000000000000000000) (bvslt (index!3281 lt!74636) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun res!67977 () Bool)

(assert (=> b!142608 (= res!67977 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74636)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (=> b!142608 (=> res!67977 e!92929)))

(declare-fun e!92930 () Bool)

(assert (=> b!142608 (= e!92930 e!92929)))

(declare-fun b!142609 () Bool)

(assert (=> b!142609 (and (bvsge (index!3281 lt!74636) #b00000000000000000000000000000000) (bvslt (index!3281 lt!74636) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> b!142609 (= e!92929 (= (select (arr!2315 (_keys!4699 newMap!16)) (index!3281 lt!74636)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142610 () Bool)

(assert (=> b!142610 (= e!92926 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!142611 () Bool)

(declare-fun e!92928 () Bool)

(assert (=> b!142611 (= e!92928 e!92930)))

(declare-fun res!67978 () Bool)

(assert (=> b!142611 (= res!67978 (and ((_ is Intermediate!279) lt!74636) (not (undefined!1091 lt!74636)) (bvslt (x!16136 lt!74636) #b01111111111111111111111111111110) (bvsge (x!16136 lt!74636) #b00000000000000000000000000000000) (bvsge (x!16136 lt!74636) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142611 (=> (not res!67978) (not e!92930))))

(declare-fun d!45415 () Bool)

(assert (=> d!45415 e!92928))

(declare-fun c!26964 () Bool)

(assert (=> d!45415 (= c!26964 (and ((_ is Intermediate!279) lt!74636) (undefined!1091 lt!74636)))))

(assert (=> d!45415 (= lt!74636 e!92927)))

(declare-fun c!26965 () Bool)

(assert (=> d!45415 (= c!26965 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!74637 () (_ BitVec 64))

(assert (=> d!45415 (= lt!74637 (select (arr!2315 (_keys!4699 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16))))))

(assert (=> d!45415 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45415 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74636)))

(declare-fun b!142612 () Bool)

(assert (=> b!142612 (= e!92928 (bvsge (x!16136 lt!74636) #b01111111111111111111111111111110))))

(declare-fun b!142613 () Bool)

(assert (=> b!142613 (= e!92927 e!92926)))

(declare-fun c!26963 () Bool)

(assert (=> b!142613 (= c!26963 (or (= lt!74637 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (= (bvadd lt!74637 lt!74637) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45415 c!26965) b!142606))

(assert (= (and d!45415 (not c!26965)) b!142613))

(assert (= (and b!142613 c!26963) b!142605))

(assert (= (and b!142613 (not c!26963)) b!142610))

(assert (= (and d!45415 c!26964) b!142612))

(assert (= (and d!45415 (not c!26964)) b!142611))

(assert (= (and b!142611 res!67978) b!142608))

(assert (= (and b!142608 (not res!67977)) b!142607))

(assert (= (and b!142607 (not res!67979)) b!142609))

(declare-fun m!171769 () Bool)

(assert (=> b!142609 m!171769))

(assert (=> b!142610 m!168037))

(declare-fun m!171771 () Bool)

(assert (=> b!142610 m!171771))

(assert (=> b!142610 m!171771))

(assert (=> b!142610 m!166013))

(declare-fun m!171773 () Bool)

(assert (=> b!142610 m!171773))

(assert (=> b!142607 m!171769))

(assert (=> b!142608 m!171769))

(assert (=> d!45415 m!168037))

(declare-fun m!171775 () Bool)

(assert (=> d!45415 m!171775))

(assert (=> d!45415 m!166429))

(assert (=> b!140567 d!45415))

(declare-fun d!45417 () Bool)

(declare-fun lt!74638 () (_ BitVec 32))

(assert (=> d!45417 (and (bvsge lt!74638 #b00000000000000000000000000000000) (bvslt lt!74638 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!45417 (= lt!74638 (choose!52 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)))))

(assert (=> d!45417 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45417 (= (nextIndex!0 (toIndex!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) lt!74638)))

(declare-fun bs!6019 () Bool)

(assert (= bs!6019 d!45417))

(assert (=> bs!6019 m!166449))

(declare-fun m!171777 () Bool)

(assert (=> bs!6019 m!171777))

(assert (=> bs!6019 m!166429))

(assert (=> b!140567 d!45417))

(assert (=> b!140431 d!44043))

(declare-fun d!45419 () Bool)

(assert (=> d!45419 (= (isEmpty!417 lt!73528) (isEmpty!419 (toList!888 lt!73528)))))

(declare-fun bs!6020 () Bool)

(assert (= bs!6020 d!45419))

(declare-fun m!171779 () Bool)

(assert (=> bs!6020 m!171779))

(assert (=> b!140268 d!45419))

(declare-fun d!45421 () Bool)

(assert (=> d!45421 (= (get!1531 (getValueByKey!176 (toList!888 lt!73073) lt!73074)) (v!3284 (getValueByKey!176 (toList!888 lt!73073) lt!73074)))))

(assert (=> d!43927 d!45421))

(declare-fun b!142617 () Bool)

(declare-fun e!92932 () Option!182)

(assert (=> b!142617 (= e!92932 None!180)))

(declare-fun b!142614 () Bool)

(declare-fun e!92931 () Option!182)

(assert (=> b!142614 (= e!92931 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73073)))))))

(declare-fun b!142615 () Bool)

(assert (=> b!142615 (= e!92931 e!92932)))

(declare-fun c!26967 () Bool)

(assert (=> b!142615 (= c!26967 (and ((_ is Cons!1741) (toList!888 lt!73073)) (not (= (_1!1360 (h!2348 (toList!888 lt!73073))) lt!73074))))))

(declare-fun d!45423 () Bool)

(declare-fun c!26966 () Bool)

(assert (=> d!45423 (= c!26966 (and ((_ is Cons!1741) (toList!888 lt!73073)) (= (_1!1360 (h!2348 (toList!888 lt!73073))) lt!73074)))))

(assert (=> d!45423 (= (getValueByKey!176 (toList!888 lt!73073) lt!73074) e!92931)))

(declare-fun b!142616 () Bool)

(assert (=> b!142616 (= e!92932 (getValueByKey!176 (t!6329 (toList!888 lt!73073)) lt!73074))))

(assert (= (and d!45423 c!26966) b!142614))

(assert (= (and d!45423 (not c!26966)) b!142615))

(assert (= (and b!142615 c!26967) b!142616))

(assert (= (and b!142615 (not c!26967)) b!142617))

(declare-fun m!171781 () Bool)

(assert (=> b!142616 m!171781))

(assert (=> d!43927 d!45423))

(declare-fun d!45425 () Bool)

(declare-fun res!67980 () Bool)

(declare-fun e!92933 () Bool)

(assert (=> d!45425 (=> res!67980 e!92933)))

(assert (=> d!45425 (= res!67980 (and ((_ is Cons!1741) (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))) (= (_1!1360 (h!2348 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))) lt!73328)))))

(assert (=> d!45425 (= (containsKey!180 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))) lt!73328) e!92933)))

(declare-fun b!142618 () Bool)

(declare-fun e!92934 () Bool)

(assert (=> b!142618 (= e!92933 e!92934)))

(declare-fun res!67981 () Bool)

(assert (=> b!142618 (=> (not res!67981) (not e!92934))))

(assert (=> b!142618 (= res!67981 (and (or (not ((_ is Cons!1741) (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))) (bvsle (_1!1360 (h!2348 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))) lt!73328)) ((_ is Cons!1741) (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))) (bvslt (_1!1360 (h!2348 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16)))))) lt!73328)))))

(declare-fun b!142619 () Bool)

(assert (=> b!142619 (= e!92934 (containsKey!180 (t!6329 (toList!888 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))))) lt!73328))))

(assert (= (and d!45425 (not res!67980)) b!142618))

(assert (= (and b!142618 res!67981) b!142619))

(declare-fun m!171783 () Bool)

(assert (=> b!142619 m!171783))

(assert (=> d!43609 d!45425))

(declare-fun d!45427 () Bool)

(declare-fun e!92935 () Bool)

(assert (=> d!45427 e!92935))

(declare-fun res!67982 () Bool)

(assert (=> d!45427 (=> res!67982 e!92935)))

(declare-fun lt!74641 () Bool)

(assert (=> d!45427 (= res!67982 (not lt!74641))))

(declare-fun lt!74639 () Bool)

(assert (=> d!45427 (= lt!74641 lt!74639)))

(declare-fun lt!74640 () Unit!4373)

(declare-fun e!92936 () Unit!4373)

(assert (=> d!45427 (= lt!74640 e!92936)))

(declare-fun c!26968 () Bool)

(assert (=> d!45427 (= c!26968 lt!74639)))

(assert (=> d!45427 (= lt!74639 (containsKey!180 (toList!888 lt!73831) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!45427 (= (contains!923 lt!73831 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74641)))

(declare-fun b!142620 () Bool)

(declare-fun lt!74642 () Unit!4373)

(assert (=> b!142620 (= e!92936 lt!74642)))

(assert (=> b!142620 (= lt!74642 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73831) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> b!142620 (isDefined!129 (getValueByKey!176 (toList!888 lt!73831) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142621 () Bool)

(declare-fun Unit!4518 () Unit!4373)

(assert (=> b!142621 (= e!92936 Unit!4518)))

(declare-fun b!142622 () Bool)

(assert (=> b!142622 (= e!92935 (isDefined!129 (getValueByKey!176 (toList!888 lt!73831) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!45427 c!26968) b!142620))

(assert (= (and d!45427 (not c!26968)) b!142621))

(assert (= (and d!45427 (not res!67982)) b!142622))

(declare-fun m!171785 () Bool)

(assert (=> d!45427 m!171785))

(declare-fun m!171787 () Bool)

(assert (=> b!142620 m!171787))

(assert (=> b!142620 m!168411))

(assert (=> b!142620 m!168411))

(declare-fun m!171789 () Bool)

(assert (=> b!142620 m!171789))

(assert (=> b!142622 m!168411))

(assert (=> b!142622 m!168411))

(assert (=> b!142622 m!171789))

(assert (=> d!43883 d!45427))

(declare-fun b!142626 () Bool)

(declare-fun e!92938 () Option!182)

(assert (=> b!142626 (= e!92938 None!180)))

(declare-fun b!142623 () Bool)

(declare-fun e!92937 () Option!182)

(assert (=> b!142623 (= e!92937 (Some!181 (_2!1360 (h!2348 lt!73828))))))

(declare-fun b!142624 () Bool)

(assert (=> b!142624 (= e!92937 e!92938)))

(declare-fun c!26970 () Bool)

(assert (=> b!142624 (= c!26970 (and ((_ is Cons!1741) lt!73828) (not (= (_1!1360 (h!2348 lt!73828)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun d!45429 () Bool)

(declare-fun c!26969 () Bool)

(assert (=> d!45429 (= c!26969 (and ((_ is Cons!1741) lt!73828) (= (_1!1360 (h!2348 lt!73828)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45429 (= (getValueByKey!176 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92937)))

(declare-fun b!142625 () Bool)

(assert (=> b!142625 (= e!92938 (getValueByKey!176 (t!6329 lt!73828) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!45429 c!26969) b!142623))

(assert (= (and d!45429 (not c!26969)) b!142624))

(assert (= (and b!142624 c!26970) b!142625))

(assert (= (and b!142624 (not c!26970)) b!142626))

(declare-fun m!171791 () Bool)

(assert (=> b!142625 m!171791))

(assert (=> d!43883 d!45429))

(declare-fun d!45431 () Bool)

(assert (=> d!45431 (= (getValueByKey!176 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74643 () Unit!4373)

(assert (=> d!45431 (= lt!74643 (choose!865 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92939 () Bool)

(assert (=> d!45431 e!92939))

(declare-fun res!67983 () Bool)

(assert (=> d!45431 (=> (not res!67983) (not e!92939))))

(assert (=> d!45431 (= res!67983 (isStrictlySorted!325 lt!73828))))

(assert (=> d!45431 (= (lemmaContainsTupThenGetReturnValue!90 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74643)))

(declare-fun b!142627 () Bool)

(declare-fun res!67984 () Bool)

(assert (=> b!142627 (=> (not res!67984) (not e!92939))))

(assert (=> b!142627 (= res!67984 (containsKey!180 lt!73828 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142628 () Bool)

(assert (=> b!142628 (= e!92939 (contains!925 lt!73828 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!45431 res!67983) b!142627))

(assert (= (and b!142627 res!67984) b!142628))

(assert (=> d!45431 m!168405))

(declare-fun m!171793 () Bool)

(assert (=> d!45431 m!171793))

(declare-fun m!171795 () Bool)

(assert (=> d!45431 m!171795))

(declare-fun m!171797 () Bool)

(assert (=> b!142627 m!171797))

(declare-fun m!171799 () Bool)

(assert (=> b!142628 m!171799))

(assert (=> d!43883 d!45431))

(declare-fun b!142629 () Bool)

(declare-fun e!92940 () List!1745)

(declare-fun call!15769 () List!1745)

(assert (=> b!142629 (= e!92940 call!15769)))

(declare-fun bm!15764 () Bool)

(declare-fun call!15767 () List!1745)

(assert (=> bm!15764 (= call!15769 call!15767)))

(declare-fun d!45433 () Bool)

(declare-fun e!92944 () Bool)

(assert (=> d!45433 e!92944))

(declare-fun res!67985 () Bool)

(assert (=> d!45433 (=> (not res!67985) (not e!92944))))

(declare-fun lt!74644 () List!1745)

(assert (=> d!45433 (= res!67985 (isStrictlySorted!325 lt!74644))))

(declare-fun e!92941 () List!1745)

(assert (=> d!45433 (= lt!74644 e!92941)))

(declare-fun c!26973 () Bool)

(assert (=> d!45433 (= c!26973 (and ((_ is Cons!1741) (toList!888 call!15530)) (bvslt (_1!1360 (h!2348 (toList!888 call!15530))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45433 (isStrictlySorted!325 (toList!888 call!15530))))

(assert (=> d!45433 (= (insertStrictlySorted!93 (toList!888 call!15530) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74644)))

(declare-fun bm!15765 () Bool)

(declare-fun call!15768 () List!1745)

(assert (=> bm!15765 (= call!15767 call!15768)))

(declare-fun b!142630 () Bool)

(declare-fun e!92942 () List!1745)

(assert (=> b!142630 (= e!92941 e!92942)))

(declare-fun c!26972 () Bool)

(assert (=> b!142630 (= c!26972 (and ((_ is Cons!1741) (toList!888 call!15530)) (= (_1!1360 (h!2348 (toList!888 call!15530))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142631 () Bool)

(assert (=> b!142631 (= e!92941 call!15768)))

(declare-fun bm!15766 () Bool)

(declare-fun e!92943 () List!1745)

(assert (=> bm!15766 (= call!15768 ($colon$colon!94 e!92943 (ite c!26973 (h!2348 (toList!888 call!15530)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26971 () Bool)

(assert (=> bm!15766 (= c!26971 c!26973)))

(declare-fun c!26974 () Bool)

(declare-fun b!142632 () Bool)

(assert (=> b!142632 (= e!92943 (ite c!26972 (t!6329 (toList!888 call!15530)) (ite c!26974 (Cons!1741 (h!2348 (toList!888 call!15530)) (t!6329 (toList!888 call!15530))) Nil!1742)))))

(declare-fun b!142633 () Bool)

(assert (=> b!142633 (= e!92942 call!15767)))

(declare-fun b!142634 () Bool)

(assert (=> b!142634 (= e!92944 (contains!925 lt!74644 (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142635 () Bool)

(assert (=> b!142635 (= e!92943 (insertStrictlySorted!93 (t!6329 (toList!888 call!15530)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142636 () Bool)

(assert (=> b!142636 (= e!92940 call!15769)))

(declare-fun b!142637 () Bool)

(assert (=> b!142637 (= c!26974 (and ((_ is Cons!1741) (toList!888 call!15530)) (bvsgt (_1!1360 (h!2348 (toList!888 call!15530))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!142637 (= e!92942 e!92940)))

(declare-fun b!142638 () Bool)

(declare-fun res!67986 () Bool)

(assert (=> b!142638 (=> (not res!67986) (not e!92944))))

(assert (=> b!142638 (= res!67986 (containsKey!180 lt!74644 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26064 (ite c!26071 (minValue!2790 newMap!16) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!45433 c!26973) b!142631))

(assert (= (and d!45433 (not c!26973)) b!142630))

(assert (= (and b!142630 c!26972) b!142633))

(assert (= (and b!142630 (not c!26972)) b!142637))

(assert (= (and b!142637 c!26974) b!142636))

(assert (= (and b!142637 (not c!26974)) b!142629))

(assert (= (or b!142636 b!142629) bm!15764))

(assert (= (or b!142633 bm!15764) bm!15765))

(assert (= (or b!142631 bm!15765) bm!15766))

(assert (= (and bm!15766 c!26971) b!142635))

(assert (= (and bm!15766 (not c!26971)) b!142632))

(assert (= (and d!45433 res!67985) b!142638))

(assert (= (and b!142638 res!67986) b!142634))

(declare-fun m!171801 () Bool)

(assert (=> b!142635 m!171801))

(declare-fun m!171803 () Bool)

(assert (=> d!45433 m!171803))

(declare-fun m!171805 () Bool)

(assert (=> d!45433 m!171805))

(declare-fun m!171807 () Bool)

(assert (=> b!142638 m!171807))

(declare-fun m!171809 () Bool)

(assert (=> bm!15766 m!171809))

(declare-fun m!171811 () Bool)

(assert (=> b!142634 m!171811))

(assert (=> d!43883 d!45433))

(declare-fun d!45435 () Bool)

(declare-fun e!92945 () Bool)

(assert (=> d!45435 e!92945))

(declare-fun res!67987 () Bool)

(assert (=> d!45435 (=> res!67987 e!92945)))

(declare-fun lt!74647 () Bool)

(assert (=> d!45435 (= res!67987 (not lt!74647))))

(declare-fun lt!74645 () Bool)

(assert (=> d!45435 (= lt!74647 lt!74645)))

(declare-fun lt!74646 () Unit!4373)

(declare-fun e!92946 () Unit!4373)

(assert (=> d!45435 (= lt!74646 e!92946)))

(declare-fun c!26975 () Bool)

(assert (=> d!45435 (= c!26975 lt!74645)))

(assert (=> d!45435 (= lt!74645 (containsKey!180 (toList!888 lt!73466) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45435 (= (contains!923 lt!73466 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74647)))

(declare-fun b!142639 () Bool)

(declare-fun lt!74648 () Unit!4373)

(assert (=> b!142639 (= e!92946 lt!74648)))

(assert (=> b!142639 (= lt!74648 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73466) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142639 (isDefined!129 (getValueByKey!176 (toList!888 lt!73466) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142640 () Bool)

(declare-fun Unit!4519 () Unit!4373)

(assert (=> b!142640 (= e!92946 Unit!4519)))

(declare-fun b!142641 () Bool)

(assert (=> b!142641 (= e!92945 (isDefined!129 (getValueByKey!176 (toList!888 lt!73466) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45435 c!26975) b!142639))

(assert (= (and d!45435 (not c!26975)) b!142640))

(assert (= (and d!45435 (not res!67987)) b!142641))

(declare-fun m!171813 () Bool)

(assert (=> d!45435 m!171813))

(declare-fun m!171815 () Bool)

(assert (=> b!142639 m!171815))

(assert (=> b!142639 m!167309))

(assert (=> b!142639 m!167309))

(declare-fun m!171817 () Bool)

(assert (=> b!142639 m!171817))

(assert (=> b!142641 m!167309))

(assert (=> b!142641 m!167309))

(assert (=> b!142641 m!171817))

(assert (=> d!43589 d!45435))

(declare-fun b!142645 () Bool)

(declare-fun e!92948 () Option!182)

(assert (=> b!142645 (= e!92948 None!180)))

(declare-fun b!142642 () Bool)

(declare-fun e!92947 () Option!182)

(assert (=> b!142642 (= e!92947 (Some!181 (_2!1360 (h!2348 lt!73463))))))

(declare-fun b!142643 () Bool)

(assert (=> b!142643 (= e!92947 e!92948)))

(declare-fun c!26977 () Bool)

(assert (=> b!142643 (= c!26977 (and ((_ is Cons!1741) lt!73463) (not (= (_1!1360 (h!2348 lt!73463)) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26976 () Bool)

(declare-fun d!45437 () Bool)

(assert (=> d!45437 (= c!26976 (and ((_ is Cons!1741) lt!73463) (= (_1!1360 (h!2348 lt!73463)) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45437 (= (getValueByKey!176 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92947)))

(declare-fun b!142644 () Bool)

(assert (=> b!142644 (= e!92948 (getValueByKey!176 (t!6329 lt!73463) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45437 c!26976) b!142642))

(assert (= (and d!45437 (not c!26976)) b!142643))

(assert (= (and b!142643 c!26977) b!142644))

(assert (= (and b!142643 (not c!26977)) b!142645))

(declare-fun m!171819 () Bool)

(assert (=> b!142644 m!171819))

(assert (=> d!43589 d!45437))

(declare-fun d!45439 () Bool)

(assert (=> d!45439 (= (getValueByKey!176 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74649 () Unit!4373)

(assert (=> d!45439 (= lt!74649 (choose!865 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92949 () Bool)

(assert (=> d!45439 e!92949))

(declare-fun res!67988 () Bool)

(assert (=> d!45439 (=> (not res!67988) (not e!92949))))

(assert (=> d!45439 (= res!67988 (isStrictlySorted!325 lt!73463))))

(assert (=> d!45439 (= (lemmaContainsTupThenGetReturnValue!90 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74649)))

(declare-fun b!142646 () Bool)

(declare-fun res!67989 () Bool)

(assert (=> b!142646 (=> (not res!67989) (not e!92949))))

(assert (=> b!142646 (= res!67989 (containsKey!180 lt!73463 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142647 () Bool)

(assert (=> b!142647 (= e!92949 (contains!925 lt!73463 (tuple2!2699 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45439 res!67988) b!142646))

(assert (= (and b!142646 res!67989) b!142647))

(assert (=> d!45439 m!167303))

(declare-fun m!171821 () Bool)

(assert (=> d!45439 m!171821))

(declare-fun m!171823 () Bool)

(assert (=> d!45439 m!171823))

(declare-fun m!171825 () Bool)

(assert (=> b!142646 m!171825))

(declare-fun m!171827 () Bool)

(assert (=> b!142647 m!171827))

(assert (=> d!43589 d!45439))

(declare-fun b!142648 () Bool)

(declare-fun e!92950 () List!1745)

(declare-fun call!15772 () List!1745)

(assert (=> b!142648 (= e!92950 call!15772)))

(declare-fun bm!15767 () Bool)

(declare-fun call!15770 () List!1745)

(assert (=> bm!15767 (= call!15772 call!15770)))

(declare-fun d!45441 () Bool)

(declare-fun e!92954 () Bool)

(assert (=> d!45441 e!92954))

(declare-fun res!67990 () Bool)

(assert (=> d!45441 (=> (not res!67990) (not e!92954))))

(declare-fun lt!74650 () List!1745)

(assert (=> d!45441 (= res!67990 (isStrictlySorted!325 lt!74650))))

(declare-fun e!92951 () List!1745)

(assert (=> d!45441 (= lt!74650 e!92951)))

(declare-fun c!26980 () Bool)

(assert (=> d!45441 (= c!26980 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45441 (isStrictlySorted!325 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (=> d!45441 (= (insertStrictlySorted!93 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74650)))

(declare-fun bm!15768 () Bool)

(declare-fun call!15771 () List!1745)

(assert (=> bm!15768 (= call!15770 call!15771)))

(declare-fun b!142649 () Bool)

(declare-fun e!92952 () List!1745)

(assert (=> b!142649 (= e!92951 e!92952)))

(declare-fun c!26979 () Bool)

(assert (=> b!142649 (= c!26979 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142650 () Bool)

(assert (=> b!142650 (= e!92951 call!15771)))

(declare-fun e!92953 () List!1745)

(declare-fun bm!15769 () Bool)

(assert (=> bm!15769 (= call!15771 ($colon$colon!94 e!92953 (ite c!26980 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (tuple2!2699 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26978 () Bool)

(assert (=> bm!15769 (= c!26978 c!26980)))

(declare-fun b!142651 () Bool)

(declare-fun c!26981 () Bool)

(assert (=> b!142651 (= e!92953 (ite c!26979 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (ite c!26981 (Cons!1741 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) Nil!1742)))))

(declare-fun b!142652 () Bool)

(assert (=> b!142652 (= e!92952 call!15770)))

(declare-fun b!142653 () Bool)

(assert (=> b!142653 (= e!92954 (contains!925 lt!74650 (tuple2!2699 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142654 () Bool)

(assert (=> b!142654 (= e!92953 (insertStrictlySorted!93 (t!6329 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142655 () Bool)

(assert (=> b!142655 (= e!92950 call!15772)))

(declare-fun b!142656 () Bool)

(assert (=> b!142656 (= c!26981 (and ((_ is Cons!1741) (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvsgt (_1!1360 (h!2348 (toList!888 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!142656 (= e!92952 e!92950)))

(declare-fun b!142657 () Bool)

(declare-fun res!67991 () Bool)

(assert (=> b!142657 (=> (not res!67991) (not e!92954))))

(assert (=> b!142657 (= res!67991 (containsKey!180 lt!74650 (_1!1360 (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45441 c!26980) b!142650))

(assert (= (and d!45441 (not c!26980)) b!142649))

(assert (= (and b!142649 c!26979) b!142652))

(assert (= (and b!142649 (not c!26979)) b!142656))

(assert (= (and b!142656 c!26981) b!142655))

(assert (= (and b!142656 (not c!26981)) b!142648))

(assert (= (or b!142655 b!142648) bm!15767))

(assert (= (or b!142652 bm!15767) bm!15768))

(assert (= (or b!142650 bm!15768) bm!15769))

(assert (= (and bm!15769 c!26978) b!142654))

(assert (= (and bm!15769 (not c!26978)) b!142651))

(assert (= (and d!45441 res!67990) b!142657))

(assert (= (and b!142657 res!67991) b!142653))

(declare-fun m!171829 () Bool)

(assert (=> b!142654 m!171829))

(declare-fun m!171831 () Bool)

(assert (=> d!45441 m!171831))

(assert (=> d!45441 m!168729))

(declare-fun m!171833 () Bool)

(assert (=> b!142657 m!171833))

(declare-fun m!171835 () Bool)

(assert (=> bm!15769 m!171835))

(declare-fun m!171837 () Bool)

(assert (=> b!142653 m!171837))

(assert (=> d!43589 d!45441))

(assert (=> b!140241 d!45315))

(declare-fun d!45443 () Bool)

(assert (=> d!45443 (isDefined!129 (getValueByKey!176 (toList!888 lt!72889) lt!72894))))

(declare-fun lt!74651 () Unit!4373)

(assert (=> d!45443 (= lt!74651 (choose!864 (toList!888 lt!72889) lt!72894))))

(declare-fun e!92955 () Bool)

(assert (=> d!45443 e!92955))

(declare-fun res!67992 () Bool)

(assert (=> d!45443 (=> (not res!67992) (not e!92955))))

(assert (=> d!45443 (= res!67992 (isStrictlySorted!325 (toList!888 lt!72889)))))

(assert (=> d!45443 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!72889) lt!72894) lt!74651)))

(declare-fun b!142658 () Bool)

(assert (=> b!142658 (= e!92955 (containsKey!180 (toList!888 lt!72889) lt!72894))))

(assert (= (and d!45443 res!67992) b!142658))

(assert (=> d!45443 m!166269))

(assert (=> d!45443 m!166269))

(assert (=> d!45443 m!168439))

(declare-fun m!171839 () Bool)

(assert (=> d!45443 m!171839))

(assert (=> d!45443 m!166875))

(assert (=> b!142658 m!168435))

(assert (=> b!140732 d!45443))

(assert (=> b!140732 d!45155))

(assert (=> b!140732 d!43743))

(declare-fun d!45445 () Bool)

(assert (=> d!45445 (= (validKeyInArray!0 (select (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)))) (and (not (= (select (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140462 d!45445))

(declare-fun d!45447 () Bool)

(assert (=> d!45447 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun bs!6021 () Bool)

(assert (= bs!6021 d!45447))

(assert (=> bs!6021 m!166281))

(declare-fun m!171841 () Bool)

(assert (=> bs!6021 m!171841))

(assert (=> b!139961 d!45447))

(assert (=> b!139961 d!43985))

(declare-fun d!45449 () Bool)

(declare-fun res!67993 () Bool)

(declare-fun e!92956 () Bool)

(assert (=> d!45449 (=> res!67993 e!92956)))

(assert (=> d!45449 (= res!67993 (and ((_ is Cons!1741) (t!6329 (t!6329 (toList!888 lt!72825)))) (= (_1!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(assert (=> d!45449 (= (containsKey!180 (t!6329 (t!6329 (toList!888 lt!72825))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) e!92956)))

(declare-fun b!142659 () Bool)

(declare-fun e!92957 () Bool)

(assert (=> b!142659 (= e!92956 e!92957)))

(declare-fun res!67994 () Bool)

(assert (=> b!142659 (=> (not res!67994) (not e!92957))))

(assert (=> b!142659 (= res!67994 (and (or (not ((_ is Cons!1741) (t!6329 (t!6329 (toList!888 lt!72825))))) (bvsle (_1!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))) ((_ is Cons!1741) (t!6329 (t!6329 (toList!888 lt!72825)))) (bvslt (_1!1360 (h!2348 (t!6329 (t!6329 (toList!888 lt!72825))))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))))

(declare-fun b!142660 () Bool)

(assert (=> b!142660 (= e!92957 (containsKey!180 (t!6329 (t!6329 (t!6329 (toList!888 lt!72825)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)))))

(assert (= (and d!45449 (not res!67993)) b!142659))

(assert (= (and b!142659 res!67994) b!142660))

(assert (=> b!142660 m!166013))

(declare-fun m!171843 () Bool)

(assert (=> b!142660 m!171843))

(assert (=> b!140247 d!45449))

(assert (=> d!43695 d!43697))

(assert (=> d!43695 d!43435))

(declare-fun d!45451 () Bool)

(assert (=> d!45451 (contains!923 (getCurrentListMap!561 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355))))

(assert (=> d!45451 true))

(declare-fun _$17!59 () Unit!4373)

(assert (=> d!45451 (= (choose!867 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) _$17!59)))

(declare-fun bs!6022 () Bool)

(assert (= bs!6022 d!45451))

(assert (=> bs!6022 m!166097))

(assert (=> bs!6022 m!166097))

(assert (=> bs!6022 m!166013))

(assert (=> bs!6022 m!166651))

(assert (=> d!43695 d!45451))

(assert (=> d!43695 d!43527))

(declare-fun lt!74652 () Bool)

(declare-fun d!45453 () Bool)

(assert (=> d!45453 (= lt!74652 (select (content!138 (toList!888 lt!73773)) (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))

(declare-fun e!92959 () Bool)

(assert (=> d!45453 (= lt!74652 e!92959)))

(declare-fun res!67995 () Bool)

(assert (=> d!45453 (=> (not res!67995) (not e!92959))))

(assert (=> d!45453 (= res!67995 ((_ is Cons!1741) (toList!888 lt!73773)))))

(assert (=> d!45453 (= (contains!925 (toList!888 lt!73773) (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))) lt!74652)))

(declare-fun b!142661 () Bool)

(declare-fun e!92958 () Bool)

(assert (=> b!142661 (= e!92959 e!92958)))

(declare-fun res!67996 () Bool)

(assert (=> b!142661 (=> res!67996 e!92958)))

(assert (=> b!142661 (= res!67996 (= (h!2348 (toList!888 lt!73773)) (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))

(declare-fun b!142662 () Bool)

(assert (=> b!142662 (= e!92958 (contains!925 (t!6329 (toList!888 lt!73773)) (tuple2!2699 lt!73290 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45453 res!67995) b!142661))

(assert (= (and b!142661 (not res!67996)) b!142662))

(declare-fun m!171845 () Bool)

(assert (=> d!45453 m!171845))

(declare-fun m!171847 () Bool)

(assert (=> d!45453 m!171847))

(declare-fun m!171849 () Bool)

(assert (=> b!142662 m!171849))

(assert (=> b!140658 d!45453))

(declare-fun b!142663 () Bool)

(declare-fun e!92960 () (_ BitVec 32))

(assert (=> b!142663 (= e!92960 #b00000000000000000000000000000000)))

(declare-fun b!142664 () Bool)

(declare-fun e!92961 () (_ BitVec 32))

(declare-fun call!15773 () (_ BitVec 32))

(assert (=> b!142664 (= e!92961 call!15773)))

(declare-fun bm!15770 () Bool)

(assert (=> bm!15770 (= call!15773 (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(declare-fun lt!74653 () (_ BitVec 32))

(declare-fun d!45455 () Bool)

(assert (=> d!45455 (and (bvsge lt!74653 #b00000000000000000000000000000000) (bvsle lt!74653 (bvsub (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45455 (= lt!74653 e!92960)))

(declare-fun c!26982 () Bool)

(assert (=> d!45455 (= c!26982 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))))))

(assert (=> d!45455 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2587 (_keys!4699 newMap!16)) (size!2587 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))))))))

(assert (=> d!45455 (= (arrayCountValidKeys!0 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 newMap!16))) lt!74653)))

(declare-fun b!142665 () Bool)

(assert (=> b!142665 (= e!92960 e!92961)))

(declare-fun c!26983 () Bool)

(assert (=> b!142665 (= c!26983 (validKeyInArray!0 (select (arr!2315 (array!4898 (store (arr!2315 (_keys!4699 newMap!16)) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355)) (size!2587 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142666 () Bool)

(assert (=> b!142666 (= e!92961 (bvadd #b00000000000000000000000000000001 call!15773))))

(assert (= (and d!45455 c!26982) b!142663))

(assert (= (and d!45455 (not c!26982)) b!142665))

(assert (= (and b!142665 c!26983) b!142666))

(assert (= (and b!142665 (not c!26983)) b!142664))

(assert (= (or b!142666 b!142664) bm!15770))

(declare-fun m!171851 () Bool)

(assert (=> bm!15770 m!171851))

(assert (=> b!142665 m!169579))

(assert (=> b!142665 m!169579))

(assert (=> b!142665 m!169589))

(assert (=> bm!15584 d!45455))

(declare-fun d!45457 () Bool)

(assert (=> d!45457 (= (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!418 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!6023 () Bool)

(assert (= bs!6023 d!45457))

(assert (=> bs!6023 m!168287))

(declare-fun m!171853 () Bool)

(assert (=> bs!6023 m!171853))

(assert (=> b!140666 d!45457))

(assert (=> b!140666 d!45223))

(declare-fun lt!74654 () Bool)

(declare-fun d!45459 () Bool)

(assert (=> d!45459 (= lt!74654 (select (content!138 lt!73537) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92963 () Bool)

(assert (=> d!45459 (= lt!74654 e!92963)))

(declare-fun res!67997 () Bool)

(assert (=> d!45459 (=> (not res!67997) (not e!92963))))

(assert (=> d!45459 (= res!67997 ((_ is Cons!1741) lt!73537))))

(assert (=> d!45459 (= (contains!925 lt!73537 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74654)))

(declare-fun b!142667 () Bool)

(declare-fun e!92962 () Bool)

(assert (=> b!142667 (= e!92963 e!92962)))

(declare-fun res!67998 () Bool)

(assert (=> b!142667 (=> res!67998 e!92962)))

(assert (=> b!142667 (= res!67998 (= (h!2348 lt!73537) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142668 () Bool)

(assert (=> b!142668 (= e!92962 (contains!925 (t!6329 lt!73537) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45459 res!67997) b!142667))

(assert (= (and b!142667 (not res!67998)) b!142668))

(declare-fun m!171855 () Bool)

(assert (=> d!45459 m!171855))

(declare-fun m!171857 () Bool)

(assert (=> d!45459 m!171857))

(declare-fun m!171859 () Bool)

(assert (=> b!142668 m!171859))

(assert (=> b!140301 d!45459))

(declare-fun d!45461 () Bool)

(declare-fun e!92964 () Bool)

(assert (=> d!45461 e!92964))

(declare-fun res!67999 () Bool)

(assert (=> d!45461 (=> (not res!67999) (not e!92964))))

(declare-fun lt!74658 () ListLongMap!1745)

(assert (=> d!45461 (= res!67999 (contains!923 lt!74658 (_1!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(declare-fun lt!74655 () List!1745)

(assert (=> d!45461 (= lt!74658 (ListLongMap!1746 lt!74655))))

(declare-fun lt!74656 () Unit!4373)

(declare-fun lt!74657 () Unit!4373)

(assert (=> d!45461 (= lt!74656 lt!74657)))

(assert (=> d!45461 (= (getValueByKey!176 lt!74655 (_1!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45461 (= lt!74657 (lemmaContainsTupThenGetReturnValue!90 lt!74655 (_1!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45461 (= lt!74655 (insertStrictlySorted!93 (toList!888 lt!73700) (_1!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45461 (= (+!179 lt!73700 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!74658)))

(declare-fun b!142669 () Bool)

(declare-fun res!68000 () Bool)

(assert (=> b!142669 (=> (not res!68000) (not e!92964))))

(assert (=> b!142669 (= res!68000 (= (getValueByKey!176 (toList!888 lt!74658) (_1!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun b!142670 () Bool)

(assert (=> b!142670 (= e!92964 (contains!925 (toList!888 lt!74658) (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (= (and d!45461 res!67999) b!142669))

(assert (= (and b!142669 res!68000) b!142670))

(declare-fun m!171861 () Bool)

(assert (=> d!45461 m!171861))

(declare-fun m!171863 () Bool)

(assert (=> d!45461 m!171863))

(declare-fun m!171865 () Bool)

(assert (=> d!45461 m!171865))

(declare-fun m!171867 () Bool)

(assert (=> d!45461 m!171867))

(declare-fun m!171869 () Bool)

(assert (=> b!142669 m!171869))

(declare-fun m!171871 () Bool)

(assert (=> b!142670 m!171871))

(assert (=> b!140490 d!45461))

(declare-fun d!45463 () Bool)

(assert (=> d!45463 (= (apply!120 (+!179 lt!73682 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73683) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73682 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73683)))))

(declare-fun bs!6024 () Bool)

(assert (= bs!6024 d!45463))

(declare-fun m!171873 () Bool)

(assert (=> bs!6024 m!171873))

(assert (=> bs!6024 m!171873))

(declare-fun m!171875 () Bool)

(assert (=> bs!6024 m!171875))

(assert (=> b!140490 d!45463))

(declare-fun d!45465 () Bool)

(assert (=> d!45465 (contains!923 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73698)))

(declare-fun lt!74659 () Unit!4373)

(assert (=> d!45465 (= lt!74659 (choose!857 lt!73697 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73698))))

(assert (=> d!45465 (contains!923 lt!73697 lt!73698)))

(assert (=> d!45465 (= (addStillContains!96 lt!73697 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73698) lt!74659)))

(declare-fun bs!6025 () Bool)

(assert (= bs!6025 d!45465))

(assert (=> bs!6025 m!167941))

(assert (=> bs!6025 m!167941))

(assert (=> bs!6025 m!167959))

(declare-fun m!171877 () Bool)

(assert (=> bs!6025 m!171877))

(declare-fun m!171879 () Bool)

(assert (=> bs!6025 m!171879))

(assert (=> b!140490 d!45465))

(declare-fun d!45467 () Bool)

(assert (=> d!45467 (= (apply!120 (+!179 lt!73700 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73695) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73700 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73695)))))

(declare-fun bs!6026 () Bool)

(assert (= bs!6026 d!45467))

(declare-fun m!171881 () Bool)

(assert (=> bs!6026 m!171881))

(assert (=> bs!6026 m!171881))

(declare-fun m!171883 () Bool)

(assert (=> bs!6026 m!171883))

(assert (=> b!140490 d!45467))

(declare-fun d!45469 () Bool)

(declare-fun e!92965 () Bool)

(assert (=> d!45469 e!92965))

(declare-fun res!68001 () Bool)

(assert (=> d!45469 (=> res!68001 e!92965)))

(declare-fun lt!74662 () Bool)

(assert (=> d!45469 (= res!68001 (not lt!74662))))

(declare-fun lt!74660 () Bool)

(assert (=> d!45469 (= lt!74662 lt!74660)))

(declare-fun lt!74661 () Unit!4373)

(declare-fun e!92966 () Unit!4373)

(assert (=> d!45469 (= lt!74661 e!92966)))

(declare-fun c!26984 () Bool)

(assert (=> d!45469 (= c!26984 lt!74660)))

(assert (=> d!45469 (= lt!74660 (containsKey!180 (toList!888 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73698))))

(assert (=> d!45469 (= (contains!923 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73698) lt!74662)))

(declare-fun b!142671 () Bool)

(declare-fun lt!74663 () Unit!4373)

(assert (=> b!142671 (= e!92966 lt!74663)))

(assert (=> b!142671 (= lt!74663 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73698))))

(assert (=> b!142671 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73698))))

(declare-fun b!142672 () Bool)

(declare-fun Unit!4520 () Unit!4373)

(assert (=> b!142672 (= e!92966 Unit!4520)))

(declare-fun b!142673 () Bool)

(assert (=> b!142673 (= e!92965 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73698)))))

(assert (= (and d!45469 c!26984) b!142671))

(assert (= (and d!45469 (not c!26984)) b!142672))

(assert (= (and d!45469 (not res!68001)) b!142673))

(declare-fun m!171885 () Bool)

(assert (=> d!45469 m!171885))

(declare-fun m!171887 () Bool)

(assert (=> b!142671 m!171887))

(declare-fun m!171889 () Bool)

(assert (=> b!142671 m!171889))

(assert (=> b!142671 m!171889))

(declare-fun m!171891 () Bool)

(assert (=> b!142671 m!171891))

(assert (=> b!142673 m!171889))

(assert (=> b!142673 m!171889))

(assert (=> b!142673 m!171891))

(assert (=> b!140490 d!45469))

(declare-fun d!45471 () Bool)

(assert (=> d!45471 (= (apply!120 (+!179 lt!73700 (tuple2!2699 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73695) (apply!120 lt!73700 lt!73695))))

(declare-fun lt!74664 () Unit!4373)

(assert (=> d!45471 (= lt!74664 (choose!856 lt!73700 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73695))))

(declare-fun e!92967 () Bool)

(assert (=> d!45471 e!92967))

(declare-fun res!68002 () Bool)

(assert (=> d!45471 (=> (not res!68002) (not e!92967))))

(assert (=> d!45471 (= res!68002 (contains!923 lt!73700 lt!73695))))

(assert (=> d!45471 (= (addApplyDifferent!96 lt!73700 lt!73696 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73695) lt!74664)))

(declare-fun b!142674 () Bool)

(assert (=> b!142674 (= e!92967 (not (= lt!73695 lt!73696)))))

(assert (= (and d!45471 res!68002) b!142674))

(assert (=> d!45471 m!167949))

(declare-fun m!171893 () Bool)

(assert (=> d!45471 m!171893))

(declare-fun m!171895 () Bool)

(assert (=> d!45471 m!171895))

(assert (=> d!45471 m!167961))

(assert (=> d!45471 m!167961))

(assert (=> d!45471 m!167963))

(assert (=> b!140490 d!45471))

(declare-fun d!45473 () Bool)

(declare-fun e!92968 () Bool)

(assert (=> d!45473 e!92968))

(declare-fun res!68003 () Bool)

(assert (=> d!45473 (=> (not res!68003) (not e!92968))))

(declare-fun lt!74668 () ListLongMap!1745)

(assert (=> d!45473 (= res!68003 (contains!923 lt!74668 (_1!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(declare-fun lt!74665 () List!1745)

(assert (=> d!45473 (= lt!74668 (ListLongMap!1746 lt!74665))))

(declare-fun lt!74666 () Unit!4373)

(declare-fun lt!74667 () Unit!4373)

(assert (=> d!45473 (= lt!74666 lt!74667)))

(assert (=> d!45473 (= (getValueByKey!176 lt!74665 (_1!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45473 (= lt!74667 (lemmaContainsTupThenGetReturnValue!90 lt!74665 (_1!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45473 (= lt!74665 (insertStrictlySorted!93 (toList!888 lt!73697) (_1!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45473 (= (+!179 lt!73697 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!74668)))

(declare-fun b!142675 () Bool)

(declare-fun res!68004 () Bool)

(assert (=> b!142675 (=> (not res!68004) (not e!92968))))

(assert (=> b!142675 (= res!68004 (= (getValueByKey!176 (toList!888 lt!74668) (_1!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun b!142676 () Bool)

(assert (=> b!142676 (= e!92968 (contains!925 (toList!888 lt!74668) (tuple2!2699 lt!73699 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (= (and d!45473 res!68003) b!142675))

(assert (= (and b!142675 res!68004) b!142676))

(declare-fun m!171897 () Bool)

(assert (=> d!45473 m!171897))

(declare-fun m!171899 () Bool)

(assert (=> d!45473 m!171899))

(declare-fun m!171901 () Bool)

(assert (=> d!45473 m!171901))

(declare-fun m!171903 () Bool)

(assert (=> d!45473 m!171903))

(declare-fun m!171905 () Bool)

(assert (=> b!142675 m!171905))

(declare-fun m!171907 () Bool)

(assert (=> b!142676 m!171907))

(assert (=> b!140490 d!45473))

(declare-fun d!45475 () Bool)

(assert (=> d!45475 (= (apply!120 (+!179 lt!73682 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73683) (apply!120 lt!73682 lt!73683))))

(declare-fun lt!74669 () Unit!4373)

(assert (=> d!45475 (= lt!74669 (choose!856 lt!73682 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73683))))

(declare-fun e!92969 () Bool)

(assert (=> d!45475 e!92969))

(declare-fun res!68005 () Bool)

(assert (=> d!45475 (=> (not res!68005) (not e!92969))))

(assert (=> d!45475 (= res!68005 (contains!923 lt!73682 lt!73683))))

(assert (=> d!45475 (= (addApplyDifferent!96 lt!73682 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73683) lt!74669)))

(declare-fun b!142677 () Bool)

(assert (=> b!142677 (= e!92969 (not (= lt!73683 lt!73686)))))

(assert (= (and d!45475 res!68005) b!142677))

(assert (=> d!45475 m!167957))

(declare-fun m!171909 () Bool)

(assert (=> d!45475 m!171909))

(declare-fun m!171911 () Bool)

(assert (=> d!45475 m!171911))

(assert (=> d!45475 m!167943))

(assert (=> d!45475 m!167943))

(assert (=> d!45475 m!167945))

(assert (=> b!140490 d!45475))

(assert (=> b!140490 d!44515))

(declare-fun d!45477 () Bool)

(declare-fun e!92970 () Bool)

(assert (=> d!45477 e!92970))

(declare-fun res!68006 () Bool)

(assert (=> d!45477 (=> (not res!68006) (not e!92970))))

(declare-fun lt!74673 () ListLongMap!1745)

(assert (=> d!45477 (= res!68006 (contains!923 lt!74673 (_1!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(declare-fun lt!74670 () List!1745)

(assert (=> d!45477 (= lt!74673 (ListLongMap!1746 lt!74670))))

(declare-fun lt!74671 () Unit!4373)

(declare-fun lt!74672 () Unit!4373)

(assert (=> d!45477 (= lt!74671 lt!74672)))

(assert (=> d!45477 (= (getValueByKey!176 lt!74670 (_1!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45477 (= lt!74672 (lemmaContainsTupThenGetReturnValue!90 lt!74670 (_1!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45477 (= lt!74670 (insertStrictlySorted!93 (toList!888 lt!73684) (_1!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45477 (= (+!179 lt!73684 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!74673)))

(declare-fun b!142678 () Bool)

(declare-fun res!68007 () Bool)

(assert (=> b!142678 (=> (not res!68007) (not e!92970))))

(assert (=> b!142678 (= res!68007 (= (getValueByKey!176 (toList!888 lt!74673) (_1!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun b!142679 () Bool)

(assert (=> b!142679 (= e!92970 (contains!925 (toList!888 lt!74673) (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (= (and d!45477 res!68006) b!142678))

(assert (= (and b!142678 res!68007) b!142679))

(declare-fun m!171913 () Bool)

(assert (=> d!45477 m!171913))

(declare-fun m!171915 () Bool)

(assert (=> d!45477 m!171915))

(declare-fun m!171917 () Bool)

(assert (=> d!45477 m!171917))

(declare-fun m!171919 () Bool)

(assert (=> d!45477 m!171919))

(declare-fun m!171921 () Bool)

(assert (=> b!142678 m!171921))

(declare-fun m!171923 () Bool)

(assert (=> b!142679 m!171923))

(assert (=> b!140490 d!45477))

(declare-fun d!45479 () Bool)

(assert (=> d!45479 (= (apply!120 lt!73700 lt!73695) (get!1531 (getValueByKey!176 (toList!888 lt!73700) lt!73695)))))

(declare-fun bs!6027 () Bool)

(assert (= bs!6027 d!45479))

(declare-fun m!171925 () Bool)

(assert (=> bs!6027 m!171925))

(assert (=> bs!6027 m!171925))

(declare-fun m!171927 () Bool)

(assert (=> bs!6027 m!171927))

(assert (=> b!140490 d!45479))

(declare-fun d!45481 () Bool)

(assert (=> d!45481 (= (apply!120 lt!73682 lt!73683) (get!1531 (getValueByKey!176 (toList!888 lt!73682) lt!73683)))))

(declare-fun bs!6028 () Bool)

(assert (= bs!6028 d!45481))

(declare-fun m!171929 () Bool)

(assert (=> bs!6028 m!171929))

(assert (=> bs!6028 m!171929))

(declare-fun m!171931 () Bool)

(assert (=> bs!6028 m!171931))

(assert (=> b!140490 d!45481))

(declare-fun d!45483 () Bool)

(assert (=> d!45483 (= (apply!120 (+!179 lt!73684 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73689) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73684 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) lt!73689)))))

(declare-fun bs!6029 () Bool)

(assert (= bs!6029 d!45483))

(declare-fun m!171933 () Bool)

(assert (=> bs!6029 m!171933))

(assert (=> bs!6029 m!171933))

(declare-fun m!171935 () Bool)

(assert (=> bs!6029 m!171935))

(assert (=> b!140490 d!45483))

(declare-fun d!45485 () Bool)

(assert (=> d!45485 (= (apply!120 (+!179 lt!73684 (tuple2!2699 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!73689) (apply!120 lt!73684 lt!73689))))

(declare-fun lt!74674 () Unit!4373)

(assert (=> d!45485 (= lt!74674 (choose!856 lt!73684 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73689))))

(declare-fun e!92971 () Bool)

(assert (=> d!45485 e!92971))

(declare-fun res!68008 () Bool)

(assert (=> d!45485 (=> (not res!68008) (not e!92971))))

(assert (=> d!45485 (= res!68008 (contains!923 lt!73684 lt!73689))))

(assert (=> d!45485 (= (addApplyDifferent!96 lt!73684 lt!73685 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)) lt!73689) lt!74674)))

(declare-fun b!142680 () Bool)

(assert (=> b!142680 (= e!92971 (not (= lt!73689 lt!73685)))))

(assert (= (and d!45485 res!68008) b!142680))

(assert (=> d!45485 m!167965))

(declare-fun m!171937 () Bool)

(assert (=> d!45485 m!171937))

(declare-fun m!171939 () Bool)

(assert (=> d!45485 m!171939))

(assert (=> d!45485 m!167951))

(assert (=> d!45485 m!167951))

(assert (=> d!45485 m!167953))

(assert (=> b!140490 d!45485))

(declare-fun d!45487 () Bool)

(assert (=> d!45487 (= (apply!120 lt!73684 lt!73689) (get!1531 (getValueByKey!176 (toList!888 lt!73684) lt!73689)))))

(declare-fun bs!6030 () Bool)

(assert (= bs!6030 d!45487))

(declare-fun m!171941 () Bool)

(assert (=> bs!6030 m!171941))

(assert (=> bs!6030 m!171941))

(declare-fun m!171943 () Bool)

(assert (=> bs!6030 m!171943))

(assert (=> b!140490 d!45487))

(declare-fun d!45489 () Bool)

(declare-fun e!92972 () Bool)

(assert (=> d!45489 e!92972))

(declare-fun res!68009 () Bool)

(assert (=> d!45489 (=> (not res!68009) (not e!92972))))

(declare-fun lt!74678 () ListLongMap!1745)

(assert (=> d!45489 (= res!68009 (contains!923 lt!74678 (_1!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(declare-fun lt!74675 () List!1745)

(assert (=> d!45489 (= lt!74678 (ListLongMap!1746 lt!74675))))

(declare-fun lt!74676 () Unit!4373)

(declare-fun lt!74677 () Unit!4373)

(assert (=> d!45489 (= lt!74676 lt!74677)))

(assert (=> d!45489 (= (getValueByKey!176 lt!74675 (_1!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45489 (= lt!74677 (lemmaContainsTupThenGetReturnValue!90 lt!74675 (_1!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45489 (= lt!74675 (insertStrictlySorted!93 (toList!888 lt!73682) (_1!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45489 (= (+!179 lt!73682 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!74678)))

(declare-fun b!142681 () Bool)

(declare-fun res!68010 () Bool)

(assert (=> b!142681 (=> (not res!68010) (not e!92972))))

(assert (=> b!142681 (= res!68010 (= (getValueByKey!176 (toList!888 lt!74678) (_1!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun b!142682 () Bool)

(assert (=> b!142682 (= e!92972 (contains!925 (toList!888 lt!74678) (tuple2!2699 lt!73686 (zeroValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (= (and d!45489 res!68009) b!142681))

(assert (= (and b!142681 res!68010) b!142682))

(declare-fun m!171945 () Bool)

(assert (=> d!45489 m!171945))

(declare-fun m!171947 () Bool)

(assert (=> d!45489 m!171947))

(declare-fun m!171949 () Bool)

(assert (=> d!45489 m!171949))

(declare-fun m!171951 () Bool)

(assert (=> d!45489 m!171951))

(declare-fun m!171953 () Bool)

(assert (=> b!142681 m!171953))

(declare-fun m!171955 () Bool)

(assert (=> b!142682 m!171955))

(assert (=> b!140490 d!45489))

(declare-fun d!45491 () Bool)

(assert (=> d!45491 (= (get!1529 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2316 (ite (or c!26064 c!26062) (_values!2923 newMap!16) lt!72983)) #b00000000000000000000000000000000)))))

(assert (=> b!140730 d!45491))

(declare-fun d!45493 () Bool)

(declare-fun e!92973 () Bool)

(assert (=> d!45493 e!92973))

(declare-fun res!68011 () Bool)

(assert (=> d!45493 (=> res!68011 e!92973)))

(declare-fun lt!74681 () Bool)

(assert (=> d!45493 (= res!68011 (not lt!74681))))

(declare-fun lt!74679 () Bool)

(assert (=> d!45493 (= lt!74681 lt!74679)))

(declare-fun lt!74680 () Unit!4373)

(declare-fun e!92974 () Unit!4373)

(assert (=> d!45493 (= lt!74680 e!92974)))

(declare-fun c!26985 () Bool)

(assert (=> d!45493 (= c!26985 lt!74679)))

(assert (=> d!45493 (= lt!74679 (containsKey!180 (toList!888 lt!73891) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45493 (= (contains!923 lt!73891 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74681)))

(declare-fun b!142683 () Bool)

(declare-fun lt!74682 () Unit!4373)

(assert (=> b!142683 (= e!92974 lt!74682)))

(assert (=> b!142683 (= lt!74682 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73891) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!142683 (isDefined!129 (getValueByKey!176 (toList!888 lt!73891) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142684 () Bool)

(declare-fun Unit!4521 () Unit!4373)

(assert (=> b!142684 (= e!92974 Unit!4521)))

(declare-fun b!142685 () Bool)

(assert (=> b!142685 (= e!92973 (isDefined!129 (getValueByKey!176 (toList!888 lt!73891) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!45493 c!26985) b!142683))

(assert (= (and d!45493 (not c!26985)) b!142684))

(assert (= (and d!45493 (not res!68011)) b!142685))

(declare-fun m!171957 () Bool)

(assert (=> d!45493 m!171957))

(declare-fun m!171959 () Bool)

(assert (=> b!142683 m!171959))

(assert (=> b!142683 m!168627))

(assert (=> b!142683 m!168627))

(declare-fun m!171961 () Bool)

(assert (=> b!142683 m!171961))

(assert (=> b!142685 m!168627))

(assert (=> b!142685 m!168627))

(assert (=> b!142685 m!171961))

(assert (=> d!43975 d!45493))

(declare-fun b!142689 () Bool)

(declare-fun e!92976 () Option!182)

(assert (=> b!142689 (= e!92976 None!180)))

(declare-fun b!142686 () Bool)

(declare-fun e!92975 () Option!182)

(assert (=> b!142686 (= e!92975 (Some!181 (_2!1360 (h!2348 lt!73888))))))

(declare-fun b!142687 () Bool)

(assert (=> b!142687 (= e!92975 e!92976)))

(declare-fun c!26987 () Bool)

(assert (=> b!142687 (= c!26987 (and ((_ is Cons!1741) lt!73888) (not (= (_1!1360 (h!2348 lt!73888)) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun d!45495 () Bool)

(declare-fun c!26986 () Bool)

(assert (=> d!45495 (= c!26986 (and ((_ is Cons!1741) lt!73888) (= (_1!1360 (h!2348 lt!73888)) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45495 (= (getValueByKey!176 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92975)))

(declare-fun b!142688 () Bool)

(assert (=> b!142688 (= e!92976 (getValueByKey!176 (t!6329 lt!73888) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45495 c!26986) b!142686))

(assert (= (and d!45495 (not c!26986)) b!142687))

(assert (= (and b!142687 c!26987) b!142688))

(assert (= (and b!142687 (not c!26987)) b!142689))

(declare-fun m!171963 () Bool)

(assert (=> b!142688 m!171963))

(assert (=> d!43975 d!45495))

(declare-fun d!45497 () Bool)

(assert (=> d!45497 (= (getValueByKey!176 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74683 () Unit!4373)

(assert (=> d!45497 (= lt!74683 (choose!865 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!92977 () Bool)

(assert (=> d!45497 e!92977))

(declare-fun res!68012 () Bool)

(assert (=> d!45497 (=> (not res!68012) (not e!92977))))

(assert (=> d!45497 (= res!68012 (isStrictlySorted!325 lt!73888))))

(assert (=> d!45497 (= (lemmaContainsTupThenGetReturnValue!90 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74683)))

(declare-fun b!142690 () Bool)

(declare-fun res!68013 () Bool)

(assert (=> b!142690 (=> (not res!68013) (not e!92977))))

(assert (=> b!142690 (= res!68013 (containsKey!180 lt!73888 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142691 () Bool)

(assert (=> b!142691 (= e!92977 (contains!925 lt!73888 (tuple2!2699 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!45497 res!68012) b!142690))

(assert (= (and b!142690 res!68013) b!142691))

(assert (=> d!45497 m!168621))

(declare-fun m!171965 () Bool)

(assert (=> d!45497 m!171965))

(declare-fun m!171967 () Bool)

(assert (=> d!45497 m!171967))

(declare-fun m!171969 () Bool)

(assert (=> b!142690 m!171969))

(declare-fun m!171971 () Bool)

(assert (=> b!142691 m!171971))

(assert (=> d!43975 d!45497))

(declare-fun b!142692 () Bool)

(declare-fun e!92978 () List!1745)

(declare-fun call!15776 () List!1745)

(assert (=> b!142692 (= e!92978 call!15776)))

(declare-fun bm!15771 () Bool)

(declare-fun call!15774 () List!1745)

(assert (=> bm!15771 (= call!15776 call!15774)))

(declare-fun d!45499 () Bool)

(declare-fun e!92982 () Bool)

(assert (=> d!45499 e!92982))

(declare-fun res!68014 () Bool)

(assert (=> d!45499 (=> (not res!68014) (not e!92982))))

(declare-fun lt!74684 () List!1745)

(assert (=> d!45499 (= res!68014 (isStrictlySorted!325 lt!74684))))

(declare-fun e!92979 () List!1745)

(assert (=> d!45499 (= lt!74684 e!92979)))

(declare-fun c!26990 () Bool)

(assert (=> d!45499 (= c!26990 (and ((_ is Cons!1741) (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (bvslt (_1!1360 (h!2348 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45499 (isStrictlySorted!325 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))))))

(assert (=> d!45499 (= (insertStrictlySorted!93 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74684)))

(declare-fun bm!15772 () Bool)

(declare-fun call!15775 () List!1745)

(assert (=> bm!15772 (= call!15774 call!15775)))

(declare-fun b!142693 () Bool)

(declare-fun e!92980 () List!1745)

(assert (=> b!142693 (= e!92979 e!92980)))

(declare-fun c!26989 () Bool)

(assert (=> b!142693 (= c!26989 (and ((_ is Cons!1741) (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (= (_1!1360 (h!2348 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142694 () Bool)

(assert (=> b!142694 (= e!92979 call!15775)))

(declare-fun bm!15773 () Bool)

(declare-fun e!92981 () List!1745)

(assert (=> bm!15773 (= call!15775 ($colon$colon!94 e!92981 (ite c!26990 (h!2348 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (tuple2!2699 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26988 () Bool)

(assert (=> bm!15773 (= c!26988 c!26990)))

(declare-fun b!142695 () Bool)

(declare-fun c!26991 () Bool)

(assert (=> b!142695 (= e!92981 (ite c!26989 (t!6329 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (ite c!26991 (Cons!1741 (h!2348 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (t!6329 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))))) Nil!1742)))))

(declare-fun b!142696 () Bool)

(assert (=> b!142696 (= e!92980 call!15774)))

(declare-fun b!142697 () Bool)

(assert (=> b!142697 (= e!92982 (contains!925 lt!74684 (tuple2!2699 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142698 () Bool)

(assert (=> b!142698 (= e!92981 (insertStrictlySorted!93 (t!6329 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142699 () Bool)

(assert (=> b!142699 (= e!92978 call!15776)))

(declare-fun b!142700 () Bool)

(assert (=> b!142700 (= c!26991 (and ((_ is Cons!1741) (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503)))) (bvsgt (_1!1360 (h!2348 (toList!888 (ite c!26116 call!15500 (ite c!26118 call!15498 call!15503))))) (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> b!142700 (= e!92980 e!92978)))

(declare-fun b!142701 () Bool)

(declare-fun res!68015 () Bool)

(assert (=> b!142701 (=> (not res!68015) (not e!92982))))

(assert (=> b!142701 (= res!68015 (containsKey!180 lt!74684 (_1!1360 (ite (or c!26116 c!26118) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45499 c!26990) b!142694))

(assert (= (and d!45499 (not c!26990)) b!142693))

(assert (= (and b!142693 c!26989) b!142696))

(assert (= (and b!142693 (not c!26989)) b!142700))

(assert (= (and b!142700 c!26991) b!142699))

(assert (= (and b!142700 (not c!26991)) b!142692))

(assert (= (or b!142699 b!142692) bm!15771))

(assert (= (or b!142696 bm!15771) bm!15772))

(assert (= (or b!142694 bm!15772) bm!15773))

(assert (= (and bm!15773 c!26988) b!142698))

(assert (= (and bm!15773 (not c!26988)) b!142695))

(assert (= (and d!45499 res!68014) b!142701))

(assert (= (and b!142701 res!68015) b!142697))

(declare-fun m!171973 () Bool)

(assert (=> b!142698 m!171973))

(declare-fun m!171975 () Bool)

(assert (=> d!45499 m!171975))

(declare-fun m!171977 () Bool)

(assert (=> d!45499 m!171977))

(declare-fun m!171979 () Bool)

(assert (=> b!142701 m!171979))

(declare-fun m!171981 () Bool)

(assert (=> bm!15773 m!171981))

(declare-fun m!171983 () Bool)

(assert (=> b!142697 m!171983))

(assert (=> d!43975 d!45499))

(declare-fun d!45501 () Bool)

(declare-fun lt!74685 () Bool)

(assert (=> d!45501 (= lt!74685 (select (content!138 (t!6329 (toList!888 lt!73027))) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun e!92984 () Bool)

(assert (=> d!45501 (= lt!74685 e!92984)))

(declare-fun res!68016 () Bool)

(assert (=> d!45501 (=> (not res!68016) (not e!92984))))

(assert (=> d!45501 (= res!68016 ((_ is Cons!1741) (t!6329 (toList!888 lt!73027))))))

(assert (=> d!45501 (= (contains!925 (t!6329 (toList!888 lt!73027)) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) lt!74685)))

(declare-fun b!142702 () Bool)

(declare-fun e!92983 () Bool)

(assert (=> b!142702 (= e!92984 e!92983)))

(declare-fun res!68017 () Bool)

(assert (=> b!142702 (=> res!68017 e!92983)))

(assert (=> b!142702 (= res!68017 (= (h!2348 (t!6329 (toList!888 lt!73027))) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(declare-fun b!142703 () Bool)

(assert (=> b!142703 (= e!92983 (contains!925 (t!6329 (t!6329 (toList!888 lt!73027))) (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))

(assert (= (and d!45501 res!68016) b!142702))

(assert (= (and b!142702 (not res!68017)) b!142703))

(assert (=> d!45501 m!170031))

(declare-fun m!171985 () Bool)

(assert (=> d!45501 m!171985))

(declare-fun m!171987 () Bool)

(assert (=> b!142703 m!171987))

(assert (=> b!140152 d!45501))

(assert (=> d!43637 d!43609))

(assert (=> d!43637 d!43635))

(declare-fun d!45503 () Bool)

(assert (=> d!45503 (contains!923 (+!179 lt!73327 (tuple2!2699 lt!73329 (zeroValue!2790 newMap!16))) lt!73328)))

(assert (=> d!45503 true))

(declare-fun _$35!393 () Unit!4373)

(assert (=> d!45503 (= (choose!857 lt!73327 lt!73329 (zeroValue!2790 newMap!16) lt!73328) _$35!393)))

(declare-fun bs!6031 () Bool)

(assert (= bs!6031 d!45503))

(assert (=> bs!6031 m!166811))

(assert (=> bs!6031 m!166811))

(assert (=> bs!6031 m!166827))

(assert (=> d!43637 d!45503))

(declare-fun d!45505 () Bool)

(declare-fun e!92985 () Bool)

(assert (=> d!45505 e!92985))

(declare-fun res!68018 () Bool)

(assert (=> d!45505 (=> res!68018 e!92985)))

(declare-fun lt!74688 () Bool)

(assert (=> d!45505 (= res!68018 (not lt!74688))))

(declare-fun lt!74686 () Bool)

(assert (=> d!45505 (= lt!74688 lt!74686)))

(declare-fun lt!74687 () Unit!4373)

(declare-fun e!92986 () Unit!4373)

(assert (=> d!45505 (= lt!74687 e!92986)))

(declare-fun c!26992 () Bool)

(assert (=> d!45505 (= c!26992 lt!74686)))

(assert (=> d!45505 (= lt!74686 (containsKey!180 (toList!888 lt!73327) lt!73328))))

(assert (=> d!45505 (= (contains!923 lt!73327 lt!73328) lt!74688)))

(declare-fun b!142704 () Bool)

(declare-fun lt!74689 () Unit!4373)

(assert (=> b!142704 (= e!92986 lt!74689)))

(assert (=> b!142704 (= lt!74689 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73327) lt!73328))))

(assert (=> b!142704 (isDefined!129 (getValueByKey!176 (toList!888 lt!73327) lt!73328))))

(declare-fun b!142705 () Bool)

(declare-fun Unit!4522 () Unit!4373)

(assert (=> b!142705 (= e!92986 Unit!4522)))

(declare-fun b!142706 () Bool)

(assert (=> b!142706 (= e!92985 (isDefined!129 (getValueByKey!176 (toList!888 lt!73327) lt!73328)))))

(assert (= (and d!45505 c!26992) b!142704))

(assert (= (and d!45505 (not c!26992)) b!142705))

(assert (= (and d!45505 (not res!68018)) b!142706))

(declare-fun m!171989 () Bool)

(assert (=> d!45505 m!171989))

(declare-fun m!171991 () Bool)

(assert (=> b!142704 m!171991))

(declare-fun m!171993 () Bool)

(assert (=> b!142704 m!171993))

(assert (=> b!142704 m!171993))

(declare-fun m!171995 () Bool)

(assert (=> b!142704 m!171995))

(assert (=> b!142706 m!171993))

(assert (=> b!142706 m!171993))

(assert (=> b!142706 m!171995))

(assert (=> d!43637 d!45505))

(declare-fun d!45507 () Bool)

(assert (=> d!45507 (= ($colon$colon!94 e!91774 (ite c!26393 (h!2348 (toList!888 call!15405)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (Cons!1741 (ite c!26393 (h!2348 (toList!888 call!15405)) (tuple2!2699 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91774))))

(assert (=> bm!15637 d!45507))

(declare-fun d!45509 () Bool)

(assert (=> d!45509 (isDefined!129 (getValueByKey!176 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun lt!74690 () Unit!4373)

(assert (=> d!45509 (= lt!74690 (choose!864 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!92987 () Bool)

(assert (=> d!45509 e!92987))

(declare-fun res!68019 () Bool)

(assert (=> d!45509 (=> (not res!68019) (not e!92987))))

(assert (=> d!45509 (= res!68019 (isStrictlySorted!325 (toList!888 lt!73285)))))

(assert (=> d!45509 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74690)))

(declare-fun b!142707 () Bool)

(assert (=> b!142707 (= e!92987 (containsKey!180 (toList!888 lt!73285) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45509 res!68019) b!142707))

(assert (=> d!45509 m!166735))

(assert (=> d!45509 m!166735))

(assert (=> d!45509 m!167649))

(declare-fun m!171997 () Bool)

(assert (=> d!45509 m!171997))

(declare-fun m!171999 () Bool)

(assert (=> d!45509 m!171999))

(assert (=> b!142707 m!167645))

(assert (=> b!140347 d!45509))

(assert (=> b!140347 d!45211))

(assert (=> b!140347 d!43641))

(declare-fun b!142711 () Bool)

(declare-fun e!92989 () Option!182)

(assert (=> b!142711 (= e!92989 None!180)))

(declare-fun b!142708 () Bool)

(declare-fun e!92988 () Option!182)

(assert (=> b!142708 (= e!92988 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73282)))))))

(declare-fun b!142709 () Bool)

(assert (=> b!142709 (= e!92988 e!92989)))

(declare-fun c!26994 () Bool)

(assert (=> b!142709 (= c!26994 (and ((_ is Cons!1741) (t!6329 lt!73282)) (not (= (_1!1360 (h!2348 (t!6329 lt!73282))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))))

(declare-fun d!45511 () Bool)

(declare-fun c!26993 () Bool)

(assert (=> d!45511 (= c!26993 (and ((_ is Cons!1741) (t!6329 lt!73282)) (= (_1!1360 (h!2348 (t!6329 lt!73282))) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(assert (=> d!45511 (= (getValueByKey!176 (t!6329 lt!73282) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!92988)))

(declare-fun b!142710 () Bool)

(assert (=> b!142710 (= e!92989 (getValueByKey!176 (t!6329 (t!6329 lt!73282)) (_1!1360 (ite (or c!26024 c!26026) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45511 c!26993) b!142708))

(assert (= (and d!45511 (not c!26993)) b!142709))

(assert (= (and b!142709 c!26994) b!142710))

(assert (= (and b!142709 (not c!26994)) b!142711))

(declare-fun m!172001 () Bool)

(assert (=> b!142710 m!172001))

(assert (=> b!140352 d!45511))

(declare-fun d!45513 () Bool)

(declare-fun e!92990 () Bool)

(assert (=> d!45513 e!92990))

(declare-fun res!68020 () Bool)

(assert (=> d!45513 (=> res!68020 e!92990)))

(declare-fun lt!74693 () Bool)

(assert (=> d!45513 (= res!68020 (not lt!74693))))

(declare-fun lt!74691 () Bool)

(assert (=> d!45513 (= lt!74693 lt!74691)))

(declare-fun lt!74692 () Unit!4373)

(declare-fun e!92991 () Unit!4373)

(assert (=> d!45513 (= lt!74692 e!92991)))

(declare-fun c!26995 () Bool)

(assert (=> d!45513 (= c!26995 lt!74691)))

(assert (=> d!45513 (= lt!74691 (containsKey!180 (toList!888 lt!73378) (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(assert (=> d!45513 (= (contains!923 lt!73378 (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)) lt!74693)))

(declare-fun b!142712 () Bool)

(declare-fun lt!74694 () Unit!4373)

(assert (=> b!142712 (= e!92991 lt!74694)))

(assert (=> b!142712 (= lt!74694 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73378) (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(assert (=> b!142712 (isDefined!129 (getValueByKey!176 (toList!888 lt!73378) (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142713 () Bool)

(declare-fun Unit!4523 () Unit!4373)

(assert (=> b!142713 (= e!92991 Unit!4523)))

(declare-fun b!142714 () Bool)

(assert (=> b!142714 (= e!92990 (isDefined!129 (getValueByKey!176 (toList!888 lt!73378) (select (arr!2315 (_keys!4699 (ite c!26065 newMap!16 (_2!1361 lt!72992)))) #b00000000000000000000000000000000))))))

(assert (= (and d!45513 c!26995) b!142712))

(assert (= (and d!45513 (not c!26995)) b!142713))

(assert (= (and d!45513 (not res!68020)) b!142714))

(assert (=> d!45513 m!166951))

(declare-fun m!172003 () Bool)

(assert (=> d!45513 m!172003))

(assert (=> b!142712 m!166951))

(declare-fun m!172005 () Bool)

(assert (=> b!142712 m!172005))

(assert (=> b!142712 m!166951))

(assert (=> b!142712 m!171447))

(assert (=> b!142712 m!171447))

(declare-fun m!172007 () Bool)

(assert (=> b!142712 m!172007))

(assert (=> b!142714 m!166951))

(assert (=> b!142714 m!171447))

(assert (=> b!142714 m!171447))

(assert (=> b!142714 m!172007))

(assert (=> b!140044 d!45513))

(declare-fun d!45515 () Bool)

(declare-fun e!92992 () Bool)

(assert (=> d!45515 e!92992))

(declare-fun res!68021 () Bool)

(assert (=> d!45515 (=> res!68021 e!92992)))

(declare-fun lt!74697 () Bool)

(assert (=> d!45515 (= res!68021 (not lt!74697))))

(declare-fun lt!74695 () Bool)

(assert (=> d!45515 (= lt!74697 lt!74695)))

(declare-fun lt!74696 () Unit!4373)

(declare-fun e!92993 () Unit!4373)

(assert (=> d!45515 (= lt!74696 e!92993)))

(declare-fun c!26996 () Bool)

(assert (=> d!45515 (= c!26996 lt!74695)))

(assert (=> d!45515 (= lt!74695 (containsKey!180 (toList!888 lt!73824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45515 (= (contains!923 lt!73824 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74697)))

(declare-fun b!142715 () Bool)

(declare-fun lt!74698 () Unit!4373)

(assert (=> b!142715 (= e!92993 lt!74698)))

(assert (=> b!142715 (= lt!74698 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142715 (isDefined!129 (getValueByKey!176 (toList!888 lt!73824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142716 () Bool)

(declare-fun Unit!4524 () Unit!4373)

(assert (=> b!142716 (= e!92993 Unit!4524)))

(declare-fun b!142717 () Bool)

(assert (=> b!142717 (= e!92992 (isDefined!129 (getValueByKey!176 (toList!888 lt!73824) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45515 c!26996) b!142715))

(assert (= (and d!45515 (not c!26996)) b!142716))

(assert (= (and d!45515 (not res!68021)) b!142717))

(declare-fun m!172009 () Bool)

(assert (=> d!45515 m!172009))

(declare-fun m!172011 () Bool)

(assert (=> b!142715 m!172011))

(assert (=> b!142715 m!169541))

(assert (=> b!142715 m!169541))

(declare-fun m!172013 () Bool)

(assert (=> b!142715 m!172013))

(assert (=> b!142717 m!169541))

(assert (=> b!142717 m!169541))

(assert (=> b!142717 m!172013))

(assert (=> bm!15633 d!45515))

(declare-fun d!45517 () Bool)

(assert (=> d!45517 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74699 () Unit!4373)

(assert (=> d!45517 (= lt!74699 (choose!864 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92994 () Bool)

(assert (=> d!45517 e!92994))

(declare-fun res!68022 () Bool)

(assert (=> d!45517 (=> (not res!68022) (not e!92994))))

(assert (=> d!45517 (= res!68022 (isStrictlySorted!325 (toList!888 lt!73158)))))

(assert (=> d!45517 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74699)))

(declare-fun b!142718 () Bool)

(assert (=> b!142718 (= e!92994 (containsKey!180 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45517 res!68022) b!142718))

(assert (=> d!45517 m!167239))

(assert (=> d!45517 m!167239))

(assert (=> d!45517 m!167241))

(declare-fun m!172015 () Bool)

(assert (=> d!45517 m!172015))

(assert (=> d!45517 m!169095))

(assert (=> b!142718 m!167235))

(assert (=> b!140153 d!45517))

(assert (=> b!140153 d!45277))

(assert (=> b!140153 d!45279))

(assert (=> b!140371 d!44017))

(assert (=> b!140371 d!44019))

(declare-fun d!45519 () Bool)

(assert (=> d!45519 (= (get!1531 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73158) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43899 d!45519))

(assert (=> d!43899 d!45279))

(declare-fun d!45521 () Bool)

(declare-fun e!92995 () Bool)

(assert (=> d!45521 e!92995))

(declare-fun res!68023 () Bool)

(assert (=> d!45521 (=> res!68023 e!92995)))

(declare-fun lt!74702 () Bool)

(assert (=> d!45521 (= res!68023 (not lt!74702))))

(declare-fun lt!74700 () Bool)

(assert (=> d!45521 (= lt!74702 lt!74700)))

(declare-fun lt!74701 () Unit!4373)

(declare-fun e!92996 () Unit!4373)

(assert (=> d!45521 (= lt!74701 e!92996)))

(declare-fun c!26997 () Bool)

(assert (=> d!45521 (= c!26997 lt!74700)))

(assert (=> d!45521 (= lt!74700 (containsKey!180 (toList!888 lt!73496) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45521 (= (contains!923 lt!73496 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74702)))

(declare-fun b!142719 () Bool)

(declare-fun lt!74703 () Unit!4373)

(assert (=> b!142719 (= e!92996 lt!74703)))

(assert (=> b!142719 (= lt!74703 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73496) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142719 (isDefined!129 (getValueByKey!176 (toList!888 lt!73496) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142720 () Bool)

(declare-fun Unit!4525 () Unit!4373)

(assert (=> b!142720 (= e!92996 Unit!4525)))

(declare-fun b!142721 () Bool)

(assert (=> b!142721 (= e!92995 (isDefined!129 (getValueByKey!176 (toList!888 lt!73496) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45521 c!26997) b!142719))

(assert (= (and d!45521 (not c!26997)) b!142720))

(assert (= (and d!45521 (not res!68023)) b!142721))

(declare-fun m!172017 () Bool)

(assert (=> d!45521 m!172017))

(declare-fun m!172019 () Bool)

(assert (=> b!142719 m!172019))

(declare-fun m!172021 () Bool)

(assert (=> b!142719 m!172021))

(assert (=> b!142719 m!172021))

(declare-fun m!172023 () Bool)

(assert (=> b!142719 m!172023))

(assert (=> b!142721 m!172021))

(assert (=> b!142721 m!172021))

(assert (=> b!142721 m!172023))

(assert (=> b!140238 d!45521))

(assert (=> d!43953 d!43951))

(declare-fun d!45523 () Bool)

(assert (=> d!45523 (= (getValueByKey!176 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (=> d!45523 true))

(declare-fun _$22!501 () Unit!4373)

(assert (=> d!45523 (= (choose!865 lt!73020 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) _$22!501)))

(declare-fun bs!6032 () Bool)

(assert (= bs!6032 d!45523))

(assert (=> bs!6032 m!166259))

(assert (=> d!43953 d!45523))

(declare-fun d!45525 () Bool)

(declare-fun res!68024 () Bool)

(declare-fun e!92997 () Bool)

(assert (=> d!45525 (=> res!68024 e!92997)))

(assert (=> d!45525 (= res!68024 (or ((_ is Nil!1742) lt!73020) ((_ is Nil!1742) (t!6329 lt!73020))))))

(assert (=> d!45525 (= (isStrictlySorted!325 lt!73020) e!92997)))

(declare-fun b!142722 () Bool)

(declare-fun e!92998 () Bool)

(assert (=> b!142722 (= e!92997 e!92998)))

(declare-fun res!68025 () Bool)

(assert (=> b!142722 (=> (not res!68025) (not e!92998))))

(assert (=> b!142722 (= res!68025 (bvslt (_1!1360 (h!2348 lt!73020)) (_1!1360 (h!2348 (t!6329 lt!73020)))))))

(declare-fun b!142723 () Bool)

(assert (=> b!142723 (= e!92998 (isStrictlySorted!325 (t!6329 lt!73020)))))

(assert (= (and d!45525 (not res!68024)) b!142722))

(assert (= (and b!142722 res!68025) b!142723))

(declare-fun m!172025 () Bool)

(assert (=> b!142723 m!172025))

(assert (=> d!43953 d!45525))

(declare-fun d!45527 () Bool)

(assert (=> d!45527 (isDefined!129 (getValueByKey!176 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74704 () Unit!4373)

(assert (=> d!45527 (= lt!74704 (choose!864 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92999 () Bool)

(assert (=> d!45527 e!92999))

(declare-fun res!68026 () Bool)

(assert (=> d!45527 (=> (not res!68026) (not e!92999))))

(assert (=> d!45527 (= res!68026 (isStrictlySorted!325 (toList!888 lt!73052)))))

(assert (=> d!45527 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74704)))

(declare-fun b!142724 () Bool)

(assert (=> b!142724 (= e!92999 (containsKey!180 (toList!888 lt!73052) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45527 res!68026) b!142724))

(assert (=> d!45527 m!167225))

(assert (=> d!45527 m!167225))

(assert (=> d!45527 m!167227))

(declare-fun m!172027 () Bool)

(assert (=> d!45527 m!172027))

(assert (=> d!45527 m!169081))

(assert (=> b!142724 m!167221))

(assert (=> b!140144 d!45527))

(assert (=> b!140144 d!45317))

(assert (=> b!140144 d!45319))

(assert (=> b!140428 d!44079))

(assert (=> b!140428 d!44081))

(declare-fun d!45529 () Bool)

(declare-fun e!93000 () Bool)

(assert (=> d!45529 e!93000))

(declare-fun res!68027 () Bool)

(assert (=> d!45529 (=> (not res!68027) (not e!93000))))

(declare-fun lt!74708 () ListLongMap!1745)

(assert (=> d!45529 (= res!68027 (contains!923 lt!74708 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(declare-fun lt!74705 () List!1745)

(assert (=> d!45529 (= lt!74708 (ListLongMap!1746 lt!74705))))

(declare-fun lt!74706 () Unit!4373)

(declare-fun lt!74707 () Unit!4373)

(assert (=> d!45529 (= lt!74706 lt!74707)))

(assert (=> d!45529 (= (getValueByKey!176 lt!74705 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45529 (= lt!74707 (lemmaContainsTupThenGetReturnValue!90 lt!74705 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45529 (= lt!74705 (insertStrictlySorted!93 (toList!888 call!15616) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))))))

(assert (=> d!45529 (= (+!179 call!15616 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) lt!74708)))

(declare-fun b!142725 () Bool)

(declare-fun res!68028 () Bool)

(assert (=> b!142725 (=> (not res!68028) (not e!93000))))

(assert (=> b!142725 (= res!68028 (= (getValueByKey!176 (toList!888 lt!74708) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16))))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))))

(declare-fun b!142726 () Bool)

(assert (=> b!142726 (= e!93000 (contains!925 (toList!888 lt!74708) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (ite c!26065 (_2!1361 lt!72992) newMap!16)))))))

(assert (= (and d!45529 res!68027) b!142725))

(assert (= (and b!142725 res!68028) b!142726))

(declare-fun m!172029 () Bool)

(assert (=> d!45529 m!172029))

(declare-fun m!172031 () Bool)

(assert (=> d!45529 m!172031))

(declare-fun m!172033 () Bool)

(assert (=> d!45529 m!172033))

(declare-fun m!172035 () Bool)

(assert (=> d!45529 m!172035))

(declare-fun m!172037 () Bool)

(assert (=> b!142725 m!172037))

(declare-fun m!172039 () Bool)

(assert (=> b!142726 m!172039))

(assert (=> b!140501 d!45529))

(declare-fun d!45531 () Bool)

(declare-fun lt!74709 () Bool)

(assert (=> d!45531 (= lt!74709 (select (content!138 lt!73758) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun e!93002 () Bool)

(assert (=> d!45531 (= lt!74709 e!93002)))

(declare-fun res!68029 () Bool)

(assert (=> d!45531 (=> (not res!68029) (not e!93002))))

(assert (=> d!45531 (= res!68029 ((_ is Cons!1741) lt!73758))))

(assert (=> d!45531 (= (contains!925 lt!73758 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) lt!74709)))

(declare-fun b!142727 () Bool)

(declare-fun e!93001 () Bool)

(assert (=> b!142727 (= e!93002 e!93001)))

(declare-fun res!68030 () Bool)

(assert (=> b!142727 (=> res!68030 e!93001)))

(assert (=> b!142727 (= res!68030 (= (h!2348 lt!73758) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142728 () Bool)

(assert (=> b!142728 (= e!93001 (contains!925 (t!6329 lt!73758) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (= (and d!45531 res!68029) b!142727))

(assert (= (and b!142727 (not res!68030)) b!142728))

(declare-fun m!172041 () Bool)

(assert (=> d!45531 m!172041))

(declare-fun m!172043 () Bool)

(assert (=> d!45531 m!172043))

(declare-fun m!172045 () Bool)

(assert (=> b!142728 m!172045))

(assert (=> b!140645 d!45531))

(declare-fun d!45533 () Bool)

(assert (=> d!45533 (= (get!1531 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73332) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43481 d!45533))

(assert (=> d!43481 d!44215))

(declare-fun call!15777 () Bool)

(declare-fun c!26998 () Bool)

(declare-fun bm!15774 () Bool)

(assert (=> bm!15774 (= call!15777 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26998 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26280 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) (ite c!26280 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) Nil!1743) Nil!1743))))))

(declare-fun b!142729 () Bool)

(declare-fun e!93006 () Bool)

(assert (=> b!142729 (= e!93006 call!15777)))

(declare-fun b!142731 () Bool)

(assert (=> b!142731 (= e!93006 call!15777)))

(declare-fun b!142732 () Bool)

(declare-fun e!93003 () Bool)

(declare-fun e!93004 () Bool)

(assert (=> b!142732 (= e!93003 e!93004)))

(declare-fun res!68032 () Bool)

(assert (=> b!142732 (=> (not res!68032) (not e!93004))))

(declare-fun e!93005 () Bool)

(assert (=> b!142732 (= res!68032 (not e!93005))))

(declare-fun res!68033 () Bool)

(assert (=> b!142732 (=> (not res!68033) (not e!93005))))

(assert (=> b!142732 (= res!68033 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142733 () Bool)

(assert (=> b!142733 (= e!93004 e!93006)))

(assert (=> b!142733 (= c!26998 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!45535 () Bool)

(declare-fun res!68031 () Bool)

(assert (=> d!45535 (=> res!68031 e!93003)))

(assert (=> d!45535 (= res!68031 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_keys!4699 (v!3280 (underlying!480 thiss!992))))))))

(assert (=> d!45535 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!480 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26280 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) Nil!1743) Nil!1743)) e!93003)))

(declare-fun b!142730 () Bool)

(assert (=> b!142730 (= e!93005 (contains!924 (ite c!26280 (Cons!1742 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) #b00000000000000000000000000000000) Nil!1743) Nil!1743) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!45535 (not res!68031)) b!142732))

(assert (= (and b!142732 res!68033) b!142730))

(assert (= (and b!142732 res!68032) b!142733))

(assert (= (and b!142733 c!26998) b!142729))

(assert (= (and b!142733 (not c!26998)) b!142731))

(assert (= (or b!142729 b!142731) bm!15774))

(assert (=> bm!15774 m!168905))

(declare-fun m!172047 () Bool)

(assert (=> bm!15774 m!172047))

(assert (=> b!142732 m!168905))

(assert (=> b!142732 m!168905))

(assert (=> b!142732 m!168915))

(assert (=> b!142733 m!168905))

(assert (=> b!142733 m!168905))

(assert (=> b!142733 m!168915))

(assert (=> b!142730 m!168905))

(assert (=> b!142730 m!168905))

(declare-fun m!172049 () Bool)

(assert (=> b!142730 m!172049))

(assert (=> bm!15580 d!45535))

(declare-fun b!142737 () Bool)

(declare-fun e!93008 () Option!182)

(assert (=> b!142737 (= e!93008 None!180)))

(declare-fun b!142734 () Bool)

(declare-fun e!93007 () Option!182)

(assert (=> b!142734 (= e!93007 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72907))))))))

(declare-fun b!142735 () Bool)

(assert (=> b!142735 (= e!93007 e!93008)))

(declare-fun c!27000 () Bool)

(assert (=> b!142735 (= c!27000 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!45537 () Bool)

(declare-fun c!26999 () Bool)

(assert (=> d!45537 (= c!26999 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45537 (= (getValueByKey!176 (t!6329 (toList!888 lt!72907)) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!93007)))

(declare-fun b!142736 () Bool)

(assert (=> b!142736 (= e!93008 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72907))) (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45537 c!26999) b!142734))

(assert (= (and d!45537 (not c!26999)) b!142735))

(assert (= (and b!142735 c!27000) b!142736))

(assert (= (and b!142735 (not c!27000)) b!142737))

(assert (=> b!142736 m!166121))

(declare-fun m!172051 () Bool)

(assert (=> b!142736 m!172051))

(assert (=> b!140182 d!45537))

(declare-fun d!45539 () Bool)

(assert (=> d!45539 (= (apply!120 lt!73469 lt!73474) (get!1531 (getValueByKey!176 (toList!888 lt!73469) lt!73474)))))

(declare-fun bs!6033 () Bool)

(assert (= bs!6033 d!45539))

(declare-fun m!172053 () Bool)

(assert (=> bs!6033 m!172053))

(assert (=> bs!6033 m!172053))

(declare-fun m!172055 () Bool)

(assert (=> bs!6033 m!172055))

(assert (=> b!140211 d!45539))

(declare-fun d!45541 () Bool)

(declare-fun e!93009 () Bool)

(assert (=> d!45541 e!93009))

(declare-fun res!68034 () Bool)

(assert (=> d!45541 (=> (not res!68034) (not e!93009))))

(declare-fun lt!74713 () ListLongMap!1745)

(assert (=> d!45541 (= res!68034 (contains!923 lt!74713 (_1!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74710 () List!1745)

(assert (=> d!45541 (= lt!74713 (ListLongMap!1746 lt!74710))))

(declare-fun lt!74711 () Unit!4373)

(declare-fun lt!74712 () Unit!4373)

(assert (=> d!45541 (= lt!74711 lt!74712)))

(assert (=> d!45541 (= (getValueByKey!176 lt!74710 (_1!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45541 (= lt!74712 (lemmaContainsTupThenGetReturnValue!90 lt!74710 (_1!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45541 (= lt!74710 (insertStrictlySorted!93 (toList!888 lt!73482) (_1!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45541 (= (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74713)))

(declare-fun b!142738 () Bool)

(declare-fun res!68035 () Bool)

(assert (=> b!142738 (=> (not res!68035) (not e!93009))))

(assert (=> b!142738 (= res!68035 (= (getValueByKey!176 (toList!888 lt!74713) (_1!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142739 () Bool)

(assert (=> b!142739 (= e!93009 (contains!925 (toList!888 lt!74713) (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45541 res!68034) b!142738))

(assert (= (and b!142738 res!68035) b!142739))

(declare-fun m!172057 () Bool)

(assert (=> d!45541 m!172057))

(declare-fun m!172059 () Bool)

(assert (=> d!45541 m!172059))

(declare-fun m!172061 () Bool)

(assert (=> d!45541 m!172061))

(declare-fun m!172063 () Bool)

(assert (=> d!45541 m!172063))

(declare-fun m!172065 () Bool)

(assert (=> b!142738 m!172065))

(declare-fun m!172067 () Bool)

(assert (=> b!142739 m!172067))

(assert (=> b!140211 d!45541))

(declare-fun d!45543 () Bool)

(assert (=> d!45543 (= (apply!120 lt!73467 lt!73468) (get!1531 (getValueByKey!176 (toList!888 lt!73467) lt!73468)))))

(declare-fun bs!6034 () Bool)

(assert (= bs!6034 d!45543))

(declare-fun m!172069 () Bool)

(assert (=> bs!6034 m!172069))

(assert (=> bs!6034 m!172069))

(declare-fun m!172071 () Bool)

(assert (=> bs!6034 m!172071))

(assert (=> b!140211 d!45543))

(declare-fun d!45545 () Bool)

(assert (=> d!45545 (= (apply!120 (+!179 lt!73485 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))) lt!73480) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73485 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))) lt!73480)))))

(declare-fun bs!6035 () Bool)

(assert (= bs!6035 d!45545))

(declare-fun m!172073 () Bool)

(assert (=> bs!6035 m!172073))

(assert (=> bs!6035 m!172073))

(declare-fun m!172075 () Bool)

(assert (=> bs!6035 m!172075))

(assert (=> b!140211 d!45545))

(assert (=> b!140211 d!44977))

(declare-fun d!45547 () Bool)

(declare-fun e!93010 () Bool)

(assert (=> d!45547 e!93010))

(declare-fun res!68036 () Bool)

(assert (=> d!45547 (=> (not res!68036) (not e!93010))))

(declare-fun lt!74717 () ListLongMap!1745)

(assert (=> d!45547 (= res!68036 (contains!923 lt!74717 (_1!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74714 () List!1745)

(assert (=> d!45547 (= lt!74717 (ListLongMap!1746 lt!74714))))

(declare-fun lt!74715 () Unit!4373)

(declare-fun lt!74716 () Unit!4373)

(assert (=> d!45547 (= lt!74715 lt!74716)))

(assert (=> d!45547 (= (getValueByKey!176 lt!74714 (_1!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45547 (= lt!74716 (lemmaContainsTupThenGetReturnValue!90 lt!74714 (_1!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45547 (= lt!74714 (insertStrictlySorted!93 (toList!888 lt!73467) (_1!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45547 (= (+!179 lt!73467 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74717)))

(declare-fun b!142740 () Bool)

(declare-fun res!68037 () Bool)

(assert (=> b!142740 (=> (not res!68037) (not e!93010))))

(assert (=> b!142740 (= res!68037 (= (getValueByKey!176 (toList!888 lt!74717) (_1!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142741 () Bool)

(assert (=> b!142741 (= e!93010 (contains!925 (toList!888 lt!74717) (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45547 res!68036) b!142740))

(assert (= (and b!142740 res!68037) b!142741))

(declare-fun m!172077 () Bool)

(assert (=> d!45547 m!172077))

(declare-fun m!172079 () Bool)

(assert (=> d!45547 m!172079))

(declare-fun m!172081 () Bool)

(assert (=> d!45547 m!172081))

(declare-fun m!172083 () Bool)

(assert (=> d!45547 m!172083))

(declare-fun m!172085 () Bool)

(assert (=> b!142740 m!172085))

(declare-fun m!172087 () Bool)

(assert (=> b!142741 m!172087))

(assert (=> b!140211 d!45547))

(declare-fun d!45549 () Bool)

(assert (=> d!45549 (= (apply!120 (+!179 lt!73467 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73468) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73467 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73468)))))

(declare-fun bs!6036 () Bool)

(assert (= bs!6036 d!45549))

(declare-fun m!172089 () Bool)

(assert (=> bs!6036 m!172089))

(assert (=> bs!6036 m!172089))

(declare-fun m!172091 () Bool)

(assert (=> bs!6036 m!172091))

(assert (=> b!140211 d!45549))

(declare-fun d!45551 () Bool)

(assert (=> d!45551 (= (apply!120 lt!73485 lt!73480) (get!1531 (getValueByKey!176 (toList!888 lt!73485) lt!73480)))))

(declare-fun bs!6037 () Bool)

(assert (= bs!6037 d!45551))

(declare-fun m!172093 () Bool)

(assert (=> bs!6037 m!172093))

(assert (=> bs!6037 m!172093))

(declare-fun m!172095 () Bool)

(assert (=> bs!6037 m!172095))

(assert (=> b!140211 d!45551))

(declare-fun d!45553 () Bool)

(assert (=> d!45553 (= (apply!120 (+!179 lt!73467 (tuple2!2699 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73468) (apply!120 lt!73467 lt!73468))))

(declare-fun lt!74718 () Unit!4373)

(assert (=> d!45553 (= lt!74718 (choose!856 lt!73467 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73468))))

(declare-fun e!93011 () Bool)

(assert (=> d!45553 e!93011))

(declare-fun res!68038 () Bool)

(assert (=> d!45553 (=> (not res!68038) (not e!93011))))

(assert (=> d!45553 (= res!68038 (contains!923 lt!73467 lt!73468))))

(assert (=> d!45553 (= (addApplyDifferent!96 lt!73467 lt!73471 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73468) lt!74718)))

(declare-fun b!142742 () Bool)

(assert (=> b!142742 (= e!93011 (not (= lt!73468 lt!73471)))))

(assert (= (and d!45553 res!68038) b!142742))

(assert (=> d!45553 m!167335))

(declare-fun m!172097 () Bool)

(assert (=> d!45553 m!172097))

(assert (=> d!45553 m!166029))

(declare-fun m!172099 () Bool)

(assert (=> d!45553 m!172099))

(assert (=> d!45553 m!167323))

(assert (=> d!45553 m!167323))

(assert (=> d!45553 m!167325))

(assert (=> b!140211 d!45553))

(declare-fun d!45555 () Bool)

(assert (=> d!45555 (= (apply!120 (+!179 lt!73469 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))) lt!73474) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73469 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))) lt!73474)))))

(declare-fun bs!6038 () Bool)

(assert (= bs!6038 d!45555))

(declare-fun m!172101 () Bool)

(assert (=> bs!6038 m!172101))

(assert (=> bs!6038 m!172101))

(declare-fun m!172103 () Bool)

(assert (=> bs!6038 m!172103))

(assert (=> b!140211 d!45555))

(declare-fun d!45557 () Bool)

(declare-fun e!93012 () Bool)

(assert (=> d!45557 e!93012))

(declare-fun res!68039 () Bool)

(assert (=> d!45557 (=> (not res!68039) (not e!93012))))

(declare-fun lt!74722 () ListLongMap!1745)

(assert (=> d!45557 (= res!68039 (contains!923 lt!74722 (_1!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))))))

(declare-fun lt!74719 () List!1745)

(assert (=> d!45557 (= lt!74722 (ListLongMap!1746 lt!74719))))

(declare-fun lt!74720 () Unit!4373)

(declare-fun lt!74721 () Unit!4373)

(assert (=> d!45557 (= lt!74720 lt!74721)))

(assert (=> d!45557 (= (getValueByKey!176 lt!74719 (_1!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))))))

(assert (=> d!45557 (= lt!74721 (lemmaContainsTupThenGetReturnValue!90 lt!74719 (_1!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))))))

(assert (=> d!45557 (= lt!74719 (insertStrictlySorted!93 (toList!888 lt!73469) (_1!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))))))

(assert (=> d!45557 (= (+!179 lt!73469 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))) lt!74722)))

(declare-fun b!142743 () Bool)

(declare-fun res!68040 () Bool)

(assert (=> b!142743 (=> (not res!68040) (not e!93012))))

(assert (=> b!142743 (= res!68040 (= (getValueByKey!176 (toList!888 lt!74722) (_1!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))))))))

(declare-fun b!142744 () Bool)

(assert (=> b!142744 (= e!93012 (contains!925 (toList!888 lt!74722) (tuple2!2699 lt!73470 (minValue!2790 newMap!16))))))

(assert (= (and d!45557 res!68039) b!142743))

(assert (= (and b!142743 res!68040) b!142744))

(declare-fun m!172105 () Bool)

(assert (=> d!45557 m!172105))

(declare-fun m!172107 () Bool)

(assert (=> d!45557 m!172107))

(declare-fun m!172109 () Bool)

(assert (=> d!45557 m!172109))

(declare-fun m!172111 () Bool)

(assert (=> d!45557 m!172111))

(declare-fun m!172113 () Bool)

(assert (=> b!142743 m!172113))

(declare-fun m!172115 () Bool)

(assert (=> b!142744 m!172115))

(assert (=> b!140211 d!45557))

(declare-fun d!45559 () Bool)

(declare-fun e!93013 () Bool)

(assert (=> d!45559 e!93013))

(declare-fun res!68041 () Bool)

(assert (=> d!45559 (=> (not res!68041) (not e!93013))))

(declare-fun lt!74726 () ListLongMap!1745)

(assert (=> d!45559 (= res!68041 (contains!923 lt!74726 (_1!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))))))

(declare-fun lt!74723 () List!1745)

(assert (=> d!45559 (= lt!74726 (ListLongMap!1746 lt!74723))))

(declare-fun lt!74724 () Unit!4373)

(declare-fun lt!74725 () Unit!4373)

(assert (=> d!45559 (= lt!74724 lt!74725)))

(assert (=> d!45559 (= (getValueByKey!176 lt!74723 (_1!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))))))

(assert (=> d!45559 (= lt!74725 (lemmaContainsTupThenGetReturnValue!90 lt!74723 (_1!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))))))

(assert (=> d!45559 (= lt!74723 (insertStrictlySorted!93 (toList!888 lt!73485) (_1!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))))))

(assert (=> d!45559 (= (+!179 lt!73485 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))) lt!74726)))

(declare-fun b!142745 () Bool)

(declare-fun res!68042 () Bool)

(assert (=> b!142745 (=> (not res!68042) (not e!93013))))

(assert (=> b!142745 (= res!68042 (= (getValueByKey!176 (toList!888 lt!74726) (_1!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))))))))

(declare-fun b!142746 () Bool)

(assert (=> b!142746 (= e!93013 (contains!925 (toList!888 lt!74726) (tuple2!2699 lt!73481 (minValue!2790 newMap!16))))))

(assert (= (and d!45559 res!68041) b!142745))

(assert (= (and b!142745 res!68042) b!142746))

(declare-fun m!172117 () Bool)

(assert (=> d!45559 m!172117))

(declare-fun m!172119 () Bool)

(assert (=> d!45559 m!172119))

(declare-fun m!172121 () Bool)

(assert (=> d!45559 m!172121))

(declare-fun m!172123 () Bool)

(assert (=> d!45559 m!172123))

(declare-fun m!172125 () Bool)

(assert (=> b!142745 m!172125))

(declare-fun m!172127 () Bool)

(assert (=> b!142746 m!172127))

(assert (=> b!140211 d!45559))

(declare-fun d!45561 () Bool)

(assert (=> d!45561 (contains!923 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73483)))

(declare-fun lt!74727 () Unit!4373)

(assert (=> d!45561 (= lt!74727 (choose!857 lt!73482 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73483))))

(assert (=> d!45561 (contains!923 lt!73482 lt!73483)))

(assert (=> d!45561 (= (addStillContains!96 lt!73482 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73483) lt!74727)))

(declare-fun bs!6039 () Bool)

(assert (= bs!6039 d!45561))

(assert (=> bs!6039 m!167321))

(assert (=> bs!6039 m!167321))

(assert (=> bs!6039 m!167337))

(assert (=> bs!6039 m!166029))

(declare-fun m!172129 () Bool)

(assert (=> bs!6039 m!172129))

(declare-fun m!172131 () Bool)

(assert (=> bs!6039 m!172131))

(assert (=> b!140211 d!45561))

(declare-fun d!45563 () Bool)

(assert (=> d!45563 (= (apply!120 (+!179 lt!73485 (tuple2!2699 lt!73481 (minValue!2790 newMap!16))) lt!73480) (apply!120 lt!73485 lt!73480))))

(declare-fun lt!74728 () Unit!4373)

(assert (=> d!45563 (= lt!74728 (choose!856 lt!73485 lt!73481 (minValue!2790 newMap!16) lt!73480))))

(declare-fun e!93014 () Bool)

(assert (=> d!45563 e!93014))

(declare-fun res!68043 () Bool)

(assert (=> d!45563 (=> (not res!68043) (not e!93014))))

(assert (=> d!45563 (= res!68043 (contains!923 lt!73485 lt!73480))))

(assert (=> d!45563 (= (addApplyDifferent!96 lt!73485 lt!73481 (minValue!2790 newMap!16) lt!73480) lt!74728)))

(declare-fun b!142747 () Bool)

(assert (=> b!142747 (= e!93014 (not (= lt!73480 lt!73481)))))

(assert (= (and d!45563 res!68043) b!142747))

(assert (=> d!45563 m!167329))

(declare-fun m!172133 () Bool)

(assert (=> d!45563 m!172133))

(declare-fun m!172135 () Bool)

(assert (=> d!45563 m!172135))

(assert (=> d!45563 m!167339))

(assert (=> d!45563 m!167339))

(assert (=> d!45563 m!167341))

(assert (=> b!140211 d!45563))

(declare-fun d!45565 () Bool)

(assert (=> d!45565 (= (apply!120 (+!179 lt!73469 (tuple2!2699 lt!73470 (minValue!2790 newMap!16))) lt!73474) (apply!120 lt!73469 lt!73474))))

(declare-fun lt!74729 () Unit!4373)

(assert (=> d!45565 (= lt!74729 (choose!856 lt!73469 lt!73470 (minValue!2790 newMap!16) lt!73474))))

(declare-fun e!93015 () Bool)

(assert (=> d!45565 e!93015))

(declare-fun res!68044 () Bool)

(assert (=> d!45565 (=> (not res!68044) (not e!93015))))

(assert (=> d!45565 (= res!68044 (contains!923 lt!73469 lt!73474))))

(assert (=> d!45565 (= (addApplyDifferent!96 lt!73469 lt!73470 (minValue!2790 newMap!16) lt!73474) lt!74729)))

(declare-fun b!142748 () Bool)

(assert (=> b!142748 (= e!93015 (not (= lt!73474 lt!73470)))))

(assert (= (and d!45565 res!68044) b!142748))

(assert (=> d!45565 m!167343))

(declare-fun m!172137 () Bool)

(assert (=> d!45565 m!172137))

(declare-fun m!172139 () Bool)

(assert (=> d!45565 m!172139))

(assert (=> d!45565 m!167331))

(assert (=> d!45565 m!167331))

(assert (=> d!45565 m!167333))

(assert (=> b!140211 d!45565))

(declare-fun d!45567 () Bool)

(declare-fun e!93016 () Bool)

(assert (=> d!45567 e!93016))

(declare-fun res!68045 () Bool)

(assert (=> d!45567 (=> res!68045 e!93016)))

(declare-fun lt!74732 () Bool)

(assert (=> d!45567 (= res!68045 (not lt!74732))))

(declare-fun lt!74730 () Bool)

(assert (=> d!45567 (= lt!74732 lt!74730)))

(declare-fun lt!74731 () Unit!4373)

(declare-fun e!93017 () Unit!4373)

(assert (=> d!45567 (= lt!74731 e!93017)))

(declare-fun c!27001 () Bool)

(assert (=> d!45567 (= c!27001 lt!74730)))

(assert (=> d!45567 (= lt!74730 (containsKey!180 (toList!888 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73483))))

(assert (=> d!45567 (= (contains!923 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73483) lt!74732)))

(declare-fun b!142749 () Bool)

(declare-fun lt!74733 () Unit!4373)

(assert (=> b!142749 (= e!93017 lt!74733)))

(assert (=> b!142749 (= lt!74733 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73483))))

(assert (=> b!142749 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73483))))

(declare-fun b!142750 () Bool)

(declare-fun Unit!4526 () Unit!4373)

(assert (=> b!142750 (= e!93017 Unit!4526)))

(declare-fun b!142751 () Bool)

(assert (=> b!142751 (= e!93016 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73482 (tuple2!2699 lt!73484 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73483)))))

(assert (= (and d!45567 c!27001) b!142749))

(assert (= (and d!45567 (not c!27001)) b!142750))

(assert (= (and d!45567 (not res!68045)) b!142751))

(declare-fun m!172141 () Bool)

(assert (=> d!45567 m!172141))

(declare-fun m!172143 () Bool)

(assert (=> b!142749 m!172143))

(declare-fun m!172145 () Bool)

(assert (=> b!142749 m!172145))

(assert (=> b!142749 m!172145))

(declare-fun m!172147 () Bool)

(assert (=> b!142749 m!172147))

(assert (=> b!142751 m!172145))

(assert (=> b!142751 m!172145))

(assert (=> b!142751 m!172147))

(assert (=> b!140211 d!45567))

(declare-fun d!45569 () Bool)

(assert (=> d!45569 (= (apply!120 lt!73615 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (getValueByKey!176 (toList!888 lt!73615) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6040 () Bool)

(assert (= bs!6040 d!45569))

(assert (=> bs!6040 m!170673))

(assert (=> bs!6040 m!170673))

(declare-fun m!172149 () Bool)

(assert (=> bs!6040 m!172149))

(assert (=> b!140402 d!45569))

(declare-fun d!45571 () Bool)

(assert (=> d!45571 (isDefined!129 (getValueByKey!176 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!74734 () Unit!4373)

(assert (=> d!45571 (= lt!74734 (choose!864 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!93018 () Bool)

(assert (=> d!45571 e!93018))

(declare-fun res!68046 () Bool)

(assert (=> d!45571 (=> (not res!68046) (not e!93018))))

(assert (=> d!45571 (= res!68046 (isStrictlySorted!325 (toList!888 lt!73031)))))

(assert (=> d!45571 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74734)))

(declare-fun b!142752 () Bool)

(assert (=> b!142752 (= e!93018 (containsKey!180 (toList!888 lt!73031) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45571 res!68046) b!142752))

(assert (=> d!45571 m!166293))

(assert (=> d!45571 m!166293))

(assert (=> d!45571 m!168135))

(declare-fun m!172151 () Bool)

(assert (=> d!45571 m!172151))

(declare-fun m!172153 () Bool)

(assert (=> d!45571 m!172153))

(assert (=> b!142752 m!168131))

(assert (=> b!140612 d!45571))

(assert (=> b!140612 d!45293))

(assert (=> b!140612 d!43737))

(assert (=> b!140781 d!43777))

(declare-fun b!142756 () Bool)

(declare-fun e!93020 () Option!182)

(assert (=> b!142756 (= e!93020 None!180)))

(declare-fun b!142753 () Bool)

(declare-fun e!93019 () Option!182)

(assert (=> b!142753 (= e!93019 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72887))))))))

(declare-fun b!142754 () Bool)

(assert (=> b!142754 (= e!93019 e!93020)))

(declare-fun c!27003 () Bool)

(assert (=> b!142754 (= c!27003 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72887))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72887)))) lt!72888))))))

(declare-fun d!45573 () Bool)

(declare-fun c!27002 () Bool)

(assert (=> d!45573 (= c!27002 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72887))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72887)))) lt!72888)))))

(assert (=> d!45573 (= (getValueByKey!176 (t!6329 (toList!888 lt!72887)) lt!72888) e!93019)))

(declare-fun b!142755 () Bool)

(assert (=> b!142755 (= e!93020 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72887))) lt!72888))))

(assert (= (and d!45573 c!27002) b!142753))

(assert (= (and d!45573 (not c!27002)) b!142754))

(assert (= (and b!142754 c!27003) b!142755))

(assert (= (and b!142754 (not c!27003)) b!142756))

(declare-fun m!172155 () Bool)

(assert (=> b!142755 m!172155))

(assert (=> b!140076 d!45573))

(assert (=> b!140068 d!45005))

(declare-fun d!45575 () Bool)

(declare-fun res!68047 () Bool)

(declare-fun e!93021 () Bool)

(assert (=> d!45575 (=> res!68047 e!93021)))

(assert (=> d!45575 (= res!68047 (and ((_ is Cons!1741) (toList!888 lt!73067)) (= (_1!1360 (h!2348 (toList!888 lt!73067))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45575 (= (containsKey!180 (toList!888 lt!73067) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!93021)))

(declare-fun b!142757 () Bool)

(declare-fun e!93022 () Bool)

(assert (=> b!142757 (= e!93021 e!93022)))

(declare-fun res!68048 () Bool)

(assert (=> b!142757 (=> (not res!68048) (not e!93022))))

(assert (=> b!142757 (= res!68048 (and (or (not ((_ is Cons!1741) (toList!888 lt!73067))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73067))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) ((_ is Cons!1741) (toList!888 lt!73067)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73067))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142758 () Bool)

(assert (=> b!142758 (= e!93022 (containsKey!180 (t!6329 (toList!888 lt!73067)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45575 (not res!68047)) b!142757))

(assert (= (and b!142757 res!68048) b!142758))

(declare-fun m!172157 () Bool)

(assert (=> b!142758 m!172157))

(assert (=> d!43649 d!45575))

(declare-fun d!45577 () Bool)

(assert (=> d!45577 (= (get!1531 (getValueByKey!176 (toList!888 lt!73156) lt!73151)) (v!3284 (getValueByKey!176 (toList!888 lt!73156) lt!73151)))))

(assert (=> d!43507 d!45577))

(declare-fun b!142762 () Bool)

(declare-fun e!93024 () Option!182)

(assert (=> b!142762 (= e!93024 None!180)))

(declare-fun b!142759 () Bool)

(declare-fun e!93023 () Option!182)

(assert (=> b!142759 (= e!93023 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73156)))))))

(declare-fun b!142760 () Bool)

(assert (=> b!142760 (= e!93023 e!93024)))

(declare-fun c!27005 () Bool)

(assert (=> b!142760 (= c!27005 (and ((_ is Cons!1741) (toList!888 lt!73156)) (not (= (_1!1360 (h!2348 (toList!888 lt!73156))) lt!73151))))))

(declare-fun d!45579 () Bool)

(declare-fun c!27004 () Bool)

(assert (=> d!45579 (= c!27004 (and ((_ is Cons!1741) (toList!888 lt!73156)) (= (_1!1360 (h!2348 (toList!888 lt!73156))) lt!73151)))))

(assert (=> d!45579 (= (getValueByKey!176 (toList!888 lt!73156) lt!73151) e!93023)))

(declare-fun b!142761 () Bool)

(assert (=> b!142761 (= e!93024 (getValueByKey!176 (t!6329 (toList!888 lt!73156)) lt!73151))))

(assert (= (and d!45579 c!27004) b!142759))

(assert (= (and d!45579 (not c!27004)) b!142760))

(assert (= (and b!142760 c!27005) b!142761))

(assert (= (and b!142760 (not c!27005)) b!142762))

(declare-fun m!172159 () Bool)

(assert (=> b!142761 m!172159))

(assert (=> d!43507 d!45579))

(declare-fun d!45581 () Bool)

(declare-fun lt!74735 () Bool)

(assert (=> d!45581 (= lt!74735 (select (content!138 (toList!888 lt!73383)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun e!93026 () Bool)

(assert (=> d!45581 (= lt!74735 e!93026)))

(declare-fun res!68049 () Bool)

(assert (=> d!45581 (=> (not res!68049) (not e!93026))))

(assert (=> d!45581 (= res!68049 ((_ is Cons!1741) (toList!888 lt!73383)))))

(assert (=> d!45581 (= (contains!925 (toList!888 lt!73383) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74735)))

(declare-fun b!142763 () Bool)

(declare-fun e!93025 () Bool)

(assert (=> b!142763 (= e!93026 e!93025)))

(declare-fun res!68050 () Bool)

(assert (=> b!142763 (=> res!68050 e!93025)))

(assert (=> b!142763 (= res!68050 (= (h!2348 (toList!888 lt!73383)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!142764 () Bool)

(assert (=> b!142764 (= e!93025 (contains!925 (t!6329 (toList!888 lt!73383)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!45581 res!68049) b!142763))

(assert (= (and b!142763 (not res!68050)) b!142764))

(declare-fun m!172161 () Bool)

(assert (=> d!45581 m!172161))

(declare-fun m!172163 () Bool)

(assert (=> d!45581 m!172163))

(declare-fun m!172165 () Bool)

(assert (=> b!142764 m!172165))

(assert (=> b!140051 d!45581))

(declare-fun b!142768 () Bool)

(declare-fun e!93028 () Option!182)

(assert (=> b!142768 (= e!93028 None!180)))

(declare-fun b!142765 () Bool)

(declare-fun e!93027 () Option!182)

(assert (=> b!142765 (= e!93027 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!72907))))))))

(declare-fun b!142766 () Bool)

(assert (=> b!142766 (= e!93027 e!93028)))

(declare-fun c!27007 () Bool)

(assert (=> b!142766 (= c!27007 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!45583 () Bool)

(declare-fun c!27006 () Bool)

(assert (=> d!45583 (= c!27006 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72907))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72907)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45583 (= (getValueByKey!176 (t!6329 (toList!888 lt!72907)) #b0000000000000000000000000000000000000000000000000000000000000000) e!93027)))

(declare-fun b!142767 () Bool)

(assert (=> b!142767 (= e!93028 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!72907))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45583 c!27006) b!142765))

(assert (= (and d!45583 (not c!27006)) b!142766))

(assert (= (and b!142766 c!27007) b!142767))

(assert (= (and b!142766 (not c!27007)) b!142768))

(declare-fun m!172167 () Bool)

(assert (=> b!142767 m!172167))

(assert (=> b!140112 d!45583))

(declare-fun d!45585 () Bool)

(assert (=> d!45585 (= (get!1531 (getValueByKey!176 (toList!888 lt!73314) lt!73319)) (v!3284 (getValueByKey!176 (toList!888 lt!73314) lt!73319)))))

(assert (=> d!43627 d!45585))

(declare-fun b!142772 () Bool)

(declare-fun e!93030 () Option!182)

(assert (=> b!142772 (= e!93030 None!180)))

(declare-fun b!142769 () Bool)

(declare-fun e!93029 () Option!182)

(assert (=> b!142769 (= e!93029 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73314)))))))

(declare-fun b!142770 () Bool)

(assert (=> b!142770 (= e!93029 e!93030)))

(declare-fun c!27009 () Bool)

(assert (=> b!142770 (= c!27009 (and ((_ is Cons!1741) (toList!888 lt!73314)) (not (= (_1!1360 (h!2348 (toList!888 lt!73314))) lt!73319))))))

(declare-fun d!45587 () Bool)

(declare-fun c!27008 () Bool)

(assert (=> d!45587 (= c!27008 (and ((_ is Cons!1741) (toList!888 lt!73314)) (= (_1!1360 (h!2348 (toList!888 lt!73314))) lt!73319)))))

(assert (=> d!45587 (= (getValueByKey!176 (toList!888 lt!73314) lt!73319) e!93029)))

(declare-fun b!142771 () Bool)

(assert (=> b!142771 (= e!93030 (getValueByKey!176 (t!6329 (toList!888 lt!73314)) lt!73319))))

(assert (= (and d!45587 c!27008) b!142769))

(assert (= (and d!45587 (not c!27008)) b!142770))

(assert (= (and b!142770 c!27009) b!142771))

(assert (= (and b!142770 (not c!27009)) b!142772))

(declare-fun m!172169 () Bool)

(assert (=> b!142771 m!172169))

(assert (=> d!43627 d!45587))

(assert (=> b!140752 d!44145))

(assert (=> b!140752 d!44147))

(assert (=> b!140585 d!44193))

(assert (=> bm!15631 d!44775))

(declare-fun d!45589 () Bool)

(assert (=> d!45589 (= (get!1529 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140048 d!45589))

(declare-fun d!45591 () Bool)

(declare-fun c!27010 () Bool)

(assert (=> d!45591 (= c!27010 ((_ is Nil!1742) (toList!888 lt!73031)))))

(declare-fun e!93031 () (InoxSet tuple2!2698))

(assert (=> d!45591 (= (content!138 (toList!888 lt!73031)) e!93031)))

(declare-fun b!142773 () Bool)

(assert (=> b!142773 (= e!93031 ((as const (Array tuple2!2698 Bool)) false))))

(declare-fun b!142774 () Bool)

(assert (=> b!142774 (= e!93031 ((_ map or) (store ((as const (Array tuple2!2698 Bool)) false) (h!2348 (toList!888 lt!73031)) true) (content!138 (t!6329 (toList!888 lt!73031)))))))

(assert (= (and d!45591 c!27010) b!142773))

(assert (= (and d!45591 (not c!27010)) b!142774))

(declare-fun m!172171 () Bool)

(assert (=> b!142774 m!172171))

(assert (=> b!142774 m!171137))

(assert (=> d!43855 d!45591))

(declare-fun d!45593 () Bool)

(declare-fun res!68051 () Bool)

(declare-fun e!93032 () Bool)

(assert (=> d!45593 (=> res!68051 e!93032)))

(assert (=> d!45593 (= res!68051 (and ((_ is Cons!1741) (toList!888 lt!73306)) (= (_1!1360 (h!2348 (toList!888 lt!73306))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45593 (= (containsKey!180 (toList!888 lt!73306) #b1000000000000000000000000000000000000000000000000000000000000000) e!93032)))

(declare-fun b!142775 () Bool)

(declare-fun e!93033 () Bool)

(assert (=> b!142775 (= e!93032 e!93033)))

(declare-fun res!68052 () Bool)

(assert (=> b!142775 (=> (not res!68052) (not e!93033))))

(assert (=> b!142775 (= res!68052 (and (or (not ((_ is Cons!1741) (toList!888 lt!73306))) (bvsle (_1!1360 (h!2348 (toList!888 lt!73306))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1741) (toList!888 lt!73306)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73306))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142776 () Bool)

(assert (=> b!142776 (= e!93033 (containsKey!180 (t!6329 (toList!888 lt!73306)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45593 (not res!68051)) b!142775))

(assert (= (and b!142775 res!68052) b!142776))

(declare-fun m!172173 () Bool)

(assert (=> b!142776 m!172173))

(assert (=> d!43947 d!45593))

(declare-fun b!142780 () Bool)

(declare-fun e!93035 () Option!182)

(assert (=> b!142780 (= e!93035 None!180)))

(declare-fun b!142777 () Bool)

(declare-fun e!93034 () Option!182)

(assert (=> b!142777 (= e!93034 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73843)))))))

(declare-fun b!142778 () Bool)

(assert (=> b!142778 (= e!93034 e!93035)))

(declare-fun c!27012 () Bool)

(assert (=> b!142778 (= c!27012 (and ((_ is Cons!1741) (toList!888 lt!73843)) (not (= (_1!1360 (h!2348 (toList!888 lt!73843))) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun d!45595 () Bool)

(declare-fun c!27011 () Bool)

(assert (=> d!45595 (= c!27011 (and ((_ is Cons!1741) (toList!888 lt!73843)) (= (_1!1360 (h!2348 (toList!888 lt!73843))) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!45595 (= (getValueByKey!176 (toList!888 lt!73843) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!93034)))

(declare-fun b!142779 () Bool)

(assert (=> b!142779 (= e!93035 (getValueByKey!176 (t!6329 (toList!888 lt!73843)) (_1!1360 (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45595 c!27011) b!142777))

(assert (= (and d!45595 (not c!27011)) b!142778))

(assert (= (and b!142778 c!27012) b!142779))

(assert (= (and b!142778 (not c!27012)) b!142780))

(declare-fun m!172175 () Bool)

(assert (=> b!142779 m!172175))

(assert (=> b!140739 d!45595))

(declare-fun b!142784 () Bool)

(declare-fun e!93037 () Option!182)

(assert (=> b!142784 (= e!93037 None!180)))

(declare-fun b!142781 () Bool)

(declare-fun e!93036 () Option!182)

(assert (=> b!142781 (= e!93036 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 call!15463))))))))

(declare-fun b!142782 () Bool)

(assert (=> b!142782 (= e!93036 e!93037)))

(declare-fun c!27014 () Bool)

(assert (=> b!142782 (= c!27014 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15463))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15463)))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))))

(declare-fun c!27013 () Bool)

(declare-fun d!45597 () Bool)

(assert (=> d!45597 (= c!27013 (and ((_ is Cons!1741) (t!6329 (toList!888 call!15463))) (= (_1!1360 (h!2348 (t!6329 (toList!888 call!15463)))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999))))))))

(assert (=> d!45597 (= (getValueByKey!176 (t!6329 (toList!888 call!15463)) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) e!93036)))

(declare-fun b!142783 () Bool)

(assert (=> b!142783 (= e!93037 (getValueByKey!176 (t!6329 (t!6329 (toList!888 call!15463))) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (= (and d!45597 c!27013) b!142781))

(assert (= (and d!45597 (not c!27013)) b!142782))

(assert (= (and b!142782 c!27014) b!142783))

(assert (= (and b!142782 (not c!27014)) b!142784))

(declare-fun m!172177 () Bool)

(assert (=> b!142783 m!172177))

(assert (=> b!140186 d!45597))

(assert (=> d!43763 d!43527))

(declare-fun d!45599 () Bool)

(declare-fun e!93038 () Bool)

(assert (=> d!45599 e!93038))

(declare-fun res!68053 () Bool)

(assert (=> d!45599 (=> res!68053 e!93038)))

(declare-fun lt!74738 () Bool)

(assert (=> d!45599 (= res!68053 (not lt!74738))))

(declare-fun lt!74736 () Bool)

(assert (=> d!45599 (= lt!74738 lt!74736)))

(declare-fun lt!74737 () Unit!4373)

(declare-fun e!93039 () Unit!4373)

(assert (=> d!45599 (= lt!74737 e!93039)))

(declare-fun c!27015 () Bool)

(assert (=> d!45599 (= c!27015 lt!74736)))

(assert (=> d!45599 (= lt!74736 (containsKey!180 (toList!888 lt!73550) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45599 (= (contains!923 lt!73550 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74738)))

(declare-fun b!142785 () Bool)

(declare-fun lt!74739 () Unit!4373)

(assert (=> b!142785 (= e!93039 lt!74739)))

(assert (=> b!142785 (= lt!74739 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73550) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142785 (isDefined!129 (getValueByKey!176 (toList!888 lt!73550) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142786 () Bool)

(declare-fun Unit!4527 () Unit!4373)

(assert (=> b!142786 (= e!93039 Unit!4527)))

(declare-fun b!142787 () Bool)

(assert (=> b!142787 (= e!93038 (isDefined!129 (getValueByKey!176 (toList!888 lt!73550) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45599 c!27015) b!142785))

(assert (= (and d!45599 (not c!27015)) b!142786))

(assert (= (and d!45599 (not res!68053)) b!142787))

(declare-fun m!172179 () Bool)

(assert (=> d!45599 m!172179))

(declare-fun m!172181 () Bool)

(assert (=> b!142785 m!172181))

(declare-fun m!172183 () Bool)

(assert (=> b!142785 m!172183))

(assert (=> b!142785 m!172183))

(declare-fun m!172185 () Bool)

(assert (=> b!142785 m!172185))

(assert (=> b!142787 m!172183))

(assert (=> b!142787 m!172183))

(assert (=> b!142787 m!172185))

(assert (=> d!43673 d!45599))

(assert (=> d!43673 d!43527))

(declare-fun b!142788 () Bool)

(declare-fun e!93048 () Unit!4373)

(declare-fun lt!74761 () Unit!4373)

(assert (=> b!142788 (= e!93048 lt!74761)))

(declare-fun lt!74755 () ListLongMap!1745)

(assert (=> b!142788 (= lt!74755 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))))))

(declare-fun lt!74757 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74757 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74756 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74756 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000))))

(declare-fun lt!74759 () Unit!4373)

(assert (=> b!142788 (= lt!74759 (addStillContains!96 lt!74755 lt!74757 (zeroValue!2790 (_2!1361 lt!73257)) lt!74756))))

(assert (=> b!142788 (contains!923 (+!179 lt!74755 (tuple2!2699 lt!74757 (zeroValue!2790 (_2!1361 lt!73257)))) lt!74756)))

(declare-fun lt!74750 () Unit!4373)

(assert (=> b!142788 (= lt!74750 lt!74759)))

(declare-fun lt!74758 () ListLongMap!1745)

(assert (=> b!142788 (= lt!74758 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))))))

(declare-fun lt!74754 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74754 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74753 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74753 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000))))

(declare-fun lt!74749 () Unit!4373)

(assert (=> b!142788 (= lt!74749 (addApplyDifferent!96 lt!74758 lt!74754 (minValue!2790 (_2!1361 lt!73257)) lt!74753))))

(assert (=> b!142788 (= (apply!120 (+!179 lt!74758 (tuple2!2699 lt!74754 (minValue!2790 (_2!1361 lt!73257)))) lt!74753) (apply!120 lt!74758 lt!74753))))

(declare-fun lt!74745 () Unit!4373)

(assert (=> b!142788 (= lt!74745 lt!74749)))

(declare-fun lt!74740 () ListLongMap!1745)

(assert (=> b!142788 (= lt!74740 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))))))

(declare-fun lt!74744 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74744 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74741 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74741 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000))))

(declare-fun lt!74752 () Unit!4373)

(assert (=> b!142788 (= lt!74752 (addApplyDifferent!96 lt!74740 lt!74744 (zeroValue!2790 (_2!1361 lt!73257)) lt!74741))))

(assert (=> b!142788 (= (apply!120 (+!179 lt!74740 (tuple2!2699 lt!74744 (zeroValue!2790 (_2!1361 lt!73257)))) lt!74741) (apply!120 lt!74740 lt!74741))))

(declare-fun lt!74748 () Unit!4373)

(assert (=> b!142788 (= lt!74748 lt!74752)))

(declare-fun lt!74742 () ListLongMap!1745)

(assert (=> b!142788 (= lt!74742 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))))))

(declare-fun lt!74743 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74743 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74747 () (_ BitVec 64))

(assert (=> b!142788 (= lt!74747 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000))))

(assert (=> b!142788 (= lt!74761 (addApplyDifferent!96 lt!74742 lt!74743 (minValue!2790 (_2!1361 lt!73257)) lt!74747))))

(assert (=> b!142788 (= (apply!120 (+!179 lt!74742 (tuple2!2699 lt!74743 (minValue!2790 (_2!1361 lt!73257)))) lt!74747) (apply!120 lt!74742 lt!74747))))

(declare-fun b!142789 () Bool)

(declare-fun e!93052 () ListLongMap!1745)

(declare-fun call!15778 () ListLongMap!1745)

(assert (=> b!142789 (= e!93052 call!15778)))

(declare-fun b!142790 () Bool)

(declare-fun e!93040 () Bool)

(assert (=> b!142790 (= e!93040 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(declare-fun b!142791 () Bool)

(declare-fun e!93044 () Bool)

(declare-fun call!15783 () Bool)

(assert (=> b!142791 (= e!93044 (not call!15783))))

(declare-fun b!142792 () Bool)

(declare-fun e!93047 () Bool)

(declare-fun lt!74760 () ListLongMap!1745)

(assert (=> b!142792 (= e!93047 (= (apply!120 lt!74760 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)) (get!1528 (select (arr!2316 (_values!2923 (_2!1361 lt!73257))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 (_2!1361 lt!73257)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!142792 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2588 (_values!2923 (_2!1361 lt!73257)))))))

(assert (=> b!142792 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(declare-fun bm!15775 () Bool)

(assert (=> bm!15775 (= call!15783 (contains!923 lt!74760 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15776 () Bool)

(declare-fun call!15782 () ListLongMap!1745)

(assert (=> bm!15776 (= call!15778 call!15782)))

(declare-fun b!142794 () Bool)

(declare-fun e!93045 () Bool)

(declare-fun call!15780 () Bool)

(assert (=> b!142794 (= e!93045 (not call!15780))))

(declare-fun b!142795 () Bool)

(declare-fun e!93043 () Bool)

(assert (=> b!142795 (= e!93043 (validKeyInArray!0 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(declare-fun b!142796 () Bool)

(declare-fun res!68054 () Bool)

(declare-fun e!93041 () Bool)

(assert (=> b!142796 (=> (not res!68054) (not e!93041))))

(assert (=> b!142796 (= res!68054 e!93045)))

(declare-fun c!27021 () Bool)

(assert (=> b!142796 (= c!27021 (not (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!142797 () Bool)

(declare-fun res!68059 () Bool)

(assert (=> b!142797 (=> (not res!68059) (not e!93041))))

(declare-fun e!93051 () Bool)

(assert (=> b!142797 (= res!68059 e!93051)))

(declare-fun res!68058 () Bool)

(assert (=> b!142797 (=> res!68058 e!93051)))

(assert (=> b!142797 (= res!68058 (not e!93043))))

(declare-fun res!68055 () Bool)

(assert (=> b!142797 (=> (not res!68055) (not e!93043))))

(assert (=> b!142797 (= res!68055 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(declare-fun b!142798 () Bool)

(declare-fun e!93049 () Bool)

(assert (=> b!142798 (= e!93049 (= (apply!120 lt!74760 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (_2!1361 lt!73257))))))

(declare-fun b!142799 () Bool)

(declare-fun e!93050 () ListLongMap!1745)

(assert (=> b!142799 (= e!93050 (+!179 call!15782 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1361 lt!73257)))))))

(declare-fun b!142800 () Bool)

(declare-fun e!93042 () ListLongMap!1745)

(declare-fun call!15784 () ListLongMap!1745)

(assert (=> b!142800 (= e!93042 call!15784)))

(declare-fun b!142801 () Bool)

(assert (=> b!142801 (= e!93041 e!93044)))

(declare-fun c!27017 () Bool)

(assert (=> b!142801 (= c!27017 (not (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!142802 () Bool)

(declare-fun c!27019 () Bool)

(assert (=> b!142802 (= c!27019 (and (not (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!142802 (= e!93052 e!93042)))

(declare-fun b!142803 () Bool)

(assert (=> b!142803 (= e!93050 e!93052)))

(declare-fun c!27020 () Bool)

(assert (=> b!142803 (= c!27020 (and (not (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!142804 () Bool)

(assert (=> b!142804 (= e!93042 call!15778)))

(declare-fun b!142805 () Bool)

(assert (=> b!142805 (= e!93051 e!93047)))

(declare-fun res!68062 () Bool)

(assert (=> b!142805 (=> (not res!68062) (not e!93047))))

(assert (=> b!142805 (= res!68062 (contains!923 lt!74760 (select (arr!2315 (_keys!4699 (_2!1361 lt!73257))) #b00000000000000000000000000000000)))))

(assert (=> b!142805 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(declare-fun b!142793 () Bool)

(assert (=> b!142793 (= e!93044 e!93049)))

(declare-fun res!68056 () Bool)

(assert (=> b!142793 (= res!68056 call!15783)))

(assert (=> b!142793 (=> (not res!68056) (not e!93049))))

(declare-fun d!45601 () Bool)

(assert (=> d!45601 e!93041))

(declare-fun res!68060 () Bool)

(assert (=> d!45601 (=> (not res!68060) (not e!93041))))

(assert (=> d!45601 (= res!68060 (or (bvsge #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))))

(declare-fun lt!74751 () ListLongMap!1745)

(assert (=> d!45601 (= lt!74760 lt!74751)))

(declare-fun lt!74746 () Unit!4373)

(assert (=> d!45601 (= lt!74746 e!93048)))

(declare-fun c!27016 () Bool)

(assert (=> d!45601 (= c!27016 e!93040)))

(declare-fun res!68061 () Bool)

(assert (=> d!45601 (=> (not res!68061) (not e!93040))))

(assert (=> d!45601 (= res!68061 (bvslt #b00000000000000000000000000000000 (size!2587 (_keys!4699 (_2!1361 lt!73257)))))))

(assert (=> d!45601 (= lt!74751 e!93050)))

(declare-fun c!27018 () Bool)

(assert (=> d!45601 (= c!27018 (and (not (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (_2!1361 lt!73257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!45601 (validMask!0 (mask!7280 (_2!1361 lt!73257)))))

(assert (=> d!45601 (= (getCurrentListMap!561 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))) lt!74760)))

(declare-fun b!142806 () Bool)

(declare-fun e!93046 () Bool)

(assert (=> b!142806 (= e!93046 (= (apply!120 lt!74760 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (_2!1361 lt!73257))))))

(declare-fun bm!15777 () Bool)

(declare-fun call!15779 () ListLongMap!1745)

(declare-fun call!15781 () ListLongMap!1745)

(assert (=> bm!15777 (= call!15779 call!15781)))

(declare-fun bm!15778 () Bool)

(assert (=> bm!15778 (= call!15784 call!15779)))

(declare-fun b!142807 () Bool)

(assert (=> b!142807 (= e!93045 e!93046)))

(declare-fun res!68057 () Bool)

(assert (=> b!142807 (= res!68057 call!15780)))

(assert (=> b!142807 (=> (not res!68057) (not e!93046))))

(declare-fun bm!15779 () Bool)

(assert (=> bm!15779 (= call!15781 (getCurrentListMapNoExtraKeys!145 (_keys!4699 (_2!1361 lt!73257)) (_values!2923 (_2!1361 lt!73257)) (mask!7280 (_2!1361 lt!73257)) (extraKeys!2695 (_2!1361 lt!73257)) (zeroValue!2790 (_2!1361 lt!73257)) (minValue!2790 (_2!1361 lt!73257)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1361 lt!73257))))))

(declare-fun bm!15780 () Bool)

(assert (=> bm!15780 (= call!15782 (+!179 (ite c!27018 call!15781 (ite c!27020 call!15779 call!15784)) (ite (or c!27018 c!27020) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1361 lt!73257))) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1361 lt!73257))))))))

(declare-fun b!142808 () Bool)

(declare-fun Unit!4528 () Unit!4373)

(assert (=> b!142808 (= e!93048 Unit!4528)))

(declare-fun bm!15781 () Bool)

(assert (=> bm!15781 (= call!15780 (contains!923 lt!74760 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45601 c!27018) b!142799))

(assert (= (and d!45601 (not c!27018)) b!142803))

(assert (= (and b!142803 c!27020) b!142789))

(assert (= (and b!142803 (not c!27020)) b!142802))

(assert (= (and b!142802 c!27019) b!142804))

(assert (= (and b!142802 (not c!27019)) b!142800))

(assert (= (or b!142804 b!142800) bm!15778))

(assert (= (or b!142789 bm!15778) bm!15777))

(assert (= (or b!142789 b!142804) bm!15776))

(assert (= (or b!142799 bm!15777) bm!15779))

(assert (= (or b!142799 bm!15776) bm!15780))

(assert (= (and d!45601 res!68061) b!142790))

(assert (= (and d!45601 c!27016) b!142788))

(assert (= (and d!45601 (not c!27016)) b!142808))

(assert (= (and d!45601 res!68060) b!142797))

(assert (= (and b!142797 res!68055) b!142795))

(assert (= (and b!142797 (not res!68058)) b!142805))

(assert (= (and b!142805 res!68062) b!142792))

(assert (= (and b!142797 res!68059) b!142796))

(assert (= (and b!142796 c!27021) b!142807))

(assert (= (and b!142796 (not c!27021)) b!142794))

(assert (= (and b!142807 res!68057) b!142806))

(assert (= (or b!142807 b!142794) bm!15781))

(assert (= (and b!142796 res!68054) b!142801))

(assert (= (and b!142801 c!27017) b!142793))

(assert (= (and b!142801 (not c!27017)) b!142791))

(assert (= (and b!142793 res!68056) b!142798))

(assert (= (or b!142793 b!142791) bm!15775))

(declare-fun b_lambda!6373 () Bool)

(assert (=> (not b_lambda!6373) (not b!142792)))

(declare-fun tb!2565 () Bool)

(declare-fun t!6350 () Bool)

(assert (=> (and b!139297 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 (_2!1361 lt!73257))) t!6350) tb!2565))

(declare-fun result!4203 () Bool)

(assert (=> tb!2565 (= result!4203 tp_is_empty!2931)))

(assert (=> b!142792 t!6350))

(declare-fun b_and!8903 () Bool)

(assert (= b_and!8899 (and (=> t!6350 result!4203) b_and!8903)))

(declare-fun t!6352 () Bool)

(declare-fun tb!2567 () Bool)

(assert (=> (and b!139291 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (_2!1361 lt!73257))) t!6352) tb!2567))

(declare-fun result!4205 () Bool)

(assert (= result!4205 result!4203))

(assert (=> b!142792 t!6352))

(declare-fun b_and!8905 () Bool)

(assert (= b_and!8901 (and (=> t!6352 result!4205) b_and!8905)))

(declare-fun m!172187 () Bool)

(assert (=> b!142788 m!172187))

(declare-fun m!172189 () Bool)

(assert (=> b!142788 m!172189))

(declare-fun m!172191 () Bool)

(assert (=> b!142788 m!172191))

(declare-fun m!172193 () Bool)

(assert (=> b!142788 m!172193))

(declare-fun m!172195 () Bool)

(assert (=> b!142788 m!172195))

(declare-fun m!172197 () Bool)

(assert (=> b!142788 m!172197))

(declare-fun m!172199 () Bool)

(assert (=> b!142788 m!172199))

(declare-fun m!172201 () Bool)

(assert (=> b!142788 m!172201))

(declare-fun m!172203 () Bool)

(assert (=> b!142788 m!172203))

(declare-fun m!172205 () Bool)

(assert (=> b!142788 m!172205))

(declare-fun m!172207 () Bool)

(assert (=> b!142788 m!172207))

(assert (=> b!142788 m!172197))

(assert (=> b!142788 m!172205))

(assert (=> b!142788 m!168781))

(declare-fun m!172209 () Bool)

(assert (=> b!142788 m!172209))

(assert (=> b!142788 m!172195))

(declare-fun m!172211 () Bool)

(assert (=> b!142788 m!172211))

(declare-fun m!172213 () Bool)

(assert (=> b!142788 m!172213))

(declare-fun m!172215 () Bool)

(assert (=> b!142788 m!172215))

(assert (=> b!142788 m!172213))

(declare-fun m!172217 () Bool)

(assert (=> b!142788 m!172217))

(declare-fun m!172219 () Bool)

(assert (=> b!142798 m!172219))

(declare-fun m!172221 () Bool)

(assert (=> bm!15775 m!172221))

(assert (=> d!45601 m!170301))

(assert (=> b!142805 m!168781))

(assert (=> b!142805 m!168781))

(declare-fun m!172223 () Bool)

(assert (=> b!142805 m!172223))

(assert (=> b!142790 m!168781))

(assert (=> b!142790 m!168781))

(assert (=> b!142790 m!168791))

(assert (=> bm!15779 m!172187))

(declare-fun m!172225 () Bool)

(assert (=> b!142799 m!172225))

(declare-fun m!172227 () Bool)

(assert (=> b!142806 m!172227))

(assert (=> b!142795 m!168781))

(assert (=> b!142795 m!168781))

(assert (=> b!142795 m!168791))

(declare-fun m!172229 () Bool)

(assert (=> bm!15780 m!172229))

(declare-fun m!172231 () Bool)

(assert (=> bm!15781 m!172231))

(assert (=> b!142792 m!168781))

(declare-fun m!172233 () Bool)

(assert (=> b!142792 m!172233))

(declare-fun m!172235 () Bool)

(assert (=> b!142792 m!172235))

(declare-fun m!172237 () Bool)

(assert (=> b!142792 m!172237))

(assert (=> b!142792 m!168781))

(declare-fun m!172239 () Bool)

(assert (=> b!142792 m!172239))

(assert (=> b!142792 m!172235))

(assert (=> b!142792 m!172233))

(assert (=> d!43449 d!45601))

(declare-fun b!142812 () Bool)

(declare-fun e!93054 () Option!182)

(assert (=> b!142812 (= e!93054 None!180)))

(declare-fun b!142809 () Bool)

(declare-fun e!93053 () Option!182)

(assert (=> b!142809 (= e!93053 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73031))))))))

(declare-fun b!142810 () Bool)

(assert (=> b!142810 (= e!93053 e!93054)))

(declare-fun c!27023 () Bool)

(assert (=> b!142810 (= c!27023 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73031))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73031)))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!45603 () Bool)

(declare-fun c!27022 () Bool)

(assert (=> d!45603 (= c!27022 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73031))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73031)))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45603 (= (getValueByKey!176 (t!6329 (toList!888 lt!73031)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!93053)))

(declare-fun b!142811 () Bool)

(assert (=> b!142811 (= e!93054 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73031))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45603 c!27022) b!142809))

(assert (= (and d!45603 (not c!27022)) b!142810))

(assert (= (and b!142810 c!27023) b!142811))

(assert (= (and b!142810 (not c!27023)) b!142812))

(declare-fun m!172241 () Bool)

(assert (=> b!142811 m!172241))

(assert (=> b!140513 d!45603))

(assert (=> bm!15606 d!44811))

(declare-fun b!142816 () Bool)

(declare-fun e!93056 () Option!182)

(assert (=> b!142816 (= e!93056 None!180)))

(declare-fun b!142813 () Bool)

(declare-fun e!93055 () Option!182)

(assert (=> b!142813 (= e!93055 (Some!181 (_2!1360 (h!2348 (t!6329 lt!73028)))))))

(declare-fun b!142814 () Bool)

(assert (=> b!142814 (= e!93055 e!93056)))

(declare-fun c!27025 () Bool)

(assert (=> b!142814 (= c!27025 (and ((_ is Cons!1741) (t!6329 lt!73028)) (not (= (_1!1360 (h!2348 (t!6329 lt!73028))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun d!45605 () Bool)

(declare-fun c!27024 () Bool)

(assert (=> d!45605 (= c!27024 (and ((_ is Cons!1741) (t!6329 lt!73028)) (= (_1!1360 (h!2348 (t!6329 lt!73028))) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45605 (= (getValueByKey!176 (t!6329 lt!73028) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!93055)))

(declare-fun b!142815 () Bool)

(assert (=> b!142815 (= e!93056 (getValueByKey!176 (t!6329 (t!6329 lt!73028)) (_1!1360 (tuple2!2699 lt!72901 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45605 c!27024) b!142813))

(assert (= (and d!45605 (not c!27024)) b!142814))

(assert (= (and b!142814 c!27025) b!142815))

(assert (= (and b!142814 (not c!27025)) b!142816))

(declare-fun m!172243 () Bool)

(assert (=> b!142815 m!172243))

(assert (=> b!140617 d!45605))

(declare-fun b!142820 () Bool)

(declare-fun e!93058 () Option!182)

(assert (=> b!142820 (= e!93058 None!180)))

(declare-fun b!142817 () Bool)

(declare-fun e!93057 () Option!182)

(assert (=> b!142817 (= e!93057 (Some!181 (_2!1360 (h!2348 (t!6329 (toList!888 lt!73067))))))))

(declare-fun b!142818 () Bool)

(assert (=> b!142818 (= e!93057 e!93058)))

(declare-fun c!27027 () Bool)

(assert (=> b!142818 (= c!27027 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73067))) (not (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73067)))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!27026 () Bool)

(declare-fun d!45607 () Bool)

(assert (=> d!45607 (= c!27026 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!73067))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!73067)))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45607 (= (getValueByKey!176 (t!6329 (toList!888 lt!73067)) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) e!93057)))

(declare-fun b!142819 () Bool)

(assert (=> b!142819 (= e!93058 (getValueByKey!176 (t!6329 (t!6329 (toList!888 lt!73067))) (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45607 c!27026) b!142817))

(assert (= (and d!45607 (not c!27026)) b!142818))

(assert (= (and b!142818 c!27027) b!142819))

(assert (= (and b!142818 (not c!27027)) b!142820))

(declare-fun m!172245 () Bool)

(assert (=> b!142819 m!172245))

(assert (=> b!140311 d!45607))

(assert (=> b!140084 d!44113))

(assert (=> b!140084 d!44115))

(declare-fun d!45609 () Bool)

(assert (=> d!45609 (= (get!1531 (getValueByKey!176 (toList!888 lt!73286) lt!73287)) (v!3284 (getValueByKey!176 (toList!888 lt!73286) lt!73287)))))

(assert (=> d!43815 d!45609))

(declare-fun b!142824 () Bool)

(declare-fun e!93060 () Option!182)

(assert (=> b!142824 (= e!93060 None!180)))

(declare-fun b!142821 () Bool)

(declare-fun e!93059 () Option!182)

(assert (=> b!142821 (= e!93059 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73286)))))))

(declare-fun b!142822 () Bool)

(assert (=> b!142822 (= e!93059 e!93060)))

(declare-fun c!27029 () Bool)

(assert (=> b!142822 (= c!27029 (and ((_ is Cons!1741) (toList!888 lt!73286)) (not (= (_1!1360 (h!2348 (toList!888 lt!73286))) lt!73287))))))

(declare-fun d!45611 () Bool)

(declare-fun c!27028 () Bool)

(assert (=> d!45611 (= c!27028 (and ((_ is Cons!1741) (toList!888 lt!73286)) (= (_1!1360 (h!2348 (toList!888 lt!73286))) lt!73287)))))

(assert (=> d!45611 (= (getValueByKey!176 (toList!888 lt!73286) lt!73287) e!93059)))

(declare-fun b!142823 () Bool)

(assert (=> b!142823 (= e!93060 (getValueByKey!176 (t!6329 (toList!888 lt!73286)) lt!73287))))

(assert (= (and d!45611 c!27028) b!142821))

(assert (= (and d!45611 (not c!27028)) b!142822))

(assert (= (and b!142822 c!27029) b!142823))

(assert (= (and b!142822 (not c!27029)) b!142824))

(declare-fun m!172247 () Bool)

(assert (=> b!142823 m!172247))

(assert (=> d!43815 d!45611))

(declare-fun d!45613 () Bool)

(assert (=> d!45613 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74762 () Unit!4373)

(assert (=> d!45613 (= lt!74762 (choose!864 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!93061 () Bool)

(assert (=> d!45613 e!93061))

(declare-fun res!68063 () Bool)

(assert (=> d!45613 (=> (not res!68063) (not e!93061))))

(assert (=> d!45613 (= res!68063 (isStrictlySorted!325 (toList!888 lt!73306)))))

(assert (=> d!45613 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74762)))

(declare-fun b!142825 () Bool)

(assert (=> b!142825 (= e!93061 (containsKey!180 (toList!888 lt!73306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45613 res!68063) b!142825))

(assert (=> d!45613 m!167531))

(assert (=> d!45613 m!167531))

(assert (=> d!45613 m!168667))

(declare-fun m!172249 () Bool)

(assert (=> d!45613 m!172249))

(assert (=> d!45613 m!170247))

(assert (=> b!142825 m!168663))

(assert (=> b!140830 d!45613))

(assert (=> b!140830 d!45381))

(assert (=> b!140830 d!44847))

(assert (=> b!140116 d!44119))

(assert (=> b!140116 d!44121))

(declare-fun d!45615 () Bool)

(declare-fun e!93062 () Bool)

(assert (=> d!45615 e!93062))

(declare-fun res!68064 () Bool)

(assert (=> d!45615 (=> (not res!68064) (not e!93062))))

(declare-fun lt!74766 () ListLongMap!1745)

(assert (=> d!45615 (= res!68064 (contains!923 lt!74766 (_1!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74763 () List!1745)

(assert (=> d!45615 (= lt!74766 (ListLongMap!1746 lt!74763))))

(declare-fun lt!74764 () Unit!4373)

(declare-fun lt!74765 () Unit!4373)

(assert (=> d!45615 (= lt!74764 lt!74765)))

(assert (=> d!45615 (= (getValueByKey!176 lt!74763 (_1!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45615 (= lt!74765 (lemmaContainsTupThenGetReturnValue!90 lt!74763 (_1!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45615 (= lt!74763 (insertStrictlySorted!93 (toList!888 (ite c!26312 call!15608 (ite c!26314 call!15606 call!15611))) (_1!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45615 (= (+!179 (ite c!26312 call!15608 (ite c!26314 call!15606 call!15611)) (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74766)))

(declare-fun b!142826 () Bool)

(declare-fun res!68065 () Bool)

(assert (=> b!142826 (=> (not res!68065) (not e!93062))))

(assert (=> b!142826 (= res!68065 (= (getValueByKey!176 (toList!888 lt!74766) (_1!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!181 (_2!1360 (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142827 () Bool)

(assert (=> b!142827 (= e!93062 (contains!925 (toList!888 lt!74766) (ite (or c!26312 c!26314) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!45615 res!68064) b!142826))

(assert (= (and b!142826 res!68065) b!142827))

(declare-fun m!172251 () Bool)

(assert (=> d!45615 m!172251))

(declare-fun m!172253 () Bool)

(assert (=> d!45615 m!172253))

(declare-fun m!172255 () Bool)

(assert (=> d!45615 m!172255))

(declare-fun m!172257 () Bool)

(assert (=> d!45615 m!172257))

(declare-fun m!172259 () Bool)

(assert (=> b!142826 m!172259))

(declare-fun m!172261 () Bool)

(assert (=> b!142827 m!172261))

(assert (=> bm!15607 d!45615))

(assert (=> d!43859 d!43699))

(assert (=> d!43859 d!43435))

(assert (=> d!43859 d!43379))

(declare-fun d!45617 () Bool)

(declare-fun e!93063 () Bool)

(assert (=> d!45617 e!93063))

(declare-fun res!68066 () Bool)

(assert (=> d!45617 (=> (not res!68066) (not e!93063))))

(declare-fun lt!74770 () ListLongMap!1745)

(assert (=> d!45617 (= res!68066 (contains!923 lt!74770 (_1!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))))))

(declare-fun lt!74767 () List!1745)

(assert (=> d!45617 (= lt!74770 (ListLongMap!1746 lt!74767))))

(declare-fun lt!74768 () Unit!4373)

(declare-fun lt!74769 () Unit!4373)

(assert (=> d!45617 (= lt!74768 lt!74769)))

(assert (=> d!45617 (= (getValueByKey!176 lt!74767 (_1!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))))))

(assert (=> d!45617 (= lt!74769 (lemmaContainsTupThenGetReturnValue!90 lt!74767 (_1!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))))))

(assert (=> d!45617 (= lt!74767 (insertStrictlySorted!93 (toList!888 lt!73632) (_1!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))))))

(assert (=> d!45617 (= (+!179 lt!73632 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))) lt!74770)))

(declare-fun b!142828 () Bool)

(declare-fun res!68067 () Bool)

(assert (=> b!142828 (=> (not res!68067) (not e!93063))))

(assert (=> b!142828 (= res!68067 (= (getValueByKey!176 (toList!888 lt!74770) (_1!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))))))))

(declare-fun b!142829 () Bool)

(assert (=> b!142829 (= e!93063 (contains!925 (toList!888 lt!74770) (tuple2!2699 lt!73633 (minValue!2790 newMap!16))))))

(assert (= (and d!45617 res!68066) b!142828))

(assert (= (and b!142828 res!68067) b!142829))

(declare-fun m!172263 () Bool)

(assert (=> d!45617 m!172263))

(declare-fun m!172265 () Bool)

(assert (=> d!45617 m!172265))

(declare-fun m!172267 () Bool)

(assert (=> d!45617 m!172267))

(declare-fun m!172269 () Bool)

(assert (=> d!45617 m!172269))

(declare-fun m!172271 () Bool)

(assert (=> b!142828 m!172271))

(declare-fun m!172273 () Bool)

(assert (=> b!142829 m!172273))

(assert (=> b!140429 d!45617))

(declare-fun d!45619 () Bool)

(assert (=> d!45619 (= (apply!120 (+!179 lt!73630 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))) lt!73631) (apply!120 lt!73630 lt!73631))))

(declare-fun lt!74771 () Unit!4373)

(assert (=> d!45619 (= lt!74771 (choose!856 lt!73630 lt!73634 (zeroValue!2790 newMap!16) lt!73631))))

(declare-fun e!93064 () Bool)

(assert (=> d!45619 e!93064))

(declare-fun res!68068 () Bool)

(assert (=> d!45619 (=> (not res!68068) (not e!93064))))

(assert (=> d!45619 (= res!68068 (contains!923 lt!73630 lt!73631))))

(assert (=> d!45619 (= (addApplyDifferent!96 lt!73630 lt!73634 (zeroValue!2790 newMap!16) lt!73631) lt!74771)))

(declare-fun b!142830 () Bool)

(assert (=> b!142830 (= e!93064 (not (= lt!73631 lt!73634)))))

(assert (= (and d!45619 res!68068) b!142830))

(assert (=> d!45619 m!167835))

(declare-fun m!172275 () Bool)

(assert (=> d!45619 m!172275))

(declare-fun m!172277 () Bool)

(assert (=> d!45619 m!172277))

(assert (=> d!45619 m!167823))

(assert (=> d!45619 m!167823))

(assert (=> d!45619 m!167825))

(assert (=> b!140429 d!45619))

(declare-fun d!45621 () Bool)

(assert (=> d!45621 (= (apply!120 (+!179 lt!73632 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))) lt!73637) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73632 (tuple2!2699 lt!73633 (minValue!2790 newMap!16)))) lt!73637)))))

(declare-fun bs!6041 () Bool)

(assert (= bs!6041 d!45621))

(declare-fun m!172279 () Bool)

(assert (=> bs!6041 m!172279))

(assert (=> bs!6041 m!172279))

(declare-fun m!172281 () Bool)

(assert (=> bs!6041 m!172281))

(assert (=> b!140429 d!45621))

(declare-fun d!45623 () Bool)

(assert (=> d!45623 (= (apply!120 (+!179 lt!73648 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))) lt!73643) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73648 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))) lt!73643)))))

(declare-fun bs!6042 () Bool)

(assert (= bs!6042 d!45623))

(declare-fun m!172283 () Bool)

(assert (=> bs!6042 m!172283))

(assert (=> bs!6042 m!172283))

(declare-fun m!172285 () Bool)

(assert (=> bs!6042 m!172285))

(assert (=> b!140429 d!45623))

(declare-fun d!45625 () Bool)

(declare-fun e!93065 () Bool)

(assert (=> d!45625 e!93065))

(declare-fun res!68069 () Bool)

(assert (=> d!45625 (=> (not res!68069) (not e!93065))))

(declare-fun lt!74775 () ListLongMap!1745)

(assert (=> d!45625 (= res!68069 (contains!923 lt!74775 (_1!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74772 () List!1745)

(assert (=> d!45625 (= lt!74775 (ListLongMap!1746 lt!74772))))

(declare-fun lt!74773 () Unit!4373)

(declare-fun lt!74774 () Unit!4373)

(assert (=> d!45625 (= lt!74773 lt!74774)))

(assert (=> d!45625 (= (getValueByKey!176 lt!74772 (_1!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45625 (= lt!74774 (lemmaContainsTupThenGetReturnValue!90 lt!74772 (_1!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45625 (= lt!74772 (insertStrictlySorted!93 (toList!888 lt!73630) (_1!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45625 (= (+!179 lt!73630 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))) lt!74775)))

(declare-fun b!142831 () Bool)

(declare-fun res!68070 () Bool)

(assert (=> b!142831 (=> (not res!68070) (not e!93065))))

(assert (=> b!142831 (= res!68070 (= (getValueByKey!176 (toList!888 lt!74775) (_1!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142832 () Bool)

(assert (=> b!142832 (= e!93065 (contains!925 (toList!888 lt!74775) (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45625 res!68069) b!142831))

(assert (= (and b!142831 res!68070) b!142832))

(declare-fun m!172287 () Bool)

(assert (=> d!45625 m!172287))

(declare-fun m!172289 () Bool)

(assert (=> d!45625 m!172289))

(declare-fun m!172291 () Bool)

(assert (=> d!45625 m!172291))

(declare-fun m!172293 () Bool)

(assert (=> d!45625 m!172293))

(declare-fun m!172295 () Bool)

(assert (=> b!142831 m!172295))

(declare-fun m!172297 () Bool)

(assert (=> b!142832 m!172297))

(assert (=> b!140429 d!45625))

(declare-fun d!45627 () Bool)

(declare-fun e!93066 () Bool)

(assert (=> d!45627 e!93066))

(declare-fun res!68071 () Bool)

(assert (=> d!45627 (=> res!68071 e!93066)))

(declare-fun lt!74778 () Bool)

(assert (=> d!45627 (= res!68071 (not lt!74778))))

(declare-fun lt!74776 () Bool)

(assert (=> d!45627 (= lt!74778 lt!74776)))

(declare-fun lt!74777 () Unit!4373)

(declare-fun e!93067 () Unit!4373)

(assert (=> d!45627 (= lt!74777 e!93067)))

(declare-fun c!27030 () Bool)

(assert (=> d!45627 (= c!27030 lt!74776)))

(assert (=> d!45627 (= lt!74776 (containsKey!180 (toList!888 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))) lt!73646))))

(assert (=> d!45627 (= (contains!923 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))) lt!73646) lt!74778)))

(declare-fun b!142833 () Bool)

(declare-fun lt!74779 () Unit!4373)

(assert (=> b!142833 (= e!93067 lt!74779)))

(assert (=> b!142833 (= lt!74779 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))) lt!73646))))

(assert (=> b!142833 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))) lt!73646))))

(declare-fun b!142834 () Bool)

(declare-fun Unit!4529 () Unit!4373)

(assert (=> b!142834 (= e!93067 Unit!4529)))

(declare-fun b!142835 () Bool)

(assert (=> b!142835 (= e!93066 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))) lt!73646)))))

(assert (= (and d!45627 c!27030) b!142833))

(assert (= (and d!45627 (not c!27030)) b!142834))

(assert (= (and d!45627 (not res!68071)) b!142835))

(declare-fun m!172299 () Bool)

(assert (=> d!45627 m!172299))

(declare-fun m!172301 () Bool)

(assert (=> b!142833 m!172301))

(declare-fun m!172303 () Bool)

(assert (=> b!142833 m!172303))

(assert (=> b!142833 m!172303))

(declare-fun m!172305 () Bool)

(assert (=> b!142833 m!172305))

(assert (=> b!142835 m!172303))

(assert (=> b!142835 m!172303))

(assert (=> b!142835 m!172305))

(assert (=> b!140429 d!45627))

(declare-fun d!45629 () Bool)

(assert (=> d!45629 (contains!923 (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))) lt!73646)))

(declare-fun lt!74780 () Unit!4373)

(assert (=> d!45629 (= lt!74780 (choose!857 lt!73645 lt!73647 (zeroValue!2790 newMap!16) lt!73646))))

(assert (=> d!45629 (contains!923 lt!73645 lt!73646)))

(assert (=> d!45629 (= (addStillContains!96 lt!73645 lt!73647 (zeroValue!2790 newMap!16) lt!73646) lt!74780)))

(declare-fun bs!6043 () Bool)

(assert (= bs!6043 d!45629))

(assert (=> bs!6043 m!167821))

(assert (=> bs!6043 m!167821))

(assert (=> bs!6043 m!167837))

(declare-fun m!172307 () Bool)

(assert (=> bs!6043 m!172307))

(declare-fun m!172309 () Bool)

(assert (=> bs!6043 m!172309))

(assert (=> b!140429 d!45629))

(declare-fun d!45631 () Bool)

(declare-fun e!93068 () Bool)

(assert (=> d!45631 e!93068))

(declare-fun res!68072 () Bool)

(assert (=> d!45631 (=> (not res!68072) (not e!93068))))

(declare-fun lt!74784 () ListLongMap!1745)

(assert (=> d!45631 (= res!68072 (contains!923 lt!74784 (_1!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))))))

(declare-fun lt!74781 () List!1745)

(assert (=> d!45631 (= lt!74784 (ListLongMap!1746 lt!74781))))

(declare-fun lt!74782 () Unit!4373)

(declare-fun lt!74783 () Unit!4373)

(assert (=> d!45631 (= lt!74782 lt!74783)))

(assert (=> d!45631 (= (getValueByKey!176 lt!74781 (_1!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))))))

(assert (=> d!45631 (= lt!74783 (lemmaContainsTupThenGetReturnValue!90 lt!74781 (_1!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))))))

(assert (=> d!45631 (= lt!74781 (insertStrictlySorted!93 (toList!888 lt!73648) (_1!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))))))

(assert (=> d!45631 (= (+!179 lt!73648 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))) lt!74784)))

(declare-fun b!142836 () Bool)

(declare-fun res!68073 () Bool)

(assert (=> b!142836 (=> (not res!68073) (not e!93068))))

(assert (=> b!142836 (= res!68073 (= (getValueByKey!176 (toList!888 lt!74784) (_1!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))))))))

(declare-fun b!142837 () Bool)

(assert (=> b!142837 (= e!93068 (contains!925 (toList!888 lt!74784) (tuple2!2699 lt!73644 (minValue!2790 newMap!16))))))

(assert (= (and d!45631 res!68072) b!142836))

(assert (= (and b!142836 res!68073) b!142837))

(declare-fun m!172311 () Bool)

(assert (=> d!45631 m!172311))

(declare-fun m!172313 () Bool)

(assert (=> d!45631 m!172313))

(declare-fun m!172315 () Bool)

(assert (=> d!45631 m!172315))

(declare-fun m!172317 () Bool)

(assert (=> d!45631 m!172317))

(declare-fun m!172319 () Bool)

(assert (=> b!142836 m!172319))

(declare-fun m!172321 () Bool)

(assert (=> b!142837 m!172321))

(assert (=> b!140429 d!45631))

(declare-fun d!45633 () Bool)

(declare-fun e!93069 () Bool)

(assert (=> d!45633 e!93069))

(declare-fun res!68074 () Bool)

(assert (=> d!45633 (=> (not res!68074) (not e!93069))))

(declare-fun lt!74788 () ListLongMap!1745)

(assert (=> d!45633 (= res!68074 (contains!923 lt!74788 (_1!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74785 () List!1745)

(assert (=> d!45633 (= lt!74788 (ListLongMap!1746 lt!74785))))

(declare-fun lt!74786 () Unit!4373)

(declare-fun lt!74787 () Unit!4373)

(assert (=> d!45633 (= lt!74786 lt!74787)))

(assert (=> d!45633 (= (getValueByKey!176 lt!74785 (_1!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45633 (= lt!74787 (lemmaContainsTupThenGetReturnValue!90 lt!74785 (_1!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45633 (= lt!74785 (insertStrictlySorted!93 (toList!888 lt!73645) (_1!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45633 (= (+!179 lt!73645 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))) lt!74788)))

(declare-fun b!142838 () Bool)

(declare-fun res!68075 () Bool)

(assert (=> b!142838 (=> (not res!68075) (not e!93069))))

(assert (=> b!142838 (= res!68075 (= (getValueByKey!176 (toList!888 lt!74788) (_1!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142839 () Bool)

(assert (=> b!142839 (= e!93069 (contains!925 (toList!888 lt!74788) (tuple2!2699 lt!73647 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45633 res!68074) b!142838))

(assert (= (and b!142838 res!68075) b!142839))

(declare-fun m!172323 () Bool)

(assert (=> d!45633 m!172323))

(declare-fun m!172325 () Bool)

(assert (=> d!45633 m!172325))

(declare-fun m!172327 () Bool)

(assert (=> d!45633 m!172327))

(declare-fun m!172329 () Bool)

(assert (=> d!45633 m!172329))

(declare-fun m!172331 () Bool)

(assert (=> b!142838 m!172331))

(declare-fun m!172333 () Bool)

(assert (=> b!142839 m!172333))

(assert (=> b!140429 d!45633))

(assert (=> b!140429 d!44623))

(declare-fun d!45635 () Bool)

(assert (=> d!45635 (= (apply!120 (+!179 lt!73632 (tuple2!2699 lt!73633 (minValue!2790 newMap!16))) lt!73637) (apply!120 lt!73632 lt!73637))))

(declare-fun lt!74789 () Unit!4373)

(assert (=> d!45635 (= lt!74789 (choose!856 lt!73632 lt!73633 (minValue!2790 newMap!16) lt!73637))))

(declare-fun e!93070 () Bool)

(assert (=> d!45635 e!93070))

(declare-fun res!68076 () Bool)

(assert (=> d!45635 (=> (not res!68076) (not e!93070))))

(assert (=> d!45635 (= res!68076 (contains!923 lt!73632 lt!73637))))

(assert (=> d!45635 (= (addApplyDifferent!96 lt!73632 lt!73633 (minValue!2790 newMap!16) lt!73637) lt!74789)))

(declare-fun b!142840 () Bool)

(assert (=> b!142840 (= e!93070 (not (= lt!73637 lt!73633)))))

(assert (= (and d!45635 res!68076) b!142840))

(assert (=> d!45635 m!167843))

(declare-fun m!172335 () Bool)

(assert (=> d!45635 m!172335))

(declare-fun m!172337 () Bool)

(assert (=> d!45635 m!172337))

(assert (=> d!45635 m!167831))

(assert (=> d!45635 m!167831))

(assert (=> d!45635 m!167833))

(assert (=> b!140429 d!45635))

(declare-fun d!45637 () Bool)

(assert (=> d!45637 (= (apply!120 lt!73648 lt!73643) (get!1531 (getValueByKey!176 (toList!888 lt!73648) lt!73643)))))

(declare-fun bs!6044 () Bool)

(assert (= bs!6044 d!45637))

(declare-fun m!172339 () Bool)

(assert (=> bs!6044 m!172339))

(assert (=> bs!6044 m!172339))

(declare-fun m!172341 () Bool)

(assert (=> bs!6044 m!172341))

(assert (=> b!140429 d!45637))

(declare-fun d!45639 () Bool)

(assert (=> d!45639 (= (apply!120 lt!73632 lt!73637) (get!1531 (getValueByKey!176 (toList!888 lt!73632) lt!73637)))))

(declare-fun bs!6045 () Bool)

(assert (= bs!6045 d!45639))

(declare-fun m!172343 () Bool)

(assert (=> bs!6045 m!172343))

(assert (=> bs!6045 m!172343))

(declare-fun m!172345 () Bool)

(assert (=> bs!6045 m!172345))

(assert (=> b!140429 d!45639))

(declare-fun d!45641 () Bool)

(assert (=> d!45641 (= (apply!120 (+!179 lt!73648 (tuple2!2699 lt!73644 (minValue!2790 newMap!16))) lt!73643) (apply!120 lt!73648 lt!73643))))

(declare-fun lt!74790 () Unit!4373)

(assert (=> d!45641 (= lt!74790 (choose!856 lt!73648 lt!73644 (minValue!2790 newMap!16) lt!73643))))

(declare-fun e!93071 () Bool)

(assert (=> d!45641 e!93071))

(declare-fun res!68077 () Bool)

(assert (=> d!45641 (=> (not res!68077) (not e!93071))))

(assert (=> d!45641 (= res!68077 (contains!923 lt!73648 lt!73643))))

(assert (=> d!45641 (= (addApplyDifferent!96 lt!73648 lt!73644 (minValue!2790 newMap!16) lt!73643) lt!74790)))

(declare-fun b!142841 () Bool)

(assert (=> b!142841 (= e!93071 (not (= lt!73643 lt!73644)))))

(assert (= (and d!45641 res!68077) b!142841))

(assert (=> d!45641 m!167829))

(declare-fun m!172347 () Bool)

(assert (=> d!45641 m!172347))

(declare-fun m!172349 () Bool)

(assert (=> d!45641 m!172349))

(assert (=> d!45641 m!167839))

(assert (=> d!45641 m!167839))

(assert (=> d!45641 m!167841))

(assert (=> b!140429 d!45641))

(declare-fun d!45643 () Bool)

(assert (=> d!45643 (= (apply!120 lt!73630 lt!73631) (get!1531 (getValueByKey!176 (toList!888 lt!73630) lt!73631)))))

(declare-fun bs!6046 () Bool)

(assert (= bs!6046 d!45643))

(declare-fun m!172351 () Bool)

(assert (=> bs!6046 m!172351))

(assert (=> bs!6046 m!172351))

(declare-fun m!172353 () Bool)

(assert (=> bs!6046 m!172353))

(assert (=> b!140429 d!45643))

(declare-fun d!45645 () Bool)

(assert (=> d!45645 (= (apply!120 (+!179 lt!73630 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16))) lt!73631) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73630 (tuple2!2699 lt!73634 (zeroValue!2790 newMap!16)))) lt!73631)))))

(declare-fun bs!6047 () Bool)

(assert (= bs!6047 d!45645))

(declare-fun m!172355 () Bool)

(assert (=> bs!6047 m!172355))

(assert (=> bs!6047 m!172355))

(declare-fun m!172357 () Bool)

(assert (=> bs!6047 m!172357))

(assert (=> b!140429 d!45645))

(assert (=> b!140027 d!44609))

(declare-fun d!45647 () Bool)

(assert (=> d!45647 (= (apply!120 (+!179 lt!73360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73365) (apply!120 lt!73360 lt!73365))))

(declare-fun lt!74791 () Unit!4373)

(assert (=> d!45647 (= lt!74791 (choose!856 lt!73360 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73365))))

(declare-fun e!93072 () Bool)

(assert (=> d!45647 e!93072))

(declare-fun res!68078 () Bool)

(assert (=> d!45647 (=> (not res!68078) (not e!93072))))

(assert (=> d!45647 (= res!68078 (contains!923 lt!73360 lt!73365))))

(assert (=> d!45647 (= (addApplyDifferent!96 lt!73360 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73365) lt!74791)))

(declare-fun b!142842 () Bool)

(assert (=> b!142842 (= e!93072 (not (= lt!73365 lt!73361)))))

(assert (= (and d!45647 res!68078) b!142842))

(assert (=> d!45647 m!166961))

(declare-fun m!172359 () Bool)

(assert (=> d!45647 m!172359))

(declare-fun m!172361 () Bool)

(assert (=> d!45647 m!172361))

(assert (=> d!45647 m!166947))

(assert (=> d!45647 m!166947))

(assert (=> d!45647 m!166949))

(assert (=> b!140027 d!45647))

(declare-fun d!45649 () Bool)

(assert (=> d!45649 (= (apply!120 lt!73376 lt!73371) (get!1531 (getValueByKey!176 (toList!888 lt!73376) lt!73371)))))

(declare-fun bs!6048 () Bool)

(assert (= bs!6048 d!45649))

(declare-fun m!172363 () Bool)

(assert (=> bs!6048 m!172363))

(assert (=> bs!6048 m!172363))

(declare-fun m!172365 () Bool)

(assert (=> bs!6048 m!172365))

(assert (=> b!140027 d!45649))

(declare-fun d!45651 () Bool)

(assert (=> d!45651 (contains!923 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73374)))

(declare-fun lt!74792 () Unit!4373)

(assert (=> d!45651 (= lt!74792 (choose!857 lt!73373 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73374))))

(assert (=> d!45651 (contains!923 lt!73373 lt!73374)))

(assert (=> d!45651 (= (addStillContains!96 lt!73373 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73374) lt!74792)))

(declare-fun bs!6049 () Bool)

(assert (= bs!6049 d!45651))

(assert (=> bs!6049 m!166937))

(assert (=> bs!6049 m!166937))

(assert (=> bs!6049 m!166955))

(declare-fun m!172367 () Bool)

(assert (=> bs!6049 m!172367))

(declare-fun m!172369 () Bool)

(assert (=> bs!6049 m!172369))

(assert (=> b!140027 d!45651))

(declare-fun d!45653 () Bool)

(assert (=> d!45653 (= (apply!120 (+!179 lt!73358 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73359) (apply!120 lt!73358 lt!73359))))

(declare-fun lt!74793 () Unit!4373)

(assert (=> d!45653 (= lt!74793 (choose!856 lt!73358 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73359))))

(declare-fun e!93073 () Bool)

(assert (=> d!45653 e!93073))

(declare-fun res!68079 () Bool)

(assert (=> d!45653 (=> (not res!68079) (not e!93073))))

(assert (=> d!45653 (= res!68079 (contains!923 lt!73358 lt!73359))))

(assert (=> d!45653 (= (addApplyDifferent!96 lt!73358 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73359) lt!74793)))

(declare-fun b!142843 () Bool)

(assert (=> b!142843 (= e!93073 (not (= lt!73359 lt!73362)))))

(assert (= (and d!45653 res!68079) b!142843))

(assert (=> d!45653 m!166953))

(declare-fun m!172371 () Bool)

(assert (=> d!45653 m!172371))

(declare-fun m!172373 () Bool)

(assert (=> d!45653 m!172373))

(assert (=> d!45653 m!166939))

(assert (=> d!45653 m!166939))

(assert (=> d!45653 m!166941))

(assert (=> b!140027 d!45653))

(declare-fun d!45655 () Bool)

(assert (=> d!45655 (= (apply!120 (+!179 lt!73360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73365) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73365)))))

(declare-fun bs!6050 () Bool)

(assert (= bs!6050 d!45655))

(declare-fun m!172375 () Bool)

(assert (=> bs!6050 m!172375))

(assert (=> bs!6050 m!172375))

(declare-fun m!172377 () Bool)

(assert (=> bs!6050 m!172377))

(assert (=> b!140027 d!45655))

(declare-fun d!45657 () Bool)

(assert (=> d!45657 (= (apply!120 (+!179 lt!73376 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73371) (apply!120 lt!73376 lt!73371))))

(declare-fun lt!74794 () Unit!4373)

(assert (=> d!45657 (= lt!74794 (choose!856 lt!73376 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73371))))

(declare-fun e!93074 () Bool)

(assert (=> d!45657 e!93074))

(declare-fun res!68080 () Bool)

(assert (=> d!45657 (=> (not res!68080) (not e!93074))))

(assert (=> d!45657 (= res!68080 (contains!923 lt!73376 lt!73371))))

(assert (=> d!45657 (= (addApplyDifferent!96 lt!73376 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))) lt!73371) lt!74794)))

(declare-fun b!142844 () Bool)

(assert (=> b!142844 (= e!93074 (not (= lt!73371 lt!73372)))))

(assert (= (and d!45657 res!68080) b!142844))

(assert (=> d!45657 m!166945))

(declare-fun m!172379 () Bool)

(assert (=> d!45657 m!172379))

(declare-fun m!172381 () Bool)

(assert (=> d!45657 m!172381))

(assert (=> d!45657 m!166957))

(assert (=> d!45657 m!166957))

(assert (=> d!45657 m!166959))

(assert (=> b!140027 d!45657))

(declare-fun d!45659 () Bool)

(assert (=> d!45659 (= (apply!120 lt!73358 lt!73359) (get!1531 (getValueByKey!176 (toList!888 lt!73358) lt!73359)))))

(declare-fun bs!6051 () Bool)

(assert (= bs!6051 d!45659))

(declare-fun m!172383 () Bool)

(assert (=> bs!6051 m!172383))

(assert (=> bs!6051 m!172383))

(declare-fun m!172385 () Bool)

(assert (=> bs!6051 m!172385))

(assert (=> b!140027 d!45659))

(declare-fun d!45661 () Bool)

(assert (=> d!45661 (= (apply!120 (+!179 lt!73376 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73371) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73376 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73371)))))

(declare-fun bs!6052 () Bool)

(assert (= bs!6052 d!45661))

(declare-fun m!172387 () Bool)

(assert (=> bs!6052 m!172387))

(assert (=> bs!6052 m!172387))

(declare-fun m!172389 () Bool)

(assert (=> bs!6052 m!172389))

(assert (=> b!140027 d!45661))

(declare-fun d!45663 () Bool)

(declare-fun e!93075 () Bool)

(assert (=> d!45663 e!93075))

(declare-fun res!68081 () Bool)

(assert (=> d!45663 (=> res!68081 e!93075)))

(declare-fun lt!74797 () Bool)

(assert (=> d!45663 (= res!68081 (not lt!74797))))

(declare-fun lt!74795 () Bool)

(assert (=> d!45663 (= lt!74797 lt!74795)))

(declare-fun lt!74796 () Unit!4373)

(declare-fun e!93076 () Unit!4373)

(assert (=> d!45663 (= lt!74796 e!93076)))

(declare-fun c!27031 () Bool)

(assert (=> d!45663 (= c!27031 lt!74795)))

(assert (=> d!45663 (= lt!74795 (containsKey!180 (toList!888 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73374))))

(assert (=> d!45663 (= (contains!923 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73374) lt!74797)))

(declare-fun b!142845 () Bool)

(declare-fun lt!74798 () Unit!4373)

(assert (=> b!142845 (= e!93076 lt!74798)))

(assert (=> b!142845 (= lt!74798 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73374))))

(assert (=> b!142845 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73374))))

(declare-fun b!142846 () Bool)

(declare-fun Unit!4530 () Unit!4373)

(assert (=> b!142846 (= e!93076 Unit!4530)))

(declare-fun b!142847 () Bool)

(assert (=> b!142847 (= e!93075 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73374)))))

(assert (= (and d!45663 c!27031) b!142845))

(assert (= (and d!45663 (not c!27031)) b!142846))

(assert (= (and d!45663 (not res!68081)) b!142847))

(declare-fun m!172391 () Bool)

(assert (=> d!45663 m!172391))

(declare-fun m!172393 () Bool)

(assert (=> b!142845 m!172393))

(declare-fun m!172395 () Bool)

(assert (=> b!142845 m!172395))

(assert (=> b!142845 m!172395))

(declare-fun m!172397 () Bool)

(assert (=> b!142845 m!172397))

(assert (=> b!142847 m!172395))

(assert (=> b!142847 m!172395))

(assert (=> b!142847 m!172397))

(assert (=> b!140027 d!45663))

(declare-fun d!45665 () Bool)

(declare-fun e!93077 () Bool)

(assert (=> d!45665 e!93077))

(declare-fun res!68082 () Bool)

(assert (=> d!45665 (=> (not res!68082) (not e!93077))))

(declare-fun lt!74802 () ListLongMap!1745)

(assert (=> d!45665 (= res!68082 (contains!923 lt!74802 (_1!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(declare-fun lt!74799 () List!1745)

(assert (=> d!45665 (= lt!74802 (ListLongMap!1746 lt!74799))))

(declare-fun lt!74800 () Unit!4373)

(declare-fun lt!74801 () Unit!4373)

(assert (=> d!45665 (= lt!74800 lt!74801)))

(assert (=> d!45665 (= (getValueByKey!176 lt!74799 (_1!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45665 (= lt!74801 (lemmaContainsTupThenGetReturnValue!90 lt!74799 (_1!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45665 (= lt!74799 (insertStrictlySorted!93 (toList!888 lt!73358) (_1!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45665 (= (+!179 lt!73358 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!74802)))

(declare-fun b!142848 () Bool)

(declare-fun res!68083 () Bool)

(assert (=> b!142848 (=> (not res!68083) (not e!93077))))

(assert (=> b!142848 (= res!68083 (= (getValueByKey!176 (toList!888 lt!74802) (_1!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun b!142849 () Bool)

(assert (=> b!142849 (= e!93077 (contains!925 (toList!888 lt!74802) (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (= (and d!45665 res!68082) b!142848))

(assert (= (and b!142848 res!68083) b!142849))

(declare-fun m!172399 () Bool)

(assert (=> d!45665 m!172399))

(declare-fun m!172401 () Bool)

(assert (=> d!45665 m!172401))

(declare-fun m!172403 () Bool)

(assert (=> d!45665 m!172403))

(declare-fun m!172405 () Bool)

(assert (=> d!45665 m!172405))

(declare-fun m!172407 () Bool)

(assert (=> b!142848 m!172407))

(declare-fun m!172409 () Bool)

(assert (=> b!142849 m!172409))

(assert (=> b!140027 d!45665))

(declare-fun d!45667 () Bool)

(assert (=> d!45667 (= (apply!120 (+!179 lt!73358 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!73359) (get!1531 (getValueByKey!176 (toList!888 (+!179 lt!73358 (tuple2!2699 lt!73362 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) lt!73359)))))

(declare-fun bs!6053 () Bool)

(assert (= bs!6053 d!45667))

(declare-fun m!172411 () Bool)

(assert (=> bs!6053 m!172411))

(assert (=> bs!6053 m!172411))

(declare-fun m!172413 () Bool)

(assert (=> bs!6053 m!172413))

(assert (=> b!140027 d!45667))

(declare-fun d!45669 () Bool)

(declare-fun e!93078 () Bool)

(assert (=> d!45669 e!93078))

(declare-fun res!68084 () Bool)

(assert (=> d!45669 (=> (not res!68084) (not e!93078))))

(declare-fun lt!74806 () ListLongMap!1745)

(assert (=> d!45669 (= res!68084 (contains!923 lt!74806 (_1!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(declare-fun lt!74803 () List!1745)

(assert (=> d!45669 (= lt!74806 (ListLongMap!1746 lt!74803))))

(declare-fun lt!74804 () Unit!4373)

(declare-fun lt!74805 () Unit!4373)

(assert (=> d!45669 (= lt!74804 lt!74805)))

(assert (=> d!45669 (= (getValueByKey!176 lt!74803 (_1!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45669 (= lt!74805 (lemmaContainsTupThenGetReturnValue!90 lt!74803 (_1!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45669 (= lt!74803 (insertStrictlySorted!93 (toList!888 lt!73376) (_1!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45669 (= (+!179 lt!73376 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!74806)))

(declare-fun b!142850 () Bool)

(declare-fun res!68085 () Bool)

(assert (=> b!142850 (=> (not res!68085) (not e!93078))))

(assert (=> b!142850 (= res!68085 (= (getValueByKey!176 (toList!888 lt!74806) (_1!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun b!142851 () Bool)

(assert (=> b!142851 (= e!93078 (contains!925 (toList!888 lt!74806) (tuple2!2699 lt!73372 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (= (and d!45669 res!68084) b!142850))

(assert (= (and b!142850 res!68085) b!142851))

(declare-fun m!172415 () Bool)

(assert (=> d!45669 m!172415))

(declare-fun m!172417 () Bool)

(assert (=> d!45669 m!172417))

(declare-fun m!172419 () Bool)

(assert (=> d!45669 m!172419))

(declare-fun m!172421 () Bool)

(assert (=> d!45669 m!172421))

(declare-fun m!172423 () Bool)

(assert (=> b!142850 m!172423))

(declare-fun m!172425 () Bool)

(assert (=> b!142851 m!172425))

(assert (=> b!140027 d!45669))

(declare-fun d!45671 () Bool)

(declare-fun e!93079 () Bool)

(assert (=> d!45671 e!93079))

(declare-fun res!68086 () Bool)

(assert (=> d!45671 (=> (not res!68086) (not e!93079))))

(declare-fun lt!74810 () ListLongMap!1745)

(assert (=> d!45671 (= res!68086 (contains!923 lt!74810 (_1!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(declare-fun lt!74807 () List!1745)

(assert (=> d!45671 (= lt!74810 (ListLongMap!1746 lt!74807))))

(declare-fun lt!74808 () Unit!4373)

(declare-fun lt!74809 () Unit!4373)

(assert (=> d!45671 (= lt!74808 lt!74809)))

(assert (=> d!45671 (= (getValueByKey!176 lt!74807 (_1!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45671 (= lt!74809 (lemmaContainsTupThenGetReturnValue!90 lt!74807 (_1!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45671 (= lt!74807 (insertStrictlySorted!93 (toList!888 lt!73373) (_1!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45671 (= (+!179 lt!73373 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!74810)))

(declare-fun b!142852 () Bool)

(declare-fun res!68087 () Bool)

(assert (=> b!142852 (=> (not res!68087) (not e!93079))))

(assert (=> b!142852 (= res!68087 (= (getValueByKey!176 (toList!888 lt!74810) (_1!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun b!142853 () Bool)

(assert (=> b!142853 (= e!93079 (contains!925 (toList!888 lt!74810) (tuple2!2699 lt!73375 (zeroValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (= (and d!45671 res!68086) b!142852))

(assert (= (and b!142852 res!68087) b!142853))

(declare-fun m!172427 () Bool)

(assert (=> d!45671 m!172427))

(declare-fun m!172429 () Bool)

(assert (=> d!45671 m!172429))

(declare-fun m!172431 () Bool)

(assert (=> d!45671 m!172431))

(declare-fun m!172433 () Bool)

(assert (=> d!45671 m!172433))

(declare-fun m!172435 () Bool)

(assert (=> b!142852 m!172435))

(declare-fun m!172437 () Bool)

(assert (=> b!142853 m!172437))

(assert (=> b!140027 d!45671))

(declare-fun d!45673 () Bool)

(declare-fun e!93080 () Bool)

(assert (=> d!45673 e!93080))

(declare-fun res!68088 () Bool)

(assert (=> d!45673 (=> (not res!68088) (not e!93080))))

(declare-fun lt!74814 () ListLongMap!1745)

(assert (=> d!45673 (= res!68088 (contains!923 lt!74814 (_1!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(declare-fun lt!74811 () List!1745)

(assert (=> d!45673 (= lt!74814 (ListLongMap!1746 lt!74811))))

(declare-fun lt!74812 () Unit!4373)

(declare-fun lt!74813 () Unit!4373)

(assert (=> d!45673 (= lt!74812 lt!74813)))

(assert (=> d!45673 (= (getValueByKey!176 lt!74811 (_1!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45673 (= lt!74813 (lemmaContainsTupThenGetReturnValue!90 lt!74811 (_1!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45673 (= lt!74811 (insertStrictlySorted!93 (toList!888 lt!73360) (_1!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (_2!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))))))

(assert (=> d!45673 (= (+!179 lt!73360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) lt!74814)))

(declare-fun b!142854 () Bool)

(declare-fun res!68089 () Bool)

(assert (=> b!142854 (=> (not res!68089) (not e!93080))))

(assert (=> b!142854 (= res!68089 (= (getValueByKey!176 (toList!888 lt!74814) (_1!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992)))))) (Some!181 (_2!1360 (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))))

(declare-fun b!142855 () Bool)

(assert (=> b!142855 (= e!93080 (contains!925 (toList!888 lt!74814) (tuple2!2699 lt!73361 (minValue!2790 (ite c!26065 newMap!16 (_2!1361 lt!72992))))))))

(assert (= (and d!45673 res!68088) b!142854))

(assert (= (and b!142854 res!68089) b!142855))

(declare-fun m!172439 () Bool)

(assert (=> d!45673 m!172439))

(declare-fun m!172441 () Bool)

(assert (=> d!45673 m!172441))

(declare-fun m!172443 () Bool)

(assert (=> d!45673 m!172443))

(declare-fun m!172445 () Bool)

(assert (=> d!45673 m!172445))

(declare-fun m!172447 () Bool)

(assert (=> b!142854 m!172447))

(declare-fun m!172449 () Bool)

(assert (=> b!142855 m!172449))

(assert (=> b!140027 d!45673))

(declare-fun d!45675 () Bool)

(assert (=> d!45675 (= (apply!120 lt!73360 lt!73365) (get!1531 (getValueByKey!176 (toList!888 lt!73360) lt!73365)))))

(declare-fun bs!6054 () Bool)

(assert (= bs!6054 d!45675))

(declare-fun m!172451 () Bool)

(assert (=> bs!6054 m!172451))

(assert (=> bs!6054 m!172451))

(declare-fun m!172453 () Bool)

(assert (=> bs!6054 m!172453))

(assert (=> b!140027 d!45675))

(declare-fun d!45677 () Bool)

(declare-fun e!93081 () Bool)

(assert (=> d!45677 e!93081))

(declare-fun res!68090 () Bool)

(assert (=> d!45677 (=> (not res!68090) (not e!93081))))

(declare-fun lt!74818 () ListLongMap!1745)

(assert (=> d!45677 (= res!68090 (contains!923 lt!74818 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74815 () List!1745)

(assert (=> d!45677 (= lt!74818 (ListLongMap!1746 lt!74815))))

(declare-fun lt!74816 () Unit!4373)

(declare-fun lt!74817 () Unit!4373)

(assert (=> d!45677 (= lt!74816 lt!74817)))

(assert (=> d!45677 (= (getValueByKey!176 lt!74815 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45677 (= lt!74817 (lemmaContainsTupThenGetReturnValue!90 lt!74815 (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45677 (= lt!74815 (insertStrictlySorted!93 (toList!888 call!15593) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45677 (= (+!179 call!15593 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74818)))

(declare-fun b!142856 () Bool)

(declare-fun res!68091 () Bool)

(assert (=> b!142856 (=> (not res!68091) (not e!93081))))

(assert (=> b!142856 (= res!68091 (= (getValueByKey!176 (toList!888 lt!74818) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142857 () Bool)

(assert (=> b!142857 (= e!93081 (contains!925 (toList!888 lt!74818) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!45677 res!68090) b!142856))

(assert (= (and b!142856 res!68091) b!142857))

(declare-fun m!172455 () Bool)

(assert (=> d!45677 m!172455))

(declare-fun m!172457 () Bool)

(assert (=> d!45677 m!172457))

(declare-fun m!172459 () Bool)

(assert (=> d!45677 m!172459))

(declare-fun m!172461 () Bool)

(assert (=> d!45677 m!172461))

(declare-fun m!172463 () Bool)

(assert (=> b!142856 m!172463))

(declare-fun m!172465 () Bool)

(assert (=> b!142857 m!172465))

(assert (=> b!140403 d!45677))

(declare-fun d!45679 () Bool)

(declare-fun e!93082 () Bool)

(assert (=> d!45679 e!93082))

(declare-fun res!68092 () Bool)

(assert (=> d!45679 (=> res!68092 e!93082)))

(declare-fun lt!74821 () Bool)

(assert (=> d!45679 (= res!68092 (not lt!74821))))

(declare-fun lt!74819 () Bool)

(assert (=> d!45679 (= lt!74821 lt!74819)))

(declare-fun lt!74820 () Unit!4373)

(declare-fun e!93083 () Unit!4373)

(assert (=> d!45679 (= lt!74820 e!93083)))

(declare-fun c!27032 () Bool)

(assert (=> d!45679 (= c!27032 lt!74819)))

(assert (=> d!45679 (= lt!74819 (containsKey!180 (toList!888 lt!73729) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45679 (= (contains!923 lt!73729 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74821)))

(declare-fun b!142858 () Bool)

(declare-fun lt!74822 () Unit!4373)

(assert (=> b!142858 (= e!93083 lt!74822)))

(assert (=> b!142858 (= lt!74822 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73729) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142858 (isDefined!129 (getValueByKey!176 (toList!888 lt!73729) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142859 () Bool)

(declare-fun Unit!4531 () Unit!4373)

(assert (=> b!142859 (= e!93083 Unit!4531)))

(declare-fun b!142860 () Bool)

(assert (=> b!142860 (= e!93082 (isDefined!129 (getValueByKey!176 (toList!888 lt!73729) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45679 c!27032) b!142858))

(assert (= (and d!45679 (not c!27032)) b!142859))

(assert (= (and d!45679 (not res!68092)) b!142860))

(declare-fun m!172467 () Bool)

(assert (=> d!45679 m!172467))

(declare-fun m!172469 () Bool)

(assert (=> b!142858 m!172469))

(declare-fun m!172471 () Bool)

(assert (=> b!142858 m!172471))

(assert (=> b!142858 m!172471))

(declare-fun m!172473 () Bool)

(assert (=> b!142858 m!172473))

(assert (=> b!142860 m!172471))

(assert (=> b!142860 m!172471))

(assert (=> b!142860 m!172473))

(assert (=> d!43775 d!45679))

(assert (=> d!43775 d!43527))

(declare-fun d!45681 () Bool)

(assert (=> d!45681 (isDefined!129 (getValueByKey!176 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74823 () Unit!4373)

(assert (=> d!45681 (= lt!74823 (choose!864 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!93084 () Bool)

(assert (=> d!45681 e!93084))

(declare-fun res!68093 () Bool)

(assert (=> d!45681 (=> (not res!68093) (not e!93084))))

(assert (=> d!45681 (= res!68093 (isStrictlySorted!325 (toList!888 lt!73306)))))

(assert (=> d!45681 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74823)))

(declare-fun b!142861 () Bool)

(assert (=> b!142861 (= e!93084 (containsKey!180 (toList!888 lt!73306) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45681 res!68093) b!142861))

(assert (=> d!45681 m!166385))

(assert (=> d!45681 m!166887))

(assert (=> d!45681 m!166887))

(assert (=> d!45681 m!166889))

(assert (=> d!45681 m!166385))

(declare-fun m!172475 () Bool)

(assert (=> d!45681 m!172475))

(assert (=> d!45681 m!170247))

(assert (=> b!142861 m!166385))

(assert (=> b!142861 m!166883))

(assert (=> b!140002 d!45681))

(assert (=> b!140002 d!45337))

(assert (=> b!140002 d!45113))

(declare-fun d!45683 () Bool)

(assert (=> d!45683 (= (isEmpty!418 (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903)) (not ((_ is Some!181) (getValueByKey!176 (toList!888 (+!179 lt!72902 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!72903))))))

(assert (=> d!43603 d!45683))

(declare-fun d!45685 () Bool)

(declare-fun e!93085 () Bool)

(assert (=> d!45685 e!93085))

(declare-fun res!68094 () Bool)

(assert (=> d!45685 (=> res!68094 e!93085)))

(declare-fun lt!74826 () Bool)

(assert (=> d!45685 (= res!68094 (not lt!74826))))

(declare-fun lt!74824 () Bool)

(assert (=> d!45685 (= lt!74826 lt!74824)))

(declare-fun lt!74825 () Unit!4373)

(declare-fun e!93086 () Unit!4373)

(assert (=> d!45685 (= lt!74825 e!93086)))

(declare-fun c!27033 () Bool)

(assert (=> d!45685 (= c!27033 lt!74824)))

(assert (=> d!45685 (= lt!74824 (containsKey!180 (toList!888 lt!73777) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45685 (= (contains!923 lt!73777 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!74826)))

(declare-fun b!142862 () Bool)

(declare-fun lt!74827 () Unit!4373)

(assert (=> b!142862 (= e!93086 lt!74827)))

(assert (=> b!142862 (= lt!74827 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73777) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142862 (isDefined!129 (getValueByKey!176 (toList!888 lt!73777) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142863 () Bool)

(declare-fun Unit!4532 () Unit!4373)

(assert (=> b!142863 (= e!93086 Unit!4532)))

(declare-fun b!142864 () Bool)

(assert (=> b!142864 (= e!93085 (isDefined!129 (getValueByKey!176 (toList!888 lt!73777) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45685 c!27033) b!142862))

(assert (= (and d!45685 (not c!27033)) b!142863))

(assert (= (and d!45685 (not res!68094)) b!142864))

(declare-fun m!172477 () Bool)

(assert (=> d!45685 m!172477))

(declare-fun m!172479 () Bool)

(assert (=> b!142862 m!172479))

(assert (=> b!142862 m!168263))

(assert (=> b!142862 m!168263))

(declare-fun m!172481 () Bool)

(assert (=> b!142862 m!172481))

(assert (=> b!142864 m!168263))

(assert (=> b!142864 m!168263))

(assert (=> b!142864 m!172481))

(assert (=> d!43837 d!45685))

(declare-fun b!142868 () Bool)

(declare-fun e!93088 () Option!182)

(assert (=> b!142868 (= e!93088 None!180)))

(declare-fun b!142865 () Bool)

(declare-fun e!93087 () Option!182)

(assert (=> b!142865 (= e!93087 (Some!181 (_2!1360 (h!2348 lt!73774))))))

(declare-fun b!142866 () Bool)

(assert (=> b!142866 (= e!93087 e!93088)))

(declare-fun c!27035 () Bool)

(assert (=> b!142866 (= c!27035 (and ((_ is Cons!1741) lt!73774) (not (= (_1!1360 (h!2348 lt!73774)) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))))

(declare-fun d!45687 () Bool)

(declare-fun c!27034 () Bool)

(assert (=> d!45687 (= c!27034 (and ((_ is Cons!1741) lt!73774) (= (_1!1360 (h!2348 lt!73774)) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45687 (= (getValueByKey!176 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) e!93087)))

(declare-fun b!142867 () Bool)

(assert (=> b!142867 (= e!93088 (getValueByKey!176 (t!6329 lt!73774) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45687 c!27034) b!142865))

(assert (= (and d!45687 (not c!27034)) b!142866))

(assert (= (and b!142866 c!27035) b!142867))

(assert (= (and b!142866 (not c!27035)) b!142868))

(declare-fun m!172483 () Bool)

(assert (=> b!142867 m!172483))

(assert (=> d!43837 d!45687))

(declare-fun d!45689 () Bool)

(assert (=> d!45689 (= (getValueByKey!176 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74828 () Unit!4373)

(assert (=> d!45689 (= lt!74828 (choose!865 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(declare-fun e!93089 () Bool)

(assert (=> d!45689 e!93089))

(declare-fun res!68095 () Bool)

(assert (=> d!45689 (=> (not res!68095) (not e!93089))))

(assert (=> d!45689 (= res!68095 (isStrictlySorted!325 lt!73774))))

(assert (=> d!45689 (= (lemmaContainsTupThenGetReturnValue!90 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!74828)))

(declare-fun b!142869 () Bool)

(declare-fun res!68096 () Bool)

(assert (=> b!142869 (=> (not res!68096) (not e!93089))))

(assert (=> b!142869 (= res!68096 (containsKey!180 lt!73774 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142870 () Bool)

(assert (=> b!142870 (= e!93089 (contains!925 lt!73774 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45689 res!68095) b!142869))

(assert (= (and b!142869 res!68096) b!142870))

(assert (=> d!45689 m!168257))

(declare-fun m!172485 () Bool)

(assert (=> d!45689 m!172485))

(declare-fun m!172487 () Bool)

(assert (=> d!45689 m!172487))

(declare-fun m!172489 () Bool)

(assert (=> b!142869 m!172489))

(declare-fun m!172491 () Bool)

(assert (=> b!142870 m!172491))

(assert (=> d!43837 d!45689))

(declare-fun b!142871 () Bool)

(declare-fun e!93090 () List!1745)

(declare-fun call!15787 () List!1745)

(assert (=> b!142871 (= e!93090 call!15787)))

(declare-fun bm!15782 () Bool)

(declare-fun call!15785 () List!1745)

(assert (=> bm!15782 (= call!15787 call!15785)))

(declare-fun d!45691 () Bool)

(declare-fun e!93094 () Bool)

(assert (=> d!45691 e!93094))

(declare-fun res!68097 () Bool)

(assert (=> d!45691 (=> (not res!68097) (not e!93094))))

(declare-fun lt!74829 () List!1745)

(assert (=> d!45691 (= res!68097 (isStrictlySorted!325 lt!74829))))

(declare-fun e!93091 () List!1745)

(assert (=> d!45691 (= lt!74829 e!93091)))

(declare-fun c!27038 () Bool)

(assert (=> d!45691 (= c!27038 (and ((_ is Cons!1741) (toList!888 lt!73301)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73301))) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45691 (isStrictlySorted!325 (toList!888 lt!73301))))

(assert (=> d!45691 (= (insertStrictlySorted!93 (toList!888 lt!73301) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))) lt!74829)))

(declare-fun bm!15783 () Bool)

(declare-fun call!15786 () List!1745)

(assert (=> bm!15783 (= call!15785 call!15786)))

(declare-fun b!142872 () Bool)

(declare-fun e!93092 () List!1745)

(assert (=> b!142872 (= e!93091 e!93092)))

(declare-fun c!27037 () Bool)

(assert (=> b!142872 (= c!27037 (and ((_ is Cons!1741) (toList!888 lt!73301)) (= (_1!1360 (h!2348 (toList!888 lt!73301))) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142873 () Bool)

(assert (=> b!142873 (= e!93091 call!15786)))

(declare-fun bm!15784 () Bool)

(declare-fun e!93093 () List!1745)

(assert (=> bm!15784 (= call!15786 ($colon$colon!94 e!93093 (ite c!27038 (h!2348 (toList!888 lt!73301)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!27036 () Bool)

(assert (=> bm!15784 (= c!27036 c!27038)))

(declare-fun b!142874 () Bool)

(declare-fun c!27039 () Bool)

(assert (=> b!142874 (= e!93093 (ite c!27037 (t!6329 (toList!888 lt!73301)) (ite c!27039 (Cons!1741 (h!2348 (toList!888 lt!73301)) (t!6329 (toList!888 lt!73301))) Nil!1742)))))

(declare-fun b!142875 () Bool)

(assert (=> b!142875 (= e!93092 call!15785)))

(declare-fun b!142876 () Bool)

(assert (=> b!142876 (= e!93094 (contains!925 lt!74829 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142877 () Bool)

(assert (=> b!142877 (= e!93093 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73301)) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142878 () Bool)

(assert (=> b!142878 (= e!93090 call!15787)))

(declare-fun b!142879 () Bool)

(assert (=> b!142879 (= c!27039 (and ((_ is Cons!1741) (toList!888 lt!73301)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73301))) (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142879 (= e!93092 e!93090)))

(declare-fun b!142880 () Bool)

(declare-fun res!68098 () Bool)

(assert (=> b!142880 (=> (not res!68098) (not e!93094))))

(assert (=> b!142880 (= res!68098 (containsKey!180 lt!74829 (_1!1360 (tuple2!2699 lt!73303 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45691 c!27038) b!142873))

(assert (= (and d!45691 (not c!27038)) b!142872))

(assert (= (and b!142872 c!27037) b!142875))

(assert (= (and b!142872 (not c!27037)) b!142879))

(assert (= (and b!142879 c!27039) b!142878))

(assert (= (and b!142879 (not c!27039)) b!142871))

(assert (= (or b!142878 b!142871) bm!15782))

(assert (= (or b!142875 bm!15782) bm!15783))

(assert (= (or b!142873 bm!15783) bm!15784))

(assert (= (and bm!15784 c!27036) b!142877))

(assert (= (and bm!15784 (not c!27036)) b!142874))

(assert (= (and d!45691 res!68097) b!142880))

(assert (= (and b!142880 res!68098) b!142876))

(declare-fun m!172493 () Bool)

(assert (=> b!142877 m!172493))

(declare-fun m!172495 () Bool)

(assert (=> d!45691 m!172495))

(declare-fun m!172497 () Bool)

(assert (=> d!45691 m!172497))

(declare-fun m!172499 () Bool)

(assert (=> b!142880 m!172499))

(declare-fun m!172501 () Bool)

(assert (=> bm!15784 m!172501))

(declare-fun m!172503 () Bool)

(assert (=> b!142876 m!172503))

(assert (=> d!43837 d!45691))

(assert (=> d!43937 d!43567))

(assert (=> d!43937 d!43569))

(declare-fun d!45693 () Bool)

(assert (=> d!45693 (isDefined!129 (getValueByKey!176 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))))))

(assert (=> d!45693 true))

(declare-fun _$12!419 () Unit!4373)

(assert (=> d!45693 (= (choose!864 (toList!888 call!15463) (ite c!26062 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (select (arr!2315 (_keys!4699 newMap!16)) (index!3280 lt!72999)))) _$12!419)))

(declare-fun bs!6055 () Bool)

(assert (= bs!6055 d!45693))

(assert (=> bs!6055 m!166481))

(assert (=> bs!6055 m!166481))

(assert (=> bs!6055 m!166483))

(assert (=> d!43937 d!45693))

(declare-fun d!45695 () Bool)

(declare-fun res!68099 () Bool)

(declare-fun e!93095 () Bool)

(assert (=> d!45695 (=> res!68099 e!93095)))

(assert (=> d!45695 (= res!68099 (or ((_ is Nil!1742) (toList!888 call!15463)) ((_ is Nil!1742) (t!6329 (toList!888 call!15463)))))))

(assert (=> d!45695 (= (isStrictlySorted!325 (toList!888 call!15463)) e!93095)))

(declare-fun b!142881 () Bool)

(declare-fun e!93096 () Bool)

(assert (=> b!142881 (= e!93095 e!93096)))

(declare-fun res!68100 () Bool)

(assert (=> b!142881 (=> (not res!68100) (not e!93096))))

(assert (=> b!142881 (= res!68100 (bvslt (_1!1360 (h!2348 (toList!888 call!15463))) (_1!1360 (h!2348 (t!6329 (toList!888 call!15463))))))))

(declare-fun b!142882 () Bool)

(assert (=> b!142882 (= e!93096 (isStrictlySorted!325 (t!6329 (toList!888 call!15463))))))

(assert (= (and d!45695 (not res!68099)) b!142881))

(assert (= (and b!142881 res!68100) b!142882))

(declare-fun m!172505 () Bool)

(assert (=> b!142882 m!172505))

(assert (=> d!43937 d!45695))

(declare-fun d!45697 () Bool)

(assert (=> d!45697 (= (get!1531 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3284 (getValueByKey!176 (toList!888 lt!73332) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43997 d!45697))

(assert (=> d!43997 d!44201))

(declare-fun b!142886 () Bool)

(declare-fun e!93098 () Option!182)

(assert (=> b!142886 (= e!93098 None!180)))

(declare-fun b!142883 () Bool)

(declare-fun e!93097 () Option!182)

(assert (=> b!142883 (= e!93097 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73421)))))))

(declare-fun b!142884 () Bool)

(assert (=> b!142884 (= e!93097 e!93098)))

(declare-fun c!27041 () Bool)

(assert (=> b!142884 (= c!27041 (and ((_ is Cons!1741) (toList!888 lt!73421)) (not (= (_1!1360 (h!2348 (toList!888 lt!73421))) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!27040 () Bool)

(declare-fun d!45699 () Bool)

(assert (=> d!45699 (= c!27040 (and ((_ is Cons!1741) (toList!888 lt!73421)) (= (_1!1360 (h!2348 (toList!888 lt!73421))) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45699 (= (getValueByKey!176 (toList!888 lt!73421) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))) e!93097)))

(declare-fun b!142885 () Bool)

(assert (=> b!142885 (= e!93098 (getValueByKey!176 (t!6329 (toList!888 lt!73421)) (_1!1360 (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45699 c!27040) b!142883))

(assert (= (and d!45699 (not c!27040)) b!142884))

(assert (= (and b!142884 c!27041) b!142885))

(assert (= (and b!142884 (not c!27041)) b!142886))

(declare-fun m!172507 () Bool)

(assert (=> b!142885 m!172507))

(assert (=> b!140101 d!45699))

(declare-fun d!45701 () Bool)

(declare-fun e!93099 () Bool)

(assert (=> d!45701 e!93099))

(declare-fun res!68101 () Bool)

(assert (=> d!45701 (=> res!68101 e!93099)))

(declare-fun lt!74832 () Bool)

(assert (=> d!45701 (= res!68101 (not lt!74832))))

(declare-fun lt!74830 () Bool)

(assert (=> d!45701 (= lt!74832 lt!74830)))

(declare-fun lt!74831 () Unit!4373)

(declare-fun e!93100 () Unit!4373)

(assert (=> d!45701 (= lt!74831 e!93100)))

(declare-fun c!27042 () Bool)

(assert (=> d!45701 (= c!27042 lt!74830)))

(assert (=> d!45701 (= lt!74830 (containsKey!180 (toList!888 lt!73519) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45701 (= (contains!923 lt!73519 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!74832)))

(declare-fun b!142887 () Bool)

(declare-fun lt!74833 () Unit!4373)

(assert (=> b!142887 (= e!93100 lt!74833)))

(assert (=> b!142887 (= lt!74833 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73519) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142887 (isDefined!129 (getValueByKey!176 (toList!888 lt!73519) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142888 () Bool)

(declare-fun Unit!4533 () Unit!4373)

(assert (=> b!142888 (= e!93100 Unit!4533)))

(declare-fun b!142889 () Bool)

(assert (=> b!142889 (= e!93099 (isDefined!129 (getValueByKey!176 (toList!888 lt!73519) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45701 c!27042) b!142887))

(assert (= (and d!45701 (not c!27042)) b!142888))

(assert (= (and d!45701 (not res!68101)) b!142889))

(declare-fun m!172509 () Bool)

(assert (=> d!45701 m!172509))

(declare-fun m!172511 () Bool)

(assert (=> b!142887 m!172511))

(assert (=> b!142887 m!167481))

(assert (=> b!142887 m!167481))

(declare-fun m!172513 () Bool)

(assert (=> b!142887 m!172513))

(assert (=> b!142889 m!167481))

(assert (=> b!142889 m!167481))

(assert (=> b!142889 m!172513))

(assert (=> d!43631 d!45701))

(declare-fun b!142893 () Bool)

(declare-fun e!93102 () Option!182)

(assert (=> b!142893 (= e!93102 None!180)))

(declare-fun b!142890 () Bool)

(declare-fun e!93101 () Option!182)

(assert (=> b!142890 (= e!93101 (Some!181 (_2!1360 (h!2348 lt!73516))))))

(declare-fun b!142891 () Bool)

(assert (=> b!142891 (= e!93101 e!93102)))

(declare-fun c!27044 () Bool)

(assert (=> b!142891 (= c!27044 (and ((_ is Cons!1741) lt!73516) (not (= (_1!1360 (h!2348 lt!73516)) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!27043 () Bool)

(declare-fun d!45703 () Bool)

(assert (=> d!45703 (= c!27043 (and ((_ is Cons!1741) lt!73516) (= (_1!1360 (h!2348 lt!73516)) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45703 (= (getValueByKey!176 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) e!93101)))

(declare-fun b!142892 () Bool)

(assert (=> b!142892 (= e!93102 (getValueByKey!176 (t!6329 lt!73516) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45703 c!27043) b!142890))

(assert (= (and d!45703 (not c!27043)) b!142891))

(assert (= (and b!142891 c!27044) b!142892))

(assert (= (and b!142891 (not c!27044)) b!142893))

(declare-fun m!172515 () Bool)

(assert (=> b!142892 m!172515))

(assert (=> d!43631 d!45703))

(declare-fun d!45705 () Bool)

(assert (=> d!45705 (= (getValueByKey!176 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) (Some!181 (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74834 () Unit!4373)

(assert (=> d!45705 (= lt!74834 (choose!865 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(declare-fun e!93103 () Bool)

(assert (=> d!45705 e!93103))

(declare-fun res!68102 () Bool)

(assert (=> d!45705 (=> (not res!68102) (not e!93103))))

(assert (=> d!45705 (= res!68102 (isStrictlySorted!325 lt!73516))))

(assert (=> d!45705 (= (lemmaContainsTupThenGetReturnValue!90 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!74834)))

(declare-fun b!142894 () Bool)

(declare-fun res!68103 () Bool)

(assert (=> b!142894 (=> (not res!68103) (not e!93103))))

(assert (=> b!142894 (= res!68103 (containsKey!180 lt!73516 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142895 () Bool)

(assert (=> b!142895 (= e!93103 (contains!925 lt!73516 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45705 res!68102) b!142894))

(assert (= (and b!142894 res!68103) b!142895))

(assert (=> d!45705 m!167475))

(declare-fun m!172517 () Bool)

(assert (=> d!45705 m!172517))

(declare-fun m!172519 () Bool)

(assert (=> d!45705 m!172519))

(declare-fun m!172521 () Bool)

(assert (=> b!142894 m!172521))

(declare-fun m!172523 () Bool)

(assert (=> b!142895 m!172523))

(assert (=> d!43631 d!45705))

(declare-fun b!142896 () Bool)

(declare-fun e!93104 () List!1745)

(declare-fun call!15790 () List!1745)

(assert (=> b!142896 (= e!93104 call!15790)))

(declare-fun bm!15785 () Bool)

(declare-fun call!15788 () List!1745)

(assert (=> bm!15785 (= call!15790 call!15788)))

(declare-fun d!45707 () Bool)

(declare-fun e!93108 () Bool)

(assert (=> d!45707 e!93108))

(declare-fun res!68104 () Bool)

(assert (=> d!45707 (=> (not res!68104) (not e!93108))))

(declare-fun lt!74835 () List!1745)

(assert (=> d!45707 (= res!68104 (isStrictlySorted!325 lt!74835))))

(declare-fun e!93105 () List!1745)

(assert (=> d!45707 (= lt!74835 e!93105)))

(declare-fun c!27047 () Bool)

(assert (=> d!45707 (= c!27047 (and ((_ is Cons!1741) (toList!888 lt!73312)) (bvslt (_1!1360 (h!2348 (toList!888 lt!73312))) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45707 (isStrictlySorted!325 (toList!888 lt!73312))))

(assert (=> d!45707 (= (insertStrictlySorted!93 (toList!888 lt!73312) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))) lt!74835)))

(declare-fun bm!15786 () Bool)

(declare-fun call!15789 () List!1745)

(assert (=> bm!15786 (= call!15788 call!15789)))

(declare-fun b!142897 () Bool)

(declare-fun e!93106 () List!1745)

(assert (=> b!142897 (= e!93105 e!93106)))

(declare-fun c!27046 () Bool)

(assert (=> b!142897 (= c!27046 (and ((_ is Cons!1741) (toList!888 lt!73312)) (= (_1!1360 (h!2348 (toList!888 lt!73312))) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142898 () Bool)

(assert (=> b!142898 (= e!93105 call!15789)))

(declare-fun e!93107 () List!1745)

(declare-fun bm!15787 () Bool)

(assert (=> bm!15787 (= call!15789 ($colon$colon!94 e!93107 (ite c!27047 (h!2348 (toList!888 lt!73312)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!27045 () Bool)

(assert (=> bm!15787 (= c!27045 c!27047)))

(declare-fun c!27048 () Bool)

(declare-fun b!142899 () Bool)

(assert (=> b!142899 (= e!93107 (ite c!27046 (t!6329 (toList!888 lt!73312)) (ite c!27048 (Cons!1741 (h!2348 (toList!888 lt!73312)) (t!6329 (toList!888 lt!73312))) Nil!1742)))))

(declare-fun b!142900 () Bool)

(assert (=> b!142900 (= e!93106 call!15788)))

(declare-fun b!142901 () Bool)

(assert (=> b!142901 (= e!93108 (contains!925 lt!74835 (tuple2!2699 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142902 () Bool)

(assert (=> b!142902 (= e!93107 (insertStrictlySorted!93 (t!6329 (toList!888 lt!73312)) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))) (_2!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142903 () Bool)

(assert (=> b!142903 (= e!93104 call!15790)))

(declare-fun b!142904 () Bool)

(assert (=> b!142904 (= c!27048 (and ((_ is Cons!1741) (toList!888 lt!73312)) (bvsgt (_1!1360 (h!2348 (toList!888 lt!73312))) (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142904 (= e!93106 e!93104)))

(declare-fun b!142905 () Bool)

(declare-fun res!68105 () Bool)

(assert (=> b!142905 (=> (not res!68105) (not e!93108))))

(assert (=> b!142905 (= res!68105 (containsKey!180 lt!74835 (_1!1360 (tuple2!2699 lt!73316 (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45707 c!27047) b!142898))

(assert (= (and d!45707 (not c!27047)) b!142897))

(assert (= (and b!142897 c!27046) b!142900))

(assert (= (and b!142897 (not c!27046)) b!142904))

(assert (= (and b!142904 c!27048) b!142903))

(assert (= (and b!142904 (not c!27048)) b!142896))

(assert (= (or b!142903 b!142896) bm!15785))

(assert (= (or b!142900 bm!15785) bm!15786))

(assert (= (or b!142898 bm!15786) bm!15787))

(assert (= (and bm!15787 c!27045) b!142902))

(assert (= (and bm!15787 (not c!27045)) b!142899))

(assert (= (and d!45707 res!68104) b!142905))

(assert (= (and b!142905 res!68105) b!142901))

(declare-fun m!172525 () Bool)

(assert (=> b!142902 m!172525))

(declare-fun m!172527 () Bool)

(assert (=> d!45707 m!172527))

(declare-fun m!172529 () Bool)

(assert (=> d!45707 m!172529))

(declare-fun m!172531 () Bool)

(assert (=> b!142905 m!172531))

(declare-fun m!172533 () Bool)

(assert (=> bm!15787 m!172533))

(declare-fun m!172535 () Bool)

(assert (=> b!142901 m!172535))

(assert (=> d!43631 d!45707))

(declare-fun d!45709 () Bool)

(assert (=> d!45709 (= ($colon$colon!94 e!91478 (ite c!26268 (h!2348 (toList!888 lt!72902)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))) (Cons!1741 (ite c!26268 (h!2348 (toList!888 lt!72902)) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72904 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))) e!91478))))

(assert (=> bm!15578 d!45709))

(declare-fun b!142906 () Bool)

(declare-fun e!93109 () List!1745)

(declare-fun call!15793 () List!1745)

(assert (=> b!142906 (= e!93109 call!15793)))

(declare-fun bm!15788 () Bool)

(declare-fun call!15791 () List!1745)

(assert (=> bm!15788 (= call!15793 call!15791)))

(declare-fun d!45711 () Bool)

(declare-fun e!93113 () Bool)

(assert (=> d!45711 e!93113))

(declare-fun res!68106 () Bool)

(assert (=> d!45711 (=> (not res!68106) (not e!93113))))

(declare-fun lt!74836 () List!1745)

(assert (=> d!45711 (= res!68106 (isStrictlySorted!325 lt!74836))))

(declare-fun e!93110 () List!1745)

(assert (=> d!45711 (= lt!74836 e!93110)))

(declare-fun c!27051 () Bool)

(assert (=> d!45711 (= c!27051 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72887))) (bvslt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72887)))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> d!45711 (isStrictlySorted!325 (t!6329 (toList!888 lt!72887)))))

(assert (=> d!45711 (= (insertStrictlySorted!93 (t!6329 (toList!888 lt!72887)) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74836)))

(declare-fun bm!15789 () Bool)

(declare-fun call!15792 () List!1745)

(assert (=> bm!15789 (= call!15791 call!15792)))

(declare-fun b!142907 () Bool)

(declare-fun e!93111 () List!1745)

(assert (=> b!142907 (= e!93110 e!93111)))

(declare-fun c!27050 () Bool)

(assert (=> b!142907 (= c!27050 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72887))) (= (_1!1360 (h!2348 (t!6329 (toList!888 lt!72887)))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142908 () Bool)

(assert (=> b!142908 (= e!93110 call!15792)))

(declare-fun bm!15790 () Bool)

(declare-fun e!93112 () List!1745)

(assert (=> bm!15790 (= call!15792 ($colon$colon!94 e!93112 (ite c!27051 (h!2348 (t!6329 (toList!888 lt!72887))) (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))))

(declare-fun c!27049 () Bool)

(assert (=> bm!15790 (= c!27049 c!27051)))

(declare-fun c!27052 () Bool)

(declare-fun b!142909 () Bool)

(assert (=> b!142909 (= e!93112 (ite c!27050 (t!6329 (t!6329 (toList!888 lt!72887))) (ite c!27052 (Cons!1741 (h!2348 (t!6329 (toList!888 lt!72887))) (t!6329 (t!6329 (toList!888 lt!72887)))) Nil!1742)))))

(declare-fun b!142910 () Bool)

(assert (=> b!142910 (= e!93111 call!15791)))

(declare-fun b!142911 () Bool)

(assert (=> b!142911 (= e!93113 (contains!925 lt!74836 (tuple2!2699 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(declare-fun b!142912 () Bool)

(assert (=> b!142912 (= e!93112 (insertStrictlySorted!93 (t!6329 (t!6329 (toList!888 lt!72887))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))) (_2!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun b!142913 () Bool)

(assert (=> b!142913 (= e!93109 call!15793)))

(declare-fun b!142914 () Bool)

(assert (=> b!142914 (= c!27052 (and ((_ is Cons!1741) (t!6329 (toList!888 lt!72887))) (bvsgt (_1!1360 (h!2348 (t!6329 (toList!888 lt!72887)))) (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992))))))))))

(assert (=> b!142914 (= e!93111 e!93109)))

(declare-fun b!142915 () Bool)

(declare-fun res!68107 () Bool)

(assert (=> b!142915 (=> (not res!68107) (not e!93113))))

(assert (=> b!142915 (= res!68107 (containsKey!180 lt!74836 (_1!1360 (tuple2!2699 lt!72891 (zeroValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45711 c!27051) b!142908))

(assert (= (and d!45711 (not c!27051)) b!142907))

(assert (= (and b!142907 c!27050) b!142910))

(assert (= (and b!142907 (not c!27050)) b!142914))

(assert (= (and b!142914 c!27052) b!142913))

(assert (= (and b!142914 (not c!27052)) b!142906))

(assert (= (or b!142913 b!142906) bm!15788))

(assert (= (or b!142910 bm!15788) bm!15789))

(assert (= (or b!142908 bm!15789) bm!15790))

(assert (= (and bm!15790 c!27049) b!142912))

(assert (= (and bm!15790 (not c!27049)) b!142909))

(assert (= (and d!45711 res!68106) b!142915))

(assert (= (and b!142915 res!68107) b!142911))

(declare-fun m!172537 () Bool)

(assert (=> b!142912 m!172537))

(declare-fun m!172539 () Bool)

(assert (=> d!45711 m!172539))

(assert (=> d!45711 m!170241))

(declare-fun m!172541 () Bool)

(assert (=> b!142915 m!172541))

(declare-fun m!172543 () Bool)

(assert (=> bm!15790 m!172543))

(declare-fun m!172545 () Bool)

(assert (=> b!142911 m!172545))

(assert (=> b!140646 d!45711))

(declare-fun b!142919 () Bool)

(declare-fun e!93115 () Option!182)

(assert (=> b!142919 (= e!93115 None!180)))

(declare-fun b!142916 () Bool)

(declare-fun e!93114 () Option!182)

(assert (=> b!142916 (= e!93114 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73895)))))))

(declare-fun b!142917 () Bool)

(assert (=> b!142917 (= e!93114 e!93115)))

(declare-fun c!27054 () Bool)

(assert (=> b!142917 (= c!27054 (and ((_ is Cons!1741) (toList!888 lt!73895)) (not (= (_1!1360 (h!2348 (toList!888 lt!73895))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun d!45713 () Bool)

(declare-fun c!27053 () Bool)

(assert (=> d!45713 (= c!27053 (and ((_ is Cons!1741) (toList!888 lt!73895)) (= (_1!1360 (h!2348 (toList!888 lt!73895))) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45713 (= (getValueByKey!176 (toList!888 lt!73895) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!93114)))

(declare-fun b!142918 () Bool)

(assert (=> b!142918 (= e!93115 (getValueByKey!176 (t!6329 (toList!888 lt!73895)) (_1!1360 (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!45713 c!27053) b!142916))

(assert (= (and d!45713 (not c!27053)) b!142917))

(assert (= (and b!142917 c!27054) b!142918))

(assert (= (and b!142917 (not c!27054)) b!142919))

(declare-fun m!172547 () Bool)

(assert (=> b!142918 m!172547))

(assert (=> b!140812 d!45713))

(declare-fun d!45715 () Bool)

(assert (=> d!45715 (isDefined!129 (getValueByKey!176 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74837 () Unit!4373)

(assert (=> d!45715 (= lt!74837 (choose!864 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!93116 () Bool)

(assert (=> d!45715 e!93116))

(declare-fun res!68108 () Bool)

(assert (=> d!45715 (=> (not res!68108) (not e!93116))))

(assert (=> d!45715 (= res!68108 (isStrictlySorted!325 (toList!888 lt!73158)))))

(assert (=> d!45715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74837)))

(declare-fun b!142920 () Bool)

(assert (=> b!142920 (= e!93116 (containsKey!180 (toList!888 lt!73158) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45715 res!68108) b!142920))

(assert (=> d!45715 m!166385))

(assert (=> d!45715 m!168287))

(assert (=> d!45715 m!168287))

(assert (=> d!45715 m!168289))

(assert (=> d!45715 m!166385))

(declare-fun m!172549 () Bool)

(assert (=> d!45715 m!172549))

(assert (=> d!45715 m!169095))

(assert (=> b!142920 m!166385))

(assert (=> b!142920 m!168283))

(assert (=> b!140664 d!45715))

(assert (=> b!140664 d!45457))

(assert (=> b!140664 d!45223))

(declare-fun lt!74838 () Bool)

(declare-fun d!45717 () Bool)

(assert (=> d!45717 (= lt!74838 (select (content!138 (toList!888 lt!73843)) (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun e!93118 () Bool)

(assert (=> d!45717 (= lt!74838 e!93118)))

(declare-fun res!68109 () Bool)

(assert (=> d!45717 (=> (not res!68109) (not e!93118))))

(assert (=> d!45717 (= res!68109 ((_ is Cons!1741) (toList!888 lt!73843)))))

(assert (=> d!45717 (= (contains!925 (toList!888 lt!73843) (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!74838)))

(declare-fun b!142921 () Bool)

(declare-fun e!93117 () Bool)

(assert (=> b!142921 (= e!93118 e!93117)))

(declare-fun res!68110 () Bool)

(assert (=> b!142921 (=> res!68110 e!93117)))

(assert (=> b!142921 (= res!68110 (= (h!2348 (toList!888 lt!73843)) (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun b!142922 () Bool)

(assert (=> b!142922 (= e!93117 (contains!925 (t!6329 (toList!888 lt!73843)) (tuple2!2699 lt!73090 (ite (and c!26064 c!26071) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45717 res!68109) b!142921))

(assert (= (and b!142921 (not res!68110)) b!142922))

(declare-fun m!172551 () Bool)

(assert (=> d!45717 m!172551))

(declare-fun m!172553 () Bool)

(assert (=> d!45717 m!172553))

(declare-fun m!172555 () Bool)

(assert (=> b!142922 m!172555))

(assert (=> b!140740 d!45717))

(declare-fun d!45719 () Bool)

(declare-fun lt!74839 () Bool)

(assert (=> d!45719 (= lt!74839 (select (content!138 (toList!888 lt!73421)) (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))

(declare-fun e!93120 () Bool)

(assert (=> d!45719 (= lt!74839 e!93120)))

(declare-fun res!68111 () Bool)

(assert (=> d!45719 (=> (not res!68111) (not e!93120))))

(assert (=> d!45719 (= res!68111 ((_ is Cons!1741) (toList!888 lt!73421)))))

(assert (=> d!45719 (= (contains!925 (toList!888 lt!73421) (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))) lt!74839)))

(declare-fun b!142923 () Bool)

(declare-fun e!93119 () Bool)

(assert (=> b!142923 (= e!93120 e!93119)))

(declare-fun res!68112 () Bool)

(assert (=> b!142923 (=> res!68112 e!93119)))

(assert (=> b!142923 (= res!68112 (= (h!2348 (toList!888 lt!73421)) (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))

(declare-fun b!142924 () Bool)

(assert (=> b!142924 (= e!93119 (contains!925 (t!6329 (toList!888 lt!73421)) (tuple2!2699 lt!73142 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45719 res!68111) b!142923))

(assert (= (and b!142923 (not res!68112)) b!142924))

(declare-fun m!172557 () Bool)

(assert (=> d!45719 m!172557))

(declare-fun m!172559 () Bool)

(assert (=> d!45719 m!172559))

(declare-fun m!172561 () Bool)

(assert (=> b!142924 m!172561))

(assert (=> b!140102 d!45719))

(declare-fun d!45721 () Bool)

(declare-fun e!93121 () Bool)

(assert (=> d!45721 e!93121))

(declare-fun res!68113 () Bool)

(assert (=> d!45721 (=> (not res!68113) (not e!93121))))

(declare-fun lt!74843 () ListLongMap!1745)

(assert (=> d!45721 (= res!68113 (contains!923 lt!74843 (_1!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74840 () List!1745)

(assert (=> d!45721 (= lt!74843 (ListLongMap!1746 lt!74840))))

(declare-fun lt!74841 () Unit!4373)

(declare-fun lt!74842 () Unit!4373)

(assert (=> d!45721 (= lt!74841 lt!74842)))

(assert (=> d!45721 (= (getValueByKey!176 lt!74840 (_1!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!181 (_2!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45721 (= lt!74842 (lemmaContainsTupThenGetReturnValue!90 lt!74840 (_1!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45721 (= lt!74840 (insertStrictlySorted!93 (toList!888 (ite c!26375 call!15633 (ite c!26377 call!15631 call!15636))) (_1!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45721 (= (+!179 (ite c!26375 call!15633 (ite c!26377 call!15631 call!15636)) (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74843)))

(declare-fun b!142925 () Bool)

(declare-fun res!68114 () Bool)

(assert (=> b!142925 (=> (not res!68114) (not e!93121))))

(assert (=> b!142925 (= res!68114 (= (getValueByKey!176 (toList!888 lt!74843) (_1!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!181 (_2!1360 (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142926 () Bool)

(assert (=> b!142926 (= e!93121 (contains!925 (toList!888 lt!74843) (ite (or c!26375 c!26377) (tuple2!2699 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2699 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45721 res!68113) b!142925))

(assert (= (and b!142925 res!68114) b!142926))

(declare-fun m!172563 () Bool)

(assert (=> d!45721 m!172563))

(declare-fun m!172565 () Bool)

(assert (=> d!45721 m!172565))

(declare-fun m!172567 () Bool)

(assert (=> d!45721 m!172567))

(declare-fun m!172569 () Bool)

(assert (=> d!45721 m!172569))

(declare-fun m!172571 () Bool)

(assert (=> b!142925 m!172571))

(declare-fun m!172573 () Bool)

(assert (=> b!142926 m!172573))

(assert (=> bm!15632 d!45721))

(assert (=> b!140284 d!45321))

(declare-fun d!45723 () Bool)

(assert (=> d!45723 (= (get!1530 (select (arr!2316 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140049 d!45723))

(declare-fun d!45725 () Bool)

(assert (=> d!45725 (= (apply!120 lt!73550 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (getValueByKey!176 (toList!888 lt!73550) (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6056 () Bool)

(assert (= bs!6056 d!45725))

(assert (=> bs!6056 m!166385))

(assert (=> bs!6056 m!169739))

(assert (=> bs!6056 m!169739))

(declare-fun m!172575 () Bool)

(assert (=> bs!6056 m!172575))

(assert (=> b!140332 d!45725))

(assert (=> b!140332 d!43463))

(declare-fun d!45727 () Bool)

(assert (=> d!45727 (isDefined!129 (getValueByKey!176 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun lt!74844 () Unit!4373)

(assert (=> d!45727 (= lt!74844 (choose!864 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(declare-fun e!93122 () Bool)

(assert (=> d!45727 e!93122))

(declare-fun res!68115 () Bool)

(assert (=> d!45727 (=> (not res!68115) (not e!93122))))

(assert (=> d!45727 (= res!68115 (isStrictlySorted!325 (toList!888 lt!73027)))))

(assert (=> d!45727 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))) lt!74844)))

(declare-fun b!142927 () Bool)

(assert (=> b!142927 (= e!93122 (containsKey!180 (toList!888 lt!73027) (_1!1360 (tuple2!2699 lt!72890 (minValue!2790 (v!3280 (underlying!480 thiss!992)))))))))

(assert (= (and d!45727 res!68115) b!142927))

(assert (=> d!45727 m!166281))

(assert (=> d!45727 m!166281))

(assert (=> d!45727 m!166859))

(declare-fun m!172577 () Bool)

(assert (=> d!45727 m!172577))

(declare-fun m!172579 () Bool)

(assert (=> d!45727 m!172579))

(assert (=> b!142927 m!166855))

(assert (=> b!139959 d!45727))

(assert (=> b!139959 d!45447))

(assert (=> b!139959 d!43985))

(declare-fun d!45729 () Bool)

(declare-fun res!68116 () Bool)

(declare-fun e!93123 () Bool)

(assert (=> d!45729 (=> res!68116 e!93123)))

(assert (=> d!45729 (= res!68116 (and ((_ is Cons!1741) lt!73433) (= (_1!1360 (h!2348 lt!73433)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45729 (= (containsKey!180 lt!73433 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93123)))

(declare-fun b!142928 () Bool)

(declare-fun e!93124 () Bool)

(assert (=> b!142928 (= e!93123 e!93124)))

(declare-fun res!68117 () Bool)

(assert (=> b!142928 (=> (not res!68117) (not e!93124))))

(assert (=> b!142928 (= res!68117 (and (or (not ((_ is Cons!1741) lt!73433)) (bvsle (_1!1360 (h!2348 lt!73433)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1741) lt!73433) (bvslt (_1!1360 (h!2348 lt!73433)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142929 () Bool)

(assert (=> b!142929 (= e!93124 (containsKey!180 (t!6329 lt!73433) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45729 (not res!68116)) b!142928))

(assert (= (and b!142928 res!68117) b!142929))

(declare-fun m!172581 () Bool)

(assert (=> b!142929 m!172581))

(assert (=> b!140135 d!45729))

(assert (=> b!140687 d!44173))

(assert (=> b!140687 d!44175))

(assert (=> b!140536 d!44189))

(assert (=> b!140536 d!44191))

(declare-fun d!45731 () Bool)

(declare-fun e!93125 () Bool)

(assert (=> d!45731 e!93125))

(declare-fun res!68118 () Bool)

(assert (=> d!45731 (=> (not res!68118) (not e!93125))))

(declare-fun lt!74848 () ListLongMap!1745)

(assert (=> d!45731 (= res!68118 (contains!923 lt!74848 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74845 () List!1745)

(assert (=> d!45731 (= lt!74848 (ListLongMap!1746 lt!74845))))

(declare-fun lt!74846 () Unit!4373)

(declare-fun lt!74847 () Unit!4373)

(assert (=> d!45731 (= lt!74846 lt!74847)))

(assert (=> d!45731 (= (getValueByKey!176 lt!74845 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45731 (= lt!74847 (lemmaContainsTupThenGetReturnValue!90 lt!74845 (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45731 (= lt!74845 (insertStrictlySorted!93 (toList!888 call!15560) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45731 (= (+!179 call!15560 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74848)))

(declare-fun b!142930 () Bool)

(declare-fun res!68119 () Bool)

(assert (=> b!142930 (=> (not res!68119) (not e!93125))))

(assert (=> b!142930 (= res!68119 (= (getValueByKey!176 (toList!888 lt!74848) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!181 (_2!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142931 () Bool)

(assert (=> b!142931 (= e!93125 (contains!925 (toList!888 lt!74848) (tuple2!2699 (select (arr!2315 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1528 (select (arr!2316 (array!4900 (store (arr!2316 (_values!2923 newMap!16)) (index!3280 lt!72999) (ValueCellFull!1122 (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2588 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!442 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45731 res!68118) b!142930))

(assert (= (and b!142930 res!68119) b!142931))

(declare-fun m!172583 () Bool)

(assert (=> d!45731 m!172583))

(declare-fun m!172585 () Bool)

(assert (=> d!45731 m!172585))

(declare-fun m!172587 () Bool)

(assert (=> d!45731 m!172587))

(declare-fun m!172589 () Bool)

(assert (=> d!45731 m!172589))

(declare-fun m!172591 () Bool)

(assert (=> b!142930 m!172591))

(declare-fun m!172593 () Bool)

(assert (=> b!142931 m!172593))

(assert (=> b!140085 d!45731))

(assert (=> b!140085 d!43973))

(declare-fun d!45733 () Bool)

(assert (=> d!45733 (not (contains!923 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404)) lt!73403))))

(declare-fun lt!74849 () Unit!4373)

(assert (=> d!45733 (= lt!74849 (choose!866 lt!73408 lt!73407 lt!73404 lt!73403))))

(declare-fun e!93126 () Bool)

(assert (=> d!45733 e!93126))

(declare-fun res!68120 () Bool)

(assert (=> d!45733 (=> (not res!68120) (not e!93126))))

(assert (=> d!45733 (= res!68120 (not (contains!923 lt!73408 lt!73403)))))

(assert (=> d!45733 (= (addStillNotContains!64 lt!73408 lt!73407 lt!73404 lt!73403) lt!74849)))

(declare-fun b!142932 () Bool)

(assert (=> b!142932 (= e!93126 (not (= lt!73407 lt!73403)))))

(assert (= (and d!45733 res!68120) b!142932))

(assert (=> d!45733 m!167103))

(assert (=> d!45733 m!167103))

(assert (=> d!45733 m!167105))

(declare-fun m!172595 () Bool)

(assert (=> d!45733 m!172595))

(declare-fun m!172597 () Bool)

(assert (=> d!45733 m!172597))

(assert (=> b!140085 d!45733))

(declare-fun d!45735 () Bool)

(declare-fun e!93127 () Bool)

(assert (=> d!45735 e!93127))

(declare-fun res!68121 () Bool)

(assert (=> d!45735 (=> res!68121 e!93127)))

(declare-fun lt!74852 () Bool)

(assert (=> d!45735 (= res!68121 (not lt!74852))))

(declare-fun lt!74850 () Bool)

(assert (=> d!45735 (= lt!74852 lt!74850)))

(declare-fun lt!74851 () Unit!4373)

(declare-fun e!93128 () Unit!4373)

(assert (=> d!45735 (= lt!74851 e!93128)))

(declare-fun c!27055 () Bool)

(assert (=> d!45735 (= c!27055 lt!74850)))

(assert (=> d!45735 (= lt!74850 (containsKey!180 (toList!888 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404))) lt!73403))))

(assert (=> d!45735 (= (contains!923 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404)) lt!73403) lt!74852)))

(declare-fun b!142933 () Bool)

(declare-fun lt!74853 () Unit!4373)

(assert (=> b!142933 (= e!93128 lt!74853)))

(assert (=> b!142933 (= lt!74853 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!888 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404))) lt!73403))))

(assert (=> b!142933 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404))) lt!73403))))

(declare-fun b!142934 () Bool)

(declare-fun Unit!4534 () Unit!4373)

(assert (=> b!142934 (= e!93128 Unit!4534)))

(declare-fun b!142935 () Bool)

(assert (=> b!142935 (= e!93127 (isDefined!129 (getValueByKey!176 (toList!888 (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404))) lt!73403)))))

(assert (= (and d!45735 c!27055) b!142933))

(assert (= (and d!45735 (not c!27055)) b!142934))

(assert (= (and d!45735 (not res!68121)) b!142935))

(declare-fun m!172599 () Bool)

(assert (=> d!45735 m!172599))

(declare-fun m!172601 () Bool)

(assert (=> b!142933 m!172601))

(declare-fun m!172603 () Bool)

(assert (=> b!142933 m!172603))

(assert (=> b!142933 m!172603))

(declare-fun m!172605 () Bool)

(assert (=> b!142933 m!172605))

(assert (=> b!142935 m!172603))

(assert (=> b!142935 m!172603))

(assert (=> b!142935 m!172605))

(assert (=> b!140085 d!45735))

(declare-fun d!45737 () Bool)

(declare-fun e!93129 () Bool)

(assert (=> d!45737 e!93129))

(declare-fun res!68122 () Bool)

(assert (=> d!45737 (=> (not res!68122) (not e!93129))))

(declare-fun lt!74857 () ListLongMap!1745)

(assert (=> d!45737 (= res!68122 (contains!923 lt!74857 (_1!1360 (tuple2!2699 lt!73407 lt!73404))))))

(declare-fun lt!74854 () List!1745)

(assert (=> d!45737 (= lt!74857 (ListLongMap!1746 lt!74854))))

(declare-fun lt!74855 () Unit!4373)

(declare-fun lt!74856 () Unit!4373)

(assert (=> d!45737 (= lt!74855 lt!74856)))

(assert (=> d!45737 (= (getValueByKey!176 lt!74854 (_1!1360 (tuple2!2699 lt!73407 lt!73404))) (Some!181 (_2!1360 (tuple2!2699 lt!73407 lt!73404))))))

(assert (=> d!45737 (= lt!74856 (lemmaContainsTupThenGetReturnValue!90 lt!74854 (_1!1360 (tuple2!2699 lt!73407 lt!73404)) (_2!1360 (tuple2!2699 lt!73407 lt!73404))))))

(assert (=> d!45737 (= lt!74854 (insertStrictlySorted!93 (toList!888 lt!73408) (_1!1360 (tuple2!2699 lt!73407 lt!73404)) (_2!1360 (tuple2!2699 lt!73407 lt!73404))))))

(assert (=> d!45737 (= (+!179 lt!73408 (tuple2!2699 lt!73407 lt!73404)) lt!74857)))

(declare-fun b!142936 () Bool)

(declare-fun res!68123 () Bool)

(assert (=> b!142936 (=> (not res!68123) (not e!93129))))

(assert (=> b!142936 (= res!68123 (= (getValueByKey!176 (toList!888 lt!74857) (_1!1360 (tuple2!2699 lt!73407 lt!73404))) (Some!181 (_2!1360 (tuple2!2699 lt!73407 lt!73404)))))))

(declare-fun b!142937 () Bool)

(assert (=> b!142937 (= e!93129 (contains!925 (toList!888 lt!74857) (tuple2!2699 lt!73407 lt!73404)))))

(assert (= (and d!45737 res!68122) b!142936))

(assert (= (and b!142936 res!68123) b!142937))

(declare-fun m!172607 () Bool)

(assert (=> d!45737 m!172607))

(declare-fun m!172609 () Bool)

(assert (=> d!45737 m!172609))

(declare-fun m!172611 () Bool)

(assert (=> d!45737 m!172611))

(declare-fun m!172613 () Bool)

(assert (=> d!45737 m!172613))

(declare-fun m!172615 () Bool)

(assert (=> b!142936 m!172615))

(declare-fun m!172617 () Bool)

(assert (=> b!142937 m!172617))

(assert (=> b!140085 d!45737))

(declare-fun b!142941 () Bool)

(declare-fun e!93131 () Option!182)

(assert (=> b!142941 (= e!93131 None!180)))

(declare-fun b!142938 () Bool)

(declare-fun e!93130 () Option!182)

(assert (=> b!142938 (= e!93130 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73583)))))))

(declare-fun b!142939 () Bool)

(assert (=> b!142939 (= e!93130 e!93131)))

(declare-fun c!27057 () Bool)

(assert (=> b!142939 (= c!27057 (and ((_ is Cons!1741) (toList!888 lt!73583)) (not (= (_1!1360 (h!2348 (toList!888 lt!73583))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!45739 () Bool)

(declare-fun c!27056 () Bool)

(assert (=> d!45739 (= c!27056 (and ((_ is Cons!1741) (toList!888 lt!73583)) (= (_1!1360 (h!2348 (toList!888 lt!73583))) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45739 (= (getValueByKey!176 (toList!888 lt!73583) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93130)))

(declare-fun b!142940 () Bool)

(assert (=> b!142940 (= e!93131 (getValueByKey!176 (t!6329 (toList!888 lt!73583)) (_1!1360 (tuple2!2699 (select (arr!2315 (_keys!4699 (v!3280 (underlying!480 thiss!992)))) from!355) (get!1528 (select (arr!2316 (_values!2923 (v!3280 (underlying!480 thiss!992)))) from!355) (dynLambda!442 (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45739 c!27056) b!142938))

(assert (= (and d!45739 (not c!27056)) b!142939))

(assert (= (and b!142939 c!27057) b!142940))

(assert (= (and b!142939 (not c!27057)) b!142941))

(declare-fun m!172619 () Bool)

(assert (=> b!142940 m!172619))

(assert (=> b!140372 d!45739))

(declare-fun b!142945 () Bool)

(declare-fun e!93133 () Option!182)

(assert (=> b!142945 (= e!93133 None!180)))

(declare-fun b!142942 () Bool)

(declare-fun e!93132 () Option!182)

(assert (=> b!142942 (= e!93132 (Some!181 (_2!1360 (h!2348 (toList!888 lt!73859)))))))

(declare-fun b!142943 () Bool)

(assert (=> b!142943 (= e!93132 e!93133)))

(declare-fun c!27059 () Bool)

(assert (=> b!142943 (= c!27059 (and ((_ is Cons!1741) (toList!888 lt!73859)) (not (= (_1!1360 (h!2348 (toList!888 lt!73859))) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))))

(declare-fun d!45741 () Bool)

(declare-fun c!27058 () Bool)

(assert (=> d!45741 (= c!27058 (and ((_ is Cons!1741) (toList!888 lt!73859)) (= (_1!1360 (h!2348 (toList!888 lt!73859))) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16))))))))

(assert (=> d!45741 (= (getValueByKey!176 (toList!888 lt!73859) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))) e!93132)))

(declare-fun b!142944 () Bool)

(assert (=> b!142944 (= e!93133 (getValueByKey!176 (t!6329 (toList!888 lt!73859)) (_1!1360 (tuple2!2699 lt!73087 (minValue!2790 newMap!16)))))))

(assert (= (and d!45741 c!27058) b!142942))

(assert (= (and d!45741 (not c!27058)) b!142943))

(assert (= (and b!142943 c!27059) b!142944))

(assert (= (and b!142943 (not c!27059)) b!142945))

(declare-fun m!172621 () Bool)

(assert (=> b!142944 m!172621))

(assert (=> b!140748 d!45741))

(assert (=> b!140595 d!44199))

(assert (=> b!140595 d!44201))

(declare-fun d!45743 () Bool)

(assert (=> d!45743 (contains!923 (getCurrentListMap!561 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2315 lt!73240) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999))))))

(assert (=> d!45743 true))

(declare-fun _$16!159 () Unit!4373)

(assert (=> d!45743 (= (choose!861 lt!73240 lt!73236 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26063 (index!3282 lt!72999) (index!3279 lt!72999)) (defaultEntry!2940 newMap!16)) _$16!159)))

(declare-fun bs!6057 () Bool)

(assert (= bs!6057 d!45743))

(assert (=> bs!6057 m!166657))

(assert (=> bs!6057 m!167725))

(assert (=> bs!6057 m!166657))

(assert (=> bs!6057 m!167725))

(assert (=> bs!6057 m!167727))

(assert (=> d!43709 d!45743))

(assert (=> d!43709 d!43527))

(declare-fun mapNonEmpty!4849 () Bool)

(declare-fun mapRes!4849 () Bool)

(declare-fun tp!11581 () Bool)

(declare-fun e!93134 () Bool)

(assert (=> mapNonEmpty!4849 (= mapRes!4849 (and tp!11581 e!93134))))

(declare-fun mapKey!4849 () (_ BitVec 32))

(declare-fun mapValue!4849 () ValueCell!1122)

(declare-fun mapRest!4849 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4849 (= mapRest!4848 (store mapRest!4849 mapKey!4849 mapValue!4849))))

(declare-fun b!142946 () Bool)

(assert (=> b!142946 (= e!93134 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4849 () Bool)

(assert (=> mapIsEmpty!4849 mapRes!4849))

(declare-fun condMapEmpty!4849 () Bool)

(declare-fun mapDefault!4849 () ValueCell!1122)

(assert (=> mapNonEmpty!4848 (= condMapEmpty!4849 (= mapRest!4848 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4849)))))

(declare-fun e!93135 () Bool)

(assert (=> mapNonEmpty!4848 (= tp!11580 (and e!93135 mapRes!4849))))

(declare-fun b!142947 () Bool)

(assert (=> b!142947 (= e!93135 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4848 condMapEmpty!4849) mapIsEmpty!4849))

(assert (= (and mapNonEmpty!4848 (not condMapEmpty!4849)) mapNonEmpty!4849))

(assert (= (and mapNonEmpty!4849 ((_ is ValueCellFull!1122) mapValue!4849)) b!142946))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1122) mapDefault!4849)) b!142947))

(declare-fun m!172623 () Bool)

(assert (=> mapNonEmpty!4849 m!172623))

(declare-fun mapNonEmpty!4850 () Bool)

(declare-fun mapRes!4850 () Bool)

(declare-fun tp!11582 () Bool)

(declare-fun e!93136 () Bool)

(assert (=> mapNonEmpty!4850 (= mapRes!4850 (and tp!11582 e!93136))))

(declare-fun mapKey!4850 () (_ BitVec 32))

(declare-fun mapValue!4850 () ValueCell!1122)

(declare-fun mapRest!4850 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4850 (= mapRest!4847 (store mapRest!4850 mapKey!4850 mapValue!4850))))

(declare-fun b!142948 () Bool)

(assert (=> b!142948 (= e!93136 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4850 () Bool)

(assert (=> mapIsEmpty!4850 mapRes!4850))

(declare-fun condMapEmpty!4850 () Bool)

(declare-fun mapDefault!4850 () ValueCell!1122)

(assert (=> mapNonEmpty!4847 (= condMapEmpty!4850 (= mapRest!4847 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4850)))))

(declare-fun e!93137 () Bool)

(assert (=> mapNonEmpty!4847 (= tp!11579 (and e!93137 mapRes!4850))))

(declare-fun b!142949 () Bool)

(assert (=> b!142949 (= e!93137 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4847 condMapEmpty!4850) mapIsEmpty!4850))

(assert (= (and mapNonEmpty!4847 (not condMapEmpty!4850)) mapNonEmpty!4850))

(assert (= (and mapNonEmpty!4850 ((_ is ValueCellFull!1122) mapValue!4850)) b!142948))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1122) mapDefault!4850)) b!142949))

(declare-fun m!172625 () Bool)

(assert (=> mapNonEmpty!4850 m!172625))

(declare-fun b_lambda!6375 () Bool)

(assert (= b_lambda!6341 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6375)))

(declare-fun b_lambda!6377 () Bool)

(assert (= b_lambda!6357 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6377)))

(declare-fun b_lambda!6379 () Bool)

(assert (= b_lambda!6365 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6379)))

(declare-fun b_lambda!6381 () Bool)

(assert (= b_lambda!6325 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6381)))

(declare-fun b_lambda!6383 () Bool)

(assert (= b_lambda!6353 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6383)))

(declare-fun b_lambda!6385 () Bool)

(assert (= b_lambda!6359 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6385)))

(declare-fun b_lambda!6387 () Bool)

(assert (= b_lambda!6347 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6387)))

(declare-fun b_lambda!6389 () Bool)

(assert (= b_lambda!6331 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6389)))

(declare-fun b_lambda!6391 () Bool)

(assert (= b_lambda!6363 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6391)))

(declare-fun b_lambda!6393 () Bool)

(assert (= b_lambda!6343 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6393)))

(declare-fun b_lambda!6395 () Bool)

(assert (= b_lambda!6355 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6395)))

(declare-fun b_lambda!6397 () Bool)

(assert (= b_lambda!6367 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6397)))

(declare-fun b_lambda!6399 () Bool)

(assert (= b_lambda!6327 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6399)))

(declare-fun b_lambda!6401 () Bool)

(assert (= b_lambda!6345 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6401)))

(declare-fun b_lambda!6403 () Bool)

(assert (= b_lambda!6361 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6403)))

(declare-fun b_lambda!6405 () Bool)

(assert (= b_lambda!6333 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6405)))

(declare-fun b_lambda!6407 () Bool)

(assert (= b_lambda!6287 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (ite c!26065 (_2!1361 lt!72992) newMap!16)))) b_lambda!6407)))

(declare-fun b_lambda!6409 () Bool)

(assert (= b_lambda!6371 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6409)))

(declare-fun b_lambda!6411 () Bool)

(assert (= b_lambda!6329 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6411)))

(declare-fun b_lambda!6413 () Bool)

(assert (= b_lambda!6261 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (ite c!26065 newMap!16 (_2!1361 lt!72992))))) b_lambda!6413)))

(declare-fun b_lambda!6415 () Bool)

(assert (= b_lambda!6369 (or (and b!139297 b_free!3029) (and b!139291 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))))) b_lambda!6415)))

(declare-fun b_lambda!6417 () Bool)

(assert (= b_lambda!6335 (or (and b!139297 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!480 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139291 b_free!3031) b_lambda!6417)))

(check-sat (not d!44621) (not b!141431) (not bm!15779) (not b!142053) (not b!142798) (not b!141545) (not bm!15717) (not d!45379) (not d!45711) (not b_lambda!6259) (not d!45689) (not b!142854) (not b!141781) (not d!45033) (not d!45685) (not b!141304) (not b!142255) (not b!141096) (not d!45517) (not b!142289) (not b!141446) (not b!142596) (not b!141592) (not b!142675) (not b!142459) (not b!142024) (not b!141942) (not d!45477) (not d!44967) (not b!142744) (not d!44911) (not d!45401) (not b!141888) (not b!142833) (not b_lambda!6339) (not b!140862) (not b!141643) (not d!45489) (not bm!15708) (not d!45317) (not d!44155) (not d!45543) (not b!141769) (not b!141862) (not b!141059) (not d!44913) (not b!141937) (not d!45171) (not d!45639) (not b!142514) (not b!141168) (not d!45475) (not b!142184) (not b!141544) (not b!142509) (not bm!15677) (not d!44841) (not b!140969) (not b!142422) (not d!45293) (not b!142761) (not b!141927) (not d!45693) (not b!141688) (not d!45553) (not b!142394) (not b!142732) (not b_lambda!6417) (not b!141017) (not d!44173) (not b!141785) (not b!141079) (not b!142767) (not d!44355) (not b!141135) (not b!142581) (not b!142848) (not d!44947) (not b!141895) (not b!141510) (not d!44969) (not b!141357) (not b!141329) (not b!142022) (not d!44535) (not b!142216) (not b!141205) (not d!45165) (not b!141692) (not b!141549) (not d!45659) (not b_lambda!6383) (not b!140935) (not d!44701) (not d!44739) (not b!142446) (not b!142500) (not b!141223) (not b!141130) (not b!142071) (not bm!15668) (not b!141609) (not d!44711) (not b!142853) (not bm!15703) (not d!44791) (not b!142712) (not b!141106) (not b!142926) (not b!141658) (not b!141819) (not b!142927) (not b!141023) (not d!45141) (not b!142557) (not d!45643) (not d!44949) (not b_lambda!6391) (not d!44075) (not b!141053) (not d!45023) (not b!141973) (not b!142745) (not d!44675) (not d!44425) (not b!141272) (not b!140876) (not d!44843) (not d!45727) (not bm!15736) (not b!142133) (not b!140990) (not b!142542) (not b!142456) (not b!142153) (not d!45435) (not b!141830) (not d!44303) (not d!44773) (not b!142425) (not b_lambda!6303) (not d!45479) (not b!142408) (not d!44935) (not b!142188) (not b!141269) (not b!142301) (not d!45555) (not d!44361) (not b!141797) (not d!44195) (not d!44569) (not b!142120) (not b!141532) (not d!44471) (not b!142901) (not bm!15781) (not b!142214) (not b!141184) (not b!141405) (not b!141350) (not b!141889) (not d!44399) (not b!142882) (not b!142186) (not b!142530) (not d!44623) (not b!141037) (not b!141108) (not b!141910) (not d!44805) (not d!45427) (not b!142009) (not b_next!3029) (not b!142126) (not bm!15732) (not d!44755) (not b!142381) (not b!141656) (not d!44671) (not d!44457) (not b!142069) (not d!44231) (not b!142925) (not b!141740) (not b!141456) (not bm!15774) (not d!44855) (not b!142845) (not b!141400) (not b!142292) (not d!45743) (not b!141922) (not b!141758) (not b!141702) (not d!45617) (not b_lambda!6387) (not b!142861) (not d!45433) (not b!142144) (not b!142323) (not bm!15769) (not b!141371) (not d!44271) (not b!142715) (not b!141495) (not d!44563) (not d!45679) (not b!142410) (not b!142495) (not b!141699) (not d!45145) (not d!45095) (not b!141328) (not b!141256) (not d!44903) (not b!141625) (not d!44699) (not d!45459) (not b!142083) (not d!45571) (not b!141034) (not b!141778) (not d!44741) (not d!44813) (not b!142835) (not b!140900) (not b!141680) (not d!44889) (not b!142741) (not bm!15643) (not d!44793) (not d!44555) (not b!141491) (not b!142327) (not d!45039) (not b!142579) (not b!142032) (not d!45581) tp_is_empty!2931 (not d!45657) (not b!142160) (not d!44927) (not b!140887) (not b!140999) (not d!45717) (not b!142075) (not d!44785) (not b!140972) (not b!142560) (not d!45149) (not b!142199) (not d!45183) (not b!141259) (not b!140927) (not d!44391) (not d!44817) (not b!141805) (not d!44143) (not bm!15663) (not b!142779) (not b!142089) (not d!45121) (not b!142862) (not b!142710) (not d!44657) (not bm!15656) (not b!142046) (not d!44749) (not b!142589) (not b!141571) (not b!141346) (not b!141683) (not d!44839) (not b!141453) (not b_lambda!6397) (not d!45443) (not b!142533) (not b!142315) (not b!142223) (not d!44979) (not b!142384) (not b!140975) (not b!141701) (not b!140897) (not b_lambda!6379) (not b!141991) (not d!45269) (not b_lambda!6235) (not d!45655) (not b!141314) (not b!141694) (not d!44501) (not b!141812) (not b!141659) (not b!142480) (not b!141418) (not b!142124) (not d!45531) (not b!141086) (not b!141443) (not b!141697) (not b!141684) (not b!141323) (not b!141933) (not b_lambda!6389) (not d!44895) (not b!141234) (not b!142279) (not b!140938) (not bm!15721) (not d!45147) (not d!45469) (not d!44837) (not d!44971) (not d!45467) (not b!141603) (not b!142505) (not b!142683) (not b!142066) (not d!44513) (not b!142243) (not d!45247) (not d!44765) (not b!141569) (not b!142740) (not b!141395) (not b!141438) (not b_lambda!6253) (not b!142398) (not d!44775) (not b!141201) (not b!141049) (not d!45671) (not d!45499) (not b!142620) (not b!141590) (not b!142837) (not b!142295) (not d!45131) (not b!142157) (not b!141928) (not b!141747) (not b!141968) (not d!44119) (not b!142390) (not b!141845) (not d!44235) (not b!141200) (not b!141920) (not b!142415) (not b!141368) (not b!141576) (not b!141546) (not d!45461) (not d!44561) (not b!142858) (not d!45311) (not bm!15724) (not b!141277) (not b!142911) (not d!45725) (not bm!15644) (not b!142894) (not d!45633) (not b!140890) (not b!142332) (not b!142468) (not b!141467) (not b!142272) (not d!45601) (not b!141030) (not b!142442) (not b!142870) (not d!45737) (not d!44167) (not b!141258) (not b!141870) (not b!142639) (not b!142050) (not b!141722) (not d!45621) (not b!142316) (not b!142860) (not d!45155) (not b!141014) (not b!141291) (not b!141533) (not b!142771) (not bm!15645) (not d!44537) (not b!142682) (not b!141579) (not b!142743) (not b!141980) (not b!141145) (not d!44325) (not b!142206) (not b!141498) (not d!44823) (not d!44737) (not b!142582) (not b!142104) (not b!142448) (not b!141469) (not d!45493) (not b!141536) (not b!141934) (not b!141517) (not b!141661) (not b!141955) (not b!142836) (not b!142131) (not b!142826) (not d!44951) (not b!141953) (not d!44083) (not bm!15671) (not d!45439) (not b!141832) (not b!141896) (not b!141994) (not d!45071) (not b!141596) (not d!44593) (not d!44113) (not b!141814) (not b!142225) (not b!142413) (not b!142787) (not d!44803) (not d!44453) (not b!142912) (not d!44551) (not b!142736) (not b!141210) (not b!142726) (not d!44825) (not b!142657) (not b!140981) (not b!140967) (not b!140932) (not d!44349) (not b!141389) (not b!141393) (not d!44431) (not b!141066) (not d!45231) (not d!44715) (not b!142177) (not d!44565) (not b!142427) (not b!141771) (not d!44831) (not b!142431) (not d!45635) (not b!142491) (not b!142548) (not b!141542) (not d!45305) (not b_lambda!6231) (not d!44435) (not b_lambda!6375) (not b!142619) (not b!141662) (not b!142670) (not d!45161) (not b!142030) (not d!45207) (not d!45281) (not b!142660) (not d!45669) (not b!141276) (not d!44061) (not d!45061) (not d!44197) (not b!141665) (not bm!15760) (not d!44989) (not b!142644) (not d!44443) (not bm!15766) (not b!142701) (not d!45417) (not b!141475) (not b!142236) (not b!141560) (not b!141312) (not d!44363) (not b!141126) (not b_lambda!6351) (not d!44901) (not b!142417) (not b!141638) (not b!141301) (not d!44109) (not d!45675) (not d!45309) (not d!45211) (not bm!15784) (not d!45255) (not b!142485) (not d!45085) (not b!142576) (not b!142171) (not b!141480) (not b!141851) (not b!142117) (not b!141589) (not b!141703) (not d!44729) (not b!141749) (not d!45565) (not d!45481) (not b!142552) (not b!141339) (not b!142905) (not d!45627) (not bm!15728) (not b!142752) (not d!45139) (not b!141459) (not b!142924) (not b!142179) (not b!141414) (not b_lambda!6411) (not b!142714) (not d!45291) (not b!141153) (not b!141902) (not d!44277) (not d!44223) (not b_lambda!6413) (not d!45135) (not d!44371) (not b!142371) (not d!45677) (not b!142132) (not b!140939) (not d!45527) (not b!141687) (not b!142198) (not d!44523) (not b!142622) (not b!141408) (not b!141564) (not b!142587) (not d!44009) (not b!141945) (not b!142931) (not b!142067) (not b!142690) (not d!44239) (not b!142717) (not b!141335) (not b!142043) (not b!142338) (not b!142610) (not d!44005) (not b!141965) (not b!142788) (not b!142646) (not b!142241) (not b!141663) (not b_lambda!6393) (not b!142628) (not b!140992) (not d!45509) (not b!142383) (not b!141161) (not b!141006) (not d!45123) (not b!142811) (not b!140958) (not b!141685) (not b!140974) (not d!44261) (not b!141208) (not b!140996) (not d!44673) (not b!141719) (not b!141116) (not b!140918) (not b!141113) (not d!45377) (not b!140963) (not d!44017) (not b!142016) (not d!45107) (not b!141058) (not d!45701) (not b!141899) (not d!45203) (not b!141341) (not b!140849) (not d!44217) (not d!44527) (not b!142025) (not b!141011) (not b!141772) (not b!141031) (not b!141767) (not b!142048) (not d!44001) (not d!44761) (not b!142739) (not b!141810) (not b!142685) (not b!141473) (not b_lambda!6395) (not b!142698) (not b!142309) (not b!141516) (not d!44093) (not b!142424) (not b!142094) (not b!141452) (not d!44733) (not b!141121) (not b!142168) (not b!141016) (not b!141253) (not b!142806) (not b!142850) (not bm!15693) (not d!44999) (not d!45327) (not b!141242) (not d!45143) (not d!44253) (not d!44149) (not b!141466) (not b!141359) (not b!141306) (not b!142033) (not d!44875) (not d!44789) (not d!44365) (not b!141008) (not b!141051) (not b!141595) (not b!142158) (not b!142136) (not bm!15698) (not b!141622) (not b!142103) (not b!142597) (not d!44169) (not d!45463) (not b_lambda!6301) (not b!141857) (not d!44015) (not b!141504) (not d!45487) (not b!142673) (not b!140988) (not b!141138) (not d!44133) (not b!141316) (not d!45457) (not b!141246) (not d!45015) (not bm!15660) (not b!142352) (not d!45225) (not b!141149) (not d!44821) (not d!44123) (not d!44577) (not b!141947) (not b!142545) (not d!45561) (not b!142330) (not d!44649) (not b!142245) (not b_lambda!6251) (not b!142856) (not d!44387) (not d!44283) (not b!141120) (not b!142113) (not b!140852) (not b!142855) (not d!45017) (not b!142887) (not d!45051) (not b!142097) (not b!142795) (not b!141206) (not b!142785) (not bm!15773) (not b!142333) (not b_lambda!6309) (not b!142367) (not b!141318) (not d!44541) (not d!44445) (not b!140873) (not bm!15725) (not d!44633) (not b!142852) (not b!142746) (not b!142217) (not b!141123) (not b!141056) (not b!142719) (not d!44251) (not d!44193) (not b!142087) (not b!141336) (not b!141553) (not d!45501) (not d!45483) (not b!141237) (not d!44159) (not d!45179) (not d!45277) (not b_lambda!6315) (not d!44459) (not d!44317) (not b!141009) (not b!142285) (not b!142147) (not d!44247) (not b!141102) (not b!140964) (not b!141843) (not b!141705) (not b!141961) (not bm!15740) (not d!45373) (not bm!15711) (not b!141675) (not b!141229) (not b!142847) (not b!142405) (not b!141949) (not b!141551) (not b!142730) (not d!44959) (not b!141648) (not d!44087) (not d!45523) (not b!142930) (not d!45153) (not d!45631) (not bm!15731) (not d!44487) (not d!44585) (not b!142688) (not bm!15763) (not d!45545) (not b!141690) (not d!44609) (not b!140904) (not d!44727) (not d!44379) (not d!44291) (not b!142641) (not b!141606) (not d!44263) (not d!44881) (not b!142876) (not b!141742) (not b!142869) (not b!141429) (not d!44665) (not b_lambda!6299) (not b!142044) (not d!44819) (not b!141613) (not b!142378) (not d!45191) (not b!142052) (not b!141881) (not d!44915) (not b!140883) (not b!142569) (not b!142662) (not b!140885) (not d!45241) (not b!141788) (not d!45395) (not d!45353) (not b!141858) (not b!141654) (not d!45387) (not b!141294) (not b!141458) (not b!142449) (not b!142470) (not b!142783) (not b!142109) (not b!141783) (not b!141555) (not b!141535) (not b!142400) (not b!142122) (not d!45117) (not d!45681) (not b!140844) (not bm!15699) (not d!45451) (not d!44085) (not b!142922) (not b!142129) (not b!142060) (not d!45397) (not b!142815) (not b!142827) (not b!141509) (not d!45529) (not b!140941) (not b!142544) (not b!141864) (not b!142483) (not b!141548) (not d!45019) (not d!45251) (not b_next!3031) (not d!44145) (not d!44407) (not b!141377) (not b!142478) (not b!141117) (not d!44305) (not d!44617) (not b!142654) (not b!142269) (not d!44249) (not b!141436) (not b!142211) (not b!141537) (not b!141704) (not b!142526) (not d!45521) (not d!45649) (not d!44661) (not b_lambda!6323) (not d!44289) (not b!141791) (not b!142003) (not b!142374) (not b!141981) (not d!45471) (not d!44743) (not d!44433) (not d!44227) (not d!45267) (not d!45127) (not b!142278) (not bm!15741) (not b_lambda!6409) (not b!142749) (not b!142253) (not d!44829) (not b!141633) b_and!8903 (not d!45567) (not d!45333) (not b!141004) (not b!141848) (not d!44077) (not b!141309) (not b!142832) (not b!142414) (not d!45485) (not d!45613) (not d!45375) (not b!141133) (not d!45663) (not d!45289) (not b_lambda!6349) (not d!44421) (not d!44029) (not b!141717) (not b!142718) (not b!141600) (not b!142838) (not b!141507) (not d!44313) (not d!44079) (not b!141880) (not b!141046) (not d!44753) (not b!142466) (not b!141952) (not b!141152) (not bm!15697) (not b!142539) (not d!44273) (not b!142697) (not b!140912) (not b!141727) (not b!141215) (not b!141530) (not b!140868) (not d!45651) (not b!141611) (not d!45271) (not b!141195) (not b!141251) (not b!141071) (not b!142915) (not d!44411) (not d!45409) (not d!44603) (not b!142056) (not bm!15674) (not b!141997) (not d!45515) (not d!44441) (not b!141890) (not d!45733) (not b!141445) (not d!44245) (not bm!15787) (not d!45205) (not d!45447) (not d!45189) (not b!142266) (not d!44611) (not bm!15757) (not d!44933) (not b!141099) (not b!141167) (not b!142799) (not bm!15756) (not b!142575) (not b!141203) (not d!45125) (not b!141155) (not b!140947) (not b!141803) (not b!142550) (not b!141585) (not d!44333) (not b!142465) (not d!45065) (not d!44779) (not b!142058) (not d!45391) (not b_lambda!6297) (not b!141520) (not b!141284) (not b!142396) (not b!142536) (not d!44781) (not b!141177) (not d!44343) (not b!140961) (not bm!15686) (not d!44807) (not d!44495) (not bm!15749) (not b!142354) (not b!141092) (not b!142000) (not b!142271) (not b!142849) (not d!45411) (not b!141861) (not b!141682) (not d!44719) (not d!45719) (not b!142482) (not b!142159) (not b!141762) (not bm!15707) (not b!142078) (not b!141754) (not b!142733) (not d!45731) (not b!141630) (not b!141181) (not b!141402) (not b!140865) (not d!44165) (not b!141963) (not d!44929) (not b!142523) (not b!141527) (not d!44171) (not d!44853) (not d!45645) (not d!44909) (not b!142751) (not b!141465) (not b!140859) (not d!45047) (not b!141593) (not d!44635) (not b!142180) (not b!141598) (not b!141463) (not d!44213) (not b!141731) (not d!44977) (not b!141286) (not b!142239) (not d!44643) (not b!140922) (not b!142193) (not b!142647) (not b!140966) (not b!140878) (not b!142313) (not d!44529) (not d!45217) (not b!142080) (not d!44991) (not bm!15790) (not b!142616) (not b!140858) (not d!44327) (not b_lambda!6405) (not b!140898) (not d!45465) (not b!142010) (not b!142439) (not b!142365) (not b!142345) (not b_lambda!6407) (not b!140952) (not b!141943) (not b!142704) (not b!142162) (not d!44595) (not b!141636) (not b!141646) (not b!141734) (not d!44329) (not b!142600) (not b!141127) (not b!142940) (not b!142020) (not d!44905) (not b!141887) (not b!142678) (not b!142935) (not d!44073) (not bm!15744) (not b!142825) (not b!141360) (not b!142691) (not d!44723) (not d!45265) (not b!141280) (not d!44515) (not b!141798) (not b!142064) (not b!141931) (not b!141842) (not b!141320) (not d!44993) (not b!141840) (not d!44547) (not b!142407) (not b!141757) (not d!44127) (not b!142182) (not b!142443) (not b!141986) (not d!44359) (not bm!15657) (not b_lambda!6313) (not b!142653) (not d!45119) (not b!142426) (not b!142758) (not d!45313) (not b!142196) (not d!44625) (not d!45163) (not d!45735) (not b!141573) (not b!141036) (not b!141382) (not d!45623) (not b!142228) (not b!140930) (not b!142728) (not bm!15665) (not b!141419) (not d!45027) (not b!142725) (not b!141396) (not b!141833) (not bm!15652) (not d!45473) (not bm!15714) (not b!142369) (not d!44607) (not d!44943) (not d!44449) (not b!141150) (not b!142724) (not d!45187) (not b!142828) (not d!44401) (not b!142219) (not b!142566) (not d!44763) (not b!142520) (not d!44189) (not bm!15649) (not b!141218) (not b!141069) (not d!45705) (not b!140870) (not d!44975) (not d!45369) (not b!142504) (not b!141995) (not b!142829) (not b!141111) (not d!45337) (not d!44891) (not d!45637) (not b!142324) (not b!142281) (not d!44899) (not b!142671) (not d!44815) (not d!45673) (not b!141171) (not b!142823) (not b!141365) (not b!142625) (not b!142215) (not b!142341) (not b!142517) (not b!141586) (not b!141293) (not d!45549) (not b!142851) (not b!141385) (not d!44419) (not b!141751) (not d!44099) (not b!141225) (not b_lambda!6337) (not b!141529) (not bm!15752) (not b!141077) (not b!142235) (not b!142335) (not b!141759) (not b!142776) (not bm!15770) (not b!142115) (not b!141897) (not d!45559) (not b!140908) (not b!140982) (not d!44091) (not b!142918) (not b!141608) (not b!141074) (not d!45431) (not d!44613) (not b!141080) (not b!141192) (not b!141642) (not b!141376) (not d!44297) (not b!141275) (not b!141668) (not b!142895) (not b!141561) (not d!44795) (not d!44341) (not b!141482) (not d!44783) (not d!45273) (not b!141711) (not d!44525) (not bm!15690) (not d!45563) (not d!44615) (not b!142391) (not d!44827) (not d!44725) (not b!142889) (not b!142880) (not b!142561) (not bm!15684) (not bm!15664) (not b!141265) (not d!44117) (not b!141486) (not b!141001) (not d!44027) (not b!141892) (not b_lambda!6311) (not d!45097) (not b!142318) (not d!44279) (not d!44771) (not bm!15681) (not d!44369) (not b!142461) (not b!142175) (not d!45541) (not b!141652) (not d!44879) (not b_lambda!6317) (not d!45043) (not b!142472) (not d!44229) (not b!142604) (not b!141558) (not d!45453) (not d!44477) (not b!142676) (not b_lambda!6307) (not d!44427) (not b!141197) (not b!141484) (not d!45249) (not d!45297) (not d!45707) (not b!142933) (not b!141820) (not b!142679) (not b!141321) (not b!142738) (not b!140881) (not b!141631) (not b!141178) (not b!141212) (not b!142107) (not b!142502) (not b!141493) (not b!141678) (not d!45599) (not b!141883) (not b_lambda!6415) (not b!141038) (not b!141834) (not d!45213) (not b!142002) (not b!142436) (not bm!15737) (not d!45619) (not b!141893) (not b_lambda!6305) (not b!142213) (not b!142165) (not b!142590) (not b!142018) (not d!44395) (not b!142362) (not mapNonEmpty!4850) (not b!142453) (not b!142040) (not b!141552) (not b!142831) (not d!44885) (not d!44067) (not d!44475) (not b!141916) (not b!142602) (not d!45025) (not d!45539) (not b!141488) (not b!141147) (not d!45235) (not b!141974) (not b!141477) (not b!141087) (not d!44241) (not b!142507) (not b!142568) (not b!142275) (not b!141566) (not b_lambda!6257) (not b!141281) (not b!142221) (not d!44627) (not b!142039) (not b!140951) (not b!142703) (not bm!15687) (not b!142355) (not b!141640) (not d!44833) (not d!44423) (not b!140955) (not d!45307) (not b!142638) (not d!45137) (not bm!15720) (not d!45415) (not b!142420) (not d!44157) (not b!141850) (not b_lambda!6249) (not b!142463) (not b!142634) (not b!142317) (not b!141539) (not b!142263) (not d!44683) (not d!45441) (not b!141696) (not b!142190) (not b!141119) (not d!44575) (not b!141867) (not d!44309) (not b!142706) (not b!142256) (not d!44767) (not d!44499) (not b!141908) b_and!8905 (not b!140985) (not b!141958) (not d!44199) (not d!44571) (not b!142091) (not b!141817) (not d!44111) (not b!142319) (not b!141207) (not d!45381) (not d!45133) (not d!44131) (not b!141827) (not d!44893) (not b!141501) (not b!141802) (not d!45037) (not b!142936) (not b!142347) (not d!44187) (not b!141691) (not b!141398) (not b!141248) (not b_lambda!6319) (not d!44861) (not b!142310) (not b!141072) (not b!142892) (not d!44545) (not b!141623) (not b!140863) (not d!45383) (not d!44631) (not b!141634) (not d!45073) (not b!142357) (not b!142445) (not bm!15653) (not d!45503) (not b!142857) (not b!141655) (not d!45239) (not d!44961) (not b_lambda!6385) (not b!142511) (not b!141605) (not b!141790) (not d!44553) (not b!141869) (not d!44557) (not b!141433) (not d!44065) (not b!141674) (not d!44629) (not b!141191) (not b_lambda!6255) (not b!142723) (not b_lambda!6373) (not b!141602) (not bm!15735) (not b!142299) (not d!44521) (not d!45691) (not b!142434) (not b!141374) (not b_lambda!6377) (not b!141650) (not d!45667) (not b!142819) (not b!142790) (not bm!15685) (not b!141615) (not d!44581) (not b!142792) (not d!45199) (not b!142013) (not b!141090) (not bm!15747) (not d!45419) (not bm!15780) (not b!142885) (not b!141619) (not d!44591) (not b!140948) (not b!141901) (not b!142484) (not d!45053) (not d!44385) (not d!44667) (not d!45227) (not b!142584) (not d!44721) (not d!44777) (not b_lambda!6403) (not b!142259) (not b!141984) (not bm!15702) (not b!140914) (not b!141227) (not b!141266) (not d!44319) (not b!141637) (not b!142142) (not d!45547) (not b!141905) (not b!140925) (not b!141801) (not b!142055) (not b!141765) (not b!142707) (not b!141373) (not d!45715) (not b!142902) (not b!142487) (not bm!15775) (not b!141440) (not b!142019) (not b!141279) (not d!44389) (not b!141300) (not b!140846) (not b!142721) (not b!141158) (not b!142140) (not d!45129) (not d!44851) (not d!45721) (not b!141917) (not d!44663) (not d!44097) (not b!141988) (not b!142937) (not d!44645) (not d!44995) (not d!44007) (not b!142867) (not b!141142) (not b!142805) (not b!141930) (not b_lambda!6321) (not b!142498) (not b!142481) (not b!141024) (not d!44163) (not b!141616) (not d!45055) (not mapNonEmpty!4849) (not b!141775) (not bm!15678) (not d!45647) (not d!44863) (not b!141093) (not d!44137) (not b!142074) (not d!45505) (not d!44707) (not b_lambda!6295) (not b!142668) (not d!44287) (not b!141462) (not b!142774) (not d!45625) (not b!142209) (not b!141578) (not b_lambda!6399) (not d!45629) (not d!44757) (not b!142432) (not b!142669) (not b!142877) (not b!140929) (not d!45215) (not d!45335) (not d!45653) (not d!44857) (not d!44835) (not d!45013) (not b!141876) (not b!141925) (not b!141160) (not b!140911) (not d!45399) (not d!44295) (not b!141721) (not b!142412) (not b!141044) (not d!44811) (not b!141460) (not b!142051) (not b!142547) (not d!45513) (not b!141065) (not b!142150) (not b!141490) (not b!141940) (not b!142681) (not b!142322) (not b!142328) (not b!140995) (not d!44599) (not d!45407) (not b!141250) (not b!141399) (not b!141502) (not b!141745) (not b!141317) (not b!142156) (not b!142138) (not b!142250) (not b!141737) (not d!45665) (not b!141354) (not b!141951) (not bm!15694) (not b!141724) (not b!141935) (not b!142326) (not d!44917) (not b!141029) (not b!141424) (not d!44769) (not b!142658) (not b!141199) (not b!141939) (not d!45641) (not bm!15704) (not bm!15753) (not b!141806) (not b!141906) (not b!141040) (not b!142944) (not d!45551) (not b!141944) (not d!44125) (not d!45259) (not d!44463) (not b!141379) (not d!45569) (not b!142929) (not bm!15748) (not b!142247) (not b!141326) (not b!141220) (not d!44787) (not b!141114) (not b!141288) (not d!45557) (not b!140959) (not b!141826) (not b!142665) (not b_lambda!6401) (not b!142451) (not b!141971) (not b!141027) (not b!142563) (not b!142191) (not b!141523) (not b!142027) (not b!142350) (not d!44031) (not d!45661) (not b!142062) (not b!141877) (not b!141407) (not b!142135) (not b!142755) (not d!44469) (not d!44153) (not d!45287) (not b!141882) (not d!45615) (not b!142376) (not b!142475) (not b!142096) (not b!142764) (not b!141033) (not b!142429) (not b!142627) (not b!142343) (not b!142864) (not d!44269) (not b!142139) (not b!140851) (not b!142635) (not b!142402) (not b!142274) (not b!141628) (not b!141198) (not b!141362) (not d!45151) (not b_lambda!6381) (not b!142205) (not b!142303) (not b!141885) (not b!142839) (not b!142920) (not d!44375) (not d!45405) (not b!142072) (not b!142277) (not b!141415) (not bm!15646) (not d!45497) (not b!141420) (not b!141966) (not b!142111))
(check-sat b_and!8903 b_and!8905 (not b_next!3029) (not b_next!3031))
