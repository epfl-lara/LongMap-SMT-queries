; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14712 () Bool)

(assert start!14712)

(declare-fun b!139542 () Bool)

(declare-fun b_free!3025 () Bool)

(declare-fun b_next!3025 () Bool)

(assert (=> b!139542 (= b_free!3025 (not b_next!3025))))

(declare-fun tp!11545 () Bool)

(declare-fun b_and!8717 () Bool)

(assert (=> b!139542 (= tp!11545 b_and!8717)))

(declare-fun b!139556 () Bool)

(declare-fun b_free!3027 () Bool)

(declare-fun b_next!3027 () Bool)

(assert (=> b!139556 (= b_free!3027 (not b_next!3027))))

(declare-fun tp!11547 () Bool)

(declare-fun b_and!8719 () Bool)

(assert (=> b!139556 (= tp!11547 b_and!8719)))

(declare-fun b!139541 () Bool)

(declare-fun e!91001 () Bool)

(declare-fun e!91011 () Bool)

(declare-fun mapRes!4828 () Bool)

(assert (=> b!139541 (= e!91001 (and e!91011 mapRes!4828))))

(declare-fun condMapEmpty!4828 () Bool)

(declare-datatypes ((V!3553 0))(
  ( (V!3554 (val!1509 Int)) )
))
(declare-datatypes ((array!4879 0))(
  ( (array!4880 (arr!2306 (Array (_ BitVec 32) (_ BitVec 64))) (size!2578 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1121 0))(
  ( (ValueCellFull!1121 (v!3278 V!3553)) (EmptyCell!1121) )
))
(declare-datatypes ((array!4881 0))(
  ( (array!4882 (arr!2307 (Array (_ BitVec 32) ValueCell!1121)) (size!2579 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1150 0))(
  ( (LongMapFixedSize!1151 (defaultEntry!2939 Int) (mask!7279 (_ BitVec 32)) (extraKeys!2694 (_ BitVec 32)) (zeroValue!2789 V!3553) (minValue!2789 V!3553) (_size!624 (_ BitVec 32)) (_keys!4698 array!4879) (_values!2922 array!4881) (_vacant!624 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!1150)

(declare-fun mapDefault!4827 () ValueCell!1121)

(assert (=> b!139541 (= condMapEmpty!4828 (= (arr!2307 (_values!2922 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4827)))))

(declare-fun e!91002 () Bool)

(declare-datatypes ((Cell!936 0))(
  ( (Cell!937 (v!3279 LongMapFixedSize!1150)) )
))
(declare-datatypes ((LongMap!936 0))(
  ( (LongMap!937 (underlying!479 Cell!936)) )
))
(declare-fun thiss!992 () LongMap!936)

(declare-fun e!91003 () Bool)

(declare-fun tp_is_empty!2929 () Bool)

(declare-fun array_inv!1439 (array!4879) Bool)

(declare-fun array_inv!1440 (array!4881) Bool)

(assert (=> b!139542 (= e!91003 (and tp!11545 tp_is_empty!2929 (array_inv!1439 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (array_inv!1440 (_values!2922 (v!3279 (underlying!479 thiss!992)))) e!91002))))

(declare-fun b!139543 () Bool)

(declare-fun e!91008 () Bool)

(declare-fun e!91009 () Bool)

(assert (=> b!139543 (= e!91008 e!91009)))

(declare-fun res!66725 () Bool)

(assert (=> b!139543 (=> (not res!66725) (not e!91009))))

(declare-datatypes ((tuple2!2622 0))(
  ( (tuple2!2623 (_1!1322 (_ BitVec 64)) (_2!1322 V!3553)) )
))
(declare-datatypes ((List!1719 0))(
  ( (Nil!1716) (Cons!1715 (h!2322 tuple2!2622) (t!6295 List!1719)) )
))
(declare-datatypes ((ListLongMap!1685 0))(
  ( (ListLongMap!1686 (toList!858 List!1719)) )
))
(declare-fun lt!73005 () ListLongMap!1685)

(declare-fun lt!73008 () ListLongMap!1685)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!139543 (= res!66725 (and (= lt!73008 lt!73005) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1429 (LongMapFixedSize!1150) ListLongMap!1685)

(assert (=> b!139543 (= lt!73005 (map!1429 newMap!16))))

(declare-fun getCurrentListMap!531 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) ListLongMap!1685)

(assert (=> b!139543 (= lt!73008 (getCurrentListMap!531 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun mapNonEmpty!4827 () Bool)

(declare-fun mapRes!4827 () Bool)

(declare-fun tp!11546 () Bool)

(declare-fun e!91005 () Bool)

(assert (=> mapNonEmpty!4827 (= mapRes!4827 (and tp!11546 e!91005))))

(declare-fun mapValue!4828 () ValueCell!1121)

(declare-fun mapRest!4828 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4827 () (_ BitVec 32))

(assert (=> mapNonEmpty!4827 (= (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (store mapRest!4828 mapKey!4827 mapValue!4828))))

(declare-fun b!139544 () Bool)

(declare-fun e!91000 () Bool)

(assert (=> b!139544 (= e!91000 tp_is_empty!2929)))

(declare-fun res!66722 () Bool)

(assert (=> start!14712 (=> (not res!66722) (not e!91008))))

(declare-fun valid!566 (LongMap!936) Bool)

(assert (=> start!14712 (= res!66722 (valid!566 thiss!992))))

(assert (=> start!14712 e!91008))

(declare-fun e!91012 () Bool)

(assert (=> start!14712 e!91012))

(assert (=> start!14712 true))

(declare-fun e!90999 () Bool)

(assert (=> start!14712 e!90999))

(declare-fun b!139545 () Bool)

(assert (=> b!139545 (= e!91005 tp_is_empty!2929)))

(declare-fun b!139546 () Bool)

(declare-fun res!66724 () Bool)

(assert (=> b!139546 (=> (not res!66724) (not e!91008))))

(assert (=> b!139546 (= res!66724 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun mapNonEmpty!4828 () Bool)

(declare-fun tp!11548 () Bool)

(declare-fun e!90998 () Bool)

(assert (=> mapNonEmpty!4828 (= mapRes!4828 (and tp!11548 e!90998))))

(declare-fun mapKey!4828 () (_ BitVec 32))

(declare-fun mapRest!4827 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4827 () ValueCell!1121)

(assert (=> mapNonEmpty!4828 (= (arr!2307 (_values!2922 newMap!16)) (store mapRest!4827 mapKey!4828 mapValue!4827))))

(declare-fun b!139547 () Bool)

(assert (=> b!139547 (= e!91011 tp_is_empty!2929)))

(declare-fun b!139548 () Bool)

(declare-fun res!66726 () Bool)

(assert (=> b!139548 (=> (not res!66726) (not e!91008))))

(assert (=> b!139548 (= res!66726 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7279 newMap!16)) (_size!624 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun mapIsEmpty!4827 () Bool)

(assert (=> mapIsEmpty!4827 mapRes!4827))

(declare-fun b!139549 () Bool)

(declare-fun e!91007 () Bool)

(assert (=> b!139549 (= e!91007 e!91003)))

(declare-fun mapIsEmpty!4828 () Bool)

(assert (=> mapIsEmpty!4828 mapRes!4828))

(declare-fun b!139550 () Bool)

(declare-fun res!66727 () Bool)

(assert (=> b!139550 (=> (not res!66727) (not e!91008))))

(declare-fun valid!567 (LongMapFixedSize!1150) Bool)

(assert (=> b!139550 (= res!66727 (valid!567 newMap!16))))

(declare-fun b!139551 () Bool)

(assert (=> b!139551 (= e!91012 e!91007)))

(declare-fun b!139552 () Bool)

(declare-fun e!91006 () Bool)

(assert (=> b!139552 (= e!91009 e!91006)))

(declare-fun res!66723 () Bool)

(assert (=> b!139552 (=> (not res!66723) (not e!91006))))

(declare-fun contains!904 (ListLongMap!1685 (_ BitVec 64)) Bool)

(assert (=> b!139552 (= res!66723 (contains!904 lt!73005 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2624 0))(
  ( (tuple2!2625 (_1!1323 Bool) (_2!1323 LongMapFixedSize!1150)) )
))
(declare-fun lt!73009 () tuple2!2624)

(declare-fun update!209 (LongMapFixedSize!1150 (_ BitVec 64) V!3553) tuple2!2624)

(declare-fun get!1531 (ValueCell!1121 V!3553) V!3553)

(declare-fun dynLambda!439 (Int (_ BitVec 64)) V!3553)

(assert (=> b!139552 (= lt!73009 (update!209 newMap!16 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!139553 () Bool)

(assert (=> b!139553 (= e!91002 (and e!91000 mapRes!4827))))

(declare-fun condMapEmpty!4827 () Bool)

(declare-fun mapDefault!4828 () ValueCell!1121)

(assert (=> b!139553 (= condMapEmpty!4827 (= (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4828)))))

(declare-fun b!139554 () Bool)

(assert (=> b!139554 (= e!90998 tp_is_empty!2929)))

(declare-fun b!139555 () Bool)

(assert (=> b!139555 (= e!91006 (not (or (bvsge (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b01111111111111111111111111111111) (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))))

(declare-datatypes ((List!1720 0))(
  ( (Nil!1717) (Cons!1716 (h!2323 (_ BitVec 64)) (t!6296 List!1720)) )
))
(declare-fun arrayNoDuplicates!0 (array!4879 (_ BitVec 32) List!1720) Bool)

(assert (=> b!139555 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) from!355 Nil!1717)))

(declare-datatypes ((Unit!4387 0))(
  ( (Unit!4388) )
))
(declare-fun lt!73006 () Unit!4387)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4879 (_ BitVec 32) (_ BitVec 32)) Unit!4387)

(assert (=> b!139555 (= lt!73006 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-fun arrayContainsKey!0 (array!4879 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!139555 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!73007 () Unit!4387)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!139 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4387)

(assert (=> b!139555 (= lt!73007 (lemmaListMapContainsThenArrayContainsFrom!139 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(assert (=> b!139556 (= e!90999 (and tp!11547 tp_is_empty!2929 (array_inv!1439 (_keys!4698 newMap!16)) (array_inv!1440 (_values!2922 newMap!16)) e!91001))))

(assert (= (and start!14712 res!66722) b!139546))

(assert (= (and b!139546 res!66724) b!139550))

(assert (= (and b!139550 res!66727) b!139548))

(assert (= (and b!139548 res!66726) b!139543))

(assert (= (and b!139543 res!66725) b!139552))

(assert (= (and b!139552 res!66723) b!139555))

(assert (= (and b!139553 condMapEmpty!4827) mapIsEmpty!4827))

(assert (= (and b!139553 (not condMapEmpty!4827)) mapNonEmpty!4827))

(get-info :version)

(assert (= (and mapNonEmpty!4827 ((_ is ValueCellFull!1121) mapValue!4828)) b!139545))

(assert (= (and b!139553 ((_ is ValueCellFull!1121) mapDefault!4828)) b!139544))

(assert (= b!139542 b!139553))

(assert (= b!139549 b!139542))

(assert (= b!139551 b!139549))

(assert (= start!14712 b!139551))

(assert (= (and b!139541 condMapEmpty!4828) mapIsEmpty!4828))

(assert (= (and b!139541 (not condMapEmpty!4828)) mapNonEmpty!4828))

(assert (= (and mapNonEmpty!4828 ((_ is ValueCellFull!1121) mapValue!4827)) b!139554))

(assert (= (and b!139541 ((_ is ValueCellFull!1121) mapDefault!4827)) b!139547))

(assert (= b!139556 b!139541))

(assert (= start!14712 b!139556))

(declare-fun b_lambda!6259 () Bool)

(assert (=> (not b_lambda!6259) (not b!139552)))

(declare-fun t!6292 () Bool)

(declare-fun tb!2537 () Bool)

(assert (=> (and b!139542 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) t!6292) tb!2537))

(declare-fun result!4167 () Bool)

(assert (=> tb!2537 (= result!4167 tp_is_empty!2929)))

(assert (=> b!139552 t!6292))

(declare-fun b_and!8721 () Bool)

(assert (= b_and!8717 (and (=> t!6292 result!4167) b_and!8721)))

(declare-fun t!6294 () Bool)

(declare-fun tb!2539 () Bool)

(assert (=> (and b!139556 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) t!6294) tb!2539))

(declare-fun result!4171 () Bool)

(assert (= result!4171 result!4167))

(assert (=> b!139552 t!6294))

(declare-fun b_and!8723 () Bool)

(assert (= b_and!8719 (and (=> t!6294 result!4171) b_and!8723)))

(declare-fun m!166629 () Bool)

(assert (=> b!139555 m!166629))

(declare-fun m!166631 () Bool)

(assert (=> b!139555 m!166631))

(declare-fun m!166633 () Bool)

(assert (=> b!139555 m!166633))

(declare-fun m!166635 () Bool)

(assert (=> b!139555 m!166635))

(assert (=> b!139555 m!166633))

(assert (=> b!139555 m!166633))

(declare-fun m!166637 () Bool)

(assert (=> b!139555 m!166637))

(declare-fun m!166639 () Bool)

(assert (=> b!139556 m!166639))

(declare-fun m!166641 () Bool)

(assert (=> b!139556 m!166641))

(declare-fun m!166643 () Bool)

(assert (=> start!14712 m!166643))

(declare-fun m!166645 () Bool)

(assert (=> b!139550 m!166645))

(declare-fun m!166647 () Bool)

(assert (=> b!139542 m!166647))

(declare-fun m!166649 () Bool)

(assert (=> b!139542 m!166649))

(declare-fun m!166651 () Bool)

(assert (=> mapNonEmpty!4827 m!166651))

(declare-fun m!166653 () Bool)

(assert (=> mapNonEmpty!4828 m!166653))

(assert (=> b!139543 m!166633))

(declare-fun m!166655 () Bool)

(assert (=> b!139543 m!166655))

(declare-fun m!166657 () Bool)

(assert (=> b!139543 m!166657))

(declare-fun m!166659 () Bool)

(assert (=> b!139552 m!166659))

(declare-fun m!166661 () Bool)

(assert (=> b!139552 m!166661))

(declare-fun m!166663 () Bool)

(assert (=> b!139552 m!166663))

(assert (=> b!139552 m!166633))

(assert (=> b!139552 m!166633))

(declare-fun m!166665 () Bool)

(assert (=> b!139552 m!166665))

(assert (=> b!139552 m!166661))

(assert (=> b!139552 m!166633))

(assert (=> b!139552 m!166663))

(declare-fun m!166667 () Bool)

(assert (=> b!139552 m!166667))

(assert (=> b!139552 m!166659))

(check-sat (not b_next!3027) (not b!139550) (not b!139552) b_and!8721 (not start!14712) (not b_lambda!6259) b_and!8723 (not b!139556) tp_is_empty!2929 (not b!139555) (not b_next!3025) (not b!139542) (not mapNonEmpty!4827) (not b!139543) (not mapNonEmpty!4828))
(check-sat b_and!8721 b_and!8723 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun b_lambda!6265 () Bool)

(assert (= b_lambda!6259 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6265)))

(check-sat (not b_next!3027) (not b!139550) (not b_lambda!6265) (not b!139552) b_and!8721 (not start!14712) b_and!8723 (not b!139556) tp_is_empty!2929 (not b!139555) (not b_next!3025) (not b!139542) (not mapNonEmpty!4827) (not b!139543) (not mapNonEmpty!4828))
(check-sat b_and!8721 b_and!8723 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun d!43531 () Bool)

(declare-fun e!91107 () Bool)

(assert (=> d!43531 e!91107))

(declare-fun res!66766 () Bool)

(assert (=> d!43531 (=> res!66766 e!91107)))

(declare-fun lt!73051 () Bool)

(assert (=> d!43531 (= res!66766 (not lt!73051))))

(declare-fun lt!73048 () Bool)

(assert (=> d!43531 (= lt!73051 lt!73048)))

(declare-fun lt!73050 () Unit!4387)

(declare-fun e!91108 () Unit!4387)

(assert (=> d!43531 (= lt!73050 e!91108)))

(declare-fun c!26110 () Bool)

(assert (=> d!43531 (= c!26110 lt!73048)))

(declare-fun containsKey!180 (List!1719 (_ BitVec 64)) Bool)

(assert (=> d!43531 (= lt!73048 (containsKey!180 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43531 (= (contains!904 lt!73005 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73051)))

(declare-fun b!139665 () Bool)

(declare-fun lt!73049 () Unit!4387)

(assert (=> b!139665 (= e!91108 lt!73049)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!128 (List!1719 (_ BitVec 64)) Unit!4387)

(assert (=> b!139665 (= lt!73049 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-datatypes ((Option!183 0))(
  ( (Some!182 (v!3285 V!3553)) (None!181) )
))
(declare-fun isDefined!129 (Option!183) Bool)

(declare-fun getValueByKey!177 (List!1719 (_ BitVec 64)) Option!183)

(assert (=> b!139665 (isDefined!129 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139666 () Bool)

(declare-fun Unit!4393 () Unit!4387)

(assert (=> b!139666 (= e!91108 Unit!4393)))

(declare-fun b!139667 () Bool)

(assert (=> b!139667 (= e!91107 (isDefined!129 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (= (and d!43531 c!26110) b!139665))

(assert (= (and d!43531 (not c!26110)) b!139666))

(assert (= (and d!43531 (not res!66766)) b!139667))

(assert (=> d!43531 m!166633))

(declare-fun m!166749 () Bool)

(assert (=> d!43531 m!166749))

(assert (=> b!139665 m!166633))

(declare-fun m!166751 () Bool)

(assert (=> b!139665 m!166751))

(assert (=> b!139665 m!166633))

(declare-fun m!166753 () Bool)

(assert (=> b!139665 m!166753))

(assert (=> b!139665 m!166753))

(declare-fun m!166755 () Bool)

(assert (=> b!139665 m!166755))

(assert (=> b!139667 m!166633))

(assert (=> b!139667 m!166753))

(assert (=> b!139667 m!166753))

(assert (=> b!139667 m!166755))

(assert (=> b!139552 d!43531))

(declare-fun bm!15453 () Bool)

(declare-fun call!15467 () ListLongMap!1685)

(declare-fun call!15472 () ListLongMap!1685)

(assert (=> bm!15453 (= call!15467 call!15472)))

(declare-fun bm!15454 () Bool)

(declare-fun call!15471 () ListLongMap!1685)

(assert (=> bm!15454 (= call!15471 (map!1429 newMap!16))))

(declare-fun b!139752 () Bool)

(declare-fun e!91158 () tuple2!2624)

(declare-fun lt!73113 () tuple2!2624)

(assert (=> b!139752 (= e!91158 (tuple2!2625 (_1!1323 lt!73113) (_2!1323 lt!73113)))))

(declare-fun call!15463 () tuple2!2624)

(assert (=> b!139752 (= lt!73113 call!15463)))

(declare-fun e!91160 () Bool)

(declare-datatypes ((SeekEntryResult!273 0))(
  ( (MissingZero!273 (index!3255 (_ BitVec 32))) (Found!273 (index!3256 (_ BitVec 32))) (Intermediate!273 (undefined!1085 Bool) (index!3257 (_ BitVec 32)) (x!16130 (_ BitVec 32))) (Undefined!273) (MissingVacant!273 (index!3258 (_ BitVec 32))) )
))
(declare-fun lt!73114 () SeekEntryResult!273)

(declare-fun b!139753 () Bool)

(assert (=> b!139753 (= e!91160 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73114)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139754 () Bool)

(declare-fun e!91157 () Bool)

(declare-fun lt!73130 () SeekEntryResult!273)

(assert (=> b!139754 (= e!91157 ((_ is Undefined!273) lt!73130))))

(declare-fun bm!15455 () Bool)

(declare-fun call!15474 () Bool)

(declare-fun call!15469 () Bool)

(assert (=> bm!15455 (= call!15474 call!15469)))

(declare-fun e!91174 () Bool)

(declare-fun lt!73109 () SeekEntryResult!273)

(declare-fun b!139755 () Bool)

(assert (=> b!139755 (= e!91174 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73109)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139756 () Bool)

(declare-fun e!91154 () Unit!4387)

(declare-fun lt!73131 () Unit!4387)

(assert (=> b!139756 (= e!91154 lt!73131)))

(declare-fun call!15459 () Unit!4387)

(assert (=> b!139756 (= lt!73131 call!15459)))

(declare-fun call!15457 () SeekEntryResult!273)

(assert (=> b!139756 (= lt!73114 call!15457)))

(declare-fun res!66800 () Bool)

(assert (=> b!139756 (= res!66800 ((_ is Found!273) lt!73114))))

(assert (=> b!139756 (=> (not res!66800) (not e!91160))))

(assert (=> b!139756 e!91160))

(declare-fun b!139757 () Bool)

(declare-fun e!91171 () ListLongMap!1685)

(assert (=> b!139757 (= e!91171 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139758 () Bool)

(declare-fun call!15473 () ListLongMap!1685)

(assert (=> b!139758 (= e!91171 call!15473)))

(declare-fun bm!15456 () Bool)

(declare-fun call!15479 () ListLongMap!1685)

(declare-fun call!15477 () ListLongMap!1685)

(assert (=> bm!15456 (= call!15479 call!15477)))

(declare-fun c!26152 () Bool)

(declare-fun bm!15457 () Bool)

(declare-fun c!26150 () Bool)

(declare-fun c!26148 () Bool)

(declare-fun c!26147 () Bool)

(declare-fun c!26139 () Bool)

(declare-fun call!15466 () Bool)

(declare-fun lt!73108 () SeekEntryResult!273)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!15457 (= call!15466 (inRange!0 (ite c!26150 (ite c!26147 (index!3256 lt!73109) (ite c!26152 (index!3255 lt!73108) (index!3258 lt!73108))) (ite c!26139 (index!3256 lt!73114) (ite c!26148 (index!3255 lt!73130) (index!3258 lt!73130)))) (mask!7279 newMap!16)))))

(declare-fun b!139759 () Bool)

(declare-fun e!91156 () tuple2!2624)

(declare-fun e!91163 () tuple2!2624)

(assert (=> b!139759 (= e!91156 e!91163)))

(declare-fun lt!73122 () SeekEntryResult!273)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4879 (_ BitVec 32)) SeekEntryResult!273)

(assert (=> b!139759 (= lt!73122 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(assert (=> b!139759 (= c!26150 ((_ is Undefined!273) lt!73122))))

(declare-fun b!139760 () Bool)

(declare-fun c!26146 () Bool)

(assert (=> b!139760 (= c!26146 ((_ is MissingVacant!273) lt!73130))))

(declare-fun e!91165 () Bool)

(assert (=> b!139760 (= e!91165 e!91157)))

(declare-fun bm!15458 () Bool)

(declare-fun call!15465 () ListLongMap!1685)

(declare-fun call!15462 () ListLongMap!1685)

(assert (=> bm!15458 (= call!15465 call!15462)))

(declare-fun c!26144 () Bool)

(declare-fun b!139761 () Bool)

(declare-fun e!91166 () ListLongMap!1685)

(assert (=> b!139761 (= e!91166 (ite c!26144 call!15479 call!15467))))

(declare-fun bm!15459 () Bool)

(declare-fun call!15475 () Bool)

(assert (=> bm!15459 (= call!15475 call!15466)))

(declare-fun c!26142 () Bool)

(declare-fun bm!15460 () Bool)

(declare-fun lt!73116 () (_ BitVec 32))

(declare-fun lt!73112 () array!4881)

(assert (=> bm!15460 (= call!15472 (getCurrentListMap!531 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139762 () Bool)

(declare-fun e!91159 () Bool)

(assert (=> b!139762 (= e!91159 ((_ is Undefined!273) lt!73108))))

(declare-fun b!139763 () Bool)

(declare-fun res!66806 () Bool)

(declare-fun e!91172 () Bool)

(assert (=> b!139763 (=> (not res!66806) (not e!91172))))

(declare-fun call!15476 () Bool)

(assert (=> b!139763 (= res!66806 call!15476)))

(declare-fun e!91170 () Bool)

(assert (=> b!139763 (= e!91170 e!91172)))

(declare-fun d!43533 () Bool)

(declare-fun e!91153 () Bool)

(assert (=> d!43533 e!91153))

(declare-fun res!66808 () Bool)

(assert (=> d!43533 (=> (not res!66808) (not e!91153))))

(declare-fun lt!73124 () tuple2!2624)

(assert (=> d!43533 (= res!66808 (valid!567 (_2!1323 lt!73124)))))

(assert (=> d!43533 (= lt!73124 e!91156)))

(assert (=> d!43533 (= c!26142 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvneg (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43533 (valid!567 newMap!16)))

(assert (=> d!43533 (= (update!209 newMap!16 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!73124)))

(declare-fun b!139764 () Bool)

(declare-fun e!91167 () Bool)

(assert (=> b!139764 (= e!91153 e!91167)))

(declare-fun c!26149 () Bool)

(assert (=> b!139764 (= c!26149 (_1!1323 lt!73124))))

(declare-fun b!139765 () Bool)

(declare-fun c!26145 () Bool)

(assert (=> b!139765 (= c!26145 ((_ is MissingVacant!273) lt!73108))))

(assert (=> b!139765 (= e!91170 e!91159)))

(declare-fun bm!15461 () Bool)

(declare-fun call!15458 () ListLongMap!1685)

(assert (=> bm!15461 (= call!15458 (map!1429 (_2!1323 lt!73124)))))

(declare-fun bm!15462 () Bool)

(declare-fun call!15470 () SeekEntryResult!273)

(assert (=> bm!15462 (= call!15470 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun bm!15463 () Bool)

(declare-fun call!15460 () Bool)

(assert (=> bm!15463 (= call!15460 call!15469)))

(declare-fun b!139766 () Bool)

(declare-fun res!66803 () Bool)

(assert (=> b!139766 (=> (not res!66803) (not e!91172))))

(assert (=> b!139766 (= res!66803 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73108)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139767 () Bool)

(declare-fun e!91155 () Bool)

(assert (=> b!139767 (= e!91155 (not call!15460))))

(declare-fun b!139768 () Bool)

(declare-fun e!91168 () tuple2!2624)

(assert (=> b!139768 (= e!91158 e!91168)))

(declare-fun c!26140 () Bool)

(assert (=> b!139768 (= c!26140 ((_ is MissingZero!273) lt!73122))))

(declare-fun b!139769 () Bool)

(declare-fun lt!73107 () tuple2!2624)

(assert (=> b!139769 (= lt!73107 call!15463)))

(assert (=> b!139769 (= e!91168 (tuple2!2625 (_1!1323 lt!73107) (_2!1323 lt!73107)))))

(declare-fun bm!15464 () Bool)

(declare-fun +!173 (ListLongMap!1685 tuple2!2622) ListLongMap!1685)

(assert (=> bm!15464 (= call!15462 (+!173 e!91166 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26143 () Bool)

(assert (=> bm!15464 (= c!26143 c!26142)))

(declare-fun b!139770 () Bool)

(declare-fun lt!73127 () Unit!4387)

(declare-fun lt!73117 () Unit!4387)

(assert (=> b!139770 (= lt!73127 lt!73117)))

(assert (=> b!139770 (= call!15465 call!15467)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!65 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4387)

(assert (=> b!139770 (= lt!73117 (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73116 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)))))

(assert (=> b!139770 (= lt!73116 (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!91161 () tuple2!2624)

(assert (=> b!139770 (= e!91161 (tuple2!2625 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7279 newMap!16) (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (_size!624 newMap!16) (_keys!4698 newMap!16) (_values!2922 newMap!16) (_vacant!624 newMap!16))))))

(declare-fun b!139771 () Bool)

(declare-fun res!66802 () Bool)

(assert (=> b!139771 (=> (not res!66802) (not e!91155))))

(declare-fun call!15464 () Bool)

(assert (=> b!139771 (= res!66802 call!15464)))

(assert (=> b!139771 (= e!91165 e!91155)))

(declare-fun b!139772 () Bool)

(declare-fun Unit!4394 () Unit!4387)

(assert (=> b!139772 (= e!91154 Unit!4394)))

(declare-fun lt!73110 () Unit!4387)

(declare-fun call!15461 () Unit!4387)

(assert (=> b!139772 (= lt!73110 call!15461)))

(assert (=> b!139772 (= lt!73130 call!15457)))

(assert (=> b!139772 (= c!26148 ((_ is MissingZero!273) lt!73130))))

(assert (=> b!139772 e!91165))

(declare-fun lt!73121 () Unit!4387)

(assert (=> b!139772 (= lt!73121 lt!73110)))

(assert (=> b!139772 false))

(declare-fun bm!15465 () Bool)

(declare-fun call!15456 () Bool)

(assert (=> bm!15465 (= call!15464 call!15456)))

(declare-fun bm!15466 () Bool)

(assert (=> bm!15466 (= call!15473 call!15477)))

(declare-fun b!139773 () Bool)

(declare-fun e!91169 () Bool)

(assert (=> b!139773 (= e!91169 (not call!15474))))

(declare-fun b!139774 () Bool)

(assert (=> b!139774 (= e!91156 e!91161)))

(assert (=> b!139774 (= c!26144 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139775 () Bool)

(declare-fun e!91173 () Bool)

(assert (=> b!139775 (= e!91167 e!91173)))

(declare-fun res!66807 () Bool)

(assert (=> b!139775 (= res!66807 (contains!904 call!15458 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!139775 (=> (not res!66807) (not e!91173))))

(declare-fun bm!15467 () Bool)

(declare-fun c!26141 () Bool)

(declare-fun updateHelperNewKey!65 (LongMapFixedSize!1150 (_ BitVec 64) V!3553 (_ BitVec 32)) tuple2!2624)

(assert (=> bm!15467 (= call!15463 (updateHelperNewKey!65 newMap!16 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(declare-fun bm!15468 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4387)

(assert (=> bm!15468 (= call!15461 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(declare-fun b!139776 () Bool)

(declare-fun res!66797 () Bool)

(assert (=> b!139776 (= res!66797 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73108)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139776 (=> (not res!66797) (not e!91169))))

(declare-fun bm!15469 () Bool)

(assert (=> bm!15469 (= call!15457 call!15470)))

(declare-fun bm!15470 () Bool)

(assert (=> bm!15470 (= call!15476 call!15475)))

(declare-fun b!139777 () Bool)

(assert (=> b!139777 (= e!91167 (= call!15458 call!15471))))

(declare-fun b!139778 () Bool)

(declare-fun e!91164 () Unit!4387)

(declare-fun lt!73106 () Unit!4387)

(assert (=> b!139778 (= e!91164 lt!73106)))

(assert (=> b!139778 (= lt!73106 call!15461)))

(declare-fun call!15478 () SeekEntryResult!273)

(assert (=> b!139778 (= lt!73108 call!15478)))

(assert (=> b!139778 (= c!26152 ((_ is MissingZero!273) lt!73108))))

(assert (=> b!139778 e!91170))

(declare-fun b!139779 () Bool)

(declare-fun res!66805 () Bool)

(assert (=> b!139779 (= res!66805 call!15456)))

(assert (=> b!139779 (=> (not res!66805) (not e!91160))))

(declare-fun bm!15471 () Bool)

(declare-fun lt!73129 () (_ BitVec 32))

(assert (=> bm!15471 (= call!15477 (getCurrentListMap!531 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun bm!15472 () Bool)

(assert (=> bm!15472 (= call!15478 call!15470)))

(declare-fun b!139780 () Bool)

(declare-fun lt!73126 () Unit!4387)

(assert (=> b!139780 (= lt!73126 e!91164)))

(declare-fun call!15468 () Bool)

(assert (=> b!139780 (= c!26147 call!15468)))

(assert (=> b!139780 (= e!91163 (tuple2!2625 false newMap!16))))

(declare-fun b!139781 () Bool)

(declare-fun e!91162 () Bool)

(assert (=> b!139781 (= e!91162 (not call!15460))))

(declare-fun b!139782 () Bool)

(declare-fun lt!73132 () Unit!4387)

(declare-fun lt!73123 () Unit!4387)

(assert (=> b!139782 (= lt!73132 lt!73123)))

(assert (=> b!139782 (= call!15465 call!15479)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4387)

(assert (=> b!139782 (= lt!73123 (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> b!139782 (= lt!73129 (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!139782 (= e!91161 (tuple2!2625 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7279 newMap!16) (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!624 newMap!16) (_keys!4698 newMap!16) (_values!2922 newMap!16) (_vacant!624 newMap!16))))))

(declare-fun b!139783 () Bool)

(assert (=> b!139783 (= e!91159 e!91169)))

(declare-fun res!66801 () Bool)

(assert (=> b!139783 (= res!66801 call!15476)))

(assert (=> b!139783 (=> (not res!66801) (not e!91169))))

(declare-fun b!139784 () Bool)

(assert (=> b!139784 (= e!91173 (= call!15458 (+!173 call!15471 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!139785 () Bool)

(assert (=> b!139785 (= e!91166 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139786 () Bool)

(assert (=> b!139786 (= e!91157 e!91162)))

(declare-fun res!66795 () Bool)

(assert (=> b!139786 (= res!66795 call!15464)))

(assert (=> b!139786 (=> (not res!66795) (not e!91162))))

(declare-fun bm!15473 () Bool)

(assert (=> bm!15473 (= call!15456 call!15466)))

(declare-fun b!139787 () Bool)

(declare-fun lt!73120 () Unit!4387)

(declare-fun lt!73118 () Unit!4387)

(assert (=> b!139787 (= lt!73120 lt!73118)))

(assert (=> b!139787 (contains!904 call!15472 (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!125 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) Unit!4387)

(assert (=> b!139787 (= lt!73118 (lemmaValidKeyInArrayIsInListMap!125 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (defaultEntry!2939 newMap!16)))))

(assert (=> b!139787 (= lt!73112 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))))

(declare-fun lt!73111 () Unit!4387)

(declare-fun lt!73119 () Unit!4387)

(assert (=> b!139787 (= lt!73111 lt!73119)))

(assert (=> b!139787 (= call!15462 call!15473)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4387)

(assert (=> b!139787 (= lt!73119 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73125 () Unit!4387)

(assert (=> b!139787 (= lt!73125 e!91154)))

(assert (=> b!139787 (= c!26139 call!15468)))

(assert (=> b!139787 (= e!91168 (tuple2!2625 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (_size!624 newMap!16) (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (_vacant!624 newMap!16))))))

(declare-fun bm!15474 () Bool)

(declare-fun c!26151 () Bool)

(assert (=> bm!15474 (= c!26151 c!26150)))

(assert (=> bm!15474 (= call!15468 (contains!904 e!91171 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun bm!15475 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4387)

(assert (=> bm!15475 (= call!15459 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(declare-fun bm!15476 () Bool)

(assert (=> bm!15476 (= call!15469 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!139788 () Bool)

(assert (=> b!139788 (= c!26141 ((_ is MissingVacant!273) lt!73122))))

(assert (=> b!139788 (= e!91163 e!91158)))

(declare-fun b!139789 () Bool)

(declare-fun res!66799 () Bool)

(assert (=> b!139789 (= res!66799 call!15475)))

(assert (=> b!139789 (=> (not res!66799) (not e!91174))))

(declare-fun b!139790 () Bool)

(declare-fun Unit!4395 () Unit!4387)

(assert (=> b!139790 (= e!91164 Unit!4395)))

(declare-fun lt!73115 () Unit!4387)

(assert (=> b!139790 (= lt!73115 call!15459)))

(assert (=> b!139790 (= lt!73109 call!15478)))

(declare-fun res!66798 () Bool)

(assert (=> b!139790 (= res!66798 ((_ is Found!273) lt!73109))))

(assert (=> b!139790 (=> (not res!66798) (not e!91174))))

(assert (=> b!139790 e!91174))

(declare-fun lt!73128 () Unit!4387)

(assert (=> b!139790 (= lt!73128 lt!73115)))

(assert (=> b!139790 false))

(declare-fun b!139791 () Bool)

(declare-fun res!66804 () Bool)

(assert (=> b!139791 (= res!66804 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73130)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139791 (=> (not res!66804) (not e!91162))))

(declare-fun b!139792 () Bool)

(declare-fun res!66796 () Bool)

(assert (=> b!139792 (=> (not res!66796) (not e!91155))))

(assert (=> b!139792 (= res!66796 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73130)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139793 () Bool)

(assert (=> b!139793 (= e!91172 (not call!15474))))

(assert (= (and d!43533 c!26142) b!139774))

(assert (= (and d!43533 (not c!26142)) b!139759))

(assert (= (and b!139774 c!26144) b!139770))

(assert (= (and b!139774 (not c!26144)) b!139782))

(assert (= (or b!139770 b!139782) bm!15453))

(assert (= (or b!139770 b!139782) bm!15456))

(assert (= (or b!139770 b!139782) bm!15458))

(assert (= (and b!139759 c!26150) b!139780))

(assert (= (and b!139759 (not c!26150)) b!139788))

(assert (= (and b!139780 c!26147) b!139790))

(assert (= (and b!139780 (not c!26147)) b!139778))

(assert (= (and b!139790 res!66798) b!139789))

(assert (= (and b!139789 res!66799) b!139755))

(assert (= (and b!139778 c!26152) b!139763))

(assert (= (and b!139778 (not c!26152)) b!139765))

(assert (= (and b!139763 res!66806) b!139766))

(assert (= (and b!139766 res!66803) b!139793))

(assert (= (and b!139765 c!26145) b!139783))

(assert (= (and b!139765 (not c!26145)) b!139762))

(assert (= (and b!139783 res!66801) b!139776))

(assert (= (and b!139776 res!66797) b!139773))

(assert (= (or b!139763 b!139783) bm!15470))

(assert (= (or b!139793 b!139773) bm!15455))

(assert (= (or b!139789 bm!15470) bm!15459))

(assert (= (or b!139790 b!139778) bm!15472))

(assert (= (and b!139788 c!26141) b!139752))

(assert (= (and b!139788 (not c!26141)) b!139768))

(assert (= (and b!139768 c!26140) b!139769))

(assert (= (and b!139768 (not c!26140)) b!139787))

(assert (= (and b!139787 c!26139) b!139756))

(assert (= (and b!139787 (not c!26139)) b!139772))

(assert (= (and b!139756 res!66800) b!139779))

(assert (= (and b!139779 res!66805) b!139753))

(assert (= (and b!139772 c!26148) b!139771))

(assert (= (and b!139772 (not c!26148)) b!139760))

(assert (= (and b!139771 res!66802) b!139792))

(assert (= (and b!139792 res!66796) b!139767))

(assert (= (and b!139760 c!26146) b!139786))

(assert (= (and b!139760 (not c!26146)) b!139754))

(assert (= (and b!139786 res!66795) b!139791))

(assert (= (and b!139791 res!66804) b!139781))

(assert (= (or b!139771 b!139786) bm!15465))

(assert (= (or b!139767 b!139781) bm!15463))

(assert (= (or b!139779 bm!15465) bm!15473))

(assert (= (or b!139756 b!139772) bm!15469))

(assert (= (or b!139752 b!139769) bm!15467))

(assert (= (or b!139780 b!139787) bm!15466))

(assert (= (or bm!15459 bm!15473) bm!15457))

(assert (= (or b!139778 b!139772) bm!15468))

(assert (= (or bm!15472 bm!15469) bm!15462))

(assert (= (or b!139790 b!139756) bm!15475))

(assert (= (or bm!15455 bm!15463) bm!15476))

(assert (= (or b!139780 b!139787) bm!15474))

(assert (= (and bm!15474 c!26151) b!139758))

(assert (= (and bm!15474 (not c!26151)) b!139757))

(assert (= (or bm!15453 b!139787) bm!15460))

(assert (= (or bm!15456 bm!15466) bm!15471))

(assert (= (or bm!15458 b!139787) bm!15464))

(assert (= (and bm!15464 c!26143) b!139761))

(assert (= (and bm!15464 (not c!26143)) b!139785))

(assert (= (and d!43533 res!66808) b!139764))

(assert (= (and b!139764 c!26149) b!139775))

(assert (= (and b!139764 (not c!26149)) b!139777))

(assert (= (and b!139775 res!66807) b!139784))

(assert (= (or b!139784 b!139777) bm!15454))

(assert (= (or b!139775 b!139784 b!139777) bm!15461))

(declare-fun m!166757 () Bool)

(assert (=> b!139787 m!166757))

(declare-fun m!166759 () Bool)

(assert (=> b!139787 m!166759))

(declare-fun m!166761 () Bool)

(assert (=> b!139787 m!166761))

(declare-fun m!166763 () Bool)

(assert (=> b!139787 m!166763))

(assert (=> b!139787 m!166633))

(assert (=> b!139787 m!166663))

(declare-fun m!166765 () Bool)

(assert (=> b!139787 m!166765))

(assert (=> b!139787 m!166761))

(assert (=> bm!15454 m!166655))

(assert (=> bm!15476 m!166633))

(declare-fun m!166767 () Bool)

(assert (=> bm!15476 m!166767))

(declare-fun m!166769 () Bool)

(assert (=> b!139753 m!166769))

(declare-fun m!166771 () Bool)

(assert (=> b!139766 m!166771))

(declare-fun m!166773 () Bool)

(assert (=> b!139785 m!166773))

(assert (=> b!139757 m!166773))

(declare-fun m!166775 () Bool)

(assert (=> b!139792 m!166775))

(declare-fun m!166777 () Bool)

(assert (=> bm!15460 m!166777))

(assert (=> bm!15471 m!166759))

(declare-fun m!166779 () Bool)

(assert (=> bm!15471 m!166779))

(assert (=> b!139770 m!166663))

(declare-fun m!166781 () Bool)

(assert (=> b!139770 m!166781))

(declare-fun m!166783 () Bool)

(assert (=> bm!15464 m!166783))

(declare-fun m!166785 () Bool)

(assert (=> d!43533 m!166785))

(assert (=> d!43533 m!166645))

(assert (=> bm!15462 m!166633))

(declare-fun m!166787 () Bool)

(assert (=> bm!15462 m!166787))

(assert (=> bm!15467 m!166633))

(assert (=> bm!15467 m!166663))

(declare-fun m!166789 () Bool)

(assert (=> bm!15467 m!166789))

(declare-fun m!166791 () Bool)

(assert (=> b!139776 m!166791))

(declare-fun m!166793 () Bool)

(assert (=> b!139791 m!166793))

(assert (=> b!139759 m!166633))

(assert (=> b!139759 m!166787))

(declare-fun m!166795 () Bool)

(assert (=> b!139784 m!166795))

(declare-fun m!166797 () Bool)

(assert (=> b!139755 m!166797))

(declare-fun m!166799 () Bool)

(assert (=> bm!15457 m!166799))

(assert (=> bm!15474 m!166633))

(declare-fun m!166801 () Bool)

(assert (=> bm!15474 m!166801))

(assert (=> b!139782 m!166663))

(declare-fun m!166803 () Bool)

(assert (=> b!139782 m!166803))

(assert (=> b!139775 m!166633))

(declare-fun m!166805 () Bool)

(assert (=> b!139775 m!166805))

(assert (=> bm!15475 m!166633))

(declare-fun m!166807 () Bool)

(assert (=> bm!15475 m!166807))

(assert (=> bm!15468 m!166633))

(declare-fun m!166809 () Bool)

(assert (=> bm!15468 m!166809))

(declare-fun m!166811 () Bool)

(assert (=> bm!15461 m!166811))

(assert (=> b!139552 d!43533))

(declare-fun d!43535 () Bool)

(declare-fun c!26155 () Bool)

(assert (=> d!43535 (= c!26155 ((_ is ValueCellFull!1121) (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!91177 () V!3553)

(assert (=> d!43535 (= (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91177)))

(declare-fun b!139798 () Bool)

(declare-fun get!1533 (ValueCell!1121 V!3553) V!3553)

(assert (=> b!139798 (= e!91177 (get!1533 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139799 () Bool)

(declare-fun get!1534 (ValueCell!1121 V!3553) V!3553)

(assert (=> b!139799 (= e!91177 (get!1534 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43535 c!26155) b!139798))

(assert (= (and d!43535 (not c!26155)) b!139799))

(assert (=> b!139798 m!166659))

(assert (=> b!139798 m!166661))

(declare-fun m!166813 () Bool)

(assert (=> b!139798 m!166813))

(assert (=> b!139799 m!166659))

(assert (=> b!139799 m!166661))

(declare-fun m!166815 () Bool)

(assert (=> b!139799 m!166815))

(assert (=> b!139552 d!43535))

(declare-fun d!43537 () Bool)

(declare-fun res!66815 () Bool)

(declare-fun e!91180 () Bool)

(assert (=> d!43537 (=> (not res!66815) (not e!91180))))

(declare-fun simpleValid!96 (LongMapFixedSize!1150) Bool)

(assert (=> d!43537 (= res!66815 (simpleValid!96 newMap!16))))

(assert (=> d!43537 (= (valid!567 newMap!16) e!91180)))

(declare-fun b!139806 () Bool)

(declare-fun res!66816 () Bool)

(assert (=> b!139806 (=> (not res!66816) (not e!91180))))

(declare-fun arrayCountValidKeys!0 (array!4879 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!139806 (= res!66816 (= (arrayCountValidKeys!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (_size!624 newMap!16)))))

(declare-fun b!139807 () Bool)

(declare-fun res!66817 () Bool)

(assert (=> b!139807 (=> (not res!66817) (not e!91180))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4879 (_ BitVec 32)) Bool)

(assert (=> b!139807 (= res!66817 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!139808 () Bool)

(assert (=> b!139808 (= e!91180 (arrayNoDuplicates!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!43537 res!66815) b!139806))

(assert (= (and b!139806 res!66816) b!139807))

(assert (= (and b!139807 res!66817) b!139808))

(declare-fun m!166817 () Bool)

(assert (=> d!43537 m!166817))

(declare-fun m!166819 () Bool)

(assert (=> b!139806 m!166819))

(declare-fun m!166821 () Bool)

(assert (=> b!139807 m!166821))

(declare-fun m!166823 () Bool)

(assert (=> b!139808 m!166823))

(assert (=> b!139550 d!43537))

(declare-fun d!43539 () Bool)

(assert (=> d!43539 (= (array_inv!1439 (_keys!4698 newMap!16)) (bvsge (size!2578 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139556 d!43539))

(declare-fun d!43541 () Bool)

(assert (=> d!43541 (= (array_inv!1440 (_values!2922 newMap!16)) (bvsge (size!2579 (_values!2922 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139556 d!43541))

(declare-fun d!43543 () Bool)

(assert (=> d!43543 (= (array_inv!1439 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvsge (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139542 d!43543))

(declare-fun d!43545 () Bool)

(assert (=> d!43545 (= (array_inv!1440 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvsge (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139542 d!43545))

(declare-fun call!15482 () Bool)

(declare-fun c!26158 () Bool)

(declare-fun bm!15479 () Bool)

(assert (=> bm!15479 (= call!15482 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))))

(declare-fun b!139819 () Bool)

(declare-fun e!91189 () Bool)

(declare-fun e!91190 () Bool)

(assert (=> b!139819 (= e!91189 e!91190)))

(declare-fun res!66826 () Bool)

(assert (=> b!139819 (=> (not res!66826) (not e!91190))))

(declare-fun e!91192 () Bool)

(assert (=> b!139819 (= res!66826 (not e!91192))))

(declare-fun res!66824 () Bool)

(assert (=> b!139819 (=> (not res!66824) (not e!91192))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!139819 (= res!66824 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139820 () Bool)

(declare-fun e!91191 () Bool)

(assert (=> b!139820 (= e!91191 call!15482)))

(declare-fun b!139821 () Bool)

(assert (=> b!139821 (= e!91190 e!91191)))

(assert (=> b!139821 (= c!26158 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun d!43547 () Bool)

(declare-fun res!66825 () Bool)

(assert (=> d!43547 (=> res!66825 e!91189)))

(assert (=> d!43547 (= res!66825 (bvsge from!355 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43547 (= (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) from!355 Nil!1717) e!91189)))

(declare-fun b!139822 () Bool)

(assert (=> b!139822 (= e!91191 call!15482)))

(declare-fun b!139823 () Bool)

(declare-fun contains!906 (List!1720 (_ BitVec 64)) Bool)

(assert (=> b!139823 (= e!91192 (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43547 (not res!66825)) b!139819))

(assert (= (and b!139819 res!66824) b!139823))

(assert (= (and b!139819 res!66826) b!139821))

(assert (= (and b!139821 c!26158) b!139820))

(assert (= (and b!139821 (not c!26158)) b!139822))

(assert (= (or b!139820 b!139822) bm!15479))

(assert (=> bm!15479 m!166633))

(declare-fun m!166825 () Bool)

(assert (=> bm!15479 m!166825))

(assert (=> b!139819 m!166633))

(assert (=> b!139819 m!166633))

(declare-fun m!166827 () Bool)

(assert (=> b!139819 m!166827))

(assert (=> b!139821 m!166633))

(assert (=> b!139821 m!166633))

(assert (=> b!139821 m!166827))

(assert (=> b!139823 m!166633))

(assert (=> b!139823 m!166633))

(declare-fun m!166829 () Bool)

(assert (=> b!139823 m!166829))

(assert (=> b!139555 d!43547))

(declare-fun d!43549 () Bool)

(assert (=> d!43549 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) from!355 Nil!1717)))

(declare-fun lt!73135 () Unit!4387)

(declare-fun choose!39 (array!4879 (_ BitVec 32) (_ BitVec 32)) Unit!4387)

(assert (=> d!43549 (= lt!73135 (choose!39 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!43549 (bvslt (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!43549 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 from!355) lt!73135)))

(declare-fun bs!5844 () Bool)

(assert (= bs!5844 d!43549))

(assert (=> bs!5844 m!166631))

(declare-fun m!166831 () Bool)

(assert (=> bs!5844 m!166831))

(assert (=> b!139555 d!43549))

(declare-fun d!43551 () Bool)

(declare-fun res!66831 () Bool)

(declare-fun e!91197 () Bool)

(assert (=> d!43551 (=> res!66831 e!91197)))

(assert (=> d!43551 (= res!66831 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43551 (= (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!91197)))

(declare-fun b!139828 () Bool)

(declare-fun e!91198 () Bool)

(assert (=> b!139828 (= e!91197 e!91198)))

(declare-fun res!66832 () Bool)

(assert (=> b!139828 (=> (not res!66832) (not e!91198))))

(assert (=> b!139828 (= res!66832 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!139829 () Bool)

(assert (=> b!139829 (= e!91198 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!43551 (not res!66831)) b!139828))

(assert (= (and b!139828 res!66832) b!139829))

(declare-fun m!166833 () Bool)

(assert (=> d!43551 m!166833))

(assert (=> b!139829 m!166633))

(declare-fun m!166835 () Bool)

(assert (=> b!139829 m!166835))

(assert (=> b!139555 d!43551))

(declare-fun d!43553 () Bool)

(declare-fun e!91201 () Bool)

(assert (=> d!43553 e!91201))

(declare-fun c!26161 () Bool)

(assert (=> d!43553 (= c!26161 (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!73138 () Unit!4387)

(declare-fun choose!862 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4387)

(assert (=> d!43553 (= lt!73138 (choose!862 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> d!43553 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!43553 (= (lemmaListMapContainsThenArrayContainsFrom!139 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) lt!73138)))

(declare-fun b!139834 () Bool)

(assert (=> b!139834 (= e!91201 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!139835 () Bool)

(assert (=> b!139835 (= e!91201 (ite (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43553 c!26161) b!139834))

(assert (= (and d!43553 (not c!26161)) b!139835))

(assert (=> d!43553 m!166633))

(declare-fun m!166837 () Bool)

(assert (=> d!43553 m!166837))

(declare-fun m!166839 () Bool)

(assert (=> d!43553 m!166839))

(assert (=> b!139834 m!166633))

(assert (=> b!139834 m!166637))

(assert (=> b!139555 d!43553))

(declare-fun d!43555 () Bool)

(assert (=> d!43555 (= (map!1429 newMap!16) (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun bs!5845 () Bool)

(assert (= bs!5845 d!43555))

(assert (=> bs!5845 m!166773))

(assert (=> b!139543 d!43555))

(declare-fun b!139878 () Bool)

(declare-fun e!91230 () Bool)

(assert (=> b!139878 (= e!91230 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139879 () Bool)

(declare-fun e!91236 () Bool)

(declare-fun lt!73184 () ListLongMap!1685)

(declare-fun apply!120 (ListLongMap!1685 (_ BitVec 64)) V!3553)

(assert (=> b!139879 (= e!91236 (= (apply!120 lt!73184 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!139880 () Bool)

(declare-fun c!26178 () Bool)

(assert (=> b!139880 (= c!26178 (and (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91238 () ListLongMap!1685)

(declare-fun e!91228 () ListLongMap!1685)

(assert (=> b!139880 (= e!91238 e!91228)))

(declare-fun bm!15494 () Bool)

(declare-fun call!15497 () Bool)

(assert (=> bm!15494 (= call!15497 (contains!904 lt!73184 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139881 () Bool)

(declare-fun e!91237 () Bool)

(declare-fun e!91235 () Bool)

(assert (=> b!139881 (= e!91237 e!91235)))

(declare-fun c!26175 () Bool)

(assert (=> b!139881 (= c!26175 (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139882 () Bool)

(declare-fun e!91229 () Bool)

(declare-fun e!91231 () Bool)

(assert (=> b!139882 (= e!91229 e!91231)))

(declare-fun res!66859 () Bool)

(assert (=> b!139882 (=> (not res!66859) (not e!91231))))

(assert (=> b!139882 (= res!66859 (contains!904 lt!73184 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139882 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!139883 () Bool)

(declare-fun res!66853 () Bool)

(assert (=> b!139883 (=> (not res!66853) (not e!91237))))

(declare-fun e!91234 () Bool)

(assert (=> b!139883 (= res!66853 e!91234)))

(declare-fun c!26179 () Bool)

(assert (=> b!139883 (= c!26179 (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139884 () Bool)

(declare-fun e!91239 () Bool)

(assert (=> b!139884 (= e!91239 (= (apply!120 lt!73184 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!139885 () Bool)

(declare-fun call!15503 () Bool)

(assert (=> b!139885 (= e!91235 (not call!15503))))

(declare-fun b!139886 () Bool)

(assert (=> b!139886 (= e!91231 (= (apply!120 lt!73184 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139886 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!139886 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun bm!15495 () Bool)

(declare-fun call!15500 () ListLongMap!1685)

(declare-fun call!15498 () ListLongMap!1685)

(assert (=> bm!15495 (= call!15500 call!15498)))

(declare-fun b!139887 () Bool)

(declare-fun res!66857 () Bool)

(assert (=> b!139887 (=> (not res!66857) (not e!91237))))

(assert (=> b!139887 (= res!66857 e!91229)))

(declare-fun res!66856 () Bool)

(assert (=> b!139887 (=> res!66856 e!91229)))

(assert (=> b!139887 (= res!66856 (not e!91230))))

(declare-fun res!66852 () Bool)

(assert (=> b!139887 (=> (not res!66852) (not e!91230))))

(assert (=> b!139887 (= res!66852 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun bm!15496 () Bool)

(declare-fun call!15499 () ListLongMap!1685)

(assert (=> bm!15496 (= call!15498 call!15499)))

(declare-fun b!139888 () Bool)

(declare-fun e!91232 () Unit!4387)

(declare-fun lt!73201 () Unit!4387)

(assert (=> b!139888 (= e!91232 lt!73201)))

(declare-fun lt!73188 () ListLongMap!1685)

(declare-fun getCurrentListMapNoExtraKeys!140 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) ListLongMap!1685)

(assert (=> b!139888 (= lt!73188 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun lt!73190 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73190 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73194 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73194 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73204 () Unit!4387)

(declare-fun addStillContains!96 (ListLongMap!1685 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4387)

(assert (=> b!139888 (= lt!73204 (addStillContains!96 lt!73188 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73194))))

(assert (=> b!139888 (contains!904 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73194)))

(declare-fun lt!73193 () Unit!4387)

(assert (=> b!139888 (= lt!73193 lt!73204)))

(declare-fun lt!73200 () ListLongMap!1685)

(assert (=> b!139888 (= lt!73200 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun lt!73189 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73189 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73195 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73195 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73198 () Unit!4387)

(declare-fun addApplyDifferent!96 (ListLongMap!1685 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4387)

(assert (=> b!139888 (= lt!73198 (addApplyDifferent!96 lt!73200 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73195))))

(assert (=> b!139888 (= (apply!120 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73195) (apply!120 lt!73200 lt!73195))))

(declare-fun lt!73183 () Unit!4387)

(assert (=> b!139888 (= lt!73183 lt!73198)))

(declare-fun lt!73187 () ListLongMap!1685)

(assert (=> b!139888 (= lt!73187 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun lt!73197 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73197 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73185 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73185 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73196 () Unit!4387)

(assert (=> b!139888 (= lt!73196 (addApplyDifferent!96 lt!73187 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73185))))

(assert (=> b!139888 (= (apply!120 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73185) (apply!120 lt!73187 lt!73185))))

(declare-fun lt!73186 () Unit!4387)

(assert (=> b!139888 (= lt!73186 lt!73196)))

(declare-fun lt!73203 () ListLongMap!1685)

(assert (=> b!139888 (= lt!73203 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun lt!73199 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73199 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73202 () (_ BitVec 64))

(assert (=> b!139888 (= lt!73202 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!139888 (= lt!73201 (addApplyDifferent!96 lt!73203 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73202))))

(assert (=> b!139888 (= (apply!120 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73202) (apply!120 lt!73203 lt!73202))))

(declare-fun c!26176 () Bool)

(declare-fun c!26177 () Bool)

(declare-fun call!15501 () ListLongMap!1685)

(declare-fun bm!15497 () Bool)

(assert (=> bm!15497 (= call!15501 (+!173 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun d!43557 () Bool)

(assert (=> d!43557 e!91237))

(declare-fun res!66851 () Bool)

(assert (=> d!43557 (=> (not res!66851) (not e!91237))))

(assert (=> d!43557 (= res!66851 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun lt!73191 () ListLongMap!1685)

(assert (=> d!43557 (= lt!73184 lt!73191)))

(declare-fun lt!73192 () Unit!4387)

(assert (=> d!43557 (= lt!73192 e!91232)))

(declare-fun c!26174 () Bool)

(declare-fun e!91233 () Bool)

(assert (=> d!43557 (= c!26174 e!91233)))

(declare-fun res!66854 () Bool)

(assert (=> d!43557 (=> (not res!66854) (not e!91233))))

(assert (=> d!43557 (= res!66854 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91240 () ListLongMap!1685)

(assert (=> d!43557 (= lt!73191 e!91240)))

(assert (=> d!43557 (= c!26176 (and (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43557 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!43557 (= (getCurrentListMap!531 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) lt!73184)))

(declare-fun b!139889 () Bool)

(assert (=> b!139889 (= e!91228 call!15500)))

(declare-fun b!139890 () Bool)

(declare-fun Unit!4396 () Unit!4387)

(assert (=> b!139890 (= e!91232 Unit!4396)))

(declare-fun b!139891 () Bool)

(assert (=> b!139891 (= e!91235 e!91236)))

(declare-fun res!66855 () Bool)

(assert (=> b!139891 (= res!66855 call!15503)))

(assert (=> b!139891 (=> (not res!66855) (not e!91236))))

(declare-fun b!139892 () Bool)

(assert (=> b!139892 (= e!91234 e!91239)))

(declare-fun res!66858 () Bool)

(assert (=> b!139892 (= res!66858 call!15497)))

(assert (=> b!139892 (=> (not res!66858) (not e!91239))))

(declare-fun b!139893 () Bool)

(declare-fun call!15502 () ListLongMap!1685)

(assert (=> b!139893 (= e!91228 call!15502)))

(declare-fun b!139894 () Bool)

(assert (=> b!139894 (= e!91238 call!15502)))

(declare-fun b!139895 () Bool)

(assert (=> b!139895 (= e!91240 (+!173 call!15501 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun bm!15498 () Bool)

(assert (=> bm!15498 (= call!15499 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!139896 () Bool)

(assert (=> b!139896 (= e!91233 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139897 () Bool)

(assert (=> b!139897 (= e!91240 e!91238)))

(assert (=> b!139897 (= c!26177 (and (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139898 () Bool)

(assert (=> b!139898 (= e!91234 (not call!15497))))

(declare-fun bm!15499 () Bool)

(assert (=> bm!15499 (= call!15502 call!15501)))

(declare-fun bm!15500 () Bool)

(assert (=> bm!15500 (= call!15503 (contains!904 lt!73184 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43557 c!26176) b!139895))

(assert (= (and d!43557 (not c!26176)) b!139897))

(assert (= (and b!139897 c!26177) b!139894))

(assert (= (and b!139897 (not c!26177)) b!139880))

(assert (= (and b!139880 c!26178) b!139893))

(assert (= (and b!139880 (not c!26178)) b!139889))

(assert (= (or b!139893 b!139889) bm!15495))

(assert (= (or b!139894 bm!15495) bm!15496))

(assert (= (or b!139894 b!139893) bm!15499))

(assert (= (or b!139895 bm!15496) bm!15498))

(assert (= (or b!139895 bm!15499) bm!15497))

(assert (= (and d!43557 res!66854) b!139896))

(assert (= (and d!43557 c!26174) b!139888))

(assert (= (and d!43557 (not c!26174)) b!139890))

(assert (= (and d!43557 res!66851) b!139887))

(assert (= (and b!139887 res!66852) b!139878))

(assert (= (and b!139887 (not res!66856)) b!139882))

(assert (= (and b!139882 res!66859) b!139886))

(assert (= (and b!139887 res!66857) b!139883))

(assert (= (and b!139883 c!26179) b!139892))

(assert (= (and b!139883 (not c!26179)) b!139898))

(assert (= (and b!139892 res!66858) b!139884))

(assert (= (or b!139892 b!139898) bm!15494))

(assert (= (and b!139883 res!66853) b!139881))

(assert (= (and b!139881 c!26175) b!139891))

(assert (= (and b!139881 (not c!26175)) b!139885))

(assert (= (and b!139891 res!66855) b!139879))

(assert (= (or b!139891 b!139885) bm!15500))

(declare-fun b_lambda!6267 () Bool)

(assert (=> (not b_lambda!6267) (not b!139886)))

(assert (=> b!139886 t!6292))

(declare-fun b_and!8741 () Bool)

(assert (= b_and!8721 (and (=> t!6292 result!4167) b_and!8741)))

(assert (=> b!139886 t!6294))

(declare-fun b_and!8743 () Bool)

(assert (= b_and!8723 (and (=> t!6294 result!4171) b_and!8743)))

(declare-fun m!166841 () Bool)

(assert (=> b!139888 m!166841))

(declare-fun m!166843 () Bool)

(assert (=> b!139888 m!166843))

(declare-fun m!166845 () Bool)

(assert (=> b!139888 m!166845))

(declare-fun m!166847 () Bool)

(assert (=> b!139888 m!166847))

(declare-fun m!166849 () Bool)

(assert (=> b!139888 m!166849))

(assert (=> b!139888 m!166833))

(assert (=> b!139888 m!166841))

(declare-fun m!166851 () Bool)

(assert (=> b!139888 m!166851))

(declare-fun m!166853 () Bool)

(assert (=> b!139888 m!166853))

(assert (=> b!139888 m!166853))

(declare-fun m!166855 () Bool)

(assert (=> b!139888 m!166855))

(declare-fun m!166857 () Bool)

(assert (=> b!139888 m!166857))

(declare-fun m!166859 () Bool)

(assert (=> b!139888 m!166859))

(declare-fun m!166861 () Bool)

(assert (=> b!139888 m!166861))

(declare-fun m!166863 () Bool)

(assert (=> b!139888 m!166863))

(declare-fun m!166865 () Bool)

(assert (=> b!139888 m!166865))

(declare-fun m!166867 () Bool)

(assert (=> b!139888 m!166867))

(assert (=> b!139888 m!166847))

(declare-fun m!166869 () Bool)

(assert (=> b!139888 m!166869))

(assert (=> b!139888 m!166859))

(declare-fun m!166871 () Bool)

(assert (=> b!139888 m!166871))

(declare-fun m!166873 () Bool)

(assert (=> b!139895 m!166873))

(declare-fun m!166875 () Bool)

(assert (=> b!139884 m!166875))

(declare-fun m!166877 () Bool)

(assert (=> bm!15494 m!166877))

(assert (=> b!139878 m!166833))

(assert (=> b!139878 m!166833))

(declare-fun m!166879 () Bool)

(assert (=> b!139878 m!166879))

(declare-fun m!166881 () Bool)

(assert (=> b!139879 m!166881))

(declare-fun m!166883 () Bool)

(assert (=> b!139886 m!166883))

(assert (=> b!139886 m!166883))

(assert (=> b!139886 m!166661))

(declare-fun m!166885 () Bool)

(assert (=> b!139886 m!166885))

(assert (=> b!139886 m!166833))

(assert (=> b!139886 m!166833))

(declare-fun m!166887 () Bool)

(assert (=> b!139886 m!166887))

(assert (=> b!139886 m!166661))

(declare-fun m!166889 () Bool)

(assert (=> bm!15500 m!166889))

(assert (=> d!43557 m!166839))

(declare-fun m!166891 () Bool)

(assert (=> bm!15497 m!166891))

(assert (=> bm!15498 m!166849))

(assert (=> b!139882 m!166833))

(assert (=> b!139882 m!166833))

(declare-fun m!166893 () Bool)

(assert (=> b!139882 m!166893))

(assert (=> b!139896 m!166833))

(assert (=> b!139896 m!166833))

(assert (=> b!139896 m!166879))

(assert (=> b!139543 d!43557))

(declare-fun d!43559 () Bool)

(assert (=> d!43559 (= (valid!566 thiss!992) (valid!567 (v!3279 (underlying!479 thiss!992))))))

(declare-fun bs!5846 () Bool)

(assert (= bs!5846 d!43559))

(declare-fun m!166895 () Bool)

(assert (=> bs!5846 m!166895))

(assert (=> start!14712 d!43559))

(declare-fun b!139906 () Bool)

(declare-fun e!91246 () Bool)

(assert (=> b!139906 (= e!91246 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4843 () Bool)

(declare-fun mapRes!4843 () Bool)

(declare-fun tp!11575 () Bool)

(declare-fun e!91245 () Bool)

(assert (=> mapNonEmpty!4843 (= mapRes!4843 (and tp!11575 e!91245))))

(declare-fun mapRest!4843 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4843 () (_ BitVec 32))

(declare-fun mapValue!4843 () ValueCell!1121)

(assert (=> mapNonEmpty!4843 (= mapRest!4828 (store mapRest!4843 mapKey!4843 mapValue!4843))))

(declare-fun condMapEmpty!4843 () Bool)

(declare-fun mapDefault!4843 () ValueCell!1121)

(assert (=> mapNonEmpty!4827 (= condMapEmpty!4843 (= mapRest!4828 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4843)))))

(assert (=> mapNonEmpty!4827 (= tp!11546 (and e!91246 mapRes!4843))))

(declare-fun mapIsEmpty!4843 () Bool)

(assert (=> mapIsEmpty!4843 mapRes!4843))

(declare-fun b!139905 () Bool)

(assert (=> b!139905 (= e!91245 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4827 condMapEmpty!4843) mapIsEmpty!4843))

(assert (= (and mapNonEmpty!4827 (not condMapEmpty!4843)) mapNonEmpty!4843))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1121) mapValue!4843)) b!139905))

(assert (= (and mapNonEmpty!4827 ((_ is ValueCellFull!1121) mapDefault!4843)) b!139906))

(declare-fun m!166897 () Bool)

(assert (=> mapNonEmpty!4843 m!166897))

(declare-fun b!139908 () Bool)

(declare-fun e!91248 () Bool)

(assert (=> b!139908 (= e!91248 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4844 () Bool)

(declare-fun mapRes!4844 () Bool)

(declare-fun tp!11576 () Bool)

(declare-fun e!91247 () Bool)

(assert (=> mapNonEmpty!4844 (= mapRes!4844 (and tp!11576 e!91247))))

(declare-fun mapValue!4844 () ValueCell!1121)

(declare-fun mapKey!4844 () (_ BitVec 32))

(declare-fun mapRest!4844 () (Array (_ BitVec 32) ValueCell!1121))

(assert (=> mapNonEmpty!4844 (= mapRest!4827 (store mapRest!4844 mapKey!4844 mapValue!4844))))

(declare-fun condMapEmpty!4844 () Bool)

(declare-fun mapDefault!4844 () ValueCell!1121)

(assert (=> mapNonEmpty!4828 (= condMapEmpty!4844 (= mapRest!4827 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4844)))))

(assert (=> mapNonEmpty!4828 (= tp!11548 (and e!91248 mapRes!4844))))

(declare-fun mapIsEmpty!4844 () Bool)

(assert (=> mapIsEmpty!4844 mapRes!4844))

(declare-fun b!139907 () Bool)

(assert (=> b!139907 (= e!91247 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4828 condMapEmpty!4844) mapIsEmpty!4844))

(assert (= (and mapNonEmpty!4828 (not condMapEmpty!4844)) mapNonEmpty!4844))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1121) mapValue!4844)) b!139907))

(assert (= (and mapNonEmpty!4828 ((_ is ValueCellFull!1121) mapDefault!4844)) b!139908))

(declare-fun m!166899 () Bool)

(assert (=> mapNonEmpty!4844 m!166899))

(declare-fun b_lambda!6269 () Bool)

(assert (= b_lambda!6267 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6269)))

(check-sat (not d!43533) (not bm!15498) (not b_next!3025) (not d!43549) (not b!139806) (not bm!15460) (not bm!15474) (not d!43531) (not b_next!3027) (not b!139759) (not b!139829) (not d!43559) (not b!139782) (not bm!15476) (not b!139784) (not bm!15479) (not b!139799) b_and!8741 (not bm!15461) (not b!139785) (not b!139896) (not b!139807) (not bm!15500) (not b!139878) (not b!139879) (not b!139798) (not b!139808) (not b!139886) (not b!139884) (not b!139770) (not b!139834) (not b!139819) (not b_lambda!6265) (not b!139888) (not bm!15454) (not mapNonEmpty!4844) (not b!139895) (not d!43557) (not bm!15468) (not b!139665) (not b!139757) (not b!139667) (not bm!15462) (not b!139821) (not bm!15494) (not bm!15464) (not bm!15467) (not bm!15497) (not d!43553) (not b!139787) (not d!43555) (not bm!15471) (not b!139775) (not bm!15475) (not mapNonEmpty!4843) (not b_lambda!6269) (not bm!15457) (not b!139823) (not b!139882) (not d!43537) tp_is_empty!2929 b_and!8743)
(check-sat b_and!8741 b_and!8743 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun b!139921 () Bool)

(declare-fun e!91255 () SeekEntryResult!273)

(declare-fun e!91256 () SeekEntryResult!273)

(assert (=> b!139921 (= e!91255 e!91256)))

(declare-fun lt!73213 () (_ BitVec 64))

(declare-fun lt!73212 () SeekEntryResult!273)

(assert (=> b!139921 (= lt!73213 (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73212)))))

(declare-fun c!26187 () Bool)

(assert (=> b!139921 (= c!26187 (= lt!73213 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139922 () Bool)

(declare-fun c!26186 () Bool)

(assert (=> b!139922 (= c!26186 (= lt!73213 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91257 () SeekEntryResult!273)

(assert (=> b!139922 (= e!91256 e!91257)))

(declare-fun b!139923 () Bool)

(assert (=> b!139923 (= e!91255 Undefined!273)))

(declare-fun lt!73211 () SeekEntryResult!273)

(declare-fun d!43561 () Bool)

(assert (=> d!43561 (and (or ((_ is Undefined!273) lt!73211) (not ((_ is Found!273) lt!73211)) (and (bvsge (index!3256 lt!73211) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73211) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73211) ((_ is Found!273) lt!73211) (not ((_ is MissingZero!273) lt!73211)) (and (bvsge (index!3255 lt!73211) #b00000000000000000000000000000000) (bvslt (index!3255 lt!73211) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73211) ((_ is Found!273) lt!73211) ((_ is MissingZero!273) lt!73211) (not ((_ is MissingVacant!273) lt!73211)) (and (bvsge (index!3258 lt!73211) #b00000000000000000000000000000000) (bvslt (index!3258 lt!73211) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73211) (ite ((_ is Found!273) lt!73211) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73211)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite ((_ is MissingZero!273) lt!73211) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73211)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!273) lt!73211) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73211)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43561 (= lt!73211 e!91255)))

(declare-fun c!26188 () Bool)

(assert (=> d!43561 (= c!26188 (and ((_ is Intermediate!273) lt!73212) (undefined!1085 lt!73212)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4879 (_ BitVec 32)) SeekEntryResult!273)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!43561 (= lt!73212 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(assert (=> d!43561 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43561 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!73211)))

(declare-fun b!139924 () Bool)

(assert (=> b!139924 (= e!91257 (MissingZero!273 (index!3257 lt!73212)))))

(declare-fun b!139925 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4879 (_ BitVec 32)) SeekEntryResult!273)

(assert (=> b!139925 (= e!91257 (seekKeyOrZeroReturnVacant!0 (x!16130 lt!73212) (index!3257 lt!73212) (index!3257 lt!73212) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!139926 () Bool)

(assert (=> b!139926 (= e!91256 (Found!273 (index!3257 lt!73212)))))

(assert (= (and d!43561 c!26188) b!139923))

(assert (= (and d!43561 (not c!26188)) b!139921))

(assert (= (and b!139921 c!26187) b!139926))

(assert (= (and b!139921 (not c!26187)) b!139922))

(assert (= (and b!139922 c!26186) b!139924))

(assert (= (and b!139922 (not c!26186)) b!139925))

(declare-fun m!166901 () Bool)

(assert (=> b!139921 m!166901))

(assert (=> d!43561 m!166633))

(declare-fun m!166903 () Bool)

(assert (=> d!43561 m!166903))

(assert (=> d!43561 m!166903))

(assert (=> d!43561 m!166633))

(declare-fun m!166905 () Bool)

(assert (=> d!43561 m!166905))

(declare-fun m!166907 () Bool)

(assert (=> d!43561 m!166907))

(declare-fun m!166909 () Bool)

(assert (=> d!43561 m!166909))

(declare-fun m!166911 () Bool)

(assert (=> d!43561 m!166911))

(declare-fun m!166913 () Bool)

(assert (=> d!43561 m!166913))

(assert (=> b!139925 m!166633))

(declare-fun m!166915 () Bool)

(assert (=> b!139925 m!166915))

(assert (=> bm!15462 d!43561))

(declare-fun b!139927 () Bool)

(declare-fun e!91260 () Bool)

(assert (=> b!139927 (= e!91260 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139928 () Bool)

(declare-fun lt!73215 () ListLongMap!1685)

(declare-fun e!91266 () Bool)

(assert (=> b!139928 (= e!91266 (= (apply!120 lt!73215 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))

(declare-fun b!139929 () Bool)

(declare-fun c!26193 () Bool)

(assert (=> b!139929 (= c!26193 (and (not (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91268 () ListLongMap!1685)

(declare-fun e!91258 () ListLongMap!1685)

(assert (=> b!139929 (= e!91268 e!91258)))

(declare-fun bm!15501 () Bool)

(declare-fun call!15504 () Bool)

(assert (=> bm!15501 (= call!15504 (contains!904 lt!73215 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139930 () Bool)

(declare-fun e!91267 () Bool)

(declare-fun e!91265 () Bool)

(assert (=> b!139930 (= e!91267 e!91265)))

(declare-fun c!26190 () Bool)

(assert (=> b!139930 (= c!26190 (not (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139931 () Bool)

(declare-fun e!91259 () Bool)

(declare-fun e!91261 () Bool)

(assert (=> b!139931 (= e!91259 e!91261)))

(declare-fun res!66868 () Bool)

(assert (=> b!139931 (=> (not res!66868) (not e!91261))))

(assert (=> b!139931 (= res!66868 (contains!904 lt!73215 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139931 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!139932 () Bool)

(declare-fun res!66862 () Bool)

(assert (=> b!139932 (=> (not res!66862) (not e!91267))))

(declare-fun e!91264 () Bool)

(assert (=> b!139932 (= res!66862 e!91264)))

(declare-fun c!26194 () Bool)

(assert (=> b!139932 (= c!26194 (not (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139933 () Bool)

(declare-fun e!91269 () Bool)

(assert (=> b!139933 (= e!91269 (= (apply!120 lt!73215 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!139934 () Bool)

(declare-fun call!15510 () Bool)

(assert (=> b!139934 (= e!91265 (not call!15510))))

(declare-fun b!139935 () Bool)

(assert (=> b!139935 (= e!91261 (= (apply!120 lt!73215 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139935 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))))))))

(assert (=> b!139935 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15502 () Bool)

(declare-fun call!15507 () ListLongMap!1685)

(declare-fun call!15505 () ListLongMap!1685)

(assert (=> bm!15502 (= call!15507 call!15505)))

(declare-fun b!139936 () Bool)

(declare-fun res!66866 () Bool)

(assert (=> b!139936 (=> (not res!66866) (not e!91267))))

(assert (=> b!139936 (= res!66866 e!91259)))

(declare-fun res!66865 () Bool)

(assert (=> b!139936 (=> res!66865 e!91259)))

(assert (=> b!139936 (= res!66865 (not e!91260))))

(declare-fun res!66861 () Bool)

(assert (=> b!139936 (=> (not res!66861) (not e!91260))))

(assert (=> b!139936 (= res!66861 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15503 () Bool)

(declare-fun call!15506 () ListLongMap!1685)

(assert (=> bm!15503 (= call!15505 call!15506)))

(declare-fun b!139937 () Bool)

(declare-fun e!91262 () Unit!4387)

(declare-fun lt!73232 () Unit!4387)

(assert (=> b!139937 (= e!91262 lt!73232)))

(declare-fun lt!73219 () ListLongMap!1685)

(assert (=> b!139937 (= lt!73219 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73221 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73221 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73225 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73225 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73235 () Unit!4387)

(assert (=> b!139937 (= lt!73235 (addStillContains!96 lt!73219 lt!73221 (zeroValue!2789 newMap!16) lt!73225))))

(assert (=> b!139937 (contains!904 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) lt!73225)))

(declare-fun lt!73224 () Unit!4387)

(assert (=> b!139937 (= lt!73224 lt!73235)))

(declare-fun lt!73231 () ListLongMap!1685)

(assert (=> b!139937 (= lt!73231 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73220 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73220 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73226 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73226 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73229 () Unit!4387)

(assert (=> b!139937 (= lt!73229 (addApplyDifferent!96 lt!73231 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73226))))

(assert (=> b!139937 (= (apply!120 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73226) (apply!120 lt!73231 lt!73226))))

(declare-fun lt!73214 () Unit!4387)

(assert (=> b!139937 (= lt!73214 lt!73229)))

(declare-fun lt!73218 () ListLongMap!1685)

(assert (=> b!139937 (= lt!73218 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73228 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73228 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73216 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73216 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73227 () Unit!4387)

(assert (=> b!139937 (= lt!73227 (addApplyDifferent!96 lt!73218 lt!73228 (zeroValue!2789 newMap!16) lt!73216))))

(assert (=> b!139937 (= (apply!120 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) lt!73216) (apply!120 lt!73218 lt!73216))))

(declare-fun lt!73217 () Unit!4387)

(assert (=> b!139937 (= lt!73217 lt!73227)))

(declare-fun lt!73234 () ListLongMap!1685)

(assert (=> b!139937 (= lt!73234 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73230 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73230 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73233 () (_ BitVec 64))

(assert (=> b!139937 (= lt!73233 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139937 (= lt!73232 (addApplyDifferent!96 lt!73234 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73233))))

(assert (=> b!139937 (= (apply!120 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73233) (apply!120 lt!73234 lt!73233))))

(declare-fun c!26191 () Bool)

(declare-fun call!15508 () ListLongMap!1685)

(declare-fun c!26192 () Bool)

(declare-fun bm!15504 () Bool)

(assert (=> bm!15504 (= call!15508 (+!173 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun d!43563 () Bool)

(assert (=> d!43563 e!91267))

(declare-fun res!66860 () Bool)

(assert (=> d!43563 (=> (not res!66860) (not e!91267))))

(assert (=> d!43563 (= res!66860 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73222 () ListLongMap!1685)

(assert (=> d!43563 (= lt!73215 lt!73222)))

(declare-fun lt!73223 () Unit!4387)

(assert (=> d!43563 (= lt!73223 e!91262)))

(declare-fun c!26189 () Bool)

(declare-fun e!91263 () Bool)

(assert (=> d!43563 (= c!26189 e!91263)))

(declare-fun res!66863 () Bool)

(assert (=> d!43563 (=> (not res!66863) (not e!91263))))

(assert (=> d!43563 (= res!66863 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91270 () ListLongMap!1685)

(assert (=> d!43563 (= lt!73222 e!91270)))

(assert (=> d!43563 (= c!26191 (and (not (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43563 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43563 (= (getCurrentListMap!531 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73215)))

(declare-fun b!139938 () Bool)

(assert (=> b!139938 (= e!91258 call!15507)))

(declare-fun b!139939 () Bool)

(declare-fun Unit!4397 () Unit!4387)

(assert (=> b!139939 (= e!91262 Unit!4397)))

(declare-fun b!139940 () Bool)

(assert (=> b!139940 (= e!91265 e!91266)))

(declare-fun res!66864 () Bool)

(assert (=> b!139940 (= res!66864 call!15510)))

(assert (=> b!139940 (=> (not res!66864) (not e!91266))))

(declare-fun b!139941 () Bool)

(assert (=> b!139941 (= e!91264 e!91269)))

(declare-fun res!66867 () Bool)

(assert (=> b!139941 (= res!66867 call!15504)))

(assert (=> b!139941 (=> (not res!66867) (not e!91269))))

(declare-fun b!139942 () Bool)

(declare-fun call!15509 () ListLongMap!1685)

(assert (=> b!139942 (= e!91258 call!15509)))

(declare-fun b!139943 () Bool)

(assert (=> b!139943 (= e!91268 call!15509)))

(declare-fun b!139944 () Bool)

(assert (=> b!139944 (= e!91270 (+!173 call!15508 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun bm!15505 () Bool)

(assert (=> bm!15505 (= call!15506 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139945 () Bool)

(assert (=> b!139945 (= e!91263 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139946 () Bool)

(assert (=> b!139946 (= e!91270 e!91268)))

(assert (=> b!139946 (= c!26192 (and (not (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139947 () Bool)

(assert (=> b!139947 (= e!91264 (not call!15504))))

(declare-fun bm!15506 () Bool)

(assert (=> bm!15506 (= call!15509 call!15508)))

(declare-fun bm!15507 () Bool)

(assert (=> bm!15507 (= call!15510 (contains!904 lt!73215 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43563 c!26191) b!139944))

(assert (= (and d!43563 (not c!26191)) b!139946))

(assert (= (and b!139946 c!26192) b!139943))

(assert (= (and b!139946 (not c!26192)) b!139929))

(assert (= (and b!139929 c!26193) b!139942))

(assert (= (and b!139929 (not c!26193)) b!139938))

(assert (= (or b!139942 b!139938) bm!15502))

(assert (= (or b!139943 bm!15502) bm!15503))

(assert (= (or b!139943 b!139942) bm!15506))

(assert (= (or b!139944 bm!15503) bm!15505))

(assert (= (or b!139944 bm!15506) bm!15504))

(assert (= (and d!43563 res!66863) b!139945))

(assert (= (and d!43563 c!26189) b!139937))

(assert (= (and d!43563 (not c!26189)) b!139939))

(assert (= (and d!43563 res!66860) b!139936))

(assert (= (and b!139936 res!66861) b!139927))

(assert (= (and b!139936 (not res!66865)) b!139931))

(assert (= (and b!139931 res!66868) b!139935))

(assert (= (and b!139936 res!66866) b!139932))

(assert (= (and b!139932 c!26194) b!139941))

(assert (= (and b!139932 (not c!26194)) b!139947))

(assert (= (and b!139941 res!66867) b!139933))

(assert (= (or b!139941 b!139947) bm!15501))

(assert (= (and b!139932 res!66862) b!139930))

(assert (= (and b!139930 c!26190) b!139940))

(assert (= (and b!139930 (not c!26190)) b!139934))

(assert (= (and b!139940 res!66864) b!139928))

(assert (= (or b!139940 b!139934) bm!15507))

(declare-fun b_lambda!6271 () Bool)

(assert (=> (not b_lambda!6271) (not b!139935)))

(declare-fun tb!2549 () Bool)

(declare-fun t!6309 () Bool)

(assert (=> (and b!139542 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16)) t!6309) tb!2549))

(declare-fun result!4187 () Bool)

(assert (=> tb!2549 (= result!4187 tp_is_empty!2929)))

(assert (=> b!139935 t!6309))

(declare-fun b_and!8745 () Bool)

(assert (= b_and!8741 (and (=> t!6309 result!4187) b_and!8745)))

(declare-fun t!6311 () Bool)

(declare-fun tb!2551 () Bool)

(assert (=> (and b!139556 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 newMap!16)) t!6311) tb!2551))

(declare-fun result!4189 () Bool)

(assert (= result!4189 result!4187))

(assert (=> b!139935 t!6311))

(declare-fun b_and!8747 () Bool)

(assert (= b_and!8743 (and (=> t!6311 result!4189) b_and!8747)))

(declare-fun m!166917 () Bool)

(assert (=> b!139937 m!166917))

(declare-fun m!166919 () Bool)

(assert (=> b!139937 m!166919))

(declare-fun m!166921 () Bool)

(assert (=> b!139937 m!166921))

(declare-fun m!166923 () Bool)

(assert (=> b!139937 m!166923))

(declare-fun m!166925 () Bool)

(assert (=> b!139937 m!166925))

(declare-fun m!166927 () Bool)

(assert (=> b!139937 m!166927))

(assert (=> b!139937 m!166917))

(declare-fun m!166929 () Bool)

(assert (=> b!139937 m!166929))

(declare-fun m!166931 () Bool)

(assert (=> b!139937 m!166931))

(assert (=> b!139937 m!166931))

(declare-fun m!166933 () Bool)

(assert (=> b!139937 m!166933))

(declare-fun m!166935 () Bool)

(assert (=> b!139937 m!166935))

(declare-fun m!166937 () Bool)

(assert (=> b!139937 m!166937))

(declare-fun m!166939 () Bool)

(assert (=> b!139937 m!166939))

(declare-fun m!166941 () Bool)

(assert (=> b!139937 m!166941))

(declare-fun m!166943 () Bool)

(assert (=> b!139937 m!166943))

(declare-fun m!166945 () Bool)

(assert (=> b!139937 m!166945))

(assert (=> b!139937 m!166923))

(declare-fun m!166947 () Bool)

(assert (=> b!139937 m!166947))

(assert (=> b!139937 m!166937))

(declare-fun m!166949 () Bool)

(assert (=> b!139937 m!166949))

(declare-fun m!166951 () Bool)

(assert (=> b!139944 m!166951))

(declare-fun m!166953 () Bool)

(assert (=> b!139933 m!166953))

(declare-fun m!166955 () Bool)

(assert (=> bm!15501 m!166955))

(assert (=> b!139927 m!166927))

(assert (=> b!139927 m!166927))

(declare-fun m!166957 () Bool)

(assert (=> b!139927 m!166957))

(declare-fun m!166959 () Bool)

(assert (=> b!139928 m!166959))

(declare-fun m!166961 () Bool)

(assert (=> b!139935 m!166961))

(assert (=> b!139935 m!166961))

(declare-fun m!166963 () Bool)

(assert (=> b!139935 m!166963))

(declare-fun m!166965 () Bool)

(assert (=> b!139935 m!166965))

(assert (=> b!139935 m!166927))

(assert (=> b!139935 m!166927))

(declare-fun m!166967 () Bool)

(assert (=> b!139935 m!166967))

(assert (=> b!139935 m!166963))

(declare-fun m!166969 () Bool)

(assert (=> bm!15507 m!166969))

(assert (=> d!43563 m!166907))

(declare-fun m!166971 () Bool)

(assert (=> bm!15504 m!166971))

(assert (=> bm!15505 m!166925))

(assert (=> b!139931 m!166927))

(assert (=> b!139931 m!166927))

(declare-fun m!166973 () Bool)

(assert (=> b!139931 m!166973))

(assert (=> b!139945 m!166927))

(assert (=> b!139945 m!166927))

(assert (=> b!139945 m!166957))

(assert (=> bm!15471 d!43563))

(declare-fun b!139948 () Bool)

(declare-fun e!91273 () Bool)

(assert (=> b!139948 (= e!91273 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139949 () Bool)

(declare-fun e!91279 () Bool)

(declare-fun lt!73237 () ListLongMap!1685)

(assert (=> b!139949 (= e!91279 (= (apply!120 lt!73237 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!139950 () Bool)

(declare-fun c!26199 () Bool)

(assert (=> b!139950 (= c!26199 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91281 () ListLongMap!1685)

(declare-fun e!91271 () ListLongMap!1685)

(assert (=> b!139950 (= e!91281 e!91271)))

(declare-fun bm!15508 () Bool)

(declare-fun call!15511 () Bool)

(assert (=> bm!15508 (= call!15511 (contains!904 lt!73237 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139951 () Bool)

(declare-fun e!91280 () Bool)

(declare-fun e!91278 () Bool)

(assert (=> b!139951 (= e!91280 e!91278)))

(declare-fun c!26196 () Bool)

(assert (=> b!139951 (= c!26196 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139952 () Bool)

(declare-fun e!91272 () Bool)

(declare-fun e!91274 () Bool)

(assert (=> b!139952 (= e!91272 e!91274)))

(declare-fun res!66877 () Bool)

(assert (=> b!139952 (=> (not res!66877) (not e!91274))))

(assert (=> b!139952 (= res!66877 (contains!904 lt!73237 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139952 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!139953 () Bool)

(declare-fun res!66871 () Bool)

(assert (=> b!139953 (=> (not res!66871) (not e!91280))))

(declare-fun e!91277 () Bool)

(assert (=> b!139953 (= res!66871 e!91277)))

(declare-fun c!26200 () Bool)

(assert (=> b!139953 (= c!26200 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139954 () Bool)

(declare-fun e!91282 () Bool)

(assert (=> b!139954 (= e!91282 (= (apply!120 lt!73237 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!139955 () Bool)

(declare-fun call!15517 () Bool)

(assert (=> b!139955 (= e!91278 (not call!15517))))

(declare-fun b!139956 () Bool)

(assert (=> b!139956 (= e!91274 (= (apply!120 lt!73237 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139956 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!139956 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15509 () Bool)

(declare-fun call!15514 () ListLongMap!1685)

(declare-fun call!15512 () ListLongMap!1685)

(assert (=> bm!15509 (= call!15514 call!15512)))

(declare-fun b!139957 () Bool)

(declare-fun res!66875 () Bool)

(assert (=> b!139957 (=> (not res!66875) (not e!91280))))

(assert (=> b!139957 (= res!66875 e!91272)))

(declare-fun res!66874 () Bool)

(assert (=> b!139957 (=> res!66874 e!91272)))

(assert (=> b!139957 (= res!66874 (not e!91273))))

(declare-fun res!66870 () Bool)

(assert (=> b!139957 (=> (not res!66870) (not e!91273))))

(assert (=> b!139957 (= res!66870 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15510 () Bool)

(declare-fun call!15513 () ListLongMap!1685)

(assert (=> bm!15510 (= call!15512 call!15513)))

(declare-fun b!139958 () Bool)

(declare-fun e!91275 () Unit!4387)

(declare-fun lt!73254 () Unit!4387)

(assert (=> b!139958 (= e!91275 lt!73254)))

(declare-fun lt!73241 () ListLongMap!1685)

(assert (=> b!139958 (= lt!73241 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73243 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73243 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73247 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73247 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73257 () Unit!4387)

(assert (=> b!139958 (= lt!73257 (addStillContains!96 lt!73241 lt!73243 (zeroValue!2789 newMap!16) lt!73247))))

(assert (=> b!139958 (contains!904 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) lt!73247)))

(declare-fun lt!73246 () Unit!4387)

(assert (=> b!139958 (= lt!73246 lt!73257)))

(declare-fun lt!73253 () ListLongMap!1685)

(assert (=> b!139958 (= lt!73253 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73242 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73242 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73248 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73248 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73251 () Unit!4387)

(assert (=> b!139958 (= lt!73251 (addApplyDifferent!96 lt!73253 lt!73242 (minValue!2789 newMap!16) lt!73248))))

(assert (=> b!139958 (= (apply!120 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) lt!73248) (apply!120 lt!73253 lt!73248))))

(declare-fun lt!73236 () Unit!4387)

(assert (=> b!139958 (= lt!73236 lt!73251)))

(declare-fun lt!73240 () ListLongMap!1685)

(assert (=> b!139958 (= lt!73240 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73250 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73250 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73238 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73238 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73249 () Unit!4387)

(assert (=> b!139958 (= lt!73249 (addApplyDifferent!96 lt!73240 lt!73250 (zeroValue!2789 newMap!16) lt!73238))))

(assert (=> b!139958 (= (apply!120 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) lt!73238) (apply!120 lt!73240 lt!73238))))

(declare-fun lt!73239 () Unit!4387)

(assert (=> b!139958 (= lt!73239 lt!73249)))

(declare-fun lt!73256 () ListLongMap!1685)

(assert (=> b!139958 (= lt!73256 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73252 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73252 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73255 () (_ BitVec 64))

(assert (=> b!139958 (= lt!73255 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139958 (= lt!73254 (addApplyDifferent!96 lt!73256 lt!73252 (minValue!2789 newMap!16) lt!73255))))

(assert (=> b!139958 (= (apply!120 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) lt!73255) (apply!120 lt!73256 lt!73255))))

(declare-fun c!26197 () Bool)

(declare-fun bm!15511 () Bool)

(declare-fun call!15515 () ListLongMap!1685)

(declare-fun c!26198 () Bool)

(assert (=> bm!15511 (= call!15515 (+!173 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!43565 () Bool)

(assert (=> d!43565 e!91280))

(declare-fun res!66869 () Bool)

(assert (=> d!43565 (=> (not res!66869) (not e!91280))))

(assert (=> d!43565 (= res!66869 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73244 () ListLongMap!1685)

(assert (=> d!43565 (= lt!73237 lt!73244)))

(declare-fun lt!73245 () Unit!4387)

(assert (=> d!43565 (= lt!73245 e!91275)))

(declare-fun c!26195 () Bool)

(declare-fun e!91276 () Bool)

(assert (=> d!43565 (= c!26195 e!91276)))

(declare-fun res!66872 () Bool)

(assert (=> d!43565 (=> (not res!66872) (not e!91276))))

(assert (=> d!43565 (= res!66872 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91283 () ListLongMap!1685)

(assert (=> d!43565 (= lt!73244 e!91283)))

(assert (=> d!43565 (= c!26197 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43565 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43565 (= (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73237)))

(declare-fun b!139959 () Bool)

(assert (=> b!139959 (= e!91271 call!15514)))

(declare-fun b!139960 () Bool)

(declare-fun Unit!4398 () Unit!4387)

(assert (=> b!139960 (= e!91275 Unit!4398)))

(declare-fun b!139961 () Bool)

(assert (=> b!139961 (= e!91278 e!91279)))

(declare-fun res!66873 () Bool)

(assert (=> b!139961 (= res!66873 call!15517)))

(assert (=> b!139961 (=> (not res!66873) (not e!91279))))

(declare-fun b!139962 () Bool)

(assert (=> b!139962 (= e!91277 e!91282)))

(declare-fun res!66876 () Bool)

(assert (=> b!139962 (= res!66876 call!15511)))

(assert (=> b!139962 (=> (not res!66876) (not e!91282))))

(declare-fun b!139963 () Bool)

(declare-fun call!15516 () ListLongMap!1685)

(assert (=> b!139963 (= e!91271 call!15516)))

(declare-fun b!139964 () Bool)

(assert (=> b!139964 (= e!91281 call!15516)))

(declare-fun b!139965 () Bool)

(assert (=> b!139965 (= e!91283 (+!173 call!15515 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15512 () Bool)

(assert (=> bm!15512 (= call!15513 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139966 () Bool)

(assert (=> b!139966 (= e!91276 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139967 () Bool)

(assert (=> b!139967 (= e!91283 e!91281)))

(assert (=> b!139967 (= c!26198 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139968 () Bool)

(assert (=> b!139968 (= e!91277 (not call!15511))))

(declare-fun bm!15513 () Bool)

(assert (=> bm!15513 (= call!15516 call!15515)))

(declare-fun bm!15514 () Bool)

(assert (=> bm!15514 (= call!15517 (contains!904 lt!73237 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43565 c!26197) b!139965))

(assert (= (and d!43565 (not c!26197)) b!139967))

(assert (= (and b!139967 c!26198) b!139964))

(assert (= (and b!139967 (not c!26198)) b!139950))

(assert (= (and b!139950 c!26199) b!139963))

(assert (= (and b!139950 (not c!26199)) b!139959))

(assert (= (or b!139963 b!139959) bm!15509))

(assert (= (or b!139964 bm!15509) bm!15510))

(assert (= (or b!139964 b!139963) bm!15513))

(assert (= (or b!139965 bm!15510) bm!15512))

(assert (= (or b!139965 bm!15513) bm!15511))

(assert (= (and d!43565 res!66872) b!139966))

(assert (= (and d!43565 c!26195) b!139958))

(assert (= (and d!43565 (not c!26195)) b!139960))

(assert (= (and d!43565 res!66869) b!139957))

(assert (= (and b!139957 res!66870) b!139948))

(assert (= (and b!139957 (not res!66874)) b!139952))

(assert (= (and b!139952 res!66877) b!139956))

(assert (= (and b!139957 res!66875) b!139953))

(assert (= (and b!139953 c!26200) b!139962))

(assert (= (and b!139953 (not c!26200)) b!139968))

(assert (= (and b!139962 res!66876) b!139954))

(assert (= (or b!139962 b!139968) bm!15508))

(assert (= (and b!139953 res!66871) b!139951))

(assert (= (and b!139951 c!26196) b!139961))

(assert (= (and b!139951 (not c!26196)) b!139955))

(assert (= (and b!139961 res!66873) b!139949))

(assert (= (or b!139961 b!139955) bm!15514))

(declare-fun b_lambda!6273 () Bool)

(assert (=> (not b_lambda!6273) (not b!139956)))

(assert (=> b!139956 t!6309))

(declare-fun b_and!8749 () Bool)

(assert (= b_and!8745 (and (=> t!6309 result!4187) b_and!8749)))

(assert (=> b!139956 t!6311))

(declare-fun b_and!8751 () Bool)

(assert (= b_and!8747 (and (=> t!6311 result!4189) b_and!8751)))

(declare-fun m!166975 () Bool)

(assert (=> b!139958 m!166975))

(declare-fun m!166977 () Bool)

(assert (=> b!139958 m!166977))

(declare-fun m!166979 () Bool)

(assert (=> b!139958 m!166979))

(declare-fun m!166981 () Bool)

(assert (=> b!139958 m!166981))

(declare-fun m!166983 () Bool)

(assert (=> b!139958 m!166983))

(assert (=> b!139958 m!166927))

(assert (=> b!139958 m!166975))

(declare-fun m!166985 () Bool)

(assert (=> b!139958 m!166985))

(declare-fun m!166987 () Bool)

(assert (=> b!139958 m!166987))

(assert (=> b!139958 m!166987))

(declare-fun m!166989 () Bool)

(assert (=> b!139958 m!166989))

(declare-fun m!166991 () Bool)

(assert (=> b!139958 m!166991))

(declare-fun m!166993 () Bool)

(assert (=> b!139958 m!166993))

(declare-fun m!166995 () Bool)

(assert (=> b!139958 m!166995))

(declare-fun m!166997 () Bool)

(assert (=> b!139958 m!166997))

(declare-fun m!166999 () Bool)

(assert (=> b!139958 m!166999))

(declare-fun m!167001 () Bool)

(assert (=> b!139958 m!167001))

(assert (=> b!139958 m!166981))

(declare-fun m!167003 () Bool)

(assert (=> b!139958 m!167003))

(assert (=> b!139958 m!166993))

(declare-fun m!167005 () Bool)

(assert (=> b!139958 m!167005))

(declare-fun m!167007 () Bool)

(assert (=> b!139965 m!167007))

(declare-fun m!167009 () Bool)

(assert (=> b!139954 m!167009))

(declare-fun m!167011 () Bool)

(assert (=> bm!15508 m!167011))

(assert (=> b!139948 m!166927))

(assert (=> b!139948 m!166927))

(assert (=> b!139948 m!166957))

(declare-fun m!167013 () Bool)

(assert (=> b!139949 m!167013))

(declare-fun m!167015 () Bool)

(assert (=> b!139956 m!167015))

(assert (=> b!139956 m!167015))

(assert (=> b!139956 m!166963))

(declare-fun m!167017 () Bool)

(assert (=> b!139956 m!167017))

(assert (=> b!139956 m!166927))

(assert (=> b!139956 m!166927))

(declare-fun m!167019 () Bool)

(assert (=> b!139956 m!167019))

(assert (=> b!139956 m!166963))

(declare-fun m!167021 () Bool)

(assert (=> bm!15514 m!167021))

(assert (=> d!43565 m!166907))

(declare-fun m!167023 () Bool)

(assert (=> bm!15511 m!167023))

(assert (=> bm!15512 m!166983))

(assert (=> b!139952 m!166927))

(assert (=> b!139952 m!166927))

(declare-fun m!167025 () Bool)

(assert (=> b!139952 m!167025))

(assert (=> b!139966 m!166927))

(assert (=> b!139966 m!166927))

(assert (=> b!139966 m!166957))

(assert (=> b!139757 d!43565))

(declare-fun d!43567 () Bool)

(declare-fun e!91286 () Bool)

(assert (=> d!43567 e!91286))

(declare-fun res!66882 () Bool)

(assert (=> d!43567 (=> (not res!66882) (not e!91286))))

(declare-fun lt!73268 () ListLongMap!1685)

(assert (=> d!43567 (= res!66882 (contains!904 lt!73268 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73267 () List!1719)

(assert (=> d!43567 (= lt!73268 (ListLongMap!1686 lt!73267))))

(declare-fun lt!73266 () Unit!4387)

(declare-fun lt!73269 () Unit!4387)

(assert (=> d!43567 (= lt!73266 lt!73269)))

(assert (=> d!43567 (= (getValueByKey!177 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!182 (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!91 (List!1719 (_ BitVec 64) V!3553) Unit!4387)

(assert (=> d!43567 (= lt!73269 (lemmaContainsTupThenGetReturnValue!91 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun insertStrictlySorted!94 (List!1719 (_ BitVec 64) V!3553) List!1719)

(assert (=> d!43567 (= lt!73267 (insertStrictlySorted!94 (toList!858 e!91166) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43567 (= (+!173 e!91166 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73268)))

(declare-fun b!139973 () Bool)

(declare-fun res!66883 () Bool)

(assert (=> b!139973 (=> (not res!66883) (not e!91286))))

(assert (=> b!139973 (= res!66883 (= (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!182 (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!139974 () Bool)

(declare-fun contains!907 (List!1719 tuple2!2622) Bool)

(assert (=> b!139974 (= e!91286 (contains!907 (toList!858 lt!73268) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43567 res!66882) b!139973))

(assert (= (and b!139973 res!66883) b!139974))

(declare-fun m!167027 () Bool)

(assert (=> d!43567 m!167027))

(declare-fun m!167029 () Bool)

(assert (=> d!43567 m!167029))

(declare-fun m!167031 () Bool)

(assert (=> d!43567 m!167031))

(declare-fun m!167033 () Bool)

(assert (=> d!43567 m!167033))

(declare-fun m!167035 () Bool)

(assert (=> b!139973 m!167035))

(declare-fun m!167037 () Bool)

(assert (=> b!139974 m!167037))

(assert (=> bm!15464 d!43567))

(declare-fun d!43569 () Bool)

(assert (=> d!43569 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73272 () Unit!4387)

(declare-fun choose!863 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4387)

(assert (=> d!43569 (= lt!73272 (choose!863 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43569 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43569 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) lt!73272)))

(declare-fun bs!5847 () Bool)

(assert (= bs!5847 d!43569))

(assert (=> bs!5847 m!166773))

(declare-fun m!167039 () Bool)

(assert (=> bs!5847 m!167039))

(assert (=> bs!5847 m!166907))

(assert (=> bs!5847 m!166663))

(declare-fun m!167041 () Bool)

(assert (=> bs!5847 m!167041))

(assert (=> bs!5847 m!166663))

(declare-fun m!167043 () Bool)

(assert (=> bs!5847 m!167043))

(assert (=> bs!5847 m!166773))

(assert (=> b!139782 d!43569))

(declare-fun d!43571 () Bool)

(declare-fun e!91287 () Bool)

(assert (=> d!43571 e!91287))

(declare-fun res!66884 () Bool)

(assert (=> d!43571 (=> (not res!66884) (not e!91287))))

(declare-fun lt!73275 () ListLongMap!1685)

(assert (=> d!43571 (= res!66884 (contains!904 lt!73275 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun lt!73274 () List!1719)

(assert (=> d!43571 (= lt!73275 (ListLongMap!1686 lt!73274))))

(declare-fun lt!73273 () Unit!4387)

(declare-fun lt!73276 () Unit!4387)

(assert (=> d!43571 (= lt!73273 lt!73276)))

(assert (=> d!43571 (= (getValueByKey!177 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (Some!182 (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43571 (= lt!73276 (lemmaContainsTupThenGetReturnValue!91 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43571 (= lt!73274 (insertStrictlySorted!94 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43571 (= (+!173 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73275)))

(declare-fun b!139975 () Bool)

(declare-fun res!66885 () Bool)

(assert (=> b!139975 (=> (not res!66885) (not e!91287))))

(assert (=> b!139975 (= res!66885 (= (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (Some!182 (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!139976 () Bool)

(assert (=> b!139976 (= e!91287 (contains!907 (toList!858 lt!73275) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!43571 res!66884) b!139975))

(assert (= (and b!139975 res!66885) b!139976))

(declare-fun m!167045 () Bool)

(assert (=> d!43571 m!167045))

(declare-fun m!167047 () Bool)

(assert (=> d!43571 m!167047))

(declare-fun m!167049 () Bool)

(assert (=> d!43571 m!167049))

(declare-fun m!167051 () Bool)

(assert (=> d!43571 m!167051))

(declare-fun m!167053 () Bool)

(assert (=> b!139975 m!167053))

(declare-fun m!167055 () Bool)

(assert (=> b!139976 m!167055))

(assert (=> bm!15497 d!43571))

(declare-fun d!43573 () Bool)

(declare-fun res!66886 () Bool)

(declare-fun e!91288 () Bool)

(assert (=> d!43573 (=> (not res!66886) (not e!91288))))

(assert (=> d!43573 (= res!66886 (simpleValid!96 (_2!1323 lt!73124)))))

(assert (=> d!43573 (= (valid!567 (_2!1323 lt!73124)) e!91288)))

(declare-fun b!139977 () Bool)

(declare-fun res!66887 () Bool)

(assert (=> b!139977 (=> (not res!66887) (not e!91288))))

(assert (=> b!139977 (= res!66887 (= (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))) (_size!624 (_2!1323 lt!73124))))))

(declare-fun b!139978 () Bool)

(declare-fun res!66888 () Bool)

(assert (=> b!139978 (=> (not res!66888) (not e!91288))))

(assert (=> b!139978 (= res!66888 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))))))

(declare-fun b!139979 () Bool)

(assert (=> b!139979 (= e!91288 (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73124)) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!43573 res!66886) b!139977))

(assert (= (and b!139977 res!66887) b!139978))

(assert (= (and b!139978 res!66888) b!139979))

(declare-fun m!167057 () Bool)

(assert (=> d!43573 m!167057))

(declare-fun m!167059 () Bool)

(assert (=> b!139977 m!167059))

(declare-fun m!167061 () Bool)

(assert (=> b!139978 m!167061))

(declare-fun m!167063 () Bool)

(assert (=> b!139979 m!167063))

(assert (=> d!43533 d!43573))

(assert (=> d!43533 d!43537))

(declare-fun d!43575 () Bool)

(declare-fun e!91289 () Bool)

(assert (=> d!43575 e!91289))

(declare-fun res!66889 () Bool)

(assert (=> d!43575 (=> (not res!66889) (not e!91289))))

(declare-fun lt!73279 () ListLongMap!1685)

(assert (=> d!43575 (= res!66889 (contains!904 lt!73279 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73278 () List!1719)

(assert (=> d!43575 (= lt!73279 (ListLongMap!1686 lt!73278))))

(declare-fun lt!73277 () Unit!4387)

(declare-fun lt!73280 () Unit!4387)

(assert (=> d!43575 (= lt!73277 lt!73280)))

(assert (=> d!43575 (= (getValueByKey!177 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43575 (= lt!73280 (lemmaContainsTupThenGetReturnValue!91 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43575 (= lt!73278 (insertStrictlySorted!94 (toList!858 call!15471) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43575 (= (+!173 call!15471 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73279)))

(declare-fun b!139980 () Bool)

(declare-fun res!66890 () Bool)

(assert (=> b!139980 (=> (not res!66890) (not e!91289))))

(assert (=> b!139980 (= res!66890 (= (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!139981 () Bool)

(assert (=> b!139981 (= e!91289 (contains!907 (toList!858 lt!73279) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43575 res!66889) b!139980))

(assert (= (and b!139980 res!66890) b!139981))

(declare-fun m!167065 () Bool)

(assert (=> d!43575 m!167065))

(declare-fun m!167067 () Bool)

(assert (=> d!43575 m!167067))

(declare-fun m!167069 () Bool)

(assert (=> d!43575 m!167069))

(declare-fun m!167071 () Bool)

(assert (=> d!43575 m!167071))

(declare-fun m!167073 () Bool)

(assert (=> b!139980 m!167073))

(declare-fun m!167075 () Bool)

(assert (=> b!139981 m!167075))

(assert (=> b!139784 d!43575))

(declare-fun d!43577 () Bool)

(declare-fun lt!73283 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!138 (List!1720) (InoxSet (_ BitVec 64)))

(assert (=> d!43577 (= lt!73283 (select (content!138 Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!91295 () Bool)

(assert (=> d!43577 (= lt!73283 e!91295)))

(declare-fun res!66895 () Bool)

(assert (=> d!43577 (=> (not res!66895) (not e!91295))))

(assert (=> d!43577 (= res!66895 ((_ is Cons!1716) Nil!1717))))

(assert (=> d!43577 (= (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73283)))

(declare-fun b!139986 () Bool)

(declare-fun e!91294 () Bool)

(assert (=> b!139986 (= e!91295 e!91294)))

(declare-fun res!66896 () Bool)

(assert (=> b!139986 (=> res!66896 e!91294)))

(assert (=> b!139986 (= res!66896 (= (h!2323 Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139987 () Bool)

(assert (=> b!139987 (= e!91294 (contains!906 (t!6296 Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43577 res!66895) b!139986))

(assert (= (and b!139986 (not res!66896)) b!139987))

(declare-fun m!167077 () Bool)

(assert (=> d!43577 m!167077))

(assert (=> d!43577 m!166633))

(declare-fun m!167079 () Bool)

(assert (=> d!43577 m!167079))

(assert (=> b!139987 m!166633))

(declare-fun m!167081 () Bool)

(assert (=> b!139987 m!167081))

(assert (=> b!139823 d!43577))

(assert (=> d!43555 d!43565))

(declare-fun d!43579 () Bool)

(assert (=> d!43579 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139819 d!43579))

(assert (=> b!139821 d!43579))

(declare-fun d!43581 () Bool)

(assert (=> d!43581 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139878 d!43581))

(declare-fun d!43583 () Bool)

(declare-fun e!91296 () Bool)

(assert (=> d!43583 e!91296))

(declare-fun res!66897 () Bool)

(assert (=> d!43583 (=> res!66897 e!91296)))

(declare-fun lt!73287 () Bool)

(assert (=> d!43583 (= res!66897 (not lt!73287))))

(declare-fun lt!73284 () Bool)

(assert (=> d!43583 (= lt!73287 lt!73284)))

(declare-fun lt!73286 () Unit!4387)

(declare-fun e!91297 () Unit!4387)

(assert (=> d!43583 (= lt!73286 e!91297)))

(declare-fun c!26201 () Bool)

(assert (=> d!43583 (= c!26201 lt!73284)))

(assert (=> d!43583 (= lt!73284 (containsKey!180 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43583 (= (contains!904 e!91171 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73287)))

(declare-fun b!139988 () Bool)

(declare-fun lt!73285 () Unit!4387)

(assert (=> b!139988 (= e!91297 lt!73285)))

(assert (=> b!139988 (= lt!73285 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!139988 (isDefined!129 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!139989 () Bool)

(declare-fun Unit!4399 () Unit!4387)

(assert (=> b!139989 (= e!91297 Unit!4399)))

(declare-fun b!139990 () Bool)

(assert (=> b!139990 (= e!91296 (isDefined!129 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (= (and d!43583 c!26201) b!139988))

(assert (= (and d!43583 (not c!26201)) b!139989))

(assert (= (and d!43583 (not res!66897)) b!139990))

(assert (=> d!43583 m!166633))

(declare-fun m!167083 () Bool)

(assert (=> d!43583 m!167083))

(assert (=> b!139988 m!166633))

(declare-fun m!167085 () Bool)

(assert (=> b!139988 m!167085))

(assert (=> b!139988 m!166633))

(declare-fun m!167087 () Bool)

(assert (=> b!139988 m!167087))

(assert (=> b!139988 m!167087))

(declare-fun m!167089 () Bool)

(assert (=> b!139988 m!167089))

(assert (=> b!139990 m!166633))

(assert (=> b!139990 m!167087))

(assert (=> b!139990 m!167087))

(assert (=> b!139990 m!167089))

(assert (=> bm!15474 d!43583))

(declare-fun d!43585 () Bool)

(declare-fun e!91298 () Bool)

(assert (=> d!43585 e!91298))

(declare-fun res!66898 () Bool)

(assert (=> d!43585 (=> (not res!66898) (not e!91298))))

(declare-fun lt!73290 () ListLongMap!1685)

(assert (=> d!43585 (= res!66898 (contains!904 lt!73290 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73289 () List!1719)

(assert (=> d!43585 (= lt!73290 (ListLongMap!1686 lt!73289))))

(declare-fun lt!73288 () Unit!4387)

(declare-fun lt!73291 () Unit!4387)

(assert (=> d!43585 (= lt!73288 lt!73291)))

(assert (=> d!43585 (= (getValueByKey!177 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43585 (= lt!73291 (lemmaContainsTupThenGetReturnValue!91 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43585 (= lt!73289 (insertStrictlySorted!94 (toList!858 call!15501) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43585 (= (+!173 call!15501 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73290)))

(declare-fun b!139991 () Bool)

(declare-fun res!66899 () Bool)

(assert (=> b!139991 (=> (not res!66899) (not e!91298))))

(assert (=> b!139991 (= res!66899 (= (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!139992 () Bool)

(assert (=> b!139992 (= e!91298 (contains!907 (toList!858 lt!73290) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43585 res!66898) b!139991))

(assert (= (and b!139991 res!66899) b!139992))

(declare-fun m!167091 () Bool)

(assert (=> d!43585 m!167091))

(declare-fun m!167093 () Bool)

(assert (=> d!43585 m!167093))

(declare-fun m!167095 () Bool)

(assert (=> d!43585 m!167095))

(declare-fun m!167097 () Bool)

(assert (=> d!43585 m!167097))

(declare-fun m!167099 () Bool)

(assert (=> b!139991 m!167099))

(declare-fun m!167101 () Bool)

(assert (=> b!139992 m!167101))

(assert (=> b!139895 d!43585))

(assert (=> b!139785 d!43565))

(declare-fun d!43587 () Bool)

(assert (=> d!43587 (= (get!1534 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139799 d!43587))

(declare-fun d!43589 () Bool)

(assert (=> d!43589 (= (inRange!0 (ite c!26150 (ite c!26147 (index!3256 lt!73109) (ite c!26152 (index!3255 lt!73108) (index!3258 lt!73108))) (ite c!26139 (index!3256 lt!73114) (ite c!26148 (index!3255 lt!73130) (index!3258 lt!73130)))) (mask!7279 newMap!16)) (and (bvsge (ite c!26150 (ite c!26147 (index!3256 lt!73109) (ite c!26152 (index!3255 lt!73108) (index!3258 lt!73108))) (ite c!26139 (index!3256 lt!73114) (ite c!26148 (index!3255 lt!73130) (index!3258 lt!73130)))) #b00000000000000000000000000000000) (bvslt (ite c!26150 (ite c!26147 (index!3256 lt!73109) (ite c!26152 (index!3255 lt!73108) (index!3258 lt!73108))) (ite c!26139 (index!3256 lt!73114) (ite c!26148 (index!3255 lt!73130) (index!3258 lt!73130)))) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15457 d!43589))

(declare-fun bm!15517 () Bool)

(declare-fun call!15520 () Bool)

(assert (=> bm!15517 (= call!15520 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!140001 () Bool)

(declare-fun e!91307 () Bool)

(declare-fun e!91306 () Bool)

(assert (=> b!140001 (= e!91307 e!91306)))

(declare-fun c!26204 () Bool)

(assert (=> b!140001 (= c!26204 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140002 () Bool)

(declare-fun e!91305 () Bool)

(assert (=> b!140002 (= e!91306 e!91305)))

(declare-fun lt!73300 () (_ BitVec 64))

(assert (=> b!140002 (= lt!73300 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73298 () Unit!4387)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4879 (_ BitVec 64) (_ BitVec 32)) Unit!4387)

(assert (=> b!140002 (= lt!73298 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000))))

(assert (=> b!140002 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000)))

(declare-fun lt!73299 () Unit!4387)

(assert (=> b!140002 (= lt!73299 lt!73298)))

(declare-fun res!66904 () Bool)

(assert (=> b!140002 (= res!66904 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)) (Found!273 #b00000000000000000000000000000000)))))

(assert (=> b!140002 (=> (not res!66904) (not e!91305))))

(declare-fun d!43591 () Bool)

(declare-fun res!66905 () Bool)

(assert (=> d!43591 (=> res!66905 e!91307)))

(assert (=> d!43591 (= res!66905 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43591 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 newMap!16) (mask!7279 newMap!16)) e!91307)))

(declare-fun b!140003 () Bool)

(assert (=> b!140003 (= e!91306 call!15520)))

(declare-fun b!140004 () Bool)

(assert (=> b!140004 (= e!91305 call!15520)))

(assert (= (and d!43591 (not res!66905)) b!140001))

(assert (= (and b!140001 c!26204) b!140002))

(assert (= (and b!140001 (not c!26204)) b!140003))

(assert (= (and b!140002 res!66904) b!140004))

(assert (= (or b!140004 b!140003) bm!15517))

(declare-fun m!167103 () Bool)

(assert (=> bm!15517 m!167103))

(assert (=> b!140001 m!166927))

(assert (=> b!140001 m!166927))

(assert (=> b!140001 m!166957))

(assert (=> b!140002 m!166927))

(declare-fun m!167105 () Bool)

(assert (=> b!140002 m!167105))

(declare-fun m!167107 () Bool)

(assert (=> b!140002 m!167107))

(assert (=> b!140002 m!166927))

(declare-fun m!167109 () Bool)

(assert (=> b!140002 m!167109))

(assert (=> b!139807 d!43591))

(declare-fun d!43593 () Bool)

(declare-fun e!91308 () Bool)

(assert (=> d!43593 e!91308))

(declare-fun res!66906 () Bool)

(assert (=> d!43593 (=> res!66906 e!91308)))

(declare-fun lt!73304 () Bool)

(assert (=> d!43593 (= res!66906 (not lt!73304))))

(declare-fun lt!73301 () Bool)

(assert (=> d!43593 (= lt!73304 lt!73301)))

(declare-fun lt!73303 () Unit!4387)

(declare-fun e!91309 () Unit!4387)

(assert (=> d!43593 (= lt!73303 e!91309)))

(declare-fun c!26205 () Bool)

(assert (=> d!43593 (= c!26205 lt!73301)))

(assert (=> d!43593 (= lt!73301 (containsKey!180 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43593 (= (contains!904 lt!73184 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73304)))

(declare-fun b!140005 () Bool)

(declare-fun lt!73302 () Unit!4387)

(assert (=> b!140005 (= e!91309 lt!73302)))

(assert (=> b!140005 (= lt!73302 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140005 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140006 () Bool)

(declare-fun Unit!4400 () Unit!4387)

(assert (=> b!140006 (= e!91309 Unit!4400)))

(declare-fun b!140007 () Bool)

(assert (=> b!140007 (= e!91308 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43593 c!26205) b!140005))

(assert (= (and d!43593 (not c!26205)) b!140006))

(assert (= (and d!43593 (not res!66906)) b!140007))

(declare-fun m!167111 () Bool)

(assert (=> d!43593 m!167111))

(declare-fun m!167113 () Bool)

(assert (=> b!140005 m!167113))

(declare-fun m!167115 () Bool)

(assert (=> b!140005 m!167115))

(assert (=> b!140005 m!167115))

(declare-fun m!167117 () Bool)

(assert (=> b!140005 m!167117))

(assert (=> b!140007 m!167115))

(assert (=> b!140007 m!167115))

(assert (=> b!140007 m!167117))

(assert (=> bm!15500 d!43593))

(declare-fun d!43595 () Bool)

(declare-fun isEmpty!423 (Option!183) Bool)

(assert (=> d!43595 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun bs!5848 () Bool)

(assert (= bs!5848 d!43595))

(assert (=> bs!5848 m!166753))

(declare-fun m!167119 () Bool)

(assert (=> bs!5848 m!167119))

(assert (=> b!139667 d!43595))

(declare-fun b!140017 () Bool)

(declare-fun e!91314 () Option!183)

(declare-fun e!91315 () Option!183)

(assert (=> b!140017 (= e!91314 e!91315)))

(declare-fun c!26211 () Bool)

(assert (=> b!140017 (= c!26211 (and ((_ is Cons!1715) (toList!858 lt!73005)) (not (= (_1!1322 (h!2322 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!140018 () Bool)

(assert (=> b!140018 (= e!91315 (getValueByKey!177 (t!6295 (toList!858 lt!73005)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140016 () Bool)

(assert (=> b!140016 (= e!91314 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73005)))))))

(declare-fun b!140019 () Bool)

(assert (=> b!140019 (= e!91315 None!181)))

(declare-fun d!43597 () Bool)

(declare-fun c!26210 () Bool)

(assert (=> d!43597 (= c!26210 (and ((_ is Cons!1715) (toList!858 lt!73005)) (= (_1!1322 (h!2322 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43597 (= (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91314)))

(assert (= (and d!43597 c!26210) b!140016))

(assert (= (and d!43597 (not c!26210)) b!140017))

(assert (= (and b!140017 c!26211) b!140018))

(assert (= (and b!140017 (not c!26211)) b!140019))

(assert (=> b!140018 m!166633))

(declare-fun m!167121 () Bool)

(assert (=> b!140018 m!167121))

(assert (=> b!139667 d!43597))

(declare-fun d!43599 () Bool)

(assert (=> d!43599 (isDefined!129 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun lt!73307 () Unit!4387)

(declare-fun choose!864 (List!1719 (_ BitVec 64)) Unit!4387)

(assert (=> d!43599 (= lt!73307 (choose!864 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!91318 () Bool)

(assert (=> d!43599 e!91318))

(declare-fun res!66909 () Bool)

(assert (=> d!43599 (=> (not res!66909) (not e!91318))))

(declare-fun isStrictlySorted!312 (List!1719) Bool)

(assert (=> d!43599 (= res!66909 (isStrictlySorted!312 (toList!858 lt!73005)))))

(assert (=> d!43599 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73307)))

(declare-fun b!140022 () Bool)

(assert (=> b!140022 (= e!91318 (containsKey!180 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43599 res!66909) b!140022))

(assert (=> d!43599 m!166633))

(assert (=> d!43599 m!166753))

(assert (=> d!43599 m!166753))

(assert (=> d!43599 m!166755))

(assert (=> d!43599 m!166633))

(declare-fun m!167123 () Bool)

(assert (=> d!43599 m!167123))

(declare-fun m!167125 () Bool)

(assert (=> d!43599 m!167125))

(assert (=> b!140022 m!166633))

(assert (=> b!140022 m!166749))

(assert (=> b!139665 d!43599))

(assert (=> b!139665 d!43595))

(assert (=> b!139665 d!43597))

(assert (=> b!139896 d!43581))

(declare-fun b!140032 () Bool)

(declare-fun res!66918 () Bool)

(declare-fun e!91321 () Bool)

(assert (=> b!140032 (=> (not res!66918) (not e!91321))))

(declare-fun size!2584 (LongMapFixedSize!1150) (_ BitVec 32))

(assert (=> b!140032 (= res!66918 (bvsge (size!2584 newMap!16) (_size!624 newMap!16)))))

(declare-fun d!43601 () Bool)

(declare-fun res!66920 () Bool)

(assert (=> d!43601 (=> (not res!66920) (not e!91321))))

(assert (=> d!43601 (= res!66920 (validMask!0 (mask!7279 newMap!16)))))

(assert (=> d!43601 (= (simpleValid!96 newMap!16) e!91321)))

(declare-fun b!140033 () Bool)

(declare-fun res!66919 () Bool)

(assert (=> b!140033 (=> (not res!66919) (not e!91321))))

(assert (=> b!140033 (= res!66919 (= (size!2584 newMap!16) (bvadd (_size!624 newMap!16) (bvsdiv (bvadd (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140031 () Bool)

(declare-fun res!66921 () Bool)

(assert (=> b!140031 (=> (not res!66921) (not e!91321))))

(assert (=> b!140031 (= res!66921 (and (= (size!2579 (_values!2922 newMap!16)) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001)) (= (size!2578 (_keys!4698 newMap!16)) (size!2579 (_values!2922 newMap!16))) (bvsge (_size!624 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!624 newMap!16) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!140034 () Bool)

(assert (=> b!140034 (= e!91321 (and (bvsge (extraKeys!2694 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!624 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!43601 res!66920) b!140031))

(assert (= (and b!140031 res!66921) b!140032))

(assert (= (and b!140032 res!66918) b!140033))

(assert (= (and b!140033 res!66919) b!140034))

(declare-fun m!167127 () Bool)

(assert (=> b!140032 m!167127))

(assert (=> d!43601 m!166907))

(assert (=> b!140033 m!167127))

(assert (=> d!43537 d!43601))

(declare-fun b!140035 () Bool)

(declare-fun e!91324 () Bool)

(assert (=> b!140035 (= e!91324 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140036 () Bool)

(declare-fun e!91330 () Bool)

(declare-fun lt!73309 () ListLongMap!1685)

(assert (=> b!140036 (= e!91330 (= (apply!120 lt!73309 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140037 () Bool)

(declare-fun c!26216 () Bool)

(assert (=> b!140037 (= c!26216 (and (not (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91332 () ListLongMap!1685)

(declare-fun e!91322 () ListLongMap!1685)

(assert (=> b!140037 (= e!91332 e!91322)))

(declare-fun bm!15518 () Bool)

(declare-fun call!15521 () Bool)

(assert (=> bm!15518 (= call!15521 (contains!904 lt!73309 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140038 () Bool)

(declare-fun e!91331 () Bool)

(declare-fun e!91329 () Bool)

(assert (=> b!140038 (= e!91331 e!91329)))

(declare-fun c!26213 () Bool)

(assert (=> b!140038 (= c!26213 (not (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140039 () Bool)

(declare-fun e!91323 () Bool)

(declare-fun e!91325 () Bool)

(assert (=> b!140039 (= e!91323 e!91325)))

(declare-fun res!66930 () Bool)

(assert (=> b!140039 (=> (not res!66930) (not e!91325))))

(assert (=> b!140039 (= res!66930 (contains!904 lt!73309 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140039 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140040 () Bool)

(declare-fun res!66924 () Bool)

(assert (=> b!140040 (=> (not res!66924) (not e!91331))))

(declare-fun e!91328 () Bool)

(assert (=> b!140040 (= res!66924 e!91328)))

(declare-fun c!26217 () Bool)

(assert (=> b!140040 (= c!26217 (not (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140041 () Bool)

(declare-fun e!91333 () Bool)

(assert (=> b!140041 (= e!91333 (= (apply!120 lt!73309 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))

(declare-fun b!140042 () Bool)

(declare-fun call!15527 () Bool)

(assert (=> b!140042 (= e!91329 (not call!15527))))

(declare-fun b!140043 () Bool)

(assert (=> b!140043 (= e!91325 (= (apply!120 lt!73309 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140043 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (ite c!26142 (_values!2922 newMap!16) lt!73112))))))

(assert (=> b!140043 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15519 () Bool)

(declare-fun call!15524 () ListLongMap!1685)

(declare-fun call!15522 () ListLongMap!1685)

(assert (=> bm!15519 (= call!15524 call!15522)))

(declare-fun b!140044 () Bool)

(declare-fun res!66928 () Bool)

(assert (=> b!140044 (=> (not res!66928) (not e!91331))))

(assert (=> b!140044 (= res!66928 e!91323)))

(declare-fun res!66927 () Bool)

(assert (=> b!140044 (=> res!66927 e!91323)))

(assert (=> b!140044 (= res!66927 (not e!91324))))

(declare-fun res!66923 () Bool)

(assert (=> b!140044 (=> (not res!66923) (not e!91324))))

(assert (=> b!140044 (= res!66923 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15520 () Bool)

(declare-fun call!15523 () ListLongMap!1685)

(assert (=> bm!15520 (= call!15522 call!15523)))

(declare-fun b!140045 () Bool)

(declare-fun e!91326 () Unit!4387)

(declare-fun lt!73326 () Unit!4387)

(assert (=> b!140045 (= e!91326 lt!73326)))

(declare-fun lt!73313 () ListLongMap!1685)

(assert (=> b!140045 (= lt!73313 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73315 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73315 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73319 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73319 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73329 () Unit!4387)

(assert (=> b!140045 (= lt!73329 (addStillContains!96 lt!73313 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73319))))

(assert (=> b!140045 (contains!904 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73319)))

(declare-fun lt!73318 () Unit!4387)

(assert (=> b!140045 (= lt!73318 lt!73329)))

(declare-fun lt!73325 () ListLongMap!1685)

(assert (=> b!140045 (= lt!73325 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73314 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73314 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73320 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73320 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73323 () Unit!4387)

(assert (=> b!140045 (= lt!73323 (addApplyDifferent!96 lt!73325 lt!73314 (minValue!2789 newMap!16) lt!73320))))

(assert (=> b!140045 (= (apply!120 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) lt!73320) (apply!120 lt!73325 lt!73320))))

(declare-fun lt!73308 () Unit!4387)

(assert (=> b!140045 (= lt!73308 lt!73323)))

(declare-fun lt!73312 () ListLongMap!1685)

(assert (=> b!140045 (= lt!73312 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73322 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73322 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73310 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73310 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73321 () Unit!4387)

(assert (=> b!140045 (= lt!73321 (addApplyDifferent!96 lt!73312 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73310))))

(assert (=> b!140045 (= (apply!120 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73310) (apply!120 lt!73312 lt!73310))))

(declare-fun lt!73311 () Unit!4387)

(assert (=> b!140045 (= lt!73311 lt!73321)))

(declare-fun lt!73328 () ListLongMap!1685)

(assert (=> b!140045 (= lt!73328 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73324 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73324 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73327 () (_ BitVec 64))

(assert (=> b!140045 (= lt!73327 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140045 (= lt!73326 (addApplyDifferent!96 lt!73328 lt!73324 (minValue!2789 newMap!16) lt!73327))))

(assert (=> b!140045 (= (apply!120 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) lt!73327) (apply!120 lt!73328 lt!73327))))

(declare-fun bm!15521 () Bool)

(declare-fun call!15525 () ListLongMap!1685)

(declare-fun c!26215 () Bool)

(declare-fun c!26214 () Bool)

(assert (=> bm!15521 (= call!15525 (+!173 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!43603 () Bool)

(assert (=> d!43603 e!91331))

(declare-fun res!66922 () Bool)

(assert (=> d!43603 (=> (not res!66922) (not e!91331))))

(assert (=> d!43603 (= res!66922 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73316 () ListLongMap!1685)

(assert (=> d!43603 (= lt!73309 lt!73316)))

(declare-fun lt!73317 () Unit!4387)

(assert (=> d!43603 (= lt!73317 e!91326)))

(declare-fun c!26212 () Bool)

(declare-fun e!91327 () Bool)

(assert (=> d!43603 (= c!26212 e!91327)))

(declare-fun res!66925 () Bool)

(assert (=> d!43603 (=> (not res!66925) (not e!91327))))

(assert (=> d!43603 (= res!66925 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91334 () ListLongMap!1685)

(assert (=> d!43603 (= lt!73316 e!91334)))

(assert (=> d!43603 (= c!26214 (and (not (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43603 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43603 (= (getCurrentListMap!531 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73309)))

(declare-fun b!140046 () Bool)

(assert (=> b!140046 (= e!91322 call!15524)))

(declare-fun b!140047 () Bool)

(declare-fun Unit!4401 () Unit!4387)

(assert (=> b!140047 (= e!91326 Unit!4401)))

(declare-fun b!140048 () Bool)

(assert (=> b!140048 (= e!91329 e!91330)))

(declare-fun res!66926 () Bool)

(assert (=> b!140048 (= res!66926 call!15527)))

(assert (=> b!140048 (=> (not res!66926) (not e!91330))))

(declare-fun b!140049 () Bool)

(assert (=> b!140049 (= e!91328 e!91333)))

(declare-fun res!66929 () Bool)

(assert (=> b!140049 (= res!66929 call!15521)))

(assert (=> b!140049 (=> (not res!66929) (not e!91333))))

(declare-fun b!140050 () Bool)

(declare-fun call!15526 () ListLongMap!1685)

(assert (=> b!140050 (= e!91322 call!15526)))

(declare-fun b!140051 () Bool)

(assert (=> b!140051 (= e!91332 call!15526)))

(declare-fun b!140052 () Bool)

(assert (=> b!140052 (= e!91334 (+!173 call!15525 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15522 () Bool)

(assert (=> bm!15522 (= call!15523 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140053 () Bool)

(assert (=> b!140053 (= e!91327 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140054 () Bool)

(assert (=> b!140054 (= e!91334 e!91332)))

(assert (=> b!140054 (= c!26215 (and (not (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140055 () Bool)

(assert (=> b!140055 (= e!91328 (not call!15521))))

(declare-fun bm!15523 () Bool)

(assert (=> bm!15523 (= call!15526 call!15525)))

(declare-fun bm!15524 () Bool)

(assert (=> bm!15524 (= call!15527 (contains!904 lt!73309 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43603 c!26214) b!140052))

(assert (= (and d!43603 (not c!26214)) b!140054))

(assert (= (and b!140054 c!26215) b!140051))

(assert (= (and b!140054 (not c!26215)) b!140037))

(assert (= (and b!140037 c!26216) b!140050))

(assert (= (and b!140037 (not c!26216)) b!140046))

(assert (= (or b!140050 b!140046) bm!15519))

(assert (= (or b!140051 bm!15519) bm!15520))

(assert (= (or b!140051 b!140050) bm!15523))

(assert (= (or b!140052 bm!15520) bm!15522))

(assert (= (or b!140052 bm!15523) bm!15521))

(assert (= (and d!43603 res!66925) b!140053))

(assert (= (and d!43603 c!26212) b!140045))

(assert (= (and d!43603 (not c!26212)) b!140047))

(assert (= (and d!43603 res!66922) b!140044))

(assert (= (and b!140044 res!66923) b!140035))

(assert (= (and b!140044 (not res!66927)) b!140039))

(assert (= (and b!140039 res!66930) b!140043))

(assert (= (and b!140044 res!66928) b!140040))

(assert (= (and b!140040 c!26217) b!140049))

(assert (= (and b!140040 (not c!26217)) b!140055))

(assert (= (and b!140049 res!66929) b!140041))

(assert (= (or b!140049 b!140055) bm!15518))

(assert (= (and b!140040 res!66924) b!140038))

(assert (= (and b!140038 c!26213) b!140048))

(assert (= (and b!140038 (not c!26213)) b!140042))

(assert (= (and b!140048 res!66926) b!140036))

(assert (= (or b!140048 b!140042) bm!15524))

(declare-fun b_lambda!6275 () Bool)

(assert (=> (not b_lambda!6275) (not b!140043)))

(assert (=> b!140043 t!6309))

(declare-fun b_and!8753 () Bool)

(assert (= b_and!8749 (and (=> t!6309 result!4187) b_and!8753)))

(assert (=> b!140043 t!6311))

(declare-fun b_and!8755 () Bool)

(assert (= b_and!8751 (and (=> t!6311 result!4189) b_and!8755)))

(declare-fun m!167129 () Bool)

(assert (=> b!140045 m!167129))

(declare-fun m!167131 () Bool)

(assert (=> b!140045 m!167131))

(declare-fun m!167133 () Bool)

(assert (=> b!140045 m!167133))

(declare-fun m!167135 () Bool)

(assert (=> b!140045 m!167135))

(declare-fun m!167137 () Bool)

(assert (=> b!140045 m!167137))

(assert (=> b!140045 m!166927))

(assert (=> b!140045 m!167129))

(declare-fun m!167139 () Bool)

(assert (=> b!140045 m!167139))

(declare-fun m!167141 () Bool)

(assert (=> b!140045 m!167141))

(assert (=> b!140045 m!167141))

(declare-fun m!167143 () Bool)

(assert (=> b!140045 m!167143))

(declare-fun m!167145 () Bool)

(assert (=> b!140045 m!167145))

(declare-fun m!167147 () Bool)

(assert (=> b!140045 m!167147))

(declare-fun m!167149 () Bool)

(assert (=> b!140045 m!167149))

(declare-fun m!167151 () Bool)

(assert (=> b!140045 m!167151))

(declare-fun m!167153 () Bool)

(assert (=> b!140045 m!167153))

(declare-fun m!167155 () Bool)

(assert (=> b!140045 m!167155))

(assert (=> b!140045 m!167135))

(declare-fun m!167157 () Bool)

(assert (=> b!140045 m!167157))

(assert (=> b!140045 m!167147))

(declare-fun m!167159 () Bool)

(assert (=> b!140045 m!167159))

(declare-fun m!167161 () Bool)

(assert (=> b!140052 m!167161))

(declare-fun m!167163 () Bool)

(assert (=> b!140041 m!167163))

(declare-fun m!167165 () Bool)

(assert (=> bm!15518 m!167165))

(assert (=> b!140035 m!166927))

(assert (=> b!140035 m!166927))

(assert (=> b!140035 m!166957))

(declare-fun m!167167 () Bool)

(assert (=> b!140036 m!167167))

(declare-fun m!167169 () Bool)

(assert (=> b!140043 m!167169))

(assert (=> b!140043 m!167169))

(assert (=> b!140043 m!166963))

(declare-fun m!167171 () Bool)

(assert (=> b!140043 m!167171))

(assert (=> b!140043 m!166927))

(assert (=> b!140043 m!166927))

(declare-fun m!167173 () Bool)

(assert (=> b!140043 m!167173))

(assert (=> b!140043 m!166963))

(declare-fun m!167175 () Bool)

(assert (=> bm!15524 m!167175))

(assert (=> d!43603 m!166907))

(declare-fun m!167177 () Bool)

(assert (=> bm!15521 m!167177))

(assert (=> bm!15522 m!167137))

(assert (=> b!140039 m!166927))

(assert (=> b!140039 m!166927))

(declare-fun m!167179 () Bool)

(assert (=> b!140039 m!167179))

(assert (=> b!140053 m!166927))

(assert (=> b!140053 m!166927))

(assert (=> b!140053 m!166957))

(assert (=> bm!15460 d!43603))

(declare-fun b!140090 () Bool)

(declare-fun e!91355 () Bool)

(declare-fun call!15536 () Bool)

(assert (=> b!140090 (= e!91355 (not call!15536))))

(declare-fun d!43605 () Bool)

(declare-fun e!91356 () Bool)

(assert (=> d!43605 e!91356))

(declare-fun res!66951 () Bool)

(assert (=> d!43605 (=> (not res!66951) (not e!91356))))

(declare-fun lt!73410 () tuple2!2624)

(assert (=> d!43605 (= res!66951 (_1!1323 lt!73410))))

(assert (=> d!43605 (= lt!73410 (tuple2!2625 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd (_size!624 newMap!16) #b00000000000000000000000000000001) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (_vacant!624 newMap!16))))))

(declare-fun lt!73404 () Unit!4387)

(declare-fun lt!73418 () Unit!4387)

(assert (=> d!43605 (= lt!73404 lt!73418)))

(declare-fun lt!73413 () array!4881)

(declare-fun lt!73406 () array!4879)

(assert (=> d!43605 (contains!904 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(assert (=> d!43605 (= lt!73418 (lemmaValidKeyInArrayIsInListMap!125 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43605 (= lt!73413 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))))

(assert (=> d!43605 (= lt!73406 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun lt!73398 () Unit!4387)

(declare-fun lt!73402 () Unit!4387)

(assert (=> d!43605 (= lt!73398 lt!73402)))

(declare-fun lt!73415 () array!4879)

(assert (=> d!43605 (= (arrayCountValidKeys!0 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4879 (_ BitVec 32)) Unit!4387)

(assert (=> d!43605 (= lt!73402 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(assert (=> d!43605 (= lt!73415 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun lt!73419 () Unit!4387)

(declare-fun lt!73416 () Unit!4387)

(assert (=> d!43605 (= lt!73419 lt!73416)))

(declare-fun lt!73414 () array!4879)

(assert (=> d!43605 (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!43605 (= lt!73416 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(assert (=> d!43605 (= lt!73414 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun lt!73409 () Unit!4387)

(declare-fun lt!73393 () Unit!4387)

(assert (=> d!43605 (= lt!73409 lt!73393)))

(assert (=> d!43605 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!45 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4387)

(assert (=> d!43605 (= lt!73393 (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73391 () Unit!4387)

(declare-fun lt!73417 () Unit!4387)

(assert (=> d!43605 (= lt!73391 lt!73417)))

(assert (=> d!43605 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4879 (_ BitVec 32) (_ BitVec 32)) Unit!4387)

(assert (=> d!43605 (= lt!73417 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (mask!7279 newMap!16)))))

(declare-fun lt!73395 () Unit!4387)

(declare-fun lt!73412 () Unit!4387)

(assert (=> d!43605 (= lt!73395 lt!73412)))

(assert (=> d!43605 (= (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4879 (_ BitVec 32) (_ BitVec 64)) Unit!4387)

(assert (=> d!43605 (= lt!73412 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun lt!73390 () Unit!4387)

(declare-fun lt!73411 () Unit!4387)

(assert (=> d!43605 (= lt!73390 lt!73411)))

(declare-fun lt!73399 () (_ BitVec 32))

(declare-fun lt!73396 () List!1720)

(assert (=> d!43605 (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73399 lt!73396)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4879 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1720) Unit!4387)

(assert (=> d!43605 (= lt!73411 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) lt!73399 lt!73396))))

(assert (=> d!43605 (= lt!73396 Nil!1717)))

(assert (=> d!43605 (= lt!73399 #b00000000000000000000000000000000)))

(declare-fun lt!73405 () Unit!4387)

(declare-fun e!91351 () Unit!4387)

(assert (=> d!43605 (= lt!73405 e!91351)))

(declare-fun c!26226 () Bool)

(assert (=> d!43605 (= c!26226 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!73408 () Unit!4387)

(declare-fun e!91354 () Unit!4387)

(assert (=> d!43605 (= lt!73408 e!91354)))

(declare-fun c!26228 () Bool)

(assert (=> d!43605 (= c!26228 (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43605 (valid!567 newMap!16)))

(assert (=> d!43605 (= (updateHelperNewKey!65 newMap!16 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) lt!73410)))

(declare-fun b!140091 () Bool)

(declare-fun Unit!4402 () Unit!4387)

(assert (=> b!140091 (= e!91351 Unit!4402)))

(declare-fun lt!73394 () Unit!4387)

(declare-fun lemmaArrayContainsKeyThenInListMap!45 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4387)

(assert (=> b!140091 (= lt!73394 (lemmaArrayContainsKeyThenInListMap!45 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> b!140091 (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))

(declare-fun lt!73392 () Unit!4387)

(assert (=> b!140091 (= lt!73392 lt!73394)))

(assert (=> b!140091 false))

(declare-fun bm!15533 () Bool)

(declare-fun call!15538 () Bool)

(declare-fun call!15537 () Bool)

(assert (=> bm!15533 (= call!15538 call!15537)))

(declare-fun b!140092 () Bool)

(declare-fun Unit!4403 () Unit!4387)

(assert (=> b!140092 (= e!91354 Unit!4403)))

(declare-fun lt!73407 () Unit!4387)

(assert (=> b!140092 (= lt!73407 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73403 () SeekEntryResult!273)

(declare-fun call!15539 () SeekEntryResult!273)

(assert (=> b!140092 (= lt!73403 call!15539)))

(declare-fun res!66954 () Bool)

(assert (=> b!140092 (= res!66954 ((_ is Found!273) lt!73403))))

(declare-fun e!91352 () Bool)

(assert (=> b!140092 (=> (not res!66954) (not e!91352))))

(assert (=> b!140092 e!91352))

(declare-fun lt!73397 () Unit!4387)

(assert (=> b!140092 (= lt!73397 lt!73407)))

(assert (=> b!140092 false))

(declare-fun b!140093 () Bool)

(assert (=> b!140093 (= e!91352 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73403)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun bm!15534 () Bool)

(assert (=> bm!15534 (= call!15539 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun c!26229 () Bool)

(declare-fun lt!73400 () SeekEntryResult!273)

(declare-fun bm!15535 () Bool)

(assert (=> bm!15535 (= call!15537 (inRange!0 (ite c!26228 (index!3256 lt!73403) (ite c!26229 (index!3255 lt!73400) (index!3258 lt!73400))) (mask!7279 newMap!16)))))

(declare-fun bm!15536 () Bool)

(assert (=> bm!15536 (= call!15536 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140094 () Bool)

(declare-fun res!66949 () Bool)

(assert (=> b!140094 (=> (not res!66949) (not e!91356))))

(assert (=> b!140094 (= res!66949 (contains!904 (map!1429 (_2!1323 lt!73410)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140095 () Bool)

(declare-fun e!91353 () Bool)

(assert (=> b!140095 (= e!91353 (not call!15536))))

(declare-fun b!140096 () Bool)

(declare-fun res!66953 () Bool)

(assert (=> b!140096 (=> (not res!66953) (not e!91353))))

(assert (=> b!140096 (= res!66953 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73400)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140097 () Bool)

(declare-fun res!66955 () Bool)

(assert (=> b!140097 (= res!66955 call!15537)))

(assert (=> b!140097 (=> (not res!66955) (not e!91352))))

(declare-fun b!140098 () Bool)

(declare-fun e!91358 () Bool)

(assert (=> b!140098 (= e!91358 ((_ is Undefined!273) lt!73400))))

(declare-fun b!140099 () Bool)

(declare-fun res!66956 () Bool)

(assert (=> b!140099 (=> (not res!66956) (not e!91353))))

(assert (=> b!140099 (= res!66956 call!15538)))

(declare-fun e!91357 () Bool)

(assert (=> b!140099 (= e!91357 e!91353)))

(declare-fun b!140100 () Bool)

(declare-fun Unit!4404 () Unit!4387)

(assert (=> b!140100 (= e!91351 Unit!4404)))

(declare-fun b!140101 () Bool)

(assert (=> b!140101 (= e!91356 (= (map!1429 (_2!1323 lt!73410)) (+!173 (map!1429 newMap!16) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140102 () Bool)

(declare-fun res!66950 () Bool)

(assert (=> b!140102 (=> (not res!66950) (not e!91356))))

(assert (=> b!140102 (= res!66950 (valid!567 (_2!1323 lt!73410)))))

(declare-fun b!140103 () Bool)

(declare-fun res!66957 () Bool)

(assert (=> b!140103 (= res!66957 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73400)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140103 (=> (not res!66957) (not e!91355))))

(declare-fun b!140104 () Bool)

(declare-fun c!26227 () Bool)

(assert (=> b!140104 (= c!26227 ((_ is MissingVacant!273) lt!73400))))

(assert (=> b!140104 (= e!91357 e!91358)))

(declare-fun b!140105 () Bool)

(declare-fun lt!73401 () Unit!4387)

(assert (=> b!140105 (= e!91354 lt!73401)))

(assert (=> b!140105 (= lt!73401 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(assert (=> b!140105 (= lt!73400 call!15539)))

(assert (=> b!140105 (= c!26229 ((_ is MissingZero!273) lt!73400))))

(assert (=> b!140105 e!91357))

(declare-fun b!140106 () Bool)

(assert (=> b!140106 (= e!91358 e!91355)))

(declare-fun res!66952 () Bool)

(assert (=> b!140106 (= res!66952 call!15538)))

(assert (=> b!140106 (=> (not res!66952) (not e!91355))))

(assert (= (and d!43605 c!26228) b!140092))

(assert (= (and d!43605 (not c!26228)) b!140105))

(assert (= (and b!140092 res!66954) b!140097))

(assert (= (and b!140097 res!66955) b!140093))

(assert (= (and b!140105 c!26229) b!140099))

(assert (= (and b!140105 (not c!26229)) b!140104))

(assert (= (and b!140099 res!66956) b!140096))

(assert (= (and b!140096 res!66953) b!140095))

(assert (= (and b!140104 c!26227) b!140106))

(assert (= (and b!140104 (not c!26227)) b!140098))

(assert (= (and b!140106 res!66952) b!140103))

(assert (= (and b!140103 res!66957) b!140090))

(assert (= (or b!140099 b!140106) bm!15533))

(assert (= (or b!140095 b!140090) bm!15536))

(assert (= (or b!140097 bm!15533) bm!15535))

(assert (= (or b!140092 b!140105) bm!15534))

(assert (= (and d!43605 c!26226) b!140091))

(assert (= (and d!43605 (not c!26226)) b!140100))

(assert (= (and d!43605 res!66951) b!140102))

(assert (= (and b!140102 res!66950) b!140094))

(assert (= (and b!140094 res!66949) b!140101))

(assert (=> b!140091 m!166633))

(declare-fun m!167181 () Bool)

(assert (=> b!140091 m!167181))

(assert (=> b!140091 m!166773))

(assert (=> b!140091 m!166773))

(assert (=> b!140091 m!166633))

(declare-fun m!167183 () Bool)

(assert (=> b!140091 m!167183))

(declare-fun m!167185 () Bool)

(assert (=> d!43605 m!167185))

(declare-fun m!167187 () Bool)

(assert (=> d!43605 m!167187))

(declare-fun m!167189 () Bool)

(assert (=> d!43605 m!167189))

(assert (=> d!43605 m!167185))

(declare-fun m!167191 () Bool)

(assert (=> d!43605 m!167191))

(assert (=> d!43605 m!166633))

(declare-fun m!167193 () Bool)

(assert (=> d!43605 m!167193))

(assert (=> d!43605 m!166645))

(declare-fun m!167195 () Bool)

(assert (=> d!43605 m!167195))

(declare-fun m!167197 () Bool)

(assert (=> d!43605 m!167197))

(assert (=> d!43605 m!166633))

(declare-fun m!167199 () Bool)

(assert (=> d!43605 m!167199))

(assert (=> d!43605 m!166773))

(assert (=> d!43605 m!166633))

(assert (=> d!43605 m!166767))

(assert (=> d!43605 m!166633))

(declare-fun m!167201 () Bool)

(assert (=> d!43605 m!167201))

(assert (=> d!43605 m!166633))

(assert (=> d!43605 m!166663))

(declare-fun m!167203 () Bool)

(assert (=> d!43605 m!167203))

(declare-fun m!167205 () Bool)

(assert (=> d!43605 m!167205))

(assert (=> d!43605 m!167189))

(declare-fun m!167207 () Bool)

(assert (=> d!43605 m!167207))

(declare-fun m!167209 () Bool)

(assert (=> d!43605 m!167209))

(declare-fun m!167211 () Bool)

(assert (=> d!43605 m!167211))

(assert (=> d!43605 m!166633))

(declare-fun m!167213 () Bool)

(assert (=> d!43605 m!167213))

(declare-fun m!167215 () Bool)

(assert (=> d!43605 m!167215))

(assert (=> d!43605 m!166773))

(assert (=> d!43605 m!166633))

(assert (=> d!43605 m!167183))

(assert (=> d!43605 m!166773))

(declare-fun m!167217 () Bool)

(assert (=> d!43605 m!167217))

(declare-fun m!167219 () Bool)

(assert (=> d!43605 m!167219))

(assert (=> d!43605 m!166633))

(declare-fun m!167221 () Bool)

(assert (=> d!43605 m!167221))

(assert (=> d!43605 m!166819))

(assert (=> b!140105 m!166633))

(assert (=> b!140105 m!166809))

(assert (=> b!140092 m!166633))

(assert (=> b!140092 m!166807))

(declare-fun m!167223 () Bool)

(assert (=> b!140102 m!167223))

(declare-fun m!167225 () Bool)

(assert (=> bm!15535 m!167225))

(declare-fun m!167227 () Bool)

(assert (=> b!140094 m!167227))

(assert (=> b!140094 m!167227))

(assert (=> b!140094 m!166633))

(declare-fun m!167229 () Bool)

(assert (=> b!140094 m!167229))

(declare-fun m!167231 () Bool)

(assert (=> b!140096 m!167231))

(assert (=> bm!15536 m!166633))

(assert (=> bm!15536 m!166767))

(assert (=> bm!15534 m!166633))

(assert (=> bm!15534 m!166787))

(assert (=> b!140101 m!167227))

(assert (=> b!140101 m!166655))

(assert (=> b!140101 m!166655))

(declare-fun m!167233 () Bool)

(assert (=> b!140101 m!167233))

(declare-fun m!167235 () Bool)

(assert (=> b!140103 m!167235))

(declare-fun m!167237 () Bool)

(assert (=> b!140093 m!167237))

(assert (=> bm!15467 d!43605))

(declare-fun d!43607 () Bool)

(declare-fun res!66958 () Bool)

(declare-fun e!91359 () Bool)

(assert (=> d!43607 (=> res!66958 e!91359)))

(assert (=> d!43607 (= res!66958 (= (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43607 (= (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91359)))

(declare-fun b!140107 () Bool)

(declare-fun e!91360 () Bool)

(assert (=> b!140107 (= e!91359 e!91360)))

(declare-fun res!66959 () Bool)

(assert (=> b!140107 (=> (not res!66959) (not e!91360))))

(assert (=> b!140107 (= res!66959 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140108 () Bool)

(assert (=> b!140108 (= e!91360 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43607 (not res!66958)) b!140107))

(assert (= (and b!140107 res!66959) b!140108))

(assert (=> d!43607 m!166927))

(assert (=> b!140108 m!166633))

(declare-fun m!167239 () Bool)

(assert (=> b!140108 m!167239))

(assert (=> bm!15476 d!43607))

(declare-fun d!43609 () Bool)

(declare-fun get!1535 (Option!183) V!3553)

(assert (=> d!43609 (= (apply!120 lt!73184 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1535 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5849 () Bool)

(assert (= bs!5849 d!43609))

(assert (=> bs!5849 m!166833))

(declare-fun m!167241 () Bool)

(assert (=> bs!5849 m!167241))

(assert (=> bs!5849 m!167241))

(declare-fun m!167243 () Bool)

(assert (=> bs!5849 m!167243))

(assert (=> b!139886 d!43609))

(declare-fun d!43611 () Bool)

(declare-fun c!26230 () Bool)

(assert (=> d!43611 (= c!26230 ((_ is ValueCellFull!1121) (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91361 () V!3553)

(assert (=> d!43611 (= (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91361)))

(declare-fun b!140109 () Bool)

(assert (=> b!140109 (= e!91361 (get!1533 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140110 () Bool)

(assert (=> b!140110 (= e!91361 (get!1534 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43611 c!26230) b!140109))

(assert (= (and d!43611 (not c!26230)) b!140110))

(assert (=> b!140109 m!166883))

(assert (=> b!140109 m!166661))

(declare-fun m!167245 () Bool)

(assert (=> b!140109 m!167245))

(assert (=> b!140110 m!166883))

(assert (=> b!140110 m!166661))

(declare-fun m!167247 () Bool)

(assert (=> b!140110 m!167247))

(assert (=> b!139886 d!43611))

(declare-fun call!15540 () Bool)

(declare-fun c!26231 () Bool)

(declare-fun bm!15537 () Bool)

(assert (=> bm!15537 (= call!15540 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))))))

(declare-fun b!140111 () Bool)

(declare-fun e!91362 () Bool)

(declare-fun e!91363 () Bool)

(assert (=> b!140111 (= e!91362 e!91363)))

(declare-fun res!66962 () Bool)

(assert (=> b!140111 (=> (not res!66962) (not e!91363))))

(declare-fun e!91365 () Bool)

(assert (=> b!140111 (= res!66962 (not e!91365))))

(declare-fun res!66960 () Bool)

(assert (=> b!140111 (=> (not res!66960) (not e!91365))))

(assert (=> b!140111 (= res!66960 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140112 () Bool)

(declare-fun e!91364 () Bool)

(assert (=> b!140112 (= e!91364 call!15540)))

(declare-fun b!140113 () Bool)

(assert (=> b!140113 (= e!91363 e!91364)))

(assert (=> b!140113 (= c!26231 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!43613 () Bool)

(declare-fun res!66961 () Bool)

(assert (=> d!43613 (=> res!66961 e!91362)))

(assert (=> d!43613 (= res!66961 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43613 (= (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) e!91362)))

(declare-fun b!140114 () Bool)

(assert (=> b!140114 (= e!91364 call!15540)))

(declare-fun b!140115 () Bool)

(assert (=> b!140115 (= e!91365 (contains!906 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!43613 (not res!66961)) b!140111))

(assert (= (and b!140111 res!66960) b!140115))

(assert (= (and b!140111 res!66962) b!140113))

(assert (= (and b!140113 c!26231) b!140112))

(assert (= (and b!140113 (not c!26231)) b!140114))

(assert (= (or b!140112 b!140114) bm!15537))

(declare-fun m!167249 () Bool)

(assert (=> bm!15537 m!167249))

(declare-fun m!167251 () Bool)

(assert (=> bm!15537 m!167251))

(assert (=> b!140111 m!167249))

(assert (=> b!140111 m!167249))

(declare-fun m!167253 () Bool)

(assert (=> b!140111 m!167253))

(assert (=> b!140113 m!167249))

(assert (=> b!140113 m!167249))

(assert (=> b!140113 m!167253))

(assert (=> b!140115 m!167249))

(assert (=> b!140115 m!167249))

(declare-fun m!167255 () Bool)

(assert (=> b!140115 m!167255))

(assert (=> bm!15479 d!43613))

(declare-fun d!43615 () Bool)

(declare-fun res!66967 () Bool)

(declare-fun e!91370 () Bool)

(assert (=> d!43615 (=> res!66967 e!91370)))

(assert (=> d!43615 (= res!66967 (and ((_ is Cons!1715) (toList!858 lt!73005)) (= (_1!1322 (h!2322 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43615 (= (containsKey!180 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91370)))

(declare-fun b!140120 () Bool)

(declare-fun e!91371 () Bool)

(assert (=> b!140120 (= e!91370 e!91371)))

(declare-fun res!66968 () Bool)

(assert (=> b!140120 (=> (not res!66968) (not e!91371))))

(assert (=> b!140120 (= res!66968 (and (or (not ((_ is Cons!1715) (toList!858 lt!73005))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 lt!73005)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!140121 () Bool)

(assert (=> b!140121 (= e!91371 (containsKey!180 (t!6295 (toList!858 lt!73005)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43615 (not res!66967)) b!140120))

(assert (= (and b!140120 res!66968) b!140121))

(assert (=> b!140121 m!166633))

(declare-fun m!167257 () Bool)

(assert (=> b!140121 m!167257))

(assert (=> d!43531 d!43615))

(declare-fun d!43617 () Bool)

(assert (=> d!43617 (= (apply!120 lt!73184 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5850 () Bool)

(assert (= bs!5850 d!43617))

(declare-fun m!167259 () Bool)

(assert (=> bs!5850 m!167259))

(assert (=> bs!5850 m!167259))

(declare-fun m!167261 () Bool)

(assert (=> bs!5850 m!167261))

(assert (=> b!139884 d!43617))

(assert (=> bm!15454 d!43555))

(declare-fun d!43619 () Bool)

(assert (=> d!43619 (= (map!1429 (_2!1323 lt!73124)) (getCurrentListMap!531 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun bs!5851 () Bool)

(assert (= bs!5851 d!43619))

(declare-fun m!167263 () Bool)

(assert (=> bs!5851 m!167263))

(assert (=> bm!15461 d!43619))

(declare-fun d!43621 () Bool)

(assert (=> d!43621 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73422 () Unit!4387)

(declare-fun choose!865 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4387)

(assert (=> d!43621 (= lt!73422 (choose!865 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73116 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43621 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43621 (= (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73116 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)) lt!73422)))

(declare-fun bs!5852 () Bool)

(assert (= bs!5852 d!43621))

(assert (=> bs!5852 m!166773))

(declare-fun m!167265 () Bool)

(assert (=> bs!5852 m!167265))

(assert (=> bs!5852 m!166663))

(declare-fun m!167267 () Bool)

(assert (=> bs!5852 m!167267))

(assert (=> bs!5852 m!166907))

(assert (=> bs!5852 m!166773))

(assert (=> bs!5852 m!166663))

(declare-fun m!167269 () Bool)

(assert (=> bs!5852 m!167269))

(assert (=> b!139770 d!43621))

(declare-fun d!43623 () Bool)

(declare-fun e!91372 () Bool)

(assert (=> d!43623 e!91372))

(declare-fun res!66969 () Bool)

(assert (=> d!43623 (=> (not res!66969) (not e!91372))))

(declare-fun lt!73425 () ListLongMap!1685)

(assert (=> d!43623 (= res!66969 (contains!904 lt!73425 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73424 () List!1719)

(assert (=> d!43623 (= lt!73425 (ListLongMap!1686 lt!73424))))

(declare-fun lt!73423 () Unit!4387)

(declare-fun lt!73426 () Unit!4387)

(assert (=> d!43623 (= lt!73423 lt!73426)))

(assert (=> d!43623 (= (getValueByKey!177 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43623 (= lt!73426 (lemmaContainsTupThenGetReturnValue!91 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43623 (= lt!73424 (insertStrictlySorted!94 (toList!858 lt!73200) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43623 (= (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73425)))

(declare-fun b!140122 () Bool)

(declare-fun res!66970 () Bool)

(assert (=> b!140122 (=> (not res!66970) (not e!91372))))

(assert (=> b!140122 (= res!66970 (= (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140123 () Bool)

(assert (=> b!140123 (= e!91372 (contains!907 (toList!858 lt!73425) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43623 res!66969) b!140122))

(assert (= (and b!140122 res!66970) b!140123))

(declare-fun m!167271 () Bool)

(assert (=> d!43623 m!167271))

(declare-fun m!167273 () Bool)

(assert (=> d!43623 m!167273))

(declare-fun m!167275 () Bool)

(assert (=> d!43623 m!167275))

(declare-fun m!167277 () Bool)

(assert (=> d!43623 m!167277))

(declare-fun m!167279 () Bool)

(assert (=> b!140122 m!167279))

(declare-fun m!167281 () Bool)

(assert (=> b!140123 m!167281))

(assert (=> b!139888 d!43623))

(declare-fun d!43625 () Bool)

(assert (=> d!43625 (contains!904 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73194)))

(declare-fun lt!73429 () Unit!4387)

(declare-fun choose!866 (ListLongMap!1685 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4387)

(assert (=> d!43625 (= lt!73429 (choose!866 lt!73188 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73194))))

(assert (=> d!43625 (contains!904 lt!73188 lt!73194)))

(assert (=> d!43625 (= (addStillContains!96 lt!73188 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73194) lt!73429)))

(declare-fun bs!5853 () Bool)

(assert (= bs!5853 d!43625))

(assert (=> bs!5853 m!166853))

(assert (=> bs!5853 m!166853))

(assert (=> bs!5853 m!166855))

(declare-fun m!167283 () Bool)

(assert (=> bs!5853 m!167283))

(declare-fun m!167285 () Bool)

(assert (=> bs!5853 m!167285))

(assert (=> b!139888 d!43625))

(declare-fun d!43627 () Bool)

(assert (=> d!43627 (= (apply!120 lt!73203 lt!73202) (get!1535 (getValueByKey!177 (toList!858 lt!73203) lt!73202)))))

(declare-fun bs!5854 () Bool)

(assert (= bs!5854 d!43627))

(declare-fun m!167287 () Bool)

(assert (=> bs!5854 m!167287))

(assert (=> bs!5854 m!167287))

(declare-fun m!167289 () Bool)

(assert (=> bs!5854 m!167289))

(assert (=> b!139888 d!43627))

(declare-fun b!140149 () Bool)

(declare-fun res!66980 () Bool)

(declare-fun e!91392 () Bool)

(assert (=> b!140149 (=> (not res!66980) (not e!91392))))

(declare-fun lt!73446 () ListLongMap!1685)

(assert (=> b!140149 (= res!66980 (not (contains!904 lt!73446 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140150 () Bool)

(declare-fun e!91388 () Bool)

(assert (=> b!140150 (= e!91392 e!91388)))

(declare-fun c!26240 () Bool)

(declare-fun e!91390 () Bool)

(assert (=> b!140150 (= c!26240 e!91390)))

(declare-fun res!66981 () Bool)

(assert (=> b!140150 (=> (not res!66981) (not e!91390))))

(assert (=> b!140150 (= res!66981 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140151 () Bool)

(declare-fun e!91389 () Bool)

(assert (=> b!140151 (= e!91389 (= lt!73446 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140152 () Bool)

(declare-fun lt!73448 () Unit!4387)

(declare-fun lt!73444 () Unit!4387)

(assert (=> b!140152 (= lt!73448 lt!73444)))

(declare-fun lt!73447 () ListLongMap!1685)

(declare-fun lt!73450 () (_ BitVec 64))

(declare-fun lt!73445 () (_ BitVec 64))

(declare-fun lt!73449 () V!3553)

(assert (=> b!140152 (not (contains!904 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)) lt!73450))))

(declare-fun addStillNotContains!66 (ListLongMap!1685 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4387)

(assert (=> b!140152 (= lt!73444 (addStillNotContains!66 lt!73447 lt!73445 lt!73449 lt!73450))))

(assert (=> b!140152 (= lt!73450 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140152 (= lt!73449 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140152 (= lt!73445 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!15543 () ListLongMap!1685)

(assert (=> b!140152 (= lt!73447 call!15543)))

(declare-fun e!91393 () ListLongMap!1685)

(assert (=> b!140152 (= e!91393 (+!173 call!15543 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140153 () Bool)

(declare-fun e!91387 () Bool)

(assert (=> b!140153 (= e!91388 e!91387)))

(assert (=> b!140153 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun res!66982 () Bool)

(assert (=> b!140153 (= res!66982 (contains!904 lt!73446 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140153 (=> (not res!66982) (not e!91387))))

(declare-fun d!43629 () Bool)

(assert (=> d!43629 e!91392))

(declare-fun res!66979 () Bool)

(assert (=> d!43629 (=> (not res!66979) (not e!91392))))

(assert (=> d!43629 (= res!66979 (not (contains!904 lt!73446 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91391 () ListLongMap!1685)

(assert (=> d!43629 (= lt!73446 e!91391)))

(declare-fun c!26243 () Bool)

(assert (=> d!43629 (= c!26243 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43629 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!43629 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) lt!73446)))

(declare-fun bm!15540 () Bool)

(assert (=> bm!15540 (= call!15543 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!140154 () Bool)

(assert (=> b!140154 (= e!91393 call!15543)))

(declare-fun b!140155 () Bool)

(assert (=> b!140155 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!140155 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!140155 (= e!91387 (= (apply!120 lt!73446 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140156 () Bool)

(declare-fun isEmpty!424 (ListLongMap!1685) Bool)

(assert (=> b!140156 (= e!91389 (isEmpty!424 lt!73446))))

(declare-fun b!140157 () Bool)

(assert (=> b!140157 (= e!91391 e!91393)))

(declare-fun c!26241 () Bool)

(assert (=> b!140157 (= c!26241 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140158 () Bool)

(assert (=> b!140158 (= e!91390 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140158 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!140159 () Bool)

(assert (=> b!140159 (= e!91388 e!91389)))

(declare-fun c!26242 () Bool)

(assert (=> b!140159 (= c!26242 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140160 () Bool)

(assert (=> b!140160 (= e!91391 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!43629 c!26243) b!140160))

(assert (= (and d!43629 (not c!26243)) b!140157))

(assert (= (and b!140157 c!26241) b!140152))

(assert (= (and b!140157 (not c!26241)) b!140154))

(assert (= (or b!140152 b!140154) bm!15540))

(assert (= (and d!43629 res!66979) b!140149))

(assert (= (and b!140149 res!66980) b!140150))

(assert (= (and b!140150 res!66981) b!140158))

(assert (= (and b!140150 c!26240) b!140153))

(assert (= (and b!140150 (not c!26240)) b!140159))

(assert (= (and b!140153 res!66982) b!140155))

(assert (= (and b!140159 c!26242) b!140151))

(assert (= (and b!140159 (not c!26242)) b!140156))

(declare-fun b_lambda!6277 () Bool)

(assert (=> (not b_lambda!6277) (not b!140152)))

(assert (=> b!140152 t!6292))

(declare-fun b_and!8757 () Bool)

(assert (= b_and!8753 (and (=> t!6292 result!4167) b_and!8757)))

(assert (=> b!140152 t!6294))

(declare-fun b_and!8759 () Bool)

(assert (= b_and!8755 (and (=> t!6294 result!4171) b_and!8759)))

(declare-fun b_lambda!6279 () Bool)

(assert (=> (not b_lambda!6279) (not b!140155)))

(assert (=> b!140155 t!6292))

(declare-fun b_and!8761 () Bool)

(assert (= b_and!8757 (and (=> t!6292 result!4167) b_and!8761)))

(assert (=> b!140155 t!6294))

(declare-fun b_and!8763 () Bool)

(assert (= b_and!8759 (and (=> t!6294 result!4171) b_and!8763)))

(assert (=> b!140152 m!166833))

(declare-fun m!167291 () Bool)

(assert (=> b!140152 m!167291))

(declare-fun m!167293 () Bool)

(assert (=> b!140152 m!167293))

(assert (=> b!140152 m!166661))

(assert (=> b!140152 m!167291))

(declare-fun m!167295 () Bool)

(assert (=> b!140152 m!167295))

(assert (=> b!140152 m!166883))

(assert (=> b!140152 m!166883))

(assert (=> b!140152 m!166661))

(assert (=> b!140152 m!166885))

(declare-fun m!167297 () Bool)

(assert (=> b!140152 m!167297))

(assert (=> b!140158 m!166833))

(assert (=> b!140158 m!166833))

(assert (=> b!140158 m!166879))

(declare-fun m!167299 () Bool)

(assert (=> b!140151 m!167299))

(assert (=> b!140155 m!166833))

(assert (=> b!140155 m!166661))

(assert (=> b!140155 m!166883))

(assert (=> b!140155 m!166883))

(assert (=> b!140155 m!166661))

(assert (=> b!140155 m!166885))

(assert (=> b!140155 m!166833))

(declare-fun m!167301 () Bool)

(assert (=> b!140155 m!167301))

(declare-fun m!167303 () Bool)

(assert (=> b!140149 m!167303))

(declare-fun m!167305 () Bool)

(assert (=> d!43629 m!167305))

(assert (=> d!43629 m!166839))

(declare-fun m!167307 () Bool)

(assert (=> b!140156 m!167307))

(assert (=> b!140153 m!166833))

(assert (=> b!140153 m!166833))

(declare-fun m!167309 () Bool)

(assert (=> b!140153 m!167309))

(assert (=> b!140157 m!166833))

(assert (=> b!140157 m!166833))

(assert (=> b!140157 m!166879))

(assert (=> bm!15540 m!167299))

(assert (=> b!139888 d!43629))

(declare-fun d!43631 () Bool)

(declare-fun e!91394 () Bool)

(assert (=> d!43631 e!91394))

(declare-fun res!66983 () Bool)

(assert (=> d!43631 (=> res!66983 e!91394)))

(declare-fun lt!73454 () Bool)

(assert (=> d!43631 (= res!66983 (not lt!73454))))

(declare-fun lt!73451 () Bool)

(assert (=> d!43631 (= lt!73454 lt!73451)))

(declare-fun lt!73453 () Unit!4387)

(declare-fun e!91395 () Unit!4387)

(assert (=> d!43631 (= lt!73453 e!91395)))

(declare-fun c!26244 () Bool)

(assert (=> d!43631 (= c!26244 lt!73451)))

(assert (=> d!43631 (= lt!73451 (containsKey!180 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(assert (=> d!43631 (= (contains!904 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73194) lt!73454)))

(declare-fun b!140161 () Bool)

(declare-fun lt!73452 () Unit!4387)

(assert (=> b!140161 (= e!91395 lt!73452)))

(assert (=> b!140161 (= lt!73452 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(assert (=> b!140161 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(declare-fun b!140162 () Bool)

(declare-fun Unit!4405 () Unit!4387)

(assert (=> b!140162 (= e!91395 Unit!4405)))

(declare-fun b!140163 () Bool)

(assert (=> b!140163 (= e!91394 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194)))))

(assert (= (and d!43631 c!26244) b!140161))

(assert (= (and d!43631 (not c!26244)) b!140162))

(assert (= (and d!43631 (not res!66983)) b!140163))

(declare-fun m!167311 () Bool)

(assert (=> d!43631 m!167311))

(declare-fun m!167313 () Bool)

(assert (=> b!140161 m!167313))

(declare-fun m!167315 () Bool)

(assert (=> b!140161 m!167315))

(assert (=> b!140161 m!167315))

(declare-fun m!167317 () Bool)

(assert (=> b!140161 m!167317))

(assert (=> b!140163 m!167315))

(assert (=> b!140163 m!167315))

(assert (=> b!140163 m!167317))

(assert (=> b!139888 d!43631))

(declare-fun d!43633 () Bool)

(assert (=> d!43633 (= (apply!120 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73195) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73195)))))

(declare-fun bs!5855 () Bool)

(assert (= bs!5855 d!43633))

(declare-fun m!167319 () Bool)

(assert (=> bs!5855 m!167319))

(assert (=> bs!5855 m!167319))

(declare-fun m!167321 () Bool)

(assert (=> bs!5855 m!167321))

(assert (=> b!139888 d!43633))

(declare-fun d!43635 () Bool)

(assert (=> d!43635 (= (apply!120 lt!73187 lt!73185) (get!1535 (getValueByKey!177 (toList!858 lt!73187) lt!73185)))))

(declare-fun bs!5856 () Bool)

(assert (= bs!5856 d!43635))

(declare-fun m!167323 () Bool)

(assert (=> bs!5856 m!167323))

(assert (=> bs!5856 m!167323))

(declare-fun m!167325 () Bool)

(assert (=> bs!5856 m!167325))

(assert (=> b!139888 d!43635))

(declare-fun d!43637 () Bool)

(assert (=> d!43637 (= (apply!120 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73202) (apply!120 lt!73203 lt!73202))))

(declare-fun lt!73457 () Unit!4387)

(declare-fun choose!867 (ListLongMap!1685 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4387)

(assert (=> d!43637 (= lt!73457 (choose!867 lt!73203 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73202))))

(declare-fun e!91398 () Bool)

(assert (=> d!43637 e!91398))

(declare-fun res!66986 () Bool)

(assert (=> d!43637 (=> (not res!66986) (not e!91398))))

(assert (=> d!43637 (= res!66986 (contains!904 lt!73203 lt!73202))))

(assert (=> d!43637 (= (addApplyDifferent!96 lt!73203 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73202) lt!73457)))

(declare-fun b!140167 () Bool)

(assert (=> b!140167 (= e!91398 (not (= lt!73202 lt!73199)))))

(assert (= (and d!43637 res!66986) b!140167))

(assert (=> d!43637 m!166857))

(declare-fun m!167327 () Bool)

(assert (=> d!43637 m!167327))

(assert (=> d!43637 m!166859))

(assert (=> d!43637 m!166861))

(declare-fun m!167329 () Bool)

(assert (=> d!43637 m!167329))

(assert (=> d!43637 m!166859))

(assert (=> b!139888 d!43637))

(declare-fun d!43639 () Bool)

(declare-fun e!91399 () Bool)

(assert (=> d!43639 e!91399))

(declare-fun res!66987 () Bool)

(assert (=> d!43639 (=> (not res!66987) (not e!91399))))

(declare-fun lt!73460 () ListLongMap!1685)

(assert (=> d!43639 (= res!66987 (contains!904 lt!73460 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73459 () List!1719)

(assert (=> d!43639 (= lt!73460 (ListLongMap!1686 lt!73459))))

(declare-fun lt!73458 () Unit!4387)

(declare-fun lt!73461 () Unit!4387)

(assert (=> d!43639 (= lt!73458 lt!73461)))

(assert (=> d!43639 (= (getValueByKey!177 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43639 (= lt!73461 (lemmaContainsTupThenGetReturnValue!91 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43639 (= lt!73459 (insertStrictlySorted!94 (toList!858 lt!73188) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43639 (= (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73460)))

(declare-fun b!140168 () Bool)

(declare-fun res!66988 () Bool)

(assert (=> b!140168 (=> (not res!66988) (not e!91399))))

(assert (=> b!140168 (= res!66988 (= (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140169 () Bool)

(assert (=> b!140169 (= e!91399 (contains!907 (toList!858 lt!73460) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43639 res!66987) b!140168))

(assert (= (and b!140168 res!66988) b!140169))

(declare-fun m!167331 () Bool)

(assert (=> d!43639 m!167331))

(declare-fun m!167333 () Bool)

(assert (=> d!43639 m!167333))

(declare-fun m!167335 () Bool)

(assert (=> d!43639 m!167335))

(declare-fun m!167337 () Bool)

(assert (=> d!43639 m!167337))

(declare-fun m!167339 () Bool)

(assert (=> b!140168 m!167339))

(declare-fun m!167341 () Bool)

(assert (=> b!140169 m!167341))

(assert (=> b!139888 d!43639))

(declare-fun d!43641 () Bool)

(assert (=> d!43641 (= (apply!120 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73195) (apply!120 lt!73200 lt!73195))))

(declare-fun lt!73462 () Unit!4387)

(assert (=> d!43641 (= lt!73462 (choose!867 lt!73200 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73195))))

(declare-fun e!91400 () Bool)

(assert (=> d!43641 e!91400))

(declare-fun res!66989 () Bool)

(assert (=> d!43641 (=> (not res!66989) (not e!91400))))

(assert (=> d!43641 (= res!66989 (contains!904 lt!73200 lt!73195))))

(assert (=> d!43641 (= (addApplyDifferent!96 lt!73200 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73195) lt!73462)))

(declare-fun b!140170 () Bool)

(assert (=> b!140170 (= e!91400 (not (= lt!73195 lt!73189)))))

(assert (= (and d!43641 res!66989) b!140170))

(assert (=> d!43641 m!166863))

(declare-fun m!167343 () Bool)

(assert (=> d!43641 m!167343))

(assert (=> d!43641 m!166841))

(assert (=> d!43641 m!166843))

(declare-fun m!167345 () Bool)

(assert (=> d!43641 m!167345))

(assert (=> d!43641 m!166841))

(assert (=> b!139888 d!43641))

(declare-fun d!43643 () Bool)

(assert (=> d!43643 (= (apply!120 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73185) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73185)))))

(declare-fun bs!5857 () Bool)

(assert (= bs!5857 d!43643))

(declare-fun m!167347 () Bool)

(assert (=> bs!5857 m!167347))

(assert (=> bs!5857 m!167347))

(declare-fun m!167349 () Bool)

(assert (=> bs!5857 m!167349))

(assert (=> b!139888 d!43643))

(declare-fun d!43645 () Bool)

(assert (=> d!43645 (= (apply!120 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73202) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73202)))))

(declare-fun bs!5858 () Bool)

(assert (= bs!5858 d!43645))

(declare-fun m!167351 () Bool)

(assert (=> bs!5858 m!167351))

(assert (=> bs!5858 m!167351))

(declare-fun m!167353 () Bool)

(assert (=> bs!5858 m!167353))

(assert (=> b!139888 d!43645))

(declare-fun d!43647 () Bool)

(declare-fun e!91401 () Bool)

(assert (=> d!43647 e!91401))

(declare-fun res!66990 () Bool)

(assert (=> d!43647 (=> (not res!66990) (not e!91401))))

(declare-fun lt!73465 () ListLongMap!1685)

(assert (=> d!43647 (= res!66990 (contains!904 lt!73465 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73464 () List!1719)

(assert (=> d!43647 (= lt!73465 (ListLongMap!1686 lt!73464))))

(declare-fun lt!73463 () Unit!4387)

(declare-fun lt!73466 () Unit!4387)

(assert (=> d!43647 (= lt!73463 lt!73466)))

(assert (=> d!43647 (= (getValueByKey!177 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43647 (= lt!73466 (lemmaContainsTupThenGetReturnValue!91 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43647 (= lt!73464 (insertStrictlySorted!94 (toList!858 lt!73187) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43647 (= (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73465)))

(declare-fun b!140171 () Bool)

(declare-fun res!66991 () Bool)

(assert (=> b!140171 (=> (not res!66991) (not e!91401))))

(assert (=> b!140171 (= res!66991 (= (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140172 () Bool)

(assert (=> b!140172 (= e!91401 (contains!907 (toList!858 lt!73465) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43647 res!66990) b!140171))

(assert (= (and b!140171 res!66991) b!140172))

(declare-fun m!167355 () Bool)

(assert (=> d!43647 m!167355))

(declare-fun m!167357 () Bool)

(assert (=> d!43647 m!167357))

(declare-fun m!167359 () Bool)

(assert (=> d!43647 m!167359))

(declare-fun m!167361 () Bool)

(assert (=> d!43647 m!167361))

(declare-fun m!167363 () Bool)

(assert (=> b!140171 m!167363))

(declare-fun m!167365 () Bool)

(assert (=> b!140172 m!167365))

(assert (=> b!139888 d!43647))

(declare-fun d!43649 () Bool)

(assert (=> d!43649 (= (apply!120 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73185) (apply!120 lt!73187 lt!73185))))

(declare-fun lt!73467 () Unit!4387)

(assert (=> d!43649 (= lt!73467 (choose!867 lt!73187 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73185))))

(declare-fun e!91402 () Bool)

(assert (=> d!43649 e!91402))

(declare-fun res!66992 () Bool)

(assert (=> d!43649 (=> (not res!66992) (not e!91402))))

(assert (=> d!43649 (= res!66992 (contains!904 lt!73187 lt!73185))))

(assert (=> d!43649 (= (addApplyDifferent!96 lt!73187 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73185) lt!73467)))

(declare-fun b!140173 () Bool)

(assert (=> b!140173 (= e!91402 (not (= lt!73185 lt!73197)))))

(assert (= (and d!43649 res!66992) b!140173))

(assert (=> d!43649 m!166867))

(declare-fun m!167367 () Bool)

(assert (=> d!43649 m!167367))

(assert (=> d!43649 m!166847))

(assert (=> d!43649 m!166869))

(declare-fun m!167369 () Bool)

(assert (=> d!43649 m!167369))

(assert (=> d!43649 m!166847))

(assert (=> b!139888 d!43649))

(declare-fun d!43651 () Bool)

(assert (=> d!43651 (= (apply!120 lt!73200 lt!73195) (get!1535 (getValueByKey!177 (toList!858 lt!73200) lt!73195)))))

(declare-fun bs!5859 () Bool)

(assert (= bs!5859 d!43651))

(declare-fun m!167371 () Bool)

(assert (=> bs!5859 m!167371))

(assert (=> bs!5859 m!167371))

(declare-fun m!167373 () Bool)

(assert (=> bs!5859 m!167373))

(assert (=> b!139888 d!43651))

(declare-fun d!43653 () Bool)

(declare-fun e!91403 () Bool)

(assert (=> d!43653 e!91403))

(declare-fun res!66993 () Bool)

(assert (=> d!43653 (=> (not res!66993) (not e!91403))))

(declare-fun lt!73470 () ListLongMap!1685)

(assert (=> d!43653 (= res!66993 (contains!904 lt!73470 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73469 () List!1719)

(assert (=> d!43653 (= lt!73470 (ListLongMap!1686 lt!73469))))

(declare-fun lt!73468 () Unit!4387)

(declare-fun lt!73471 () Unit!4387)

(assert (=> d!43653 (= lt!73468 lt!73471)))

(assert (=> d!43653 (= (getValueByKey!177 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43653 (= lt!73471 (lemmaContainsTupThenGetReturnValue!91 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43653 (= lt!73469 (insertStrictlySorted!94 (toList!858 lt!73203) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43653 (= (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73470)))

(declare-fun b!140174 () Bool)

(declare-fun res!66994 () Bool)

(assert (=> b!140174 (=> (not res!66994) (not e!91403))))

(assert (=> b!140174 (= res!66994 (= (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140175 () Bool)

(assert (=> b!140175 (= e!91403 (contains!907 (toList!858 lt!73470) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43653 res!66993) b!140174))

(assert (= (and b!140174 res!66994) b!140175))

(declare-fun m!167375 () Bool)

(assert (=> d!43653 m!167375))

(declare-fun m!167377 () Bool)

(assert (=> d!43653 m!167377))

(declare-fun m!167379 () Bool)

(assert (=> d!43653 m!167379))

(declare-fun m!167381 () Bool)

(assert (=> d!43653 m!167381))

(declare-fun m!167383 () Bool)

(assert (=> b!140174 m!167383))

(declare-fun m!167385 () Bool)

(assert (=> b!140175 m!167385))

(assert (=> b!139888 d!43653))

(declare-fun d!43655 () Bool)

(declare-fun e!91404 () Bool)

(assert (=> d!43655 e!91404))

(declare-fun res!66995 () Bool)

(assert (=> d!43655 (=> res!66995 e!91404)))

(declare-fun lt!73475 () Bool)

(assert (=> d!43655 (= res!66995 (not lt!73475))))

(declare-fun lt!73472 () Bool)

(assert (=> d!43655 (= lt!73475 lt!73472)))

(declare-fun lt!73474 () Unit!4387)

(declare-fun e!91405 () Unit!4387)

(assert (=> d!43655 (= lt!73474 e!91405)))

(declare-fun c!26245 () Bool)

(assert (=> d!43655 (= c!26245 lt!73472)))

(assert (=> d!43655 (= lt!73472 (containsKey!180 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (=> d!43655 (= (contains!904 call!15472 (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) lt!73475)))

(declare-fun b!140176 () Bool)

(declare-fun lt!73473 () Unit!4387)

(assert (=> b!140176 (= e!91405 lt!73473)))

(assert (=> b!140176 (= lt!73473 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (=> b!140176 (isDefined!129 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun b!140177 () Bool)

(declare-fun Unit!4406 () Unit!4387)

(assert (=> b!140177 (= e!91405 Unit!4406)))

(declare-fun b!140178 () Bool)

(assert (=> b!140178 (= e!91404 (isDefined!129 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (= (and d!43655 c!26245) b!140176))

(assert (= (and d!43655 (not c!26245)) b!140177))

(assert (= (and d!43655 (not res!66995)) b!140178))

(assert (=> d!43655 m!166761))

(declare-fun m!167387 () Bool)

(assert (=> d!43655 m!167387))

(assert (=> b!140176 m!166761))

(declare-fun m!167389 () Bool)

(assert (=> b!140176 m!167389))

(assert (=> b!140176 m!166761))

(declare-fun m!167391 () Bool)

(assert (=> b!140176 m!167391))

(assert (=> b!140176 m!167391))

(declare-fun m!167393 () Bool)

(assert (=> b!140176 m!167393))

(assert (=> b!140178 m!166761))

(assert (=> b!140178 m!167391))

(assert (=> b!140178 m!167391))

(assert (=> b!140178 m!167393))

(assert (=> b!139787 d!43655))

(declare-fun d!43657 () Bool)

(declare-fun e!91408 () Bool)

(assert (=> d!43657 e!91408))

(declare-fun res!66998 () Bool)

(assert (=> d!43657 (=> (not res!66998) (not e!91408))))

(assert (=> d!43657 (= res!66998 (and (bvsge (index!3256 lt!73122) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73122) (size!2578 (_keys!4698 newMap!16)))))))

(declare-fun lt!73478 () Unit!4387)

(declare-fun choose!868 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) Unit!4387)

(assert (=> d!43657 (= lt!73478 (choose!868 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43657 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43657 (= (lemmaValidKeyInArrayIsInListMap!125 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (defaultEntry!2939 newMap!16)) lt!73478)))

(declare-fun b!140181 () Bool)

(assert (=> b!140181 (= e!91408 (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (= (and d!43657 res!66998) b!140181))

(declare-fun m!167395 () Bool)

(assert (=> d!43657 m!167395))

(assert (=> d!43657 m!166907))

(declare-fun m!167397 () Bool)

(assert (=> b!140181 m!167397))

(assert (=> b!140181 m!166761))

(assert (=> b!140181 m!167397))

(assert (=> b!140181 m!166761))

(declare-fun m!167399 () Bool)

(assert (=> b!140181 m!167399))

(assert (=> b!139787 d!43657))

(declare-fun d!43659 () Bool)

(declare-fun e!91411 () Bool)

(assert (=> d!43659 e!91411))

(declare-fun res!67001 () Bool)

(assert (=> d!43659 (=> (not res!67001) (not e!91411))))

(assert (=> d!43659 (= res!67001 (and (bvsge (index!3256 lt!73122) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73122) (size!2579 (_values!2922 newMap!16)))))))

(declare-fun lt!73481 () Unit!4387)

(declare-fun choose!869 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4387)

(assert (=> d!43659 (= lt!73481 (choose!869 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43659 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43659 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) lt!73481)))

(declare-fun b!140184 () Bool)

(assert (=> b!140184 (= e!91411 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (= (and d!43659 res!67001) b!140184))

(assert (=> d!43659 m!166633))

(assert (=> d!43659 m!166663))

(declare-fun m!167401 () Bool)

(assert (=> d!43659 m!167401))

(assert (=> d!43659 m!166907))

(assert (=> b!140184 m!166773))

(assert (=> b!140184 m!166773))

(assert (=> b!140184 m!167217))

(assert (=> b!140184 m!166759))

(declare-fun m!167403 () Bool)

(assert (=> b!140184 m!167403))

(assert (=> b!139787 d!43659))

(declare-fun d!43661 () Bool)

(assert (=> d!43661 (= (get!1533 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3278 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!139798 d!43661))

(declare-fun d!43663 () Bool)

(declare-fun res!67002 () Bool)

(declare-fun e!91412 () Bool)

(assert (=> d!43663 (=> res!67002 e!91412)))

(assert (=> d!43663 (= res!67002 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43663 (= (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!91412)))

(declare-fun b!140185 () Bool)

(declare-fun e!91413 () Bool)

(assert (=> b!140185 (= e!91412 e!91413)))

(declare-fun res!67003 () Bool)

(assert (=> b!140185 (=> (not res!67003) (not e!91413))))

(assert (=> b!140185 (= res!67003 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140186 () Bool)

(assert (=> b!140186 (= e!91413 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43663 (not res!67002)) b!140185))

(assert (= (and b!140185 res!67003) b!140186))

(declare-fun m!167405 () Bool)

(assert (=> d!43663 m!167405))

(assert (=> b!140186 m!166633))

(declare-fun m!167407 () Bool)

(assert (=> b!140186 m!167407))

(assert (=> b!139829 d!43663))

(assert (=> b!139759 d!43561))

(declare-fun d!43665 () Bool)

(assert (=> d!43665 (= (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992)))) (and (or (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000001111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000011111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000001111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000011111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000001111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000011111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000001111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000011111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000001111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000011111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000001111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000011111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000001111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000011111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000111111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000001111111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000011111111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000111111111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00001111111111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00011111111111111111111111111111) (= (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> d!43557 d!43665))

(declare-fun d!43667 () Bool)

(declare-fun res!67004 () Bool)

(declare-fun e!91414 () Bool)

(assert (=> d!43667 (=> (not res!67004) (not e!91414))))

(assert (=> d!43667 (= res!67004 (simpleValid!96 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!43667 (= (valid!567 (v!3279 (underlying!479 thiss!992))) e!91414)))

(declare-fun b!140187 () Bool)

(declare-fun res!67005 () Bool)

(assert (=> b!140187 (=> (not res!67005) (not e!91414))))

(assert (=> b!140187 (= res!67005 (= (arrayCountValidKeys!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))) (_size!624 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!140188 () Bool)

(declare-fun res!67006 () Bool)

(assert (=> b!140188 (=> (not res!67006) (not e!91414))))

(assert (=> b!140188 (= res!67006 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!140189 () Bool)

(assert (=> b!140189 (= e!91414 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!43667 res!67004) b!140187))

(assert (= (and b!140187 res!67005) b!140188))

(assert (= (and b!140188 res!67006) b!140189))

(declare-fun m!167409 () Bool)

(assert (=> d!43667 m!167409))

(declare-fun m!167411 () Bool)

(assert (=> b!140187 m!167411))

(declare-fun m!167413 () Bool)

(assert (=> b!140188 m!167413))

(declare-fun m!167415 () Bool)

(assert (=> b!140189 m!167415))

(assert (=> d!43559 d!43667))

(declare-fun b!140198 () Bool)

(declare-fun e!91419 () (_ BitVec 32))

(assert (=> b!140198 (= e!91419 #b00000000000000000000000000000000)))

(declare-fun b!140200 () Bool)

(declare-fun e!91420 () (_ BitVec 32))

(declare-fun call!15546 () (_ BitVec 32))

(assert (=> b!140200 (= e!91420 (bvadd #b00000000000000000000000000000001 call!15546))))

(declare-fun d!43669 () Bool)

(declare-fun lt!73484 () (_ BitVec 32))

(assert (=> d!43669 (and (bvsge lt!73484 #b00000000000000000000000000000000) (bvsle lt!73484 (bvsub (size!2578 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43669 (= lt!73484 e!91419)))

(declare-fun c!26250 () Bool)

(assert (=> d!43669 (= c!26250 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43669 (and (bvsle #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 newMap!16)) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43669 (= (arrayCountValidKeys!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) lt!73484)))

(declare-fun b!140199 () Bool)

(assert (=> b!140199 (= e!91419 e!91420)))

(declare-fun c!26251 () Bool)

(assert (=> b!140199 (= c!26251 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15543 () Bool)

(assert (=> bm!15543 (= call!15546 (arrayCountValidKeys!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140201 () Bool)

(assert (=> b!140201 (= e!91420 call!15546)))

(assert (= (and d!43669 c!26250) b!140198))

(assert (= (and d!43669 (not c!26250)) b!140199))

(assert (= (and b!140199 c!26251) b!140200))

(assert (= (and b!140199 (not c!26251)) b!140201))

(assert (= (or b!140200 b!140201) bm!15543))

(assert (=> b!140199 m!166927))

(assert (=> b!140199 m!166927))

(assert (=> b!140199 m!166957))

(declare-fun m!167417 () Bool)

(assert (=> bm!15543 m!167417))

(assert (=> b!139806 d!43669))

(declare-fun b!140218 () Bool)

(declare-fun res!67015 () Bool)

(declare-fun e!91430 () Bool)

(assert (=> b!140218 (=> (not res!67015) (not e!91430))))

(declare-fun call!15552 () Bool)

(assert (=> b!140218 (= res!67015 call!15552)))

(declare-fun e!91431 () Bool)

(assert (=> b!140218 (= e!91431 e!91430)))

(declare-fun call!15551 () Bool)

(declare-fun bm!15548 () Bool)

(assert (=> bm!15548 (= call!15551 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140219 () Bool)

(declare-fun lt!73489 () SeekEntryResult!273)

(assert (=> b!140219 (= e!91431 ((_ is Undefined!273) lt!73489))))

(declare-fun b!140220 () Bool)

(declare-fun res!67016 () Bool)

(assert (=> b!140220 (=> (not res!67016) (not e!91430))))

(assert (=> b!140220 (= res!67016 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73489)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140220 (and (bvsge (index!3258 lt!73489) #b00000000000000000000000000000000) (bvslt (index!3258 lt!73489) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun c!26256 () Bool)

(declare-fun bm!15549 () Bool)

(assert (=> bm!15549 (= call!15552 (inRange!0 (ite c!26256 (index!3255 lt!73489) (index!3258 lt!73489)) (mask!7279 newMap!16)))))

(declare-fun b!140221 () Bool)

(declare-fun e!91429 () Bool)

(assert (=> b!140221 (= e!91429 (not call!15551))))

(declare-fun b!140223 () Bool)

(declare-fun e!91432 () Bool)

(assert (=> b!140223 (= e!91432 e!91431)))

(declare-fun c!26257 () Bool)

(assert (=> b!140223 (= c!26257 ((_ is MissingVacant!273) lt!73489))))

(declare-fun b!140224 () Bool)

(assert (=> b!140224 (and (bvsge (index!3255 lt!73489) #b00000000000000000000000000000000) (bvslt (index!3255 lt!73489) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67017 () Bool)

(assert (=> b!140224 (= res!67017 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73489)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140224 (=> (not res!67017) (not e!91429))))

(declare-fun b!140225 () Bool)

(assert (=> b!140225 (= e!91432 e!91429)))

(declare-fun res!67018 () Bool)

(assert (=> b!140225 (= res!67018 call!15552)))

(assert (=> b!140225 (=> (not res!67018) (not e!91429))))

(declare-fun b!140222 () Bool)

(assert (=> b!140222 (= e!91430 (not call!15551))))

(declare-fun d!43671 () Bool)

(assert (=> d!43671 e!91432))

(assert (=> d!43671 (= c!26256 ((_ is MissingZero!273) lt!73489))))

(assert (=> d!43671 (= lt!73489 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun lt!73490 () Unit!4387)

(declare-fun choose!870 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4387)

(assert (=> d!43671 (= lt!73490 (choose!870 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43671 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43671 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) lt!73490)))

(assert (= (and d!43671 c!26256) b!140225))

(assert (= (and d!43671 (not c!26256)) b!140223))

(assert (= (and b!140225 res!67018) b!140224))

(assert (= (and b!140224 res!67017) b!140221))

(assert (= (and b!140223 c!26257) b!140218))

(assert (= (and b!140223 (not c!26257)) b!140219))

(assert (= (and b!140218 res!67015) b!140220))

(assert (= (and b!140220 res!67016) b!140222))

(assert (= (or b!140225 b!140218) bm!15549))

(assert (= (or b!140221 b!140222) bm!15548))

(declare-fun m!167419 () Bool)

(assert (=> b!140220 m!167419))

(assert (=> d!43671 m!166633))

(assert (=> d!43671 m!166787))

(assert (=> d!43671 m!166633))

(declare-fun m!167421 () Bool)

(assert (=> d!43671 m!167421))

(assert (=> d!43671 m!166907))

(assert (=> bm!15548 m!166633))

(assert (=> bm!15548 m!166767))

(declare-fun m!167423 () Bool)

(assert (=> bm!15549 m!167423))

(declare-fun m!167425 () Bool)

(assert (=> b!140224 m!167425))

(assert (=> bm!15468 d!43671))

(declare-fun bm!15550 () Bool)

(declare-fun call!15553 () Bool)

(declare-fun c!26258 () Bool)

(assert (=> bm!15550 (= call!15553 (arrayNoDuplicates!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun b!140226 () Bool)

(declare-fun e!91433 () Bool)

(declare-fun e!91434 () Bool)

(assert (=> b!140226 (= e!91433 e!91434)))

(declare-fun res!67021 () Bool)

(assert (=> b!140226 (=> (not res!67021) (not e!91434))))

(declare-fun e!91436 () Bool)

(assert (=> b!140226 (= res!67021 (not e!91436))))

(declare-fun res!67019 () Bool)

(assert (=> b!140226 (=> (not res!67019) (not e!91436))))

(assert (=> b!140226 (= res!67019 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140227 () Bool)

(declare-fun e!91435 () Bool)

(assert (=> b!140227 (= e!91435 call!15553)))

(declare-fun b!140228 () Bool)

(assert (=> b!140228 (= e!91434 e!91435)))

(assert (=> b!140228 (= c!26258 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!43673 () Bool)

(declare-fun res!67020 () Bool)

(assert (=> d!43673 (=> res!67020 e!91433)))

(assert (=> d!43673 (= res!67020 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43673 (= (arrayNoDuplicates!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 Nil!1717) e!91433)))

(declare-fun b!140229 () Bool)

(assert (=> b!140229 (= e!91435 call!15553)))

(declare-fun b!140230 () Bool)

(assert (=> b!140230 (= e!91436 (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!43673 (not res!67020)) b!140226))

(assert (= (and b!140226 res!67019) b!140230))

(assert (= (and b!140226 res!67021) b!140228))

(assert (= (and b!140228 c!26258) b!140227))

(assert (= (and b!140228 (not c!26258)) b!140229))

(assert (= (or b!140227 b!140229) bm!15550))

(assert (=> bm!15550 m!166927))

(declare-fun m!167427 () Bool)

(assert (=> bm!15550 m!167427))

(assert (=> b!140226 m!166927))

(assert (=> b!140226 m!166927))

(assert (=> b!140226 m!166957))

(assert (=> b!140228 m!166927))

(assert (=> b!140228 m!166927))

(assert (=> b!140228 m!166957))

(assert (=> b!140230 m!166927))

(assert (=> b!140230 m!166927))

(declare-fun m!167429 () Bool)

(assert (=> b!140230 m!167429))

(assert (=> b!139808 d!43673))

(declare-fun d!43675 () Bool)

(declare-fun e!91437 () Bool)

(assert (=> d!43675 e!91437))

(declare-fun res!67022 () Bool)

(assert (=> d!43675 (=> res!67022 e!91437)))

(declare-fun lt!73494 () Bool)

(assert (=> d!43675 (= res!67022 (not lt!73494))))

(declare-fun lt!73491 () Bool)

(assert (=> d!43675 (= lt!73494 lt!73491)))

(declare-fun lt!73493 () Unit!4387)

(declare-fun e!91438 () Unit!4387)

(assert (=> d!43675 (= lt!73493 e!91438)))

(declare-fun c!26259 () Bool)

(assert (=> d!43675 (= c!26259 lt!73491)))

(assert (=> d!43675 (= lt!73491 (containsKey!180 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43675 (= (contains!904 lt!73184 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73494)))

(declare-fun b!140231 () Bool)

(declare-fun lt!73492 () Unit!4387)

(assert (=> b!140231 (= e!91438 lt!73492)))

(assert (=> b!140231 (= lt!73492 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140231 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140232 () Bool)

(declare-fun Unit!4407 () Unit!4387)

(assert (=> b!140232 (= e!91438 Unit!4407)))

(declare-fun b!140233 () Bool)

(assert (=> b!140233 (= e!91437 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43675 c!26259) b!140231))

(assert (= (and d!43675 (not c!26259)) b!140232))

(assert (= (and d!43675 (not res!67022)) b!140233))

(assert (=> d!43675 m!166833))

(declare-fun m!167431 () Bool)

(assert (=> d!43675 m!167431))

(assert (=> b!140231 m!166833))

(declare-fun m!167433 () Bool)

(assert (=> b!140231 m!167433))

(assert (=> b!140231 m!166833))

(assert (=> b!140231 m!167241))

(assert (=> b!140231 m!167241))

(declare-fun m!167435 () Bool)

(assert (=> b!140231 m!167435))

(assert (=> b!140233 m!166833))

(assert (=> b!140233 m!167241))

(assert (=> b!140233 m!167241))

(assert (=> b!140233 m!167435))

(assert (=> b!139882 d!43675))

(assert (=> b!139834 d!43551))

(declare-fun d!43677 () Bool)

(declare-fun e!91441 () Bool)

(assert (=> d!43677 e!91441))

(declare-fun c!26262 () Bool)

(assert (=> d!43677 (= c!26262 (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43677 true))

(declare-fun _$29!165 () Unit!4387)

(assert (=> d!43677 (= (choose!862 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) _$29!165)))

(declare-fun b!140238 () Bool)

(assert (=> b!140238 (= e!91441 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!140239 () Bool)

(assert (=> b!140239 (= e!91441 (ite (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43677 c!26262) b!140238))

(assert (= (and d!43677 (not c!26262)) b!140239))

(assert (=> b!140238 m!166633))

(assert (=> b!140238 m!166637))

(assert (=> d!43553 d!43677))

(assert (=> d!43553 d!43665))

(declare-fun d!43679 () Bool)

(declare-fun e!91442 () Bool)

(assert (=> d!43679 e!91442))

(declare-fun res!67023 () Bool)

(assert (=> d!43679 (=> res!67023 e!91442)))

(declare-fun lt!73498 () Bool)

(assert (=> d!43679 (= res!67023 (not lt!73498))))

(declare-fun lt!73495 () Bool)

(assert (=> d!43679 (= lt!73498 lt!73495)))

(declare-fun lt!73497 () Unit!4387)

(declare-fun e!91443 () Unit!4387)

(assert (=> d!43679 (= lt!73497 e!91443)))

(declare-fun c!26263 () Bool)

(assert (=> d!43679 (= c!26263 lt!73495)))

(assert (=> d!43679 (= lt!73495 (containsKey!180 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43679 (= (contains!904 call!15458 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73498)))

(declare-fun b!140240 () Bool)

(declare-fun lt!73496 () Unit!4387)

(assert (=> b!140240 (= e!91443 lt!73496)))

(assert (=> b!140240 (= lt!73496 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!140240 (isDefined!129 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140241 () Bool)

(declare-fun Unit!4408 () Unit!4387)

(assert (=> b!140241 (= e!91443 Unit!4408)))

(declare-fun b!140242 () Bool)

(assert (=> b!140242 (= e!91442 (isDefined!129 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (= (and d!43679 c!26263) b!140240))

(assert (= (and d!43679 (not c!26263)) b!140241))

(assert (= (and d!43679 (not res!67023)) b!140242))

(assert (=> d!43679 m!166633))

(declare-fun m!167437 () Bool)

(assert (=> d!43679 m!167437))

(assert (=> b!140240 m!166633))

(declare-fun m!167439 () Bool)

(assert (=> b!140240 m!167439))

(assert (=> b!140240 m!166633))

(declare-fun m!167441 () Bool)

(assert (=> b!140240 m!167441))

(assert (=> b!140240 m!167441))

(declare-fun m!167443 () Bool)

(assert (=> b!140240 m!167443))

(assert (=> b!140242 m!166633))

(assert (=> b!140242 m!167441))

(assert (=> b!140242 m!167441))

(assert (=> b!140242 m!167443))

(assert (=> b!139775 d!43679))

(declare-fun d!43681 () Bool)

(assert (=> d!43681 (= (apply!120 lt!73184 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5860 () Bool)

(assert (= bs!5860 d!43681))

(assert (=> bs!5860 m!167115))

(assert (=> bs!5860 m!167115))

(declare-fun m!167445 () Bool)

(assert (=> bs!5860 m!167445))

(assert (=> b!139879 d!43681))

(declare-fun d!43683 () Bool)

(declare-fun e!91446 () Bool)

(assert (=> d!43683 e!91446))

(declare-fun res!67028 () Bool)

(assert (=> d!43683 (=> (not res!67028) (not e!91446))))

(declare-fun lt!73503 () SeekEntryResult!273)

(assert (=> d!43683 (= res!67028 ((_ is Found!273) lt!73503))))

(assert (=> d!43683 (= lt!73503 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun lt!73504 () Unit!4387)

(declare-fun choose!871 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4387)

(assert (=> d!43683 (= lt!73504 (choose!871 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43683 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43683 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) lt!73504)))

(declare-fun b!140247 () Bool)

(declare-fun res!67029 () Bool)

(assert (=> b!140247 (=> (not res!67029) (not e!91446))))

(assert (=> b!140247 (= res!67029 (inRange!0 (index!3256 lt!73503) (mask!7279 newMap!16)))))

(declare-fun b!140248 () Bool)

(assert (=> b!140248 (= e!91446 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73503)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!140248 (and (bvsge (index!3256 lt!73503) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73503) (size!2578 (_keys!4698 newMap!16))))))

(assert (= (and d!43683 res!67028) b!140247))

(assert (= (and b!140247 res!67029) b!140248))

(assert (=> d!43683 m!166633))

(assert (=> d!43683 m!166787))

(assert (=> d!43683 m!166633))

(declare-fun m!167447 () Bool)

(assert (=> d!43683 m!167447))

(assert (=> d!43683 m!166907))

(declare-fun m!167449 () Bool)

(assert (=> b!140247 m!167449))

(declare-fun m!167451 () Bool)

(assert (=> b!140248 m!167451))

(assert (=> bm!15475 d!43683))

(assert (=> bm!15498 d!43629))

(declare-fun d!43685 () Bool)

(declare-fun e!91447 () Bool)

(assert (=> d!43685 e!91447))

(declare-fun res!67030 () Bool)

(assert (=> d!43685 (=> res!67030 e!91447)))

(declare-fun lt!73508 () Bool)

(assert (=> d!43685 (= res!67030 (not lt!73508))))

(declare-fun lt!73505 () Bool)

(assert (=> d!43685 (= lt!73508 lt!73505)))

(declare-fun lt!73507 () Unit!4387)

(declare-fun e!91448 () Unit!4387)

(assert (=> d!43685 (= lt!73507 e!91448)))

(declare-fun c!26264 () Bool)

(assert (=> d!43685 (= c!26264 lt!73505)))

(assert (=> d!43685 (= lt!73505 (containsKey!180 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43685 (= (contains!904 lt!73184 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73508)))

(declare-fun b!140249 () Bool)

(declare-fun lt!73506 () Unit!4387)

(assert (=> b!140249 (= e!91448 lt!73506)))

(assert (=> b!140249 (= lt!73506 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140249 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140250 () Bool)

(declare-fun Unit!4409 () Unit!4387)

(assert (=> b!140250 (= e!91448 Unit!4409)))

(declare-fun b!140251 () Bool)

(assert (=> b!140251 (= e!91447 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43685 c!26264) b!140249))

(assert (= (and d!43685 (not c!26264)) b!140250))

(assert (= (and d!43685 (not res!67030)) b!140251))

(declare-fun m!167453 () Bool)

(assert (=> d!43685 m!167453))

(declare-fun m!167455 () Bool)

(assert (=> b!140249 m!167455))

(assert (=> b!140249 m!167259))

(assert (=> b!140249 m!167259))

(declare-fun m!167457 () Bool)

(assert (=> b!140249 m!167457))

(assert (=> b!140251 m!167259))

(assert (=> b!140251 m!167259))

(assert (=> b!140251 m!167457))

(assert (=> bm!15494 d!43685))

(assert (=> d!43549 d!43547))

(declare-fun d!43687 () Bool)

(assert (=> d!43687 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) from!355 Nil!1717)))

(assert (=> d!43687 true))

(declare-fun _$71!165 () Unit!4387)

(assert (=> d!43687 (= (choose!39 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!165)))

(declare-fun bs!5861 () Bool)

(assert (= bs!5861 d!43687))

(assert (=> bs!5861 m!166631))

(assert (=> d!43549 d!43687))

(declare-fun b!140253 () Bool)

(declare-fun e!91450 () Bool)

(assert (=> b!140253 (= e!91450 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4845 () Bool)

(declare-fun mapRes!4845 () Bool)

(declare-fun tp!11577 () Bool)

(declare-fun e!91449 () Bool)

(assert (=> mapNonEmpty!4845 (= mapRes!4845 (and tp!11577 e!91449))))

(declare-fun mapKey!4845 () (_ BitVec 32))

(declare-fun mapRest!4845 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4845 () ValueCell!1121)

(assert (=> mapNonEmpty!4845 (= mapRest!4844 (store mapRest!4845 mapKey!4845 mapValue!4845))))

(declare-fun condMapEmpty!4845 () Bool)

(declare-fun mapDefault!4845 () ValueCell!1121)

(assert (=> mapNonEmpty!4844 (= condMapEmpty!4845 (= mapRest!4844 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4845)))))

(assert (=> mapNonEmpty!4844 (= tp!11576 (and e!91450 mapRes!4845))))

(declare-fun mapIsEmpty!4845 () Bool)

(assert (=> mapIsEmpty!4845 mapRes!4845))

(declare-fun b!140252 () Bool)

(assert (=> b!140252 (= e!91449 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4844 condMapEmpty!4845) mapIsEmpty!4845))

(assert (= (and mapNonEmpty!4844 (not condMapEmpty!4845)) mapNonEmpty!4845))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1121) mapValue!4845)) b!140252))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1121) mapDefault!4845)) b!140253))

(declare-fun m!167459 () Bool)

(assert (=> mapNonEmpty!4845 m!167459))

(declare-fun b!140255 () Bool)

(declare-fun e!91452 () Bool)

(assert (=> b!140255 (= e!91452 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4846 () Bool)

(declare-fun mapRes!4846 () Bool)

(declare-fun tp!11578 () Bool)

(declare-fun e!91451 () Bool)

(assert (=> mapNonEmpty!4846 (= mapRes!4846 (and tp!11578 e!91451))))

(declare-fun mapRest!4846 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4846 () ValueCell!1121)

(declare-fun mapKey!4846 () (_ BitVec 32))

(assert (=> mapNonEmpty!4846 (= mapRest!4843 (store mapRest!4846 mapKey!4846 mapValue!4846))))

(declare-fun condMapEmpty!4846 () Bool)

(declare-fun mapDefault!4846 () ValueCell!1121)

(assert (=> mapNonEmpty!4843 (= condMapEmpty!4846 (= mapRest!4843 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4846)))))

(assert (=> mapNonEmpty!4843 (= tp!11575 (and e!91452 mapRes!4846))))

(declare-fun mapIsEmpty!4846 () Bool)

(assert (=> mapIsEmpty!4846 mapRes!4846))

(declare-fun b!140254 () Bool)

(assert (=> b!140254 (= e!91451 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4843 condMapEmpty!4846) mapIsEmpty!4846))

(assert (= (and mapNonEmpty!4843 (not condMapEmpty!4846)) mapNonEmpty!4846))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1121) mapValue!4846)) b!140254))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1121) mapDefault!4846)) b!140255))

(declare-fun m!167461 () Bool)

(assert (=> mapNonEmpty!4846 m!167461))

(declare-fun b_lambda!6281 () Bool)

(assert (= b_lambda!6277 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6281)))

(declare-fun b_lambda!6283 () Bool)

(assert (= b_lambda!6271 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6283)))

(declare-fun b_lambda!6285 () Bool)

(assert (= b_lambda!6279 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6285)))

(declare-fun b_lambda!6287 () Bool)

(assert (= b_lambda!6275 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6287)))

(declare-fun b_lambda!6289 () Bool)

(assert (= b_lambda!6273 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6289)))

(check-sat (not b!140035) (not b!140188) (not b!139927) (not b_next!3027) (not d!43655) (not b!140158) (not b!139931) (not b!140228) (not d!43599) (not b!140052) (not b!140039) (not b!140033) (not d!43667) (not d!43651) (not b!140187) (not b!139958) (not b!140240) (not b!139937) (not d!43647) (not b!140101) (not b!140094) (not b!140018) (not b_next!3025) (not d!43563) (not b!139952) (not d!43643) (not d!43641) (not b!140174) (not b!140184) (not d!43573) (not d!43635) (not b!139976) (not bm!15535) (not d!43675) (not d!43629) (not b!139991) (not b!140238) (not mapNonEmpty!4845) (not b!140176) (not b!140181) (not bm!15524) (not bm!15514) (not d!43657) (not bm!15508) (not b!140149) (not b_lambda!6283) b_and!8763 (not bm!15540) (not d!43619) (not bm!15522) (not b!140151) (not d!43639) (not d!43569) (not d!43585) (not b!139966) (not b!139948) (not bm!15550) (not d!43571) (not d!43623) (not bm!15536) (not b!140005) (not b!140169) (not bm!15507) (not b!140186) (not d!43681) (not b!139949) (not d!43595) (not d!43653) (not d!43583) (not d!43565) (not d!43561) (not b!140001) (not b!140199) (not b!139988) (not b!140105) (not b_lambda!6265) (not b!140156) (not b!139956) (not d!43609) (not d!43633) (not b!139980) (not b!140152) (not b!140172) (not b!140115) (not bm!15534) (not b!140091) (not bm!15548) (not b!139933) (not b!140231) (not d!43671) (not b!139935) (not b!140113) (not b!140045) (not bm!15521) (not b!140157) (not d!43637) (not b!139954) (not b!140122) (not bm!15512) (not b!139974) (not bm!15537) (not d!43683) (not b!140092) (not b!140041) (not b!140171) (not bm!15543) (not b!140109) (not b!139945) (not b!140153) (not b!139978) (not b!140168) (not b!139992) (not d!43603) (not b!140110) (not b!139981) (not b!139925) (not b_lambda!6285) (not b!139973) (not b!140247) (not d!43627) (not b!140161) (not d!43601) (not bm!15501) (not d!43577) (not b!139975) (not b!140163) (not b_lambda!6281) (not d!43621) (not d!43645) (not b!139944) (not d!43687) (not bm!15517) (not d!43631) (not d!43593) b_and!8761 (not b!139987) (not b!140249) (not bm!15549) (not b!140108) (not b!140175) (not b!140226) (not b!139979) (not b!140053) (not b!140242) (not d!43659) (not bm!15504) (not b!139990) (not bm!15505) (not b!140007) (not b!139977) (not b!140043) (not b_lambda!6287) (not d!43617) (not b_lambda!6269) (not b!140233) (not b!139928) (not b!140123) (not b!140251) (not bm!15511) (not b!139965) (not d!43605) (not b!140155) (not b!140002) (not d!43685) (not bm!15518) (not d!43567) (not b!140102) (not d!43575) (not b!140022) (not b!140032) (not d!43679) (not d!43649) (not b_lambda!6289) (not b!140230) (not b!140189) (not b!140036) (not d!43625) (not b!140111) tp_is_empty!2929 (not mapNonEmpty!4846) (not b!140178) (not b!140121))
(check-sat b_and!8761 b_and!8763 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun d!43689 () Bool)

(declare-fun e!91453 () Bool)

(assert (=> d!43689 e!91453))

(declare-fun res!67031 () Bool)

(assert (=> d!43689 (=> (not res!67031) (not e!91453))))

(declare-fun lt!73511 () ListLongMap!1685)

(assert (=> d!43689 (= res!67031 (contains!904 lt!73511 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73510 () List!1719)

(assert (=> d!43689 (= lt!73511 (ListLongMap!1686 lt!73510))))

(declare-fun lt!73509 () Unit!4387)

(declare-fun lt!73512 () Unit!4387)

(assert (=> d!43689 (= lt!73509 lt!73512)))

(assert (=> d!43689 (= (getValueByKey!177 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43689 (= lt!73512 (lemmaContainsTupThenGetReturnValue!91 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43689 (= lt!73510 (insertStrictlySorted!94 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43689 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73511)))

(declare-fun b!140256 () Bool)

(declare-fun res!67032 () Bool)

(assert (=> b!140256 (=> (not res!67032) (not e!91453))))

(assert (=> b!140256 (= res!67032 (= (getValueByKey!177 (toList!858 lt!73511) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140257 () Bool)

(assert (=> b!140257 (= e!91453 (contains!907 (toList!858 lt!73511) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43689 res!67031) b!140256))

(assert (= (and b!140256 res!67032) b!140257))

(declare-fun m!167463 () Bool)

(assert (=> d!43689 m!167463))

(declare-fun m!167465 () Bool)

(assert (=> d!43689 m!167465))

(declare-fun m!167467 () Bool)

(assert (=> d!43689 m!167467))

(declare-fun m!167469 () Bool)

(assert (=> d!43689 m!167469))

(declare-fun m!167471 () Bool)

(assert (=> b!140256 m!167471))

(declare-fun m!167473 () Bool)

(assert (=> b!140257 m!167473))

(assert (=> b!140184 d!43689))

(assert (=> b!140184 d!43565))

(declare-fun b!140258 () Bool)

(declare-fun e!91456 () Bool)

(assert (=> b!140258 (= e!91456 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140259 () Bool)

(declare-fun e!91462 () Bool)

(declare-fun lt!73514 () ListLongMap!1685)

(assert (=> b!140259 (= e!91462 (= (apply!120 lt!73514 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140260 () Bool)

(declare-fun c!26269 () Bool)

(assert (=> b!140260 (= c!26269 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91464 () ListLongMap!1685)

(declare-fun e!91454 () ListLongMap!1685)

(assert (=> b!140260 (= e!91464 e!91454)))

(declare-fun bm!15551 () Bool)

(declare-fun call!15554 () Bool)

(assert (=> bm!15551 (= call!15554 (contains!904 lt!73514 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140261 () Bool)

(declare-fun e!91463 () Bool)

(declare-fun e!91461 () Bool)

(assert (=> b!140261 (= e!91463 e!91461)))

(declare-fun c!26266 () Bool)

(assert (=> b!140261 (= c!26266 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140262 () Bool)

(declare-fun e!91455 () Bool)

(declare-fun e!91457 () Bool)

(assert (=> b!140262 (= e!91455 e!91457)))

(declare-fun res!67041 () Bool)

(assert (=> b!140262 (=> (not res!67041) (not e!91457))))

(assert (=> b!140262 (= res!67041 (contains!904 lt!73514 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140262 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140263 () Bool)

(declare-fun res!67035 () Bool)

(assert (=> b!140263 (=> (not res!67035) (not e!91463))))

(declare-fun e!91460 () Bool)

(assert (=> b!140263 (= res!67035 e!91460)))

(declare-fun c!26270 () Bool)

(assert (=> b!140263 (= c!26270 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140264 () Bool)

(declare-fun e!91465 () Bool)

(assert (=> b!140264 (= e!91465 (= (apply!120 lt!73514 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140265 () Bool)

(declare-fun call!15560 () Bool)

(assert (=> b!140265 (= e!91461 (not call!15560))))

(declare-fun b!140266 () Bool)

(assert (=> b!140266 (= e!91457 (= (apply!120 lt!73514 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140266 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))))))

(assert (=> b!140266 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15552 () Bool)

(declare-fun call!15557 () ListLongMap!1685)

(declare-fun call!15555 () ListLongMap!1685)

(assert (=> bm!15552 (= call!15557 call!15555)))

(declare-fun b!140267 () Bool)

(declare-fun res!67039 () Bool)

(assert (=> b!140267 (=> (not res!67039) (not e!91463))))

(assert (=> b!140267 (= res!67039 e!91455)))

(declare-fun res!67038 () Bool)

(assert (=> b!140267 (=> res!67038 e!91455)))

(assert (=> b!140267 (= res!67038 (not e!91456))))

(declare-fun res!67034 () Bool)

(assert (=> b!140267 (=> (not res!67034) (not e!91456))))

(assert (=> b!140267 (= res!67034 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15553 () Bool)

(declare-fun call!15556 () ListLongMap!1685)

(assert (=> bm!15553 (= call!15555 call!15556)))

(declare-fun b!140268 () Bool)

(declare-fun e!91458 () Unit!4387)

(declare-fun lt!73531 () Unit!4387)

(assert (=> b!140268 (= e!91458 lt!73531)))

(declare-fun lt!73518 () ListLongMap!1685)

(assert (=> b!140268 (= lt!73518 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73520 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73520 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73524 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73524 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73534 () Unit!4387)

(assert (=> b!140268 (= lt!73534 (addStillContains!96 lt!73518 lt!73520 (zeroValue!2789 newMap!16) lt!73524))))

(assert (=> b!140268 (contains!904 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))) lt!73524)))

(declare-fun lt!73523 () Unit!4387)

(assert (=> b!140268 (= lt!73523 lt!73534)))

(declare-fun lt!73530 () ListLongMap!1685)

(assert (=> b!140268 (= lt!73530 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73519 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73519 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73525 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73525 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73528 () Unit!4387)

(assert (=> b!140268 (= lt!73528 (addApplyDifferent!96 lt!73530 lt!73519 (minValue!2789 newMap!16) lt!73525))))

(assert (=> b!140268 (= (apply!120 (+!173 lt!73530 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))) lt!73525) (apply!120 lt!73530 lt!73525))))

(declare-fun lt!73513 () Unit!4387)

(assert (=> b!140268 (= lt!73513 lt!73528)))

(declare-fun lt!73517 () ListLongMap!1685)

(assert (=> b!140268 (= lt!73517 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73527 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73527 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73515 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73515 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73526 () Unit!4387)

(assert (=> b!140268 (= lt!73526 (addApplyDifferent!96 lt!73517 lt!73527 (zeroValue!2789 newMap!16) lt!73515))))

(assert (=> b!140268 (= (apply!120 (+!173 lt!73517 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))) lt!73515) (apply!120 lt!73517 lt!73515))))

(declare-fun lt!73516 () Unit!4387)

(assert (=> b!140268 (= lt!73516 lt!73526)))

(declare-fun lt!73533 () ListLongMap!1685)

(assert (=> b!140268 (= lt!73533 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73529 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73529 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73532 () (_ BitVec 64))

(assert (=> b!140268 (= lt!73532 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140268 (= lt!73531 (addApplyDifferent!96 lt!73533 lt!73529 (minValue!2789 newMap!16) lt!73532))))

(assert (=> b!140268 (= (apply!120 (+!173 lt!73533 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))) lt!73532) (apply!120 lt!73533 lt!73532))))

(declare-fun c!26267 () Bool)

(declare-fun bm!15554 () Bool)

(declare-fun call!15558 () ListLongMap!1685)

(declare-fun c!26268 () Bool)

(assert (=> bm!15554 (= call!15558 (+!173 (ite c!26267 call!15556 (ite c!26268 call!15555 call!15557)) (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!43691 () Bool)

(assert (=> d!43691 e!91463))

(declare-fun res!67033 () Bool)

(assert (=> d!43691 (=> (not res!67033) (not e!91463))))

(assert (=> d!43691 (= res!67033 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73521 () ListLongMap!1685)

(assert (=> d!43691 (= lt!73514 lt!73521)))

(declare-fun lt!73522 () Unit!4387)

(assert (=> d!43691 (= lt!73522 e!91458)))

(declare-fun c!26265 () Bool)

(declare-fun e!91459 () Bool)

(assert (=> d!43691 (= c!26265 e!91459)))

(declare-fun res!67036 () Bool)

(assert (=> d!43691 (=> (not res!67036) (not e!91459))))

(assert (=> d!43691 (= res!67036 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91466 () ListLongMap!1685)

(assert (=> d!43691 (= lt!73521 e!91466)))

(assert (=> d!43691 (= c!26267 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43691 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43691 (= (getCurrentListMap!531 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73514)))

(declare-fun b!140269 () Bool)

(assert (=> b!140269 (= e!91454 call!15557)))

(declare-fun b!140270 () Bool)

(declare-fun Unit!4410 () Unit!4387)

(assert (=> b!140270 (= e!91458 Unit!4410)))

(declare-fun b!140271 () Bool)

(assert (=> b!140271 (= e!91461 e!91462)))

(declare-fun res!67037 () Bool)

(assert (=> b!140271 (= res!67037 call!15560)))

(assert (=> b!140271 (=> (not res!67037) (not e!91462))))

(declare-fun b!140272 () Bool)

(assert (=> b!140272 (= e!91460 e!91465)))

(declare-fun res!67040 () Bool)

(assert (=> b!140272 (= res!67040 call!15554)))

(assert (=> b!140272 (=> (not res!67040) (not e!91465))))

(declare-fun b!140273 () Bool)

(declare-fun call!15559 () ListLongMap!1685)

(assert (=> b!140273 (= e!91454 call!15559)))

(declare-fun b!140274 () Bool)

(assert (=> b!140274 (= e!91464 call!15559)))

(declare-fun b!140275 () Bool)

(assert (=> b!140275 (= e!91466 (+!173 call!15558 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15555 () Bool)

(assert (=> bm!15555 (= call!15556 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140276 () Bool)

(assert (=> b!140276 (= e!91459 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140277 () Bool)

(assert (=> b!140277 (= e!91466 e!91464)))

(assert (=> b!140277 (= c!26268 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140278 () Bool)

(assert (=> b!140278 (= e!91460 (not call!15554))))

(declare-fun bm!15556 () Bool)

(assert (=> bm!15556 (= call!15559 call!15558)))

(declare-fun bm!15557 () Bool)

(assert (=> bm!15557 (= call!15560 (contains!904 lt!73514 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43691 c!26267) b!140275))

(assert (= (and d!43691 (not c!26267)) b!140277))

(assert (= (and b!140277 c!26268) b!140274))

(assert (= (and b!140277 (not c!26268)) b!140260))

(assert (= (and b!140260 c!26269) b!140273))

(assert (= (and b!140260 (not c!26269)) b!140269))

(assert (= (or b!140273 b!140269) bm!15552))

(assert (= (or b!140274 bm!15552) bm!15553))

(assert (= (or b!140274 b!140273) bm!15556))

(assert (= (or b!140275 bm!15553) bm!15555))

(assert (= (or b!140275 bm!15556) bm!15554))

(assert (= (and d!43691 res!67036) b!140276))

(assert (= (and d!43691 c!26265) b!140268))

(assert (= (and d!43691 (not c!26265)) b!140270))

(assert (= (and d!43691 res!67033) b!140267))

(assert (= (and b!140267 res!67034) b!140258))

(assert (= (and b!140267 (not res!67038)) b!140262))

(assert (= (and b!140262 res!67041) b!140266))

(assert (= (and b!140267 res!67039) b!140263))

(assert (= (and b!140263 c!26270) b!140272))

(assert (= (and b!140263 (not c!26270)) b!140278))

(assert (= (and b!140272 res!67040) b!140264))

(assert (= (or b!140272 b!140278) bm!15551))

(assert (= (and b!140263 res!67035) b!140261))

(assert (= (and b!140261 c!26266) b!140271))

(assert (= (and b!140261 (not c!26266)) b!140265))

(assert (= (and b!140271 res!67037) b!140259))

(assert (= (or b!140271 b!140265) bm!15557))

(declare-fun b_lambda!6291 () Bool)

(assert (=> (not b_lambda!6291) (not b!140266)))

(assert (=> b!140266 t!6309))

(declare-fun b_and!8765 () Bool)

(assert (= b_and!8761 (and (=> t!6309 result!4187) b_and!8765)))

(assert (=> b!140266 t!6311))

(declare-fun b_and!8767 () Bool)

(assert (= b_and!8763 (and (=> t!6311 result!4189) b_and!8767)))

(declare-fun m!167475 () Bool)

(assert (=> b!140268 m!167475))

(declare-fun m!167477 () Bool)

(assert (=> b!140268 m!167477))

(declare-fun m!167479 () Bool)

(assert (=> b!140268 m!167479))

(declare-fun m!167481 () Bool)

(assert (=> b!140268 m!167481))

(declare-fun m!167483 () Bool)

(assert (=> b!140268 m!167483))

(assert (=> b!140268 m!166927))

(assert (=> b!140268 m!167475))

(declare-fun m!167485 () Bool)

(assert (=> b!140268 m!167485))

(declare-fun m!167487 () Bool)

(assert (=> b!140268 m!167487))

(assert (=> b!140268 m!167487))

(declare-fun m!167489 () Bool)

(assert (=> b!140268 m!167489))

(declare-fun m!167491 () Bool)

(assert (=> b!140268 m!167491))

(declare-fun m!167493 () Bool)

(assert (=> b!140268 m!167493))

(declare-fun m!167495 () Bool)

(assert (=> b!140268 m!167495))

(declare-fun m!167497 () Bool)

(assert (=> b!140268 m!167497))

(declare-fun m!167499 () Bool)

(assert (=> b!140268 m!167499))

(declare-fun m!167501 () Bool)

(assert (=> b!140268 m!167501))

(assert (=> b!140268 m!167481))

(declare-fun m!167503 () Bool)

(assert (=> b!140268 m!167503))

(assert (=> b!140268 m!167493))

(declare-fun m!167505 () Bool)

(assert (=> b!140268 m!167505))

(declare-fun m!167507 () Bool)

(assert (=> b!140275 m!167507))

(declare-fun m!167509 () Bool)

(assert (=> b!140264 m!167509))

(declare-fun m!167511 () Bool)

(assert (=> bm!15551 m!167511))

(assert (=> b!140258 m!166927))

(assert (=> b!140258 m!166927))

(assert (=> b!140258 m!166957))

(declare-fun m!167513 () Bool)

(assert (=> b!140259 m!167513))

(declare-fun m!167515 () Bool)

(assert (=> b!140266 m!167515))

(assert (=> b!140266 m!167515))

(assert (=> b!140266 m!166963))

(declare-fun m!167517 () Bool)

(assert (=> b!140266 m!167517))

(assert (=> b!140266 m!166927))

(assert (=> b!140266 m!166927))

(declare-fun m!167519 () Bool)

(assert (=> b!140266 m!167519))

(assert (=> b!140266 m!166963))

(declare-fun m!167521 () Bool)

(assert (=> bm!15557 m!167521))

(assert (=> d!43691 m!166907))

(declare-fun m!167523 () Bool)

(assert (=> bm!15554 m!167523))

(assert (=> bm!15555 m!167483))

(assert (=> b!140262 m!166927))

(assert (=> b!140262 m!166927))

(declare-fun m!167525 () Bool)

(assert (=> b!140262 m!167525))

(assert (=> b!140276 m!166927))

(assert (=> b!140276 m!166927))

(assert (=> b!140276 m!166957))

(assert (=> b!140184 d!43691))

(declare-fun d!43693 () Bool)

(assert (=> d!43693 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140228 d!43693))

(declare-fun d!43695 () Bool)

(assert (=> d!43695 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!43695 true))

(declare-fun _$5!140 () Unit!4387)

(assert (=> d!43695 (= (choose!869 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) _$5!140)))

(declare-fun bs!5862 () Bool)

(assert (= bs!5862 d!43695))

(assert (=> bs!5862 m!166773))

(assert (=> bs!5862 m!166773))

(assert (=> bs!5862 m!167217))

(assert (=> bs!5862 m!166759))

(assert (=> bs!5862 m!167403))

(assert (=> d!43659 d!43695))

(declare-fun d!43697 () Bool)

(assert (=> d!43697 (= (validMask!0 (mask!7279 newMap!16)) (and (or (= (mask!7279 newMap!16) #b00000000000000000000000000000111) (= (mask!7279 newMap!16) #b00000000000000000000000000001111) (= (mask!7279 newMap!16) #b00000000000000000000000000011111) (= (mask!7279 newMap!16) #b00000000000000000000000000111111) (= (mask!7279 newMap!16) #b00000000000000000000000001111111) (= (mask!7279 newMap!16) #b00000000000000000000000011111111) (= (mask!7279 newMap!16) #b00000000000000000000000111111111) (= (mask!7279 newMap!16) #b00000000000000000000001111111111) (= (mask!7279 newMap!16) #b00000000000000000000011111111111) (= (mask!7279 newMap!16) #b00000000000000000000111111111111) (= (mask!7279 newMap!16) #b00000000000000000001111111111111) (= (mask!7279 newMap!16) #b00000000000000000011111111111111) (= (mask!7279 newMap!16) #b00000000000000000111111111111111) (= (mask!7279 newMap!16) #b00000000000000001111111111111111) (= (mask!7279 newMap!16) #b00000000000000011111111111111111) (= (mask!7279 newMap!16) #b00000000000000111111111111111111) (= (mask!7279 newMap!16) #b00000000000001111111111111111111) (= (mask!7279 newMap!16) #b00000000000011111111111111111111) (= (mask!7279 newMap!16) #b00000000000111111111111111111111) (= (mask!7279 newMap!16) #b00000000001111111111111111111111) (= (mask!7279 newMap!16) #b00000000011111111111111111111111) (= (mask!7279 newMap!16) #b00000000111111111111111111111111) (= (mask!7279 newMap!16) #b00000001111111111111111111111111) (= (mask!7279 newMap!16) #b00000011111111111111111111111111) (= (mask!7279 newMap!16) #b00000111111111111111111111111111) (= (mask!7279 newMap!16) #b00001111111111111111111111111111) (= (mask!7279 newMap!16) #b00011111111111111111111111111111) (= (mask!7279 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7279 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!43659 d!43697))

(assert (=> b!140158 d!43581))

(declare-fun d!43699 () Bool)

(assert (=> d!43699 (isDefined!129 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun lt!73535 () Unit!4387)

(assert (=> d!43699 (= lt!73535 (choose!864 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun e!91467 () Bool)

(assert (=> d!43699 e!91467))

(declare-fun res!67042 () Bool)

(assert (=> d!43699 (=> (not res!67042) (not e!91467))))

(assert (=> d!43699 (= res!67042 (isStrictlySorted!312 (toList!858 call!15472)))))

(assert (=> d!43699 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) lt!73535)))

(declare-fun b!140279 () Bool)

(assert (=> b!140279 (= e!91467 (containsKey!180 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (= (and d!43699 res!67042) b!140279))

(assert (=> d!43699 m!166761))

(assert (=> d!43699 m!167391))

(assert (=> d!43699 m!167391))

(assert (=> d!43699 m!167393))

(assert (=> d!43699 m!166761))

(declare-fun m!167527 () Bool)

(assert (=> d!43699 m!167527))

(declare-fun m!167529 () Bool)

(assert (=> d!43699 m!167529))

(assert (=> b!140279 m!166761))

(assert (=> b!140279 m!167387))

(assert (=> b!140176 d!43699))

(declare-fun d!43701 () Bool)

(assert (=> d!43701 (= (isDefined!129 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))) (not (isEmpty!423 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))))

(declare-fun bs!5863 () Bool)

(assert (= bs!5863 d!43701))

(assert (=> bs!5863 m!167391))

(declare-fun m!167531 () Bool)

(assert (=> bs!5863 m!167531))

(assert (=> b!140176 d!43701))

(declare-fun b!140281 () Bool)

(declare-fun e!91468 () Option!183)

(declare-fun e!91469 () Option!183)

(assert (=> b!140281 (= e!91468 e!91469)))

(declare-fun c!26272 () Bool)

(assert (=> b!140281 (= c!26272 (and ((_ is Cons!1715) (toList!858 call!15472)) (not (= (_1!1322 (h!2322 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))))

(declare-fun b!140282 () Bool)

(assert (=> b!140282 (= e!91469 (getValueByKey!177 (t!6295 (toList!858 call!15472)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun b!140280 () Bool)

(assert (=> b!140280 (= e!91468 (Some!182 (_2!1322 (h!2322 (toList!858 call!15472)))))))

(declare-fun b!140283 () Bool)

(assert (=> b!140283 (= e!91469 None!181)))

(declare-fun c!26271 () Bool)

(declare-fun d!43703 () Bool)

(assert (=> d!43703 (= c!26271 (and ((_ is Cons!1715) (toList!858 call!15472)) (= (_1!1322 (h!2322 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (=> d!43703 (= (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) e!91468)))

(assert (= (and d!43703 c!26271) b!140280))

(assert (= (and d!43703 (not c!26271)) b!140281))

(assert (= (and b!140281 c!26272) b!140282))

(assert (= (and b!140281 (not c!26272)) b!140283))

(assert (=> b!140282 m!166761))

(declare-fun m!167533 () Bool)

(assert (=> b!140282 m!167533))

(assert (=> b!140176 d!43703))

(declare-fun d!43705 () Bool)

(assert (=> d!43705 (= (get!1533 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3278 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140109 d!43705))

(declare-fun d!43707 () Bool)

(assert (=> d!43707 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!73536 () Unit!4387)

(assert (=> d!43707 (= lt!73536 (choose!864 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91470 () Bool)

(assert (=> d!43707 e!91470))

(declare-fun res!67043 () Bool)

(assert (=> d!43707 (=> (not res!67043) (not e!91470))))

(assert (=> d!43707 (= res!67043 (isStrictlySorted!312 (toList!858 lt!73184)))))

(assert (=> d!43707 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73536)))

(declare-fun b!140284 () Bool)

(assert (=> b!140284 (= e!91470 (containsKey!180 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43707 res!67043) b!140284))

(assert (=> d!43707 m!166833))

(assert (=> d!43707 m!167241))

(assert (=> d!43707 m!167241))

(assert (=> d!43707 m!167435))

(assert (=> d!43707 m!166833))

(declare-fun m!167535 () Bool)

(assert (=> d!43707 m!167535))

(declare-fun m!167537 () Bool)

(assert (=> d!43707 m!167537))

(assert (=> b!140284 m!166833))

(assert (=> b!140284 m!167431))

(assert (=> b!140231 d!43707))

(declare-fun d!43709 () Bool)

(assert (=> d!43709 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5864 () Bool)

(assert (= bs!5864 d!43709))

(assert (=> bs!5864 m!167241))

(declare-fun m!167539 () Bool)

(assert (=> bs!5864 m!167539))

(assert (=> b!140231 d!43709))

(declare-fun b!140286 () Bool)

(declare-fun e!91471 () Option!183)

(declare-fun e!91472 () Option!183)

(assert (=> b!140286 (= e!91471 e!91472)))

(declare-fun c!26274 () Bool)

(assert (=> b!140286 (= c!26274 (and ((_ is Cons!1715) (toList!858 lt!73184)) (not (= (_1!1322 (h!2322 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!140287 () Bool)

(assert (=> b!140287 (= e!91472 (getValueByKey!177 (t!6295 (toList!858 lt!73184)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140285 () Bool)

(assert (=> b!140285 (= e!91471 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73184)))))))

(declare-fun b!140288 () Bool)

(assert (=> b!140288 (= e!91472 None!181)))

(declare-fun c!26273 () Bool)

(declare-fun d!43711 () Bool)

(assert (=> d!43711 (= c!26273 (and ((_ is Cons!1715) (toList!858 lt!73184)) (= (_1!1322 (h!2322 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43711 (= (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91471)))

(assert (= (and d!43711 c!26273) b!140285))

(assert (= (and d!43711 (not c!26273)) b!140286))

(assert (= (and b!140286 c!26274) b!140287))

(assert (= (and b!140286 (not c!26274)) b!140288))

(assert (=> b!140287 m!166833))

(declare-fun m!167541 () Bool)

(assert (=> b!140287 m!167541))

(assert (=> b!140231 d!43711))

(assert (=> b!140053 d!43693))

(declare-fun d!43713 () Bool)

(assert (=> d!43713 (= (apply!120 lt!73215 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5865 () Bool)

(assert (= bs!5865 d!43713))

(assert (=> bs!5865 m!166927))

(declare-fun m!167543 () Bool)

(assert (=> bs!5865 m!167543))

(assert (=> bs!5865 m!167543))

(declare-fun m!167545 () Bool)

(assert (=> bs!5865 m!167545))

(assert (=> b!139935 d!43713))

(declare-fun c!26275 () Bool)

(declare-fun d!43715 () Bool)

(assert (=> d!43715 (= c!26275 ((_ is ValueCellFull!1121) (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!91473 () V!3553)

(assert (=> d!43715 (= (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91473)))

(declare-fun b!140289 () Bool)

(assert (=> b!140289 (= e!91473 (get!1533 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140290 () Bool)

(assert (=> b!140290 (= e!91473 (get!1534 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43715 c!26275) b!140289))

(assert (= (and d!43715 (not c!26275)) b!140290))

(assert (=> b!140289 m!166961))

(assert (=> b!140289 m!166963))

(declare-fun m!167547 () Bool)

(assert (=> b!140289 m!167547))

(assert (=> b!140290 m!166961))

(assert (=> b!140290 m!166963))

(declare-fun m!167549 () Bool)

(assert (=> b!140290 m!167549))

(assert (=> b!139935 d!43715))

(declare-fun lt!73539 () Bool)

(declare-fun d!43717 () Bool)

(declare-fun content!139 (List!1719) (InoxSet tuple2!2622))

(assert (=> d!43717 (= lt!73539 (select (content!139 (toList!858 lt!73465)) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91478 () Bool)

(assert (=> d!43717 (= lt!73539 e!91478)))

(declare-fun res!67048 () Bool)

(assert (=> d!43717 (=> (not res!67048) (not e!91478))))

(assert (=> d!43717 (= res!67048 ((_ is Cons!1715) (toList!858 lt!73465)))))

(assert (=> d!43717 (= (contains!907 (toList!858 lt!73465) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73539)))

(declare-fun b!140295 () Bool)

(declare-fun e!91479 () Bool)

(assert (=> b!140295 (= e!91478 e!91479)))

(declare-fun res!67049 () Bool)

(assert (=> b!140295 (=> res!67049 e!91479)))

(assert (=> b!140295 (= res!67049 (= (h!2322 (toList!858 lt!73465)) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140296 () Bool)

(assert (=> b!140296 (= e!91479 (contains!907 (t!6295 (toList!858 lt!73465)) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43717 res!67048) b!140295))

(assert (= (and b!140295 (not res!67049)) b!140296))

(declare-fun m!167551 () Bool)

(assert (=> d!43717 m!167551))

(declare-fun m!167553 () Bool)

(assert (=> d!43717 m!167553))

(declare-fun m!167555 () Bool)

(assert (=> b!140296 m!167555))

(assert (=> b!140172 d!43717))

(assert (=> bm!15536 d!43607))

(assert (=> b!140092 d!43683))

(declare-fun d!43719 () Bool)

(declare-fun e!91480 () Bool)

(assert (=> d!43719 e!91480))

(declare-fun res!67050 () Bool)

(assert (=> d!43719 (=> res!67050 e!91480)))

(declare-fun lt!73543 () Bool)

(assert (=> d!43719 (= res!67050 (not lt!73543))))

(declare-fun lt!73540 () Bool)

(assert (=> d!43719 (= lt!73543 lt!73540)))

(declare-fun lt!73542 () Unit!4387)

(declare-fun e!91481 () Unit!4387)

(assert (=> d!43719 (= lt!73542 e!91481)))

(declare-fun c!26276 () Bool)

(assert (=> d!43719 (= c!26276 lt!73540)))

(assert (=> d!43719 (= lt!73540 (containsKey!180 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43719 (= (contains!904 lt!73309 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73543)))

(declare-fun b!140297 () Bool)

(declare-fun lt!73541 () Unit!4387)

(assert (=> b!140297 (= e!91481 lt!73541)))

(assert (=> b!140297 (= lt!73541 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140297 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140298 () Bool)

(declare-fun Unit!4411 () Unit!4387)

(assert (=> b!140298 (= e!91481 Unit!4411)))

(declare-fun b!140299 () Bool)

(assert (=> b!140299 (= e!91480 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43719 c!26276) b!140297))

(assert (= (and d!43719 (not c!26276)) b!140298))

(assert (= (and d!43719 (not res!67050)) b!140299))

(declare-fun m!167557 () Bool)

(assert (=> d!43719 m!167557))

(declare-fun m!167559 () Bool)

(assert (=> b!140297 m!167559))

(declare-fun m!167561 () Bool)

(assert (=> b!140297 m!167561))

(assert (=> b!140297 m!167561))

(declare-fun m!167563 () Bool)

(assert (=> b!140297 m!167563))

(assert (=> b!140299 m!167561))

(assert (=> b!140299 m!167561))

(assert (=> b!140299 m!167563))

(assert (=> bm!15524 d!43719))

(declare-fun d!43721 () Bool)

(assert (=> d!43721 (= (apply!120 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73233) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73233)))))

(declare-fun bs!5866 () Bool)

(assert (= bs!5866 d!43721))

(declare-fun m!167565 () Bool)

(assert (=> bs!5866 m!167565))

(assert (=> bs!5866 m!167565))

(declare-fun m!167567 () Bool)

(assert (=> bs!5866 m!167567))

(assert (=> b!139937 d!43721))

(declare-fun d!43723 () Bool)

(assert (=> d!43723 (= (apply!120 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) lt!73216) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!73216)))))

(declare-fun bs!5867 () Bool)

(assert (= bs!5867 d!43723))

(declare-fun m!167569 () Bool)

(assert (=> bs!5867 m!167569))

(assert (=> bs!5867 m!167569))

(declare-fun m!167571 () Bool)

(assert (=> bs!5867 m!167571))

(assert (=> b!139937 d!43723))

(declare-fun d!43725 () Bool)

(assert (=> d!43725 (= (apply!120 lt!73234 lt!73233) (get!1535 (getValueByKey!177 (toList!858 lt!73234) lt!73233)))))

(declare-fun bs!5868 () Bool)

(assert (= bs!5868 d!43725))

(declare-fun m!167573 () Bool)

(assert (=> bs!5868 m!167573))

(assert (=> bs!5868 m!167573))

(declare-fun m!167575 () Bool)

(assert (=> bs!5868 m!167575))

(assert (=> b!139937 d!43725))

(declare-fun d!43727 () Bool)

(assert (=> d!43727 (= (apply!120 lt!73218 lt!73216) (get!1535 (getValueByKey!177 (toList!858 lt!73218) lt!73216)))))

(declare-fun bs!5869 () Bool)

(assert (= bs!5869 d!43727))

(declare-fun m!167577 () Bool)

(assert (=> bs!5869 m!167577))

(assert (=> bs!5869 m!167577))

(declare-fun m!167579 () Bool)

(assert (=> bs!5869 m!167579))

(assert (=> b!139937 d!43727))

(declare-fun d!43729 () Bool)

(assert (=> d!43729 (= (apply!120 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73226) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73226)))))

(declare-fun bs!5870 () Bool)

(assert (= bs!5870 d!43729))

(declare-fun m!167581 () Bool)

(assert (=> bs!5870 m!167581))

(assert (=> bs!5870 m!167581))

(declare-fun m!167583 () Bool)

(assert (=> bs!5870 m!167583))

(assert (=> b!139937 d!43729))

(declare-fun d!43731 () Bool)

(assert (=> d!43731 (= (apply!120 lt!73231 lt!73226) (get!1535 (getValueByKey!177 (toList!858 lt!73231) lt!73226)))))

(declare-fun bs!5871 () Bool)

(assert (= bs!5871 d!43731))

(declare-fun m!167585 () Bool)

(assert (=> bs!5871 m!167585))

(assert (=> bs!5871 m!167585))

(declare-fun m!167587 () Bool)

(assert (=> bs!5871 m!167587))

(assert (=> b!139937 d!43731))

(declare-fun d!43733 () Bool)

(assert (=> d!43733 (= (apply!120 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73233) (apply!120 lt!73234 lt!73233))))

(declare-fun lt!73544 () Unit!4387)

(assert (=> d!43733 (= lt!73544 (choose!867 lt!73234 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73233))))

(declare-fun e!91482 () Bool)

(assert (=> d!43733 e!91482))

(declare-fun res!67051 () Bool)

(assert (=> d!43733 (=> (not res!67051) (not e!91482))))

(assert (=> d!43733 (= res!67051 (contains!904 lt!73234 lt!73233))))

(assert (=> d!43733 (= (addApplyDifferent!96 lt!73234 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73233) lt!73544)))

(declare-fun b!140300 () Bool)

(assert (=> b!140300 (= e!91482 (not (= lt!73233 lt!73230)))))

(assert (= (and d!43733 res!67051) b!140300))

(assert (=> d!43733 m!166935))

(declare-fun m!167589 () Bool)

(assert (=> d!43733 m!167589))

(assert (=> d!43733 m!166937))

(assert (=> d!43733 m!166939))

(declare-fun m!167591 () Bool)

(assert (=> d!43733 m!167591))

(assert (=> d!43733 m!166937))

(assert (=> b!139937 d!43733))

(declare-fun d!43735 () Bool)

(assert (=> d!43735 (= (apply!120 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73226) (apply!120 lt!73231 lt!73226))))

(declare-fun lt!73545 () Unit!4387)

(assert (=> d!43735 (= lt!73545 (choose!867 lt!73231 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73226))))

(declare-fun e!91483 () Bool)

(assert (=> d!43735 e!91483))

(declare-fun res!67052 () Bool)

(assert (=> d!43735 (=> (not res!67052) (not e!91483))))

(assert (=> d!43735 (= res!67052 (contains!904 lt!73231 lt!73226))))

(assert (=> d!43735 (= (addApplyDifferent!96 lt!73231 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73226) lt!73545)))

(declare-fun b!140301 () Bool)

(assert (=> b!140301 (= e!91483 (not (= lt!73226 lt!73220)))))

(assert (= (and d!43735 res!67052) b!140301))

(assert (=> d!43735 m!166941))

(declare-fun m!167593 () Bool)

(assert (=> d!43735 m!167593))

(assert (=> d!43735 m!166917))

(assert (=> d!43735 m!166919))

(declare-fun m!167595 () Bool)

(assert (=> d!43735 m!167595))

(assert (=> d!43735 m!166917))

(assert (=> b!139937 d!43735))

(declare-fun d!43737 () Bool)

(assert (=> d!43737 (contains!904 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) lt!73225)))

(declare-fun lt!73546 () Unit!4387)

(assert (=> d!43737 (= lt!73546 (choose!866 lt!73219 lt!73221 (zeroValue!2789 newMap!16) lt!73225))))

(assert (=> d!43737 (contains!904 lt!73219 lt!73225)))

(assert (=> d!43737 (= (addStillContains!96 lt!73219 lt!73221 (zeroValue!2789 newMap!16) lt!73225) lt!73546)))

(declare-fun bs!5872 () Bool)

(assert (= bs!5872 d!43737))

(assert (=> bs!5872 m!166931))

(assert (=> bs!5872 m!166931))

(assert (=> bs!5872 m!166933))

(declare-fun m!167597 () Bool)

(assert (=> bs!5872 m!167597))

(declare-fun m!167599 () Bool)

(assert (=> bs!5872 m!167599))

(assert (=> b!139937 d!43737))

(declare-fun d!43739 () Bool)

(declare-fun e!91484 () Bool)

(assert (=> d!43739 e!91484))

(declare-fun res!67053 () Bool)

(assert (=> d!43739 (=> (not res!67053) (not e!91484))))

(declare-fun lt!73549 () ListLongMap!1685)

(assert (=> d!43739 (= res!67053 (contains!904 lt!73549 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!73548 () List!1719)

(assert (=> d!43739 (= lt!73549 (ListLongMap!1686 lt!73548))))

(declare-fun lt!73547 () Unit!4387)

(declare-fun lt!73550 () Unit!4387)

(assert (=> d!43739 (= lt!73547 lt!73550)))

(assert (=> d!43739 (= (getValueByKey!177 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43739 (= lt!73550 (lemmaContainsTupThenGetReturnValue!91 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43739 (= lt!73548 (insertStrictlySorted!94 (toList!858 lt!73218) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43739 (= (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) lt!73549)))

(declare-fun b!140302 () Bool)

(declare-fun res!67054 () Bool)

(assert (=> b!140302 (=> (not res!67054) (not e!91484))))

(assert (=> b!140302 (= res!67054 (= (getValueByKey!177 (toList!858 lt!73549) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(declare-fun b!140303 () Bool)

(assert (=> b!140303 (= e!91484 (contains!907 (toList!858 lt!73549) (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))

(assert (= (and d!43739 res!67053) b!140302))

(assert (= (and b!140302 res!67054) b!140303))

(declare-fun m!167601 () Bool)

(assert (=> d!43739 m!167601))

(declare-fun m!167603 () Bool)

(assert (=> d!43739 m!167603))

(declare-fun m!167605 () Bool)

(assert (=> d!43739 m!167605))

(declare-fun m!167607 () Bool)

(assert (=> d!43739 m!167607))

(declare-fun m!167609 () Bool)

(assert (=> b!140302 m!167609))

(declare-fun m!167611 () Bool)

(assert (=> b!140303 m!167611))

(assert (=> b!139937 d!43739))

(declare-fun b!140304 () Bool)

(declare-fun res!67056 () Bool)

(declare-fun e!91490 () Bool)

(assert (=> b!140304 (=> (not res!67056) (not e!91490))))

(declare-fun lt!73553 () ListLongMap!1685)

(assert (=> b!140304 (= res!67056 (not (contains!904 lt!73553 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140305 () Bool)

(declare-fun e!91486 () Bool)

(assert (=> b!140305 (= e!91490 e!91486)))

(declare-fun c!26277 () Bool)

(declare-fun e!91488 () Bool)

(assert (=> b!140305 (= c!26277 e!91488)))

(declare-fun res!67057 () Bool)

(assert (=> b!140305 (=> (not res!67057) (not e!91488))))

(assert (=> b!140305 (= res!67057 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91487 () Bool)

(declare-fun b!140306 () Bool)

(assert (=> b!140306 (= e!91487 (= lt!73553 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!140307 () Bool)

(declare-fun lt!73555 () Unit!4387)

(declare-fun lt!73551 () Unit!4387)

(assert (=> b!140307 (= lt!73555 lt!73551)))

(declare-fun lt!73556 () V!3553)

(declare-fun lt!73554 () ListLongMap!1685)

(declare-fun lt!73552 () (_ BitVec 64))

(declare-fun lt!73557 () (_ BitVec 64))

(assert (=> b!140307 (not (contains!904 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556)) lt!73557))))

(assert (=> b!140307 (= lt!73551 (addStillNotContains!66 lt!73554 lt!73552 lt!73556 lt!73557))))

(assert (=> b!140307 (= lt!73557 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140307 (= lt!73556 (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140307 (= lt!73552 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15561 () ListLongMap!1685)

(assert (=> b!140307 (= lt!73554 call!15561)))

(declare-fun e!91491 () ListLongMap!1685)

(assert (=> b!140307 (= e!91491 (+!173 call!15561 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140308 () Bool)

(declare-fun e!91485 () Bool)

(assert (=> b!140308 (= e!91486 e!91485)))

(assert (=> b!140308 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67058 () Bool)

(assert (=> b!140308 (= res!67058 (contains!904 lt!73553 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140308 (=> (not res!67058) (not e!91485))))

(declare-fun d!43741 () Bool)

(assert (=> d!43741 e!91490))

(declare-fun res!67055 () Bool)

(assert (=> d!43741 (=> (not res!67055) (not e!91490))))

(assert (=> d!43741 (= res!67055 (not (contains!904 lt!73553 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91489 () ListLongMap!1685)

(assert (=> d!43741 (= lt!73553 e!91489)))

(declare-fun c!26280 () Bool)

(assert (=> d!43741 (= c!26280 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43741 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43741 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73553)))

(declare-fun bm!15558 () Bool)

(assert (=> bm!15558 (= call!15561 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!140309 () Bool)

(assert (=> b!140309 (= e!91491 call!15561)))

(declare-fun b!140310 () Bool)

(assert (=> b!140310 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!140310 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))))))))

(assert (=> b!140310 (= e!91485 (= (apply!120 lt!73553 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140311 () Bool)

(assert (=> b!140311 (= e!91487 (isEmpty!424 lt!73553))))

(declare-fun b!140312 () Bool)

(assert (=> b!140312 (= e!91489 e!91491)))

(declare-fun c!26278 () Bool)

(assert (=> b!140312 (= c!26278 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140313 () Bool)

(assert (=> b!140313 (= e!91488 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140313 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!140314 () Bool)

(assert (=> b!140314 (= e!91486 e!91487)))

(declare-fun c!26279 () Bool)

(assert (=> b!140314 (= c!26279 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140315 () Bool)

(assert (=> b!140315 (= e!91489 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!43741 c!26280) b!140315))

(assert (= (and d!43741 (not c!26280)) b!140312))

(assert (= (and b!140312 c!26278) b!140307))

(assert (= (and b!140312 (not c!26278)) b!140309))

(assert (= (or b!140307 b!140309) bm!15558))

(assert (= (and d!43741 res!67055) b!140304))

(assert (= (and b!140304 res!67056) b!140305))

(assert (= (and b!140305 res!67057) b!140313))

(assert (= (and b!140305 c!26277) b!140308))

(assert (= (and b!140305 (not c!26277)) b!140314))

(assert (= (and b!140308 res!67058) b!140310))

(assert (= (and b!140314 c!26279) b!140306))

(assert (= (and b!140314 (not c!26279)) b!140311))

(declare-fun b_lambda!6293 () Bool)

(assert (=> (not b_lambda!6293) (not b!140307)))

(assert (=> b!140307 t!6309))

(declare-fun b_and!8769 () Bool)

(assert (= b_and!8765 (and (=> t!6309 result!4187) b_and!8769)))

(assert (=> b!140307 t!6311))

(declare-fun b_and!8771 () Bool)

(assert (= b_and!8767 (and (=> t!6311 result!4189) b_and!8771)))

(declare-fun b_lambda!6295 () Bool)

(assert (=> (not b_lambda!6295) (not b!140310)))

(assert (=> b!140310 t!6309))

(declare-fun b_and!8773 () Bool)

(assert (= b_and!8769 (and (=> t!6309 result!4187) b_and!8773)))

(assert (=> b!140310 t!6311))

(declare-fun b_and!8775 () Bool)

(assert (= b_and!8771 (and (=> t!6311 result!4189) b_and!8775)))

(assert (=> b!140307 m!166927))

(declare-fun m!167613 () Bool)

(assert (=> b!140307 m!167613))

(declare-fun m!167615 () Bool)

(assert (=> b!140307 m!167615))

(assert (=> b!140307 m!166963))

(assert (=> b!140307 m!167613))

(declare-fun m!167617 () Bool)

(assert (=> b!140307 m!167617))

(assert (=> b!140307 m!166961))

(assert (=> b!140307 m!166961))

(assert (=> b!140307 m!166963))

(assert (=> b!140307 m!166965))

(declare-fun m!167619 () Bool)

(assert (=> b!140307 m!167619))

(assert (=> b!140313 m!166927))

(assert (=> b!140313 m!166927))

(assert (=> b!140313 m!166957))

(declare-fun m!167621 () Bool)

(assert (=> b!140306 m!167621))

(assert (=> b!140310 m!166927))

(assert (=> b!140310 m!166963))

(assert (=> b!140310 m!166961))

(assert (=> b!140310 m!166961))

(assert (=> b!140310 m!166963))

(assert (=> b!140310 m!166965))

(assert (=> b!140310 m!166927))

(declare-fun m!167623 () Bool)

(assert (=> b!140310 m!167623))

(declare-fun m!167625 () Bool)

(assert (=> b!140304 m!167625))

(declare-fun m!167627 () Bool)

(assert (=> d!43741 m!167627))

(assert (=> d!43741 m!166907))

(declare-fun m!167629 () Bool)

(assert (=> b!140311 m!167629))

(assert (=> b!140308 m!166927))

(assert (=> b!140308 m!166927))

(declare-fun m!167631 () Bool)

(assert (=> b!140308 m!167631))

(assert (=> b!140312 m!166927))

(assert (=> b!140312 m!166927))

(assert (=> b!140312 m!166957))

(assert (=> bm!15558 m!167621))

(assert (=> b!139937 d!43741))

(declare-fun d!43743 () Bool)

(declare-fun e!91492 () Bool)

(assert (=> d!43743 e!91492))

(declare-fun res!67059 () Bool)

(assert (=> d!43743 (=> (not res!67059) (not e!91492))))

(declare-fun lt!73560 () ListLongMap!1685)

(assert (=> d!43743 (= res!67059 (contains!904 lt!73560 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!73559 () List!1719)

(assert (=> d!43743 (= lt!73560 (ListLongMap!1686 lt!73559))))

(declare-fun lt!73558 () Unit!4387)

(declare-fun lt!73561 () Unit!4387)

(assert (=> d!43743 (= lt!73558 lt!73561)))

(assert (=> d!43743 (= (getValueByKey!177 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43743 (= lt!73561 (lemmaContainsTupThenGetReturnValue!91 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43743 (= lt!73559 (insertStrictlySorted!94 (toList!858 lt!73234) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43743 (= (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73560)))

(declare-fun b!140316 () Bool)

(declare-fun res!67060 () Bool)

(assert (=> b!140316 (=> (not res!67060) (not e!91492))))

(assert (=> b!140316 (= res!67060 (= (getValueByKey!177 (toList!858 lt!73560) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!140317 () Bool)

(assert (=> b!140317 (= e!91492 (contains!907 (toList!858 lt!73560) (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!43743 res!67059) b!140316))

(assert (= (and b!140316 res!67060) b!140317))

(declare-fun m!167633 () Bool)

(assert (=> d!43743 m!167633))

(declare-fun m!167635 () Bool)

(assert (=> d!43743 m!167635))

(declare-fun m!167637 () Bool)

(assert (=> d!43743 m!167637))

(declare-fun m!167639 () Bool)

(assert (=> d!43743 m!167639))

(declare-fun m!167641 () Bool)

(assert (=> b!140316 m!167641))

(declare-fun m!167643 () Bool)

(assert (=> b!140317 m!167643))

(assert (=> b!139937 d!43743))

(declare-fun d!43745 () Bool)

(declare-fun e!91493 () Bool)

(assert (=> d!43745 e!91493))

(declare-fun res!67061 () Bool)

(assert (=> d!43745 (=> res!67061 e!91493)))

(declare-fun lt!73565 () Bool)

(assert (=> d!43745 (= res!67061 (not lt!73565))))

(declare-fun lt!73562 () Bool)

(assert (=> d!43745 (= lt!73565 lt!73562)))

(declare-fun lt!73564 () Unit!4387)

(declare-fun e!91494 () Unit!4387)

(assert (=> d!43745 (= lt!73564 e!91494)))

(declare-fun c!26281 () Bool)

(assert (=> d!43745 (= c!26281 lt!73562)))

(assert (=> d!43745 (= lt!73562 (containsKey!180 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))

(assert (=> d!43745 (= (contains!904 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) lt!73225) lt!73565)))

(declare-fun b!140318 () Bool)

(declare-fun lt!73563 () Unit!4387)

(assert (=> b!140318 (= e!91494 lt!73563)))

(assert (=> b!140318 (= lt!73563 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))

(assert (=> b!140318 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))

(declare-fun b!140319 () Bool)

(declare-fun Unit!4412 () Unit!4387)

(assert (=> b!140319 (= e!91494 Unit!4412)))

(declare-fun b!140320 () Bool)

(assert (=> b!140320 (= e!91493 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225)))))

(assert (= (and d!43745 c!26281) b!140318))

(assert (= (and d!43745 (not c!26281)) b!140319))

(assert (= (and d!43745 (not res!67061)) b!140320))

(declare-fun m!167645 () Bool)

(assert (=> d!43745 m!167645))

(declare-fun m!167647 () Bool)

(assert (=> b!140318 m!167647))

(declare-fun m!167649 () Bool)

(assert (=> b!140318 m!167649))

(assert (=> b!140318 m!167649))

(declare-fun m!167651 () Bool)

(assert (=> b!140318 m!167651))

(assert (=> b!140320 m!167649))

(assert (=> b!140320 m!167649))

(assert (=> b!140320 m!167651))

(assert (=> b!139937 d!43745))

(declare-fun d!43747 () Bool)

(declare-fun e!91495 () Bool)

(assert (=> d!43747 e!91495))

(declare-fun res!67062 () Bool)

(assert (=> d!43747 (=> (not res!67062) (not e!91495))))

(declare-fun lt!73568 () ListLongMap!1685)

(assert (=> d!43747 (= res!67062 (contains!904 lt!73568 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!73567 () List!1719)

(assert (=> d!43747 (= lt!73568 (ListLongMap!1686 lt!73567))))

(declare-fun lt!73566 () Unit!4387)

(declare-fun lt!73569 () Unit!4387)

(assert (=> d!43747 (= lt!73566 lt!73569)))

(assert (=> d!43747 (= (getValueByKey!177 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43747 (= lt!73569 (lemmaContainsTupThenGetReturnValue!91 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43747 (= lt!73567 (insertStrictlySorted!94 (toList!858 lt!73231) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43747 (= (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73568)))

(declare-fun b!140321 () Bool)

(declare-fun res!67063 () Bool)

(assert (=> b!140321 (=> (not res!67063) (not e!91495))))

(assert (=> b!140321 (= res!67063 (= (getValueByKey!177 (toList!858 lt!73568) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!140322 () Bool)

(assert (=> b!140322 (= e!91495 (contains!907 (toList!858 lt!73568) (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!43747 res!67062) b!140321))

(assert (= (and b!140321 res!67063) b!140322))

(declare-fun m!167653 () Bool)

(assert (=> d!43747 m!167653))

(declare-fun m!167655 () Bool)

(assert (=> d!43747 m!167655))

(declare-fun m!167657 () Bool)

(assert (=> d!43747 m!167657))

(declare-fun m!167659 () Bool)

(assert (=> d!43747 m!167659))

(declare-fun m!167661 () Bool)

(assert (=> b!140321 m!167661))

(declare-fun m!167663 () Bool)

(assert (=> b!140322 m!167663))

(assert (=> b!139937 d!43747))

(declare-fun d!43749 () Bool)

(assert (=> d!43749 (= (apply!120 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) lt!73216) (apply!120 lt!73218 lt!73216))))

(declare-fun lt!73570 () Unit!4387)

(assert (=> d!43749 (= lt!73570 (choose!867 lt!73218 lt!73228 (zeroValue!2789 newMap!16) lt!73216))))

(declare-fun e!91496 () Bool)

(assert (=> d!43749 e!91496))

(declare-fun res!67064 () Bool)

(assert (=> d!43749 (=> (not res!67064) (not e!91496))))

(assert (=> d!43749 (= res!67064 (contains!904 lt!73218 lt!73216))))

(assert (=> d!43749 (= (addApplyDifferent!96 lt!73218 lt!73228 (zeroValue!2789 newMap!16) lt!73216) lt!73570)))

(declare-fun b!140323 () Bool)

(assert (=> b!140323 (= e!91496 (not (= lt!73216 lt!73228)))))

(assert (= (and d!43749 res!67064) b!140323))

(assert (=> d!43749 m!166945))

(declare-fun m!167665 () Bool)

(assert (=> d!43749 m!167665))

(assert (=> d!43749 m!166923))

(assert (=> d!43749 m!166947))

(declare-fun m!167667 () Bool)

(assert (=> d!43749 m!167667))

(assert (=> d!43749 m!166923))

(assert (=> b!139937 d!43749))

(declare-fun d!43751 () Bool)

(declare-fun e!91497 () Bool)

(assert (=> d!43751 e!91497))

(declare-fun res!67065 () Bool)

(assert (=> d!43751 (=> (not res!67065) (not e!91497))))

(declare-fun lt!73573 () ListLongMap!1685)

(assert (=> d!43751 (= res!67065 (contains!904 lt!73573 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!73572 () List!1719)

(assert (=> d!43751 (= lt!73573 (ListLongMap!1686 lt!73572))))

(declare-fun lt!73571 () Unit!4387)

(declare-fun lt!73574 () Unit!4387)

(assert (=> d!43751 (= lt!73571 lt!73574)))

(assert (=> d!43751 (= (getValueByKey!177 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43751 (= lt!73574 (lemmaContainsTupThenGetReturnValue!91 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43751 (= lt!73572 (insertStrictlySorted!94 (toList!858 lt!73219) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43751 (= (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) lt!73573)))

(declare-fun b!140324 () Bool)

(declare-fun res!67066 () Bool)

(assert (=> b!140324 (=> (not res!67066) (not e!91497))))

(assert (=> b!140324 (= res!67066 (= (getValueByKey!177 (toList!858 lt!73573) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(declare-fun b!140325 () Bool)

(assert (=> b!140325 (= e!91497 (contains!907 (toList!858 lt!73573) (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))

(assert (= (and d!43751 res!67065) b!140324))

(assert (= (and b!140324 res!67066) b!140325))

(declare-fun m!167669 () Bool)

(assert (=> d!43751 m!167669))

(declare-fun m!167671 () Bool)

(assert (=> d!43751 m!167671))

(declare-fun m!167673 () Bool)

(assert (=> d!43751 m!167673))

(declare-fun m!167675 () Bool)

(assert (=> d!43751 m!167675))

(declare-fun m!167677 () Bool)

(assert (=> b!140324 m!167677))

(declare-fun m!167679 () Bool)

(assert (=> b!140325 m!167679))

(assert (=> b!139937 d!43751))

(declare-fun d!43753 () Bool)

(assert (=> d!43753 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73575 () Unit!4387)

(assert (=> d!43753 (= lt!73575 (choose!864 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91498 () Bool)

(assert (=> d!43753 e!91498))

(declare-fun res!67067 () Bool)

(assert (=> d!43753 (=> (not res!67067) (not e!91498))))

(assert (=> d!43753 (= res!67067 (isStrictlySorted!312 (toList!858 lt!73184)))))

(assert (=> d!43753 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000) lt!73575)))

(declare-fun b!140326 () Bool)

(assert (=> b!140326 (= e!91498 (containsKey!180 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43753 res!67067) b!140326))

(assert (=> d!43753 m!167115))

(assert (=> d!43753 m!167115))

(assert (=> d!43753 m!167117))

(declare-fun m!167681 () Bool)

(assert (=> d!43753 m!167681))

(assert (=> d!43753 m!167537))

(assert (=> b!140326 m!167111))

(assert (=> b!140005 d!43753))

(declare-fun d!43755 () Bool)

(assert (=> d!43755 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5873 () Bool)

(assert (= bs!5873 d!43755))

(assert (=> bs!5873 m!167115))

(declare-fun m!167683 () Bool)

(assert (=> bs!5873 m!167683))

(assert (=> b!140005 d!43755))

(declare-fun b!140328 () Bool)

(declare-fun e!91499 () Option!183)

(declare-fun e!91500 () Option!183)

(assert (=> b!140328 (= e!91499 e!91500)))

(declare-fun c!26283 () Bool)

(assert (=> b!140328 (= c!26283 (and ((_ is Cons!1715) (toList!858 lt!73184)) (not (= (_1!1322 (h!2322 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140329 () Bool)

(assert (=> b!140329 (= e!91500 (getValueByKey!177 (t!6295 (toList!858 lt!73184)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140327 () Bool)

(assert (=> b!140327 (= e!91499 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73184)))))))

(declare-fun b!140330 () Bool)

(assert (=> b!140330 (= e!91500 None!181)))

(declare-fun d!43757 () Bool)

(declare-fun c!26282 () Bool)

(assert (=> d!43757 (= c!26282 (and ((_ is Cons!1715) (toList!858 lt!73184)) (= (_1!1322 (h!2322 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43757 (= (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000) e!91499)))

(assert (= (and d!43757 c!26282) b!140327))

(assert (= (and d!43757 (not c!26282)) b!140328))

(assert (= (and b!140328 c!26283) b!140329))

(assert (= (and b!140328 (not c!26283)) b!140330))

(declare-fun m!167685 () Bool)

(assert (=> b!140329 m!167685))

(assert (=> b!140005 d!43757))

(declare-fun d!43759 () Bool)

(assert (=> d!43759 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000)))

(declare-fun lt!73578 () Unit!4387)

(declare-fun choose!13 (array!4879 (_ BitVec 64) (_ BitVec 32)) Unit!4387)

(assert (=> d!43759 (= lt!73578 (choose!13 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000))))

(assert (=> d!43759 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!43759 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000) lt!73578)))

(declare-fun bs!5874 () Bool)

(assert (= bs!5874 d!43759))

(assert (=> bs!5874 m!167107))

(declare-fun m!167687 () Bool)

(assert (=> bs!5874 m!167687))

(assert (=> b!140002 d!43759))

(declare-fun d!43761 () Bool)

(declare-fun res!67068 () Bool)

(declare-fun e!91501 () Bool)

(assert (=> d!43761 (=> res!67068 e!91501)))

(assert (=> d!43761 (= res!67068 (= (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) lt!73300))))

(assert (=> d!43761 (= (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000) e!91501)))

(declare-fun b!140331 () Bool)

(declare-fun e!91502 () Bool)

(assert (=> b!140331 (= e!91501 e!91502)))

(declare-fun res!67069 () Bool)

(assert (=> b!140331 (=> (not res!67069) (not e!91502))))

(assert (=> b!140331 (= res!67069 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140332 () Bool)

(assert (=> b!140332 (= e!91502 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43761 (not res!67068)) b!140331))

(assert (= (and b!140331 res!67069) b!140332))

(assert (=> d!43761 m!166927))

(declare-fun m!167689 () Bool)

(assert (=> b!140332 m!167689))

(assert (=> b!140002 d!43761))

(declare-fun b!140333 () Bool)

(declare-fun e!91503 () SeekEntryResult!273)

(declare-fun e!91504 () SeekEntryResult!273)

(assert (=> b!140333 (= e!91503 e!91504)))

(declare-fun lt!73581 () (_ BitVec 64))

(declare-fun lt!73580 () SeekEntryResult!273)

(assert (=> b!140333 (= lt!73581 (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73580)))))

(declare-fun c!26285 () Bool)

(assert (=> b!140333 (= c!26285 (= lt!73581 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140334 () Bool)

(declare-fun c!26284 () Bool)

(assert (=> b!140334 (= c!26284 (= lt!73581 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91505 () SeekEntryResult!273)

(assert (=> b!140334 (= e!91504 e!91505)))

(declare-fun b!140335 () Bool)

(assert (=> b!140335 (= e!91503 Undefined!273)))

(declare-fun d!43763 () Bool)

(declare-fun lt!73579 () SeekEntryResult!273)

(assert (=> d!43763 (and (or ((_ is Undefined!273) lt!73579) (not ((_ is Found!273) lt!73579)) (and (bvsge (index!3256 lt!73579) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73579) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73579) ((_ is Found!273) lt!73579) (not ((_ is MissingZero!273) lt!73579)) (and (bvsge (index!3255 lt!73579) #b00000000000000000000000000000000) (bvslt (index!3255 lt!73579) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73579) ((_ is Found!273) lt!73579) ((_ is MissingZero!273) lt!73579) (not ((_ is MissingVacant!273) lt!73579)) (and (bvsge (index!3258 lt!73579) #b00000000000000000000000000000000) (bvslt (index!3258 lt!73579) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73579) (ite ((_ is Found!273) lt!73579) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73579)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!273) lt!73579) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73579)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!273) lt!73579) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73579)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43763 (= lt!73579 e!91503)))

(declare-fun c!26286 () Bool)

(assert (=> d!43763 (= c!26286 (and ((_ is Intermediate!273) lt!73580) (undefined!1085 lt!73580)))))

(assert (=> d!43763 (= lt!73580 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(assert (=> d!43763 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43763 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!73579)))

(declare-fun b!140336 () Bool)

(assert (=> b!140336 (= e!91505 (MissingZero!273 (index!3257 lt!73580)))))

(declare-fun b!140337 () Bool)

(assert (=> b!140337 (= e!91505 (seekKeyOrZeroReturnVacant!0 (x!16130 lt!73580) (index!3257 lt!73580) (index!3257 lt!73580) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!140338 () Bool)

(assert (=> b!140338 (= e!91504 (Found!273 (index!3257 lt!73580)))))

(assert (= (and d!43763 c!26286) b!140335))

(assert (= (and d!43763 (not c!26286)) b!140333))

(assert (= (and b!140333 c!26285) b!140338))

(assert (= (and b!140333 (not c!26285)) b!140334))

(assert (= (and b!140334 c!26284) b!140336))

(assert (= (and b!140334 (not c!26284)) b!140337))

(declare-fun m!167691 () Bool)

(assert (=> b!140333 m!167691))

(assert (=> d!43763 m!166927))

(declare-fun m!167693 () Bool)

(assert (=> d!43763 m!167693))

(assert (=> d!43763 m!167693))

(assert (=> d!43763 m!166927))

(declare-fun m!167695 () Bool)

(assert (=> d!43763 m!167695))

(assert (=> d!43763 m!166907))

(declare-fun m!167697 () Bool)

(assert (=> d!43763 m!167697))

(declare-fun m!167699 () Bool)

(assert (=> d!43763 m!167699))

(declare-fun m!167701 () Bool)

(assert (=> d!43763 m!167701))

(assert (=> b!140337 m!166927))

(declare-fun m!167703 () Bool)

(assert (=> b!140337 m!167703))

(assert (=> b!140002 d!43763))

(declare-fun d!43765 () Bool)

(assert (=> d!43765 (= (apply!120 lt!73237 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5875 () Bool)

(assert (= bs!5875 d!43765))

(declare-fun m!167705 () Bool)

(assert (=> bs!5875 m!167705))

(assert (=> bs!5875 m!167705))

(declare-fun m!167707 () Bool)

(assert (=> bs!5875 m!167707))

(assert (=> b!139949 d!43765))

(assert (=> d!43671 d!43561))

(declare-fun b!140355 () Bool)

(declare-fun e!91516 () Bool)

(declare-fun call!15567 () Bool)

(assert (=> b!140355 (= e!91516 (not call!15567))))

(declare-fun bm!15563 () Bool)

(assert (=> bm!15563 (= call!15567 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140356 () Bool)

(declare-fun res!67079 () Bool)

(declare-fun lt!73584 () SeekEntryResult!273)

(assert (=> b!140356 (= res!67079 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!73584)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91514 () Bool)

(assert (=> b!140356 (=> (not res!67079) (not e!91514))))

(declare-fun bm!15564 () Bool)

(declare-fun call!15566 () Bool)

(declare-fun c!26291 () Bool)

(assert (=> bm!15564 (= call!15566 (inRange!0 (ite c!26291 (index!3255 lt!73584) (index!3258 lt!73584)) (mask!7279 newMap!16)))))

(declare-fun b!140357 () Bool)

(assert (=> b!140357 (= e!91514 (not call!15567))))

(declare-fun b!140358 () Bool)

(declare-fun e!91517 () Bool)

(assert (=> b!140358 (= e!91517 ((_ is Undefined!273) lt!73584))))

(declare-fun d!43767 () Bool)

(declare-fun e!91515 () Bool)

(assert (=> d!43767 e!91515))

(assert (=> d!43767 (= c!26291 ((_ is MissingZero!273) lt!73584))))

(assert (=> d!43767 (= lt!73584 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(assert (=> d!43767 true))

(declare-fun _$34!999 () Unit!4387)

(assert (=> d!43767 (= (choose!870 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) _$34!999)))

(declare-fun b!140359 () Bool)

(declare-fun res!67081 () Bool)

(assert (=> b!140359 (=> (not res!67081) (not e!91516))))

(assert (=> b!140359 (= res!67081 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73584)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140360 () Bool)

(declare-fun res!67078 () Bool)

(assert (=> b!140360 (=> (not res!67078) (not e!91516))))

(assert (=> b!140360 (= res!67078 call!15566)))

(assert (=> b!140360 (= e!91517 e!91516)))

(declare-fun b!140361 () Bool)

(assert (=> b!140361 (= e!91515 e!91514)))

(declare-fun res!67080 () Bool)

(assert (=> b!140361 (= res!67080 call!15566)))

(assert (=> b!140361 (=> (not res!67080) (not e!91514))))

(declare-fun b!140362 () Bool)

(assert (=> b!140362 (= e!91515 e!91517)))

(declare-fun c!26292 () Bool)

(assert (=> b!140362 (= c!26292 ((_ is MissingVacant!273) lt!73584))))

(assert (= (and d!43767 c!26291) b!140361))

(assert (= (and d!43767 (not c!26291)) b!140362))

(assert (= (and b!140361 res!67080) b!140356))

(assert (= (and b!140356 res!67079) b!140357))

(assert (= (and b!140362 c!26292) b!140360))

(assert (= (and b!140362 (not c!26292)) b!140358))

(assert (= (and b!140360 res!67078) b!140359))

(assert (= (and b!140359 res!67081) b!140355))

(assert (= (or b!140361 b!140360) bm!15564))

(assert (= (or b!140357 b!140355) bm!15563))

(assert (=> bm!15563 m!166633))

(assert (=> bm!15563 m!166767))

(declare-fun m!167709 () Bool)

(assert (=> b!140356 m!167709))

(declare-fun m!167711 () Bool)

(assert (=> bm!15564 m!167711))

(declare-fun m!167713 () Bool)

(assert (=> b!140359 m!167713))

(assert (=> d!43767 m!166633))

(assert (=> d!43767 m!166787))

(assert (=> d!43671 d!43767))

(assert (=> d!43671 d!43697))

(declare-fun b!140363 () Bool)

(declare-fun res!67083 () Bool)

(declare-fun e!91523 () Bool)

(assert (=> b!140363 (=> (not res!67083) (not e!91523))))

(declare-fun lt!73587 () ListLongMap!1685)

(assert (=> b!140363 (= res!67083 (not (contains!904 lt!73587 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140364 () Bool)

(declare-fun e!91519 () Bool)

(assert (=> b!140364 (= e!91523 e!91519)))

(declare-fun c!26293 () Bool)

(declare-fun e!91521 () Bool)

(assert (=> b!140364 (= c!26293 e!91521)))

(declare-fun res!67084 () Bool)

(assert (=> b!140364 (=> (not res!67084) (not e!91521))))

(assert (=> b!140364 (= res!67084 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140365 () Bool)

(declare-fun e!91520 () Bool)

(assert (=> b!140365 (= e!91520 (= lt!73587 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!140366 () Bool)

(declare-fun lt!73589 () Unit!4387)

(declare-fun lt!73585 () Unit!4387)

(assert (=> b!140366 (= lt!73589 lt!73585)))

(declare-fun lt!73586 () (_ BitVec 64))

(declare-fun lt!73591 () (_ BitVec 64))

(declare-fun lt!73590 () V!3553)

(declare-fun lt!73588 () ListLongMap!1685)

(assert (=> b!140366 (not (contains!904 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590)) lt!73591))))

(assert (=> b!140366 (= lt!73585 (addStillNotContains!66 lt!73588 lt!73586 lt!73590 lt!73591))))

(assert (=> b!140366 (= lt!73591 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140366 (= lt!73590 (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140366 (= lt!73586 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15568 () ListLongMap!1685)

(assert (=> b!140366 (= lt!73588 call!15568)))

(declare-fun e!91524 () ListLongMap!1685)

(assert (=> b!140366 (= e!91524 (+!173 call!15568 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140367 () Bool)

(declare-fun e!91518 () Bool)

(assert (=> b!140367 (= e!91519 e!91518)))

(assert (=> b!140367 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67085 () Bool)

(assert (=> b!140367 (= res!67085 (contains!904 lt!73587 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140367 (=> (not res!67085) (not e!91518))))

(declare-fun d!43769 () Bool)

(assert (=> d!43769 e!91523))

(declare-fun res!67082 () Bool)

(assert (=> d!43769 (=> (not res!67082) (not e!91523))))

(assert (=> d!43769 (= res!67082 (not (contains!904 lt!73587 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91522 () ListLongMap!1685)

(assert (=> d!43769 (= lt!73587 e!91522)))

(declare-fun c!26296 () Bool)

(assert (=> d!43769 (= c!26296 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43769 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43769 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73587)))

(declare-fun bm!15565 () Bool)

(assert (=> bm!15565 (= call!15568 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!140368 () Bool)

(assert (=> b!140368 (= e!91524 call!15568)))

(declare-fun b!140369 () Bool)

(assert (=> b!140369 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!140369 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!140369 (= e!91518 (= (apply!120 lt!73587 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140370 () Bool)

(assert (=> b!140370 (= e!91520 (isEmpty!424 lt!73587))))

(declare-fun b!140371 () Bool)

(assert (=> b!140371 (= e!91522 e!91524)))

(declare-fun c!26294 () Bool)

(assert (=> b!140371 (= c!26294 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140372 () Bool)

(assert (=> b!140372 (= e!91521 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140372 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!140373 () Bool)

(assert (=> b!140373 (= e!91519 e!91520)))

(declare-fun c!26295 () Bool)

(assert (=> b!140373 (= c!26295 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140374 () Bool)

(assert (=> b!140374 (= e!91522 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!43769 c!26296) b!140374))

(assert (= (and d!43769 (not c!26296)) b!140371))

(assert (= (and b!140371 c!26294) b!140366))

(assert (= (and b!140371 (not c!26294)) b!140368))

(assert (= (or b!140366 b!140368) bm!15565))

(assert (= (and d!43769 res!67082) b!140363))

(assert (= (and b!140363 res!67083) b!140364))

(assert (= (and b!140364 res!67084) b!140372))

(assert (= (and b!140364 c!26293) b!140367))

(assert (= (and b!140364 (not c!26293)) b!140373))

(assert (= (and b!140367 res!67085) b!140369))

(assert (= (and b!140373 c!26295) b!140365))

(assert (= (and b!140373 (not c!26295)) b!140370))

(declare-fun b_lambda!6297 () Bool)

(assert (=> (not b_lambda!6297) (not b!140366)))

(assert (=> b!140366 t!6309))

(declare-fun b_and!8777 () Bool)

(assert (= b_and!8773 (and (=> t!6309 result!4187) b_and!8777)))

(assert (=> b!140366 t!6311))

(declare-fun b_and!8779 () Bool)

(assert (= b_and!8775 (and (=> t!6311 result!4189) b_and!8779)))

(declare-fun b_lambda!6299 () Bool)

(assert (=> (not b_lambda!6299) (not b!140369)))

(assert (=> b!140369 t!6309))

(declare-fun b_and!8781 () Bool)

(assert (= b_and!8777 (and (=> t!6309 result!4187) b_and!8781)))

(assert (=> b!140369 t!6311))

(declare-fun b_and!8783 () Bool)

(assert (= b_and!8779 (and (=> t!6311 result!4189) b_and!8783)))

(assert (=> b!140366 m!166927))

(declare-fun m!167715 () Bool)

(assert (=> b!140366 m!167715))

(declare-fun m!167717 () Bool)

(assert (=> b!140366 m!167717))

(assert (=> b!140366 m!166963))

(assert (=> b!140366 m!167715))

(declare-fun m!167719 () Bool)

(assert (=> b!140366 m!167719))

(assert (=> b!140366 m!167015))

(assert (=> b!140366 m!167015))

(assert (=> b!140366 m!166963))

(assert (=> b!140366 m!167017))

(declare-fun m!167721 () Bool)

(assert (=> b!140366 m!167721))

(assert (=> b!140372 m!166927))

(assert (=> b!140372 m!166927))

(assert (=> b!140372 m!166957))

(declare-fun m!167723 () Bool)

(assert (=> b!140365 m!167723))

(assert (=> b!140369 m!166927))

(assert (=> b!140369 m!166963))

(assert (=> b!140369 m!167015))

(assert (=> b!140369 m!167015))

(assert (=> b!140369 m!166963))

(assert (=> b!140369 m!167017))

(assert (=> b!140369 m!166927))

(declare-fun m!167725 () Bool)

(assert (=> b!140369 m!167725))

(declare-fun m!167727 () Bool)

(assert (=> b!140363 m!167727))

(declare-fun m!167729 () Bool)

(assert (=> d!43769 m!167729))

(assert (=> d!43769 m!166907))

(declare-fun m!167731 () Bool)

(assert (=> b!140370 m!167731))

(assert (=> b!140367 m!166927))

(assert (=> b!140367 m!166927))

(declare-fun m!167733 () Bool)

(assert (=> b!140367 m!167733))

(assert (=> b!140371 m!166927))

(assert (=> b!140371 m!166927))

(assert (=> b!140371 m!166957))

(assert (=> bm!15565 m!167723))

(assert (=> bm!15512 d!43769))

(assert (=> d!43637 d!43645))

(assert (=> d!43637 d!43627))

(assert (=> d!43637 d!43653))

(declare-fun d!43771 () Bool)

(declare-fun e!91525 () Bool)

(assert (=> d!43771 e!91525))

(declare-fun res!67086 () Bool)

(assert (=> d!43771 (=> res!67086 e!91525)))

(declare-fun lt!73595 () Bool)

(assert (=> d!43771 (= res!67086 (not lt!73595))))

(declare-fun lt!73592 () Bool)

(assert (=> d!43771 (= lt!73595 lt!73592)))

(declare-fun lt!73594 () Unit!4387)

(declare-fun e!91526 () Unit!4387)

(assert (=> d!43771 (= lt!73594 e!91526)))

(declare-fun c!26297 () Bool)

(assert (=> d!43771 (= c!26297 lt!73592)))

(assert (=> d!43771 (= lt!73592 (containsKey!180 (toList!858 lt!73203) lt!73202))))

(assert (=> d!43771 (= (contains!904 lt!73203 lt!73202) lt!73595)))

(declare-fun b!140375 () Bool)

(declare-fun lt!73593 () Unit!4387)

(assert (=> b!140375 (= e!91526 lt!73593)))

(assert (=> b!140375 (= lt!73593 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73203) lt!73202))))

(assert (=> b!140375 (isDefined!129 (getValueByKey!177 (toList!858 lt!73203) lt!73202))))

(declare-fun b!140376 () Bool)

(declare-fun Unit!4413 () Unit!4387)

(assert (=> b!140376 (= e!91526 Unit!4413)))

(declare-fun b!140377 () Bool)

(assert (=> b!140377 (= e!91525 (isDefined!129 (getValueByKey!177 (toList!858 lt!73203) lt!73202)))))

(assert (= (and d!43771 c!26297) b!140375))

(assert (= (and d!43771 (not c!26297)) b!140376))

(assert (= (and d!43771 (not res!67086)) b!140377))

(declare-fun m!167735 () Bool)

(assert (=> d!43771 m!167735))

(declare-fun m!167737 () Bool)

(assert (=> b!140375 m!167737))

(assert (=> b!140375 m!167287))

(assert (=> b!140375 m!167287))

(declare-fun m!167739 () Bool)

(assert (=> b!140375 m!167739))

(assert (=> b!140377 m!167287))

(assert (=> b!140377 m!167287))

(assert (=> b!140377 m!167739))

(assert (=> d!43637 d!43771))

(declare-fun d!43773 () Bool)

(assert (=> d!43773 (= (apply!120 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73202) (apply!120 lt!73203 lt!73202))))

(assert (=> d!43773 true))

(declare-fun _$34!1002 () Unit!4387)

(assert (=> d!43773 (= (choose!867 lt!73203 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73202) _$34!1002)))

(declare-fun bs!5876 () Bool)

(assert (= bs!5876 d!43773))

(assert (=> bs!5876 m!166859))

(assert (=> bs!5876 m!166859))

(assert (=> bs!5876 m!166861))

(assert (=> bs!5876 m!166857))

(assert (=> d!43637 d!43773))

(declare-fun d!43775 () Bool)

(declare-fun e!91527 () Bool)

(assert (=> d!43775 e!91527))

(declare-fun res!67087 () Bool)

(assert (=> d!43775 (=> res!67087 e!91527)))

(declare-fun lt!73599 () Bool)

(assert (=> d!43775 (= res!67087 (not lt!73599))))

(declare-fun lt!73596 () Bool)

(assert (=> d!43775 (= lt!73599 lt!73596)))

(declare-fun lt!73598 () Unit!4387)

(declare-fun e!91528 () Unit!4387)

(assert (=> d!43775 (= lt!73598 e!91528)))

(declare-fun c!26298 () Bool)

(assert (=> d!43775 (= c!26298 lt!73596)))

(assert (=> d!43775 (= lt!73596 (containsKey!180 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (=> d!43775 (= (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) lt!73599)))

(declare-fun b!140379 () Bool)

(declare-fun lt!73597 () Unit!4387)

(assert (=> b!140379 (= e!91528 lt!73597)))

(assert (=> b!140379 (= lt!73597 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (=> b!140379 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun b!140380 () Bool)

(declare-fun Unit!4414 () Unit!4387)

(assert (=> b!140380 (= e!91528 Unit!4414)))

(declare-fun b!140381 () Bool)

(assert (=> b!140381 (= e!91527 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (= (and d!43775 c!26298) b!140379))

(assert (= (and d!43775 (not c!26298)) b!140380))

(assert (= (and d!43775 (not res!67087)) b!140381))

(assert (=> d!43775 m!166761))

(declare-fun m!167741 () Bool)

(assert (=> d!43775 m!167741))

(assert (=> b!140379 m!166761))

(declare-fun m!167743 () Bool)

(assert (=> b!140379 m!167743))

(assert (=> b!140379 m!166761))

(declare-fun m!167745 () Bool)

(assert (=> b!140379 m!167745))

(assert (=> b!140379 m!167745))

(declare-fun m!167747 () Bool)

(assert (=> b!140379 m!167747))

(assert (=> b!140381 m!166761))

(assert (=> b!140381 m!167745))

(assert (=> b!140381 m!167745))

(assert (=> b!140381 m!167747))

(assert (=> b!140181 d!43775))

(declare-fun b!140382 () Bool)

(declare-fun e!91531 () Bool)

(assert (=> b!140382 (= e!91531 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140383 () Bool)

(declare-fun e!91537 () Bool)

(declare-fun lt!73601 () ListLongMap!1685)

(assert (=> b!140383 (= e!91537 (= (apply!120 lt!73601 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140384 () Bool)

(declare-fun c!26303 () Bool)

(assert (=> b!140384 (= c!26303 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91539 () ListLongMap!1685)

(declare-fun e!91529 () ListLongMap!1685)

(assert (=> b!140384 (= e!91539 e!91529)))

(declare-fun bm!15566 () Bool)

(declare-fun call!15569 () Bool)

(assert (=> bm!15566 (= call!15569 (contains!904 lt!73601 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140385 () Bool)

(declare-fun e!91538 () Bool)

(declare-fun e!91536 () Bool)

(assert (=> b!140385 (= e!91538 e!91536)))

(declare-fun c!26300 () Bool)

(assert (=> b!140385 (= c!26300 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140386 () Bool)

(declare-fun e!91530 () Bool)

(declare-fun e!91532 () Bool)

(assert (=> b!140386 (= e!91530 e!91532)))

(declare-fun res!67096 () Bool)

(assert (=> b!140386 (=> (not res!67096) (not e!91532))))

(assert (=> b!140386 (= res!67096 (contains!904 lt!73601 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140387 () Bool)

(declare-fun res!67090 () Bool)

(assert (=> b!140387 (=> (not res!67090) (not e!91538))))

(declare-fun e!91535 () Bool)

(assert (=> b!140387 (= res!67090 e!91535)))

(declare-fun c!26304 () Bool)

(assert (=> b!140387 (= c!26304 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140388 () Bool)

(declare-fun e!91540 () Bool)

(assert (=> b!140388 (= e!91540 (= (apply!120 lt!73601 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140389 () Bool)

(declare-fun call!15575 () Bool)

(assert (=> b!140389 (= e!91536 (not call!15575))))

(declare-fun b!140390 () Bool)

(assert (=> b!140390 (= e!91532 (= (apply!120 lt!73601 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140390 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 lt!73112)))))

(assert (=> b!140390 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15567 () Bool)

(declare-fun call!15572 () ListLongMap!1685)

(declare-fun call!15570 () ListLongMap!1685)

(assert (=> bm!15567 (= call!15572 call!15570)))

(declare-fun b!140391 () Bool)

(declare-fun res!67094 () Bool)

(assert (=> b!140391 (=> (not res!67094) (not e!91538))))

(assert (=> b!140391 (= res!67094 e!91530)))

(declare-fun res!67093 () Bool)

(assert (=> b!140391 (=> res!67093 e!91530)))

(assert (=> b!140391 (= res!67093 (not e!91531))))

(declare-fun res!67089 () Bool)

(assert (=> b!140391 (=> (not res!67089) (not e!91531))))

(assert (=> b!140391 (= res!67089 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15568 () Bool)

(declare-fun call!15571 () ListLongMap!1685)

(assert (=> bm!15568 (= call!15570 call!15571)))

(declare-fun b!140392 () Bool)

(declare-fun e!91533 () Unit!4387)

(declare-fun lt!73618 () Unit!4387)

(assert (=> b!140392 (= e!91533 lt!73618)))

(declare-fun lt!73605 () ListLongMap!1685)

(assert (=> b!140392 (= lt!73605 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73607 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73607 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73611 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73611 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73621 () Unit!4387)

(assert (=> b!140392 (= lt!73621 (addStillContains!96 lt!73605 lt!73607 (zeroValue!2789 newMap!16) lt!73611))))

(assert (=> b!140392 (contains!904 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))) lt!73611)))

(declare-fun lt!73610 () Unit!4387)

(assert (=> b!140392 (= lt!73610 lt!73621)))

(declare-fun lt!73617 () ListLongMap!1685)

(assert (=> b!140392 (= lt!73617 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73606 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73606 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73612 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73612 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73615 () Unit!4387)

(assert (=> b!140392 (= lt!73615 (addApplyDifferent!96 lt!73617 lt!73606 (minValue!2789 newMap!16) lt!73612))))

(assert (=> b!140392 (= (apply!120 (+!173 lt!73617 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))) lt!73612) (apply!120 lt!73617 lt!73612))))

(declare-fun lt!73600 () Unit!4387)

(assert (=> b!140392 (= lt!73600 lt!73615)))

(declare-fun lt!73604 () ListLongMap!1685)

(assert (=> b!140392 (= lt!73604 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73614 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73614 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73602 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73602 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73613 () Unit!4387)

(assert (=> b!140392 (= lt!73613 (addApplyDifferent!96 lt!73604 lt!73614 (zeroValue!2789 newMap!16) lt!73602))))

(assert (=> b!140392 (= (apply!120 (+!173 lt!73604 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))) lt!73602) (apply!120 lt!73604 lt!73602))))

(declare-fun lt!73603 () Unit!4387)

(assert (=> b!140392 (= lt!73603 lt!73613)))

(declare-fun lt!73620 () ListLongMap!1685)

(assert (=> b!140392 (= lt!73620 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73616 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73616 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73619 () (_ BitVec 64))

(assert (=> b!140392 (= lt!73619 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140392 (= lt!73618 (addApplyDifferent!96 lt!73620 lt!73616 (minValue!2789 newMap!16) lt!73619))))

(assert (=> b!140392 (= (apply!120 (+!173 lt!73620 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))) lt!73619) (apply!120 lt!73620 lt!73619))))

(declare-fun c!26302 () Bool)

(declare-fun bm!15569 () Bool)

(declare-fun call!15573 () ListLongMap!1685)

(declare-fun c!26301 () Bool)

(assert (=> bm!15569 (= call!15573 (+!173 (ite c!26301 call!15571 (ite c!26302 call!15570 call!15572)) (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!43777 () Bool)

(assert (=> d!43777 e!91538))

(declare-fun res!67088 () Bool)

(assert (=> d!43777 (=> (not res!67088) (not e!91538))))

(assert (=> d!43777 (= res!67088 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73608 () ListLongMap!1685)

(assert (=> d!43777 (= lt!73601 lt!73608)))

(declare-fun lt!73609 () Unit!4387)

(assert (=> d!43777 (= lt!73609 e!91533)))

(declare-fun c!26299 () Bool)

(declare-fun e!91534 () Bool)

(assert (=> d!43777 (= c!26299 e!91534)))

(declare-fun res!67091 () Bool)

(assert (=> d!43777 (=> (not res!67091) (not e!91534))))

(assert (=> d!43777 (= res!67091 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91541 () ListLongMap!1685)

(assert (=> d!43777 (= lt!73608 e!91541)))

(assert (=> d!43777 (= c!26301 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43777 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43777 (= (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73601)))

(declare-fun b!140393 () Bool)

(assert (=> b!140393 (= e!91529 call!15572)))

(declare-fun b!140394 () Bool)

(declare-fun Unit!4415 () Unit!4387)

(assert (=> b!140394 (= e!91533 Unit!4415)))

(declare-fun b!140395 () Bool)

(assert (=> b!140395 (= e!91536 e!91537)))

(declare-fun res!67092 () Bool)

(assert (=> b!140395 (= res!67092 call!15575)))

(assert (=> b!140395 (=> (not res!67092) (not e!91537))))

(declare-fun b!140396 () Bool)

(assert (=> b!140396 (= e!91535 e!91540)))

(declare-fun res!67095 () Bool)

(assert (=> b!140396 (= res!67095 call!15569)))

(assert (=> b!140396 (=> (not res!67095) (not e!91540))))

(declare-fun b!140397 () Bool)

(declare-fun call!15574 () ListLongMap!1685)

(assert (=> b!140397 (= e!91529 call!15574)))

(declare-fun b!140398 () Bool)

(assert (=> b!140398 (= e!91539 call!15574)))

(declare-fun b!140399 () Bool)

(assert (=> b!140399 (= e!91541 (+!173 call!15573 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15570 () Bool)

(assert (=> bm!15570 (= call!15571 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140400 () Bool)

(assert (=> b!140400 (= e!91534 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140401 () Bool)

(assert (=> b!140401 (= e!91541 e!91539)))

(assert (=> b!140401 (= c!26302 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140402 () Bool)

(assert (=> b!140402 (= e!91535 (not call!15569))))

(declare-fun bm!15571 () Bool)

(assert (=> bm!15571 (= call!15574 call!15573)))

(declare-fun bm!15572 () Bool)

(assert (=> bm!15572 (= call!15575 (contains!904 lt!73601 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43777 c!26301) b!140399))

(assert (= (and d!43777 (not c!26301)) b!140401))

(assert (= (and b!140401 c!26302) b!140398))

(assert (= (and b!140401 (not c!26302)) b!140384))

(assert (= (and b!140384 c!26303) b!140397))

(assert (= (and b!140384 (not c!26303)) b!140393))

(assert (= (or b!140397 b!140393) bm!15567))

(assert (= (or b!140398 bm!15567) bm!15568))

(assert (= (or b!140398 b!140397) bm!15571))

(assert (= (or b!140399 bm!15568) bm!15570))

(assert (= (or b!140399 bm!15571) bm!15569))

(assert (= (and d!43777 res!67091) b!140400))

(assert (= (and d!43777 c!26299) b!140392))

(assert (= (and d!43777 (not c!26299)) b!140394))

(assert (= (and d!43777 res!67088) b!140391))

(assert (= (and b!140391 res!67089) b!140382))

(assert (= (and b!140391 (not res!67093)) b!140386))

(assert (= (and b!140386 res!67096) b!140390))

(assert (= (and b!140391 res!67094) b!140387))

(assert (= (and b!140387 c!26304) b!140396))

(assert (= (and b!140387 (not c!26304)) b!140402))

(assert (= (and b!140396 res!67095) b!140388))

(assert (= (or b!140396 b!140402) bm!15566))

(assert (= (and b!140387 res!67090) b!140385))

(assert (= (and b!140385 c!26300) b!140395))

(assert (= (and b!140385 (not c!26300)) b!140389))

(assert (= (and b!140395 res!67092) b!140383))

(assert (= (or b!140395 b!140389) bm!15572))

(declare-fun b_lambda!6301 () Bool)

(assert (=> (not b_lambda!6301) (not b!140390)))

(assert (=> b!140390 t!6309))

(declare-fun b_and!8785 () Bool)

(assert (= b_and!8781 (and (=> t!6309 result!4187) b_and!8785)))

(assert (=> b!140390 t!6311))

(declare-fun b_and!8787 () Bool)

(assert (= b_and!8783 (and (=> t!6311 result!4189) b_and!8787)))

(declare-fun m!167749 () Bool)

(assert (=> b!140392 m!167749))

(declare-fun m!167751 () Bool)

(assert (=> b!140392 m!167751))

(declare-fun m!167753 () Bool)

(assert (=> b!140392 m!167753))

(declare-fun m!167755 () Bool)

(assert (=> b!140392 m!167755))

(declare-fun m!167757 () Bool)

(assert (=> b!140392 m!167757))

(assert (=> b!140392 m!166927))

(assert (=> b!140392 m!167749))

(declare-fun m!167759 () Bool)

(assert (=> b!140392 m!167759))

(declare-fun m!167761 () Bool)

(assert (=> b!140392 m!167761))

(assert (=> b!140392 m!167761))

(declare-fun m!167763 () Bool)

(assert (=> b!140392 m!167763))

(declare-fun m!167765 () Bool)

(assert (=> b!140392 m!167765))

(declare-fun m!167767 () Bool)

(assert (=> b!140392 m!167767))

(declare-fun m!167769 () Bool)

(assert (=> b!140392 m!167769))

(declare-fun m!167771 () Bool)

(assert (=> b!140392 m!167771))

(declare-fun m!167773 () Bool)

(assert (=> b!140392 m!167773))

(declare-fun m!167775 () Bool)

(assert (=> b!140392 m!167775))

(assert (=> b!140392 m!167755))

(declare-fun m!167777 () Bool)

(assert (=> b!140392 m!167777))

(assert (=> b!140392 m!167767))

(declare-fun m!167779 () Bool)

(assert (=> b!140392 m!167779))

(declare-fun m!167781 () Bool)

(assert (=> b!140399 m!167781))

(declare-fun m!167783 () Bool)

(assert (=> b!140388 m!167783))

(declare-fun m!167785 () Bool)

(assert (=> bm!15566 m!167785))

(assert (=> b!140382 m!166927))

(assert (=> b!140382 m!166927))

(assert (=> b!140382 m!166957))

(declare-fun m!167787 () Bool)

(assert (=> b!140383 m!167787))

(declare-fun m!167789 () Bool)

(assert (=> b!140390 m!167789))

(assert (=> b!140390 m!167789))

(assert (=> b!140390 m!166963))

(declare-fun m!167791 () Bool)

(assert (=> b!140390 m!167791))

(assert (=> b!140390 m!166927))

(assert (=> b!140390 m!166927))

(declare-fun m!167793 () Bool)

(assert (=> b!140390 m!167793))

(assert (=> b!140390 m!166963))

(declare-fun m!167795 () Bool)

(assert (=> bm!15572 m!167795))

(assert (=> d!43777 m!166907))

(declare-fun m!167797 () Bool)

(assert (=> bm!15569 m!167797))

(assert (=> bm!15570 m!167757))

(assert (=> b!140386 m!166927))

(assert (=> b!140386 m!166927))

(declare-fun m!167799 () Bool)

(assert (=> b!140386 m!167799))

(assert (=> b!140400 m!166927))

(assert (=> b!140400 m!166927))

(assert (=> b!140400 m!166957))

(assert (=> b!140181 d!43777))

(declare-fun b!140403 () Bool)

(declare-fun res!67098 () Bool)

(declare-fun e!91547 () Bool)

(assert (=> b!140403 (=> (not res!67098) (not e!91547))))

(declare-fun lt!73624 () ListLongMap!1685)

(assert (=> b!140403 (= res!67098 (not (contains!904 lt!73624 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140404 () Bool)

(declare-fun e!91543 () Bool)

(assert (=> b!140404 (= e!91547 e!91543)))

(declare-fun c!26305 () Bool)

(declare-fun e!91545 () Bool)

(assert (=> b!140404 (= c!26305 e!91545)))

(declare-fun res!67099 () Bool)

(assert (=> b!140404 (=> (not res!67099) (not e!91545))))

(assert (=> b!140404 (= res!67099 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91544 () Bool)

(declare-fun b!140405 () Bool)

(assert (=> b!140405 (= e!91544 (= lt!73624 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140406 () Bool)

(declare-fun lt!73626 () Unit!4387)

(declare-fun lt!73622 () Unit!4387)

(assert (=> b!140406 (= lt!73626 lt!73622)))

(declare-fun lt!73623 () (_ BitVec 64))

(declare-fun lt!73628 () (_ BitVec 64))

(declare-fun lt!73627 () V!3553)

(declare-fun lt!73625 () ListLongMap!1685)

(assert (=> b!140406 (not (contains!904 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627)) lt!73628))))

(assert (=> b!140406 (= lt!73622 (addStillNotContains!66 lt!73625 lt!73623 lt!73627 lt!73628))))

(assert (=> b!140406 (= lt!73628 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140406 (= lt!73627 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140406 (= lt!73623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!15576 () ListLongMap!1685)

(assert (=> b!140406 (= lt!73625 call!15576)))

(declare-fun e!91548 () ListLongMap!1685)

(assert (=> b!140406 (= e!91548 (+!173 call!15576 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140407 () Bool)

(declare-fun e!91542 () Bool)

(assert (=> b!140407 (= e!91543 e!91542)))

(assert (=> b!140407 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun res!67100 () Bool)

(assert (=> b!140407 (= res!67100 (contains!904 lt!73624 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140407 (=> (not res!67100) (not e!91542))))

(declare-fun d!43779 () Bool)

(assert (=> d!43779 e!91547))

(declare-fun res!67097 () Bool)

(assert (=> d!43779 (=> (not res!67097) (not e!91547))))

(assert (=> d!43779 (= res!67097 (not (contains!904 lt!73624 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91546 () ListLongMap!1685)

(assert (=> d!43779 (= lt!73624 e!91546)))

(declare-fun c!26308 () Bool)

(assert (=> d!43779 (= c!26308 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43779 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!43779 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) lt!73624)))

(declare-fun bm!15573 () Bool)

(assert (=> bm!15573 (= call!15576 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!140408 () Bool)

(assert (=> b!140408 (= e!91548 call!15576)))

(declare-fun b!140409 () Bool)

(assert (=> b!140409 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!140409 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!140409 (= e!91542 (= (apply!120 lt!73624 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140410 () Bool)

(assert (=> b!140410 (= e!91544 (isEmpty!424 lt!73624))))

(declare-fun b!140411 () Bool)

(assert (=> b!140411 (= e!91546 e!91548)))

(declare-fun c!26306 () Bool)

(assert (=> b!140411 (= c!26306 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140412 () Bool)

(assert (=> b!140412 (= e!91545 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140412 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!140413 () Bool)

(assert (=> b!140413 (= e!91543 e!91544)))

(declare-fun c!26307 () Bool)

(assert (=> b!140413 (= c!26307 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140414 () Bool)

(assert (=> b!140414 (= e!91546 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!43779 c!26308) b!140414))

(assert (= (and d!43779 (not c!26308)) b!140411))

(assert (= (and b!140411 c!26306) b!140406))

(assert (= (and b!140411 (not c!26306)) b!140408))

(assert (= (or b!140406 b!140408) bm!15573))

(assert (= (and d!43779 res!67097) b!140403))

(assert (= (and b!140403 res!67098) b!140404))

(assert (= (and b!140404 res!67099) b!140412))

(assert (= (and b!140404 c!26305) b!140407))

(assert (= (and b!140404 (not c!26305)) b!140413))

(assert (= (and b!140407 res!67100) b!140409))

(assert (= (and b!140413 c!26307) b!140405))

(assert (= (and b!140413 (not c!26307)) b!140410))

(declare-fun b_lambda!6303 () Bool)

(assert (=> (not b_lambda!6303) (not b!140406)))

(assert (=> b!140406 t!6292))

(declare-fun b_and!8789 () Bool)

(assert (= b_and!8785 (and (=> t!6292 result!4167) b_and!8789)))

(assert (=> b!140406 t!6294))

(declare-fun b_and!8791 () Bool)

(assert (= b_and!8787 (and (=> t!6294 result!4171) b_and!8791)))

(declare-fun b_lambda!6305 () Bool)

(assert (=> (not b_lambda!6305) (not b!140409)))

(assert (=> b!140409 t!6292))

(declare-fun b_and!8793 () Bool)

(assert (= b_and!8789 (and (=> t!6292 result!4167) b_and!8793)))

(assert (=> b!140409 t!6294))

(declare-fun b_and!8795 () Bool)

(assert (= b_and!8791 (and (=> t!6294 result!4171) b_and!8795)))

(assert (=> b!140406 m!167405))

(declare-fun m!167801 () Bool)

(assert (=> b!140406 m!167801))

(declare-fun m!167803 () Bool)

(assert (=> b!140406 m!167803))

(assert (=> b!140406 m!166661))

(assert (=> b!140406 m!167801))

(declare-fun m!167805 () Bool)

(assert (=> b!140406 m!167805))

(declare-fun m!167807 () Bool)

(assert (=> b!140406 m!167807))

(assert (=> b!140406 m!167807))

(assert (=> b!140406 m!166661))

(declare-fun m!167809 () Bool)

(assert (=> b!140406 m!167809))

(declare-fun m!167811 () Bool)

(assert (=> b!140406 m!167811))

(assert (=> b!140412 m!167405))

(assert (=> b!140412 m!167405))

(declare-fun m!167813 () Bool)

(assert (=> b!140412 m!167813))

(declare-fun m!167815 () Bool)

(assert (=> b!140405 m!167815))

(assert (=> b!140409 m!167405))

(assert (=> b!140409 m!166661))

(assert (=> b!140409 m!167807))

(assert (=> b!140409 m!167807))

(assert (=> b!140409 m!166661))

(assert (=> b!140409 m!167809))

(assert (=> b!140409 m!167405))

(declare-fun m!167817 () Bool)

(assert (=> b!140409 m!167817))

(declare-fun m!167819 () Bool)

(assert (=> b!140403 m!167819))

(declare-fun m!167821 () Bool)

(assert (=> d!43779 m!167821))

(assert (=> d!43779 m!166839))

(declare-fun m!167823 () Bool)

(assert (=> b!140410 m!167823))

(assert (=> b!140407 m!167405))

(assert (=> b!140407 m!167405))

(declare-fun m!167825 () Bool)

(assert (=> b!140407 m!167825))

(assert (=> b!140411 m!167405))

(assert (=> b!140411 m!167405))

(assert (=> b!140411 m!167813))

(assert (=> bm!15573 m!167815))

(assert (=> b!140151 d!43779))

(declare-fun b!140416 () Bool)

(declare-fun res!67101 () Bool)

(declare-fun e!91549 () Bool)

(assert (=> b!140416 (=> (not res!67101) (not e!91549))))

(assert (=> b!140416 (= res!67101 (bvsge (size!2584 (_2!1323 lt!73124)) (_size!624 (_2!1323 lt!73124))))))

(declare-fun d!43781 () Bool)

(declare-fun res!67103 () Bool)

(assert (=> d!43781 (=> (not res!67103) (not e!91549))))

(assert (=> d!43781 (= res!67103 (validMask!0 (mask!7279 (_2!1323 lt!73124))))))

(assert (=> d!43781 (= (simpleValid!96 (_2!1323 lt!73124)) e!91549)))

(declare-fun b!140417 () Bool)

(declare-fun res!67102 () Bool)

(assert (=> b!140417 (=> (not res!67102) (not e!91549))))

(assert (=> b!140417 (= res!67102 (= (size!2584 (_2!1323 lt!73124)) (bvadd (_size!624 (_2!1323 lt!73124)) (bvsdiv (bvadd (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140415 () Bool)

(declare-fun res!67104 () Bool)

(assert (=> b!140415 (=> (not res!67104) (not e!91549))))

(assert (=> b!140415 (= res!67104 (and (= (size!2579 (_values!2922 (_2!1323 lt!73124))) (bvadd (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000000000001)) (= (size!2578 (_keys!4698 (_2!1323 lt!73124))) (size!2579 (_values!2922 (_2!1323 lt!73124)))) (bvsge (_size!624 (_2!1323 lt!73124)) #b00000000000000000000000000000000) (bvsle (_size!624 (_2!1323 lt!73124)) (bvadd (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000000000001))))))

(declare-fun b!140418 () Bool)

(assert (=> b!140418 (= e!91549 (and (bvsge (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000011) (bvsge (_vacant!624 (_2!1323 lt!73124)) #b00000000000000000000000000000000)))))

(assert (= (and d!43781 res!67103) b!140415))

(assert (= (and b!140415 res!67104) b!140416))

(assert (= (and b!140416 res!67101) b!140417))

(assert (= (and b!140417 res!67102) b!140418))

(declare-fun m!167827 () Bool)

(assert (=> b!140416 m!167827))

(declare-fun m!167829 () Bool)

(assert (=> d!43781 m!167829))

(assert (=> b!140417 m!167827))

(assert (=> d!43573 d!43781))

(declare-fun d!43783 () Bool)

(assert (=> d!43783 (= (apply!120 lt!73215 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5877 () Bool)

(assert (= bs!5877 d!43783))

(declare-fun m!167831 () Bool)

(assert (=> bs!5877 m!167831))

(assert (=> bs!5877 m!167831))

(declare-fun m!167833 () Bool)

(assert (=> bs!5877 m!167833))

(assert (=> b!139928 d!43783))

(assert (=> bm!15505 d!43741))

(assert (=> d!43641 d!43623))

(assert (=> d!43641 d!43651))

(assert (=> d!43641 d!43633))

(declare-fun d!43785 () Bool)

(assert (=> d!43785 (= (apply!120 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73195) (apply!120 lt!73200 lt!73195))))

(assert (=> d!43785 true))

(declare-fun _$34!1003 () Unit!4387)

(assert (=> d!43785 (= (choose!867 lt!73200 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73195) _$34!1003)))

(declare-fun bs!5878 () Bool)

(assert (= bs!5878 d!43785))

(assert (=> bs!5878 m!166841))

(assert (=> bs!5878 m!166841))

(assert (=> bs!5878 m!166843))

(assert (=> bs!5878 m!166863))

(assert (=> d!43641 d!43785))

(declare-fun d!43787 () Bool)

(declare-fun e!91550 () Bool)

(assert (=> d!43787 e!91550))

(declare-fun res!67105 () Bool)

(assert (=> d!43787 (=> res!67105 e!91550)))

(declare-fun lt!73632 () Bool)

(assert (=> d!43787 (= res!67105 (not lt!73632))))

(declare-fun lt!73629 () Bool)

(assert (=> d!43787 (= lt!73632 lt!73629)))

(declare-fun lt!73631 () Unit!4387)

(declare-fun e!91551 () Unit!4387)

(assert (=> d!43787 (= lt!73631 e!91551)))

(declare-fun c!26309 () Bool)

(assert (=> d!43787 (= c!26309 lt!73629)))

(assert (=> d!43787 (= lt!73629 (containsKey!180 (toList!858 lt!73200) lt!73195))))

(assert (=> d!43787 (= (contains!904 lt!73200 lt!73195) lt!73632)))

(declare-fun b!140419 () Bool)

(declare-fun lt!73630 () Unit!4387)

(assert (=> b!140419 (= e!91551 lt!73630)))

(assert (=> b!140419 (= lt!73630 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73200) lt!73195))))

(assert (=> b!140419 (isDefined!129 (getValueByKey!177 (toList!858 lt!73200) lt!73195))))

(declare-fun b!140420 () Bool)

(declare-fun Unit!4416 () Unit!4387)

(assert (=> b!140420 (= e!91551 Unit!4416)))

(declare-fun b!140421 () Bool)

(assert (=> b!140421 (= e!91550 (isDefined!129 (getValueByKey!177 (toList!858 lt!73200) lt!73195)))))

(assert (= (and d!43787 c!26309) b!140419))

(assert (= (and d!43787 (not c!26309)) b!140420))

(assert (= (and d!43787 (not res!67105)) b!140421))

(declare-fun m!167835 () Bool)

(assert (=> d!43787 m!167835))

(declare-fun m!167837 () Bool)

(assert (=> b!140419 m!167837))

(assert (=> b!140419 m!167371))

(assert (=> b!140419 m!167371))

(declare-fun m!167839 () Bool)

(assert (=> b!140419 m!167839))

(assert (=> b!140421 m!167371))

(assert (=> b!140421 m!167371))

(assert (=> b!140421 m!167839))

(assert (=> d!43641 d!43787))

(declare-fun d!43789 () Bool)

(declare-fun e!91552 () Bool)

(assert (=> d!43789 e!91552))

(declare-fun res!67106 () Bool)

(assert (=> d!43789 (=> res!67106 e!91552)))

(declare-fun lt!73636 () Bool)

(assert (=> d!43789 (= res!67106 (not lt!73636))))

(declare-fun lt!73633 () Bool)

(assert (=> d!43789 (= lt!73636 lt!73633)))

(declare-fun lt!73635 () Unit!4387)

(declare-fun e!91553 () Unit!4387)

(assert (=> d!43789 (= lt!73635 e!91553)))

(declare-fun c!26310 () Bool)

(assert (=> d!43789 (= c!26310 lt!73633)))

(assert (=> d!43789 (= lt!73633 (containsKey!180 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43789 (= (contains!904 (map!1429 (_2!1323 lt!73410)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73636)))

(declare-fun b!140422 () Bool)

(declare-fun lt!73634 () Unit!4387)

(assert (=> b!140422 (= e!91553 lt!73634)))

(assert (=> b!140422 (= lt!73634 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!140422 (isDefined!129 (getValueByKey!177 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140423 () Bool)

(declare-fun Unit!4417 () Unit!4387)

(assert (=> b!140423 (= e!91553 Unit!4417)))

(declare-fun b!140424 () Bool)

(assert (=> b!140424 (= e!91552 (isDefined!129 (getValueByKey!177 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (= (and d!43789 c!26310) b!140422))

(assert (= (and d!43789 (not c!26310)) b!140423))

(assert (= (and d!43789 (not res!67106)) b!140424))

(assert (=> d!43789 m!166633))

(declare-fun m!167841 () Bool)

(assert (=> d!43789 m!167841))

(assert (=> b!140422 m!166633))

(declare-fun m!167843 () Bool)

(assert (=> b!140422 m!167843))

(assert (=> b!140422 m!166633))

(declare-fun m!167845 () Bool)

(assert (=> b!140422 m!167845))

(assert (=> b!140422 m!167845))

(declare-fun m!167847 () Bool)

(assert (=> b!140422 m!167847))

(assert (=> b!140424 m!166633))

(assert (=> b!140424 m!167845))

(assert (=> b!140424 m!167845))

(assert (=> b!140424 m!167847))

(assert (=> b!140094 d!43789))

(declare-fun d!43791 () Bool)

(assert (=> d!43791 (= (map!1429 (_2!1323 lt!73410)) (getCurrentListMap!531 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))))))

(declare-fun bs!5879 () Bool)

(assert (= bs!5879 d!43791))

(declare-fun m!167849 () Bool)

(assert (=> bs!5879 m!167849))

(assert (=> b!140094 d!43791))

(declare-fun d!43793 () Bool)

(declare-fun e!91554 () Bool)

(assert (=> d!43793 e!91554))

(declare-fun res!67107 () Bool)

(assert (=> d!43793 (=> res!67107 e!91554)))

(declare-fun lt!73640 () Bool)

(assert (=> d!43793 (= res!67107 (not lt!73640))))

(declare-fun lt!73637 () Bool)

(assert (=> d!43793 (= lt!73640 lt!73637)))

(declare-fun lt!73639 () Unit!4387)

(declare-fun e!91555 () Unit!4387)

(assert (=> d!43793 (= lt!73639 e!91555)))

(declare-fun c!26311 () Bool)

(assert (=> d!43793 (= c!26311 lt!73637)))

(assert (=> d!43793 (= lt!73637 (containsKey!180 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43793 (= (contains!904 lt!73446 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73640)))

(declare-fun b!140425 () Bool)

(declare-fun lt!73638 () Unit!4387)

(assert (=> b!140425 (= e!91555 lt!73638)))

(assert (=> b!140425 (= lt!73638 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140425 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140426 () Bool)

(declare-fun Unit!4418 () Unit!4387)

(assert (=> b!140426 (= e!91555 Unit!4418)))

(declare-fun b!140427 () Bool)

(assert (=> b!140427 (= e!91554 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43793 c!26311) b!140425))

(assert (= (and d!43793 (not c!26311)) b!140426))

(assert (= (and d!43793 (not res!67107)) b!140427))

(declare-fun m!167851 () Bool)

(assert (=> d!43793 m!167851))

(declare-fun m!167853 () Bool)

(assert (=> b!140425 m!167853))

(declare-fun m!167855 () Bool)

(assert (=> b!140425 m!167855))

(assert (=> b!140425 m!167855))

(declare-fun m!167857 () Bool)

(assert (=> b!140425 m!167857))

(assert (=> b!140427 m!167855))

(assert (=> b!140427 m!167855))

(assert (=> b!140427 m!167857))

(assert (=> d!43629 d!43793))

(assert (=> d!43629 d!43665))

(declare-fun b!140446 () Bool)

(declare-fun e!91567 () Bool)

(declare-fun lt!73646 () SeekEntryResult!273)

(assert (=> b!140446 (= e!91567 (bvsge (x!16130 lt!73646) #b01111111111111111111111111111110))))

(declare-fun e!91566 () SeekEntryResult!273)

(declare-fun b!140447 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!140447 (= e!91566 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!140448 () Bool)

(declare-fun e!91570 () SeekEntryResult!273)

(assert (=> b!140448 (= e!91570 e!91566)))

(declare-fun lt!73645 () (_ BitVec 64))

(declare-fun c!26319 () Bool)

(assert (=> b!140448 (= c!26319 (or (= lt!73645 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (= (bvadd lt!73645 lt!73645) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140449 () Bool)

(assert (=> b!140449 (= e!91570 (Intermediate!273 true (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!140451 () Bool)

(assert (=> b!140451 (and (bvsge (index!3257 lt!73646) #b00000000000000000000000000000000) (bvslt (index!3257 lt!73646) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67115 () Bool)

(assert (=> b!140451 (= res!67115 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73646)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91568 () Bool)

(assert (=> b!140451 (=> res!67115 e!91568)))

(declare-fun b!140452 () Bool)

(assert (=> b!140452 (and (bvsge (index!3257 lt!73646) #b00000000000000000000000000000000) (bvslt (index!3257 lt!73646) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!140452 (= e!91568 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73646)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140453 () Bool)

(assert (=> b!140453 (= e!91566 (Intermediate!273 false (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!140454 () Bool)

(declare-fun e!91569 () Bool)

(assert (=> b!140454 (= e!91567 e!91569)))

(declare-fun res!67114 () Bool)

(assert (=> b!140454 (= res!67114 (and ((_ is Intermediate!273) lt!73646) (not (undefined!1085 lt!73646)) (bvslt (x!16130 lt!73646) #b01111111111111111111111111111110) (bvsge (x!16130 lt!73646) #b00000000000000000000000000000000) (bvsge (x!16130 lt!73646) #b00000000000000000000000000000000)))))

(assert (=> b!140454 (=> (not res!67114) (not e!91569))))

(declare-fun d!43795 () Bool)

(assert (=> d!43795 e!91567))

(declare-fun c!26318 () Bool)

(assert (=> d!43795 (= c!26318 (and ((_ is Intermediate!273) lt!73646) (undefined!1085 lt!73646)))))

(assert (=> d!43795 (= lt!73646 e!91570)))

(declare-fun c!26320 () Bool)

(assert (=> d!43795 (= c!26320 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!43795 (= lt!73645 (select (arr!2306 (_keys!4698 newMap!16)) (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16))))))

(assert (=> d!43795 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43795 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!73646)))

(declare-fun b!140450 () Bool)

(assert (=> b!140450 (and (bvsge (index!3257 lt!73646) #b00000000000000000000000000000000) (bvslt (index!3257 lt!73646) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67116 () Bool)

(assert (=> b!140450 (= res!67116 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73646)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!140450 (=> res!67116 e!91568)))

(assert (=> b!140450 (= e!91569 e!91568)))

(assert (= (and d!43795 c!26320) b!140449))

(assert (= (and d!43795 (not c!26320)) b!140448))

(assert (= (and b!140448 c!26319) b!140453))

(assert (= (and b!140448 (not c!26319)) b!140447))

(assert (= (and d!43795 c!26318) b!140446))

(assert (= (and d!43795 (not c!26318)) b!140454))

(assert (= (and b!140454 res!67114) b!140450))

(assert (= (and b!140450 (not res!67116)) b!140451))

(assert (= (and b!140451 (not res!67115)) b!140452))

(declare-fun m!167859 () Bool)

(assert (=> b!140451 m!167859))

(assert (=> d!43795 m!166903))

(declare-fun m!167861 () Bool)

(assert (=> d!43795 m!167861))

(assert (=> d!43795 m!166907))

(assert (=> b!140450 m!167859))

(assert (=> b!140452 m!167859))

(assert (=> b!140447 m!166903))

(declare-fun m!167863 () Bool)

(assert (=> b!140447 m!167863))

(assert (=> b!140447 m!167863))

(assert (=> b!140447 m!166633))

(declare-fun m!167865 () Bool)

(assert (=> b!140447 m!167865))

(assert (=> d!43561 d!43795))

(declare-fun d!43797 () Bool)

(declare-fun lt!73652 () (_ BitVec 32))

(declare-fun lt!73651 () (_ BitVec 32))

(assert (=> d!43797 (= lt!73652 (bvmul (bvxor lt!73651 (bvlshr lt!73651 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!43797 (= lt!73651 ((_ extract 31 0) (bvand (bvxor (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvlshr (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!43797 (and (bvsge (mask!7279 newMap!16) #b00000000000000000000000000000000) (let ((res!67117 (let ((h!2327 ((_ extract 31 0) (bvand (bvxor (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvlshr (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16233 (bvmul (bvxor h!2327 (bvlshr h!2327 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16233 (bvlshr x!16233 #b00000000000000000000000000001101)) (mask!7279 newMap!16)))))) (and (bvslt res!67117 (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67117 #b00000000000000000000000000000000))))))

(assert (=> d!43797 (= (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvand (bvxor lt!73652 (bvlshr lt!73652 #b00000000000000000000000000001101)) (mask!7279 newMap!16)))))

(assert (=> d!43561 d!43797))

(assert (=> d!43561 d!43697))

(declare-fun d!43799 () Bool)

(declare-fun e!91571 () Bool)

(assert (=> d!43799 e!91571))

(declare-fun res!67118 () Bool)

(assert (=> d!43799 (=> res!67118 e!91571)))

(declare-fun lt!73656 () Bool)

(assert (=> d!43799 (= res!67118 (not lt!73656))))

(declare-fun lt!73653 () Bool)

(assert (=> d!43799 (= lt!73656 lt!73653)))

(declare-fun lt!73655 () Unit!4387)

(declare-fun e!91572 () Unit!4387)

(assert (=> d!43799 (= lt!73655 e!91572)))

(declare-fun c!26321 () Bool)

(assert (=> d!43799 (= c!26321 lt!73653)))

(assert (=> d!43799 (= lt!73653 (containsKey!180 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43799 (= (contains!904 lt!73237 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73656)))

(declare-fun b!140455 () Bool)

(declare-fun lt!73654 () Unit!4387)

(assert (=> b!140455 (= e!91572 lt!73654)))

(assert (=> b!140455 (= lt!73654 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140455 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140456 () Bool)

(declare-fun Unit!4419 () Unit!4387)

(assert (=> b!140456 (= e!91572 Unit!4419)))

(declare-fun b!140457 () Bool)

(assert (=> b!140457 (= e!91571 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43799 c!26321) b!140455))

(assert (= (and d!43799 (not c!26321)) b!140456))

(assert (= (and d!43799 (not res!67118)) b!140457))

(declare-fun m!167867 () Bool)

(assert (=> d!43799 m!167867))

(declare-fun m!167869 () Bool)

(assert (=> b!140455 m!167869))

(assert (=> b!140455 m!167705))

(assert (=> b!140455 m!167705))

(declare-fun m!167871 () Bool)

(assert (=> b!140455 m!167871))

(assert (=> b!140457 m!167705))

(assert (=> b!140457 m!167705))

(assert (=> b!140457 m!167871))

(assert (=> bm!15514 d!43799))

(declare-fun d!43801 () Bool)

(declare-fun e!91573 () Bool)

(assert (=> d!43801 e!91573))

(declare-fun res!67119 () Bool)

(assert (=> d!43801 (=> res!67119 e!91573)))

(declare-fun lt!73660 () Bool)

(assert (=> d!43801 (= res!67119 (not lt!73660))))

(declare-fun lt!73657 () Bool)

(assert (=> d!43801 (= lt!73660 lt!73657)))

(declare-fun lt!73659 () Unit!4387)

(declare-fun e!91574 () Unit!4387)

(assert (=> d!43801 (= lt!73659 e!91574)))

(declare-fun c!26322 () Bool)

(assert (=> d!43801 (= c!26322 lt!73657)))

(assert (=> d!43801 (= lt!73657 (containsKey!180 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43801 (= (contains!904 lt!73215 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!73660)))

(declare-fun b!140458 () Bool)

(declare-fun lt!73658 () Unit!4387)

(assert (=> b!140458 (= e!91574 lt!73658)))

(assert (=> b!140458 (= lt!73658 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140458 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140459 () Bool)

(declare-fun Unit!4420 () Unit!4387)

(assert (=> b!140459 (= e!91574 Unit!4420)))

(declare-fun b!140460 () Bool)

(assert (=> b!140460 (= e!91573 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43801 c!26322) b!140458))

(assert (= (and d!43801 (not c!26322)) b!140459))

(assert (= (and d!43801 (not res!67119)) b!140460))

(assert (=> d!43801 m!166927))

(declare-fun m!167873 () Bool)

(assert (=> d!43801 m!167873))

(assert (=> b!140458 m!166927))

(declare-fun m!167875 () Bool)

(assert (=> b!140458 m!167875))

(assert (=> b!140458 m!166927))

(assert (=> b!140458 m!167543))

(assert (=> b!140458 m!167543))

(declare-fun m!167877 () Bool)

(assert (=> b!140458 m!167877))

(assert (=> b!140460 m!166927))

(assert (=> b!140460 m!167543))

(assert (=> b!140460 m!167543))

(assert (=> b!140460 m!167877))

(assert (=> b!139931 d!43801))

(declare-fun d!43803 () Bool)

(declare-fun res!67120 () Bool)

(declare-fun e!91575 () Bool)

(assert (=> d!43803 (=> (not res!67120) (not e!91575))))

(assert (=> d!43803 (= res!67120 (simpleValid!96 (_2!1323 lt!73410)))))

(assert (=> d!43803 (= (valid!567 (_2!1323 lt!73410)) e!91575)))

(declare-fun b!140461 () Bool)

(declare-fun res!67121 () Bool)

(assert (=> b!140461 (=> (not res!67121) (not e!91575))))

(assert (=> b!140461 (= res!67121 (= (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))) (_size!624 (_2!1323 lt!73410))))))

(declare-fun b!140462 () Bool)

(declare-fun res!67122 () Bool)

(assert (=> b!140462 (=> (not res!67122) (not e!91575))))

(assert (=> b!140462 (= res!67122 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410))))))

(declare-fun b!140463 () Bool)

(assert (=> b!140463 (= e!91575 (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73410)) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!43803 res!67120) b!140461))

(assert (= (and b!140461 res!67121) b!140462))

(assert (= (and b!140462 res!67122) b!140463))

(declare-fun m!167879 () Bool)

(assert (=> d!43803 m!167879))

(declare-fun m!167881 () Bool)

(assert (=> b!140461 m!167881))

(declare-fun m!167883 () Bool)

(assert (=> b!140462 m!167883))

(declare-fun m!167885 () Bool)

(assert (=> b!140463 m!167885))

(assert (=> b!140102 d!43803))

(assert (=> d!43563 d!43697))

(declare-fun d!43805 () Bool)

(declare-fun e!91576 () Bool)

(assert (=> d!43805 e!91576))

(declare-fun res!67123 () Bool)

(assert (=> d!43805 (=> (not res!67123) (not e!91576))))

(declare-fun lt!73663 () ListLongMap!1685)

(assert (=> d!43805 (= res!67123 (contains!904 lt!73663 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!73662 () List!1719)

(assert (=> d!43805 (= lt!73663 (ListLongMap!1686 lt!73662))))

(declare-fun lt!73661 () Unit!4387)

(declare-fun lt!73664 () Unit!4387)

(assert (=> d!43805 (= lt!73661 lt!73664)))

(assert (=> d!43805 (= (getValueByKey!177 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!43805 (= lt!73664 (lemmaContainsTupThenGetReturnValue!91 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!43805 (= lt!73662 (insertStrictlySorted!94 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!43805 (= (+!173 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!73663)))

(declare-fun b!140464 () Bool)

(declare-fun res!67124 () Bool)

(assert (=> b!140464 (=> (not res!67124) (not e!91576))))

(assert (=> b!140464 (= res!67124 (= (getValueByKey!177 (toList!858 lt!73663) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!140465 () Bool)

(assert (=> b!140465 (= e!91576 (contains!907 (toList!858 lt!73663) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!43805 res!67123) b!140464))

(assert (= (and b!140464 res!67124) b!140465))

(declare-fun m!167887 () Bool)

(assert (=> d!43805 m!167887))

(declare-fun m!167889 () Bool)

(assert (=> d!43805 m!167889))

(declare-fun m!167891 () Bool)

(assert (=> d!43805 m!167891))

(declare-fun m!167893 () Bool)

(assert (=> d!43805 m!167893))

(declare-fun m!167895 () Bool)

(assert (=> b!140464 m!167895))

(declare-fun m!167897 () Bool)

(assert (=> b!140465 m!167897))

(assert (=> bm!15511 d!43805))

(assert (=> d!43687 d!43547))

(declare-fun b!140467 () Bool)

(declare-fun e!91577 () Option!183)

(declare-fun e!91578 () Option!183)

(assert (=> b!140467 (= e!91577 e!91578)))

(declare-fun c!26324 () Bool)

(assert (=> b!140467 (= c!26324 (and ((_ is Cons!1715) (toList!858 lt!73425)) (not (= (_1!1322 (h!2322 (toList!858 lt!73425))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140468 () Bool)

(assert (=> b!140468 (= e!91578 (getValueByKey!177 (t!6295 (toList!858 lt!73425)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140466 () Bool)

(assert (=> b!140466 (= e!91577 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73425)))))))

(declare-fun b!140469 () Bool)

(assert (=> b!140469 (= e!91578 None!181)))

(declare-fun d!43807 () Bool)

(declare-fun c!26323 () Bool)

(assert (=> d!43807 (= c!26323 (and ((_ is Cons!1715) (toList!858 lt!73425)) (= (_1!1322 (h!2322 (toList!858 lt!73425))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43807 (= (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91577)))

(assert (= (and d!43807 c!26323) b!140466))

(assert (= (and d!43807 (not c!26323)) b!140467))

(assert (= (and b!140467 c!26324) b!140468))

(assert (= (and b!140467 (not c!26324)) b!140469))

(declare-fun m!167899 () Bool)

(assert (=> b!140468 m!167899))

(assert (=> b!140122 d!43807))

(declare-fun b!140471 () Bool)

(declare-fun e!91579 () Option!183)

(declare-fun e!91580 () Option!183)

(assert (=> b!140471 (= e!91579 e!91580)))

(declare-fun c!26326 () Bool)

(assert (=> b!140471 (= c!26326 (and ((_ is Cons!1715) (toList!858 lt!73290)) (not (= (_1!1322 (h!2322 (toList!858 lt!73290))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140472 () Bool)

(assert (=> b!140472 (= e!91580 (getValueByKey!177 (t!6295 (toList!858 lt!73290)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140470 () Bool)

(assert (=> b!140470 (= e!91579 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73290)))))))

(declare-fun b!140473 () Bool)

(assert (=> b!140473 (= e!91580 None!181)))

(declare-fun d!43809 () Bool)

(declare-fun c!26325 () Bool)

(assert (=> d!43809 (= c!26325 (and ((_ is Cons!1715) (toList!858 lt!73290)) (= (_1!1322 (h!2322 (toList!858 lt!73290))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43809 (= (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91579)))

(assert (= (and d!43809 c!26325) b!140470))

(assert (= (and d!43809 (not c!26325)) b!140471))

(assert (= (and b!140471 c!26326) b!140472))

(assert (= (and b!140471 (not c!26326)) b!140473))

(declare-fun m!167901 () Bool)

(assert (=> b!140472 m!167901))

(assert (=> b!139991 d!43809))

(declare-fun d!43811 () Bool)

(assert (=> d!43811 (= (get!1535 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43681 d!43811))

(assert (=> d!43681 d!43757))

(declare-fun b!140474 () Bool)

(declare-fun e!91581 () (_ BitVec 32))

(assert (=> b!140474 (= e!91581 #b00000000000000000000000000000000)))

(declare-fun b!140476 () Bool)

(declare-fun e!91582 () (_ BitVec 32))

(declare-fun call!15577 () (_ BitVec 32))

(assert (=> b!140476 (= e!91582 (bvadd #b00000000000000000000000000000001 call!15577))))

(declare-fun d!43813 () Bool)

(declare-fun lt!73665 () (_ BitVec 32))

(assert (=> d!43813 (and (bvsge lt!73665 #b00000000000000000000000000000000) (bvsle lt!73665 (bvsub (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!43813 (= lt!73665 e!91581)))

(declare-fun c!26327 () Bool)

(assert (=> d!43813 (= c!26327 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43813 (and (bvsle #b00000000000000000000000000000000 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43813 (= (arrayCountValidKeys!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))) lt!73665)))

(declare-fun b!140475 () Bool)

(assert (=> b!140475 (= e!91581 e!91582)))

(declare-fun c!26328 () Bool)

(assert (=> b!140475 (= c!26328 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!15574 () Bool)

(assert (=> bm!15574 (= call!15577 (arrayCountValidKeys!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140477 () Bool)

(assert (=> b!140477 (= e!91582 call!15577)))

(assert (= (and d!43813 c!26327) b!140474))

(assert (= (and d!43813 (not c!26327)) b!140475))

(assert (= (and b!140475 c!26328) b!140476))

(assert (= (and b!140475 (not c!26328)) b!140477))

(assert (= (or b!140476 b!140477) bm!15574))

(declare-fun m!167903 () Bool)

(assert (=> b!140475 m!167903))

(assert (=> b!140475 m!167903))

(declare-fun m!167905 () Bool)

(assert (=> b!140475 m!167905))

(declare-fun m!167907 () Bool)

(assert (=> bm!15574 m!167907))

(assert (=> b!140187 d!43813))

(declare-fun d!43815 () Bool)

(declare-fun res!67125 () Bool)

(declare-fun e!91583 () Bool)

(assert (=> d!43815 (=> res!67125 e!91583)))

(assert (=> d!43815 (= res!67125 (and ((_ is Cons!1715) (toList!858 call!15458)) (= (_1!1322 (h!2322 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43815 (= (containsKey!180 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91583)))

(declare-fun b!140478 () Bool)

(declare-fun e!91584 () Bool)

(assert (=> b!140478 (= e!91583 e!91584)))

(declare-fun res!67126 () Bool)

(assert (=> b!140478 (=> (not res!67126) (not e!91584))))

(assert (=> b!140478 (= res!67126 (and (or (not ((_ is Cons!1715) (toList!858 call!15458))) (bvsle (_1!1322 (h!2322 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 call!15458)) (bvslt (_1!1322 (h!2322 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!140479 () Bool)

(assert (=> b!140479 (= e!91584 (containsKey!180 (t!6295 (toList!858 call!15458)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43815 (not res!67125)) b!140478))

(assert (= (and b!140478 res!67126) b!140479))

(assert (=> b!140479 m!166633))

(declare-fun m!167909 () Bool)

(assert (=> b!140479 m!167909))

(assert (=> d!43679 d!43815))

(declare-fun bm!15575 () Bool)

(declare-fun c!26329 () Bool)

(declare-fun call!15578 () Bool)

(assert (=> bm!15575 (= call!15578 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26329 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))))))

(declare-fun b!140480 () Bool)

(declare-fun e!91585 () Bool)

(declare-fun e!91586 () Bool)

(assert (=> b!140480 (= e!91585 e!91586)))

(declare-fun res!67129 () Bool)

(assert (=> b!140480 (=> (not res!67129) (not e!91586))))

(declare-fun e!91588 () Bool)

(assert (=> b!140480 (= res!67129 (not e!91588))))

(declare-fun res!67127 () Bool)

(assert (=> b!140480 (=> (not res!67127) (not e!91588))))

(assert (=> b!140480 (= res!67127 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140481 () Bool)

(declare-fun e!91587 () Bool)

(assert (=> b!140481 (= e!91587 call!15578)))

(declare-fun b!140482 () Bool)

(assert (=> b!140482 (= e!91586 e!91587)))

(assert (=> b!140482 (= c!26329 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!43817 () Bool)

(declare-fun res!67128 () Bool)

(assert (=> d!43817 (=> res!67128 e!91585)))

(assert (=> d!43817 (= res!67128 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43817 (= (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) e!91585)))

(declare-fun b!140483 () Bool)

(assert (=> b!140483 (= e!91587 call!15578)))

(declare-fun b!140484 () Bool)

(assert (=> b!140484 (= e!91588 (contains!906 (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!43817 (not res!67128)) b!140480))

(assert (= (and b!140480 res!67127) b!140484))

(assert (= (and b!140480 res!67129) b!140482))

(assert (= (and b!140482 c!26329) b!140481))

(assert (= (and b!140482 (not c!26329)) b!140483))

(assert (= (or b!140481 b!140483) bm!15575))

(declare-fun m!167911 () Bool)

(assert (=> bm!15575 m!167911))

(declare-fun m!167913 () Bool)

(assert (=> bm!15575 m!167913))

(assert (=> b!140480 m!167911))

(assert (=> b!140480 m!167911))

(declare-fun m!167915 () Bool)

(assert (=> b!140480 m!167915))

(assert (=> b!140482 m!167911))

(assert (=> b!140482 m!167911))

(assert (=> b!140482 m!167915))

(assert (=> b!140484 m!167911))

(assert (=> b!140484 m!167911))

(declare-fun m!167917 () Bool)

(assert (=> b!140484 m!167917))

(assert (=> bm!15537 d!43817))

(declare-fun b!140486 () Bool)

(declare-fun e!91589 () Option!183)

(declare-fun e!91590 () Option!183)

(assert (=> b!140486 (= e!91589 e!91590)))

(declare-fun c!26331 () Bool)

(assert (=> b!140486 (= c!26331 (and ((_ is Cons!1715) (toList!858 lt!73279)) (not (= (_1!1322 (h!2322 (toList!858 lt!73279))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140487 () Bool)

(assert (=> b!140487 (= e!91590 (getValueByKey!177 (t!6295 (toList!858 lt!73279)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140485 () Bool)

(assert (=> b!140485 (= e!91589 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73279)))))))

(declare-fun b!140488 () Bool)

(assert (=> b!140488 (= e!91590 None!181)))

(declare-fun d!43819 () Bool)

(declare-fun c!26330 () Bool)

(assert (=> d!43819 (= c!26330 (and ((_ is Cons!1715) (toList!858 lt!73279)) (= (_1!1322 (h!2322 (toList!858 lt!73279))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43819 (= (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91589)))

(assert (= (and d!43819 c!26330) b!140485))

(assert (= (and d!43819 (not c!26330)) b!140486))

(assert (= (and b!140486 c!26331) b!140487))

(assert (= (and b!140486 (not c!26331)) b!140488))

(declare-fun m!167919 () Bool)

(assert (=> b!140487 m!167919))

(assert (=> b!139980 d!43819))

(declare-fun d!43821 () Bool)

(declare-fun e!91591 () Bool)

(assert (=> d!43821 e!91591))

(declare-fun res!67130 () Bool)

(assert (=> d!43821 (=> res!67130 e!91591)))

(declare-fun lt!73669 () Bool)

(assert (=> d!43821 (= res!67130 (not lt!73669))))

(declare-fun lt!73666 () Bool)

(assert (=> d!43821 (= lt!73669 lt!73666)))

(declare-fun lt!73668 () Unit!4387)

(declare-fun e!91592 () Unit!4387)

(assert (=> d!43821 (= lt!73668 e!91592)))

(declare-fun c!26332 () Bool)

(assert (=> d!43821 (= c!26332 lt!73666)))

(assert (=> d!43821 (= lt!73666 (containsKey!180 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43821 (= (contains!904 lt!73309 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73669)))

(declare-fun b!140489 () Bool)

(declare-fun lt!73667 () Unit!4387)

(assert (=> b!140489 (= e!91592 lt!73667)))

(assert (=> b!140489 (= lt!73667 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140489 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140490 () Bool)

(declare-fun Unit!4421 () Unit!4387)

(assert (=> b!140490 (= e!91592 Unit!4421)))

(declare-fun b!140491 () Bool)

(assert (=> b!140491 (= e!91591 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43821 c!26332) b!140489))

(assert (= (and d!43821 (not c!26332)) b!140490))

(assert (= (and d!43821 (not res!67130)) b!140491))

(declare-fun m!167921 () Bool)

(assert (=> d!43821 m!167921))

(declare-fun m!167923 () Bool)

(assert (=> b!140489 m!167923))

(declare-fun m!167925 () Bool)

(assert (=> b!140489 m!167925))

(assert (=> b!140489 m!167925))

(declare-fun m!167927 () Bool)

(assert (=> b!140489 m!167927))

(assert (=> b!140491 m!167925))

(assert (=> b!140491 m!167925))

(assert (=> b!140491 m!167927))

(assert (=> bm!15518 d!43821))

(declare-fun d!43823 () Bool)

(assert (=> d!43823 (isDefined!129 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun lt!73670 () Unit!4387)

(assert (=> d!43823 (= lt!73670 (choose!864 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!91593 () Bool)

(assert (=> d!43823 e!91593))

(declare-fun res!67131 () Bool)

(assert (=> d!43823 (=> (not res!67131) (not e!91593))))

(assert (=> d!43823 (= res!67131 (isStrictlySorted!312 (toList!858 call!15458)))))

(assert (=> d!43823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73670)))

(declare-fun b!140492 () Bool)

(assert (=> b!140492 (= e!91593 (containsKey!180 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43823 res!67131) b!140492))

(assert (=> d!43823 m!166633))

(assert (=> d!43823 m!167441))

(assert (=> d!43823 m!167441))

(assert (=> d!43823 m!167443))

(assert (=> d!43823 m!166633))

(declare-fun m!167929 () Bool)

(assert (=> d!43823 m!167929))

(declare-fun m!167931 () Bool)

(assert (=> d!43823 m!167931))

(assert (=> b!140492 m!166633))

(assert (=> b!140492 m!167437))

(assert (=> b!140240 d!43823))

(declare-fun d!43825 () Bool)

(assert (=> d!43825 (= (isDefined!129 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not (isEmpty!423 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun bs!5880 () Bool)

(assert (= bs!5880 d!43825))

(assert (=> bs!5880 m!167441))

(declare-fun m!167933 () Bool)

(assert (=> bs!5880 m!167933))

(assert (=> b!140240 d!43825))

(declare-fun b!140494 () Bool)

(declare-fun e!91594 () Option!183)

(declare-fun e!91595 () Option!183)

(assert (=> b!140494 (= e!91594 e!91595)))

(declare-fun c!26334 () Bool)

(assert (=> b!140494 (= c!26334 (and ((_ is Cons!1715) (toList!858 call!15458)) (not (= (_1!1322 (h!2322 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!140495 () Bool)

(assert (=> b!140495 (= e!91595 (getValueByKey!177 (t!6295 (toList!858 call!15458)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140493 () Bool)

(assert (=> b!140493 (= e!91594 (Some!182 (_2!1322 (h!2322 (toList!858 call!15458)))))))

(declare-fun b!140496 () Bool)

(assert (=> b!140496 (= e!91595 None!181)))

(declare-fun d!43827 () Bool)

(declare-fun c!26333 () Bool)

(assert (=> d!43827 (= c!26333 (and ((_ is Cons!1715) (toList!858 call!15458)) (= (_1!1322 (h!2322 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43827 (= (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91594)))

(assert (= (and d!43827 c!26333) b!140493))

(assert (= (and d!43827 (not c!26333)) b!140494))

(assert (= (and b!140494 c!26334) b!140495))

(assert (= (and b!140494 (not c!26334)) b!140496))

(assert (=> b!140495 m!166633))

(declare-fun m!167935 () Bool)

(assert (=> b!140495 m!167935))

(assert (=> b!140240 d!43827))

(declare-fun d!43829 () Bool)

(assert (=> d!43829 (= (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194)) (not (isEmpty!423 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))))

(declare-fun bs!5881 () Bool)

(assert (= bs!5881 d!43829))

(assert (=> bs!5881 m!167315))

(declare-fun m!167937 () Bool)

(assert (=> bs!5881 m!167937))

(assert (=> b!140163 d!43829))

(declare-fun b!140498 () Bool)

(declare-fun e!91596 () Option!183)

(declare-fun e!91597 () Option!183)

(assert (=> b!140498 (= e!91596 e!91597)))

(declare-fun c!26336 () Bool)

(assert (=> b!140498 (= c!26336 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194))))))

(declare-fun b!140499 () Bool)

(assert (=> b!140499 (= e!91597 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73194))))

(declare-fun b!140497 () Bool)

(assert (=> b!140497 (= e!91596 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!140500 () Bool)

(assert (=> b!140500 (= e!91597 None!181)))

(declare-fun d!43831 () Bool)

(declare-fun c!26335 () Bool)

(assert (=> d!43831 (= c!26335 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194)))))

(assert (=> d!43831 (= (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194) e!91596)))

(assert (= (and d!43831 c!26335) b!140497))

(assert (= (and d!43831 (not c!26335)) b!140498))

(assert (= (and b!140498 c!26336) b!140499))

(assert (= (and b!140498 (not c!26336)) b!140500))

(declare-fun m!167939 () Bool)

(assert (=> b!140499 m!167939))

(assert (=> b!140163 d!43831))

(declare-fun d!43833 () Bool)

(assert (=> d!43833 (= (size!2584 newMap!16) (bvadd (_size!624 newMap!16) (bvsdiv (bvadd (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140032 d!43833))

(declare-fun d!43835 () Bool)

(assert (=> d!43835 (= (get!1535 (getValueByKey!177 (toList!858 lt!73187) lt!73185)) (v!3285 (getValueByKey!177 (toList!858 lt!73187) lt!73185)))))

(assert (=> d!43635 d!43835))

(declare-fun b!140502 () Bool)

(declare-fun e!91598 () Option!183)

(declare-fun e!91599 () Option!183)

(assert (=> b!140502 (= e!91598 e!91599)))

(declare-fun c!26338 () Bool)

(assert (=> b!140502 (= c!26338 (and ((_ is Cons!1715) (toList!858 lt!73187)) (not (= (_1!1322 (h!2322 (toList!858 lt!73187))) lt!73185))))))

(declare-fun b!140503 () Bool)

(assert (=> b!140503 (= e!91599 (getValueByKey!177 (t!6295 (toList!858 lt!73187)) lt!73185))))

(declare-fun b!140501 () Bool)

(assert (=> b!140501 (= e!91598 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73187)))))))

(declare-fun b!140504 () Bool)

(assert (=> b!140504 (= e!91599 None!181)))

(declare-fun d!43837 () Bool)

(declare-fun c!26337 () Bool)

(assert (=> d!43837 (= c!26337 (and ((_ is Cons!1715) (toList!858 lt!73187)) (= (_1!1322 (h!2322 (toList!858 lt!73187))) lt!73185)))))

(assert (=> d!43837 (= (getValueByKey!177 (toList!858 lt!73187) lt!73185) e!91598)))

(assert (= (and d!43837 c!26337) b!140501))

(assert (= (and d!43837 (not c!26337)) b!140502))

(assert (= (and b!140502 c!26338) b!140503))

(assert (= (and b!140502 (not c!26338)) b!140504))

(declare-fun m!167941 () Bool)

(assert (=> b!140503 m!167941))

(assert (=> d!43635 d!43837))

(declare-fun lt!73671 () Bool)

(declare-fun d!43839 () Bool)

(assert (=> d!43839 (= lt!73671 (select (content!138 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!91601 () Bool)

(assert (=> d!43839 (= lt!73671 e!91601)))

(declare-fun res!67132 () Bool)

(assert (=> d!43839 (=> (not res!67132) (not e!91601))))

(assert (=> d!43839 (= res!67132 ((_ is Cons!1716) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))))

(assert (=> d!43839 (= (contains!906 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!73671)))

(declare-fun b!140505 () Bool)

(declare-fun e!91600 () Bool)

(assert (=> b!140505 (= e!91601 e!91600)))

(declare-fun res!67133 () Bool)

(assert (=> b!140505 (=> res!67133 e!91600)))

(assert (=> b!140505 (= res!67133 (= (h!2323 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140506 () Bool)

(assert (=> b!140506 (= e!91600 (contains!906 (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!43839 res!67132) b!140505))

(assert (= (and b!140505 (not res!67133)) b!140506))

(declare-fun m!167943 () Bool)

(assert (=> d!43839 m!167943))

(assert (=> d!43839 m!167249))

(declare-fun m!167945 () Bool)

(assert (=> d!43839 m!167945))

(assert (=> b!140506 m!167249))

(declare-fun m!167947 () Bool)

(assert (=> b!140506 m!167947))

(assert (=> b!140115 d!43839))

(assert (=> d!43683 d!43561))

(declare-fun d!43841 () Bool)

(declare-fun e!91604 () Bool)

(assert (=> d!43841 e!91604))

(declare-fun res!67139 () Bool)

(assert (=> d!43841 (=> (not res!67139) (not e!91604))))

(declare-fun lt!73674 () SeekEntryResult!273)

(assert (=> d!43841 (= res!67139 ((_ is Found!273) lt!73674))))

(assert (=> d!43841 (= lt!73674 (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(assert (=> d!43841 true))

(declare-fun _$33!120 () Unit!4387)

(assert (=> d!43841 (= (choose!871 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) _$33!120)))

(declare-fun b!140511 () Bool)

(declare-fun res!67138 () Bool)

(assert (=> b!140511 (=> (not res!67138) (not e!91604))))

(assert (=> b!140511 (= res!67138 (inRange!0 (index!3256 lt!73674) (mask!7279 newMap!16)))))

(declare-fun b!140512 () Bool)

(assert (=> b!140512 (= e!91604 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73674)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43841 res!67139) b!140511))

(assert (= (and b!140511 res!67138) b!140512))

(assert (=> d!43841 m!166633))

(assert (=> d!43841 m!166787))

(declare-fun m!167949 () Bool)

(assert (=> b!140511 m!167949))

(declare-fun m!167951 () Bool)

(assert (=> b!140512 m!167951))

(assert (=> d!43683 d!43841))

(assert (=> d!43683 d!43697))

(declare-fun d!43843 () Bool)

(declare-fun res!67140 () Bool)

(declare-fun e!91605 () Bool)

(assert (=> d!43843 (=> res!67140 e!91605)))

(assert (=> d!43843 (= res!67140 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43843 (= (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!91605)))

(declare-fun b!140513 () Bool)

(declare-fun e!91606 () Bool)

(assert (=> b!140513 (= e!91605 e!91606)))

(declare-fun res!67141 () Bool)

(assert (=> b!140513 (=> (not res!67141) (not e!91606))))

(assert (=> b!140513 (= res!67141 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140514 () Bool)

(assert (=> b!140514 (= e!91606 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43843 (not res!67140)) b!140513))

(assert (= (and b!140513 res!67141) b!140514))

(declare-fun m!167953 () Bool)

(assert (=> d!43843 m!167953))

(assert (=> b!140514 m!166633))

(declare-fun m!167955 () Bool)

(assert (=> b!140514 m!167955))

(assert (=> b!140186 d!43843))

(declare-fun call!15579 () Bool)

(declare-fun c!26339 () Bool)

(declare-fun bm!15576 () Bool)

(assert (=> bm!15576 (= call!15579 (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (bvadd lt!73399 #b00000000000000000000000000000001) (ite c!26339 (Cons!1716 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) lt!73396) lt!73396)))))

(declare-fun b!140515 () Bool)

(declare-fun e!91607 () Bool)

(declare-fun e!91608 () Bool)

(assert (=> b!140515 (= e!91607 e!91608)))

(declare-fun res!67144 () Bool)

(assert (=> b!140515 (=> (not res!67144) (not e!91608))))

(declare-fun e!91610 () Bool)

(assert (=> b!140515 (= res!67144 (not e!91610))))

(declare-fun res!67142 () Bool)

(assert (=> b!140515 (=> (not res!67142) (not e!91610))))

(assert (=> b!140515 (= res!67142 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)))))

(declare-fun b!140516 () Bool)

(declare-fun e!91609 () Bool)

(assert (=> b!140516 (= e!91609 call!15579)))

(declare-fun b!140517 () Bool)

(assert (=> b!140517 (= e!91608 e!91609)))

(assert (=> b!140517 (= c!26339 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)))))

(declare-fun d!43845 () Bool)

(declare-fun res!67143 () Bool)

(assert (=> d!43845 (=> res!67143 e!91607)))

(assert (=> d!43845 (= res!67143 (bvsge lt!73399 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!43845 (= (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73399 lt!73396) e!91607)))

(declare-fun b!140518 () Bool)

(assert (=> b!140518 (= e!91609 call!15579)))

(declare-fun b!140519 () Bool)

(assert (=> b!140519 (= e!91610 (contains!906 lt!73396 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)))))

(assert (= (and d!43845 (not res!67143)) b!140515))

(assert (= (and b!140515 res!67142) b!140519))

(assert (= (and b!140515 res!67144) b!140517))

(assert (= (and b!140517 c!26339) b!140516))

(assert (= (and b!140517 (not c!26339)) b!140518))

(assert (= (or b!140516 b!140518) bm!15576))

(declare-fun m!167957 () Bool)

(assert (=> bm!15576 m!167957))

(declare-fun m!167959 () Bool)

(assert (=> bm!15576 m!167959))

(assert (=> b!140515 m!167957))

(assert (=> b!140515 m!167957))

(declare-fun m!167961 () Bool)

(assert (=> b!140515 m!167961))

(assert (=> b!140517 m!167957))

(assert (=> b!140517 m!167957))

(assert (=> b!140517 m!167961))

(assert (=> b!140519 m!167957))

(assert (=> b!140519 m!167957))

(declare-fun m!167963 () Bool)

(assert (=> b!140519 m!167963))

(assert (=> d!43605 d!43845))

(declare-fun e!91616 () Bool)

(declare-fun b!140531 () Bool)

(assert (=> b!140531 (= e!91616 (= (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!43847 () Bool)

(assert (=> d!43847 e!91616))

(declare-fun res!67153 () Bool)

(assert (=> d!43847 (=> (not res!67153) (not e!91616))))

(assert (=> d!43847 (= res!67153 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 (_keys!4698 newMap!16)))))))

(declare-fun lt!73677 () Unit!4387)

(declare-fun choose!1 (array!4879 (_ BitVec 32) (_ BitVec 64)) Unit!4387)

(assert (=> d!43847 (= lt!73677 (choose!1 (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!91615 () Bool)

(assert (=> d!43847 e!91615))

(declare-fun res!67154 () Bool)

(assert (=> d!43847 (=> (not res!67154) (not e!91615))))

(assert (=> d!43847 (= res!67154 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 (_keys!4698 newMap!16)))))))

(assert (=> d!43847 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73677)))

(declare-fun b!140529 () Bool)

(declare-fun res!67156 () Bool)

(assert (=> b!140529 (=> (not res!67156) (not e!91615))))

(assert (=> b!140529 (= res!67156 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140528 () Bool)

(declare-fun res!67155 () Bool)

(assert (=> b!140528 (=> (not res!67155) (not e!91615))))

(assert (=> b!140528 (= res!67155 (not (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))))

(declare-fun b!140530 () Bool)

(assert (=> b!140530 (= e!91615 (bvslt (size!2578 (_keys!4698 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!43847 res!67154) b!140528))

(assert (= (and b!140528 res!67155) b!140529))

(assert (= (and b!140529 res!67156) b!140530))

(assert (= (and d!43847 res!67153) b!140531))

(assert (=> b!140531 m!167195))

(assert (=> b!140531 m!167209))

(assert (=> b!140531 m!166819))

(assert (=> d!43847 m!166633))

(declare-fun m!167965 () Bool)

(assert (=> d!43847 m!167965))

(assert (=> b!140529 m!166633))

(assert (=> b!140529 m!166827))

(declare-fun m!167967 () Bool)

(assert (=> b!140528 m!167967))

(assert (=> b!140528 m!167967))

(declare-fun m!167969 () Bool)

(assert (=> b!140528 m!167969))

(assert (=> d!43605 d!43847))

(declare-fun d!43849 () Bool)

(assert (=> d!43849 (= (arrayCountValidKeys!0 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!73680 () Unit!4387)

(declare-fun choose!2 (array!4879 (_ BitVec 32)) Unit!4387)

(assert (=> d!43849 (= lt!73680 (choose!2 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(declare-fun e!91619 () Bool)

(assert (=> d!43849 e!91619))

(declare-fun res!67161 () Bool)

(assert (=> d!43849 (=> (not res!67161) (not e!91619))))

(assert (=> d!43849 (= res!67161 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 lt!73415))))))

(assert (=> d!43849 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) lt!73680)))

(declare-fun b!140536 () Bool)

(declare-fun res!67162 () Bool)

(assert (=> b!140536 (=> (not res!67162) (not e!91619))))

(assert (=> b!140536 (= res!67162 (validKeyInArray!0 (select (arr!2306 lt!73415) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun b!140537 () Bool)

(assert (=> b!140537 (= e!91619 (bvslt (size!2578 lt!73415) #b01111111111111111111111111111111))))

(assert (= (and d!43849 res!67161) b!140536))

(assert (= (and b!140536 res!67162) b!140537))

(assert (=> d!43849 m!167197))

(declare-fun m!167971 () Bool)

(assert (=> d!43849 m!167971))

(declare-fun m!167973 () Bool)

(assert (=> b!140536 m!167973))

(assert (=> b!140536 m!167973))

(declare-fun m!167975 () Bool)

(assert (=> b!140536 m!167975))

(assert (=> d!43605 d!43849))

(declare-fun b!140538 () Bool)

(declare-fun e!91620 () (_ BitVec 32))

(assert (=> b!140538 (= e!91620 #b00000000000000000000000000000000)))

(declare-fun b!140540 () Bool)

(declare-fun e!91621 () (_ BitVec 32))

(declare-fun call!15580 () (_ BitVec 32))

(assert (=> b!140540 (= e!91621 (bvadd #b00000000000000000000000000000001 call!15580))))

(declare-fun d!43851 () Bool)

(declare-fun lt!73681 () (_ BitVec 32))

(assert (=> d!43851 (and (bvsge lt!73681 #b00000000000000000000000000000000) (bvsle lt!73681 (bvsub (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!43851 (= lt!73681 e!91620)))

(declare-fun c!26340 () Bool)

(assert (=> d!43851 (= c!26340 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43851 (and (bvsle #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 newMap!16)) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!43851 (= (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) lt!73681)))

(declare-fun b!140539 () Bool)

(assert (=> b!140539 (= e!91620 e!91621)))

(declare-fun c!26341 () Bool)

(assert (=> b!140539 (= c!26341 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!15577 () Bool)

(assert (=> bm!15577 (= call!15580 (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140541 () Bool)

(assert (=> b!140541 (= e!91621 call!15580)))

(assert (= (and d!43851 c!26340) b!140538))

(assert (= (and d!43851 (not c!26340)) b!140539))

(assert (= (and b!140539 c!26341) b!140540))

(assert (= (and b!140539 (not c!26341)) b!140541))

(assert (= (or b!140540 b!140541) bm!15577))

(declare-fun m!167977 () Bool)

(assert (=> b!140539 m!167977))

(assert (=> b!140539 m!167977))

(declare-fun m!167979 () Bool)

(assert (=> b!140539 m!167979))

(declare-fun m!167981 () Bool)

(assert (=> bm!15577 m!167981))

(assert (=> d!43605 d!43851))

(declare-fun d!43853 () Bool)

(declare-fun e!91624 () Bool)

(assert (=> d!43853 e!91624))

(declare-fun res!67165 () Bool)

(assert (=> d!43853 (=> (not res!67165) (not e!91624))))

(assert (=> d!43853 (= res!67165 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 (_keys!4698 newMap!16)))))))

(declare-fun lt!73684 () Unit!4387)

(declare-fun choose!41 (array!4879 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1720) Unit!4387)

(assert (=> d!43853 (= lt!73684 (choose!41 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) lt!73399 lt!73396))))

(assert (=> d!43853 (bvslt (size!2578 (_keys!4698 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!43853 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) lt!73399 lt!73396) lt!73684)))

(declare-fun b!140544 () Bool)

(assert (=> b!140544 (= e!91624 (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73399 lt!73396))))

(assert (= (and d!43853 res!67165) b!140544))

(assert (=> d!43853 m!166633))

(declare-fun m!167983 () Bool)

(assert (=> d!43853 m!167983))

(assert (=> b!140544 m!167195))

(assert (=> b!140544 m!167205))

(assert (=> d!43605 d!43853))

(declare-fun d!43855 () Bool)

(declare-fun e!91625 () Bool)

(assert (=> d!43855 e!91625))

(declare-fun res!67166 () Bool)

(assert (=> d!43855 (=> res!67166 e!91625)))

(declare-fun lt!73688 () Bool)

(assert (=> d!43855 (= res!67166 (not lt!73688))))

(declare-fun lt!73685 () Bool)

(assert (=> d!43855 (= lt!73688 lt!73685)))

(declare-fun lt!73687 () Unit!4387)

(declare-fun e!91626 () Unit!4387)

(assert (=> d!43855 (= lt!73687 e!91626)))

(declare-fun c!26342 () Bool)

(assert (=> d!43855 (= c!26342 lt!73685)))

(assert (=> d!43855 (= lt!73685 (containsKey!180 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43855 (= (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73688)))

(declare-fun b!140545 () Bool)

(declare-fun lt!73686 () Unit!4387)

(assert (=> b!140545 (= e!91626 lt!73686)))

(assert (=> b!140545 (= lt!73686 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!140545 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140546 () Bool)

(declare-fun Unit!4422 () Unit!4387)

(assert (=> b!140546 (= e!91626 Unit!4422)))

(declare-fun b!140547 () Bool)

(assert (=> b!140547 (= e!91625 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (= (and d!43855 c!26342) b!140545))

(assert (= (and d!43855 (not c!26342)) b!140546))

(assert (= (and d!43855 (not res!67166)) b!140547))

(assert (=> d!43855 m!166633))

(declare-fun m!167985 () Bool)

(assert (=> d!43855 m!167985))

(assert (=> b!140545 m!166633))

(declare-fun m!167987 () Bool)

(assert (=> b!140545 m!167987))

(assert (=> b!140545 m!166633))

(declare-fun m!167989 () Bool)

(assert (=> b!140545 m!167989))

(assert (=> b!140545 m!167989))

(declare-fun m!167991 () Bool)

(assert (=> b!140545 m!167991))

(assert (=> b!140547 m!166633))

(assert (=> b!140547 m!167989))

(assert (=> b!140547 m!167989))

(assert (=> b!140547 m!167991))

(assert (=> d!43605 d!43855))

(assert (=> d!43605 d!43607))

(assert (=> d!43605 d!43669))

(declare-fun d!43857 () Bool)

(declare-fun e!91627 () Bool)

(assert (=> d!43857 e!91627))

(declare-fun res!67167 () Bool)

(assert (=> d!43857 (=> (not res!67167) (not e!91627))))

(assert (=> d!43857 (= res!67167 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 lt!73406))))))

(declare-fun lt!73689 () Unit!4387)

(assert (=> d!43857 (= lt!73689 (choose!868 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43857 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43857 (= (lemmaValidKeyInArrayIsInListMap!125 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (defaultEntry!2939 newMap!16)) lt!73689)))

(declare-fun b!140548 () Bool)

(assert (=> b!140548 (= e!91627 (contains!904 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (= (and d!43857 res!67167) b!140548))

(declare-fun m!167993 () Bool)

(assert (=> d!43857 m!167993))

(assert (=> d!43857 m!166907))

(assert (=> b!140548 m!167189))

(declare-fun m!167995 () Bool)

(assert (=> b!140548 m!167995))

(assert (=> b!140548 m!167189))

(assert (=> b!140548 m!167995))

(declare-fun m!167997 () Bool)

(assert (=> b!140548 m!167997))

(assert (=> d!43605 d!43857))

(declare-fun e!91630 () Bool)

(declare-fun b!140549 () Bool)

(assert (=> b!140549 (= e!91630 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140550 () Bool)

(declare-fun e!91636 () Bool)

(declare-fun lt!73691 () ListLongMap!1685)

(assert (=> b!140550 (= e!91636 (= (apply!120 lt!73691 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140551 () Bool)

(declare-fun c!26347 () Bool)

(assert (=> b!140551 (= c!26347 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91638 () ListLongMap!1685)

(declare-fun e!91628 () ListLongMap!1685)

(assert (=> b!140551 (= e!91638 e!91628)))

(declare-fun bm!15578 () Bool)

(declare-fun call!15581 () Bool)

(assert (=> bm!15578 (= call!15581 (contains!904 lt!73691 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140552 () Bool)

(declare-fun e!91637 () Bool)

(declare-fun e!91635 () Bool)

(assert (=> b!140552 (= e!91637 e!91635)))

(declare-fun c!26344 () Bool)

(assert (=> b!140552 (= c!26344 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140553 () Bool)

(declare-fun e!91629 () Bool)

(declare-fun e!91631 () Bool)

(assert (=> b!140553 (= e!91629 e!91631)))

(declare-fun res!67176 () Bool)

(assert (=> b!140553 (=> (not res!67176) (not e!91631))))

(assert (=> b!140553 (= res!67176 (contains!904 lt!73691 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!140553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun b!140554 () Bool)

(declare-fun res!67170 () Bool)

(assert (=> b!140554 (=> (not res!67170) (not e!91637))))

(declare-fun e!91634 () Bool)

(assert (=> b!140554 (= res!67170 e!91634)))

(declare-fun c!26348 () Bool)

(assert (=> b!140554 (= c!26348 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140555 () Bool)

(declare-fun e!91639 () Bool)

(assert (=> b!140555 (= e!91639 (= (apply!120 lt!73691 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140556 () Bool)

(declare-fun call!15587 () Bool)

(assert (=> b!140556 (= e!91635 (not call!15587))))

(declare-fun b!140557 () Bool)

(assert (=> b!140557 (= e!91631 (= (apply!120 lt!73691 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140557 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))))))

(assert (=> b!140557 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun bm!15579 () Bool)

(declare-fun call!15584 () ListLongMap!1685)

(declare-fun call!15582 () ListLongMap!1685)

(assert (=> bm!15579 (= call!15584 call!15582)))

(declare-fun b!140558 () Bool)

(declare-fun res!67174 () Bool)

(assert (=> b!140558 (=> (not res!67174) (not e!91637))))

(assert (=> b!140558 (= res!67174 e!91629)))

(declare-fun res!67173 () Bool)

(assert (=> b!140558 (=> res!67173 e!91629)))

(assert (=> b!140558 (= res!67173 (not e!91630))))

(declare-fun res!67169 () Bool)

(assert (=> b!140558 (=> (not res!67169) (not e!91630))))

(assert (=> b!140558 (= res!67169 (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun bm!15580 () Bool)

(declare-fun call!15583 () ListLongMap!1685)

(assert (=> bm!15580 (= call!15582 call!15583)))

(declare-fun b!140559 () Bool)

(declare-fun e!91632 () Unit!4387)

(declare-fun lt!73708 () Unit!4387)

(assert (=> b!140559 (= e!91632 lt!73708)))

(declare-fun lt!73695 () ListLongMap!1685)

(assert (=> b!140559 (= lt!73695 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73697 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73697 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73701 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73701 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73711 () Unit!4387)

(assert (=> b!140559 (= lt!73711 (addStillContains!96 lt!73695 lt!73697 (zeroValue!2789 newMap!16) lt!73701))))

(assert (=> b!140559 (contains!904 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))) lt!73701)))

(declare-fun lt!73700 () Unit!4387)

(assert (=> b!140559 (= lt!73700 lt!73711)))

(declare-fun lt!73707 () ListLongMap!1685)

(assert (=> b!140559 (= lt!73707 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73696 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73696 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73702 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73702 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73705 () Unit!4387)

(assert (=> b!140559 (= lt!73705 (addApplyDifferent!96 lt!73707 lt!73696 (minValue!2789 newMap!16) lt!73702))))

(assert (=> b!140559 (= (apply!120 (+!173 lt!73707 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))) lt!73702) (apply!120 lt!73707 lt!73702))))

(declare-fun lt!73690 () Unit!4387)

(assert (=> b!140559 (= lt!73690 lt!73705)))

(declare-fun lt!73694 () ListLongMap!1685)

(assert (=> b!140559 (= lt!73694 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73704 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73704 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73692 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73692 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73703 () Unit!4387)

(assert (=> b!140559 (= lt!73703 (addApplyDifferent!96 lt!73694 lt!73704 (zeroValue!2789 newMap!16) lt!73692))))

(assert (=> b!140559 (= (apply!120 (+!173 lt!73694 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))) lt!73692) (apply!120 lt!73694 lt!73692))))

(declare-fun lt!73693 () Unit!4387)

(assert (=> b!140559 (= lt!73693 lt!73703)))

(declare-fun lt!73710 () ListLongMap!1685)

(assert (=> b!140559 (= lt!73710 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73706 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73706 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73709 () (_ BitVec 64))

(assert (=> b!140559 (= lt!73709 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!140559 (= lt!73708 (addApplyDifferent!96 lt!73710 lt!73706 (minValue!2789 newMap!16) lt!73709))))

(assert (=> b!140559 (= (apply!120 (+!173 lt!73710 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))) lt!73709) (apply!120 lt!73710 lt!73709))))

(declare-fun c!26346 () Bool)

(declare-fun call!15585 () ListLongMap!1685)

(declare-fun bm!15581 () Bool)

(declare-fun c!26345 () Bool)

(assert (=> bm!15581 (= call!15585 (+!173 (ite c!26345 call!15583 (ite c!26346 call!15582 call!15584)) (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!43859 () Bool)

(assert (=> d!43859 e!91637))

(declare-fun res!67168 () Bool)

(assert (=> d!43859 (=> (not res!67168) (not e!91637))))

(assert (=> d!43859 (= res!67168 (or (bvsge #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))))

(declare-fun lt!73698 () ListLongMap!1685)

(assert (=> d!43859 (= lt!73691 lt!73698)))

(declare-fun lt!73699 () Unit!4387)

(assert (=> d!43859 (= lt!73699 e!91632)))

(declare-fun c!26343 () Bool)

(declare-fun e!91633 () Bool)

(assert (=> d!43859 (= c!26343 e!91633)))

(declare-fun res!67171 () Bool)

(assert (=> d!43859 (=> (not res!67171) (not e!91633))))

(assert (=> d!43859 (= res!67171 (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun e!91640 () ListLongMap!1685)

(assert (=> d!43859 (= lt!73698 e!91640)))

(assert (=> d!43859 (= c!26345 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43859 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43859 (= (getCurrentListMap!531 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73691)))

(declare-fun b!140560 () Bool)

(assert (=> b!140560 (= e!91628 call!15584)))

(declare-fun b!140561 () Bool)

(declare-fun Unit!4423 () Unit!4387)

(assert (=> b!140561 (= e!91632 Unit!4423)))

(declare-fun b!140562 () Bool)

(assert (=> b!140562 (= e!91635 e!91636)))

(declare-fun res!67172 () Bool)

(assert (=> b!140562 (= res!67172 call!15587)))

(assert (=> b!140562 (=> (not res!67172) (not e!91636))))

(declare-fun b!140563 () Bool)

(assert (=> b!140563 (= e!91634 e!91639)))

(declare-fun res!67175 () Bool)

(assert (=> b!140563 (= res!67175 call!15581)))

(assert (=> b!140563 (=> (not res!67175) (not e!91639))))

(declare-fun b!140564 () Bool)

(declare-fun call!15586 () ListLongMap!1685)

(assert (=> b!140564 (= e!91628 call!15586)))

(declare-fun b!140565 () Bool)

(assert (=> b!140565 (= e!91638 call!15586)))

(declare-fun b!140566 () Bool)

(assert (=> b!140566 (= e!91640 (+!173 call!15585 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15582 () Bool)

(assert (=> bm!15582 (= call!15583 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140567 () Bool)

(assert (=> b!140567 (= e!91633 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140568 () Bool)

(assert (=> b!140568 (= e!91640 e!91638)))

(assert (=> b!140568 (= c!26346 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140569 () Bool)

(assert (=> b!140569 (= e!91634 (not call!15581))))

(declare-fun bm!15583 () Bool)

(assert (=> bm!15583 (= call!15586 call!15585)))

(declare-fun bm!15584 () Bool)

(assert (=> bm!15584 (= call!15587 (contains!904 lt!73691 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43859 c!26345) b!140566))

(assert (= (and d!43859 (not c!26345)) b!140568))

(assert (= (and b!140568 c!26346) b!140565))

(assert (= (and b!140568 (not c!26346)) b!140551))

(assert (= (and b!140551 c!26347) b!140564))

(assert (= (and b!140551 (not c!26347)) b!140560))

(assert (= (or b!140564 b!140560) bm!15579))

(assert (= (or b!140565 bm!15579) bm!15580))

(assert (= (or b!140565 b!140564) bm!15583))

(assert (= (or b!140566 bm!15580) bm!15582))

(assert (= (or b!140566 bm!15583) bm!15581))

(assert (= (and d!43859 res!67171) b!140567))

(assert (= (and d!43859 c!26343) b!140559))

(assert (= (and d!43859 (not c!26343)) b!140561))

(assert (= (and d!43859 res!67168) b!140558))

(assert (= (and b!140558 res!67169) b!140549))

(assert (= (and b!140558 (not res!67173)) b!140553))

(assert (= (and b!140553 res!67176) b!140557))

(assert (= (and b!140558 res!67174) b!140554))

(assert (= (and b!140554 c!26348) b!140563))

(assert (= (and b!140554 (not c!26348)) b!140569))

(assert (= (and b!140563 res!67175) b!140555))

(assert (= (or b!140563 b!140569) bm!15578))

(assert (= (and b!140554 res!67170) b!140552))

(assert (= (and b!140552 c!26344) b!140562))

(assert (= (and b!140552 (not c!26344)) b!140556))

(assert (= (and b!140562 res!67172) b!140550))

(assert (= (or b!140562 b!140556) bm!15584))

(declare-fun b_lambda!6307 () Bool)

(assert (=> (not b_lambda!6307) (not b!140557)))

(assert (=> b!140557 t!6309))

(declare-fun b_and!8797 () Bool)

(assert (= b_and!8793 (and (=> t!6309 result!4187) b_and!8797)))

(assert (=> b!140557 t!6311))

(declare-fun b_and!8799 () Bool)

(assert (= b_and!8795 (and (=> t!6311 result!4189) b_and!8799)))

(declare-fun m!167999 () Bool)

(assert (=> b!140559 m!167999))

(declare-fun m!168001 () Bool)

(assert (=> b!140559 m!168001))

(declare-fun m!168003 () Bool)

(assert (=> b!140559 m!168003))

(declare-fun m!168005 () Bool)

(assert (=> b!140559 m!168005))

(declare-fun m!168007 () Bool)

(assert (=> b!140559 m!168007))

(assert (=> b!140559 m!167977))

(assert (=> b!140559 m!167999))

(declare-fun m!168009 () Bool)

(assert (=> b!140559 m!168009))

(declare-fun m!168011 () Bool)

(assert (=> b!140559 m!168011))

(assert (=> b!140559 m!168011))

(declare-fun m!168013 () Bool)

(assert (=> b!140559 m!168013))

(declare-fun m!168015 () Bool)

(assert (=> b!140559 m!168015))

(declare-fun m!168017 () Bool)

(assert (=> b!140559 m!168017))

(declare-fun m!168019 () Bool)

(assert (=> b!140559 m!168019))

(declare-fun m!168021 () Bool)

(assert (=> b!140559 m!168021))

(declare-fun m!168023 () Bool)

(assert (=> b!140559 m!168023))

(declare-fun m!168025 () Bool)

(assert (=> b!140559 m!168025))

(assert (=> b!140559 m!168005))

(declare-fun m!168027 () Bool)

(assert (=> b!140559 m!168027))

(assert (=> b!140559 m!168017))

(declare-fun m!168029 () Bool)

(assert (=> b!140559 m!168029))

(declare-fun m!168031 () Bool)

(assert (=> b!140566 m!168031))

(declare-fun m!168033 () Bool)

(assert (=> b!140555 m!168033))

(declare-fun m!168035 () Bool)

(assert (=> bm!15578 m!168035))

(assert (=> b!140549 m!167977))

(assert (=> b!140549 m!167977))

(assert (=> b!140549 m!167979))

(declare-fun m!168037 () Bool)

(assert (=> b!140550 m!168037))

(declare-fun m!168039 () Bool)

(assert (=> b!140557 m!168039))

(assert (=> b!140557 m!168039))

(assert (=> b!140557 m!166963))

(declare-fun m!168041 () Bool)

(assert (=> b!140557 m!168041))

(assert (=> b!140557 m!167977))

(assert (=> b!140557 m!167977))

(declare-fun m!168043 () Bool)

(assert (=> b!140557 m!168043))

(assert (=> b!140557 m!166963))

(declare-fun m!168045 () Bool)

(assert (=> bm!15584 m!168045))

(assert (=> d!43859 m!166907))

(declare-fun m!168047 () Bool)

(assert (=> bm!15581 m!168047))

(assert (=> bm!15582 m!168007))

(assert (=> b!140553 m!167977))

(assert (=> b!140553 m!167977))

(declare-fun m!168049 () Bool)

(assert (=> b!140553 m!168049))

(assert (=> b!140567 m!167977))

(assert (=> b!140567 m!167977))

(assert (=> b!140567 m!167979))

(assert (=> d!43605 d!43859))

(declare-fun b!140570 () Bool)

(declare-fun e!91643 () Bool)

(assert (=> b!140570 (= e!91643 (validKeyInArray!0 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(declare-fun b!140571 () Bool)

(declare-fun e!91649 () Bool)

(declare-fun lt!73713 () ListLongMap!1685)

(assert (=> b!140571 (= e!91649 (= (apply!120 lt!73713 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140572 () Bool)

(declare-fun c!26353 () Bool)

(assert (=> b!140572 (= c!26353 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91651 () ListLongMap!1685)

(declare-fun e!91641 () ListLongMap!1685)

(assert (=> b!140572 (= e!91651 e!91641)))

(declare-fun bm!15585 () Bool)

(declare-fun call!15588 () Bool)

(assert (=> bm!15585 (= call!15588 (contains!904 lt!73713 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140573 () Bool)

(declare-fun e!91650 () Bool)

(declare-fun e!91648 () Bool)

(assert (=> b!140573 (= e!91650 e!91648)))

(declare-fun c!26350 () Bool)

(assert (=> b!140573 (= c!26350 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140574 () Bool)

(declare-fun e!91642 () Bool)

(declare-fun e!91644 () Bool)

(assert (=> b!140574 (= e!91642 e!91644)))

(declare-fun res!67185 () Bool)

(assert (=> b!140574 (=> (not res!67185) (not e!91644))))

(assert (=> b!140574 (= res!67185 (contains!904 lt!73713 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(assert (=> b!140574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun b!140575 () Bool)

(declare-fun res!67179 () Bool)

(assert (=> b!140575 (=> (not res!67179) (not e!91650))))

(declare-fun e!91647 () Bool)

(assert (=> b!140575 (= res!67179 e!91647)))

(declare-fun c!26354 () Bool)

(assert (=> b!140575 (= c!26354 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140576 () Bool)

(declare-fun e!91652 () Bool)

(assert (=> b!140576 (= e!91652 (= (apply!120 lt!73713 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140577 () Bool)

(declare-fun call!15594 () Bool)

(assert (=> b!140577 (= e!91648 (not call!15594))))

(declare-fun b!140578 () Bool)

(assert (=> b!140578 (= e!91644 (= (apply!120 lt!73713 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140578 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 lt!73413)))))

(assert (=> b!140578 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun bm!15586 () Bool)

(declare-fun call!15591 () ListLongMap!1685)

(declare-fun call!15589 () ListLongMap!1685)

(assert (=> bm!15586 (= call!15591 call!15589)))

(declare-fun b!140579 () Bool)

(declare-fun res!67183 () Bool)

(assert (=> b!140579 (=> (not res!67183) (not e!91650))))

(assert (=> b!140579 (= res!67183 e!91642)))

(declare-fun res!67182 () Bool)

(assert (=> b!140579 (=> res!67182 e!91642)))

(assert (=> b!140579 (= res!67182 (not e!91643))))

(declare-fun res!67178 () Bool)

(assert (=> b!140579 (=> (not res!67178) (not e!91643))))

(assert (=> b!140579 (= res!67178 (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun bm!15587 () Bool)

(declare-fun call!15590 () ListLongMap!1685)

(assert (=> bm!15587 (= call!15589 call!15590)))

(declare-fun b!140580 () Bool)

(declare-fun e!91645 () Unit!4387)

(declare-fun lt!73730 () Unit!4387)

(assert (=> b!140580 (= e!91645 lt!73730)))

(declare-fun lt!73717 () ListLongMap!1685)

(assert (=> b!140580 (= lt!73717 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73719 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73719 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73723 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73723 (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))

(declare-fun lt!73733 () Unit!4387)

(assert (=> b!140580 (= lt!73733 (addStillContains!96 lt!73717 lt!73719 (zeroValue!2789 newMap!16) lt!73723))))

(assert (=> b!140580 (contains!904 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))) lt!73723)))

(declare-fun lt!73722 () Unit!4387)

(assert (=> b!140580 (= lt!73722 lt!73733)))

(declare-fun lt!73729 () ListLongMap!1685)

(assert (=> b!140580 (= lt!73729 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73718 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73718 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73724 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73724 (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))

(declare-fun lt!73727 () Unit!4387)

(assert (=> b!140580 (= lt!73727 (addApplyDifferent!96 lt!73729 lt!73718 (minValue!2789 newMap!16) lt!73724))))

(assert (=> b!140580 (= (apply!120 (+!173 lt!73729 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))) lt!73724) (apply!120 lt!73729 lt!73724))))

(declare-fun lt!73712 () Unit!4387)

(assert (=> b!140580 (= lt!73712 lt!73727)))

(declare-fun lt!73716 () ListLongMap!1685)

(assert (=> b!140580 (= lt!73716 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73726 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73726 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73714 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73714 (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))

(declare-fun lt!73725 () Unit!4387)

(assert (=> b!140580 (= lt!73725 (addApplyDifferent!96 lt!73716 lt!73726 (zeroValue!2789 newMap!16) lt!73714))))

(assert (=> b!140580 (= (apply!120 (+!173 lt!73716 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))) lt!73714) (apply!120 lt!73716 lt!73714))))

(declare-fun lt!73715 () Unit!4387)

(assert (=> b!140580 (= lt!73715 lt!73725)))

(declare-fun lt!73732 () ListLongMap!1685)

(assert (=> b!140580 (= lt!73732 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73728 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73728 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73731 () (_ BitVec 64))

(assert (=> b!140580 (= lt!73731 (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))

(assert (=> b!140580 (= lt!73730 (addApplyDifferent!96 lt!73732 lt!73728 (minValue!2789 newMap!16) lt!73731))))

(assert (=> b!140580 (= (apply!120 (+!173 lt!73732 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))) lt!73731) (apply!120 lt!73732 lt!73731))))

(declare-fun c!26351 () Bool)

(declare-fun bm!15588 () Bool)

(declare-fun c!26352 () Bool)

(declare-fun call!15592 () ListLongMap!1685)

(assert (=> bm!15588 (= call!15592 (+!173 (ite c!26351 call!15590 (ite c!26352 call!15589 call!15591)) (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!43861 () Bool)

(assert (=> d!43861 e!91650))

(declare-fun res!67177 () Bool)

(assert (=> d!43861 (=> (not res!67177) (not e!91650))))

(assert (=> d!43861 (= res!67177 (or (bvsge #b00000000000000000000000000000000 (size!2578 lt!73406)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))))

(declare-fun lt!73720 () ListLongMap!1685)

(assert (=> d!43861 (= lt!73713 lt!73720)))

(declare-fun lt!73721 () Unit!4387)

(assert (=> d!43861 (= lt!73721 e!91645)))

(declare-fun c!26349 () Bool)

(declare-fun e!91646 () Bool)

(assert (=> d!43861 (= c!26349 e!91646)))

(declare-fun res!67180 () Bool)

(assert (=> d!43861 (=> (not res!67180) (not e!91646))))

(assert (=> d!43861 (= res!67180 (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun e!91653 () ListLongMap!1685)

(assert (=> d!43861 (= lt!73720 e!91653)))

(assert (=> d!43861 (= c!26351 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43861 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43861 (= (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73713)))

(declare-fun b!140581 () Bool)

(assert (=> b!140581 (= e!91641 call!15591)))

(declare-fun b!140582 () Bool)

(declare-fun Unit!4424 () Unit!4387)

(assert (=> b!140582 (= e!91645 Unit!4424)))

(declare-fun b!140583 () Bool)

(assert (=> b!140583 (= e!91648 e!91649)))

(declare-fun res!67181 () Bool)

(assert (=> b!140583 (= res!67181 call!15594)))

(assert (=> b!140583 (=> (not res!67181) (not e!91649))))

(declare-fun b!140584 () Bool)

(assert (=> b!140584 (= e!91647 e!91652)))

(declare-fun res!67184 () Bool)

(assert (=> b!140584 (= res!67184 call!15588)))

(assert (=> b!140584 (=> (not res!67184) (not e!91652))))

(declare-fun b!140585 () Bool)

(declare-fun call!15593 () ListLongMap!1685)

(assert (=> b!140585 (= e!91641 call!15593)))

(declare-fun b!140586 () Bool)

(assert (=> b!140586 (= e!91651 call!15593)))

(declare-fun b!140587 () Bool)

(assert (=> b!140587 (= e!91653 (+!173 call!15592 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15589 () Bool)

(assert (=> bm!15589 (= call!15590 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140588 () Bool)

(assert (=> b!140588 (= e!91646 (validKeyInArray!0 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(declare-fun b!140589 () Bool)

(assert (=> b!140589 (= e!91653 e!91651)))

(assert (=> b!140589 (= c!26352 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140590 () Bool)

(assert (=> b!140590 (= e!91647 (not call!15588))))

(declare-fun bm!15590 () Bool)

(assert (=> bm!15590 (= call!15593 call!15592)))

(declare-fun bm!15591 () Bool)

(assert (=> bm!15591 (= call!15594 (contains!904 lt!73713 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43861 c!26351) b!140587))

(assert (= (and d!43861 (not c!26351)) b!140589))

(assert (= (and b!140589 c!26352) b!140586))

(assert (= (and b!140589 (not c!26352)) b!140572))

(assert (= (and b!140572 c!26353) b!140585))

(assert (= (and b!140572 (not c!26353)) b!140581))

(assert (= (or b!140585 b!140581) bm!15586))

(assert (= (or b!140586 bm!15586) bm!15587))

(assert (= (or b!140586 b!140585) bm!15590))

(assert (= (or b!140587 bm!15587) bm!15589))

(assert (= (or b!140587 bm!15590) bm!15588))

(assert (= (and d!43861 res!67180) b!140588))

(assert (= (and d!43861 c!26349) b!140580))

(assert (= (and d!43861 (not c!26349)) b!140582))

(assert (= (and d!43861 res!67177) b!140579))

(assert (= (and b!140579 res!67178) b!140570))

(assert (= (and b!140579 (not res!67182)) b!140574))

(assert (= (and b!140574 res!67185) b!140578))

(assert (= (and b!140579 res!67183) b!140575))

(assert (= (and b!140575 c!26354) b!140584))

(assert (= (and b!140575 (not c!26354)) b!140590))

(assert (= (and b!140584 res!67184) b!140576))

(assert (= (or b!140584 b!140590) bm!15585))

(assert (= (and b!140575 res!67179) b!140573))

(assert (= (and b!140573 c!26350) b!140583))

(assert (= (and b!140573 (not c!26350)) b!140577))

(assert (= (and b!140583 res!67181) b!140571))

(assert (= (or b!140583 b!140577) bm!15591))

(declare-fun b_lambda!6309 () Bool)

(assert (=> (not b_lambda!6309) (not b!140578)))

(assert (=> b!140578 t!6309))

(declare-fun b_and!8801 () Bool)

(assert (= b_and!8797 (and (=> t!6309 result!4187) b_and!8801)))

(assert (=> b!140578 t!6311))

(declare-fun b_and!8803 () Bool)

(assert (= b_and!8799 (and (=> t!6311 result!4189) b_and!8803)))

(declare-fun m!168051 () Bool)

(assert (=> b!140580 m!168051))

(declare-fun m!168053 () Bool)

(assert (=> b!140580 m!168053))

(declare-fun m!168055 () Bool)

(assert (=> b!140580 m!168055))

(declare-fun m!168057 () Bool)

(assert (=> b!140580 m!168057))

(declare-fun m!168059 () Bool)

(assert (=> b!140580 m!168059))

(declare-fun m!168061 () Bool)

(assert (=> b!140580 m!168061))

(assert (=> b!140580 m!168051))

(declare-fun m!168063 () Bool)

(assert (=> b!140580 m!168063))

(declare-fun m!168065 () Bool)

(assert (=> b!140580 m!168065))

(assert (=> b!140580 m!168065))

(declare-fun m!168067 () Bool)

(assert (=> b!140580 m!168067))

(declare-fun m!168069 () Bool)

(assert (=> b!140580 m!168069))

(declare-fun m!168071 () Bool)

(assert (=> b!140580 m!168071))

(declare-fun m!168073 () Bool)

(assert (=> b!140580 m!168073))

(declare-fun m!168075 () Bool)

(assert (=> b!140580 m!168075))

(declare-fun m!168077 () Bool)

(assert (=> b!140580 m!168077))

(declare-fun m!168079 () Bool)

(assert (=> b!140580 m!168079))

(assert (=> b!140580 m!168057))

(declare-fun m!168081 () Bool)

(assert (=> b!140580 m!168081))

(assert (=> b!140580 m!168071))

(declare-fun m!168083 () Bool)

(assert (=> b!140580 m!168083))

(declare-fun m!168085 () Bool)

(assert (=> b!140587 m!168085))

(declare-fun m!168087 () Bool)

(assert (=> b!140576 m!168087))

(declare-fun m!168089 () Bool)

(assert (=> bm!15585 m!168089))

(assert (=> b!140570 m!168061))

(assert (=> b!140570 m!168061))

(declare-fun m!168091 () Bool)

(assert (=> b!140570 m!168091))

(declare-fun m!168093 () Bool)

(assert (=> b!140571 m!168093))

(declare-fun m!168095 () Bool)

(assert (=> b!140578 m!168095))

(assert (=> b!140578 m!168095))

(assert (=> b!140578 m!166963))

(declare-fun m!168097 () Bool)

(assert (=> b!140578 m!168097))

(assert (=> b!140578 m!168061))

(assert (=> b!140578 m!168061))

(declare-fun m!168099 () Bool)

(assert (=> b!140578 m!168099))

(assert (=> b!140578 m!166963))

(declare-fun m!168101 () Bool)

(assert (=> bm!15591 m!168101))

(assert (=> d!43861 m!166907))

(declare-fun m!168103 () Bool)

(assert (=> bm!15588 m!168103))

(assert (=> bm!15589 m!168059))

(assert (=> b!140574 m!168061))

(assert (=> b!140574 m!168061))

(declare-fun m!168105 () Bool)

(assert (=> b!140574 m!168105))

(assert (=> b!140588 m!168061))

(assert (=> b!140588 m!168061))

(assert (=> b!140588 m!168091))

(assert (=> d!43605 d!43861))

(declare-fun bm!15592 () Bool)

(declare-fun call!15595 () Bool)

(assert (=> bm!15592 (= call!15595 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)))))

(declare-fun b!140591 () Bool)

(declare-fun e!91656 () Bool)

(declare-fun e!91655 () Bool)

(assert (=> b!140591 (= e!91656 e!91655)))

(declare-fun c!26355 () Bool)

(assert (=> b!140591 (= c!26355 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140592 () Bool)

(declare-fun e!91654 () Bool)

(assert (=> b!140592 (= e!91655 e!91654)))

(declare-fun lt!73736 () (_ BitVec 64))

(assert (=> b!140592 (= lt!73736 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73734 () Unit!4387)

(assert (=> b!140592 (= lt!73734 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 #b00000000000000000000000000000000))))

(assert (=> b!140592 (arrayContainsKey!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 #b00000000000000000000000000000000)))

(declare-fun lt!73735 () Unit!4387)

(assert (=> b!140592 (= lt!73735 lt!73734)))

(declare-fun res!67186 () Bool)

(assert (=> b!140592 (= res!67186 (= (seekEntryOrOpen!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)) (Found!273 #b00000000000000000000000000000000)))))

(assert (=> b!140592 (=> (not res!67186) (not e!91654))))

(declare-fun d!43863 () Bool)

(declare-fun res!67187 () Bool)

(assert (=> d!43863 (=> res!67187 e!91656)))

(assert (=> d!43863 (= res!67187 (bvsge #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!43863 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)) e!91656)))

(declare-fun b!140593 () Bool)

(assert (=> b!140593 (= e!91655 call!15595)))

(declare-fun b!140594 () Bool)

(assert (=> b!140594 (= e!91654 call!15595)))

(assert (= (and d!43863 (not res!67187)) b!140591))

(assert (= (and b!140591 c!26355) b!140592))

(assert (= (and b!140591 (not c!26355)) b!140593))

(assert (= (and b!140592 res!67186) b!140594))

(assert (= (or b!140594 b!140593) bm!15592))

(declare-fun m!168107 () Bool)

(assert (=> bm!15592 m!168107))

(assert (=> b!140591 m!167977))

(assert (=> b!140591 m!167977))

(assert (=> b!140591 m!167979))

(assert (=> b!140592 m!167977))

(declare-fun m!168109 () Bool)

(assert (=> b!140592 m!168109))

(declare-fun m!168111 () Bool)

(assert (=> b!140592 m!168111))

(assert (=> b!140592 m!167977))

(declare-fun m!168113 () Bool)

(assert (=> b!140592 m!168113))

(assert (=> d!43605 d!43863))

(declare-fun d!43865 () Bool)

(declare-fun e!91659 () Bool)

(assert (=> d!43865 e!91659))

(declare-fun res!67190 () Bool)

(assert (=> d!43865 (=> (not res!67190) (not e!91659))))

(assert (=> d!43865 (= res!67190 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 (_keys!4698 newMap!16)))))))

(declare-fun lt!73739 () Unit!4387)

(declare-fun choose!102 ((_ BitVec 64) array!4879 (_ BitVec 32) (_ BitVec 32)) Unit!4387)

(assert (=> d!43865 (= lt!73739 (choose!102 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (mask!7279 newMap!16)))))

(assert (=> d!43865 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43865 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (mask!7279 newMap!16)) lt!73739)))

(declare-fun b!140597 () Bool)

(assert (=> b!140597 (= e!91659 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)))))

(assert (= (and d!43865 res!67190) b!140597))

(assert (=> d!43865 m!166633))

(declare-fun m!168115 () Bool)

(assert (=> d!43865 m!168115))

(assert (=> d!43865 m!166907))

(assert (=> b!140597 m!167195))

(assert (=> b!140597 m!167215))

(assert (=> d!43605 d!43865))

(declare-fun b!140598 () Bool)

(declare-fun e!91660 () (_ BitVec 32))

(assert (=> b!140598 (= e!91660 #b00000000000000000000000000000000)))

(declare-fun b!140600 () Bool)

(declare-fun e!91661 () (_ BitVec 32))

(declare-fun call!15596 () (_ BitVec 32))

(assert (=> b!140600 (= e!91661 (bvadd #b00000000000000000000000000000001 call!15596))))

(declare-fun d!43867 () Bool)

(declare-fun lt!73740 () (_ BitVec 32))

(assert (=> d!43867 (and (bvsge lt!73740 #b00000000000000000000000000000000) (bvsle lt!73740 (bvsub (size!2578 lt!73415) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (=> d!43867 (= lt!73740 e!91660)))

(declare-fun c!26356 () Bool)

(assert (=> d!43867 (= c!26356 (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)))))

(assert (=> d!43867 (and (bvsle (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) (size!2578 lt!73415)))))

(assert (=> d!43867 (= (arrayCountValidKeys!0 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) lt!73740)))

(declare-fun b!140599 () Bool)

(assert (=> b!140599 (= e!91660 e!91661)))

(declare-fun c!26357 () Bool)

(assert (=> b!140599 (= c!26357 (validKeyInArray!0 (select (arr!2306 lt!73415) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun bm!15593 () Bool)

(assert (=> bm!15593 (= call!15596 (arrayCountValidKeys!0 lt!73415 (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)))))

(declare-fun b!140601 () Bool)

(assert (=> b!140601 (= e!91661 call!15596)))

(assert (= (and d!43867 c!26356) b!140598))

(assert (= (and d!43867 (not c!26356)) b!140599))

(assert (= (and b!140599 c!26357) b!140600))

(assert (= (and b!140599 (not c!26357)) b!140601))

(assert (= (or b!140600 b!140601) bm!15593))

(assert (=> b!140599 m!167973))

(assert (=> b!140599 m!167973))

(assert (=> b!140599 m!167975))

(declare-fun m!168117 () Bool)

(assert (=> bm!15593 m!168117))

(assert (=> d!43605 d!43867))

(assert (=> d!43605 d!43689))

(assert (=> d!43605 d!43565))

(declare-fun d!43869 () Bool)

(declare-fun e!91662 () Bool)

(assert (=> d!43869 e!91662))

(declare-fun res!67191 () Bool)

(assert (=> d!43869 (=> res!67191 e!91662)))

(declare-fun lt!73744 () Bool)

(assert (=> d!43869 (= res!67191 (not lt!73744))))

(declare-fun lt!73741 () Bool)

(assert (=> d!43869 (= lt!73744 lt!73741)))

(declare-fun lt!73743 () Unit!4387)

(declare-fun e!91663 () Unit!4387)

(assert (=> d!43869 (= lt!73743 e!91663)))

(declare-fun c!26358 () Bool)

(assert (=> d!43869 (= c!26358 lt!73741)))

(assert (=> d!43869 (= lt!73741 (containsKey!180 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (=> d!43869 (= (contains!904 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) lt!73744)))

(declare-fun b!140602 () Bool)

(declare-fun lt!73742 () Unit!4387)

(assert (=> b!140602 (= e!91663 lt!73742)))

(assert (=> b!140602 (= lt!73742 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (=> b!140602 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun b!140603 () Bool)

(declare-fun Unit!4425 () Unit!4387)

(assert (=> b!140603 (= e!91663 Unit!4425)))

(declare-fun b!140604 () Bool)

(assert (=> b!140604 (= e!91662 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))))

(assert (= (and d!43869 c!26358) b!140602))

(assert (= (and d!43869 (not c!26358)) b!140603))

(assert (= (and d!43869 (not res!67191)) b!140604))

(assert (=> d!43869 m!167185))

(declare-fun m!168119 () Bool)

(assert (=> d!43869 m!168119))

(assert (=> b!140602 m!167185))

(declare-fun m!168121 () Bool)

(assert (=> b!140602 m!168121))

(assert (=> b!140602 m!167185))

(declare-fun m!168123 () Bool)

(assert (=> b!140602 m!168123))

(assert (=> b!140602 m!168123))

(declare-fun m!168125 () Bool)

(assert (=> b!140602 m!168125))

(assert (=> b!140604 m!167185))

(assert (=> b!140604 m!168123))

(assert (=> b!140604 m!168123))

(assert (=> b!140604 m!168125))

(assert (=> d!43605 d!43869))

(declare-fun d!43871 () Bool)

(declare-fun res!67192 () Bool)

(declare-fun e!91664 () Bool)

(assert (=> d!43871 (=> res!67192 e!91664)))

(assert (=> d!43871 (= res!67192 (= (select (arr!2306 lt!73414) #b00000000000000000000000000000000) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43871 (= (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91664)))

(declare-fun b!140605 () Bool)

(declare-fun e!91665 () Bool)

(assert (=> b!140605 (= e!91664 e!91665)))

(declare-fun res!67193 () Bool)

(assert (=> b!140605 (=> (not res!67193) (not e!91665))))

(assert (=> b!140605 (= res!67193 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 lt!73414)))))

(declare-fun b!140606 () Bool)

(assert (=> b!140606 (= e!91665 (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43871 (not res!67192)) b!140605))

(assert (= (and b!140605 res!67193) b!140606))

(declare-fun m!168127 () Bool)

(assert (=> d!43871 m!168127))

(assert (=> b!140606 m!166633))

(declare-fun m!168129 () Bool)

(assert (=> b!140606 m!168129))

(assert (=> d!43605 d!43871))

(assert (=> d!43605 d!43537))

(declare-fun d!43873 () Bool)

(declare-fun e!91668 () Bool)

(assert (=> d!43873 e!91668))

(declare-fun res!67196 () Bool)

(assert (=> d!43873 (=> (not res!67196) (not e!91668))))

(assert (=> d!43873 (= res!67196 (and (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2578 (_keys!4698 newMap!16))) (bvslt (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (size!2579 (_values!2922 newMap!16)))))))

(declare-fun lt!73747 () Unit!4387)

(declare-fun choose!872 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4387)

(assert (=> d!43873 (= lt!73747 (choose!872 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43873 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43873 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) lt!73747)))

(declare-fun b!140609 () Bool)

(assert (=> b!140609 (= e!91668 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (= (and d!43873 res!67196) b!140609))

(assert (=> d!43873 m!166633))

(assert (=> d!43873 m!166663))

(declare-fun m!168131 () Bool)

(assert (=> d!43873 m!168131))

(assert (=> d!43873 m!166907))

(assert (=> b!140609 m!167211))

(assert (=> b!140609 m!167195))

(assert (=> b!140609 m!166773))

(assert (=> b!140609 m!167207))

(assert (=> b!140609 m!166773))

(assert (=> b!140609 m!167217))

(assert (=> d!43605 d!43873))

(declare-fun d!43875 () Bool)

(assert (=> d!43875 (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!73748 () Unit!4387)

(assert (=> d!43875 (= lt!73748 (choose!13 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(assert (=> d!43875 (bvsge (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000000)))

(assert (=> d!43875 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) lt!73748)))

(declare-fun bs!5882 () Bool)

(assert (= bs!5882 d!43875))

(assert (=> bs!5882 m!166633))

(assert (=> bs!5882 m!167193))

(assert (=> bs!5882 m!166633))

(declare-fun m!168133 () Bool)

(assert (=> bs!5882 m!168133))

(assert (=> d!43605 d!43875))

(declare-fun d!43877 () Bool)

(assert (=> d!43877 (= (get!1534 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140110 d!43877))

(declare-fun c!26359 () Bool)

(declare-fun call!15597 () Bool)

(declare-fun bm!15594 () Bool)

(assert (=> bm!15594 (= call!15597 (arrayNoDuplicates!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26359 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717))))))

(declare-fun b!140610 () Bool)

(declare-fun e!91669 () Bool)

(declare-fun e!91670 () Bool)

(assert (=> b!140610 (= e!91669 e!91670)))

(declare-fun res!67199 () Bool)

(assert (=> b!140610 (=> (not res!67199) (not e!91670))))

(declare-fun e!91672 () Bool)

(assert (=> b!140610 (= res!67199 (not e!91672))))

(declare-fun res!67197 () Bool)

(assert (=> b!140610 (=> (not res!67197) (not e!91672))))

(assert (=> b!140610 (= res!67197 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140611 () Bool)

(declare-fun e!91671 () Bool)

(assert (=> b!140611 (= e!91671 call!15597)))

(declare-fun b!140612 () Bool)

(assert (=> b!140612 (= e!91670 e!91671)))

(assert (=> b!140612 (= c!26359 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!43879 () Bool)

(declare-fun res!67198 () Bool)

(assert (=> d!43879 (=> res!67198 e!91669)))

(assert (=> d!43879 (= res!67198 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43879 (= (arrayNoDuplicates!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) e!91669)))

(declare-fun b!140613 () Bool)

(assert (=> b!140613 (= e!91671 call!15597)))

(declare-fun b!140614 () Bool)

(assert (=> b!140614 (= e!91672 (contains!906 (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!43879 (not res!67198)) b!140610))

(assert (= (and b!140610 res!67197) b!140614))

(assert (= (and b!140610 res!67199) b!140612))

(assert (= (and b!140612 c!26359) b!140611))

(assert (= (and b!140612 (not c!26359)) b!140613))

(assert (= (or b!140611 b!140613) bm!15594))

(declare-fun m!168135 () Bool)

(assert (=> bm!15594 m!168135))

(declare-fun m!168137 () Bool)

(assert (=> bm!15594 m!168137))

(assert (=> b!140610 m!168135))

(assert (=> b!140610 m!168135))

(declare-fun m!168139 () Bool)

(assert (=> b!140610 m!168139))

(assert (=> b!140612 m!168135))

(assert (=> b!140612 m!168135))

(assert (=> b!140612 m!168139))

(assert (=> b!140614 m!168135))

(assert (=> b!140614 m!168135))

(declare-fun m!168141 () Bool)

(assert (=> b!140614 m!168141))

(assert (=> bm!15550 d!43879))

(declare-fun d!43881 () Bool)

(assert (=> d!43881 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5883 () Bool)

(assert (= bs!5883 d!43881))

(assert (=> bs!5883 m!167259))

(declare-fun m!168143 () Bool)

(assert (=> bs!5883 m!168143))

(assert (=> b!140251 d!43881))

(declare-fun b!140616 () Bool)

(declare-fun e!91673 () Option!183)

(declare-fun e!91674 () Option!183)

(assert (=> b!140616 (= e!91673 e!91674)))

(declare-fun c!26361 () Bool)

(assert (=> b!140616 (= c!26361 (and ((_ is Cons!1715) (toList!858 lt!73184)) (not (= (_1!1322 (h!2322 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140617 () Bool)

(assert (=> b!140617 (= e!91674 (getValueByKey!177 (t!6295 (toList!858 lt!73184)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140615 () Bool)

(assert (=> b!140615 (= e!91673 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73184)))))))

(declare-fun b!140618 () Bool)

(assert (=> b!140618 (= e!91674 None!181)))

(declare-fun d!43883 () Bool)

(declare-fun c!26360 () Bool)

(assert (=> d!43883 (= c!26360 (and ((_ is Cons!1715) (toList!858 lt!73184)) (= (_1!1322 (h!2322 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43883 (= (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000) e!91673)))

(assert (= (and d!43883 c!26360) b!140615))

(assert (= (and d!43883 (not c!26360)) b!140616))

(assert (= (and b!140616 c!26361) b!140617))

(assert (= (and b!140616 (not c!26361)) b!140618))

(declare-fun m!168145 () Bool)

(assert (=> b!140617 m!168145))

(assert (=> b!140251 d!43883))

(declare-fun d!43885 () Bool)

(declare-fun e!91675 () Bool)

(assert (=> d!43885 e!91675))

(declare-fun res!67200 () Bool)

(assert (=> d!43885 (=> res!67200 e!91675)))

(declare-fun lt!73752 () Bool)

(assert (=> d!43885 (= res!67200 (not lt!73752))))

(declare-fun lt!73749 () Bool)

(assert (=> d!43885 (= lt!73752 lt!73749)))

(declare-fun lt!73751 () Unit!4387)

(declare-fun e!91676 () Unit!4387)

(assert (=> d!43885 (= lt!73751 e!91676)))

(declare-fun c!26362 () Bool)

(assert (=> d!43885 (= c!26362 lt!73749)))

(assert (=> d!43885 (= lt!73749 (containsKey!180 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43885 (= (contains!904 lt!73425 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73752)))

(declare-fun b!140619 () Bool)

(declare-fun lt!73750 () Unit!4387)

(assert (=> b!140619 (= e!91676 lt!73750)))

(assert (=> b!140619 (= lt!73750 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> b!140619 (isDefined!129 (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140620 () Bool)

(declare-fun Unit!4426 () Unit!4387)

(assert (=> b!140620 (= e!91676 Unit!4426)))

(declare-fun b!140621 () Bool)

(assert (=> b!140621 (= e!91675 (isDefined!129 (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!43885 c!26362) b!140619))

(assert (= (and d!43885 (not c!26362)) b!140620))

(assert (= (and d!43885 (not res!67200)) b!140621))

(declare-fun m!168147 () Bool)

(assert (=> d!43885 m!168147))

(declare-fun m!168149 () Bool)

(assert (=> b!140619 m!168149))

(assert (=> b!140619 m!167279))

(assert (=> b!140619 m!167279))

(declare-fun m!168151 () Bool)

(assert (=> b!140619 m!168151))

(assert (=> b!140621 m!167279))

(assert (=> b!140621 m!167279))

(assert (=> b!140621 m!168151))

(assert (=> d!43623 d!43885))

(declare-fun b!140623 () Bool)

(declare-fun e!91677 () Option!183)

(declare-fun e!91678 () Option!183)

(assert (=> b!140623 (= e!91677 e!91678)))

(declare-fun c!26364 () Bool)

(assert (=> b!140623 (= c!26364 (and ((_ is Cons!1715) lt!73424) (not (= (_1!1322 (h!2322 lt!73424)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140624 () Bool)

(assert (=> b!140624 (= e!91678 (getValueByKey!177 (t!6295 lt!73424) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140622 () Bool)

(assert (=> b!140622 (= e!91677 (Some!182 (_2!1322 (h!2322 lt!73424))))))

(declare-fun b!140625 () Bool)

(assert (=> b!140625 (= e!91678 None!181)))

(declare-fun d!43887 () Bool)

(declare-fun c!26363 () Bool)

(assert (=> d!43887 (= c!26363 (and ((_ is Cons!1715) lt!73424) (= (_1!1322 (h!2322 lt!73424)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43887 (= (getValueByKey!177 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91677)))

(assert (= (and d!43887 c!26363) b!140622))

(assert (= (and d!43887 (not c!26363)) b!140623))

(assert (= (and b!140623 c!26364) b!140624))

(assert (= (and b!140623 (not c!26364)) b!140625))

(declare-fun m!168153 () Bool)

(assert (=> b!140624 m!168153))

(assert (=> d!43623 d!43887))

(declare-fun d!43889 () Bool)

(assert (=> d!43889 (= (getValueByKey!177 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73755 () Unit!4387)

(declare-fun choose!873 (List!1719 (_ BitVec 64) V!3553) Unit!4387)

(assert (=> d!43889 (= lt!73755 (choose!873 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!91681 () Bool)

(assert (=> d!43889 e!91681))

(declare-fun res!67205 () Bool)

(assert (=> d!43889 (=> (not res!67205) (not e!91681))))

(assert (=> d!43889 (= res!67205 (isStrictlySorted!312 lt!73424))))

(assert (=> d!43889 (= (lemmaContainsTupThenGetReturnValue!91 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73755)))

(declare-fun b!140630 () Bool)

(declare-fun res!67206 () Bool)

(assert (=> b!140630 (=> (not res!67206) (not e!91681))))

(assert (=> b!140630 (= res!67206 (containsKey!180 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140631 () Bool)

(assert (=> b!140631 (= e!91681 (contains!907 lt!73424 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!43889 res!67205) b!140630))

(assert (= (and b!140630 res!67206) b!140631))

(assert (=> d!43889 m!167273))

(declare-fun m!168155 () Bool)

(assert (=> d!43889 m!168155))

(declare-fun m!168157 () Bool)

(assert (=> d!43889 m!168157))

(declare-fun m!168159 () Bool)

(assert (=> b!140630 m!168159))

(declare-fun m!168161 () Bool)

(assert (=> b!140631 m!168161))

(assert (=> d!43623 d!43889))

(declare-fun bm!15601 () Bool)

(declare-fun call!15606 () List!1719)

(declare-fun call!15605 () List!1719)

(assert (=> bm!15601 (= call!15606 call!15605)))

(declare-fun b!140653 () Bool)

(declare-fun e!91693 () List!1719)

(declare-fun e!91695 () List!1719)

(assert (=> b!140653 (= e!91693 e!91695)))

(declare-fun c!26376 () Bool)

(assert (=> b!140653 (= c!26376 (and ((_ is Cons!1715) (toList!858 lt!73200)) (= (_1!1322 (h!2322 (toList!858 lt!73200))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140654 () Bool)

(declare-fun res!67212 () Bool)

(declare-fun e!91692 () Bool)

(assert (=> b!140654 (=> (not res!67212) (not e!91692))))

(declare-fun lt!73758 () List!1719)

(assert (=> b!140654 (= res!67212 (containsKey!180 lt!73758 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun c!26374 () Bool)

(declare-fun b!140655 () Bool)

(assert (=> b!140655 (= c!26374 (and ((_ is Cons!1715) (toList!858 lt!73200)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73200))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91694 () List!1719)

(assert (=> b!140655 (= e!91695 e!91694)))

(declare-fun bm!15602 () Bool)

(declare-fun call!15604 () List!1719)

(assert (=> bm!15602 (= call!15605 call!15604)))

(declare-fun b!140656 () Bool)

(assert (=> b!140656 (= e!91695 call!15605)))

(declare-fun b!140657 () Bool)

(assert (=> b!140657 (= e!91693 call!15604)))

(declare-fun b!140658 () Bool)

(assert (=> b!140658 (= e!91692 (contains!907 lt!73758 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91696 () List!1719)

(declare-fun b!140652 () Bool)

(assert (=> b!140652 (= e!91696 (ite c!26376 (t!6295 (toList!858 lt!73200)) (ite c!26374 (Cons!1715 (h!2322 (toList!858 lt!73200)) (t!6295 (toList!858 lt!73200))) Nil!1716)))))

(declare-fun d!43891 () Bool)

(assert (=> d!43891 e!91692))

(declare-fun res!67211 () Bool)

(assert (=> d!43891 (=> (not res!67211) (not e!91692))))

(assert (=> d!43891 (= res!67211 (isStrictlySorted!312 lt!73758))))

(assert (=> d!43891 (= lt!73758 e!91693)))

(declare-fun c!26375 () Bool)

(assert (=> d!43891 (= c!26375 (and ((_ is Cons!1715) (toList!858 lt!73200)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73200))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43891 (isStrictlySorted!312 (toList!858 lt!73200))))

(assert (=> d!43891 (= (insertStrictlySorted!94 (toList!858 lt!73200) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73758)))

(declare-fun b!140659 () Bool)

(assert (=> b!140659 (= e!91694 call!15606)))

(declare-fun b!140660 () Bool)

(assert (=> b!140660 (= e!91694 call!15606)))

(declare-fun bm!15603 () Bool)

(declare-fun $colon$colon!93 (List!1719 tuple2!2622) List!1719)

(assert (=> bm!15603 (= call!15604 ($colon$colon!93 e!91696 (ite c!26375 (h!2322 (toList!858 lt!73200)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26373 () Bool)

(assert (=> bm!15603 (= c!26373 c!26375)))

(declare-fun b!140661 () Bool)

(assert (=> b!140661 (= e!91696 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73200)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!43891 c!26375) b!140657))

(assert (= (and d!43891 (not c!26375)) b!140653))

(assert (= (and b!140653 c!26376) b!140656))

(assert (= (and b!140653 (not c!26376)) b!140655))

(assert (= (and b!140655 c!26374) b!140659))

(assert (= (and b!140655 (not c!26374)) b!140660))

(assert (= (or b!140659 b!140660) bm!15601))

(assert (= (or b!140656 bm!15601) bm!15602))

(assert (= (or b!140657 bm!15602) bm!15603))

(assert (= (and bm!15603 c!26373) b!140661))

(assert (= (and bm!15603 (not c!26373)) b!140652))

(assert (= (and d!43891 res!67211) b!140654))

(assert (= (and b!140654 res!67212) b!140658))

(declare-fun m!168163 () Bool)

(assert (=> bm!15603 m!168163))

(declare-fun m!168165 () Bool)

(assert (=> d!43891 m!168165))

(declare-fun m!168167 () Bool)

(assert (=> d!43891 m!168167))

(declare-fun m!168169 () Bool)

(assert (=> b!140654 m!168169))

(declare-fun m!168171 () Bool)

(assert (=> b!140661 m!168171))

(declare-fun m!168173 () Bool)

(assert (=> b!140658 m!168173))

(assert (=> d!43623 d!43891))

(declare-fun d!43893 () Bool)

(declare-fun e!91697 () Bool)

(assert (=> d!43893 e!91697))

(declare-fun res!67213 () Bool)

(assert (=> d!43893 (=> res!67213 e!91697)))

(declare-fun lt!73762 () Bool)

(assert (=> d!43893 (= res!67213 (not lt!73762))))

(declare-fun lt!73759 () Bool)

(assert (=> d!43893 (= lt!73762 lt!73759)))

(declare-fun lt!73761 () Unit!4387)

(declare-fun e!91698 () Unit!4387)

(assert (=> d!43893 (= lt!73761 e!91698)))

(declare-fun c!26377 () Bool)

(assert (=> d!43893 (= c!26377 lt!73759)))

(assert (=> d!43893 (= lt!73759 (containsKey!180 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43893 (= (contains!904 lt!73290 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73762)))

(declare-fun b!140662 () Bool)

(declare-fun lt!73760 () Unit!4387)

(assert (=> b!140662 (= e!91698 lt!73760)))

(assert (=> b!140662 (= lt!73760 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> b!140662 (isDefined!129 (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140663 () Bool)

(declare-fun Unit!4427 () Unit!4387)

(assert (=> b!140663 (= e!91698 Unit!4427)))

(declare-fun b!140664 () Bool)

(assert (=> b!140664 (= e!91697 (isDefined!129 (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!43893 c!26377) b!140662))

(assert (= (and d!43893 (not c!26377)) b!140663))

(assert (= (and d!43893 (not res!67213)) b!140664))

(declare-fun m!168175 () Bool)

(assert (=> d!43893 m!168175))

(declare-fun m!168177 () Bool)

(assert (=> b!140662 m!168177))

(assert (=> b!140662 m!167099))

(assert (=> b!140662 m!167099))

(declare-fun m!168179 () Bool)

(assert (=> b!140662 m!168179))

(assert (=> b!140664 m!167099))

(assert (=> b!140664 m!167099))

(assert (=> b!140664 m!168179))

(assert (=> d!43585 d!43893))

(declare-fun b!140666 () Bool)

(declare-fun e!91699 () Option!183)

(declare-fun e!91700 () Option!183)

(assert (=> b!140666 (= e!91699 e!91700)))

(declare-fun c!26379 () Bool)

(assert (=> b!140666 (= c!26379 (and ((_ is Cons!1715) lt!73289) (not (= (_1!1322 (h!2322 lt!73289)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140667 () Bool)

(assert (=> b!140667 (= e!91700 (getValueByKey!177 (t!6295 lt!73289) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140665 () Bool)

(assert (=> b!140665 (= e!91699 (Some!182 (_2!1322 (h!2322 lt!73289))))))

(declare-fun b!140668 () Bool)

(assert (=> b!140668 (= e!91700 None!181)))

(declare-fun d!43895 () Bool)

(declare-fun c!26378 () Bool)

(assert (=> d!43895 (= c!26378 (and ((_ is Cons!1715) lt!73289) (= (_1!1322 (h!2322 lt!73289)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43895 (= (getValueByKey!177 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91699)))

(assert (= (and d!43895 c!26378) b!140665))

(assert (= (and d!43895 (not c!26378)) b!140666))

(assert (= (and b!140666 c!26379) b!140667))

(assert (= (and b!140666 (not c!26379)) b!140668))

(declare-fun m!168181 () Bool)

(assert (=> b!140667 m!168181))

(assert (=> d!43585 d!43895))

(declare-fun d!43897 () Bool)

(assert (=> d!43897 (= (getValueByKey!177 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73763 () Unit!4387)

(assert (=> d!43897 (= lt!73763 (choose!873 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!91701 () Bool)

(assert (=> d!43897 e!91701))

(declare-fun res!67214 () Bool)

(assert (=> d!43897 (=> (not res!67214) (not e!91701))))

(assert (=> d!43897 (= res!67214 (isStrictlySorted!312 lt!73289))))

(assert (=> d!43897 (= (lemmaContainsTupThenGetReturnValue!91 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73763)))

(declare-fun b!140669 () Bool)

(declare-fun res!67215 () Bool)

(assert (=> b!140669 (=> (not res!67215) (not e!91701))))

(assert (=> b!140669 (= res!67215 (containsKey!180 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140670 () Bool)

(assert (=> b!140670 (= e!91701 (contains!907 lt!73289 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!43897 res!67214) b!140669))

(assert (= (and b!140669 res!67215) b!140670))

(assert (=> d!43897 m!167093))

(declare-fun m!168183 () Bool)

(assert (=> d!43897 m!168183))

(declare-fun m!168185 () Bool)

(assert (=> d!43897 m!168185))

(declare-fun m!168187 () Bool)

(assert (=> b!140669 m!168187))

(declare-fun m!168189 () Bool)

(assert (=> b!140670 m!168189))

(assert (=> d!43585 d!43897))

(declare-fun bm!15604 () Bool)

(declare-fun call!15609 () List!1719)

(declare-fun call!15608 () List!1719)

(assert (=> bm!15604 (= call!15609 call!15608)))

(declare-fun b!140672 () Bool)

(declare-fun e!91703 () List!1719)

(declare-fun e!91705 () List!1719)

(assert (=> b!140672 (= e!91703 e!91705)))

(declare-fun c!26383 () Bool)

(assert (=> b!140672 (= c!26383 (and ((_ is Cons!1715) (toList!858 call!15501)) (= (_1!1322 (h!2322 (toList!858 call!15501))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140673 () Bool)

(declare-fun res!67217 () Bool)

(declare-fun e!91702 () Bool)

(assert (=> b!140673 (=> (not res!67217) (not e!91702))))

(declare-fun lt!73764 () List!1719)

(assert (=> b!140673 (= res!67217 (containsKey!180 lt!73764 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140674 () Bool)

(declare-fun c!26381 () Bool)

(assert (=> b!140674 (= c!26381 (and ((_ is Cons!1715) (toList!858 call!15501)) (bvsgt (_1!1322 (h!2322 (toList!858 call!15501))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91704 () List!1719)

(assert (=> b!140674 (= e!91705 e!91704)))

(declare-fun bm!15605 () Bool)

(declare-fun call!15607 () List!1719)

(assert (=> bm!15605 (= call!15608 call!15607)))

(declare-fun b!140675 () Bool)

(assert (=> b!140675 (= e!91705 call!15608)))

(declare-fun b!140676 () Bool)

(assert (=> b!140676 (= e!91703 call!15607)))

(declare-fun b!140677 () Bool)

(assert (=> b!140677 (= e!91702 (contains!907 lt!73764 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140671 () Bool)

(declare-fun e!91706 () List!1719)

(assert (=> b!140671 (= e!91706 (ite c!26383 (t!6295 (toList!858 call!15501)) (ite c!26381 (Cons!1715 (h!2322 (toList!858 call!15501)) (t!6295 (toList!858 call!15501))) Nil!1716)))))

(declare-fun d!43899 () Bool)

(assert (=> d!43899 e!91702))

(declare-fun res!67216 () Bool)

(assert (=> d!43899 (=> (not res!67216) (not e!91702))))

(assert (=> d!43899 (= res!67216 (isStrictlySorted!312 lt!73764))))

(assert (=> d!43899 (= lt!73764 e!91703)))

(declare-fun c!26382 () Bool)

(assert (=> d!43899 (= c!26382 (and ((_ is Cons!1715) (toList!858 call!15501)) (bvslt (_1!1322 (h!2322 (toList!858 call!15501))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43899 (isStrictlySorted!312 (toList!858 call!15501))))

(assert (=> d!43899 (= (insertStrictlySorted!94 (toList!858 call!15501) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73764)))

(declare-fun b!140678 () Bool)

(assert (=> b!140678 (= e!91704 call!15609)))

(declare-fun b!140679 () Bool)

(assert (=> b!140679 (= e!91704 call!15609)))

(declare-fun bm!15606 () Bool)

(assert (=> bm!15606 (= call!15607 ($colon$colon!93 e!91706 (ite c!26382 (h!2322 (toList!858 call!15501)) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26380 () Bool)

(assert (=> bm!15606 (= c!26380 c!26382)))

(declare-fun b!140680 () Bool)

(assert (=> b!140680 (= e!91706 (insertStrictlySorted!94 (t!6295 (toList!858 call!15501)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!43899 c!26382) b!140676))

(assert (= (and d!43899 (not c!26382)) b!140672))

(assert (= (and b!140672 c!26383) b!140675))

(assert (= (and b!140672 (not c!26383)) b!140674))

(assert (= (and b!140674 c!26381) b!140678))

(assert (= (and b!140674 (not c!26381)) b!140679))

(assert (= (or b!140678 b!140679) bm!15604))

(assert (= (or b!140675 bm!15604) bm!15605))

(assert (= (or b!140676 bm!15605) bm!15606))

(assert (= (and bm!15606 c!26380) b!140680))

(assert (= (and bm!15606 (not c!26380)) b!140671))

(assert (= (and d!43899 res!67216) b!140673))

(assert (= (and b!140673 res!67217) b!140677))

(declare-fun m!168191 () Bool)

(assert (=> bm!15606 m!168191))

(declare-fun m!168193 () Bool)

(assert (=> d!43899 m!168193))

(declare-fun m!168195 () Bool)

(assert (=> d!43899 m!168195))

(declare-fun m!168197 () Bool)

(assert (=> b!140673 m!168197))

(declare-fun m!168199 () Bool)

(assert (=> b!140680 m!168199))

(declare-fun m!168201 () Bool)

(assert (=> b!140677 m!168201))

(assert (=> d!43585 d!43899))

(assert (=> b!139966 d!43693))

(declare-fun d!43901 () Bool)

(declare-fun res!67218 () Bool)

(declare-fun e!91707 () Bool)

(assert (=> d!43901 (=> res!67218 e!91707)))

(assert (=> d!43901 (= res!67218 (and ((_ is Cons!1715) (toList!858 e!91171)) (= (_1!1322 (h!2322 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43901 (= (containsKey!180 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91707)))

(declare-fun b!140681 () Bool)

(declare-fun e!91708 () Bool)

(assert (=> b!140681 (= e!91707 e!91708)))

(declare-fun res!67219 () Bool)

(assert (=> b!140681 (=> (not res!67219) (not e!91708))))

(assert (=> b!140681 (= res!67219 (and (or (not ((_ is Cons!1715) (toList!858 e!91171))) (bvsle (_1!1322 (h!2322 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 e!91171)) (bvslt (_1!1322 (h!2322 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!140682 () Bool)

(assert (=> b!140682 (= e!91708 (containsKey!180 (t!6295 (toList!858 e!91171)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43901 (not res!67218)) b!140681))

(assert (= (and b!140681 res!67219) b!140682))

(assert (=> b!140682 m!166633))

(declare-fun m!168203 () Bool)

(assert (=> b!140682 m!168203))

(assert (=> d!43583 d!43901))

(declare-fun d!43903 () Bool)

(declare-fun e!91709 () Bool)

(assert (=> d!43903 e!91709))

(declare-fun res!67220 () Bool)

(assert (=> d!43903 (=> (not res!67220) (not e!91709))))

(declare-fun lt!73767 () ListLongMap!1685)

(assert (=> d!43903 (= res!67220 (contains!904 lt!73767 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73766 () List!1719)

(assert (=> d!43903 (= lt!73767 (ListLongMap!1686 lt!73766))))

(declare-fun lt!73765 () Unit!4387)

(declare-fun lt!73768 () Unit!4387)

(assert (=> d!43903 (= lt!73765 lt!73768)))

(assert (=> d!43903 (= (getValueByKey!177 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43903 (= lt!73768 (lemmaContainsTupThenGetReturnValue!91 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43903 (= lt!73766 (insertStrictlySorted!94 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43903 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73767)))

(declare-fun b!140683 () Bool)

(declare-fun res!67221 () Bool)

(assert (=> b!140683 (=> (not res!67221) (not e!91709))))

(assert (=> b!140683 (= res!67221 (= (getValueByKey!177 (toList!858 lt!73767) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140684 () Bool)

(assert (=> b!140684 (= e!91709 (contains!907 (toList!858 lt!73767) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43903 res!67220) b!140683))

(assert (= (and b!140683 res!67221) b!140684))

(declare-fun m!168205 () Bool)

(assert (=> d!43903 m!168205))

(declare-fun m!168207 () Bool)

(assert (=> d!43903 m!168207))

(declare-fun m!168209 () Bool)

(assert (=> d!43903 m!168209))

(declare-fun m!168211 () Bool)

(assert (=> d!43903 m!168211))

(declare-fun m!168213 () Bool)

(assert (=> b!140683 m!168213))

(declare-fun m!168215 () Bool)

(assert (=> b!140684 m!168215))

(assert (=> d!43569 d!43903))

(assert (=> d!43569 d!43565))

(declare-fun b!140685 () Bool)

(declare-fun e!91712 () Bool)

(assert (=> b!140685 (= e!91712 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140686 () Bool)

(declare-fun e!91718 () Bool)

(declare-fun lt!73770 () ListLongMap!1685)

(assert (=> b!140686 (= e!91718 (= (apply!120 lt!73770 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140687 () Bool)

(declare-fun c!26388 () Bool)

(assert (=> b!140687 (= c!26388 (and (not (= (bvand lt!73129 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!73129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91720 () ListLongMap!1685)

(declare-fun e!91710 () ListLongMap!1685)

(assert (=> b!140687 (= e!91720 e!91710)))

(declare-fun bm!15607 () Bool)

(declare-fun call!15610 () Bool)

(assert (=> bm!15607 (= call!15610 (contains!904 lt!73770 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140688 () Bool)

(declare-fun e!91719 () Bool)

(declare-fun e!91717 () Bool)

(assert (=> b!140688 (= e!91719 e!91717)))

(declare-fun c!26385 () Bool)

(assert (=> b!140688 (= c!26385 (not (= (bvand lt!73129 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140689 () Bool)

(declare-fun e!91711 () Bool)

(declare-fun e!91713 () Bool)

(assert (=> b!140689 (= e!91711 e!91713)))

(declare-fun res!67230 () Bool)

(assert (=> b!140689 (=> (not res!67230) (not e!91713))))

(assert (=> b!140689 (= res!67230 (contains!904 lt!73770 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140689 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140690 () Bool)

(declare-fun res!67224 () Bool)

(assert (=> b!140690 (=> (not res!67224) (not e!91719))))

(declare-fun e!91716 () Bool)

(assert (=> b!140690 (= res!67224 e!91716)))

(declare-fun c!26389 () Bool)

(assert (=> b!140690 (= c!26389 (not (= (bvand lt!73129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140691 () Bool)

(declare-fun e!91721 () Bool)

(assert (=> b!140691 (= e!91721 (= (apply!120 lt!73770 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140692 () Bool)

(declare-fun call!15616 () Bool)

(assert (=> b!140692 (= e!91717 (not call!15616))))

(declare-fun b!140693 () Bool)

(assert (=> b!140693 (= e!91713 (= (apply!120 lt!73770 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140693 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!140693 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15608 () Bool)

(declare-fun call!15613 () ListLongMap!1685)

(declare-fun call!15611 () ListLongMap!1685)

(assert (=> bm!15608 (= call!15613 call!15611)))

(declare-fun b!140694 () Bool)

(declare-fun res!67228 () Bool)

(assert (=> b!140694 (=> (not res!67228) (not e!91719))))

(assert (=> b!140694 (= res!67228 e!91711)))

(declare-fun res!67227 () Bool)

(assert (=> b!140694 (=> res!67227 e!91711)))

(assert (=> b!140694 (= res!67227 (not e!91712))))

(declare-fun res!67223 () Bool)

(assert (=> b!140694 (=> (not res!67223) (not e!91712))))

(assert (=> b!140694 (= res!67223 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15609 () Bool)

(declare-fun call!15612 () ListLongMap!1685)

(assert (=> bm!15609 (= call!15611 call!15612)))

(declare-fun b!140695 () Bool)

(declare-fun e!91714 () Unit!4387)

(declare-fun lt!73787 () Unit!4387)

(assert (=> b!140695 (= e!91714 lt!73787)))

(declare-fun lt!73774 () ListLongMap!1685)

(assert (=> b!140695 (= lt!73774 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73776 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73776 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73780 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73780 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73790 () Unit!4387)

(assert (=> b!140695 (= lt!73790 (addStillContains!96 lt!73774 lt!73776 (zeroValue!2789 newMap!16) lt!73780))))

(assert (=> b!140695 (contains!904 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))) lt!73780)))

(declare-fun lt!73779 () Unit!4387)

(assert (=> b!140695 (= lt!73779 lt!73790)))

(declare-fun lt!73786 () ListLongMap!1685)

(assert (=> b!140695 (= lt!73786 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73775 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73775 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73781 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73781 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73784 () Unit!4387)

(assert (=> b!140695 (= lt!73784 (addApplyDifferent!96 lt!73786 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73781))))

(assert (=> b!140695 (= (apply!120 (+!173 lt!73786 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73781) (apply!120 lt!73786 lt!73781))))

(declare-fun lt!73769 () Unit!4387)

(assert (=> b!140695 (= lt!73769 lt!73784)))

(declare-fun lt!73773 () ListLongMap!1685)

(assert (=> b!140695 (= lt!73773 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73783 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73783 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73771 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73771 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73782 () Unit!4387)

(assert (=> b!140695 (= lt!73782 (addApplyDifferent!96 lt!73773 lt!73783 (zeroValue!2789 newMap!16) lt!73771))))

(assert (=> b!140695 (= (apply!120 (+!173 lt!73773 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))) lt!73771) (apply!120 lt!73773 lt!73771))))

(declare-fun lt!73772 () Unit!4387)

(assert (=> b!140695 (= lt!73772 lt!73782)))

(declare-fun lt!73789 () ListLongMap!1685)

(assert (=> b!140695 (= lt!73789 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73785 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73785 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73788 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73788 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140695 (= lt!73787 (addApplyDifferent!96 lt!73789 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73788))))

(assert (=> b!140695 (= (apply!120 (+!173 lt!73789 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73788) (apply!120 lt!73789 lt!73788))))

(declare-fun c!26387 () Bool)

(declare-fun bm!15610 () Bool)

(declare-fun call!15614 () ListLongMap!1685)

(declare-fun c!26386 () Bool)

(assert (=> bm!15610 (= call!15614 (+!173 (ite c!26386 call!15612 (ite c!26387 call!15611 call!15613)) (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!43905 () Bool)

(assert (=> d!43905 e!91719))

(declare-fun res!67222 () Bool)

(assert (=> d!43905 (=> (not res!67222) (not e!91719))))

(assert (=> d!43905 (= res!67222 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73777 () ListLongMap!1685)

(assert (=> d!43905 (= lt!73770 lt!73777)))

(declare-fun lt!73778 () Unit!4387)

(assert (=> d!43905 (= lt!73778 e!91714)))

(declare-fun c!26384 () Bool)

(declare-fun e!91715 () Bool)

(assert (=> d!43905 (= c!26384 e!91715)))

(declare-fun res!67225 () Bool)

(assert (=> d!43905 (=> (not res!67225) (not e!91715))))

(assert (=> d!43905 (= res!67225 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91722 () ListLongMap!1685)

(assert (=> d!43905 (= lt!73777 e!91722)))

(assert (=> d!43905 (= c!26386 (and (not (= (bvand lt!73129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!73129 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43905 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43905 (= (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73770)))

(declare-fun b!140696 () Bool)

(assert (=> b!140696 (= e!91710 call!15613)))

(declare-fun b!140697 () Bool)

(declare-fun Unit!4428 () Unit!4387)

(assert (=> b!140697 (= e!91714 Unit!4428)))

(declare-fun b!140698 () Bool)

(assert (=> b!140698 (= e!91717 e!91718)))

(declare-fun res!67226 () Bool)

(assert (=> b!140698 (= res!67226 call!15616)))

(assert (=> b!140698 (=> (not res!67226) (not e!91718))))

(declare-fun b!140699 () Bool)

(assert (=> b!140699 (= e!91716 e!91721)))

(declare-fun res!67229 () Bool)

(assert (=> b!140699 (= res!67229 call!15610)))

(assert (=> b!140699 (=> (not res!67229) (not e!91721))))

(declare-fun b!140700 () Bool)

(declare-fun call!15615 () ListLongMap!1685)

(assert (=> b!140700 (= e!91710 call!15615)))

(declare-fun b!140701 () Bool)

(assert (=> b!140701 (= e!91720 call!15615)))

(declare-fun b!140702 () Bool)

(assert (=> b!140702 (= e!91722 (+!173 call!15614 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!15611 () Bool)

(assert (=> bm!15611 (= call!15612 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140703 () Bool)

(assert (=> b!140703 (= e!91715 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140704 () Bool)

(assert (=> b!140704 (= e!91722 e!91720)))

(assert (=> b!140704 (= c!26387 (and (not (= (bvand lt!73129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!73129 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140705 () Bool)

(assert (=> b!140705 (= e!91716 (not call!15610))))

(declare-fun bm!15612 () Bool)

(assert (=> bm!15612 (= call!15615 call!15614)))

(declare-fun bm!15613 () Bool)

(assert (=> bm!15613 (= call!15616 (contains!904 lt!73770 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43905 c!26386) b!140702))

(assert (= (and d!43905 (not c!26386)) b!140704))

(assert (= (and b!140704 c!26387) b!140701))

(assert (= (and b!140704 (not c!26387)) b!140687))

(assert (= (and b!140687 c!26388) b!140700))

(assert (= (and b!140687 (not c!26388)) b!140696))

(assert (= (or b!140700 b!140696) bm!15608))

(assert (= (or b!140701 bm!15608) bm!15609))

(assert (= (or b!140701 b!140700) bm!15612))

(assert (= (or b!140702 bm!15609) bm!15611))

(assert (= (or b!140702 bm!15612) bm!15610))

(assert (= (and d!43905 res!67225) b!140703))

(assert (= (and d!43905 c!26384) b!140695))

(assert (= (and d!43905 (not c!26384)) b!140697))

(assert (= (and d!43905 res!67222) b!140694))

(assert (= (and b!140694 res!67223) b!140685))

(assert (= (and b!140694 (not res!67227)) b!140689))

(assert (= (and b!140689 res!67230) b!140693))

(assert (= (and b!140694 res!67228) b!140690))

(assert (= (and b!140690 c!26389) b!140699))

(assert (= (and b!140690 (not c!26389)) b!140705))

(assert (= (and b!140699 res!67229) b!140691))

(assert (= (or b!140699 b!140705) bm!15607))

(assert (= (and b!140690 res!67224) b!140688))

(assert (= (and b!140688 c!26385) b!140698))

(assert (= (and b!140688 (not c!26385)) b!140692))

(assert (= (and b!140698 res!67226) b!140686))

(assert (= (or b!140698 b!140692) bm!15613))

(declare-fun b_lambda!6311 () Bool)

(assert (=> (not b_lambda!6311) (not b!140693)))

(assert (=> b!140693 t!6309))

(declare-fun b_and!8805 () Bool)

(assert (= b_and!8801 (and (=> t!6309 result!4187) b_and!8805)))

(assert (=> b!140693 t!6311))

(declare-fun b_and!8807 () Bool)

(assert (= b_and!8803 (and (=> t!6311 result!4189) b_and!8807)))

(declare-fun m!168217 () Bool)

(assert (=> b!140695 m!168217))

(declare-fun m!168219 () Bool)

(assert (=> b!140695 m!168219))

(declare-fun m!168221 () Bool)

(assert (=> b!140695 m!168221))

(declare-fun m!168223 () Bool)

(assert (=> b!140695 m!168223))

(assert (=> b!140695 m!166663))

(declare-fun m!168225 () Bool)

(assert (=> b!140695 m!168225))

(assert (=> b!140695 m!166927))

(assert (=> b!140695 m!168217))

(declare-fun m!168227 () Bool)

(assert (=> b!140695 m!168227))

(declare-fun m!168229 () Bool)

(assert (=> b!140695 m!168229))

(assert (=> b!140695 m!168229))

(declare-fun m!168231 () Bool)

(assert (=> b!140695 m!168231))

(declare-fun m!168233 () Bool)

(assert (=> b!140695 m!168233))

(declare-fun m!168235 () Bool)

(assert (=> b!140695 m!168235))

(declare-fun m!168237 () Bool)

(assert (=> b!140695 m!168237))

(declare-fun m!168239 () Bool)

(assert (=> b!140695 m!168239))

(assert (=> b!140695 m!166663))

(declare-fun m!168241 () Bool)

(assert (=> b!140695 m!168241))

(declare-fun m!168243 () Bool)

(assert (=> b!140695 m!168243))

(assert (=> b!140695 m!168223))

(declare-fun m!168245 () Bool)

(assert (=> b!140695 m!168245))

(assert (=> b!140695 m!168235))

(assert (=> b!140695 m!166663))

(declare-fun m!168247 () Bool)

(assert (=> b!140695 m!168247))

(declare-fun m!168249 () Bool)

(assert (=> b!140702 m!168249))

(declare-fun m!168251 () Bool)

(assert (=> b!140691 m!168251))

(declare-fun m!168253 () Bool)

(assert (=> bm!15607 m!168253))

(assert (=> b!140685 m!166927))

(assert (=> b!140685 m!166927))

(assert (=> b!140685 m!166957))

(declare-fun m!168255 () Bool)

(assert (=> b!140686 m!168255))

(assert (=> b!140693 m!167015))

(assert (=> b!140693 m!167015))

(assert (=> b!140693 m!166963))

(assert (=> b!140693 m!167017))

(assert (=> b!140693 m!166927))

(assert (=> b!140693 m!166927))

(declare-fun m!168257 () Bool)

(assert (=> b!140693 m!168257))

(assert (=> b!140693 m!166963))

(declare-fun m!168259 () Bool)

(assert (=> bm!15613 m!168259))

(assert (=> d!43905 m!166907))

(declare-fun m!168261 () Bool)

(assert (=> bm!15610 m!168261))

(assert (=> bm!15611 m!166663))

(assert (=> bm!15611 m!168225))

(assert (=> b!140689 m!166927))

(assert (=> b!140689 m!166927))

(declare-fun m!168263 () Bool)

(assert (=> b!140689 m!168263))

(assert (=> b!140703 m!166927))

(assert (=> b!140703 m!166927))

(assert (=> b!140703 m!166957))

(assert (=> d!43569 d!43905))

(declare-fun d!43907 () Bool)

(assert (=> d!43907 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!43907 true))

(declare-fun _$8!124 () Unit!4387)

(assert (=> d!43907 (= (choose!863 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) _$8!124)))

(declare-fun bs!5884 () Bool)

(assert (= bs!5884 d!43907))

(assert (=> bs!5884 m!166773))

(assert (=> bs!5884 m!166773))

(assert (=> bs!5884 m!167039))

(assert (=> bs!5884 m!166663))

(assert (=> bs!5884 m!167043))

(assert (=> d!43569 d!43907))

(assert (=> d!43569 d!43697))

(assert (=> b!140022 d!43615))

(declare-fun d!43909 () Bool)

(declare-fun e!91723 () Bool)

(assert (=> d!43909 e!91723))

(declare-fun res!67231 () Bool)

(assert (=> d!43909 (=> res!67231 e!91723)))

(declare-fun lt!73794 () Bool)

(assert (=> d!43909 (= res!67231 (not lt!73794))))

(declare-fun lt!73791 () Bool)

(assert (=> d!43909 (= lt!73794 lt!73791)))

(declare-fun lt!73793 () Unit!4387)

(declare-fun e!91724 () Unit!4387)

(assert (=> d!43909 (= lt!73793 e!91724)))

(declare-fun c!26390 () Bool)

(assert (=> d!43909 (= c!26390 lt!73791)))

(assert (=> d!43909 (= lt!73791 (containsKey!180 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43909 (= (contains!904 lt!73279 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73794)))

(declare-fun b!140706 () Bool)

(declare-fun lt!73792 () Unit!4387)

(assert (=> b!140706 (= e!91724 lt!73792)))

(assert (=> b!140706 (= lt!73792 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!140706 (isDefined!129 (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140707 () Bool)

(declare-fun Unit!4429 () Unit!4387)

(assert (=> b!140707 (= e!91724 Unit!4429)))

(declare-fun b!140708 () Bool)

(assert (=> b!140708 (= e!91723 (isDefined!129 (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43909 c!26390) b!140706))

(assert (= (and d!43909 (not c!26390)) b!140707))

(assert (= (and d!43909 (not res!67231)) b!140708))

(declare-fun m!168265 () Bool)

(assert (=> d!43909 m!168265))

(declare-fun m!168267 () Bool)

(assert (=> b!140706 m!168267))

(assert (=> b!140706 m!167073))

(assert (=> b!140706 m!167073))

(declare-fun m!168269 () Bool)

(assert (=> b!140706 m!168269))

(assert (=> b!140708 m!167073))

(assert (=> b!140708 m!167073))

(assert (=> b!140708 m!168269))

(assert (=> d!43575 d!43909))

(declare-fun b!140710 () Bool)

(declare-fun e!91725 () Option!183)

(declare-fun e!91726 () Option!183)

(assert (=> b!140710 (= e!91725 e!91726)))

(declare-fun c!26392 () Bool)

(assert (=> b!140710 (= c!26392 (and ((_ is Cons!1715) lt!73278) (not (= (_1!1322 (h!2322 lt!73278)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140711 () Bool)

(assert (=> b!140711 (= e!91726 (getValueByKey!177 (t!6295 lt!73278) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140709 () Bool)

(assert (=> b!140709 (= e!91725 (Some!182 (_2!1322 (h!2322 lt!73278))))))

(declare-fun b!140712 () Bool)

(assert (=> b!140712 (= e!91726 None!181)))

(declare-fun d!43911 () Bool)

(declare-fun c!26391 () Bool)

(assert (=> d!43911 (= c!26391 (and ((_ is Cons!1715) lt!73278) (= (_1!1322 (h!2322 lt!73278)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43911 (= (getValueByKey!177 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91725)))

(assert (= (and d!43911 c!26391) b!140709))

(assert (= (and d!43911 (not c!26391)) b!140710))

(assert (= (and b!140710 c!26392) b!140711))

(assert (= (and b!140710 (not c!26392)) b!140712))

(declare-fun m!168271 () Bool)

(assert (=> b!140711 m!168271))

(assert (=> d!43575 d!43911))

(declare-fun d!43913 () Bool)

(assert (=> d!43913 (= (getValueByKey!177 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73795 () Unit!4387)

(assert (=> d!43913 (= lt!73795 (choose!873 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91727 () Bool)

(assert (=> d!43913 e!91727))

(declare-fun res!67232 () Bool)

(assert (=> d!43913 (=> (not res!67232) (not e!91727))))

(assert (=> d!43913 (= res!67232 (isStrictlySorted!312 lt!73278))))

(assert (=> d!43913 (= (lemmaContainsTupThenGetReturnValue!91 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73795)))

(declare-fun b!140713 () Bool)

(declare-fun res!67233 () Bool)

(assert (=> b!140713 (=> (not res!67233) (not e!91727))))

(assert (=> b!140713 (= res!67233 (containsKey!180 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140714 () Bool)

(assert (=> b!140714 (= e!91727 (contains!907 lt!73278 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43913 res!67232) b!140713))

(assert (= (and b!140713 res!67233) b!140714))

(assert (=> d!43913 m!167067))

(declare-fun m!168273 () Bool)

(assert (=> d!43913 m!168273))

(declare-fun m!168275 () Bool)

(assert (=> d!43913 m!168275))

(declare-fun m!168277 () Bool)

(assert (=> b!140713 m!168277))

(declare-fun m!168279 () Bool)

(assert (=> b!140714 m!168279))

(assert (=> d!43575 d!43913))

(declare-fun bm!15614 () Bool)

(declare-fun call!15619 () List!1719)

(declare-fun call!15618 () List!1719)

(assert (=> bm!15614 (= call!15619 call!15618)))

(declare-fun b!140716 () Bool)

(declare-fun e!91729 () List!1719)

(declare-fun e!91731 () List!1719)

(assert (=> b!140716 (= e!91729 e!91731)))

(declare-fun c!26396 () Bool)

(assert (=> b!140716 (= c!26396 (and ((_ is Cons!1715) (toList!858 call!15471)) (= (_1!1322 (h!2322 (toList!858 call!15471))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140717 () Bool)

(declare-fun res!67235 () Bool)

(declare-fun e!91728 () Bool)

(assert (=> b!140717 (=> (not res!67235) (not e!91728))))

(declare-fun lt!73796 () List!1719)

(assert (=> b!140717 (= res!67235 (containsKey!180 lt!73796 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26394 () Bool)

(declare-fun b!140718 () Bool)

(assert (=> b!140718 (= c!26394 (and ((_ is Cons!1715) (toList!858 call!15471)) (bvsgt (_1!1322 (h!2322 (toList!858 call!15471))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91730 () List!1719)

(assert (=> b!140718 (= e!91731 e!91730)))

(declare-fun bm!15615 () Bool)

(declare-fun call!15617 () List!1719)

(assert (=> bm!15615 (= call!15618 call!15617)))

(declare-fun b!140719 () Bool)

(assert (=> b!140719 (= e!91731 call!15618)))

(declare-fun b!140720 () Bool)

(assert (=> b!140720 (= e!91729 call!15617)))

(declare-fun b!140721 () Bool)

(assert (=> b!140721 (= e!91728 (contains!907 lt!73796 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140715 () Bool)

(declare-fun e!91732 () List!1719)

(assert (=> b!140715 (= e!91732 (ite c!26396 (t!6295 (toList!858 call!15471)) (ite c!26394 (Cons!1715 (h!2322 (toList!858 call!15471)) (t!6295 (toList!858 call!15471))) Nil!1716)))))

(declare-fun d!43915 () Bool)

(assert (=> d!43915 e!91728))

(declare-fun res!67234 () Bool)

(assert (=> d!43915 (=> (not res!67234) (not e!91728))))

(assert (=> d!43915 (= res!67234 (isStrictlySorted!312 lt!73796))))

(assert (=> d!43915 (= lt!73796 e!91729)))

(declare-fun c!26395 () Bool)

(assert (=> d!43915 (= c!26395 (and ((_ is Cons!1715) (toList!858 call!15471)) (bvslt (_1!1322 (h!2322 (toList!858 call!15471))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43915 (isStrictlySorted!312 (toList!858 call!15471))))

(assert (=> d!43915 (= (insertStrictlySorted!94 (toList!858 call!15471) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73796)))

(declare-fun b!140722 () Bool)

(assert (=> b!140722 (= e!91730 call!15619)))

(declare-fun b!140723 () Bool)

(assert (=> b!140723 (= e!91730 call!15619)))

(declare-fun bm!15616 () Bool)

(assert (=> bm!15616 (= call!15617 ($colon$colon!93 e!91732 (ite c!26395 (h!2322 (toList!858 call!15471)) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26393 () Bool)

(assert (=> bm!15616 (= c!26393 c!26395)))

(declare-fun b!140724 () Bool)

(assert (=> b!140724 (= e!91732 (insertStrictlySorted!94 (t!6295 (toList!858 call!15471)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43915 c!26395) b!140720))

(assert (= (and d!43915 (not c!26395)) b!140716))

(assert (= (and b!140716 c!26396) b!140719))

(assert (= (and b!140716 (not c!26396)) b!140718))

(assert (= (and b!140718 c!26394) b!140722))

(assert (= (and b!140718 (not c!26394)) b!140723))

(assert (= (or b!140722 b!140723) bm!15614))

(assert (= (or b!140719 bm!15614) bm!15615))

(assert (= (or b!140720 bm!15615) bm!15616))

(assert (= (and bm!15616 c!26393) b!140724))

(assert (= (and bm!15616 (not c!26393)) b!140715))

(assert (= (and d!43915 res!67234) b!140717))

(assert (= (and b!140717 res!67235) b!140721))

(declare-fun m!168281 () Bool)

(assert (=> bm!15616 m!168281))

(declare-fun m!168283 () Bool)

(assert (=> d!43915 m!168283))

(declare-fun m!168285 () Bool)

(assert (=> d!43915 m!168285))

(declare-fun m!168287 () Bool)

(assert (=> b!140717 m!168287))

(declare-fun m!168289 () Bool)

(assert (=> b!140724 m!168289))

(declare-fun m!168291 () Bool)

(assert (=> b!140721 m!168291))

(assert (=> d!43575 d!43915))

(declare-fun b!140726 () Bool)

(declare-fun e!91733 () Option!183)

(declare-fun e!91734 () Option!183)

(assert (=> b!140726 (= e!91733 e!91734)))

(declare-fun c!26398 () Bool)

(assert (=> b!140726 (= c!26398 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73005))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!140727 () Bool)

(assert (=> b!140727 (= e!91734 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140725 () Bool)

(assert (=> b!140725 (= e!91733 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73005))))))))

(declare-fun b!140728 () Bool)

(assert (=> b!140728 (= e!91734 None!181)))

(declare-fun d!43917 () Bool)

(declare-fun c!26397 () Bool)

(assert (=> d!43917 (= c!26397 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73005))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43917 (= (getValueByKey!177 (t!6295 (toList!858 lt!73005)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91733)))

(assert (= (and d!43917 c!26397) b!140725))

(assert (= (and d!43917 (not c!26397)) b!140726))

(assert (= (and b!140726 c!26398) b!140727))

(assert (= (and b!140726 (not c!26398)) b!140728))

(assert (=> b!140727 m!166633))

(declare-fun m!168293 () Bool)

(assert (=> b!140727 m!168293))

(assert (=> b!140018 d!43917))

(declare-fun d!43919 () Bool)

(assert (=> d!43919 (= (apply!120 lt!73309 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5885 () Bool)

(assert (= bs!5885 d!43919))

(assert (=> bs!5885 m!167925))

(assert (=> bs!5885 m!167925))

(declare-fun m!168295 () Bool)

(assert (=> bs!5885 m!168295))

(assert (=> b!140041 d!43919))

(declare-fun d!43921 () Bool)

(declare-fun e!91735 () Bool)

(assert (=> d!43921 e!91735))

(declare-fun res!67236 () Bool)

(assert (=> d!43921 (=> (not res!67236) (not e!91735))))

(declare-fun lt!73799 () ListLongMap!1685)

(assert (=> d!43921 (= res!67236 (contains!904 lt!73799 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun lt!73798 () List!1719)

(assert (=> d!43921 (= lt!73799 (ListLongMap!1686 lt!73798))))

(declare-fun lt!73797 () Unit!4387)

(declare-fun lt!73800 () Unit!4387)

(assert (=> d!43921 (= lt!73797 lt!73800)))

(assert (=> d!43921 (= (getValueByKey!177 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (Some!182 (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!43921 (= lt!73800 (lemmaContainsTupThenGetReturnValue!91 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!43921 (= lt!73798 (insertStrictlySorted!94 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!43921 (= (+!173 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73799)))

(declare-fun b!140729 () Bool)

(declare-fun res!67237 () Bool)

(assert (=> b!140729 (=> (not res!67237) (not e!91735))))

(assert (=> b!140729 (= res!67237 (= (getValueByKey!177 (toList!858 lt!73799) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (Some!182 (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!140730 () Bool)

(assert (=> b!140730 (= e!91735 (contains!907 (toList!858 lt!73799) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!43921 res!67236) b!140729))

(assert (= (and b!140729 res!67237) b!140730))

(declare-fun m!168297 () Bool)

(assert (=> d!43921 m!168297))

(declare-fun m!168299 () Bool)

(assert (=> d!43921 m!168299))

(declare-fun m!168301 () Bool)

(assert (=> d!43921 m!168301))

(declare-fun m!168303 () Bool)

(assert (=> d!43921 m!168303))

(declare-fun m!168305 () Bool)

(assert (=> b!140729 m!168305))

(declare-fun m!168307 () Bool)

(assert (=> b!140730 m!168307))

(assert (=> bm!15504 d!43921))

(declare-fun d!43923 () Bool)

(assert (=> d!43923 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73202)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73202)))))

(assert (=> d!43645 d!43923))

(declare-fun b!140732 () Bool)

(declare-fun e!91736 () Option!183)

(declare-fun e!91737 () Option!183)

(assert (=> b!140732 (= e!91736 e!91737)))

(declare-fun c!26400 () Bool)

(assert (=> b!140732 (= c!26400 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73202))))))

(declare-fun b!140733 () Bool)

(assert (=> b!140733 (= e!91737 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73202))))

(declare-fun b!140731 () Bool)

(assert (=> b!140731 (= e!91736 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!140734 () Bool)

(assert (=> b!140734 (= e!91737 None!181)))

(declare-fun c!26399 () Bool)

(declare-fun d!43925 () Bool)

(assert (=> d!43925 (= c!26399 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73202)))))

(assert (=> d!43925 (= (getValueByKey!177 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73202) e!91736)))

(assert (= (and d!43925 c!26399) b!140731))

(assert (= (and d!43925 (not c!26399)) b!140732))

(assert (= (and b!140732 c!26400) b!140733))

(assert (= (and b!140732 (not c!26400)) b!140734))

(declare-fun m!168309 () Bool)

(assert (=> b!140733 m!168309))

(assert (=> d!43645 d!43925))

(declare-fun d!43927 () Bool)

(assert (=> d!43927 (= (apply!120 lt!73237 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5886 () Bool)

(assert (= bs!5886 d!43927))

(declare-fun m!168311 () Bool)

(assert (=> bs!5886 m!168311))

(assert (=> bs!5886 m!168311))

(declare-fun m!168313 () Bool)

(assert (=> bs!5886 m!168313))

(assert (=> b!139954 d!43927))

(assert (=> b!140238 d!43551))

(assert (=> b!139945 d!43693))

(assert (=> b!140152 d!43611))

(declare-fun d!43929 () Bool)

(declare-fun e!91738 () Bool)

(assert (=> d!43929 e!91738))

(declare-fun res!67238 () Bool)

(assert (=> d!43929 (=> (not res!67238) (not e!91738))))

(declare-fun lt!73803 () ListLongMap!1685)

(assert (=> d!43929 (= res!67238 (contains!904 lt!73803 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73802 () List!1719)

(assert (=> d!43929 (= lt!73803 (ListLongMap!1686 lt!73802))))

(declare-fun lt!73801 () Unit!4387)

(declare-fun lt!73804 () Unit!4387)

(assert (=> d!43929 (= lt!73801 lt!73804)))

(assert (=> d!43929 (= (getValueByKey!177 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43929 (= lt!73804 (lemmaContainsTupThenGetReturnValue!91 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43929 (= lt!73802 (insertStrictlySorted!94 (toList!858 call!15543) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43929 (= (+!173 call!15543 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73803)))

(declare-fun b!140735 () Bool)

(declare-fun res!67239 () Bool)

(assert (=> b!140735 (=> (not res!67239) (not e!91738))))

(assert (=> b!140735 (= res!67239 (= (getValueByKey!177 (toList!858 lt!73803) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140736 () Bool)

(assert (=> b!140736 (= e!91738 (contains!907 (toList!858 lt!73803) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43929 res!67238) b!140735))

(assert (= (and b!140735 res!67239) b!140736))

(declare-fun m!168315 () Bool)

(assert (=> d!43929 m!168315))

(declare-fun m!168317 () Bool)

(assert (=> d!43929 m!168317))

(declare-fun m!168319 () Bool)

(assert (=> d!43929 m!168319))

(declare-fun m!168321 () Bool)

(assert (=> d!43929 m!168321))

(declare-fun m!168323 () Bool)

(assert (=> b!140735 m!168323))

(declare-fun m!168325 () Bool)

(assert (=> b!140736 m!168325))

(assert (=> b!140152 d!43929))

(declare-fun d!43931 () Bool)

(declare-fun e!91739 () Bool)

(assert (=> d!43931 e!91739))

(declare-fun res!67240 () Bool)

(assert (=> d!43931 (=> res!67240 e!91739)))

(declare-fun lt!73808 () Bool)

(assert (=> d!43931 (= res!67240 (not lt!73808))))

(declare-fun lt!73805 () Bool)

(assert (=> d!43931 (= lt!73808 lt!73805)))

(declare-fun lt!73807 () Unit!4387)

(declare-fun e!91740 () Unit!4387)

(assert (=> d!43931 (= lt!73807 e!91740)))

(declare-fun c!26401 () Bool)

(assert (=> d!43931 (= c!26401 lt!73805)))

(assert (=> d!43931 (= lt!73805 (containsKey!180 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))

(assert (=> d!43931 (= (contains!904 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)) lt!73450) lt!73808)))

(declare-fun b!140737 () Bool)

(declare-fun lt!73806 () Unit!4387)

(assert (=> b!140737 (= e!91740 lt!73806)))

(assert (=> b!140737 (= lt!73806 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))

(assert (=> b!140737 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))

(declare-fun b!140738 () Bool)

(declare-fun Unit!4430 () Unit!4387)

(assert (=> b!140738 (= e!91740 Unit!4430)))

(declare-fun b!140739 () Bool)

(assert (=> b!140739 (= e!91739 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450)))))

(assert (= (and d!43931 c!26401) b!140737))

(assert (= (and d!43931 (not c!26401)) b!140738))

(assert (= (and d!43931 (not res!67240)) b!140739))

(declare-fun m!168327 () Bool)

(assert (=> d!43931 m!168327))

(declare-fun m!168329 () Bool)

(assert (=> b!140737 m!168329))

(declare-fun m!168331 () Bool)

(assert (=> b!140737 m!168331))

(assert (=> b!140737 m!168331))

(declare-fun m!168333 () Bool)

(assert (=> b!140737 m!168333))

(assert (=> b!140739 m!168331))

(assert (=> b!140739 m!168331))

(assert (=> b!140739 m!168333))

(assert (=> b!140152 d!43931))

(declare-fun d!43933 () Bool)

(declare-fun e!91741 () Bool)

(assert (=> d!43933 e!91741))

(declare-fun res!67241 () Bool)

(assert (=> d!43933 (=> (not res!67241) (not e!91741))))

(declare-fun lt!73811 () ListLongMap!1685)

(assert (=> d!43933 (= res!67241 (contains!904 lt!73811 (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun lt!73810 () List!1719)

(assert (=> d!43933 (= lt!73811 (ListLongMap!1686 lt!73810))))

(declare-fun lt!73809 () Unit!4387)

(declare-fun lt!73812 () Unit!4387)

(assert (=> d!43933 (= lt!73809 lt!73812)))

(assert (=> d!43933 (= (getValueByKey!177 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449))) (Some!182 (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))

(assert (=> d!43933 (= lt!73812 (lemmaContainsTupThenGetReturnValue!91 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))

(assert (=> d!43933 (= lt!73810 (insertStrictlySorted!94 (toList!858 lt!73447) (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))

(assert (=> d!43933 (= (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)) lt!73811)))

(declare-fun b!140740 () Bool)

(declare-fun res!67242 () Bool)

(assert (=> b!140740 (=> (not res!67242) (not e!91741))))

(assert (=> b!140740 (= res!67242 (= (getValueByKey!177 (toList!858 lt!73811) (_1!1322 (tuple2!2623 lt!73445 lt!73449))) (Some!182 (_2!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(declare-fun b!140741 () Bool)

(assert (=> b!140741 (= e!91741 (contains!907 (toList!858 lt!73811) (tuple2!2623 lt!73445 lt!73449)))))

(assert (= (and d!43933 res!67241) b!140740))

(assert (= (and b!140740 res!67242) b!140741))

(declare-fun m!168335 () Bool)

(assert (=> d!43933 m!168335))

(declare-fun m!168337 () Bool)

(assert (=> d!43933 m!168337))

(declare-fun m!168339 () Bool)

(assert (=> d!43933 m!168339))

(declare-fun m!168341 () Bool)

(assert (=> d!43933 m!168341))

(declare-fun m!168343 () Bool)

(assert (=> b!140740 m!168343))

(declare-fun m!168345 () Bool)

(assert (=> b!140741 m!168345))

(assert (=> b!140152 d!43933))

(declare-fun d!43935 () Bool)

(assert (=> d!43935 (not (contains!904 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)) lt!73450))))

(declare-fun lt!73815 () Unit!4387)

(declare-fun choose!874 (ListLongMap!1685 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4387)

(assert (=> d!43935 (= lt!73815 (choose!874 lt!73447 lt!73445 lt!73449 lt!73450))))

(declare-fun e!91744 () Bool)

(assert (=> d!43935 e!91744))

(declare-fun res!67245 () Bool)

(assert (=> d!43935 (=> (not res!67245) (not e!91744))))

(assert (=> d!43935 (= res!67245 (not (contains!904 lt!73447 lt!73450)))))

(assert (=> d!43935 (= (addStillNotContains!66 lt!73447 lt!73445 lt!73449 lt!73450) lt!73815)))

(declare-fun b!140745 () Bool)

(assert (=> b!140745 (= e!91744 (not (= lt!73445 lt!73450)))))

(assert (= (and d!43935 res!67245) b!140745))

(assert (=> d!43935 m!167291))

(assert (=> d!43935 m!167291))

(assert (=> d!43935 m!167293))

(declare-fun m!168347 () Bool)

(assert (=> d!43935 m!168347))

(declare-fun m!168349 () Bool)

(assert (=> d!43935 m!168349))

(assert (=> b!140152 d!43935))

(assert (=> d!43599 d!43595))

(assert (=> d!43599 d!43597))

(declare-fun d!43937 () Bool)

(assert (=> d!43937 (isDefined!129 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!43937 true))

(declare-fun _$12!412 () Unit!4387)

(assert (=> d!43937 (= (choose!864 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) _$12!412)))

(declare-fun bs!5887 () Bool)

(assert (= bs!5887 d!43937))

(assert (=> bs!5887 m!166633))

(assert (=> bs!5887 m!166753))

(assert (=> bs!5887 m!166753))

(assert (=> bs!5887 m!166755))

(assert (=> d!43599 d!43937))

(declare-fun d!43939 () Bool)

(declare-fun res!67250 () Bool)

(declare-fun e!91749 () Bool)

(assert (=> d!43939 (=> res!67250 e!91749)))

(assert (=> d!43939 (= res!67250 (or ((_ is Nil!1716) (toList!858 lt!73005)) ((_ is Nil!1716) (t!6295 (toList!858 lt!73005)))))))

(assert (=> d!43939 (= (isStrictlySorted!312 (toList!858 lt!73005)) e!91749)))

(declare-fun b!140750 () Bool)

(declare-fun e!91750 () Bool)

(assert (=> b!140750 (= e!91749 e!91750)))

(declare-fun res!67251 () Bool)

(assert (=> b!140750 (=> (not res!67251) (not e!91750))))

(assert (=> b!140750 (= res!67251 (bvslt (_1!1322 (h!2322 (toList!858 lt!73005))) (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005))))))))

(declare-fun b!140751 () Bool)

(assert (=> b!140751 (= e!91750 (isStrictlySorted!312 (t!6295 (toList!858 lt!73005))))))

(assert (= (and d!43939 (not res!67250)) b!140750))

(assert (= (and b!140750 res!67251) b!140751))

(declare-fun m!168351 () Bool)

(assert (=> b!140751 m!168351))

(assert (=> d!43599 d!43939))

(declare-fun d!43941 () Bool)

(declare-fun e!91751 () Bool)

(assert (=> d!43941 e!91751))

(declare-fun res!67252 () Bool)

(assert (=> d!43941 (=> res!67252 e!91751)))

(declare-fun lt!73819 () Bool)

(assert (=> d!43941 (= res!67252 (not lt!73819))))

(declare-fun lt!73816 () Bool)

(assert (=> d!43941 (= lt!73819 lt!73816)))

(declare-fun lt!73818 () Unit!4387)

(declare-fun e!91752 () Unit!4387)

(assert (=> d!43941 (= lt!73818 e!91752)))

(declare-fun c!26402 () Bool)

(assert (=> d!43941 (= c!26402 lt!73816)))

(assert (=> d!43941 (= lt!73816 (containsKey!180 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!43941 (= (contains!904 lt!73470 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73819)))

(declare-fun b!140752 () Bool)

(declare-fun lt!73817 () Unit!4387)

(assert (=> b!140752 (= e!91752 lt!73817)))

(assert (=> b!140752 (= lt!73817 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> b!140752 (isDefined!129 (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140753 () Bool)

(declare-fun Unit!4431 () Unit!4387)

(assert (=> b!140753 (= e!91752 Unit!4431)))

(declare-fun b!140754 () Bool)

(assert (=> b!140754 (= e!91751 (isDefined!129 (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!43941 c!26402) b!140752))

(assert (= (and d!43941 (not c!26402)) b!140753))

(assert (= (and d!43941 (not res!67252)) b!140754))

(declare-fun m!168353 () Bool)

(assert (=> d!43941 m!168353))

(declare-fun m!168355 () Bool)

(assert (=> b!140752 m!168355))

(assert (=> b!140752 m!167383))

(assert (=> b!140752 m!167383))

(declare-fun m!168357 () Bool)

(assert (=> b!140752 m!168357))

(assert (=> b!140754 m!167383))

(assert (=> b!140754 m!167383))

(assert (=> b!140754 m!168357))

(assert (=> d!43653 d!43941))

(declare-fun b!140756 () Bool)

(declare-fun e!91753 () Option!183)

(declare-fun e!91754 () Option!183)

(assert (=> b!140756 (= e!91753 e!91754)))

(declare-fun c!26404 () Bool)

(assert (=> b!140756 (= c!26404 (and ((_ is Cons!1715) lt!73469) (not (= (_1!1322 (h!2322 lt!73469)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140757 () Bool)

(assert (=> b!140757 (= e!91754 (getValueByKey!177 (t!6295 lt!73469) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140755 () Bool)

(assert (=> b!140755 (= e!91753 (Some!182 (_2!1322 (h!2322 lt!73469))))))

(declare-fun b!140758 () Bool)

(assert (=> b!140758 (= e!91754 None!181)))

(declare-fun d!43943 () Bool)

(declare-fun c!26403 () Bool)

(assert (=> d!43943 (= c!26403 (and ((_ is Cons!1715) lt!73469) (= (_1!1322 (h!2322 lt!73469)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43943 (= (getValueByKey!177 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91753)))

(assert (= (and d!43943 c!26403) b!140755))

(assert (= (and d!43943 (not c!26403)) b!140756))

(assert (= (and b!140756 c!26404) b!140757))

(assert (= (and b!140756 (not c!26404)) b!140758))

(declare-fun m!168359 () Bool)

(assert (=> b!140757 m!168359))

(assert (=> d!43653 d!43943))

(declare-fun d!43945 () Bool)

(assert (=> d!43945 (= (getValueByKey!177 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73820 () Unit!4387)

(assert (=> d!43945 (= lt!73820 (choose!873 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!91755 () Bool)

(assert (=> d!43945 e!91755))

(declare-fun res!67253 () Bool)

(assert (=> d!43945 (=> (not res!67253) (not e!91755))))

(assert (=> d!43945 (= res!67253 (isStrictlySorted!312 lt!73469))))

(assert (=> d!43945 (= (lemmaContainsTupThenGetReturnValue!91 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73820)))

(declare-fun b!140759 () Bool)

(declare-fun res!67254 () Bool)

(assert (=> b!140759 (=> (not res!67254) (not e!91755))))

(assert (=> b!140759 (= res!67254 (containsKey!180 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140760 () Bool)

(assert (=> b!140760 (= e!91755 (contains!907 lt!73469 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!43945 res!67253) b!140759))

(assert (= (and b!140759 res!67254) b!140760))

(assert (=> d!43945 m!167377))

(declare-fun m!168361 () Bool)

(assert (=> d!43945 m!168361))

(declare-fun m!168363 () Bool)

(assert (=> d!43945 m!168363))

(declare-fun m!168365 () Bool)

(assert (=> b!140759 m!168365))

(declare-fun m!168367 () Bool)

(assert (=> b!140760 m!168367))

(assert (=> d!43653 d!43945))

(declare-fun bm!15617 () Bool)

(declare-fun call!15622 () List!1719)

(declare-fun call!15621 () List!1719)

(assert (=> bm!15617 (= call!15622 call!15621)))

(declare-fun b!140762 () Bool)

(declare-fun e!91757 () List!1719)

(declare-fun e!91759 () List!1719)

(assert (=> b!140762 (= e!91757 e!91759)))

(declare-fun c!26408 () Bool)

(assert (=> b!140762 (= c!26408 (and ((_ is Cons!1715) (toList!858 lt!73203)) (= (_1!1322 (h!2322 (toList!858 lt!73203))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140763 () Bool)

(declare-fun res!67256 () Bool)

(declare-fun e!91756 () Bool)

(assert (=> b!140763 (=> (not res!67256) (not e!91756))))

(declare-fun lt!73821 () List!1719)

(assert (=> b!140763 (= res!67256 (containsKey!180 lt!73821 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140764 () Bool)

(declare-fun c!26406 () Bool)

(assert (=> b!140764 (= c!26406 (and ((_ is Cons!1715) (toList!858 lt!73203)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73203))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91758 () List!1719)

(assert (=> b!140764 (= e!91759 e!91758)))

(declare-fun bm!15618 () Bool)

(declare-fun call!15620 () List!1719)

(assert (=> bm!15618 (= call!15621 call!15620)))

(declare-fun b!140765 () Bool)

(assert (=> b!140765 (= e!91759 call!15621)))

(declare-fun b!140766 () Bool)

(assert (=> b!140766 (= e!91757 call!15620)))

(declare-fun b!140767 () Bool)

(assert (=> b!140767 (= e!91756 (contains!907 lt!73821 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140761 () Bool)

(declare-fun e!91760 () List!1719)

(assert (=> b!140761 (= e!91760 (ite c!26408 (t!6295 (toList!858 lt!73203)) (ite c!26406 (Cons!1715 (h!2322 (toList!858 lt!73203)) (t!6295 (toList!858 lt!73203))) Nil!1716)))))

(declare-fun d!43947 () Bool)

(assert (=> d!43947 e!91756))

(declare-fun res!67255 () Bool)

(assert (=> d!43947 (=> (not res!67255) (not e!91756))))

(assert (=> d!43947 (= res!67255 (isStrictlySorted!312 lt!73821))))

(assert (=> d!43947 (= lt!73821 e!91757)))

(declare-fun c!26407 () Bool)

(assert (=> d!43947 (= c!26407 (and ((_ is Cons!1715) (toList!858 lt!73203)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73203))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43947 (isStrictlySorted!312 (toList!858 lt!73203))))

(assert (=> d!43947 (= (insertStrictlySorted!94 (toList!858 lt!73203) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73821)))

(declare-fun b!140768 () Bool)

(assert (=> b!140768 (= e!91758 call!15622)))

(declare-fun b!140769 () Bool)

(assert (=> b!140769 (= e!91758 call!15622)))

(declare-fun bm!15619 () Bool)

(assert (=> bm!15619 (= call!15620 ($colon$colon!93 e!91760 (ite c!26407 (h!2322 (toList!858 lt!73203)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26405 () Bool)

(assert (=> bm!15619 (= c!26405 c!26407)))

(declare-fun b!140770 () Bool)

(assert (=> b!140770 (= e!91760 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73203)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!43947 c!26407) b!140766))

(assert (= (and d!43947 (not c!26407)) b!140762))

(assert (= (and b!140762 c!26408) b!140765))

(assert (= (and b!140762 (not c!26408)) b!140764))

(assert (= (and b!140764 c!26406) b!140768))

(assert (= (and b!140764 (not c!26406)) b!140769))

(assert (= (or b!140768 b!140769) bm!15617))

(assert (= (or b!140765 bm!15617) bm!15618))

(assert (= (or b!140766 bm!15618) bm!15619))

(assert (= (and bm!15619 c!26405) b!140770))

(assert (= (and bm!15619 (not c!26405)) b!140761))

(assert (= (and d!43947 res!67255) b!140763))

(assert (= (and b!140763 res!67256) b!140767))

(declare-fun m!168369 () Bool)

(assert (=> bm!15619 m!168369))

(declare-fun m!168371 () Bool)

(assert (=> d!43947 m!168371))

(declare-fun m!168373 () Bool)

(assert (=> d!43947 m!168373))

(declare-fun m!168375 () Bool)

(assert (=> b!140763 m!168375))

(declare-fun m!168377 () Bool)

(assert (=> b!140770 m!168377))

(declare-fun m!168379 () Bool)

(assert (=> b!140767 m!168379))

(assert (=> d!43653 d!43947))

(declare-fun d!43949 () Bool)

(declare-fun e!91761 () Bool)

(assert (=> d!43949 e!91761))

(declare-fun res!67257 () Bool)

(assert (=> d!43949 (=> res!67257 e!91761)))

(declare-fun lt!73825 () Bool)

(assert (=> d!43949 (= res!67257 (not lt!73825))))

(declare-fun lt!73822 () Bool)

(assert (=> d!43949 (= lt!73825 lt!73822)))

(declare-fun lt!73824 () Unit!4387)

(declare-fun e!91762 () Unit!4387)

(assert (=> d!43949 (= lt!73824 e!91762)))

(declare-fun c!26409 () Bool)

(assert (=> d!43949 (= c!26409 lt!73822)))

(assert (=> d!43949 (= lt!73822 (containsKey!180 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43949 (= (contains!904 lt!73215 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73825)))

(declare-fun b!140771 () Bool)

(declare-fun lt!73823 () Unit!4387)

(assert (=> b!140771 (= e!91762 lt!73823)))

(assert (=> b!140771 (= lt!73823 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140771 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140772 () Bool)

(declare-fun Unit!4432 () Unit!4387)

(assert (=> b!140772 (= e!91762 Unit!4432)))

(declare-fun b!140773 () Bool)

(assert (=> b!140773 (= e!91761 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43949 c!26409) b!140771))

(assert (= (and d!43949 (not c!26409)) b!140772))

(assert (= (and d!43949 (not res!67257)) b!140773))

(declare-fun m!168381 () Bool)

(assert (=> d!43949 m!168381))

(declare-fun m!168383 () Bool)

(assert (=> b!140771 m!168383))

(assert (=> b!140771 m!167831))

(assert (=> b!140771 m!167831))

(declare-fun m!168385 () Bool)

(assert (=> b!140771 m!168385))

(assert (=> b!140773 m!167831))

(assert (=> b!140773 m!167831))

(assert (=> b!140773 m!168385))

(assert (=> bm!15507 d!43949))

(declare-fun d!43951 () Bool)

(assert (=> d!43951 (= (apply!120 lt!73446 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1535 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5888 () Bool)

(assert (= bs!5888 d!43951))

(assert (=> bs!5888 m!166833))

(declare-fun m!168387 () Bool)

(assert (=> bs!5888 m!168387))

(assert (=> bs!5888 m!168387))

(declare-fun m!168389 () Bool)

(assert (=> bs!5888 m!168389))

(assert (=> b!140155 d!43951))

(assert (=> b!140155 d!43611))

(declare-fun b!140774 () Bool)

(declare-fun e!91763 () (_ BitVec 32))

(assert (=> b!140774 (= e!91763 #b00000000000000000000000000000000)))

(declare-fun b!140776 () Bool)

(declare-fun e!91764 () (_ BitVec 32))

(declare-fun call!15623 () (_ BitVec 32))

(assert (=> b!140776 (= e!91764 (bvadd #b00000000000000000000000000000001 call!15623))))

(declare-fun d!43953 () Bool)

(declare-fun lt!73826 () (_ BitVec 32))

(assert (=> d!43953 (and (bvsge lt!73826 #b00000000000000000000000000000000) (bvsle lt!73826 (bvsub (size!2578 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (=> d!43953 (= lt!73826 e!91763)))

(declare-fun c!26410 () Bool)

(assert (=> d!43953 (= c!26410 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!43953 (and (bvsle #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 (_2!1323 lt!73124))) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!43953 (= (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))) lt!73826)))

(declare-fun b!140775 () Bool)

(assert (=> b!140775 (= e!91763 e!91764)))

(declare-fun c!26411 () Bool)

(assert (=> b!140775 (= c!26411 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun bm!15620 () Bool)

(assert (=> bm!15620 (= call!15623 (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun b!140777 () Bool)

(assert (=> b!140777 (= e!91764 call!15623)))

(assert (= (and d!43953 c!26410) b!140774))

(assert (= (and d!43953 (not c!26410)) b!140775))

(assert (= (and b!140775 c!26411) b!140776))

(assert (= (and b!140775 (not c!26411)) b!140777))

(assert (= (or b!140776 b!140777) bm!15620))

(declare-fun m!168391 () Bool)

(assert (=> b!140775 m!168391))

(assert (=> b!140775 m!168391))

(declare-fun m!168393 () Bool)

(assert (=> b!140775 m!168393))

(declare-fun m!168395 () Bool)

(assert (=> bm!15620 m!168395))

(assert (=> b!139977 d!43953))

(declare-fun d!43955 () Bool)

(assert (=> d!43955 (= (inRange!0 (ite c!26256 (index!3255 lt!73489) (index!3258 lt!73489)) (mask!7279 newMap!16)) (and (bvsge (ite c!26256 (index!3255 lt!73489) (index!3258 lt!73489)) #b00000000000000000000000000000000) (bvslt (ite c!26256 (index!3255 lt!73489) (index!3258 lt!73489)) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15549 d!43955))

(declare-fun b!140779 () Bool)

(declare-fun e!91765 () Option!183)

(declare-fun e!91766 () Option!183)

(assert (=> b!140779 (= e!91765 e!91766)))

(declare-fun c!26413 () Bool)

(assert (=> b!140779 (= c!26413 (and ((_ is Cons!1715) (toList!858 lt!73470)) (not (= (_1!1322 (h!2322 (toList!858 lt!73470))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140780 () Bool)

(assert (=> b!140780 (= e!91766 (getValueByKey!177 (t!6295 (toList!858 lt!73470)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140778 () Bool)

(assert (=> b!140778 (= e!91765 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73470)))))))

(declare-fun b!140781 () Bool)

(assert (=> b!140781 (= e!91766 None!181)))

(declare-fun c!26412 () Bool)

(declare-fun d!43957 () Bool)

(assert (=> d!43957 (= c!26412 (and ((_ is Cons!1715) (toList!858 lt!73470)) (= (_1!1322 (h!2322 (toList!858 lt!73470))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!43957 (= (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91765)))

(assert (= (and d!43957 c!26412) b!140778))

(assert (= (and d!43957 (not c!26412)) b!140779))

(assert (= (and b!140779 c!26413) b!140780))

(assert (= (and b!140779 (not c!26413)) b!140781))

(declare-fun m!168397 () Bool)

(assert (=> b!140780 m!168397))

(assert (=> b!140174 d!43957))

(assert (=> b!140199 d!43693))

(declare-fun d!43959 () Bool)

(declare-fun lt!73827 () Bool)

(assert (=> d!43959 (= lt!73827 (select (content!139 (toList!858 lt!73290)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91767 () Bool)

(assert (=> d!43959 (= lt!73827 e!91767)))

(declare-fun res!67258 () Bool)

(assert (=> d!43959 (=> (not res!67258) (not e!91767))))

(assert (=> d!43959 (= res!67258 ((_ is Cons!1715) (toList!858 lt!73290)))))

(assert (=> d!43959 (= (contains!907 (toList!858 lt!73290) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73827)))

(declare-fun b!140782 () Bool)

(declare-fun e!91768 () Bool)

(assert (=> b!140782 (= e!91767 e!91768)))

(declare-fun res!67259 () Bool)

(assert (=> b!140782 (=> res!67259 e!91768)))

(assert (=> b!140782 (= res!67259 (= (h!2322 (toList!858 lt!73290)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140783 () Bool)

(assert (=> b!140783 (= e!91768 (contains!907 (t!6295 (toList!858 lt!73290)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43959 res!67258) b!140782))

(assert (= (and b!140782 (not res!67259)) b!140783))

(declare-fun m!168399 () Bool)

(assert (=> d!43959 m!168399))

(declare-fun m!168401 () Bool)

(assert (=> d!43959 m!168401))

(declare-fun m!168403 () Bool)

(assert (=> b!140783 m!168403))

(assert (=> b!139992 d!43959))

(assert (=> d!43649 d!43643))

(declare-fun d!43961 () Bool)

(declare-fun e!91769 () Bool)

(assert (=> d!43961 e!91769))

(declare-fun res!67260 () Bool)

(assert (=> d!43961 (=> res!67260 e!91769)))

(declare-fun lt!73831 () Bool)

(assert (=> d!43961 (= res!67260 (not lt!73831))))

(declare-fun lt!73828 () Bool)

(assert (=> d!43961 (= lt!73831 lt!73828)))

(declare-fun lt!73830 () Unit!4387)

(declare-fun e!91770 () Unit!4387)

(assert (=> d!43961 (= lt!73830 e!91770)))

(declare-fun c!26414 () Bool)

(assert (=> d!43961 (= c!26414 lt!73828)))

(assert (=> d!43961 (= lt!73828 (containsKey!180 (toList!858 lt!73187) lt!73185))))

(assert (=> d!43961 (= (contains!904 lt!73187 lt!73185) lt!73831)))

(declare-fun b!140784 () Bool)

(declare-fun lt!73829 () Unit!4387)

(assert (=> b!140784 (= e!91770 lt!73829)))

(assert (=> b!140784 (= lt!73829 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73187) lt!73185))))

(assert (=> b!140784 (isDefined!129 (getValueByKey!177 (toList!858 lt!73187) lt!73185))))

(declare-fun b!140785 () Bool)

(declare-fun Unit!4433 () Unit!4387)

(assert (=> b!140785 (= e!91770 Unit!4433)))

(declare-fun b!140786 () Bool)

(assert (=> b!140786 (= e!91769 (isDefined!129 (getValueByKey!177 (toList!858 lt!73187) lt!73185)))))

(assert (= (and d!43961 c!26414) b!140784))

(assert (= (and d!43961 (not c!26414)) b!140785))

(assert (= (and d!43961 (not res!67260)) b!140786))

(declare-fun m!168405 () Bool)

(assert (=> d!43961 m!168405))

(declare-fun m!168407 () Bool)

(assert (=> b!140784 m!168407))

(assert (=> b!140784 m!167323))

(assert (=> b!140784 m!167323))

(declare-fun m!168409 () Bool)

(assert (=> b!140784 m!168409))

(assert (=> b!140786 m!167323))

(assert (=> b!140786 m!167323))

(assert (=> b!140786 m!168409))

(assert (=> d!43649 d!43961))

(declare-fun d!43963 () Bool)

(assert (=> d!43963 (= (apply!120 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73185) (apply!120 lt!73187 lt!73185))))

(assert (=> d!43963 true))

(declare-fun _$34!1004 () Unit!4387)

(assert (=> d!43963 (= (choose!867 lt!73187 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73185) _$34!1004)))

(declare-fun bs!5889 () Bool)

(assert (= bs!5889 d!43963))

(assert (=> bs!5889 m!166847))

(assert (=> bs!5889 m!166847))

(assert (=> bs!5889 m!166869))

(assert (=> bs!5889 m!166867))

(assert (=> d!43649 d!43963))

(assert (=> d!43649 d!43647))

(assert (=> d!43649 d!43635))

(declare-fun lt!73832 () Bool)

(declare-fun d!43965 () Bool)

(assert (=> d!43965 (= lt!73832 (select (content!139 (toList!858 lt!73425)) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91771 () Bool)

(assert (=> d!43965 (= lt!73832 e!91771)))

(declare-fun res!67261 () Bool)

(assert (=> d!43965 (=> (not res!67261) (not e!91771))))

(assert (=> d!43965 (= res!67261 ((_ is Cons!1715) (toList!858 lt!73425)))))

(assert (=> d!43965 (= (contains!907 (toList!858 lt!73425) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73832)))

(declare-fun b!140787 () Bool)

(declare-fun e!91772 () Bool)

(assert (=> b!140787 (= e!91771 e!91772)))

(declare-fun res!67262 () Bool)

(assert (=> b!140787 (=> res!67262 e!91772)))

(assert (=> b!140787 (= res!67262 (= (h!2322 (toList!858 lt!73425)) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140788 () Bool)

(assert (=> b!140788 (= e!91772 (contains!907 (t!6295 (toList!858 lt!73425)) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!43965 res!67261) b!140787))

(assert (= (and b!140787 (not res!67262)) b!140788))

(declare-fun m!168411 () Bool)

(assert (=> d!43965 m!168411))

(declare-fun m!168413 () Bool)

(assert (=> d!43965 m!168413))

(declare-fun m!168415 () Bool)

(assert (=> b!140788 m!168415))

(assert (=> b!140123 d!43965))

(declare-fun bm!15621 () Bool)

(declare-fun call!15624 () Bool)

(assert (=> bm!15621 (= call!15624 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!140789 () Bool)

(declare-fun e!91775 () Bool)

(declare-fun e!91774 () Bool)

(assert (=> b!140789 (= e!91775 e!91774)))

(declare-fun c!26415 () Bool)

(assert (=> b!140789 (= c!26415 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140790 () Bool)

(declare-fun e!91773 () Bool)

(assert (=> b!140790 (= e!91774 e!91773)))

(declare-fun lt!73835 () (_ BitVec 64))

(assert (=> b!140790 (= lt!73835 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!73833 () Unit!4387)

(assert (=> b!140790 (= lt!73833 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 #b00000000000000000000000000000000))))

(assert (=> b!140790 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 #b00000000000000000000000000000000)))

(declare-fun lt!73834 () Unit!4387)

(assert (=> b!140790 (= lt!73834 lt!73833)))

(declare-fun res!67263 () Bool)

(assert (=> b!140790 (= res!67263 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))) (Found!273 #b00000000000000000000000000000000)))))

(assert (=> b!140790 (=> (not res!67263) (not e!91773))))

(declare-fun d!43967 () Bool)

(declare-fun res!67264 () Bool)

(assert (=> d!43967 (=> res!67264 e!91775)))

(assert (=> d!43967 (= res!67264 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!43967 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))) e!91775)))

(declare-fun b!140791 () Bool)

(assert (=> b!140791 (= e!91774 call!15624)))

(declare-fun b!140792 () Bool)

(assert (=> b!140792 (= e!91773 call!15624)))

(assert (= (and d!43967 (not res!67264)) b!140789))

(assert (= (and b!140789 c!26415) b!140790))

(assert (= (and b!140789 (not c!26415)) b!140791))

(assert (= (and b!140790 res!67263) b!140792))

(assert (= (or b!140792 b!140791) bm!15621))

(declare-fun m!168417 () Bool)

(assert (=> bm!15621 m!168417))

(assert (=> b!140789 m!167903))

(assert (=> b!140789 m!167903))

(assert (=> b!140789 m!167905))

(assert (=> b!140790 m!167903))

(declare-fun m!168419 () Bool)

(assert (=> b!140790 m!168419))

(declare-fun m!168421 () Bool)

(assert (=> b!140790 m!168421))

(assert (=> b!140790 m!167903))

(declare-fun m!168423 () Bool)

(assert (=> b!140790 m!168423))

(assert (=> b!140188 d!43967))

(declare-fun d!43969 () Bool)

(assert (=> d!43969 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140111 d!43969))

(declare-fun lt!73836 () Bool)

(declare-fun d!43971 () Bool)

(assert (=> d!43971 (= lt!73836 (select (content!139 (toList!858 lt!73279)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!91776 () Bool)

(assert (=> d!43971 (= lt!73836 e!91776)))

(declare-fun res!67265 () Bool)

(assert (=> d!43971 (=> (not res!67265) (not e!91776))))

(assert (=> d!43971 (= res!67265 ((_ is Cons!1715) (toList!858 lt!73279)))))

(assert (=> d!43971 (= (contains!907 (toList!858 lt!73279) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73836)))

(declare-fun b!140793 () Bool)

(declare-fun e!91777 () Bool)

(assert (=> b!140793 (= e!91776 e!91777)))

(declare-fun res!67266 () Bool)

(assert (=> b!140793 (=> res!67266 e!91777)))

(assert (=> b!140793 (= res!67266 (= (h!2322 (toList!858 lt!73279)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140794 () Bool)

(assert (=> b!140794 (= e!91777 (contains!907 (t!6295 (toList!858 lt!73279)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43971 res!67265) b!140793))

(assert (= (and b!140793 (not res!67266)) b!140794))

(declare-fun m!168425 () Bool)

(assert (=> d!43971 m!168425))

(declare-fun m!168427 () Bool)

(assert (=> d!43971 m!168427))

(declare-fun m!168429 () Bool)

(assert (=> b!140794 m!168429))

(assert (=> b!139981 d!43971))

(declare-fun d!43973 () Bool)

(assert (=> d!43973 (isDefined!129 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun lt!73837 () Unit!4387)

(assert (=> d!43973 (= lt!73837 (choose!864 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!91778 () Bool)

(assert (=> d!43973 e!91778))

(declare-fun res!67267 () Bool)

(assert (=> d!43973 (=> (not res!67267) (not e!91778))))

(assert (=> d!43973 (= res!67267 (isStrictlySorted!312 (toList!858 e!91171)))))

(assert (=> d!43973 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!73837)))

(declare-fun b!140795 () Bool)

(assert (=> b!140795 (= e!91778 (containsKey!180 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43973 res!67267) b!140795))

(assert (=> d!43973 m!166633))

(assert (=> d!43973 m!167087))

(assert (=> d!43973 m!167087))

(assert (=> d!43973 m!167089))

(assert (=> d!43973 m!166633))

(declare-fun m!168431 () Bool)

(assert (=> d!43973 m!168431))

(declare-fun m!168433 () Bool)

(assert (=> d!43973 m!168433))

(assert (=> b!140795 m!166633))

(assert (=> b!140795 m!167083))

(assert (=> b!139988 d!43973))

(declare-fun d!43975 () Bool)

(assert (=> d!43975 (= (isDefined!129 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not (isEmpty!423 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun bs!5890 () Bool)

(assert (= bs!5890 d!43975))

(assert (=> bs!5890 m!167087))

(declare-fun m!168435 () Bool)

(assert (=> bs!5890 m!168435))

(assert (=> b!139988 d!43975))

(declare-fun b!140797 () Bool)

(declare-fun e!91779 () Option!183)

(declare-fun e!91780 () Option!183)

(assert (=> b!140797 (= e!91779 e!91780)))

(declare-fun c!26417 () Bool)

(assert (=> b!140797 (= c!26417 (and ((_ is Cons!1715) (toList!858 e!91171)) (not (= (_1!1322 (h!2322 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!140798 () Bool)

(assert (=> b!140798 (= e!91780 (getValueByKey!177 (t!6295 (toList!858 e!91171)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!140796 () Bool)

(assert (=> b!140796 (= e!91779 (Some!182 (_2!1322 (h!2322 (toList!858 e!91171)))))))

(declare-fun b!140799 () Bool)

(assert (=> b!140799 (= e!91780 None!181)))

(declare-fun d!43977 () Bool)

(declare-fun c!26416 () Bool)

(assert (=> d!43977 (= c!26416 (and ((_ is Cons!1715) (toList!858 e!91171)) (= (_1!1322 (h!2322 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!43977 (= (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91779)))

(assert (= (and d!43977 c!26416) b!140796))

(assert (= (and d!43977 (not c!26416)) b!140797))

(assert (= (and b!140797 c!26417) b!140798))

(assert (= (and b!140797 (not c!26417)) b!140799))

(assert (=> b!140798 m!166633))

(declare-fun m!168437 () Bool)

(assert (=> b!140798 m!168437))

(assert (=> b!139988 d!43977))

(assert (=> b!140226 d!43693))

(assert (=> b!140178 d!43701))

(assert (=> b!140178 d!43703))

(declare-fun bm!15622 () Bool)

(declare-fun call!15625 () Bool)

(assert (=> bm!15622 (= call!15625 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!140800 () Bool)

(declare-fun e!91783 () Bool)

(declare-fun e!91782 () Bool)

(assert (=> b!140800 (= e!91783 e!91782)))

(declare-fun c!26418 () Bool)

(assert (=> b!140800 (= c!26418 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140801 () Bool)

(declare-fun e!91781 () Bool)

(assert (=> b!140801 (= e!91782 e!91781)))

(declare-fun lt!73840 () (_ BitVec 64))

(assert (=> b!140801 (= lt!73840 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!73838 () Unit!4387)

(assert (=> b!140801 (= lt!73838 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 newMap!16) lt!73840 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!140801 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73840 #b00000000000000000000000000000000)))

(declare-fun lt!73839 () Unit!4387)

(assert (=> b!140801 (= lt!73839 lt!73838)))

(declare-fun res!67268 () Bool)

(assert (=> b!140801 (= res!67268 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4698 newMap!16) (mask!7279 newMap!16)) (Found!273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!140801 (=> (not res!67268) (not e!91781))))

(declare-fun d!43979 () Bool)

(declare-fun res!67269 () Bool)

(assert (=> d!43979 (=> res!67269 e!91783)))

(assert (=> d!43979 (= res!67269 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!43979 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 newMap!16) (mask!7279 newMap!16)) e!91783)))

(declare-fun b!140802 () Bool)

(assert (=> b!140802 (= e!91782 call!15625)))

(declare-fun b!140803 () Bool)

(assert (=> b!140803 (= e!91781 call!15625)))

(assert (= (and d!43979 (not res!67269)) b!140800))

(assert (= (and b!140800 c!26418) b!140801))

(assert (= (and b!140800 (not c!26418)) b!140802))

(assert (= (and b!140801 res!67268) b!140803))

(assert (= (or b!140803 b!140802) bm!15622))

(declare-fun m!168439 () Bool)

(assert (=> bm!15622 m!168439))

(assert (=> b!140800 m!168135))

(assert (=> b!140800 m!168135))

(assert (=> b!140800 m!168139))

(assert (=> b!140801 m!168135))

(declare-fun m!168441 () Bool)

(assert (=> b!140801 m!168441))

(declare-fun m!168443 () Bool)

(assert (=> b!140801 m!168443))

(assert (=> b!140801 m!168135))

(declare-fun m!168445 () Bool)

(assert (=> b!140801 m!168445))

(assert (=> bm!15517 d!43979))

(assert (=> b!140233 d!43709))

(assert (=> b!140233 d!43711))

(declare-fun d!43981 () Bool)

(assert (=> d!43981 (= (get!1535 (getValueByKey!177 (toList!858 lt!73203) lt!73202)) (v!3285 (getValueByKey!177 (toList!858 lt!73203) lt!73202)))))

(assert (=> d!43627 d!43981))

(declare-fun b!140805 () Bool)

(declare-fun e!91784 () Option!183)

(declare-fun e!91785 () Option!183)

(assert (=> b!140805 (= e!91784 e!91785)))

(declare-fun c!26420 () Bool)

(assert (=> b!140805 (= c!26420 (and ((_ is Cons!1715) (toList!858 lt!73203)) (not (= (_1!1322 (h!2322 (toList!858 lt!73203))) lt!73202))))))

(declare-fun b!140806 () Bool)

(assert (=> b!140806 (= e!91785 (getValueByKey!177 (t!6295 (toList!858 lt!73203)) lt!73202))))

(declare-fun b!140804 () Bool)

(assert (=> b!140804 (= e!91784 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73203)))))))

(declare-fun b!140807 () Bool)

(assert (=> b!140807 (= e!91785 None!181)))

(declare-fun d!43983 () Bool)

(declare-fun c!26419 () Bool)

(assert (=> d!43983 (= c!26419 (and ((_ is Cons!1715) (toList!858 lt!73203)) (= (_1!1322 (h!2322 (toList!858 lt!73203))) lt!73202)))))

(assert (=> d!43983 (= (getValueByKey!177 (toList!858 lt!73203) lt!73202) e!91784)))

(assert (= (and d!43983 c!26419) b!140804))

(assert (= (and d!43983 (not c!26419)) b!140805))

(assert (= (and b!140805 c!26420) b!140806))

(assert (= (and b!140805 (not c!26420)) b!140807))

(declare-fun m!168447 () Bool)

(assert (=> b!140806 m!168447))

(assert (=> d!43627 d!43983))

(declare-fun d!43985 () Bool)

(assert (=> d!43985 (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))

(declare-fun lt!73843 () Unit!4387)

(declare-fun choose!875 (array!4879 array!4881 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4387)

(assert (=> d!43985 (= lt!73843 (choose!875 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!43985 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43985 (= (lemmaArrayContainsKeyThenInListMap!45 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73843)))

(declare-fun bs!5891 () Bool)

(assert (= bs!5891 d!43985))

(assert (=> bs!5891 m!166773))

(assert (=> bs!5891 m!166773))

(assert (=> bs!5891 m!166633))

(assert (=> bs!5891 m!167183))

(assert (=> bs!5891 m!166633))

(declare-fun m!168449 () Bool)

(assert (=> bs!5891 m!168449))

(assert (=> bs!5891 m!166907))

(assert (=> b!140091 d!43985))

(assert (=> b!140091 d!43855))

(assert (=> b!140091 d!43565))

(declare-fun b!140820 () Bool)

(declare-fun e!91794 () SeekEntryResult!273)

(assert (=> b!140820 (= e!91794 (MissingVacant!273 (index!3257 lt!73212)))))

(declare-fun b!140821 () Bool)

(assert (=> b!140821 (= e!91794 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (nextIndex!0 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16)) (index!3257 lt!73212) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!140822 () Bool)

(declare-fun e!91792 () SeekEntryResult!273)

(assert (=> b!140822 (= e!91792 Undefined!273)))

(declare-fun b!140823 () Bool)

(declare-fun e!91793 () SeekEntryResult!273)

(assert (=> b!140823 (= e!91793 (Found!273 (index!3257 lt!73212)))))

(declare-fun lt!73848 () SeekEntryResult!273)

(declare-fun d!43987 () Bool)

(assert (=> d!43987 (and (or ((_ is Undefined!273) lt!73848) (not ((_ is Found!273) lt!73848)) (and (bvsge (index!3256 lt!73848) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73848) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73848) ((_ is Found!273) lt!73848) (not ((_ is MissingVacant!273) lt!73848)) (not (= (index!3258 lt!73848) (index!3257 lt!73212))) (and (bvsge (index!3258 lt!73848) #b00000000000000000000000000000000) (bvslt (index!3258 lt!73848) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!73848) (ite ((_ is Found!273) lt!73848) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73848)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (and ((_ is MissingVacant!273) lt!73848) (= (index!3258 lt!73848) (index!3257 lt!73212)) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!73848)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!43987 (= lt!73848 e!91792)))

(declare-fun c!26427 () Bool)

(assert (=> d!43987 (= c!26427 (bvsge (x!16130 lt!73212) #b01111111111111111111111111111110))))

(declare-fun lt!73849 () (_ BitVec 64))

(assert (=> d!43987 (= lt!73849 (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73212)))))

(assert (=> d!43987 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!43987 (= (seekKeyOrZeroReturnVacant!0 (x!16130 lt!73212) (index!3257 lt!73212) (index!3257 lt!73212) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!73848)))

(declare-fun b!140824 () Bool)

(declare-fun c!26428 () Bool)

(assert (=> b!140824 (= c!26428 (= lt!73849 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140824 (= e!91793 e!91794)))

(declare-fun b!140825 () Bool)

(assert (=> b!140825 (= e!91792 e!91793)))

(declare-fun c!26429 () Bool)

(assert (=> b!140825 (= c!26429 (= lt!73849 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!43987 c!26427) b!140822))

(assert (= (and d!43987 (not c!26427)) b!140825))

(assert (= (and b!140825 c!26429) b!140823))

(assert (= (and b!140825 (not c!26429)) b!140824))

(assert (= (and b!140824 c!26428) b!140820))

(assert (= (and b!140824 (not c!26428)) b!140821))

(declare-fun m!168451 () Bool)

(assert (=> b!140821 m!168451))

(assert (=> b!140821 m!168451))

(assert (=> b!140821 m!166633))

(declare-fun m!168453 () Bool)

(assert (=> b!140821 m!168453))

(declare-fun m!168455 () Bool)

(assert (=> d!43987 m!168455))

(declare-fun m!168457 () Bool)

(assert (=> d!43987 m!168457))

(assert (=> d!43987 m!166901))

(assert (=> d!43987 m!166907))

(assert (=> b!139925 d!43987))

(assert (=> b!140035 d!43693))

(declare-fun d!43989 () Bool)

(assert (=> d!43989 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73185)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73185)))))

(assert (=> d!43643 d!43989))

(declare-fun b!140827 () Bool)

(declare-fun e!91795 () Option!183)

(declare-fun e!91796 () Option!183)

(assert (=> b!140827 (= e!91795 e!91796)))

(declare-fun c!26431 () Bool)

(assert (=> b!140827 (= c!26431 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73185))))))

(declare-fun b!140828 () Bool)

(assert (=> b!140828 (= e!91796 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73185))))

(declare-fun b!140826 () Bool)

(assert (=> b!140826 (= e!91795 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!140829 () Bool)

(assert (=> b!140829 (= e!91796 None!181)))

(declare-fun d!43991 () Bool)

(declare-fun c!26430 () Bool)

(assert (=> d!43991 (= c!26430 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73185)))))

(assert (=> d!43991 (= (getValueByKey!177 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73185) e!91795)))

(assert (= (and d!43991 c!26430) b!140826))

(assert (= (and d!43991 (not c!26430)) b!140827))

(assert (= (and b!140827 c!26431) b!140828))

(assert (= (and b!140827 (not c!26431)) b!140829))

(declare-fun m!168459 () Bool)

(assert (=> b!140828 m!168459))

(assert (=> d!43643 d!43991))

(declare-fun d!43993 () Bool)

(declare-fun e!91797 () Bool)

(assert (=> d!43993 e!91797))

(declare-fun res!67270 () Bool)

(assert (=> d!43993 (=> (not res!67270) (not e!91797))))

(declare-fun lt!73852 () ListLongMap!1685)

(assert (=> d!43993 (= res!67270 (contains!904 lt!73852 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!73851 () List!1719)

(assert (=> d!43993 (= lt!73852 (ListLongMap!1686 lt!73851))))

(declare-fun lt!73850 () Unit!4387)

(declare-fun lt!73853 () Unit!4387)

(assert (=> d!43993 (= lt!73850 lt!73853)))

(assert (=> d!43993 (= (getValueByKey!177 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43993 (= lt!73853 (lemmaContainsTupThenGetReturnValue!91 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43993 (= lt!73851 (insertStrictlySorted!94 (toList!858 call!15525) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43993 (= (+!173 call!15525 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!73852)))

(declare-fun b!140830 () Bool)

(declare-fun res!67271 () Bool)

(assert (=> b!140830 (=> (not res!67271) (not e!91797))))

(assert (=> b!140830 (= res!67271 (= (getValueByKey!177 (toList!858 lt!73852) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!140831 () Bool)

(assert (=> b!140831 (= e!91797 (contains!907 (toList!858 lt!73852) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!43993 res!67270) b!140830))

(assert (= (and b!140830 res!67271) b!140831))

(declare-fun m!168461 () Bool)

(assert (=> d!43993 m!168461))

(declare-fun m!168463 () Bool)

(assert (=> d!43993 m!168463))

(declare-fun m!168465 () Bool)

(assert (=> d!43993 m!168465))

(declare-fun m!168467 () Bool)

(assert (=> d!43993 m!168467))

(declare-fun m!168469 () Bool)

(assert (=> b!140830 m!168469))

(declare-fun m!168471 () Bool)

(assert (=> b!140831 m!168471))

(assert (=> b!140052 d!43993))

(declare-fun b!140832 () Bool)

(declare-fun e!91800 () Bool)

(assert (=> b!140832 (= e!91800 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!140833 () Bool)

(declare-fun e!91806 () Bool)

(declare-fun lt!73855 () ListLongMap!1685)

(assert (=> b!140833 (= e!91806 (= (apply!120 lt!73855 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 (_2!1323 lt!73124))))))

(declare-fun b!140834 () Bool)

(declare-fun c!26436 () Bool)

(assert (=> b!140834 (= c!26436 (and (not (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91808 () ListLongMap!1685)

(declare-fun e!91798 () ListLongMap!1685)

(assert (=> b!140834 (= e!91808 e!91798)))

(declare-fun bm!15623 () Bool)

(declare-fun call!15626 () Bool)

(assert (=> bm!15623 (= call!15626 (contains!904 lt!73855 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140835 () Bool)

(declare-fun e!91807 () Bool)

(declare-fun e!91805 () Bool)

(assert (=> b!140835 (= e!91807 e!91805)))

(declare-fun c!26433 () Bool)

(assert (=> b!140835 (= c!26433 (not (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140836 () Bool)

(declare-fun e!91799 () Bool)

(declare-fun e!91801 () Bool)

(assert (=> b!140836 (= e!91799 e!91801)))

(declare-fun res!67280 () Bool)

(assert (=> b!140836 (=> (not res!67280) (not e!91801))))

(assert (=> b!140836 (= res!67280 (contains!904 lt!73855 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (=> b!140836 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun b!140837 () Bool)

(declare-fun res!67274 () Bool)

(assert (=> b!140837 (=> (not res!67274) (not e!91807))))

(declare-fun e!91804 () Bool)

(assert (=> b!140837 (= res!67274 e!91804)))

(declare-fun c!26437 () Bool)

(assert (=> b!140837 (= c!26437 (not (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140838 () Bool)

(declare-fun e!91809 () Bool)

(assert (=> b!140838 (= e!91809 (= (apply!120 lt!73855 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 (_2!1323 lt!73124))))))

(declare-fun b!140839 () Bool)

(declare-fun call!15632 () Bool)

(assert (=> b!140839 (= e!91805 (not call!15632))))

(declare-fun b!140840 () Bool)

(assert (=> b!140840 (= e!91801 (= (apply!120 lt!73855 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140840 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 (_2!1323 lt!73124)))))))

(assert (=> b!140840 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun bm!15624 () Bool)

(declare-fun call!15629 () ListLongMap!1685)

(declare-fun call!15627 () ListLongMap!1685)

(assert (=> bm!15624 (= call!15629 call!15627)))

(declare-fun b!140841 () Bool)

(declare-fun res!67278 () Bool)

(assert (=> b!140841 (=> (not res!67278) (not e!91807))))

(assert (=> b!140841 (= res!67278 e!91799)))

(declare-fun res!67277 () Bool)

(assert (=> b!140841 (=> res!67277 e!91799)))

(assert (=> b!140841 (= res!67277 (not e!91800))))

(declare-fun res!67273 () Bool)

(assert (=> b!140841 (=> (not res!67273) (not e!91800))))

(assert (=> b!140841 (= res!67273 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun bm!15625 () Bool)

(declare-fun call!15628 () ListLongMap!1685)

(assert (=> bm!15625 (= call!15627 call!15628)))

(declare-fun b!140842 () Bool)

(declare-fun e!91802 () Unit!4387)

(declare-fun lt!73872 () Unit!4387)

(assert (=> b!140842 (= e!91802 lt!73872)))

(declare-fun lt!73859 () ListLongMap!1685)

(assert (=> b!140842 (= lt!73859 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun lt!73861 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73861 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73865 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73865 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))

(declare-fun lt!73875 () Unit!4387)

(assert (=> b!140842 (= lt!73875 (addStillContains!96 lt!73859 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)) lt!73865))))

(assert (=> b!140842 (contains!904 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))) lt!73865)))

(declare-fun lt!73864 () Unit!4387)

(assert (=> b!140842 (= lt!73864 lt!73875)))

(declare-fun lt!73871 () ListLongMap!1685)

(assert (=> b!140842 (= lt!73871 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun lt!73860 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73860 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73866 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73866 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))

(declare-fun lt!73869 () Unit!4387)

(assert (=> b!140842 (= lt!73869 (addApplyDifferent!96 lt!73871 lt!73860 (minValue!2789 (_2!1323 lt!73124)) lt!73866))))

(assert (=> b!140842 (= (apply!120 (+!173 lt!73871 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))) lt!73866) (apply!120 lt!73871 lt!73866))))

(declare-fun lt!73854 () Unit!4387)

(assert (=> b!140842 (= lt!73854 lt!73869)))

(declare-fun lt!73858 () ListLongMap!1685)

(assert (=> b!140842 (= lt!73858 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun lt!73868 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73868 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73856 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73856 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))

(declare-fun lt!73867 () Unit!4387)

(assert (=> b!140842 (= lt!73867 (addApplyDifferent!96 lt!73858 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)) lt!73856))))

(assert (=> b!140842 (= (apply!120 (+!173 lt!73858 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))) lt!73856) (apply!120 lt!73858 lt!73856))))

(declare-fun lt!73857 () Unit!4387)

(assert (=> b!140842 (= lt!73857 lt!73867)))

(declare-fun lt!73874 () ListLongMap!1685)

(assert (=> b!140842 (= lt!73874 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun lt!73870 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73870 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73873 () (_ BitVec 64))

(assert (=> b!140842 (= lt!73873 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))

(assert (=> b!140842 (= lt!73872 (addApplyDifferent!96 lt!73874 lt!73870 (minValue!2789 (_2!1323 lt!73124)) lt!73873))))

(assert (=> b!140842 (= (apply!120 (+!173 lt!73874 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))) lt!73873) (apply!120 lt!73874 lt!73873))))

(declare-fun bm!15626 () Bool)

(declare-fun call!15630 () ListLongMap!1685)

(declare-fun c!26434 () Bool)

(declare-fun c!26435 () Bool)

(assert (=> bm!15626 (= call!15630 (+!173 (ite c!26434 call!15628 (ite c!26435 call!15627 call!15629)) (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))

(declare-fun d!43995 () Bool)

(assert (=> d!43995 e!91807))

(declare-fun res!67272 () Bool)

(assert (=> d!43995 (=> (not res!67272) (not e!91807))))

(assert (=> d!43995 (= res!67272 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))))

(declare-fun lt!73862 () ListLongMap!1685)

(assert (=> d!43995 (= lt!73855 lt!73862)))

(declare-fun lt!73863 () Unit!4387)

(assert (=> d!43995 (= lt!73863 e!91802)))

(declare-fun c!26432 () Bool)

(declare-fun e!91803 () Bool)

(assert (=> d!43995 (= c!26432 e!91803)))

(declare-fun res!67275 () Bool)

(assert (=> d!43995 (=> (not res!67275) (not e!91803))))

(assert (=> d!43995 (= res!67275 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun e!91810 () ListLongMap!1685)

(assert (=> d!43995 (= lt!73862 e!91810)))

(assert (=> d!43995 (= c!26434 (and (not (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43995 (validMask!0 (mask!7279 (_2!1323 lt!73124)))))

(assert (=> d!43995 (= (getCurrentListMap!531 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))) lt!73855)))

(declare-fun b!140843 () Bool)

(assert (=> b!140843 (= e!91798 call!15629)))

(declare-fun b!140844 () Bool)

(declare-fun Unit!4434 () Unit!4387)

(assert (=> b!140844 (= e!91802 Unit!4434)))

(declare-fun b!140845 () Bool)

(assert (=> b!140845 (= e!91805 e!91806)))

(declare-fun res!67276 () Bool)

(assert (=> b!140845 (= res!67276 call!15632)))

(assert (=> b!140845 (=> (not res!67276) (not e!91806))))

(declare-fun b!140846 () Bool)

(assert (=> b!140846 (= e!91804 e!91809)))

(declare-fun res!67279 () Bool)

(assert (=> b!140846 (= res!67279 call!15626)))

(assert (=> b!140846 (=> (not res!67279) (not e!91809))))

(declare-fun b!140847 () Bool)

(declare-fun call!15631 () ListLongMap!1685)

(assert (=> b!140847 (= e!91798 call!15631)))

(declare-fun b!140848 () Bool)

(assert (=> b!140848 (= e!91808 call!15631)))

(declare-fun b!140849 () Bool)

(assert (=> b!140849 (= e!91810 (+!173 call!15630 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))

(declare-fun bm!15627 () Bool)

(assert (=> bm!15627 (= call!15628 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun b!140850 () Bool)

(assert (=> b!140850 (= e!91803 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!140851 () Bool)

(assert (=> b!140851 (= e!91810 e!91808)))

(assert (=> b!140851 (= c!26435 (and (not (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140852 () Bool)

(assert (=> b!140852 (= e!91804 (not call!15626))))

(declare-fun bm!15628 () Bool)

(assert (=> bm!15628 (= call!15631 call!15630)))

(declare-fun bm!15629 () Bool)

(assert (=> bm!15629 (= call!15632 (contains!904 lt!73855 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43995 c!26434) b!140849))

(assert (= (and d!43995 (not c!26434)) b!140851))

(assert (= (and b!140851 c!26435) b!140848))

(assert (= (and b!140851 (not c!26435)) b!140834))

(assert (= (and b!140834 c!26436) b!140847))

(assert (= (and b!140834 (not c!26436)) b!140843))

(assert (= (or b!140847 b!140843) bm!15624))

(assert (= (or b!140848 bm!15624) bm!15625))

(assert (= (or b!140848 b!140847) bm!15628))

(assert (= (or b!140849 bm!15625) bm!15627))

(assert (= (or b!140849 bm!15628) bm!15626))

(assert (= (and d!43995 res!67275) b!140850))

(assert (= (and d!43995 c!26432) b!140842))

(assert (= (and d!43995 (not c!26432)) b!140844))

(assert (= (and d!43995 res!67272) b!140841))

(assert (= (and b!140841 res!67273) b!140832))

(assert (= (and b!140841 (not res!67277)) b!140836))

(assert (= (and b!140836 res!67280) b!140840))

(assert (= (and b!140841 res!67278) b!140837))

(assert (= (and b!140837 c!26437) b!140846))

(assert (= (and b!140837 (not c!26437)) b!140852))

(assert (= (and b!140846 res!67279) b!140838))

(assert (= (or b!140846 b!140852) bm!15623))

(assert (= (and b!140837 res!67274) b!140835))

(assert (= (and b!140835 c!26433) b!140845))

(assert (= (and b!140835 (not c!26433)) b!140839))

(assert (= (and b!140845 res!67276) b!140833))

(assert (= (or b!140845 b!140839) bm!15629))

(declare-fun b_lambda!6313 () Bool)

(assert (=> (not b_lambda!6313) (not b!140840)))

(declare-fun t!6313 () Bool)

(declare-fun tb!2553 () Bool)

(assert (=> (and b!139542 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 (_2!1323 lt!73124))) t!6313) tb!2553))

(declare-fun result!4191 () Bool)

(assert (=> tb!2553 (= result!4191 tp_is_empty!2929)))

(assert (=> b!140840 t!6313))

(declare-fun b_and!8809 () Bool)

(assert (= b_and!8805 (and (=> t!6313 result!4191) b_and!8809)))

(declare-fun t!6315 () Bool)

(declare-fun tb!2555 () Bool)

(assert (=> (and b!139556 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (_2!1323 lt!73124))) t!6315) tb!2555))

(declare-fun result!4193 () Bool)

(assert (= result!4193 result!4191))

(assert (=> b!140840 t!6315))

(declare-fun b_and!8811 () Bool)

(assert (= b_and!8807 (and (=> t!6315 result!4193) b_and!8811)))

(declare-fun m!168473 () Bool)

(assert (=> b!140842 m!168473))

(declare-fun m!168475 () Bool)

(assert (=> b!140842 m!168475))

(declare-fun m!168477 () Bool)

(assert (=> b!140842 m!168477))

(declare-fun m!168479 () Bool)

(assert (=> b!140842 m!168479))

(declare-fun m!168481 () Bool)

(assert (=> b!140842 m!168481))

(assert (=> b!140842 m!168391))

(assert (=> b!140842 m!168473))

(declare-fun m!168483 () Bool)

(assert (=> b!140842 m!168483))

(declare-fun m!168485 () Bool)

(assert (=> b!140842 m!168485))

(assert (=> b!140842 m!168485))

(declare-fun m!168487 () Bool)

(assert (=> b!140842 m!168487))

(declare-fun m!168489 () Bool)

(assert (=> b!140842 m!168489))

(declare-fun m!168491 () Bool)

(assert (=> b!140842 m!168491))

(declare-fun m!168493 () Bool)

(assert (=> b!140842 m!168493))

(declare-fun m!168495 () Bool)

(assert (=> b!140842 m!168495))

(declare-fun m!168497 () Bool)

(assert (=> b!140842 m!168497))

(declare-fun m!168499 () Bool)

(assert (=> b!140842 m!168499))

(assert (=> b!140842 m!168479))

(declare-fun m!168501 () Bool)

(assert (=> b!140842 m!168501))

(assert (=> b!140842 m!168491))

(declare-fun m!168503 () Bool)

(assert (=> b!140842 m!168503))

(declare-fun m!168505 () Bool)

(assert (=> b!140849 m!168505))

(declare-fun m!168507 () Bool)

(assert (=> b!140838 m!168507))

(declare-fun m!168509 () Bool)

(assert (=> bm!15623 m!168509))

(assert (=> b!140832 m!168391))

(assert (=> b!140832 m!168391))

(assert (=> b!140832 m!168393))

(declare-fun m!168511 () Bool)

(assert (=> b!140833 m!168511))

(declare-fun m!168513 () Bool)

(assert (=> b!140840 m!168513))

(assert (=> b!140840 m!168513))

(declare-fun m!168515 () Bool)

(assert (=> b!140840 m!168515))

(declare-fun m!168517 () Bool)

(assert (=> b!140840 m!168517))

(assert (=> b!140840 m!168391))

(assert (=> b!140840 m!168391))

(declare-fun m!168519 () Bool)

(assert (=> b!140840 m!168519))

(assert (=> b!140840 m!168515))

(declare-fun m!168521 () Bool)

(assert (=> bm!15629 m!168521))

(assert (=> d!43995 m!167829))

(declare-fun m!168523 () Bool)

(assert (=> bm!15626 m!168523))

(assert (=> bm!15627 m!168481))

(assert (=> b!140836 m!168391))

(assert (=> b!140836 m!168391))

(declare-fun m!168525 () Bool)

(assert (=> b!140836 m!168525))

(assert (=> b!140850 m!168391))

(assert (=> b!140850 m!168391))

(assert (=> b!140850 m!168393))

(assert (=> d!43619 d!43995))

(assert (=> b!140033 d!43833))

(assert (=> bm!15534 d!43561))

(declare-fun d!43997 () Bool)

(declare-fun e!91811 () Bool)

(assert (=> d!43997 e!91811))

(declare-fun res!67281 () Bool)

(assert (=> d!43997 (=> res!67281 e!91811)))

(declare-fun lt!73879 () Bool)

(assert (=> d!43997 (= res!67281 (not lt!73879))))

(declare-fun lt!73876 () Bool)

(assert (=> d!43997 (= lt!73879 lt!73876)))

(declare-fun lt!73878 () Unit!4387)

(declare-fun e!91812 () Unit!4387)

(assert (=> d!43997 (= lt!73878 e!91812)))

(declare-fun c!26438 () Bool)

(assert (=> d!43997 (= c!26438 lt!73876)))

(assert (=> d!43997 (= lt!73876 (containsKey!180 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43997 (= (contains!904 lt!73268 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73879)))

(declare-fun b!140853 () Bool)

(declare-fun lt!73877 () Unit!4387)

(assert (=> b!140853 (= e!91812 lt!73877)))

(assert (=> b!140853 (= lt!73877 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140853 (isDefined!129 (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140854 () Bool)

(declare-fun Unit!4435 () Unit!4387)

(assert (=> b!140854 (= e!91812 Unit!4435)))

(declare-fun b!140855 () Bool)

(assert (=> b!140855 (= e!91811 (isDefined!129 (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43997 c!26438) b!140853))

(assert (= (and d!43997 (not c!26438)) b!140854))

(assert (= (and d!43997 (not res!67281)) b!140855))

(declare-fun m!168527 () Bool)

(assert (=> d!43997 m!168527))

(declare-fun m!168529 () Bool)

(assert (=> b!140853 m!168529))

(assert (=> b!140853 m!167035))

(assert (=> b!140853 m!167035))

(declare-fun m!168531 () Bool)

(assert (=> b!140853 m!168531))

(assert (=> b!140855 m!167035))

(assert (=> b!140855 m!167035))

(assert (=> b!140855 m!168531))

(assert (=> d!43567 d!43997))

(declare-fun b!140857 () Bool)

(declare-fun e!91813 () Option!183)

(declare-fun e!91814 () Option!183)

(assert (=> b!140857 (= e!91813 e!91814)))

(declare-fun c!26440 () Bool)

(assert (=> b!140857 (= c!26440 (and ((_ is Cons!1715) lt!73267) (not (= (_1!1322 (h!2322 lt!73267)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!140858 () Bool)

(assert (=> b!140858 (= e!91814 (getValueByKey!177 (t!6295 lt!73267) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140856 () Bool)

(assert (=> b!140856 (= e!91813 (Some!182 (_2!1322 (h!2322 lt!73267))))))

(declare-fun b!140859 () Bool)

(assert (=> b!140859 (= e!91814 None!181)))

(declare-fun c!26439 () Bool)

(declare-fun d!43999 () Bool)

(assert (=> d!43999 (= c!26439 (and ((_ is Cons!1715) lt!73267) (= (_1!1322 (h!2322 lt!73267)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43999 (= (getValueByKey!177 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91813)))

(assert (= (and d!43999 c!26439) b!140856))

(assert (= (and d!43999 (not c!26439)) b!140857))

(assert (= (and b!140857 c!26440) b!140858))

(assert (= (and b!140857 (not c!26440)) b!140859))

(declare-fun m!168533 () Bool)

(assert (=> b!140858 m!168533))

(assert (=> d!43567 d!43999))

(declare-fun d!44001 () Bool)

(assert (=> d!44001 (= (getValueByKey!177 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!182 (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73880 () Unit!4387)

(assert (=> d!44001 (= lt!73880 (choose!873 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91815 () Bool)

(assert (=> d!44001 e!91815))

(declare-fun res!67282 () Bool)

(assert (=> d!44001 (=> (not res!67282) (not e!91815))))

(assert (=> d!44001 (= res!67282 (isStrictlySorted!312 lt!73267))))

(assert (=> d!44001 (= (lemmaContainsTupThenGetReturnValue!91 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73880)))

(declare-fun b!140860 () Bool)

(declare-fun res!67283 () Bool)

(assert (=> b!140860 (=> (not res!67283) (not e!91815))))

(assert (=> b!140860 (= res!67283 (containsKey!180 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140861 () Bool)

(assert (=> b!140861 (= e!91815 (contains!907 lt!73267 (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44001 res!67282) b!140860))

(assert (= (and b!140860 res!67283) b!140861))

(assert (=> d!44001 m!167029))

(declare-fun m!168535 () Bool)

(assert (=> d!44001 m!168535))

(declare-fun m!168537 () Bool)

(assert (=> d!44001 m!168537))

(declare-fun m!168539 () Bool)

(assert (=> b!140860 m!168539))

(declare-fun m!168541 () Bool)

(assert (=> b!140861 m!168541))

(assert (=> d!43567 d!44001))

(declare-fun bm!15630 () Bool)

(declare-fun call!15635 () List!1719)

(declare-fun call!15634 () List!1719)

(assert (=> bm!15630 (= call!15635 call!15634)))

(declare-fun b!140863 () Bool)

(declare-fun e!91817 () List!1719)

(declare-fun e!91819 () List!1719)

(assert (=> b!140863 (= e!91817 e!91819)))

(declare-fun c!26444 () Bool)

(assert (=> b!140863 (= c!26444 (and ((_ is Cons!1715) (toList!858 e!91166)) (= (_1!1322 (h!2322 (toList!858 e!91166))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140864 () Bool)

(declare-fun res!67285 () Bool)

(declare-fun e!91816 () Bool)

(assert (=> b!140864 (=> (not res!67285) (not e!91816))))

(declare-fun lt!73881 () List!1719)

(assert (=> b!140864 (= res!67285 (containsKey!180 lt!73881 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140865 () Bool)

(declare-fun c!26442 () Bool)

(assert (=> b!140865 (= c!26442 (and ((_ is Cons!1715) (toList!858 e!91166)) (bvsgt (_1!1322 (h!2322 (toList!858 e!91166))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!91818 () List!1719)

(assert (=> b!140865 (= e!91819 e!91818)))

(declare-fun bm!15631 () Bool)

(declare-fun call!15633 () List!1719)

(assert (=> bm!15631 (= call!15634 call!15633)))

(declare-fun b!140866 () Bool)

(assert (=> b!140866 (= e!91819 call!15634)))

(declare-fun b!140867 () Bool)

(assert (=> b!140867 (= e!91817 call!15633)))

(declare-fun b!140868 () Bool)

(assert (=> b!140868 (= e!91816 (contains!907 lt!73881 (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140862 () Bool)

(declare-fun e!91820 () List!1719)

(assert (=> b!140862 (= e!91820 (ite c!26444 (t!6295 (toList!858 e!91166)) (ite c!26442 (Cons!1715 (h!2322 (toList!858 e!91166)) (t!6295 (toList!858 e!91166))) Nil!1716)))))

(declare-fun d!44003 () Bool)

(assert (=> d!44003 e!91816))

(declare-fun res!67284 () Bool)

(assert (=> d!44003 (=> (not res!67284) (not e!91816))))

(assert (=> d!44003 (= res!67284 (isStrictlySorted!312 lt!73881))))

(assert (=> d!44003 (= lt!73881 e!91817)))

(declare-fun c!26443 () Bool)

(assert (=> d!44003 (= c!26443 (and ((_ is Cons!1715) (toList!858 e!91166)) (bvslt (_1!1322 (h!2322 (toList!858 e!91166))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44003 (isStrictlySorted!312 (toList!858 e!91166))))

(assert (=> d!44003 (= (insertStrictlySorted!94 (toList!858 e!91166) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73881)))

(declare-fun b!140869 () Bool)

(assert (=> b!140869 (= e!91818 call!15635)))

(declare-fun b!140870 () Bool)

(assert (=> b!140870 (= e!91818 call!15635)))

(declare-fun bm!15632 () Bool)

(assert (=> bm!15632 (= call!15633 ($colon$colon!93 e!91820 (ite c!26443 (h!2322 (toList!858 e!91166)) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26441 () Bool)

(assert (=> bm!15632 (= c!26441 c!26443)))

(declare-fun b!140871 () Bool)

(assert (=> b!140871 (= e!91820 (insertStrictlySorted!94 (t!6295 (toList!858 e!91166)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44003 c!26443) b!140867))

(assert (= (and d!44003 (not c!26443)) b!140863))

(assert (= (and b!140863 c!26444) b!140866))

(assert (= (and b!140863 (not c!26444)) b!140865))

(assert (= (and b!140865 c!26442) b!140869))

(assert (= (and b!140865 (not c!26442)) b!140870))

(assert (= (or b!140869 b!140870) bm!15630))

(assert (= (or b!140866 bm!15630) bm!15631))

(assert (= (or b!140867 bm!15631) bm!15632))

(assert (= (and bm!15632 c!26441) b!140871))

(assert (= (and bm!15632 (not c!26441)) b!140862))

(assert (= (and d!44003 res!67284) b!140864))

(assert (= (and b!140864 res!67285) b!140868))

(declare-fun m!168543 () Bool)

(assert (=> bm!15632 m!168543))

(declare-fun m!168545 () Bool)

(assert (=> d!44003 m!168545))

(declare-fun m!168547 () Bool)

(assert (=> d!44003 m!168547))

(declare-fun m!168549 () Bool)

(assert (=> b!140864 m!168549))

(declare-fun m!168551 () Bool)

(assert (=> b!140871 m!168551))

(declare-fun m!168553 () Bool)

(assert (=> b!140868 m!168553))

(assert (=> d!43567 d!44003))

(declare-fun d!44005 () Bool)

(assert (=> d!44005 (= (inRange!0 (index!3256 lt!73503) (mask!7279 newMap!16)) (and (bvsge (index!3256 lt!73503) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73503) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!140247 d!44005))

(declare-fun d!44007 () Bool)

(declare-fun e!91821 () Bool)

(assert (=> d!44007 e!91821))

(declare-fun res!67286 () Bool)

(assert (=> d!44007 (=> res!67286 e!91821)))

(declare-fun lt!73885 () Bool)

(assert (=> d!44007 (= res!67286 (not lt!73885))))

(declare-fun lt!73882 () Bool)

(assert (=> d!44007 (= lt!73885 lt!73882)))

(declare-fun lt!73884 () Unit!4387)

(declare-fun e!91822 () Unit!4387)

(assert (=> d!44007 (= lt!73884 e!91822)))

(declare-fun c!26445 () Bool)

(assert (=> d!44007 (= c!26445 lt!73882)))

(assert (=> d!44007 (= lt!73882 (containsKey!180 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44007 (= (contains!904 lt!73237 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73885)))

(declare-fun b!140872 () Bool)

(declare-fun lt!73883 () Unit!4387)

(assert (=> b!140872 (= e!91822 lt!73883)))

(assert (=> b!140872 (= lt!73883 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140872 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140873 () Bool)

(declare-fun Unit!4436 () Unit!4387)

(assert (=> b!140873 (= e!91822 Unit!4436)))

(declare-fun b!140874 () Bool)

(assert (=> b!140874 (= e!91821 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44007 c!26445) b!140872))

(assert (= (and d!44007 (not c!26445)) b!140873))

(assert (= (and d!44007 (not res!67286)) b!140874))

(declare-fun m!168555 () Bool)

(assert (=> d!44007 m!168555))

(declare-fun m!168557 () Bool)

(assert (=> b!140872 m!168557))

(assert (=> b!140872 m!168311))

(assert (=> b!140872 m!168311))

(declare-fun m!168559 () Bool)

(assert (=> b!140872 m!168559))

(assert (=> b!140874 m!168311))

(assert (=> b!140874 m!168311))

(assert (=> b!140874 m!168559))

(assert (=> bm!15508 d!44007))

(assert (=> b!140007 d!43755))

(assert (=> b!140007 d!43757))

(declare-fun d!44009 () Bool)

(declare-fun lt!73886 () Bool)

(assert (=> d!44009 (= lt!73886 (select (content!138 Nil!1717) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91824 () Bool)

(assert (=> d!44009 (= lt!73886 e!91824)))

(declare-fun res!67287 () Bool)

(assert (=> d!44009 (=> (not res!67287) (not e!91824))))

(assert (=> d!44009 (= res!67287 ((_ is Cons!1716) Nil!1717))))

(assert (=> d!44009 (= (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!73886)))

(declare-fun b!140875 () Bool)

(declare-fun e!91823 () Bool)

(assert (=> b!140875 (= e!91824 e!91823)))

(declare-fun res!67288 () Bool)

(assert (=> b!140875 (=> res!67288 e!91823)))

(assert (=> b!140875 (= res!67288 (= (h!2323 Nil!1717) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140876 () Bool)

(assert (=> b!140876 (= e!91823 (contains!906 (t!6296 Nil!1717) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44009 res!67287) b!140875))

(assert (= (and b!140875 (not res!67288)) b!140876))

(assert (=> d!44009 m!167077))

(assert (=> d!44009 m!166927))

(declare-fun m!168561 () Bool)

(assert (=> d!44009 m!168561))

(assert (=> b!140876 m!166927))

(declare-fun m!168563 () Bool)

(assert (=> b!140876 m!168563))

(assert (=> b!140230 d!44009))

(declare-fun b!140877 () Bool)

(declare-fun res!67290 () Bool)

(declare-fun e!91830 () Bool)

(assert (=> b!140877 (=> (not res!67290) (not e!91830))))

(declare-fun lt!73889 () ListLongMap!1685)

(assert (=> b!140877 (= res!67290 (not (contains!904 lt!73889 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140878 () Bool)

(declare-fun e!91826 () Bool)

(assert (=> b!140878 (= e!91830 e!91826)))

(declare-fun c!26446 () Bool)

(declare-fun e!91828 () Bool)

(assert (=> b!140878 (= c!26446 e!91828)))

(declare-fun res!67291 () Bool)

(assert (=> b!140878 (=> (not res!67291) (not e!91828))))

(assert (=> b!140878 (= res!67291 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140879 () Bool)

(declare-fun e!91827 () Bool)

(assert (=> b!140879 (= e!91827 (= lt!73889 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!140880 () Bool)

(declare-fun lt!73891 () Unit!4387)

(declare-fun lt!73887 () Unit!4387)

(assert (=> b!140880 (= lt!73891 lt!73887)))

(declare-fun lt!73893 () (_ BitVec 64))

(declare-fun lt!73888 () (_ BitVec 64))

(declare-fun lt!73892 () V!3553)

(declare-fun lt!73890 () ListLongMap!1685)

(assert (=> b!140880 (not (contains!904 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892)) lt!73893))))

(assert (=> b!140880 (= lt!73887 (addStillNotContains!66 lt!73890 lt!73888 lt!73892 lt!73893))))

(assert (=> b!140880 (= lt!73893 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140880 (= lt!73892 (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140880 (= lt!73888 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15636 () ListLongMap!1685)

(assert (=> b!140880 (= lt!73890 call!15636)))

(declare-fun e!91831 () ListLongMap!1685)

(assert (=> b!140880 (= e!91831 (+!173 call!15636 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140881 () Bool)

(declare-fun e!91825 () Bool)

(assert (=> b!140881 (= e!91826 e!91825)))

(assert (=> b!140881 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67292 () Bool)

(assert (=> b!140881 (= res!67292 (contains!904 lt!73889 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140881 (=> (not res!67292) (not e!91825))))

(declare-fun d!44011 () Bool)

(assert (=> d!44011 e!91830))

(declare-fun res!67289 () Bool)

(assert (=> d!44011 (=> (not res!67289) (not e!91830))))

(assert (=> d!44011 (= res!67289 (not (contains!904 lt!73889 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91829 () ListLongMap!1685)

(assert (=> d!44011 (= lt!73889 e!91829)))

(declare-fun c!26449 () Bool)

(assert (=> d!44011 (= c!26449 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44011 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44011 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73889)))

(declare-fun bm!15633 () Bool)

(assert (=> bm!15633 (= call!15636 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!140882 () Bool)

(assert (=> b!140882 (= e!91831 call!15636)))

(declare-fun b!140883 () Bool)

(assert (=> b!140883 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!140883 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (ite c!26142 (_values!2922 newMap!16) lt!73112))))))

(assert (=> b!140883 (= e!91825 (= (apply!120 lt!73889 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140884 () Bool)

(assert (=> b!140884 (= e!91827 (isEmpty!424 lt!73889))))

(declare-fun b!140885 () Bool)

(assert (=> b!140885 (= e!91829 e!91831)))

(declare-fun c!26447 () Bool)

(assert (=> b!140885 (= c!26447 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140886 () Bool)

(assert (=> b!140886 (= e!91828 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140886 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!140887 () Bool)

(assert (=> b!140887 (= e!91826 e!91827)))

(declare-fun c!26448 () Bool)

(assert (=> b!140887 (= c!26448 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140888 () Bool)

(assert (=> b!140888 (= e!91829 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44011 c!26449) b!140888))

(assert (= (and d!44011 (not c!26449)) b!140885))

(assert (= (and b!140885 c!26447) b!140880))

(assert (= (and b!140885 (not c!26447)) b!140882))

(assert (= (or b!140880 b!140882) bm!15633))

(assert (= (and d!44011 res!67289) b!140877))

(assert (= (and b!140877 res!67290) b!140878))

(assert (= (and b!140878 res!67291) b!140886))

(assert (= (and b!140878 c!26446) b!140881))

(assert (= (and b!140878 (not c!26446)) b!140887))

(assert (= (and b!140881 res!67292) b!140883))

(assert (= (and b!140887 c!26448) b!140879))

(assert (= (and b!140887 (not c!26448)) b!140884))

(declare-fun b_lambda!6315 () Bool)

(assert (=> (not b_lambda!6315) (not b!140880)))

(assert (=> b!140880 t!6309))

(declare-fun b_and!8813 () Bool)

(assert (= b_and!8809 (and (=> t!6309 result!4187) b_and!8813)))

(assert (=> b!140880 t!6311))

(declare-fun b_and!8815 () Bool)

(assert (= b_and!8811 (and (=> t!6311 result!4189) b_and!8815)))

(declare-fun b_lambda!6317 () Bool)

(assert (=> (not b_lambda!6317) (not b!140883)))

(assert (=> b!140883 t!6309))

(declare-fun b_and!8817 () Bool)

(assert (= b_and!8813 (and (=> t!6309 result!4187) b_and!8817)))

(assert (=> b!140883 t!6311))

(declare-fun b_and!8819 () Bool)

(assert (= b_and!8815 (and (=> t!6311 result!4189) b_and!8819)))

(assert (=> b!140880 m!166927))

(declare-fun m!168565 () Bool)

(assert (=> b!140880 m!168565))

(declare-fun m!168567 () Bool)

(assert (=> b!140880 m!168567))

(assert (=> b!140880 m!166963))

(assert (=> b!140880 m!168565))

(declare-fun m!168569 () Bool)

(assert (=> b!140880 m!168569))

(assert (=> b!140880 m!167169))

(assert (=> b!140880 m!167169))

(assert (=> b!140880 m!166963))

(assert (=> b!140880 m!167171))

(declare-fun m!168571 () Bool)

(assert (=> b!140880 m!168571))

(assert (=> b!140886 m!166927))

(assert (=> b!140886 m!166927))

(assert (=> b!140886 m!166957))

(declare-fun m!168573 () Bool)

(assert (=> b!140879 m!168573))

(assert (=> b!140883 m!166927))

(assert (=> b!140883 m!166963))

(assert (=> b!140883 m!167169))

(assert (=> b!140883 m!167169))

(assert (=> b!140883 m!166963))

(assert (=> b!140883 m!167171))

(assert (=> b!140883 m!166927))

(declare-fun m!168575 () Bool)

(assert (=> b!140883 m!168575))

(declare-fun m!168577 () Bool)

(assert (=> b!140877 m!168577))

(declare-fun m!168579 () Bool)

(assert (=> d!44011 m!168579))

(assert (=> d!44011 m!166907))

(declare-fun m!168581 () Bool)

(assert (=> b!140884 m!168581))

(assert (=> b!140881 m!166927))

(assert (=> b!140881 m!166927))

(declare-fun m!168583 () Bool)

(assert (=> b!140881 m!168583))

(assert (=> b!140885 m!166927))

(assert (=> b!140885 m!166927))

(assert (=> b!140885 m!166957))

(assert (=> bm!15633 m!168573))

(assert (=> b!140045 d!44011))

(declare-fun d!44013 () Bool)

(assert (=> d!44013 (= (apply!120 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73310) (apply!120 lt!73312 lt!73310))))

(declare-fun lt!73894 () Unit!4387)

(assert (=> d!44013 (= lt!73894 (choose!867 lt!73312 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73310))))

(declare-fun e!91832 () Bool)

(assert (=> d!44013 e!91832))

(declare-fun res!67293 () Bool)

(assert (=> d!44013 (=> (not res!67293) (not e!91832))))

(assert (=> d!44013 (= res!67293 (contains!904 lt!73312 lt!73310))))

(assert (=> d!44013 (= (addApplyDifferent!96 lt!73312 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73310) lt!73894)))

(declare-fun b!140889 () Bool)

(assert (=> b!140889 (= e!91832 (not (= lt!73310 lt!73322)))))

(assert (= (and d!44013 res!67293) b!140889))

(assert (=> d!44013 m!167155))

(declare-fun m!168585 () Bool)

(assert (=> d!44013 m!168585))

(assert (=> d!44013 m!167135))

(assert (=> d!44013 m!167157))

(declare-fun m!168587 () Bool)

(assert (=> d!44013 m!168587))

(assert (=> d!44013 m!167135))

(assert (=> b!140045 d!44013))

(declare-fun d!44015 () Bool)

(assert (=> d!44015 (= (apply!120 lt!73325 lt!73320) (get!1535 (getValueByKey!177 (toList!858 lt!73325) lt!73320)))))

(declare-fun bs!5892 () Bool)

(assert (= bs!5892 d!44015))

(declare-fun m!168589 () Bool)

(assert (=> bs!5892 m!168589))

(assert (=> bs!5892 m!168589))

(declare-fun m!168591 () Bool)

(assert (=> bs!5892 m!168591))

(assert (=> b!140045 d!44015))

(declare-fun d!44017 () Bool)

(declare-fun e!91833 () Bool)

(assert (=> d!44017 e!91833))

(declare-fun res!67294 () Bool)

(assert (=> d!44017 (=> (not res!67294) (not e!91833))))

(declare-fun lt!73897 () ListLongMap!1685)

(assert (=> d!44017 (= res!67294 (contains!904 lt!73897 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun lt!73896 () List!1719)

(assert (=> d!44017 (= lt!73897 (ListLongMap!1686 lt!73896))))

(declare-fun lt!73895 () Unit!4387)

(declare-fun lt!73898 () Unit!4387)

(assert (=> d!44017 (= lt!73895 lt!73898)))

(assert (=> d!44017 (= (getValueByKey!177 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(assert (=> d!44017 (= lt!73898 (lemmaContainsTupThenGetReturnValue!91 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(assert (=> d!44017 (= lt!73896 (insertStrictlySorted!94 (toList!858 lt!73328) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(assert (=> d!44017 (= (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) lt!73897)))

(declare-fun b!140890 () Bool)

(declare-fun res!67295 () Bool)

(assert (=> b!140890 (=> (not res!67295) (not e!91833))))

(assert (=> b!140890 (= res!67295 (= (getValueByKey!177 (toList!858 lt!73897) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(declare-fun b!140891 () Bool)

(assert (=> b!140891 (= e!91833 (contains!907 (toList!858 lt!73897) (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))

(assert (= (and d!44017 res!67294) b!140890))

(assert (= (and b!140890 res!67295) b!140891))

(declare-fun m!168593 () Bool)

(assert (=> d!44017 m!168593))

(declare-fun m!168595 () Bool)

(assert (=> d!44017 m!168595))

(declare-fun m!168597 () Bool)

(assert (=> d!44017 m!168597))

(declare-fun m!168599 () Bool)

(assert (=> d!44017 m!168599))

(declare-fun m!168601 () Bool)

(assert (=> b!140890 m!168601))

(declare-fun m!168603 () Bool)

(assert (=> b!140891 m!168603))

(assert (=> b!140045 d!44017))

(declare-fun d!44019 () Bool)

(assert (=> d!44019 (contains!904 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73319)))

(declare-fun lt!73899 () Unit!4387)

(assert (=> d!44019 (= lt!73899 (choose!866 lt!73313 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73319))))

(assert (=> d!44019 (contains!904 lt!73313 lt!73319)))

(assert (=> d!44019 (= (addStillContains!96 lt!73313 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73319) lt!73899)))

(declare-fun bs!5893 () Bool)

(assert (= bs!5893 d!44019))

(assert (=> bs!5893 m!167141))

(assert (=> bs!5893 m!167141))

(assert (=> bs!5893 m!167143))

(declare-fun m!168605 () Bool)

(assert (=> bs!5893 m!168605))

(declare-fun m!168607 () Bool)

(assert (=> bs!5893 m!168607))

(assert (=> b!140045 d!44019))

(declare-fun d!44021 () Bool)

(assert (=> d!44021 (= (apply!120 lt!73312 lt!73310) (get!1535 (getValueByKey!177 (toList!858 lt!73312) lt!73310)))))

(declare-fun bs!5894 () Bool)

(assert (= bs!5894 d!44021))

(declare-fun m!168609 () Bool)

(assert (=> bs!5894 m!168609))

(assert (=> bs!5894 m!168609))

(declare-fun m!168611 () Bool)

(assert (=> bs!5894 m!168611))

(assert (=> b!140045 d!44021))

(declare-fun d!44023 () Bool)

(declare-fun e!91834 () Bool)

(assert (=> d!44023 e!91834))

(declare-fun res!67296 () Bool)

(assert (=> d!44023 (=> (not res!67296) (not e!91834))))

(declare-fun lt!73902 () ListLongMap!1685)

(assert (=> d!44023 (= res!67296 (contains!904 lt!73902 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!73901 () List!1719)

(assert (=> d!44023 (= lt!73902 (ListLongMap!1686 lt!73901))))

(declare-fun lt!73900 () Unit!4387)

(declare-fun lt!73903 () Unit!4387)

(assert (=> d!44023 (= lt!73900 lt!73903)))

(assert (=> d!44023 (= (getValueByKey!177 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44023 (= lt!73903 (lemmaContainsTupThenGetReturnValue!91 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44023 (= lt!73901 (insertStrictlySorted!94 (toList!858 lt!73313) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44023 (= (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73902)))

(declare-fun b!140892 () Bool)

(declare-fun res!67297 () Bool)

(assert (=> b!140892 (=> (not res!67297) (not e!91834))))

(assert (=> b!140892 (= res!67297 (= (getValueByKey!177 (toList!858 lt!73902) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!140893 () Bool)

(assert (=> b!140893 (= e!91834 (contains!907 (toList!858 lt!73902) (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44023 res!67296) b!140892))

(assert (= (and b!140892 res!67297) b!140893))

(declare-fun m!168613 () Bool)

(assert (=> d!44023 m!168613))

(declare-fun m!168615 () Bool)

(assert (=> d!44023 m!168615))

(declare-fun m!168617 () Bool)

(assert (=> d!44023 m!168617))

(declare-fun m!168619 () Bool)

(assert (=> d!44023 m!168619))

(declare-fun m!168621 () Bool)

(assert (=> b!140892 m!168621))

(declare-fun m!168623 () Bool)

(assert (=> b!140893 m!168623))

(assert (=> b!140045 d!44023))

(declare-fun d!44025 () Bool)

(assert (=> d!44025 (= (apply!120 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) lt!73320) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!73320)))))

(declare-fun bs!5895 () Bool)

(assert (= bs!5895 d!44025))

(declare-fun m!168625 () Bool)

(assert (=> bs!5895 m!168625))

(assert (=> bs!5895 m!168625))

(declare-fun m!168627 () Bool)

(assert (=> bs!5895 m!168627))

(assert (=> b!140045 d!44025))

(declare-fun d!44027 () Bool)

(declare-fun e!91835 () Bool)

(assert (=> d!44027 e!91835))

(declare-fun res!67298 () Bool)

(assert (=> d!44027 (=> (not res!67298) (not e!91835))))

(declare-fun lt!73906 () ListLongMap!1685)

(assert (=> d!44027 (= res!67298 (contains!904 lt!73906 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!73905 () List!1719)

(assert (=> d!44027 (= lt!73906 (ListLongMap!1686 lt!73905))))

(declare-fun lt!73904 () Unit!4387)

(declare-fun lt!73907 () Unit!4387)

(assert (=> d!44027 (= lt!73904 lt!73907)))

(assert (=> d!44027 (= (getValueByKey!177 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44027 (= lt!73907 (lemmaContainsTupThenGetReturnValue!91 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44027 (= lt!73905 (insertStrictlySorted!94 (toList!858 lt!73312) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44027 (= (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73906)))

(declare-fun b!140894 () Bool)

(declare-fun res!67299 () Bool)

(assert (=> b!140894 (=> (not res!67299) (not e!91835))))

(assert (=> b!140894 (= res!67299 (= (getValueByKey!177 (toList!858 lt!73906) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!140895 () Bool)

(assert (=> b!140895 (= e!91835 (contains!907 (toList!858 lt!73906) (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44027 res!67298) b!140894))

(assert (= (and b!140894 res!67299) b!140895))

(declare-fun m!168629 () Bool)

(assert (=> d!44027 m!168629))

(declare-fun m!168631 () Bool)

(assert (=> d!44027 m!168631))

(declare-fun m!168633 () Bool)

(assert (=> d!44027 m!168633))

(declare-fun m!168635 () Bool)

(assert (=> d!44027 m!168635))

(declare-fun m!168637 () Bool)

(assert (=> b!140894 m!168637))

(declare-fun m!168639 () Bool)

(assert (=> b!140895 m!168639))

(assert (=> b!140045 d!44027))

(declare-fun d!44029 () Bool)

(declare-fun e!91836 () Bool)

(assert (=> d!44029 e!91836))

(declare-fun res!67300 () Bool)

(assert (=> d!44029 (=> (not res!67300) (not e!91836))))

(declare-fun lt!73910 () ListLongMap!1685)

(assert (=> d!44029 (= res!67300 (contains!904 lt!73910 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun lt!73909 () List!1719)

(assert (=> d!44029 (= lt!73910 (ListLongMap!1686 lt!73909))))

(declare-fun lt!73908 () Unit!4387)

(declare-fun lt!73911 () Unit!4387)

(assert (=> d!44029 (= lt!73908 lt!73911)))

(assert (=> d!44029 (= (getValueByKey!177 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(assert (=> d!44029 (= lt!73911 (lemmaContainsTupThenGetReturnValue!91 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(assert (=> d!44029 (= lt!73909 (insertStrictlySorted!94 (toList!858 lt!73325) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(assert (=> d!44029 (= (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) lt!73910)))

(declare-fun b!140896 () Bool)

(declare-fun res!67301 () Bool)

(assert (=> b!140896 (=> (not res!67301) (not e!91836))))

(assert (=> b!140896 (= res!67301 (= (getValueByKey!177 (toList!858 lt!73910) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(declare-fun b!140897 () Bool)

(assert (=> b!140897 (= e!91836 (contains!907 (toList!858 lt!73910) (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))

(assert (= (and d!44029 res!67300) b!140896))

(assert (= (and b!140896 res!67301) b!140897))

(declare-fun m!168641 () Bool)

(assert (=> d!44029 m!168641))

(declare-fun m!168643 () Bool)

(assert (=> d!44029 m!168643))

(declare-fun m!168645 () Bool)

(assert (=> d!44029 m!168645))

(declare-fun m!168647 () Bool)

(assert (=> d!44029 m!168647))

(declare-fun m!168649 () Bool)

(assert (=> b!140896 m!168649))

(declare-fun m!168651 () Bool)

(assert (=> b!140897 m!168651))

(assert (=> b!140045 d!44029))

(declare-fun d!44031 () Bool)

(declare-fun e!91837 () Bool)

(assert (=> d!44031 e!91837))

(declare-fun res!67302 () Bool)

(assert (=> d!44031 (=> res!67302 e!91837)))

(declare-fun lt!73915 () Bool)

(assert (=> d!44031 (= res!67302 (not lt!73915))))

(declare-fun lt!73912 () Bool)

(assert (=> d!44031 (= lt!73915 lt!73912)))

(declare-fun lt!73914 () Unit!4387)

(declare-fun e!91838 () Unit!4387)

(assert (=> d!44031 (= lt!73914 e!91838)))

(declare-fun c!26450 () Bool)

(assert (=> d!44031 (= c!26450 lt!73912)))

(assert (=> d!44031 (= lt!73912 (containsKey!180 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))

(assert (=> d!44031 (= (contains!904 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73319) lt!73915)))

(declare-fun b!140898 () Bool)

(declare-fun lt!73913 () Unit!4387)

(assert (=> b!140898 (= e!91838 lt!73913)))

(assert (=> b!140898 (= lt!73913 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))

(assert (=> b!140898 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))

(declare-fun b!140899 () Bool)

(declare-fun Unit!4437 () Unit!4387)

(assert (=> b!140899 (= e!91838 Unit!4437)))

(declare-fun b!140900 () Bool)

(assert (=> b!140900 (= e!91837 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319)))))

(assert (= (and d!44031 c!26450) b!140898))

(assert (= (and d!44031 (not c!26450)) b!140899))

(assert (= (and d!44031 (not res!67302)) b!140900))

(declare-fun m!168653 () Bool)

(assert (=> d!44031 m!168653))

(declare-fun m!168655 () Bool)

(assert (=> b!140898 m!168655))

(declare-fun m!168657 () Bool)

(assert (=> b!140898 m!168657))

(assert (=> b!140898 m!168657))

(declare-fun m!168659 () Bool)

(assert (=> b!140898 m!168659))

(assert (=> b!140900 m!168657))

(assert (=> b!140900 m!168657))

(assert (=> b!140900 m!168659))

(assert (=> b!140045 d!44031))

(declare-fun d!44033 () Bool)

(assert (=> d!44033 (= (apply!120 lt!73328 lt!73327) (get!1535 (getValueByKey!177 (toList!858 lt!73328) lt!73327)))))

(declare-fun bs!5896 () Bool)

(assert (= bs!5896 d!44033))

(declare-fun m!168661 () Bool)

(assert (=> bs!5896 m!168661))

(assert (=> bs!5896 m!168661))

(declare-fun m!168663 () Bool)

(assert (=> bs!5896 m!168663))

(assert (=> b!140045 d!44033))

(declare-fun d!44035 () Bool)

(assert (=> d!44035 (= (apply!120 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) lt!73327) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!73327)))))

(declare-fun bs!5897 () Bool)

(assert (= bs!5897 d!44035))

(declare-fun m!168665 () Bool)

(assert (=> bs!5897 m!168665))

(assert (=> bs!5897 m!168665))

(declare-fun m!168667 () Bool)

(assert (=> bs!5897 m!168667))

(assert (=> b!140045 d!44035))

(declare-fun d!44037 () Bool)

(assert (=> d!44037 (= (apply!120 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) lt!73327) (apply!120 lt!73328 lt!73327))))

(declare-fun lt!73916 () Unit!4387)

(assert (=> d!44037 (= lt!73916 (choose!867 lt!73328 lt!73324 (minValue!2789 newMap!16) lt!73327))))

(declare-fun e!91839 () Bool)

(assert (=> d!44037 e!91839))

(declare-fun res!67303 () Bool)

(assert (=> d!44037 (=> (not res!67303) (not e!91839))))

(assert (=> d!44037 (= res!67303 (contains!904 lt!73328 lt!73327))))

(assert (=> d!44037 (= (addApplyDifferent!96 lt!73328 lt!73324 (minValue!2789 newMap!16) lt!73327) lt!73916)))

(declare-fun b!140901 () Bool)

(assert (=> b!140901 (= e!91839 (not (= lt!73327 lt!73324)))))

(assert (= (and d!44037 res!67303) b!140901))

(assert (=> d!44037 m!167145))

(declare-fun m!168669 () Bool)

(assert (=> d!44037 m!168669))

(assert (=> d!44037 m!167147))

(assert (=> d!44037 m!167149))

(declare-fun m!168671 () Bool)

(assert (=> d!44037 m!168671))

(assert (=> d!44037 m!167147))

(assert (=> b!140045 d!44037))

(declare-fun d!44039 () Bool)

(assert (=> d!44039 (= (apply!120 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) lt!73320) (apply!120 lt!73325 lt!73320))))

(declare-fun lt!73917 () Unit!4387)

(assert (=> d!44039 (= lt!73917 (choose!867 lt!73325 lt!73314 (minValue!2789 newMap!16) lt!73320))))

(declare-fun e!91840 () Bool)

(assert (=> d!44039 e!91840))

(declare-fun res!67304 () Bool)

(assert (=> d!44039 (=> (not res!67304) (not e!91840))))

(assert (=> d!44039 (= res!67304 (contains!904 lt!73325 lt!73320))))

(assert (=> d!44039 (= (addApplyDifferent!96 lt!73325 lt!73314 (minValue!2789 newMap!16) lt!73320) lt!73917)))

(declare-fun b!140902 () Bool)

(assert (=> b!140902 (= e!91840 (not (= lt!73320 lt!73314)))))

(assert (= (and d!44039 res!67304) b!140902))

(assert (=> d!44039 m!167151))

(declare-fun m!168673 () Bool)

(assert (=> d!44039 m!168673))

(assert (=> d!44039 m!167129))

(assert (=> d!44039 m!167131))

(declare-fun m!168675 () Bool)

(assert (=> d!44039 m!168675))

(assert (=> d!44039 m!167129))

(assert (=> b!140045 d!44039))

(declare-fun d!44041 () Bool)

(assert (=> d!44041 (= (apply!120 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73310) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73310)))))

(declare-fun bs!5898 () Bool)

(assert (= bs!5898 d!44041))

(declare-fun m!168677 () Bool)

(assert (=> bs!5898 m!168677))

(assert (=> bs!5898 m!168677))

(declare-fun m!168679 () Bool)

(assert (=> bs!5898 m!168679))

(assert (=> b!140045 d!44041))

(assert (=> d!43601 d!43697))

(declare-fun d!44043 () Bool)

(declare-fun res!67305 () Bool)

(declare-fun e!91841 () Bool)

(assert (=> d!44043 (=> res!67305 e!91841)))

(assert (=> d!44043 (= res!67305 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194)))))

(assert (=> d!44043 (= (containsKey!180 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194) e!91841)))

(declare-fun b!140903 () Bool)

(declare-fun e!91842 () Bool)

(assert (=> b!140903 (= e!91841 e!91842)))

(declare-fun res!67306 () Bool)

(assert (=> b!140903 (=> (not res!67306) (not e!91842))))

(assert (=> b!140903 (= res!67306 (and (or (not ((_ is Cons!1715) (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (bvsle (_1!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194)) ((_ is Cons!1715) (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (bvslt (_1!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194)))))

(declare-fun b!140904 () Bool)

(assert (=> b!140904 (= e!91842 (containsKey!180 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73194))))

(assert (= (and d!44043 (not res!67305)) b!140903))

(assert (= (and b!140903 res!67306) b!140904))

(declare-fun m!168681 () Bool)

(assert (=> b!140904 m!168681))

(assert (=> d!43631 d!44043))

(declare-fun d!44045 () Bool)

(assert (=> d!44045 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73195)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73195)))))

(assert (=> d!43633 d!44045))

(declare-fun b!140906 () Bool)

(declare-fun e!91843 () Option!183)

(declare-fun e!91844 () Option!183)

(assert (=> b!140906 (= e!91843 e!91844)))

(declare-fun c!26452 () Bool)

(assert (=> b!140906 (= c!26452 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73195))))))

(declare-fun b!140907 () Bool)

(assert (=> b!140907 (= e!91844 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73195))))

(declare-fun b!140905 () Bool)

(assert (=> b!140905 (= e!91843 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!140908 () Bool)

(assert (=> b!140908 (= e!91844 None!181)))

(declare-fun d!44047 () Bool)

(declare-fun c!26451 () Bool)

(assert (=> d!44047 (= c!26451 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73195)))))

(assert (=> d!44047 (= (getValueByKey!177 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73195) e!91843)))

(assert (= (and d!44047 c!26451) b!140905))

(assert (= (and d!44047 (not c!26451)) b!140906))

(assert (= (and b!140906 c!26452) b!140907))

(assert (= (and b!140906 (not c!26452)) b!140908))

(declare-fun m!168683 () Bool)

(assert (=> b!140907 m!168683))

(assert (=> d!43633 d!44047))

(declare-fun d!44049 () Bool)

(assert (not d!44049))

(assert (=> b!139987 d!44049))

(declare-fun d!44051 () Bool)

(declare-fun e!91845 () Bool)

(assert (=> d!44051 e!91845))

(declare-fun res!67307 () Bool)

(assert (=> d!44051 (=> res!67307 e!91845)))

(declare-fun lt!73921 () Bool)

(assert (=> d!44051 (= res!67307 (not lt!73921))))

(declare-fun lt!73918 () Bool)

(assert (=> d!44051 (= lt!73921 lt!73918)))

(declare-fun lt!73920 () Unit!4387)

(declare-fun e!91846 () Unit!4387)

(assert (=> d!44051 (= lt!73920 e!91846)))

(declare-fun c!26453 () Bool)

(assert (=> d!44051 (= c!26453 lt!73918)))

(assert (=> d!44051 (= lt!73918 (containsKey!180 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!44051 (= (contains!904 lt!73446 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73921)))

(declare-fun b!140909 () Bool)

(declare-fun lt!73919 () Unit!4387)

(assert (=> b!140909 (= e!91846 lt!73919)))

(assert (=> b!140909 (= lt!73919 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140909 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140910 () Bool)

(declare-fun Unit!4438 () Unit!4387)

(assert (=> b!140910 (= e!91846 Unit!4438)))

(declare-fun b!140911 () Bool)

(assert (=> b!140911 (= e!91845 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!44051 c!26453) b!140909))

(assert (= (and d!44051 (not c!26453)) b!140910))

(assert (= (and d!44051 (not res!67307)) b!140911))

(assert (=> d!44051 m!166833))

(declare-fun m!168685 () Bool)

(assert (=> d!44051 m!168685))

(assert (=> b!140909 m!166833))

(declare-fun m!168687 () Bool)

(assert (=> b!140909 m!168687))

(assert (=> b!140909 m!166833))

(assert (=> b!140909 m!168387))

(assert (=> b!140909 m!168387))

(declare-fun m!168689 () Bool)

(assert (=> b!140909 m!168689))

(assert (=> b!140911 m!166833))

(assert (=> b!140911 m!168387))

(assert (=> b!140911 m!168387))

(assert (=> b!140911 m!168689))

(assert (=> b!140153 d!44051))

(declare-fun d!44053 () Bool)

(declare-fun e!91847 () Bool)

(assert (=> d!44053 e!91847))

(declare-fun res!67308 () Bool)

(assert (=> d!44053 (=> res!67308 e!91847)))

(declare-fun lt!73925 () Bool)

(assert (=> d!44053 (= res!67308 (not lt!73925))))

(declare-fun lt!73922 () Bool)

(assert (=> d!44053 (= lt!73925 lt!73922)))

(declare-fun lt!73924 () Unit!4387)

(declare-fun e!91848 () Unit!4387)

(assert (=> d!44053 (= lt!73924 e!91848)))

(declare-fun c!26454 () Bool)

(assert (=> d!44053 (= c!26454 lt!73922)))

(assert (=> d!44053 (= lt!73922 (containsKey!180 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44053 (= (contains!904 lt!73446 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73925)))

(declare-fun b!140912 () Bool)

(declare-fun lt!73923 () Unit!4387)

(assert (=> b!140912 (= e!91848 lt!73923)))

(assert (=> b!140912 (= lt!73923 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140912 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140913 () Bool)

(declare-fun Unit!4439 () Unit!4387)

(assert (=> b!140913 (= e!91848 Unit!4439)))

(declare-fun b!140914 () Bool)

(assert (=> b!140914 (= e!91847 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44053 c!26454) b!140912))

(assert (= (and d!44053 (not c!26454)) b!140913))

(assert (= (and d!44053 (not res!67308)) b!140914))

(declare-fun m!168691 () Bool)

(assert (=> d!44053 m!168691))

(declare-fun m!168693 () Bool)

(assert (=> b!140912 m!168693))

(declare-fun m!168695 () Bool)

(assert (=> b!140912 m!168695))

(assert (=> b!140912 m!168695))

(declare-fun m!168697 () Bool)

(assert (=> b!140912 m!168697))

(assert (=> b!140914 m!168695))

(assert (=> b!140914 m!168695))

(assert (=> b!140914 m!168697))

(assert (=> b!140149 d!44053))

(declare-fun d!44055 () Bool)

(assert (=> d!44055 (= (content!138 Nil!1717) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!43577 d!44055))

(declare-fun d!44057 () Bool)

(declare-fun e!91849 () Bool)

(assert (=> d!44057 e!91849))

(declare-fun res!67309 () Bool)

(assert (=> d!44057 (=> res!67309 e!91849)))

(declare-fun lt!73929 () Bool)

(assert (=> d!44057 (= res!67309 (not lt!73929))))

(declare-fun lt!73926 () Bool)

(assert (=> d!44057 (= lt!73929 lt!73926)))

(declare-fun lt!73928 () Unit!4387)

(declare-fun e!91850 () Unit!4387)

(assert (=> d!44057 (= lt!73928 e!91850)))

(declare-fun c!26455 () Bool)

(assert (=> d!44057 (= c!26455 lt!73926)))

(assert (=> d!44057 (= lt!73926 (containsKey!180 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44057 (= (contains!904 lt!73275 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73929)))

(declare-fun b!140915 () Bool)

(declare-fun lt!73927 () Unit!4387)

(assert (=> b!140915 (= e!91850 lt!73927)))

(assert (=> b!140915 (= lt!73927 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> b!140915 (isDefined!129 (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140916 () Bool)

(declare-fun Unit!4440 () Unit!4387)

(assert (=> b!140916 (= e!91850 Unit!4440)))

(declare-fun b!140917 () Bool)

(assert (=> b!140917 (= e!91849 (isDefined!129 (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (= (and d!44057 c!26455) b!140915))

(assert (= (and d!44057 (not c!26455)) b!140916))

(assert (= (and d!44057 (not res!67309)) b!140917))

(declare-fun m!168699 () Bool)

(assert (=> d!44057 m!168699))

(declare-fun m!168701 () Bool)

(assert (=> b!140915 m!168701))

(assert (=> b!140915 m!167053))

(assert (=> b!140915 m!167053))

(declare-fun m!168703 () Bool)

(assert (=> b!140915 m!168703))

(assert (=> b!140917 m!167053))

(assert (=> b!140917 m!167053))

(assert (=> b!140917 m!168703))

(assert (=> d!43571 d!44057))

(declare-fun b!140919 () Bool)

(declare-fun e!91851 () Option!183)

(declare-fun e!91852 () Option!183)

(assert (=> b!140919 (= e!91851 e!91852)))

(declare-fun c!26457 () Bool)

(assert (=> b!140919 (= c!26457 (and ((_ is Cons!1715) lt!73274) (not (= (_1!1322 (h!2322 lt!73274)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!140920 () Bool)

(assert (=> b!140920 (= e!91852 (getValueByKey!177 (t!6295 lt!73274) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140918 () Bool)

(assert (=> b!140918 (= e!91851 (Some!182 (_2!1322 (h!2322 lt!73274))))))

(declare-fun b!140921 () Bool)

(assert (=> b!140921 (= e!91852 None!181)))

(declare-fun d!44059 () Bool)

(declare-fun c!26456 () Bool)

(assert (=> d!44059 (= c!26456 (and ((_ is Cons!1715) lt!73274) (= (_1!1322 (h!2322 lt!73274)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!44059 (= (getValueByKey!177 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91851)))

(assert (= (and d!44059 c!26456) b!140918))

(assert (= (and d!44059 (not c!26456)) b!140919))

(assert (= (and b!140919 c!26457) b!140920))

(assert (= (and b!140919 (not c!26457)) b!140921))

(declare-fun m!168705 () Bool)

(assert (=> b!140920 m!168705))

(assert (=> d!43571 d!44059))

(declare-fun d!44061 () Bool)

(assert (=> d!44061 (= (getValueByKey!177 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (Some!182 (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun lt!73930 () Unit!4387)

(assert (=> d!44061 (= lt!73930 (choose!873 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91853 () Bool)

(assert (=> d!44061 e!91853))

(declare-fun res!67310 () Bool)

(assert (=> d!44061 (=> (not res!67310) (not e!91853))))

(assert (=> d!44061 (= res!67310 (isStrictlySorted!312 lt!73274))))

(assert (=> d!44061 (= (lemmaContainsTupThenGetReturnValue!91 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73930)))

(declare-fun b!140922 () Bool)

(declare-fun res!67311 () Bool)

(assert (=> b!140922 (=> (not res!67311) (not e!91853))))

(assert (=> b!140922 (= res!67311 (containsKey!180 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140923 () Bool)

(assert (=> b!140923 (= e!91853 (contains!907 lt!73274 (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (= (and d!44061 res!67310) b!140922))

(assert (= (and b!140922 res!67311) b!140923))

(assert (=> d!44061 m!167047))

(declare-fun m!168707 () Bool)

(assert (=> d!44061 m!168707))

(declare-fun m!168709 () Bool)

(assert (=> d!44061 m!168709))

(declare-fun m!168711 () Bool)

(assert (=> b!140922 m!168711))

(declare-fun m!168713 () Bool)

(assert (=> b!140923 m!168713))

(assert (=> d!43571 d!44061))

(declare-fun bm!15634 () Bool)

(declare-fun call!15639 () List!1719)

(declare-fun call!15638 () List!1719)

(assert (=> bm!15634 (= call!15639 call!15638)))

(declare-fun b!140925 () Bool)

(declare-fun e!91855 () List!1719)

(declare-fun e!91857 () List!1719)

(assert (=> b!140925 (= e!91855 e!91857)))

(declare-fun c!26461 () Bool)

(assert (=> b!140925 (= c!26461 (and ((_ is Cons!1715) (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (= (_1!1322 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140926 () Bool)

(declare-fun res!67313 () Bool)

(declare-fun e!91854 () Bool)

(assert (=> b!140926 (=> (not res!67313) (not e!91854))))

(declare-fun lt!73931 () List!1719)

(assert (=> b!140926 (= res!67313 (containsKey!180 lt!73931 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140927 () Bool)

(declare-fun c!26459 () Bool)

(assert (=> b!140927 (= c!26459 (and ((_ is Cons!1715) (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (bvsgt (_1!1322 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun e!91856 () List!1719)

(assert (=> b!140927 (= e!91857 e!91856)))

(declare-fun bm!15635 () Bool)

(declare-fun call!15637 () List!1719)

(assert (=> bm!15635 (= call!15638 call!15637)))

(declare-fun b!140928 () Bool)

(assert (=> b!140928 (= e!91857 call!15638)))

(declare-fun b!140929 () Bool)

(assert (=> b!140929 (= e!91855 call!15637)))

(declare-fun b!140930 () Bool)

(assert (=> b!140930 (= e!91854 (contains!907 lt!73931 (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140924 () Bool)

(declare-fun e!91858 () List!1719)

(assert (=> b!140924 (= e!91858 (ite c!26461 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (ite c!26459 (Cons!1715 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) Nil!1716)))))

(declare-fun d!44063 () Bool)

(assert (=> d!44063 e!91854))

(declare-fun res!67312 () Bool)

(assert (=> d!44063 (=> (not res!67312) (not e!91854))))

(assert (=> d!44063 (= res!67312 (isStrictlySorted!312 lt!73931))))

(assert (=> d!44063 (= lt!73931 e!91855)))

(declare-fun c!26460 () Bool)

(assert (=> d!44063 (= c!26460 (and ((_ is Cons!1715) (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (bvslt (_1!1322 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!44063 (isStrictlySorted!312 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))))

(assert (=> d!44063 (= (insertStrictlySorted!94 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73931)))

(declare-fun b!140931 () Bool)

(assert (=> b!140931 (= e!91856 call!15639)))

(declare-fun b!140932 () Bool)

(assert (=> b!140932 (= e!91856 call!15639)))

(declare-fun bm!15636 () Bool)

(assert (=> bm!15636 (= call!15637 ($colon$colon!93 e!91858 (ite c!26460 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun c!26458 () Bool)

(assert (=> bm!15636 (= c!26458 c!26460)))

(declare-fun b!140933 () Bool)

(assert (=> b!140933 (= e!91858 (insertStrictlySorted!94 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44063 c!26460) b!140929))

(assert (= (and d!44063 (not c!26460)) b!140925))

(assert (= (and b!140925 c!26461) b!140928))

(assert (= (and b!140925 (not c!26461)) b!140927))

(assert (= (and b!140927 c!26459) b!140931))

(assert (= (and b!140927 (not c!26459)) b!140932))

(assert (= (or b!140931 b!140932) bm!15634))

(assert (= (or b!140928 bm!15634) bm!15635))

(assert (= (or b!140929 bm!15635) bm!15636))

(assert (= (and bm!15636 c!26458) b!140933))

(assert (= (and bm!15636 (not c!26458)) b!140924))

(assert (= (and d!44063 res!67312) b!140926))

(assert (= (and b!140926 res!67313) b!140930))

(declare-fun m!168715 () Bool)

(assert (=> bm!15636 m!168715))

(declare-fun m!168717 () Bool)

(assert (=> d!44063 m!168717))

(declare-fun m!168719 () Bool)

(assert (=> d!44063 m!168719))

(declare-fun m!168721 () Bool)

(assert (=> b!140926 m!168721))

(declare-fun m!168723 () Bool)

(assert (=> b!140933 m!168723))

(declare-fun m!168725 () Bool)

(assert (=> b!140930 m!168725))

(assert (=> d!43571 d!44063))

(declare-fun bm!15637 () Bool)

(declare-fun call!15640 () Bool)

(assert (=> bm!15637 (= call!15640 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))))))

(declare-fun b!140934 () Bool)

(declare-fun e!91861 () Bool)

(declare-fun e!91860 () Bool)

(assert (=> b!140934 (= e!91861 e!91860)))

(declare-fun c!26462 () Bool)

(assert (=> b!140934 (= c!26462 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!140935 () Bool)

(declare-fun e!91859 () Bool)

(assert (=> b!140935 (= e!91860 e!91859)))

(declare-fun lt!73934 () (_ BitVec 64))

(assert (=> b!140935 (= lt!73934 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))

(declare-fun lt!73932 () Unit!4387)

(assert (=> b!140935 (= lt!73932 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (_2!1323 lt!73124)) lt!73934 #b00000000000000000000000000000000))))

(assert (=> b!140935 (arrayContainsKey!0 (_keys!4698 (_2!1323 lt!73124)) lt!73934 #b00000000000000000000000000000000)))

(declare-fun lt!73933 () Unit!4387)

(assert (=> b!140935 (= lt!73933 lt!73932)))

(declare-fun res!67314 () Bool)

(assert (=> b!140935 (= res!67314 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))) (Found!273 #b00000000000000000000000000000000)))))

(assert (=> b!140935 (=> (not res!67314) (not e!91859))))

(declare-fun d!44065 () Bool)

(declare-fun res!67315 () Bool)

(assert (=> d!44065 (=> res!67315 e!91861)))

(assert (=> d!44065 (= res!67315 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!44065 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))) e!91861)))

(declare-fun b!140936 () Bool)

(assert (=> b!140936 (= e!91860 call!15640)))

(declare-fun b!140937 () Bool)

(assert (=> b!140937 (= e!91859 call!15640)))

(assert (= (and d!44065 (not res!67315)) b!140934))

(assert (= (and b!140934 c!26462) b!140935))

(assert (= (and b!140934 (not c!26462)) b!140936))

(assert (= (and b!140935 res!67314) b!140937))

(assert (= (or b!140937 b!140936) bm!15637))

(declare-fun m!168727 () Bool)

(assert (=> bm!15637 m!168727))

(assert (=> b!140934 m!168391))

(assert (=> b!140934 m!168391))

(assert (=> b!140934 m!168393))

(assert (=> b!140935 m!168391))

(declare-fun m!168729 () Bool)

(assert (=> b!140935 m!168729))

(declare-fun m!168731 () Bool)

(assert (=> b!140935 m!168731))

(assert (=> b!140935 m!168391))

(declare-fun m!168733 () Bool)

(assert (=> b!140935 m!168733))

(assert (=> b!139978 d!44065))

(declare-fun bm!15638 () Bool)

(declare-fun call!15641 () Bool)

(declare-fun c!26463 () Bool)

(assert (=> bm!15638 (= call!15641 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26463 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun b!140938 () Bool)

(declare-fun e!91862 () Bool)

(declare-fun e!91863 () Bool)

(assert (=> b!140938 (= e!91862 e!91863)))

(declare-fun res!67318 () Bool)

(assert (=> b!140938 (=> (not res!67318) (not e!91863))))

(declare-fun e!91865 () Bool)

(assert (=> b!140938 (= res!67318 (not e!91865))))

(declare-fun res!67316 () Bool)

(assert (=> b!140938 (=> (not res!67316) (not e!91865))))

(assert (=> b!140938 (= res!67316 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140939 () Bool)

(declare-fun e!91864 () Bool)

(assert (=> b!140939 (= e!91864 call!15641)))

(declare-fun b!140940 () Bool)

(assert (=> b!140940 (= e!91863 e!91864)))

(assert (=> b!140940 (= c!26463 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!44067 () Bool)

(declare-fun res!67317 () Bool)

(assert (=> d!44067 (=> res!67317 e!91862)))

(assert (=> d!44067 (= res!67317 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!44067 (= (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000 Nil!1717) e!91862)))

(declare-fun b!140941 () Bool)

(assert (=> b!140941 (= e!91864 call!15641)))

(declare-fun b!140942 () Bool)

(assert (=> b!140942 (= e!91865 (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!44067 (not res!67317)) b!140938))

(assert (= (and b!140938 res!67316) b!140942))

(assert (= (and b!140938 res!67318) b!140940))

(assert (= (and b!140940 c!26463) b!140939))

(assert (= (and b!140940 (not c!26463)) b!140941))

(assert (= (or b!140939 b!140941) bm!15638))

(assert (=> bm!15638 m!167903))

(declare-fun m!168735 () Bool)

(assert (=> bm!15638 m!168735))

(assert (=> b!140938 m!167903))

(assert (=> b!140938 m!167903))

(assert (=> b!140938 m!167905))

(assert (=> b!140940 m!167903))

(assert (=> b!140940 m!167903))

(assert (=> b!140940 m!167905))

(assert (=> b!140942 m!167903))

(assert (=> b!140942 m!167903))

(declare-fun m!168737 () Bool)

(assert (=> b!140942 m!168737))

(assert (=> b!140189 d!44067))

(declare-fun d!44069 () Bool)

(declare-fun isEmpty!425 (List!1719) Bool)

(assert (=> d!44069 (= (isEmpty!424 lt!73446) (isEmpty!425 (toList!858 lt!73446)))))

(declare-fun bs!5899 () Bool)

(assert (= bs!5899 d!44069))

(declare-fun m!168739 () Bool)

(assert (=> bs!5899 m!168739))

(assert (=> b!140156 d!44069))

(declare-fun d!44071 () Bool)

(assert (=> d!44071 (= (apply!120 lt!73215 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5900 () Bool)

(assert (= bs!5900 d!44071))

(declare-fun m!168741 () Bool)

(assert (=> bs!5900 m!168741))

(assert (=> bs!5900 m!168741))

(declare-fun m!168743 () Bool)

(assert (=> bs!5900 m!168743))

(assert (=> b!139933 d!44071))

(declare-fun b!140944 () Bool)

(declare-fun e!91866 () Option!183)

(declare-fun e!91867 () Option!183)

(assert (=> b!140944 (= e!91866 e!91867)))

(declare-fun c!26465 () Bool)

(assert (=> b!140944 (= c!26465 (and ((_ is Cons!1715) (toList!858 lt!73275)) (not (= (_1!1322 (h!2322 (toList!858 lt!73275))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!140945 () Bool)

(assert (=> b!140945 (= e!91867 (getValueByKey!177 (t!6295 (toList!858 lt!73275)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140943 () Bool)

(assert (=> b!140943 (= e!91866 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73275)))))))

(declare-fun b!140946 () Bool)

(assert (=> b!140946 (= e!91867 None!181)))

(declare-fun c!26464 () Bool)

(declare-fun d!44073 () Bool)

(assert (=> d!44073 (= c!26464 (and ((_ is Cons!1715) (toList!858 lt!73275)) (= (_1!1322 (h!2322 (toList!858 lt!73275))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!44073 (= (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91866)))

(assert (= (and d!44073 c!26464) b!140943))

(assert (= (and d!44073 (not c!26464)) b!140944))

(assert (= (and b!140944 c!26465) b!140945))

(assert (= (and b!140944 (not c!26465)) b!140946))

(declare-fun m!168745 () Bool)

(assert (=> b!140945 m!168745))

(assert (=> b!139975 d!44073))

(declare-fun lt!73935 () Bool)

(declare-fun d!44075 () Bool)

(assert (=> d!44075 (= lt!73935 (select (content!139 (toList!858 lt!73470)) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91868 () Bool)

(assert (=> d!44075 (= lt!73935 e!91868)))

(declare-fun res!67319 () Bool)

(assert (=> d!44075 (=> (not res!67319) (not e!91868))))

(assert (=> d!44075 (= res!67319 ((_ is Cons!1715) (toList!858 lt!73470)))))

(assert (=> d!44075 (= (contains!907 (toList!858 lt!73470) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73935)))

(declare-fun b!140947 () Bool)

(declare-fun e!91869 () Bool)

(assert (=> b!140947 (= e!91868 e!91869)))

(declare-fun res!67320 () Bool)

(assert (=> b!140947 (=> res!67320 e!91869)))

(assert (=> b!140947 (= res!67320 (= (h!2322 (toList!858 lt!73470)) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!140948 () Bool)

(assert (=> b!140948 (= e!91869 (contains!907 (t!6295 (toList!858 lt!73470)) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!44075 res!67319) b!140947))

(assert (= (and b!140947 (not res!67320)) b!140948))

(declare-fun m!168747 () Bool)

(assert (=> d!44075 m!168747))

(declare-fun m!168749 () Bool)

(assert (=> d!44075 m!168749))

(declare-fun m!168751 () Bool)

(assert (=> b!140948 m!168751))

(assert (=> b!140175 d!44075))

(declare-fun d!44077 () Bool)

(declare-fun e!91870 () Bool)

(assert (=> d!44077 e!91870))

(declare-fun res!67321 () Bool)

(assert (=> d!44077 (=> res!67321 e!91870)))

(declare-fun lt!73939 () Bool)

(assert (=> d!44077 (= res!67321 (not lt!73939))))

(declare-fun lt!73936 () Bool)

(assert (=> d!44077 (= lt!73939 lt!73936)))

(declare-fun lt!73938 () Unit!4387)

(declare-fun e!91871 () Unit!4387)

(assert (=> d!44077 (= lt!73938 e!91871)))

(declare-fun c!26466 () Bool)

(assert (=> d!44077 (= c!26466 lt!73936)))

(assert (=> d!44077 (= lt!73936 (containsKey!180 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44077 (= (contains!904 lt!73215 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73939)))

(declare-fun b!140949 () Bool)

(declare-fun lt!73937 () Unit!4387)

(assert (=> b!140949 (= e!91871 lt!73937)))

(assert (=> b!140949 (= lt!73937 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140949 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140950 () Bool)

(declare-fun Unit!4441 () Unit!4387)

(assert (=> b!140950 (= e!91871 Unit!4441)))

(declare-fun b!140951 () Bool)

(assert (=> b!140951 (= e!91870 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44077 c!26466) b!140949))

(assert (= (and d!44077 (not c!26466)) b!140950))

(assert (= (and d!44077 (not res!67321)) b!140951))

(declare-fun m!168753 () Bool)

(assert (=> d!44077 m!168753))

(declare-fun m!168755 () Bool)

(assert (=> b!140949 m!168755))

(assert (=> b!140949 m!168741))

(assert (=> b!140949 m!168741))

(declare-fun m!168757 () Bool)

(assert (=> b!140949 m!168757))

(assert (=> b!140951 m!168741))

(assert (=> b!140951 m!168741))

(assert (=> b!140951 m!168757))

(assert (=> bm!15501 d!44077))

(declare-fun b!140953 () Bool)

(declare-fun e!91872 () Option!183)

(declare-fun e!91873 () Option!183)

(assert (=> b!140953 (= e!91872 e!91873)))

(declare-fun c!26468 () Bool)

(assert (=> b!140953 (= c!26468 (and ((_ is Cons!1715) (toList!858 lt!73268)) (not (= (_1!1322 (h!2322 (toList!858 lt!73268))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!140954 () Bool)

(assert (=> b!140954 (= e!91873 (getValueByKey!177 (t!6295 (toList!858 lt!73268)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140952 () Bool)

(assert (=> b!140952 (= e!91872 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73268)))))))

(declare-fun b!140955 () Bool)

(assert (=> b!140955 (= e!91873 None!181)))

(declare-fun c!26467 () Bool)

(declare-fun d!44079 () Bool)

(assert (=> d!44079 (= c!26467 (and ((_ is Cons!1715) (toList!858 lt!73268)) (= (_1!1322 (h!2322 (toList!858 lt!73268))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44079 (= (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91872)))

(assert (= (and d!44079 c!26467) b!140952))

(assert (= (and d!44079 (not c!26467)) b!140953))

(assert (= (and b!140953 c!26468) b!140954))

(assert (= (and b!140953 (not c!26468)) b!140955))

(declare-fun m!168759 () Bool)

(assert (=> b!140954 m!168759))

(assert (=> b!139973 d!44079))

(assert (=> bm!15548 d!43607))

(declare-fun d!44081 () Bool)

(declare-fun res!67322 () Bool)

(declare-fun e!91874 () Bool)

(assert (=> d!44081 (=> res!67322 e!91874)))

(assert (=> d!44081 (= res!67322 (and ((_ is Cons!1715) (toList!858 lt!73184)) (= (_1!1322 (h!2322 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44081 (= (containsKey!180 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000) e!91874)))

(declare-fun b!140956 () Bool)

(declare-fun e!91875 () Bool)

(assert (=> b!140956 (= e!91874 e!91875)))

(declare-fun res!67323 () Bool)

(assert (=> b!140956 (=> (not res!67323) (not e!91875))))

(assert (=> b!140956 (= res!67323 (and (or (not ((_ is Cons!1715) (toList!858 lt!73184))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73184)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140957 () Bool)

(assert (=> b!140957 (= e!91875 (containsKey!180 (t!6295 (toList!858 lt!73184)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44081 (not res!67322)) b!140956))

(assert (= (and b!140956 res!67323) b!140957))

(declare-fun m!168761 () Bool)

(assert (=> b!140957 m!168761))

(assert (=> d!43685 d!44081))

(declare-fun b!140959 () Bool)

(declare-fun e!91876 () Option!183)

(declare-fun e!91877 () Option!183)

(assert (=> b!140959 (= e!91876 e!91877)))

(declare-fun c!26470 () Bool)

(assert (=> b!140959 (= c!26470 (and ((_ is Cons!1715) (toList!858 lt!73460)) (not (= (_1!1322 (h!2322 (toList!858 lt!73460))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140960 () Bool)

(assert (=> b!140960 (= e!91877 (getValueByKey!177 (t!6295 (toList!858 lt!73460)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140958 () Bool)

(assert (=> b!140958 (= e!91876 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73460)))))))

(declare-fun b!140961 () Bool)

(assert (=> b!140961 (= e!91877 None!181)))

(declare-fun d!44083 () Bool)

(declare-fun c!26469 () Bool)

(assert (=> d!44083 (= c!26469 (and ((_ is Cons!1715) (toList!858 lt!73460)) (= (_1!1322 (h!2322 (toList!858 lt!73460))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44083 (= (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91876)))

(assert (= (and d!44083 c!26469) b!140958))

(assert (= (and d!44083 (not c!26469)) b!140959))

(assert (= (and b!140959 c!26470) b!140960))

(assert (= (and b!140959 (not c!26470)) b!140961))

(declare-fun m!168763 () Bool)

(assert (=> b!140960 m!168763))

(assert (=> b!140168 d!44083))

(declare-fun d!44085 () Bool)

(declare-fun res!67324 () Bool)

(declare-fun e!91878 () Bool)

(assert (=> d!44085 (=> res!67324 e!91878)))

(assert (=> d!44085 (= res!67324 (= (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!44085 (= (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!91878)))

(declare-fun b!140962 () Bool)

(declare-fun e!91879 () Bool)

(assert (=> b!140962 (= e!91878 e!91879)))

(declare-fun res!67325 () Bool)

(assert (=> b!140962 (=> (not res!67325) (not e!91879))))

(assert (=> b!140962 (= res!67325 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140963 () Bool)

(assert (=> b!140963 (= e!91879 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44085 (not res!67324)) b!140962))

(assert (= (and b!140962 res!67325) b!140963))

(assert (=> d!44085 m!168135))

(assert (=> b!140963 m!166633))

(declare-fun m!168765 () Bool)

(assert (=> b!140963 m!168765))

(assert (=> b!140108 d!44085))

(declare-fun d!44087 () Bool)

(assert (=> d!44087 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(declare-fun lt!73940 () Unit!4387)

(assert (=> d!44087 (= lt!73940 (choose!864 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(declare-fun e!91880 () Bool)

(assert (=> d!44087 e!91880))

(declare-fun res!67326 () Bool)

(assert (=> d!44087 (=> (not res!67326) (not e!91880))))

(assert (=> d!44087 (= res!67326 (isStrictlySorted!312 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44087 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194) lt!73940)))

(declare-fun b!140964 () Bool)

(assert (=> b!140964 (= e!91880 (containsKey!180 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(assert (= (and d!44087 res!67326) b!140964))

(assert (=> d!44087 m!167315))

(assert (=> d!44087 m!167315))

(assert (=> d!44087 m!167317))

(declare-fun m!168767 () Bool)

(assert (=> d!44087 m!168767))

(declare-fun m!168769 () Bool)

(assert (=> d!44087 m!168769))

(assert (=> b!140964 m!167311))

(assert (=> b!140161 d!44087))

(assert (=> b!140161 d!43829))

(assert (=> b!140161 d!43831))

(assert (=> b!140001 d!43693))

(declare-fun d!44089 () Bool)

(assert (=> d!44089 (= (get!1535 (getValueByKey!177 (toList!858 lt!73200) lt!73195)) (v!3285 (getValueByKey!177 (toList!858 lt!73200) lt!73195)))))

(assert (=> d!43651 d!44089))

(declare-fun b!140966 () Bool)

(declare-fun e!91881 () Option!183)

(declare-fun e!91882 () Option!183)

(assert (=> b!140966 (= e!91881 e!91882)))

(declare-fun c!26472 () Bool)

(assert (=> b!140966 (= c!26472 (and ((_ is Cons!1715) (toList!858 lt!73200)) (not (= (_1!1322 (h!2322 (toList!858 lt!73200))) lt!73195))))))

(declare-fun b!140967 () Bool)

(assert (=> b!140967 (= e!91882 (getValueByKey!177 (t!6295 (toList!858 lt!73200)) lt!73195))))

(declare-fun b!140965 () Bool)

(assert (=> b!140965 (= e!91881 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73200)))))))

(declare-fun b!140968 () Bool)

(assert (=> b!140968 (= e!91882 None!181)))

(declare-fun d!44091 () Bool)

(declare-fun c!26471 () Bool)

(assert (=> d!44091 (= c!26471 (and ((_ is Cons!1715) (toList!858 lt!73200)) (= (_1!1322 (h!2322 (toList!858 lt!73200))) lt!73195)))))

(assert (=> d!44091 (= (getValueByKey!177 (toList!858 lt!73200) lt!73195) e!91881)))

(assert (= (and d!44091 c!26471) b!140965))

(assert (= (and d!44091 (not c!26471)) b!140966))

(assert (= (and b!140966 c!26472) b!140967))

(assert (= (and b!140966 (not c!26472)) b!140968))

(declare-fun m!168771 () Bool)

(assert (=> b!140967 m!168771))

(assert (=> d!43651 d!44091))

(assert (=> b!140105 d!43671))

(declare-fun b!140970 () Bool)

(declare-fun e!91883 () Option!183)

(declare-fun e!91884 () Option!183)

(assert (=> b!140970 (= e!91883 e!91884)))

(declare-fun c!26474 () Bool)

(assert (=> b!140970 (= c!26474 (and ((_ is Cons!1715) (toList!858 lt!73465)) (not (= (_1!1322 (h!2322 (toList!858 lt!73465))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140971 () Bool)

(assert (=> b!140971 (= e!91884 (getValueByKey!177 (t!6295 (toList!858 lt!73465)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140969 () Bool)

(assert (=> b!140969 (= e!91883 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73465)))))))

(declare-fun b!140972 () Bool)

(assert (=> b!140972 (= e!91884 None!181)))

(declare-fun d!44093 () Bool)

(declare-fun c!26473 () Bool)

(assert (=> d!44093 (= c!26473 (and ((_ is Cons!1715) (toList!858 lt!73465)) (= (_1!1322 (h!2322 (toList!858 lt!73465))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44093 (= (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91883)))

(assert (= (and d!44093 c!26473) b!140969))

(assert (= (and d!44093 (not c!26473)) b!140970))

(assert (= (and b!140970 c!26474) b!140971))

(assert (= (and b!140970 (not c!26474)) b!140972))

(declare-fun m!168773 () Bool)

(assert (=> b!140971 m!168773))

(assert (=> b!140171 d!44093))

(declare-fun b!140973 () Bool)

(declare-fun e!91885 () (_ BitVec 32))

(assert (=> b!140973 (= e!91885 #b00000000000000000000000000000000)))

(declare-fun b!140975 () Bool)

(declare-fun e!91886 () (_ BitVec 32))

(declare-fun call!15642 () (_ BitVec 32))

(assert (=> b!140975 (= e!91886 (bvadd #b00000000000000000000000000000001 call!15642))))

(declare-fun d!44095 () Bool)

(declare-fun lt!73941 () (_ BitVec 32))

(assert (=> d!44095 (and (bvsge lt!73941 #b00000000000000000000000000000000) (bvsle lt!73941 (bvsub (size!2578 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44095 (= lt!73941 e!91885)))

(declare-fun c!26475 () Bool)

(assert (=> d!44095 (= c!26475 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44095 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 newMap!16)) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44095 (= (arrayCountValidKeys!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))) lt!73941)))

(declare-fun b!140974 () Bool)

(assert (=> b!140974 (= e!91885 e!91886)))

(declare-fun c!26476 () Bool)

(assert (=> b!140974 (= c!26476 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!15639 () Bool)

(assert (=> bm!15639 (= call!15642 (arrayCountValidKeys!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!140976 () Bool)

(assert (=> b!140976 (= e!91886 call!15642)))

(assert (= (and d!44095 c!26475) b!140973))

(assert (= (and d!44095 (not c!26475)) b!140974))

(assert (= (and b!140974 c!26476) b!140975))

(assert (= (and b!140974 (not c!26476)) b!140976))

(assert (= (or b!140975 b!140976) bm!15639))

(assert (=> b!140974 m!168135))

(assert (=> b!140974 m!168135))

(assert (=> b!140974 m!168139))

(declare-fun m!168775 () Bool)

(assert (=> bm!15639 m!168775))

(assert (=> bm!15543 d!44095))

(assert (=> bm!15522 d!44011))

(declare-fun d!44097 () Bool)

(assert (=> d!44097 (= (apply!120 lt!73309 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5901 () Bool)

(assert (= bs!5901 d!44097))

(assert (=> bs!5901 m!167561))

(assert (=> bs!5901 m!167561))

(declare-fun m!168777 () Bool)

(assert (=> bs!5901 m!168777))

(assert (=> b!140036 d!44097))

(declare-fun d!44099 () Bool)

(assert (=> d!44099 (= (inRange!0 (ite c!26228 (index!3256 lt!73403) (ite c!26229 (index!3255 lt!73400) (index!3258 lt!73400))) (mask!7279 newMap!16)) (and (bvsge (ite c!26228 (index!3256 lt!73403) (ite c!26229 (index!3255 lt!73400) (index!3258 lt!73400))) #b00000000000000000000000000000000) (bvslt (ite c!26228 (index!3256 lt!73403) (ite c!26229 (index!3255 lt!73400) (index!3258 lt!73400))) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15535 d!44099))

(assert (=> d!43625 d!43631))

(assert (=> d!43625 d!43639))

(declare-fun d!44101 () Bool)

(assert (=> d!44101 (contains!904 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!73194)))

(assert (=> d!44101 true))

(declare-fun _$35!390 () Unit!4387)

(assert (=> d!44101 (= (choose!866 lt!73188 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) lt!73194) _$35!390)))

(declare-fun bs!5902 () Bool)

(assert (= bs!5902 d!44101))

(assert (=> bs!5902 m!166853))

(assert (=> bs!5902 m!166853))

(assert (=> bs!5902 m!166855))

(assert (=> d!43625 d!44101))

(declare-fun d!44103 () Bool)

(declare-fun e!91887 () Bool)

(assert (=> d!44103 e!91887))

(declare-fun res!67327 () Bool)

(assert (=> d!44103 (=> res!67327 e!91887)))

(declare-fun lt!73945 () Bool)

(assert (=> d!44103 (= res!67327 (not lt!73945))))

(declare-fun lt!73942 () Bool)

(assert (=> d!44103 (= lt!73945 lt!73942)))

(declare-fun lt!73944 () Unit!4387)

(declare-fun e!91888 () Unit!4387)

(assert (=> d!44103 (= lt!73944 e!91888)))

(declare-fun c!26477 () Bool)

(assert (=> d!44103 (= c!26477 lt!73942)))

(assert (=> d!44103 (= lt!73942 (containsKey!180 (toList!858 lt!73188) lt!73194))))

(assert (=> d!44103 (= (contains!904 lt!73188 lt!73194) lt!73945)))

(declare-fun b!140978 () Bool)

(declare-fun lt!73943 () Unit!4387)

(assert (=> b!140978 (= e!91888 lt!73943)))

(assert (=> b!140978 (= lt!73943 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73188) lt!73194))))

(assert (=> b!140978 (isDefined!129 (getValueByKey!177 (toList!858 lt!73188) lt!73194))))

(declare-fun b!140979 () Bool)

(declare-fun Unit!4442 () Unit!4387)

(assert (=> b!140979 (= e!91888 Unit!4442)))

(declare-fun b!140980 () Bool)

(assert (=> b!140980 (= e!91887 (isDefined!129 (getValueByKey!177 (toList!858 lt!73188) lt!73194)))))

(assert (= (and d!44103 c!26477) b!140978))

(assert (= (and d!44103 (not c!26477)) b!140979))

(assert (= (and d!44103 (not res!67327)) b!140980))

(declare-fun m!168779 () Bool)

(assert (=> d!44103 m!168779))

(declare-fun m!168781 () Bool)

(assert (=> b!140978 m!168781))

(declare-fun m!168783 () Bool)

(assert (=> b!140978 m!168783))

(assert (=> b!140978 m!168783))

(declare-fun m!168785 () Bool)

(assert (=> b!140978 m!168785))

(assert (=> b!140980 m!168783))

(assert (=> b!140980 m!168783))

(assert (=> b!140980 m!168785))

(assert (=> d!43625 d!44103))

(declare-fun d!44105 () Bool)

(assert (=> d!44105 (= (apply!120 lt!73309 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5903 () Bool)

(assert (= bs!5903 d!44105))

(assert (=> bs!5903 m!166927))

(declare-fun m!168787 () Bool)

(assert (=> bs!5903 m!168787))

(assert (=> bs!5903 m!168787))

(declare-fun m!168789 () Bool)

(assert (=> bs!5903 m!168789))

(assert (=> b!140043 d!44105))

(declare-fun c!26478 () Bool)

(declare-fun d!44107 () Bool)

(assert (=> d!44107 (= c!26478 ((_ is ValueCellFull!1121) (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000)))))

(declare-fun e!91889 () V!3553)

(assert (=> d!44107 (= (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91889)))

(declare-fun b!140981 () Bool)

(assert (=> b!140981 (= e!91889 (get!1533 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140982 () Bool)

(assert (=> b!140982 (= e!91889 (get!1534 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44107 c!26478) b!140981))

(assert (= (and d!44107 (not c!26478)) b!140982))

(assert (=> b!140981 m!167169))

(assert (=> b!140981 m!166963))

(declare-fun m!168791 () Bool)

(assert (=> b!140981 m!168791))

(assert (=> b!140982 m!167169))

(assert (=> b!140982 m!166963))

(declare-fun m!168793 () Bool)

(assert (=> b!140982 m!168793))

(assert (=> b!140043 d!44107))

(declare-fun d!44109 () Bool)

(declare-fun e!91890 () Bool)

(assert (=> d!44109 e!91890))

(declare-fun res!67328 () Bool)

(assert (=> d!44109 (=> res!67328 e!91890)))

(declare-fun lt!73949 () Bool)

(assert (=> d!44109 (= res!67328 (not lt!73949))))

(declare-fun lt!73946 () Bool)

(assert (=> d!44109 (= lt!73949 lt!73946)))

(declare-fun lt!73948 () Unit!4387)

(declare-fun e!91891 () Unit!4387)

(assert (=> d!44109 (= lt!73948 e!91891)))

(declare-fun c!26479 () Bool)

(assert (=> d!44109 (= c!26479 lt!73946)))

(assert (=> d!44109 (= lt!73946 (containsKey!180 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!44109 (= (contains!904 lt!73460 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73949)))

(declare-fun b!140983 () Bool)

(declare-fun lt!73947 () Unit!4387)

(assert (=> b!140983 (= e!91891 lt!73947)))

(assert (=> b!140983 (= lt!73947 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> b!140983 (isDefined!129 (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140984 () Bool)

(declare-fun Unit!4443 () Unit!4387)

(assert (=> b!140984 (= e!91891 Unit!4443)))

(declare-fun b!140985 () Bool)

(assert (=> b!140985 (= e!91890 (isDefined!129 (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44109 c!26479) b!140983))

(assert (= (and d!44109 (not c!26479)) b!140984))

(assert (= (and d!44109 (not res!67328)) b!140985))

(declare-fun m!168795 () Bool)

(assert (=> d!44109 m!168795))

(declare-fun m!168797 () Bool)

(assert (=> b!140983 m!168797))

(assert (=> b!140983 m!167339))

(assert (=> b!140983 m!167339))

(declare-fun m!168799 () Bool)

(assert (=> b!140983 m!168799))

(assert (=> b!140985 m!167339))

(assert (=> b!140985 m!167339))

(assert (=> b!140985 m!168799))

(assert (=> d!43639 d!44109))

(declare-fun b!140987 () Bool)

(declare-fun e!91892 () Option!183)

(declare-fun e!91893 () Option!183)

(assert (=> b!140987 (= e!91892 e!91893)))

(declare-fun c!26481 () Bool)

(assert (=> b!140987 (= c!26481 (and ((_ is Cons!1715) lt!73459) (not (= (_1!1322 (h!2322 lt!73459)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!140988 () Bool)

(assert (=> b!140988 (= e!91893 (getValueByKey!177 (t!6295 lt!73459) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140986 () Bool)

(assert (=> b!140986 (= e!91892 (Some!182 (_2!1322 (h!2322 lt!73459))))))

(declare-fun b!140989 () Bool)

(assert (=> b!140989 (= e!91893 None!181)))

(declare-fun c!26480 () Bool)

(declare-fun d!44111 () Bool)

(assert (=> d!44111 (= c!26480 (and ((_ is Cons!1715) lt!73459) (= (_1!1322 (h!2322 lt!73459)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44111 (= (getValueByKey!177 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91892)))

(assert (= (and d!44111 c!26480) b!140986))

(assert (= (and d!44111 (not c!26480)) b!140987))

(assert (= (and b!140987 c!26481) b!140988))

(assert (= (and b!140987 (not c!26481)) b!140989))

(declare-fun m!168801 () Bool)

(assert (=> b!140988 m!168801))

(assert (=> d!43639 d!44111))

(declare-fun d!44113 () Bool)

(assert (=> d!44113 (= (getValueByKey!177 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73950 () Unit!4387)

(assert (=> d!44113 (= lt!73950 (choose!873 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!91894 () Bool)

(assert (=> d!44113 e!91894))

(declare-fun res!67329 () Bool)

(assert (=> d!44113 (=> (not res!67329) (not e!91894))))

(assert (=> d!44113 (= res!67329 (isStrictlySorted!312 lt!73459))))

(assert (=> d!44113 (= (lemmaContainsTupThenGetReturnValue!91 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73950)))

(declare-fun b!140990 () Bool)

(declare-fun res!67330 () Bool)

(assert (=> b!140990 (=> (not res!67330) (not e!91894))))

(assert (=> b!140990 (= res!67330 (containsKey!180 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!140991 () Bool)

(assert (=> b!140991 (= e!91894 (contains!907 lt!73459 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44113 res!67329) b!140990))

(assert (= (and b!140990 res!67330) b!140991))

(assert (=> d!44113 m!167333))

(declare-fun m!168803 () Bool)

(assert (=> d!44113 m!168803))

(declare-fun m!168805 () Bool)

(assert (=> d!44113 m!168805))

(declare-fun m!168807 () Bool)

(assert (=> b!140990 m!168807))

(declare-fun m!168809 () Bool)

(assert (=> b!140991 m!168809))

(assert (=> d!43639 d!44113))

(declare-fun bm!15640 () Bool)

(declare-fun call!15645 () List!1719)

(declare-fun call!15644 () List!1719)

(assert (=> bm!15640 (= call!15645 call!15644)))

(declare-fun b!140993 () Bool)

(declare-fun e!91896 () List!1719)

(declare-fun e!91898 () List!1719)

(assert (=> b!140993 (= e!91896 e!91898)))

(declare-fun c!26485 () Bool)

(assert (=> b!140993 (= c!26485 (and ((_ is Cons!1715) (toList!858 lt!73188)) (= (_1!1322 (h!2322 (toList!858 lt!73188))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!140994 () Bool)

(declare-fun res!67332 () Bool)

(declare-fun e!91895 () Bool)

(assert (=> b!140994 (=> (not res!67332) (not e!91895))))

(declare-fun lt!73951 () List!1719)

(assert (=> b!140994 (= res!67332 (containsKey!180 lt!73951 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun c!26483 () Bool)

(declare-fun b!140995 () Bool)

(assert (=> b!140995 (= c!26483 (and ((_ is Cons!1715) (toList!858 lt!73188)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73188))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91897 () List!1719)

(assert (=> b!140995 (= e!91898 e!91897)))

(declare-fun bm!15641 () Bool)

(declare-fun call!15643 () List!1719)

(assert (=> bm!15641 (= call!15644 call!15643)))

(declare-fun b!140996 () Bool)

(assert (=> b!140996 (= e!91898 call!15644)))

(declare-fun b!140997 () Bool)

(assert (=> b!140997 (= e!91896 call!15643)))

(declare-fun b!140998 () Bool)

(assert (=> b!140998 (= e!91895 (contains!907 lt!73951 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91899 () List!1719)

(declare-fun b!140992 () Bool)

(assert (=> b!140992 (= e!91899 (ite c!26485 (t!6295 (toList!858 lt!73188)) (ite c!26483 (Cons!1715 (h!2322 (toList!858 lt!73188)) (t!6295 (toList!858 lt!73188))) Nil!1716)))))

(declare-fun d!44115 () Bool)

(assert (=> d!44115 e!91895))

(declare-fun res!67331 () Bool)

(assert (=> d!44115 (=> (not res!67331) (not e!91895))))

(assert (=> d!44115 (= res!67331 (isStrictlySorted!312 lt!73951))))

(assert (=> d!44115 (= lt!73951 e!91896)))

(declare-fun c!26484 () Bool)

(assert (=> d!44115 (= c!26484 (and ((_ is Cons!1715) (toList!858 lt!73188)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73188))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44115 (isStrictlySorted!312 (toList!858 lt!73188))))

(assert (=> d!44115 (= (insertStrictlySorted!94 (toList!858 lt!73188) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73951)))

(declare-fun b!140999 () Bool)

(assert (=> b!140999 (= e!91897 call!15645)))

(declare-fun b!141000 () Bool)

(assert (=> b!141000 (= e!91897 call!15645)))

(declare-fun bm!15642 () Bool)

(assert (=> bm!15642 (= call!15643 ($colon$colon!93 e!91899 (ite c!26484 (h!2322 (toList!858 lt!73188)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26482 () Bool)

(assert (=> bm!15642 (= c!26482 c!26484)))

(declare-fun b!141001 () Bool)

(assert (=> b!141001 (= e!91899 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73188)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44115 c!26484) b!140997))

(assert (= (and d!44115 (not c!26484)) b!140993))

(assert (= (and b!140993 c!26485) b!140996))

(assert (= (and b!140993 (not c!26485)) b!140995))

(assert (= (and b!140995 c!26483) b!140999))

(assert (= (and b!140995 (not c!26483)) b!141000))

(assert (= (or b!140999 b!141000) bm!15640))

(assert (= (or b!140996 bm!15640) bm!15641))

(assert (= (or b!140997 bm!15641) bm!15642))

(assert (= (and bm!15642 c!26482) b!141001))

(assert (= (and bm!15642 (not c!26482)) b!140992))

(assert (= (and d!44115 res!67331) b!140994))

(assert (= (and b!140994 res!67332) b!140998))

(declare-fun m!168811 () Bool)

(assert (=> bm!15642 m!168811))

(declare-fun m!168813 () Bool)

(assert (=> d!44115 m!168813))

(declare-fun m!168815 () Bool)

(assert (=> d!44115 m!168815))

(declare-fun m!168817 () Bool)

(assert (=> b!140994 m!168817))

(declare-fun m!168819 () Bool)

(assert (=> b!141001 m!168819))

(declare-fun m!168821 () Bool)

(assert (=> b!140998 m!168821))

(assert (=> d!43639 d!44115))

(declare-fun d!44117 () Bool)

(declare-fun e!91900 () Bool)

(assert (=> d!44117 e!91900))

(declare-fun res!67333 () Bool)

(assert (=> d!44117 (=> (not res!67333) (not e!91900))))

(declare-fun lt!73954 () ListLongMap!1685)

(assert (=> d!44117 (= res!67333 (contains!904 lt!73954 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!73953 () List!1719)

(assert (=> d!44117 (= lt!73954 (ListLongMap!1686 lt!73953))))

(declare-fun lt!73952 () Unit!4387)

(declare-fun lt!73955 () Unit!4387)

(assert (=> d!44117 (= lt!73952 lt!73955)))

(assert (=> d!44117 (= (getValueByKey!177 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44117 (= lt!73955 (lemmaContainsTupThenGetReturnValue!91 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44117 (= lt!73953 (insertStrictlySorted!94 (toList!858 call!15515) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44117 (= (+!173 call!15515 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!73954)))

(declare-fun b!141002 () Bool)

(declare-fun res!67334 () Bool)

(assert (=> b!141002 (=> (not res!67334) (not e!91900))))

(assert (=> b!141002 (= res!67334 (= (getValueByKey!177 (toList!858 lt!73954) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141003 () Bool)

(assert (=> b!141003 (= e!91900 (contains!907 (toList!858 lt!73954) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!44117 res!67333) b!141002))

(assert (= (and b!141002 res!67334) b!141003))

(declare-fun m!168823 () Bool)

(assert (=> d!44117 m!168823))

(declare-fun m!168825 () Bool)

(assert (=> d!44117 m!168825))

(declare-fun m!168827 () Bool)

(assert (=> d!44117 m!168827))

(declare-fun m!168829 () Bool)

(assert (=> d!44117 m!168829))

(declare-fun m!168831 () Bool)

(assert (=> b!141002 m!168831))

(declare-fun m!168833 () Bool)

(assert (=> b!141003 m!168833))

(assert (=> b!139965 d!44117))

(assert (=> b!139948 d!43693))

(declare-fun d!44119 () Bool)

(declare-fun e!91901 () Bool)

(assert (=> d!44119 e!91901))

(declare-fun res!67335 () Bool)

(assert (=> d!44119 (=> (not res!67335) (not e!91901))))

(declare-fun lt!73958 () ListLongMap!1685)

(assert (=> d!44119 (= res!67335 (contains!904 lt!73958 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73957 () List!1719)

(assert (=> d!44119 (= lt!73958 (ListLongMap!1686 lt!73957))))

(declare-fun lt!73956 () Unit!4387)

(declare-fun lt!73959 () Unit!4387)

(assert (=> d!44119 (= lt!73956 lt!73959)))

(assert (=> d!44119 (= (getValueByKey!177 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44119 (= lt!73959 (lemmaContainsTupThenGetReturnValue!91 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44119 (= lt!73957 (insertStrictlySorted!94 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44119 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73958)))

(declare-fun b!141004 () Bool)

(declare-fun res!67336 () Bool)

(assert (=> b!141004 (=> (not res!67336) (not e!91901))))

(assert (=> b!141004 (= res!67336 (= (getValueByKey!177 (toList!858 lt!73958) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141005 () Bool)

(assert (=> b!141005 (= e!91901 (contains!907 (toList!858 lt!73958) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44119 res!67335) b!141004))

(assert (= (and b!141004 res!67336) b!141005))

(declare-fun m!168835 () Bool)

(assert (=> d!44119 m!168835))

(declare-fun m!168837 () Bool)

(assert (=> d!44119 m!168837))

(declare-fun m!168839 () Bool)

(assert (=> d!44119 m!168839))

(declare-fun m!168841 () Bool)

(assert (=> d!44119 m!168841))

(declare-fun m!168843 () Bool)

(assert (=> b!141004 m!168843))

(declare-fun m!168845 () Bool)

(assert (=> b!141005 m!168845))

(assert (=> d!43621 d!44119))

(declare-fun b!141006 () Bool)

(declare-fun e!91904 () Bool)

(assert (=> b!141006 (= e!91904 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141007 () Bool)

(declare-fun e!91910 () Bool)

(declare-fun lt!73961 () ListLongMap!1685)

(assert (=> b!141007 (= e!91910 (= (apply!120 lt!73961 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!141008 () Bool)

(declare-fun c!26490 () Bool)

(assert (=> b!141008 (= c!26490 (and (not (= (bvand lt!73116 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!73116 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!91912 () ListLongMap!1685)

(declare-fun e!91902 () ListLongMap!1685)

(assert (=> b!141008 (= e!91912 e!91902)))

(declare-fun bm!15643 () Bool)

(declare-fun call!15646 () Bool)

(assert (=> bm!15643 (= call!15646 (contains!904 lt!73961 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141009 () Bool)

(declare-fun e!91911 () Bool)

(declare-fun e!91909 () Bool)

(assert (=> b!141009 (= e!91911 e!91909)))

(declare-fun c!26487 () Bool)

(assert (=> b!141009 (= c!26487 (not (= (bvand lt!73116 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141010 () Bool)

(declare-fun e!91903 () Bool)

(declare-fun e!91905 () Bool)

(assert (=> b!141010 (= e!91903 e!91905)))

(declare-fun res!67345 () Bool)

(assert (=> b!141010 (=> (not res!67345) (not e!91905))))

(assert (=> b!141010 (= res!67345 (contains!904 lt!73961 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141010 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141011 () Bool)

(declare-fun res!67339 () Bool)

(assert (=> b!141011 (=> (not res!67339) (not e!91911))))

(declare-fun e!91908 () Bool)

(assert (=> b!141011 (= res!67339 e!91908)))

(declare-fun c!26491 () Bool)

(assert (=> b!141011 (= c!26491 (not (= (bvand lt!73116 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!141012 () Bool)

(declare-fun e!91913 () Bool)

(assert (=> b!141012 (= e!91913 (= (apply!120 lt!73961 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141013 () Bool)

(declare-fun call!15652 () Bool)

(assert (=> b!141013 (= e!91909 (not call!15652))))

(declare-fun b!141014 () Bool)

(assert (=> b!141014 (= e!91905 (= (apply!120 lt!73961 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141014 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!141014 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15644 () Bool)

(declare-fun call!15649 () ListLongMap!1685)

(declare-fun call!15647 () ListLongMap!1685)

(assert (=> bm!15644 (= call!15649 call!15647)))

(declare-fun b!141015 () Bool)

(declare-fun res!67343 () Bool)

(assert (=> b!141015 (=> (not res!67343) (not e!91911))))

(assert (=> b!141015 (= res!67343 e!91903)))

(declare-fun res!67342 () Bool)

(assert (=> b!141015 (=> res!67342 e!91903)))

(assert (=> b!141015 (= res!67342 (not e!91904))))

(declare-fun res!67338 () Bool)

(assert (=> b!141015 (=> (not res!67338) (not e!91904))))

(assert (=> b!141015 (= res!67338 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun bm!15645 () Bool)

(declare-fun call!15648 () ListLongMap!1685)

(assert (=> bm!15645 (= call!15647 call!15648)))

(declare-fun b!141016 () Bool)

(declare-fun e!91906 () Unit!4387)

(declare-fun lt!73978 () Unit!4387)

(assert (=> b!141016 (= e!91906 lt!73978)))

(declare-fun lt!73965 () ListLongMap!1685)

(assert (=> b!141016 (= lt!73965 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73967 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73967 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73971 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73971 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73981 () Unit!4387)

(assert (=> b!141016 (= lt!73981 (addStillContains!96 lt!73965 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73971))))

(assert (=> b!141016 (contains!904 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73971)))

(declare-fun lt!73970 () Unit!4387)

(assert (=> b!141016 (= lt!73970 lt!73981)))

(declare-fun lt!73977 () ListLongMap!1685)

(assert (=> b!141016 (= lt!73977 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73966 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73966 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73972 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73972 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73975 () Unit!4387)

(assert (=> b!141016 (= lt!73975 (addApplyDifferent!96 lt!73977 lt!73966 (minValue!2789 newMap!16) lt!73972))))

(assert (=> b!141016 (= (apply!120 (+!173 lt!73977 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))) lt!73972) (apply!120 lt!73977 lt!73972))))

(declare-fun lt!73960 () Unit!4387)

(assert (=> b!141016 (= lt!73960 lt!73975)))

(declare-fun lt!73964 () ListLongMap!1685)

(assert (=> b!141016 (= lt!73964 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73974 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73974 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73962 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73962 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73973 () Unit!4387)

(assert (=> b!141016 (= lt!73973 (addApplyDifferent!96 lt!73964 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73962))))

(assert (=> b!141016 (= (apply!120 (+!173 lt!73964 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73962) (apply!120 lt!73964 lt!73962))))

(declare-fun lt!73963 () Unit!4387)

(assert (=> b!141016 (= lt!73963 lt!73973)))

(declare-fun lt!73980 () ListLongMap!1685)

(assert (=> b!141016 (= lt!73980 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73976 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73976 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73979 () (_ BitVec 64))

(assert (=> b!141016 (= lt!73979 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!141016 (= lt!73978 (addApplyDifferent!96 lt!73980 lt!73976 (minValue!2789 newMap!16) lt!73979))))

(assert (=> b!141016 (= (apply!120 (+!173 lt!73980 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))) lt!73979) (apply!120 lt!73980 lt!73979))))

(declare-fun call!15650 () ListLongMap!1685)

(declare-fun bm!15646 () Bool)

(declare-fun c!26488 () Bool)

(declare-fun c!26489 () Bool)

(assert (=> bm!15646 (= call!15650 (+!173 (ite c!26488 call!15648 (ite c!26489 call!15647 call!15649)) (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!44121 () Bool)

(assert (=> d!44121 e!91911))

(declare-fun res!67337 () Bool)

(assert (=> d!44121 (=> (not res!67337) (not e!91911))))

(assert (=> d!44121 (= res!67337 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun lt!73968 () ListLongMap!1685)

(assert (=> d!44121 (= lt!73961 lt!73968)))

(declare-fun lt!73969 () Unit!4387)

(assert (=> d!44121 (= lt!73969 e!91906)))

(declare-fun c!26486 () Bool)

(declare-fun e!91907 () Bool)

(assert (=> d!44121 (= c!26486 e!91907)))

(declare-fun res!67340 () Bool)

(assert (=> d!44121 (=> (not res!67340) (not e!91907))))

(assert (=> d!44121 (= res!67340 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91914 () ListLongMap!1685)

(assert (=> d!44121 (= lt!73968 e!91914)))

(assert (=> d!44121 (= c!26488 (and (not (= (bvand lt!73116 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!73116 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!44121 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44121 (= (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73961)))

(declare-fun b!141017 () Bool)

(assert (=> b!141017 (= e!91902 call!15649)))

(declare-fun b!141018 () Bool)

(declare-fun Unit!4444 () Unit!4387)

(assert (=> b!141018 (= e!91906 Unit!4444)))

(declare-fun b!141019 () Bool)

(assert (=> b!141019 (= e!91909 e!91910)))

(declare-fun res!67341 () Bool)

(assert (=> b!141019 (= res!67341 call!15652)))

(assert (=> b!141019 (=> (not res!67341) (not e!91910))))

(declare-fun b!141020 () Bool)

(assert (=> b!141020 (= e!91908 e!91913)))

(declare-fun res!67344 () Bool)

(assert (=> b!141020 (= res!67344 call!15646)))

(assert (=> b!141020 (=> (not res!67344) (not e!91913))))

(declare-fun b!141021 () Bool)

(declare-fun call!15651 () ListLongMap!1685)

(assert (=> b!141021 (= e!91902 call!15651)))

(declare-fun b!141022 () Bool)

(assert (=> b!141022 (= e!91912 call!15651)))

(declare-fun b!141023 () Bool)

(assert (=> b!141023 (= e!91914 (+!173 call!15650 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun bm!15647 () Bool)

(assert (=> bm!15647 (= call!15648 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!141024 () Bool)

(assert (=> b!141024 (= e!91907 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141025 () Bool)

(assert (=> b!141025 (= e!91914 e!91912)))

(assert (=> b!141025 (= c!26489 (and (not (= (bvand lt!73116 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!73116 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141026 () Bool)

(assert (=> b!141026 (= e!91908 (not call!15646))))

(declare-fun bm!15648 () Bool)

(assert (=> bm!15648 (= call!15651 call!15650)))

(declare-fun bm!15649 () Bool)

(assert (=> bm!15649 (= call!15652 (contains!904 lt!73961 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44121 c!26488) b!141023))

(assert (= (and d!44121 (not c!26488)) b!141025))

(assert (= (and b!141025 c!26489) b!141022))

(assert (= (and b!141025 (not c!26489)) b!141008))

(assert (= (and b!141008 c!26490) b!141021))

(assert (= (and b!141008 (not c!26490)) b!141017))

(assert (= (or b!141021 b!141017) bm!15644))

(assert (= (or b!141022 bm!15644) bm!15645))

(assert (= (or b!141022 b!141021) bm!15648))

(assert (= (or b!141023 bm!15645) bm!15647))

(assert (= (or b!141023 bm!15648) bm!15646))

(assert (= (and d!44121 res!67340) b!141024))

(assert (= (and d!44121 c!26486) b!141016))

(assert (= (and d!44121 (not c!26486)) b!141018))

(assert (= (and d!44121 res!67337) b!141015))

(assert (= (and b!141015 res!67338) b!141006))

(assert (= (and b!141015 (not res!67342)) b!141010))

(assert (= (and b!141010 res!67345) b!141014))

(assert (= (and b!141015 res!67343) b!141011))

(assert (= (and b!141011 c!26491) b!141020))

(assert (= (and b!141011 (not c!26491)) b!141026))

(assert (= (and b!141020 res!67344) b!141012))

(assert (= (or b!141020 b!141026) bm!15643))

(assert (= (and b!141011 res!67339) b!141009))

(assert (= (and b!141009 c!26487) b!141019))

(assert (= (and b!141009 (not c!26487)) b!141013))

(assert (= (and b!141019 res!67341) b!141007))

(assert (= (or b!141019 b!141013) bm!15649))

(declare-fun b_lambda!6319 () Bool)

(assert (=> (not b_lambda!6319) (not b!141014)))

(assert (=> b!141014 t!6309))

(declare-fun b_and!8821 () Bool)

(assert (= b_and!8817 (and (=> t!6309 result!4187) b_and!8821)))

(assert (=> b!141014 t!6311))

(declare-fun b_and!8823 () Bool)

(assert (= b_and!8819 (and (=> t!6311 result!4189) b_and!8823)))

(declare-fun m!168847 () Bool)

(assert (=> b!141016 m!168847))

(declare-fun m!168849 () Bool)

(assert (=> b!141016 m!168849))

(assert (=> b!141016 m!166663))

(declare-fun m!168851 () Bool)

(assert (=> b!141016 m!168851))

(declare-fun m!168853 () Bool)

(assert (=> b!141016 m!168853))

(assert (=> b!141016 m!166663))

(declare-fun m!168855 () Bool)

(assert (=> b!141016 m!168855))

(assert (=> b!141016 m!166927))

(assert (=> b!141016 m!168847))

(assert (=> b!141016 m!166663))

(declare-fun m!168857 () Bool)

(assert (=> b!141016 m!168857))

(declare-fun m!168859 () Bool)

(assert (=> b!141016 m!168859))

(assert (=> b!141016 m!168859))

(declare-fun m!168861 () Bool)

(assert (=> b!141016 m!168861))

(declare-fun m!168863 () Bool)

(assert (=> b!141016 m!168863))

(declare-fun m!168865 () Bool)

(assert (=> b!141016 m!168865))

(declare-fun m!168867 () Bool)

(assert (=> b!141016 m!168867))

(declare-fun m!168869 () Bool)

(assert (=> b!141016 m!168869))

(declare-fun m!168871 () Bool)

(assert (=> b!141016 m!168871))

(declare-fun m!168873 () Bool)

(assert (=> b!141016 m!168873))

(assert (=> b!141016 m!168853))

(declare-fun m!168875 () Bool)

(assert (=> b!141016 m!168875))

(assert (=> b!141016 m!168865))

(declare-fun m!168877 () Bool)

(assert (=> b!141016 m!168877))

(declare-fun m!168879 () Bool)

(assert (=> b!141023 m!168879))

(declare-fun m!168881 () Bool)

(assert (=> b!141012 m!168881))

(declare-fun m!168883 () Bool)

(assert (=> bm!15643 m!168883))

(assert (=> b!141006 m!166927))

(assert (=> b!141006 m!166927))

(assert (=> b!141006 m!166957))

(declare-fun m!168885 () Bool)

(assert (=> b!141007 m!168885))

(assert (=> b!141014 m!167015))

(assert (=> b!141014 m!167015))

(assert (=> b!141014 m!166963))

(assert (=> b!141014 m!167017))

(assert (=> b!141014 m!166927))

(assert (=> b!141014 m!166927))

(declare-fun m!168887 () Bool)

(assert (=> b!141014 m!168887))

(assert (=> b!141014 m!166963))

(declare-fun m!168889 () Bool)

(assert (=> bm!15649 m!168889))

(assert (=> d!44121 m!166907))

(declare-fun m!168891 () Bool)

(assert (=> bm!15646 m!168891))

(assert (=> bm!15647 m!166663))

(assert (=> bm!15647 m!168855))

(assert (=> b!141010 m!166927))

(assert (=> b!141010 m!166927))

(declare-fun m!168893 () Bool)

(assert (=> b!141010 m!168893))

(assert (=> b!141024 m!166927))

(assert (=> b!141024 m!166927))

(assert (=> b!141024 m!166957))

(assert (=> d!43621 d!44121))

(assert (=> d!43621 d!43697))

(assert (=> d!43621 d!43565))

(declare-fun d!44123 () Bool)

(assert (=> d!44123 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!44123 true))

(declare-fun _$7!122 () Unit!4387)

(assert (=> d!44123 (= (choose!865 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) lt!73116 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)) _$7!122)))

(declare-fun bs!5904 () Bool)

(assert (= bs!5904 d!44123))

(assert (=> bs!5904 m!166773))

(assert (=> bs!5904 m!166773))

(assert (=> bs!5904 m!167265))

(assert (=> bs!5904 m!166663))

(assert (=> bs!5904 m!167269))

(assert (=> d!43621 d!44123))

(declare-fun d!44125 () Bool)

(declare-fun e!91915 () Bool)

(assert (=> d!44125 e!91915))

(declare-fun res!67346 () Bool)

(assert (=> d!44125 (=> res!67346 e!91915)))

(declare-fun lt!73985 () Bool)

(assert (=> d!44125 (= res!67346 (not lt!73985))))

(declare-fun lt!73982 () Bool)

(assert (=> d!44125 (= lt!73985 lt!73982)))

(declare-fun lt!73984 () Unit!4387)

(declare-fun e!91916 () Unit!4387)

(assert (=> d!44125 (= lt!73984 e!91916)))

(declare-fun c!26492 () Bool)

(assert (=> d!44125 (= c!26492 lt!73982)))

(assert (=> d!44125 (= lt!73982 (containsKey!180 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44125 (= (contains!904 lt!73309 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!73985)))

(declare-fun b!141027 () Bool)

(declare-fun lt!73983 () Unit!4387)

(assert (=> b!141027 (= e!91916 lt!73983)))

(assert (=> b!141027 (= lt!73983 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141027 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141028 () Bool)

(declare-fun Unit!4445 () Unit!4387)

(assert (=> b!141028 (= e!91916 Unit!4445)))

(declare-fun b!141029 () Bool)

(assert (=> b!141029 (= e!91915 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44125 c!26492) b!141027))

(assert (= (and d!44125 (not c!26492)) b!141028))

(assert (= (and d!44125 (not res!67346)) b!141029))

(assert (=> d!44125 m!166927))

(declare-fun m!168895 () Bool)

(assert (=> d!44125 m!168895))

(assert (=> b!141027 m!166927))

(declare-fun m!168897 () Bool)

(assert (=> b!141027 m!168897))

(assert (=> b!141027 m!166927))

(assert (=> b!141027 m!168787))

(assert (=> b!141027 m!168787))

(declare-fun m!168899 () Bool)

(assert (=> b!141027 m!168899))

(assert (=> b!141029 m!166927))

(assert (=> b!141029 m!168787))

(assert (=> b!141029 m!168787))

(assert (=> b!141029 m!168899))

(assert (=> b!140039 d!44125))

(declare-fun d!44127 () Bool)

(assert (=> d!44127 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73986 () Unit!4387)

(assert (=> d!44127 (= lt!73986 (choose!864 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91917 () Bool)

(assert (=> d!44127 e!91917))

(declare-fun res!67347 () Bool)

(assert (=> d!44127 (=> (not res!67347) (not e!91917))))

(assert (=> d!44127 (= res!67347 (isStrictlySorted!312 (toList!858 lt!73184)))))

(assert (=> d!44127 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000) lt!73986)))

(declare-fun b!141030 () Bool)

(assert (=> b!141030 (= e!91917 (containsKey!180 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44127 res!67347) b!141030))

(assert (=> d!44127 m!167259))

(assert (=> d!44127 m!167259))

(assert (=> d!44127 m!167457))

(declare-fun m!168901 () Bool)

(assert (=> d!44127 m!168901))

(assert (=> d!44127 m!167537))

(assert (=> b!141030 m!167453))

(assert (=> b!140249 d!44127))

(assert (=> b!140249 d!43881))

(assert (=> b!140249 d!43883))

(assert (=> b!140242 d!43825))

(assert (=> b!140242 d!43827))

(declare-fun d!44129 () Bool)

(assert (=> d!44129 (= (get!1535 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3285 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43609 d!44129))

(assert (=> d!43609 d!43711))

(assert (=> d!43603 d!43697))

(assert (=> b!139927 d!43693))

(declare-fun d!44131 () Bool)

(declare-fun res!67348 () Bool)

(declare-fun e!91918 () Bool)

(assert (=> d!44131 (=> res!67348 e!91918)))

(assert (=> d!44131 (= res!67348 (and ((_ is Cons!1715) (toList!858 call!15472)) (= (_1!1322 (h!2322 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (=> d!44131 (= (containsKey!180 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) e!91918)))

(declare-fun b!141031 () Bool)

(declare-fun e!91919 () Bool)

(assert (=> b!141031 (= e!91918 e!91919)))

(declare-fun res!67349 () Bool)

(assert (=> b!141031 (=> (not res!67349) (not e!91919))))

(assert (=> b!141031 (= res!67349 (and (or (not ((_ is Cons!1715) (toList!858 call!15472))) (bvsle (_1!1322 (h!2322 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))) ((_ is Cons!1715) (toList!858 call!15472)) (bvslt (_1!1322 (h!2322 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(declare-fun b!141032 () Bool)

(assert (=> b!141032 (= e!91919 (containsKey!180 (t!6295 (toList!858 call!15472)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (= (and d!44131 (not res!67348)) b!141031))

(assert (= (and b!141031 res!67349) b!141032))

(assert (=> b!141032 m!166761))

(declare-fun m!168903 () Bool)

(assert (=> b!141032 m!168903))

(assert (=> d!43655 d!44131))

(declare-fun d!44133 () Bool)

(declare-fun e!91920 () Bool)

(assert (=> d!44133 e!91920))

(declare-fun res!67350 () Bool)

(assert (=> d!44133 (=> (not res!67350) (not e!91920))))

(declare-fun lt!73989 () ListLongMap!1685)

(assert (=> d!44133 (= res!67350 (contains!904 lt!73989 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!73988 () List!1719)

(assert (=> d!44133 (= lt!73989 (ListLongMap!1686 lt!73988))))

(declare-fun lt!73987 () Unit!4387)

(declare-fun lt!73990 () Unit!4387)

(assert (=> d!44133 (= lt!73987 lt!73990)))

(assert (=> d!44133 (= (getValueByKey!177 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44133 (= lt!73990 (lemmaContainsTupThenGetReturnValue!91 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44133 (= lt!73988 (insertStrictlySorted!94 (toList!858 call!15508) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44133 (= (+!173 call!15508 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73989)))

(declare-fun b!141033 () Bool)

(declare-fun res!67351 () Bool)

(assert (=> b!141033 (=> (not res!67351) (not e!91920))))

(assert (=> b!141033 (= res!67351 (= (getValueByKey!177 (toList!858 lt!73989) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!141034 () Bool)

(assert (=> b!141034 (= e!91920 (contains!907 (toList!858 lt!73989) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!44133 res!67350) b!141033))

(assert (= (and b!141033 res!67351) b!141034))

(declare-fun m!168905 () Bool)

(assert (=> d!44133 m!168905))

(declare-fun m!168907 () Bool)

(assert (=> d!44133 m!168907))

(declare-fun m!168909 () Bool)

(assert (=> d!44133 m!168909))

(declare-fun m!168911 () Bool)

(assert (=> d!44133 m!168911))

(declare-fun m!168913 () Bool)

(assert (=> b!141033 m!168913))

(declare-fun m!168915 () Bool)

(assert (=> b!141034 m!168915))

(assert (=> b!139944 d!44133))

(declare-fun d!44135 () Bool)

(declare-fun e!91921 () Bool)

(assert (=> d!44135 e!91921))

(declare-fun res!67352 () Bool)

(assert (=> d!44135 (=> res!67352 e!91921)))

(declare-fun lt!73994 () Bool)

(assert (=> d!44135 (= res!67352 (not lt!73994))))

(declare-fun lt!73991 () Bool)

(assert (=> d!44135 (= lt!73994 lt!73991)))

(declare-fun lt!73993 () Unit!4387)

(declare-fun e!91922 () Unit!4387)

(assert (=> d!44135 (= lt!73993 e!91922)))

(declare-fun c!26493 () Bool)

(assert (=> d!44135 (= c!26493 lt!73991)))

(assert (=> d!44135 (= lt!73991 (containsKey!180 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!44135 (= (contains!904 lt!73465 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73994)))

(declare-fun b!141035 () Bool)

(declare-fun lt!73992 () Unit!4387)

(assert (=> b!141035 (= e!91922 lt!73992)))

(assert (=> b!141035 (= lt!73992 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> b!141035 (isDefined!129 (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141036 () Bool)

(declare-fun Unit!4446 () Unit!4387)

(assert (=> b!141036 (= e!91922 Unit!4446)))

(declare-fun b!141037 () Bool)

(assert (=> b!141037 (= e!91921 (isDefined!129 (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44135 c!26493) b!141035))

(assert (= (and d!44135 (not c!26493)) b!141036))

(assert (= (and d!44135 (not res!67352)) b!141037))

(declare-fun m!168917 () Bool)

(assert (=> d!44135 m!168917))

(declare-fun m!168919 () Bool)

(assert (=> b!141035 m!168919))

(assert (=> b!141035 m!167363))

(assert (=> b!141035 m!167363))

(declare-fun m!168921 () Bool)

(assert (=> b!141035 m!168921))

(assert (=> b!141037 m!167363))

(assert (=> b!141037 m!167363))

(assert (=> b!141037 m!168921))

(assert (=> d!43647 d!44135))

(declare-fun b!141039 () Bool)

(declare-fun e!91923 () Option!183)

(declare-fun e!91924 () Option!183)

(assert (=> b!141039 (= e!91923 e!91924)))

(declare-fun c!26495 () Bool)

(assert (=> b!141039 (= c!26495 (and ((_ is Cons!1715) lt!73464) (not (= (_1!1322 (h!2322 lt!73464)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141040 () Bool)

(assert (=> b!141040 (= e!91924 (getValueByKey!177 (t!6295 lt!73464) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141038 () Bool)

(assert (=> b!141038 (= e!91923 (Some!182 (_2!1322 (h!2322 lt!73464))))))

(declare-fun b!141041 () Bool)

(assert (=> b!141041 (= e!91924 None!181)))

(declare-fun c!26494 () Bool)

(declare-fun d!44137 () Bool)

(assert (=> d!44137 (= c!26494 (and ((_ is Cons!1715) lt!73464) (= (_1!1322 (h!2322 lt!73464)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44137 (= (getValueByKey!177 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91923)))

(assert (= (and d!44137 c!26494) b!141038))

(assert (= (and d!44137 (not c!26494)) b!141039))

(assert (= (and b!141039 c!26495) b!141040))

(assert (= (and b!141039 (not c!26495)) b!141041))

(declare-fun m!168923 () Bool)

(assert (=> b!141040 m!168923))

(assert (=> d!43647 d!44137))

(declare-fun d!44139 () Bool)

(assert (=> d!44139 (= (getValueByKey!177 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!73995 () Unit!4387)

(assert (=> d!44139 (= lt!73995 (choose!873 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!91925 () Bool)

(assert (=> d!44139 e!91925))

(declare-fun res!67353 () Bool)

(assert (=> d!44139 (=> (not res!67353) (not e!91925))))

(assert (=> d!44139 (= res!67353 (isStrictlySorted!312 lt!73464))))

(assert (=> d!44139 (= (lemmaContainsTupThenGetReturnValue!91 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73995)))

(declare-fun b!141042 () Bool)

(declare-fun res!67354 () Bool)

(assert (=> b!141042 (=> (not res!67354) (not e!91925))))

(assert (=> b!141042 (= res!67354 (containsKey!180 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141043 () Bool)

(assert (=> b!141043 (= e!91925 (contains!907 lt!73464 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44139 res!67353) b!141042))

(assert (= (and b!141042 res!67354) b!141043))

(assert (=> d!44139 m!167357))

(declare-fun m!168925 () Bool)

(assert (=> d!44139 m!168925))

(declare-fun m!168927 () Bool)

(assert (=> d!44139 m!168927))

(declare-fun m!168929 () Bool)

(assert (=> b!141042 m!168929))

(declare-fun m!168931 () Bool)

(assert (=> b!141043 m!168931))

(assert (=> d!43647 d!44139))

(declare-fun bm!15650 () Bool)

(declare-fun call!15655 () List!1719)

(declare-fun call!15654 () List!1719)

(assert (=> bm!15650 (= call!15655 call!15654)))

(declare-fun b!141045 () Bool)

(declare-fun e!91927 () List!1719)

(declare-fun e!91929 () List!1719)

(assert (=> b!141045 (= e!91927 e!91929)))

(declare-fun c!26499 () Bool)

(assert (=> b!141045 (= c!26499 (and ((_ is Cons!1715) (toList!858 lt!73187)) (= (_1!1322 (h!2322 (toList!858 lt!73187))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141046 () Bool)

(declare-fun res!67356 () Bool)

(declare-fun e!91926 () Bool)

(assert (=> b!141046 (=> (not res!67356) (not e!91926))))

(declare-fun lt!73996 () List!1719)

(assert (=> b!141046 (= res!67356 (containsKey!180 lt!73996 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141047 () Bool)

(declare-fun c!26497 () Bool)

(assert (=> b!141047 (= c!26497 (and ((_ is Cons!1715) (toList!858 lt!73187)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73187))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91928 () List!1719)

(assert (=> b!141047 (= e!91929 e!91928)))

(declare-fun bm!15651 () Bool)

(declare-fun call!15653 () List!1719)

(assert (=> bm!15651 (= call!15654 call!15653)))

(declare-fun b!141048 () Bool)

(assert (=> b!141048 (= e!91929 call!15654)))

(declare-fun b!141049 () Bool)

(assert (=> b!141049 (= e!91927 call!15653)))

(declare-fun b!141050 () Bool)

(assert (=> b!141050 (= e!91926 (contains!907 lt!73996 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!91930 () List!1719)

(declare-fun b!141044 () Bool)

(assert (=> b!141044 (= e!91930 (ite c!26499 (t!6295 (toList!858 lt!73187)) (ite c!26497 (Cons!1715 (h!2322 (toList!858 lt!73187)) (t!6295 (toList!858 lt!73187))) Nil!1716)))))

(declare-fun d!44141 () Bool)

(assert (=> d!44141 e!91926))

(declare-fun res!67355 () Bool)

(assert (=> d!44141 (=> (not res!67355) (not e!91926))))

(assert (=> d!44141 (= res!67355 (isStrictlySorted!312 lt!73996))))

(assert (=> d!44141 (= lt!73996 e!91927)))

(declare-fun c!26498 () Bool)

(assert (=> d!44141 (= c!26498 (and ((_ is Cons!1715) (toList!858 lt!73187)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73187))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44141 (isStrictlySorted!312 (toList!858 lt!73187))))

(assert (=> d!44141 (= (insertStrictlySorted!94 (toList!858 lt!73187) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73996)))

(declare-fun b!141051 () Bool)

(assert (=> b!141051 (= e!91928 call!15655)))

(declare-fun b!141052 () Bool)

(assert (=> b!141052 (= e!91928 call!15655)))

(declare-fun bm!15652 () Bool)

(assert (=> bm!15652 (= call!15653 ($colon$colon!93 e!91930 (ite c!26498 (h!2322 (toList!858 lt!73187)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26496 () Bool)

(assert (=> bm!15652 (= c!26496 c!26498)))

(declare-fun b!141053 () Bool)

(assert (=> b!141053 (= e!91930 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73187)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44141 c!26498) b!141049))

(assert (= (and d!44141 (not c!26498)) b!141045))

(assert (= (and b!141045 c!26499) b!141048))

(assert (= (and b!141045 (not c!26499)) b!141047))

(assert (= (and b!141047 c!26497) b!141051))

(assert (= (and b!141047 (not c!26497)) b!141052))

(assert (= (or b!141051 b!141052) bm!15650))

(assert (= (or b!141048 bm!15650) bm!15651))

(assert (= (or b!141049 bm!15651) bm!15652))

(assert (= (and bm!15652 c!26496) b!141053))

(assert (= (and bm!15652 (not c!26496)) b!141044))

(assert (= (and d!44141 res!67355) b!141046))

(assert (= (and b!141046 res!67356) b!141050))

(declare-fun m!168933 () Bool)

(assert (=> bm!15652 m!168933))

(declare-fun m!168935 () Bool)

(assert (=> d!44141 m!168935))

(declare-fun m!168937 () Bool)

(assert (=> d!44141 m!168937))

(declare-fun m!168939 () Bool)

(assert (=> b!141046 m!168939))

(declare-fun m!168941 () Bool)

(assert (=> b!141053 m!168941))

(declare-fun m!168943 () Bool)

(assert (=> b!141050 m!168943))

(assert (=> d!43647 d!44141))

(declare-fun d!44143 () Bool)

(assert (=> d!44143 (= (apply!120 lt!73237 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5905 () Bool)

(assert (= bs!5905 d!44143))

(assert (=> bs!5905 m!166927))

(declare-fun m!168945 () Bool)

(assert (=> bs!5905 m!168945))

(assert (=> bs!5905 m!168945))

(declare-fun m!168947 () Bool)

(assert (=> bs!5905 m!168947))

(assert (=> b!139956 d!44143))

(declare-fun d!44145 () Bool)

(declare-fun c!26500 () Bool)

(assert (=> d!44145 (= c!26500 ((_ is ValueCellFull!1121) (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91931 () V!3553)

(assert (=> d!44145 (= (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91931)))

(declare-fun b!141054 () Bool)

(assert (=> b!141054 (= e!91931 (get!1533 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141055 () Bool)

(assert (=> b!141055 (= e!91931 (get!1534 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44145 c!26500) b!141054))

(assert (= (and d!44145 (not c!26500)) b!141055))

(assert (=> b!141054 m!167015))

(assert (=> b!141054 m!166963))

(declare-fun m!168949 () Bool)

(assert (=> b!141054 m!168949))

(assert (=> b!141055 m!167015))

(assert (=> b!141055 m!166963))

(declare-fun m!168951 () Bool)

(assert (=> b!141055 m!168951))

(assert (=> b!139956 d!44145))

(declare-fun d!44147 () Bool)

(declare-fun e!91932 () Bool)

(assert (=> d!44147 e!91932))

(declare-fun res!67357 () Bool)

(assert (=> d!44147 (=> (not res!67357) (not e!91932))))

(declare-fun lt!73999 () ListLongMap!1685)

(assert (=> d!44147 (= res!67357 (contains!904 lt!73999 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!73998 () List!1719)

(assert (=> d!44147 (= lt!73999 (ListLongMap!1686 lt!73998))))

(declare-fun lt!73997 () Unit!4387)

(declare-fun lt!74000 () Unit!4387)

(assert (=> d!44147 (= lt!73997 lt!74000)))

(assert (=> d!44147 (= (getValueByKey!177 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44147 (= lt!74000 (lemmaContainsTupThenGetReturnValue!91 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44147 (= lt!73998 (insertStrictlySorted!94 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44147 (= (+!173 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!73999)))

(declare-fun b!141056 () Bool)

(declare-fun res!67358 () Bool)

(assert (=> b!141056 (=> (not res!67358) (not e!91932))))

(assert (=> b!141056 (= res!67358 (= (getValueByKey!177 (toList!858 lt!73999) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141057 () Bool)

(assert (=> b!141057 (= e!91932 (contains!907 (toList!858 lt!73999) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44147 res!67357) b!141056))

(assert (= (and b!141056 res!67358) b!141057))

(declare-fun m!168953 () Bool)

(assert (=> d!44147 m!168953))

(declare-fun m!168955 () Bool)

(assert (=> d!44147 m!168955))

(declare-fun m!168957 () Bool)

(assert (=> d!44147 m!168957))

(declare-fun m!168959 () Bool)

(assert (=> d!44147 m!168959))

(declare-fun m!168961 () Bool)

(assert (=> b!141056 m!168961))

(declare-fun m!168963 () Bool)

(assert (=> b!141057 m!168963))

(assert (=> bm!15521 d!44147))

(declare-fun d!44149 () Bool)

(assert (=> d!44149 (= (get!1535 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43617 d!44149))

(assert (=> d!43617 d!43883))

(declare-fun d!44151 () Bool)

(declare-fun e!91933 () Bool)

(assert (=> d!44151 e!91933))

(declare-fun res!67359 () Bool)

(assert (=> d!44151 (=> res!67359 e!91933)))

(declare-fun lt!74004 () Bool)

(assert (=> d!44151 (= res!67359 (not lt!74004))))

(declare-fun lt!74001 () Bool)

(assert (=> d!44151 (= lt!74004 lt!74001)))

(declare-fun lt!74003 () Unit!4387)

(declare-fun e!91934 () Unit!4387)

(assert (=> d!44151 (= lt!74003 e!91934)))

(declare-fun c!26501 () Bool)

(assert (=> d!44151 (= c!26501 lt!74001)))

(assert (=> d!44151 (= lt!74001 (containsKey!180 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44151 (= (contains!904 lt!73237 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74004)))

(declare-fun b!141058 () Bool)

(declare-fun lt!74002 () Unit!4387)

(assert (=> b!141058 (= e!91934 lt!74002)))

(assert (=> b!141058 (= lt!74002 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141058 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141059 () Bool)

(declare-fun Unit!4447 () Unit!4387)

(assert (=> b!141059 (= e!91934 Unit!4447)))

(declare-fun b!141060 () Bool)

(assert (=> b!141060 (= e!91933 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44151 c!26501) b!141058))

(assert (= (and d!44151 (not c!26501)) b!141059))

(assert (= (and d!44151 (not res!67359)) b!141060))

(assert (=> d!44151 m!166927))

(declare-fun m!168965 () Bool)

(assert (=> d!44151 m!168965))

(assert (=> b!141058 m!166927))

(declare-fun m!168967 () Bool)

(assert (=> b!141058 m!168967))

(assert (=> b!141058 m!166927))

(assert (=> b!141058 m!168945))

(assert (=> b!141058 m!168945))

(declare-fun m!168969 () Bool)

(assert (=> b!141058 m!168969))

(assert (=> b!141060 m!166927))

(assert (=> b!141060 m!168945))

(assert (=> b!141060 m!168945))

(assert (=> b!141060 m!168969))

(assert (=> b!139952 d!44151))

(declare-fun b!141062 () Bool)

(declare-fun res!67360 () Bool)

(declare-fun e!91935 () Bool)

(assert (=> b!141062 (=> (not res!67360) (not e!91935))))

(assert (=> b!141062 (= res!67360 (bvsge (size!2584 (v!3279 (underlying!479 thiss!992))) (_size!624 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun d!44153 () Bool)

(declare-fun res!67362 () Bool)

(assert (=> d!44153 (=> (not res!67362) (not e!91935))))

(assert (=> d!44153 (= res!67362 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992)))))))

(assert (=> d!44153 (= (simpleValid!96 (v!3279 (underlying!479 thiss!992))) e!91935)))

(declare-fun b!141063 () Bool)

(declare-fun res!67361 () Bool)

(assert (=> b!141063 (=> (not res!67361) (not e!91935))))

(assert (=> b!141063 (= res!67361 (= (size!2584 (v!3279 (underlying!479 thiss!992))) (bvadd (_size!624 (v!3279 (underlying!479 thiss!992))) (bvsdiv (bvadd (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!141061 () Bool)

(declare-fun res!67363 () Bool)

(assert (=> b!141061 (=> (not res!67363) (not e!91935))))

(assert (=> b!141061 (= res!67363 (and (= (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001)) (= (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992))))) (bvsge (_size!624 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!624 (v!3279 (underlying!479 thiss!992))) (bvadd (mask!7279 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!141064 () Bool)

(assert (=> b!141064 (= e!91935 (and (bvsge (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!624 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!44153 res!67362) b!141061))

(assert (= (and b!141061 res!67363) b!141062))

(assert (= (and b!141062 res!67360) b!141063))

(assert (= (and b!141063 res!67361) b!141064))

(declare-fun m!168971 () Bool)

(assert (=> b!141062 m!168971))

(assert (=> d!44153 m!166839))

(assert (=> b!141063 m!168971))

(assert (=> d!43667 d!44153))

(declare-fun d!44155 () Bool)

(declare-fun res!67364 () Bool)

(declare-fun e!91936 () Bool)

(assert (=> d!44155 (=> res!67364 e!91936)))

(assert (=> d!44155 (= res!67364 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73005))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!44155 (= (containsKey!180 (t!6295 (toList!858 lt!73005)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!91936)))

(declare-fun b!141065 () Bool)

(declare-fun e!91937 () Bool)

(assert (=> b!141065 (= e!91936 e!91937)))

(declare-fun res!67365 () Bool)

(assert (=> b!141065 (=> (not res!67365) (not e!91937))))

(assert (=> b!141065 (= res!67365 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 lt!73005)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (t!6295 (toList!858 lt!73005))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!141066 () Bool)

(assert (=> b!141066 (= e!91937 (containsKey!180 (t!6295 (t!6295 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!44155 (not res!67364)) b!141065))

(assert (= (and b!141065 res!67365) b!141066))

(assert (=> b!141066 m!166633))

(declare-fun m!168973 () Bool)

(assert (=> b!141066 m!168973))

(assert (=> b!140121 d!44155))

(declare-fun d!44157 () Bool)

(declare-fun res!67366 () Bool)

(declare-fun e!91938 () Bool)

(assert (=> d!44157 (=> res!67366 e!91938)))

(assert (=> d!44157 (= res!67366 (and ((_ is Cons!1715) (toList!858 lt!73184)) (= (_1!1322 (h!2322 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44157 (= (containsKey!180 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91938)))

(declare-fun b!141067 () Bool)

(declare-fun e!91939 () Bool)

(assert (=> b!141067 (= e!91938 e!91939)))

(declare-fun res!67367 () Bool)

(assert (=> b!141067 (=> (not res!67367) (not e!91939))))

(assert (=> b!141067 (= res!67367 (and (or (not ((_ is Cons!1715) (toList!858 lt!73184))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1715) (toList!858 lt!73184)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!141068 () Bool)

(assert (=> b!141068 (= e!91939 (containsKey!180 (t!6295 (toList!858 lt!73184)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44157 (not res!67366)) b!141067))

(assert (= (and b!141067 res!67367) b!141068))

(assert (=> b!141068 m!166833))

(declare-fun m!168975 () Bool)

(assert (=> b!141068 m!168975))

(assert (=> d!43675 d!44157))

(declare-fun d!44159 () Bool)

(assert (=> d!44159 (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))

(assert (=> d!44159 true))

(declare-fun _$16!158 () Unit!4387)

(assert (=> d!44159 (= (choose!868 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3256 lt!73122) (defaultEntry!2939 newMap!16)) _$16!158)))

(declare-fun bs!5906 () Bool)

(assert (= bs!5906 d!44159))

(assert (=> bs!5906 m!167397))

(assert (=> bs!5906 m!166761))

(assert (=> bs!5906 m!167397))

(assert (=> bs!5906 m!166761))

(assert (=> bs!5906 m!167399))

(assert (=> d!43657 d!44159))

(assert (=> d!43657 d!43697))

(assert (=> d!43565 d!43697))

(assert (=> b!139990 d!43975))

(assert (=> b!139990 d!43977))

(declare-fun d!44161 () Bool)

(assert (=> d!44161 (= (apply!120 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) lt!73248) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!73248)))))

(declare-fun bs!5907 () Bool)

(assert (= bs!5907 d!44161))

(declare-fun m!168977 () Bool)

(assert (=> bs!5907 m!168977))

(assert (=> bs!5907 m!168977))

(declare-fun m!168979 () Bool)

(assert (=> bs!5907 m!168979))

(assert (=> b!139958 d!44161))

(declare-fun d!44163 () Bool)

(declare-fun e!91940 () Bool)

(assert (=> d!44163 e!91940))

(declare-fun res!67368 () Bool)

(assert (=> d!44163 (=> (not res!67368) (not e!91940))))

(declare-fun lt!74007 () ListLongMap!1685)

(assert (=> d!44163 (= res!67368 (contains!904 lt!74007 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74006 () List!1719)

(assert (=> d!44163 (= lt!74007 (ListLongMap!1686 lt!74006))))

(declare-fun lt!74005 () Unit!4387)

(declare-fun lt!74008 () Unit!4387)

(assert (=> d!44163 (= lt!74005 lt!74008)))

(assert (=> d!44163 (= (getValueByKey!177 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44163 (= lt!74008 (lemmaContainsTupThenGetReturnValue!91 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44163 (= lt!74006 (insertStrictlySorted!94 (toList!858 lt!73241) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44163 (= (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) lt!74007)))

(declare-fun b!141069 () Bool)

(declare-fun res!67369 () Bool)

(assert (=> b!141069 (=> (not res!67369) (not e!91940))))

(assert (=> b!141069 (= res!67369 (= (getValueByKey!177 (toList!858 lt!74007) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141070 () Bool)

(assert (=> b!141070 (= e!91940 (contains!907 (toList!858 lt!74007) (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44163 res!67368) b!141069))

(assert (= (and b!141069 res!67369) b!141070))

(declare-fun m!168981 () Bool)

(assert (=> d!44163 m!168981))

(declare-fun m!168983 () Bool)

(assert (=> d!44163 m!168983))

(declare-fun m!168985 () Bool)

(assert (=> d!44163 m!168985))

(declare-fun m!168987 () Bool)

(assert (=> d!44163 m!168987))

(declare-fun m!168989 () Bool)

(assert (=> b!141069 m!168989))

(declare-fun m!168991 () Bool)

(assert (=> b!141070 m!168991))

(assert (=> b!139958 d!44163))

(declare-fun d!44165 () Bool)

(assert (=> d!44165 (= (apply!120 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) lt!73238) (apply!120 lt!73240 lt!73238))))

(declare-fun lt!74009 () Unit!4387)

(assert (=> d!44165 (= lt!74009 (choose!867 lt!73240 lt!73250 (zeroValue!2789 newMap!16) lt!73238))))

(declare-fun e!91941 () Bool)

(assert (=> d!44165 e!91941))

(declare-fun res!67370 () Bool)

(assert (=> d!44165 (=> (not res!67370) (not e!91941))))

(assert (=> d!44165 (= res!67370 (contains!904 lt!73240 lt!73238))))

(assert (=> d!44165 (= (addApplyDifferent!96 lt!73240 lt!73250 (zeroValue!2789 newMap!16) lt!73238) lt!74009)))

(declare-fun b!141071 () Bool)

(assert (=> b!141071 (= e!91941 (not (= lt!73238 lt!73250)))))

(assert (= (and d!44165 res!67370) b!141071))

(assert (=> d!44165 m!167001))

(declare-fun m!168993 () Bool)

(assert (=> d!44165 m!168993))

(assert (=> d!44165 m!166981))

(assert (=> d!44165 m!167003))

(declare-fun m!168995 () Bool)

(assert (=> d!44165 m!168995))

(assert (=> d!44165 m!166981))

(assert (=> b!139958 d!44165))

(declare-fun d!44167 () Bool)

(declare-fun e!91942 () Bool)

(assert (=> d!44167 e!91942))

(declare-fun res!67371 () Bool)

(assert (=> d!44167 (=> (not res!67371) (not e!91942))))

(declare-fun lt!74012 () ListLongMap!1685)

(assert (=> d!44167 (= res!67371 (contains!904 lt!74012 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74011 () List!1719)

(assert (=> d!44167 (= lt!74012 (ListLongMap!1686 lt!74011))))

(declare-fun lt!74010 () Unit!4387)

(declare-fun lt!74013 () Unit!4387)

(assert (=> d!44167 (= lt!74010 lt!74013)))

(assert (=> d!44167 (= (getValueByKey!177 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44167 (= lt!74013 (lemmaContainsTupThenGetReturnValue!91 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44167 (= lt!74011 (insertStrictlySorted!94 (toList!858 lt!73240) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44167 (= (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) lt!74012)))

(declare-fun b!141072 () Bool)

(declare-fun res!67372 () Bool)

(assert (=> b!141072 (=> (not res!67372) (not e!91942))))

(assert (=> b!141072 (= res!67372 (= (getValueByKey!177 (toList!858 lt!74012) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141073 () Bool)

(assert (=> b!141073 (= e!91942 (contains!907 (toList!858 lt!74012) (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44167 res!67371) b!141072))

(assert (= (and b!141072 res!67372) b!141073))

(declare-fun m!168997 () Bool)

(assert (=> d!44167 m!168997))

(declare-fun m!168999 () Bool)

(assert (=> d!44167 m!168999))

(declare-fun m!169001 () Bool)

(assert (=> d!44167 m!169001))

(declare-fun m!169003 () Bool)

(assert (=> d!44167 m!169003))

(declare-fun m!169005 () Bool)

(assert (=> b!141072 m!169005))

(declare-fun m!169007 () Bool)

(assert (=> b!141073 m!169007))

(assert (=> b!139958 d!44167))

(declare-fun d!44169 () Bool)

(assert (=> d!44169 (= (apply!120 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) lt!73255) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!73255)))))

(declare-fun bs!5908 () Bool)

(assert (= bs!5908 d!44169))

(declare-fun m!169009 () Bool)

(assert (=> bs!5908 m!169009))

(assert (=> bs!5908 m!169009))

(declare-fun m!169011 () Bool)

(assert (=> bs!5908 m!169011))

(assert (=> b!139958 d!44169))

(declare-fun d!44171 () Bool)

(assert (=> d!44171 (= (apply!120 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) lt!73255) (apply!120 lt!73256 lt!73255))))

(declare-fun lt!74014 () Unit!4387)

(assert (=> d!44171 (= lt!74014 (choose!867 lt!73256 lt!73252 (minValue!2789 newMap!16) lt!73255))))

(declare-fun e!91943 () Bool)

(assert (=> d!44171 e!91943))

(declare-fun res!67373 () Bool)

(assert (=> d!44171 (=> (not res!67373) (not e!91943))))

(assert (=> d!44171 (= res!67373 (contains!904 lt!73256 lt!73255))))

(assert (=> d!44171 (= (addApplyDifferent!96 lt!73256 lt!73252 (minValue!2789 newMap!16) lt!73255) lt!74014)))

(declare-fun b!141074 () Bool)

(assert (=> b!141074 (= e!91943 (not (= lt!73255 lt!73252)))))

(assert (= (and d!44171 res!67373) b!141074))

(assert (=> d!44171 m!166991))

(declare-fun m!169013 () Bool)

(assert (=> d!44171 m!169013))

(assert (=> d!44171 m!166993))

(assert (=> d!44171 m!166995))

(declare-fun m!169015 () Bool)

(assert (=> d!44171 m!169015))

(assert (=> d!44171 m!166993))

(assert (=> b!139958 d!44171))

(declare-fun d!44173 () Bool)

(declare-fun e!91944 () Bool)

(assert (=> d!44173 e!91944))

(declare-fun res!67374 () Bool)

(assert (=> d!44173 (=> (not res!67374) (not e!91944))))

(declare-fun lt!74017 () ListLongMap!1685)

(assert (=> d!44173 (= res!67374 (contains!904 lt!74017 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun lt!74016 () List!1719)

(assert (=> d!44173 (= lt!74017 (ListLongMap!1686 lt!74016))))

(declare-fun lt!74015 () Unit!4387)

(declare-fun lt!74018 () Unit!4387)

(assert (=> d!44173 (= lt!74015 lt!74018)))

(assert (=> d!44173 (= (getValueByKey!177 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(assert (=> d!44173 (= lt!74018 (lemmaContainsTupThenGetReturnValue!91 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(assert (=> d!44173 (= lt!74016 (insertStrictlySorted!94 (toList!858 lt!73253) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(assert (=> d!44173 (= (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) lt!74017)))

(declare-fun b!141075 () Bool)

(declare-fun res!67375 () Bool)

(assert (=> b!141075 (=> (not res!67375) (not e!91944))))

(assert (=> b!141075 (= res!67375 (= (getValueByKey!177 (toList!858 lt!74017) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(declare-fun b!141076 () Bool)

(assert (=> b!141076 (= e!91944 (contains!907 (toList!858 lt!74017) (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))

(assert (= (and d!44173 res!67374) b!141075))

(assert (= (and b!141075 res!67375) b!141076))

(declare-fun m!169017 () Bool)

(assert (=> d!44173 m!169017))

(declare-fun m!169019 () Bool)

(assert (=> d!44173 m!169019))

(declare-fun m!169021 () Bool)

(assert (=> d!44173 m!169021))

(declare-fun m!169023 () Bool)

(assert (=> d!44173 m!169023))

(declare-fun m!169025 () Bool)

(assert (=> b!141075 m!169025))

(declare-fun m!169027 () Bool)

(assert (=> b!141076 m!169027))

(assert (=> b!139958 d!44173))

(declare-fun d!44175 () Bool)

(declare-fun e!91945 () Bool)

(assert (=> d!44175 e!91945))

(declare-fun res!67376 () Bool)

(assert (=> d!44175 (=> (not res!67376) (not e!91945))))

(declare-fun lt!74021 () ListLongMap!1685)

(assert (=> d!44175 (= res!67376 (contains!904 lt!74021 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun lt!74020 () List!1719)

(assert (=> d!44175 (= lt!74021 (ListLongMap!1686 lt!74020))))

(declare-fun lt!74019 () Unit!4387)

(declare-fun lt!74022 () Unit!4387)

(assert (=> d!44175 (= lt!74019 lt!74022)))

(assert (=> d!44175 (= (getValueByKey!177 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(assert (=> d!44175 (= lt!74022 (lemmaContainsTupThenGetReturnValue!91 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(assert (=> d!44175 (= lt!74020 (insertStrictlySorted!94 (toList!858 lt!73256) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(assert (=> d!44175 (= (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) lt!74021)))

(declare-fun b!141077 () Bool)

(declare-fun res!67377 () Bool)

(assert (=> b!141077 (=> (not res!67377) (not e!91945))))

(assert (=> b!141077 (= res!67377 (= (getValueByKey!177 (toList!858 lt!74021) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(declare-fun b!141078 () Bool)

(assert (=> b!141078 (= e!91945 (contains!907 (toList!858 lt!74021) (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))

(assert (= (and d!44175 res!67376) b!141077))

(assert (= (and b!141077 res!67377) b!141078))

(declare-fun m!169029 () Bool)

(assert (=> d!44175 m!169029))

(declare-fun m!169031 () Bool)

(assert (=> d!44175 m!169031))

(declare-fun m!169033 () Bool)

(assert (=> d!44175 m!169033))

(declare-fun m!169035 () Bool)

(assert (=> d!44175 m!169035))

(declare-fun m!169037 () Bool)

(assert (=> b!141077 m!169037))

(declare-fun m!169039 () Bool)

(assert (=> b!141078 m!169039))

(assert (=> b!139958 d!44175))

(declare-fun d!44177 () Bool)

(assert (=> d!44177 (= (apply!120 lt!73240 lt!73238) (get!1535 (getValueByKey!177 (toList!858 lt!73240) lt!73238)))))

(declare-fun bs!5909 () Bool)

(assert (= bs!5909 d!44177))

(declare-fun m!169041 () Bool)

(assert (=> bs!5909 m!169041))

(assert (=> bs!5909 m!169041))

(declare-fun m!169043 () Bool)

(assert (=> bs!5909 m!169043))

(assert (=> b!139958 d!44177))

(declare-fun d!44179 () Bool)

(assert (=> d!44179 (= (apply!120 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) lt!73248) (apply!120 lt!73253 lt!73248))))

(declare-fun lt!74023 () Unit!4387)

(assert (=> d!44179 (= lt!74023 (choose!867 lt!73253 lt!73242 (minValue!2789 newMap!16) lt!73248))))

(declare-fun e!91946 () Bool)

(assert (=> d!44179 e!91946))

(declare-fun res!67378 () Bool)

(assert (=> d!44179 (=> (not res!67378) (not e!91946))))

(assert (=> d!44179 (= res!67378 (contains!904 lt!73253 lt!73248))))

(assert (=> d!44179 (= (addApplyDifferent!96 lt!73253 lt!73242 (minValue!2789 newMap!16) lt!73248) lt!74023)))

(declare-fun b!141079 () Bool)

(assert (=> b!141079 (= e!91946 (not (= lt!73248 lt!73242)))))

(assert (= (and d!44179 res!67378) b!141079))

(assert (=> d!44179 m!166997))

(declare-fun m!169045 () Bool)

(assert (=> d!44179 m!169045))

(assert (=> d!44179 m!166975))

(assert (=> d!44179 m!166977))

(declare-fun m!169047 () Bool)

(assert (=> d!44179 m!169047))

(assert (=> d!44179 m!166975))

(assert (=> b!139958 d!44179))

(declare-fun d!44181 () Bool)

(assert (=> d!44181 (= (apply!120 lt!73256 lt!73255) (get!1535 (getValueByKey!177 (toList!858 lt!73256) lt!73255)))))

(declare-fun bs!5910 () Bool)

(assert (= bs!5910 d!44181))

(declare-fun m!169049 () Bool)

(assert (=> bs!5910 m!169049))

(assert (=> bs!5910 m!169049))

(declare-fun m!169051 () Bool)

(assert (=> bs!5910 m!169051))

(assert (=> b!139958 d!44181))

(declare-fun d!44183 () Bool)

(assert (=> d!44183 (= (apply!120 lt!73253 lt!73248) (get!1535 (getValueByKey!177 (toList!858 lt!73253) lt!73248)))))

(declare-fun bs!5911 () Bool)

(assert (= bs!5911 d!44183))

(declare-fun m!169053 () Bool)

(assert (=> bs!5911 m!169053))

(assert (=> bs!5911 m!169053))

(declare-fun m!169055 () Bool)

(assert (=> bs!5911 m!169055))

(assert (=> b!139958 d!44183))

(declare-fun d!44185 () Bool)

(assert (=> d!44185 (contains!904 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) lt!73247)))

(declare-fun lt!74024 () Unit!4387)

(assert (=> d!44185 (= lt!74024 (choose!866 lt!73241 lt!73243 (zeroValue!2789 newMap!16) lt!73247))))

(assert (=> d!44185 (contains!904 lt!73241 lt!73247)))

(assert (=> d!44185 (= (addStillContains!96 lt!73241 lt!73243 (zeroValue!2789 newMap!16) lt!73247) lt!74024)))

(declare-fun bs!5912 () Bool)

(assert (= bs!5912 d!44185))

(assert (=> bs!5912 m!166987))

(assert (=> bs!5912 m!166987))

(assert (=> bs!5912 m!166989))

(declare-fun m!169057 () Bool)

(assert (=> bs!5912 m!169057))

(declare-fun m!169059 () Bool)

(assert (=> bs!5912 m!169059))

(assert (=> b!139958 d!44185))

(declare-fun d!44187 () Bool)

(declare-fun e!91947 () Bool)

(assert (=> d!44187 e!91947))

(declare-fun res!67379 () Bool)

(assert (=> d!44187 (=> res!67379 e!91947)))

(declare-fun lt!74028 () Bool)

(assert (=> d!44187 (= res!67379 (not lt!74028))))

(declare-fun lt!74025 () Bool)

(assert (=> d!44187 (= lt!74028 lt!74025)))

(declare-fun lt!74027 () Unit!4387)

(declare-fun e!91948 () Unit!4387)

(assert (=> d!44187 (= lt!74027 e!91948)))

(declare-fun c!26502 () Bool)

(assert (=> d!44187 (= c!26502 lt!74025)))

(assert (=> d!44187 (= lt!74025 (containsKey!180 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))

(assert (=> d!44187 (= (contains!904 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) lt!73247) lt!74028)))

(declare-fun b!141080 () Bool)

(declare-fun lt!74026 () Unit!4387)

(assert (=> b!141080 (= e!91948 lt!74026)))

(assert (=> b!141080 (= lt!74026 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))

(assert (=> b!141080 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))

(declare-fun b!141081 () Bool)

(declare-fun Unit!4448 () Unit!4387)

(assert (=> b!141081 (= e!91948 Unit!4448)))

(declare-fun b!141082 () Bool)

(assert (=> b!141082 (= e!91947 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247)))))

(assert (= (and d!44187 c!26502) b!141080))

(assert (= (and d!44187 (not c!26502)) b!141081))

(assert (= (and d!44187 (not res!67379)) b!141082))

(declare-fun m!169061 () Bool)

(assert (=> d!44187 m!169061))

(declare-fun m!169063 () Bool)

(assert (=> b!141080 m!169063))

(declare-fun m!169065 () Bool)

(assert (=> b!141080 m!169065))

(assert (=> b!141080 m!169065))

(declare-fun m!169067 () Bool)

(assert (=> b!141080 m!169067))

(assert (=> b!141082 m!169065))

(assert (=> b!141082 m!169065))

(assert (=> b!141082 m!169067))

(assert (=> b!139958 d!44187))

(declare-fun d!44189 () Bool)

(assert (=> d!44189 (= (apply!120 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) lt!73238) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!73238)))))

(declare-fun bs!5913 () Bool)

(assert (= bs!5913 d!44189))

(declare-fun m!169069 () Bool)

(assert (=> bs!5913 m!169069))

(assert (=> bs!5913 m!169069))

(declare-fun m!169071 () Bool)

(assert (=> bs!5913 m!169071))

(assert (=> b!139958 d!44189))

(assert (=> b!139958 d!43769))

(declare-fun lt!74029 () Bool)

(declare-fun d!44191 () Bool)

(assert (=> d!44191 (= lt!74029 (select (content!139 (toList!858 lt!73460)) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!91949 () Bool)

(assert (=> d!44191 (= lt!74029 e!91949)))

(declare-fun res!67380 () Bool)

(assert (=> d!44191 (=> (not res!67380) (not e!91949))))

(assert (=> d!44191 (= res!67380 ((_ is Cons!1715) (toList!858 lt!73460)))))

(assert (=> d!44191 (= (contains!907 (toList!858 lt!73460) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!74029)))

(declare-fun b!141083 () Bool)

(declare-fun e!91950 () Bool)

(assert (=> b!141083 (= e!91949 e!91950)))

(declare-fun res!67381 () Bool)

(assert (=> b!141083 (=> res!67381 e!91950)))

(assert (=> b!141083 (= res!67381 (= (h!2322 (toList!858 lt!73460)) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141084 () Bool)

(assert (=> b!141084 (= e!91950 (contains!907 (t!6295 (toList!858 lt!73460)) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!44191 res!67380) b!141083))

(assert (= (and b!141083 (not res!67381)) b!141084))

(declare-fun m!169073 () Bool)

(assert (=> d!44191 m!169073))

(declare-fun m!169075 () Bool)

(assert (=> d!44191 m!169075))

(declare-fun m!169077 () Bool)

(assert (=> b!141084 m!169077))

(assert (=> b!140169 d!44191))

(declare-fun bm!15653 () Bool)

(declare-fun call!15656 () Bool)

(declare-fun c!26503 () Bool)

(assert (=> bm!15653 (= call!15656 (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26503 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun b!141085 () Bool)

(declare-fun e!91951 () Bool)

(declare-fun e!91952 () Bool)

(assert (=> b!141085 (= e!91951 e!91952)))

(declare-fun res!67384 () Bool)

(assert (=> b!141085 (=> (not res!67384) (not e!91952))))

(declare-fun e!91954 () Bool)

(assert (=> b!141085 (= res!67384 (not e!91954))))

(declare-fun res!67382 () Bool)

(assert (=> b!141085 (=> (not res!67382) (not e!91954))))

(assert (=> b!141085 (= res!67382 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!141086 () Bool)

(declare-fun e!91953 () Bool)

(assert (=> b!141086 (= e!91953 call!15656)))

(declare-fun b!141087 () Bool)

(assert (=> b!141087 (= e!91952 e!91953)))

(assert (=> b!141087 (= c!26503 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun d!44193 () Bool)

(declare-fun res!67383 () Bool)

(assert (=> d!44193 (=> res!67383 e!91951)))

(assert (=> d!44193 (= res!67383 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!44193 (= (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73124)) #b00000000000000000000000000000000 Nil!1717) e!91951)))

(declare-fun b!141088 () Bool)

(assert (=> b!141088 (= e!91953 call!15656)))

(declare-fun b!141089 () Bool)

(assert (=> b!141089 (= e!91954 (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (= (and d!44193 (not res!67383)) b!141085))

(assert (= (and b!141085 res!67382) b!141089))

(assert (= (and b!141085 res!67384) b!141087))

(assert (= (and b!141087 c!26503) b!141086))

(assert (= (and b!141087 (not c!26503)) b!141088))

(assert (= (or b!141086 b!141088) bm!15653))

(assert (=> bm!15653 m!168391))

(declare-fun m!169079 () Bool)

(assert (=> bm!15653 m!169079))

(assert (=> b!141085 m!168391))

(assert (=> b!141085 m!168391))

(assert (=> b!141085 m!168393))

(assert (=> b!141087 m!168391))

(assert (=> b!141087 m!168391))

(assert (=> b!141087 m!168393))

(assert (=> b!141089 m!168391))

(assert (=> b!141089 m!168391))

(declare-fun m!169081 () Bool)

(assert (=> b!141089 m!169081))

(assert (=> b!139979 d!44193))

(declare-fun d!44195 () Bool)

(declare-fun lt!74030 () Bool)

(assert (=> d!44195 (= lt!74030 (select (content!139 (toList!858 lt!73275)) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!91955 () Bool)

(assert (=> d!44195 (= lt!74030 e!91955)))

(declare-fun res!67385 () Bool)

(assert (=> d!44195 (=> (not res!67385) (not e!91955))))

(assert (=> d!44195 (= res!67385 ((_ is Cons!1715) (toList!858 lt!73275)))))

(assert (=> d!44195 (= (contains!907 (toList!858 lt!73275) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74030)))

(declare-fun b!141090 () Bool)

(declare-fun e!91956 () Bool)

(assert (=> b!141090 (= e!91955 e!91956)))

(declare-fun res!67386 () Bool)

(assert (=> b!141090 (=> res!67386 e!91956)))

(assert (=> b!141090 (= res!67386 (= (h!2322 (toList!858 lt!73275)) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141091 () Bool)

(assert (=> b!141091 (= e!91956 (contains!907 (t!6295 (toList!858 lt!73275)) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44195 res!67385) b!141090))

(assert (= (and b!141090 (not res!67386)) b!141091))

(declare-fun m!169083 () Bool)

(assert (=> d!44195 m!169083))

(declare-fun m!169085 () Bool)

(assert (=> d!44195 m!169085))

(declare-fun m!169087 () Bool)

(assert (=> b!141091 m!169087))

(assert (=> b!139976 d!44195))

(assert (=> b!140113 d!43969))

(assert (=> b!140157 d!43581))

(assert (=> bm!15540 d!43779))

(assert (=> b!140101 d!43791))

(declare-fun d!44197 () Bool)

(declare-fun e!91957 () Bool)

(assert (=> d!44197 e!91957))

(declare-fun res!67387 () Bool)

(assert (=> d!44197 (=> (not res!67387) (not e!91957))))

(declare-fun lt!74033 () ListLongMap!1685)

(assert (=> d!44197 (= res!67387 (contains!904 lt!74033 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74032 () List!1719)

(assert (=> d!44197 (= lt!74033 (ListLongMap!1686 lt!74032))))

(declare-fun lt!74031 () Unit!4387)

(declare-fun lt!74034 () Unit!4387)

(assert (=> d!44197 (= lt!74031 lt!74034)))

(assert (=> d!44197 (= (getValueByKey!177 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44197 (= lt!74034 (lemmaContainsTupThenGetReturnValue!91 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44197 (= lt!74032 (insertStrictlySorted!94 (toList!858 (map!1429 newMap!16)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44197 (= (+!173 (map!1429 newMap!16) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74033)))

(declare-fun b!141092 () Bool)

(declare-fun res!67388 () Bool)

(assert (=> b!141092 (=> (not res!67388) (not e!91957))))

(assert (=> b!141092 (= res!67388 (= (getValueByKey!177 (toList!858 lt!74033) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141093 () Bool)

(assert (=> b!141093 (= e!91957 (contains!907 (toList!858 lt!74033) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44197 res!67387) b!141092))

(assert (= (and b!141092 res!67388) b!141093))

(declare-fun m!169089 () Bool)

(assert (=> d!44197 m!169089))

(declare-fun m!169091 () Bool)

(assert (=> d!44197 m!169091))

(declare-fun m!169093 () Bool)

(assert (=> d!44197 m!169093))

(declare-fun m!169095 () Bool)

(assert (=> d!44197 m!169095))

(declare-fun m!169097 () Bool)

(assert (=> b!141092 m!169097))

(declare-fun m!169099 () Bool)

(assert (=> b!141093 m!169099))

(assert (=> b!140101 d!44197))

(assert (=> b!140101 d!43555))

(declare-fun d!44199 () Bool)

(assert (=> d!44199 (= (isEmpty!423 (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not ((_ is Some!182) (getValueByKey!177 (toList!858 lt!73005) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(assert (=> d!43595 d!44199))

(declare-fun d!44201 () Bool)

(declare-fun res!67389 () Bool)

(declare-fun e!91958 () Bool)

(assert (=> d!44201 (=> res!67389 e!91958)))

(assert (=> d!44201 (= res!67389 (and ((_ is Cons!1715) (toList!858 lt!73184)) (= (_1!1322 (h!2322 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44201 (= (containsKey!180 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000) e!91958)))

(declare-fun b!141094 () Bool)

(declare-fun e!91959 () Bool)

(assert (=> b!141094 (= e!91958 e!91959)))

(declare-fun res!67390 () Bool)

(assert (=> b!141094 (=> (not res!67390) (not e!91959))))

(assert (=> b!141094 (= res!67390 (and (or (not ((_ is Cons!1715) (toList!858 lt!73184))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73184)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141095 () Bool)

(assert (=> b!141095 (= e!91959 (containsKey!180 (t!6295 (toList!858 lt!73184)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44201 (not res!67389)) b!141094))

(assert (= (and b!141094 res!67390) b!141095))

(declare-fun m!169101 () Bool)

(assert (=> b!141095 m!169101))

(assert (=> d!43593 d!44201))

(declare-fun lt!74035 () Bool)

(declare-fun d!44203 () Bool)

(assert (=> d!44203 (= lt!74035 (select (content!139 (toList!858 lt!73268)) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91960 () Bool)

(assert (=> d!44203 (= lt!74035 e!91960)))

(declare-fun res!67391 () Bool)

(assert (=> d!44203 (=> (not res!67391) (not e!91960))))

(assert (=> d!44203 (= res!67391 ((_ is Cons!1715) (toList!858 lt!73268)))))

(assert (=> d!44203 (= (contains!907 (toList!858 lt!73268) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74035)))

(declare-fun b!141096 () Bool)

(declare-fun e!91961 () Bool)

(assert (=> b!141096 (= e!91960 e!91961)))

(declare-fun res!67392 () Bool)

(assert (=> b!141096 (=> res!67392 e!91961)))

(assert (=> b!141096 (= res!67392 (= (h!2322 (toList!858 lt!73268)) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141097 () Bool)

(assert (=> b!141097 (= e!91961 (contains!907 (t!6295 (toList!858 lt!73268)) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44203 res!67391) b!141096))

(assert (= (and b!141096 (not res!67392)) b!141097))

(declare-fun m!169103 () Bool)

(assert (=> d!44203 m!169103))

(declare-fun m!169105 () Bool)

(assert (=> d!44203 m!169105))

(declare-fun m!169107 () Bool)

(assert (=> b!141097 m!169107))

(assert (=> b!139974 d!44203))

(declare-fun b!141099 () Bool)

(declare-fun e!91963 () Bool)

(assert (=> b!141099 (= e!91963 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4847 () Bool)

(declare-fun mapRes!4847 () Bool)

(declare-fun tp!11579 () Bool)

(declare-fun e!91962 () Bool)

(assert (=> mapNonEmpty!4847 (= mapRes!4847 (and tp!11579 e!91962))))

(declare-fun mapRest!4847 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4847 () ValueCell!1121)

(declare-fun mapKey!4847 () (_ BitVec 32))

(assert (=> mapNonEmpty!4847 (= mapRest!4846 (store mapRest!4847 mapKey!4847 mapValue!4847))))

(declare-fun condMapEmpty!4847 () Bool)

(declare-fun mapDefault!4847 () ValueCell!1121)

(assert (=> mapNonEmpty!4846 (= condMapEmpty!4847 (= mapRest!4846 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4847)))))

(assert (=> mapNonEmpty!4846 (= tp!11578 (and e!91963 mapRes!4847))))

(declare-fun mapIsEmpty!4847 () Bool)

(assert (=> mapIsEmpty!4847 mapRes!4847))

(declare-fun b!141098 () Bool)

(assert (=> b!141098 (= e!91962 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4846 condMapEmpty!4847) mapIsEmpty!4847))

(assert (= (and mapNonEmpty!4846 (not condMapEmpty!4847)) mapNonEmpty!4847))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1121) mapValue!4847)) b!141098))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1121) mapDefault!4847)) b!141099))

(declare-fun m!169109 () Bool)

(assert (=> mapNonEmpty!4847 m!169109))

(declare-fun b!141101 () Bool)

(declare-fun e!91965 () Bool)

(assert (=> b!141101 (= e!91965 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4848 () Bool)

(declare-fun mapRes!4848 () Bool)

(declare-fun tp!11580 () Bool)

(declare-fun e!91964 () Bool)

(assert (=> mapNonEmpty!4848 (= mapRes!4848 (and tp!11580 e!91964))))

(declare-fun mapValue!4848 () ValueCell!1121)

(declare-fun mapKey!4848 () (_ BitVec 32))

(declare-fun mapRest!4848 () (Array (_ BitVec 32) ValueCell!1121))

(assert (=> mapNonEmpty!4848 (= mapRest!4845 (store mapRest!4848 mapKey!4848 mapValue!4848))))

(declare-fun condMapEmpty!4848 () Bool)

(declare-fun mapDefault!4848 () ValueCell!1121)

(assert (=> mapNonEmpty!4845 (= condMapEmpty!4848 (= mapRest!4845 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4848)))))

(assert (=> mapNonEmpty!4845 (= tp!11577 (and e!91965 mapRes!4848))))

(declare-fun mapIsEmpty!4848 () Bool)

(assert (=> mapIsEmpty!4848 mapRes!4848))

(declare-fun b!141100 () Bool)

(assert (=> b!141100 (= e!91964 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4845 condMapEmpty!4848) mapIsEmpty!4848))

(assert (= (and mapNonEmpty!4845 (not condMapEmpty!4848)) mapNonEmpty!4848))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1121) mapValue!4848)) b!141100))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1121) mapDefault!4848)) b!141101))

(declare-fun m!169111 () Bool)

(assert (=> mapNonEmpty!4848 m!169111))

(declare-fun b_lambda!6321 () Bool)

(assert (= b_lambda!6291 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6321)))

(declare-fun b_lambda!6323 () Bool)

(assert (= b_lambda!6303 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6323)))

(declare-fun b_lambda!6325 () Bool)

(assert (= b_lambda!6307 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6325)))

(declare-fun b_lambda!6327 () Bool)

(assert (= b_lambda!6311 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6327)))

(declare-fun b_lambda!6329 () Bool)

(assert (= b_lambda!6299 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6329)))

(declare-fun b_lambda!6331 () Bool)

(assert (= b_lambda!6317 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6331)))

(declare-fun b_lambda!6333 () Bool)

(assert (= b_lambda!6315 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6333)))

(declare-fun b_lambda!6335 () Bool)

(assert (= b_lambda!6301 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6335)))

(declare-fun b_lambda!6337 () Bool)

(assert (= b_lambda!6295 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6337)))

(declare-fun b_lambda!6339 () Bool)

(assert (= b_lambda!6293 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6339)))

(declare-fun b_lambda!6341 () Bool)

(assert (= b_lambda!6297 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6341)))

(declare-fun b_lambda!6343 () Bool)

(assert (= b_lambda!6319 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6343)))

(declare-fun b_lambda!6345 () Bool)

(assert (= b_lambda!6309 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6345)))

(declare-fun b_lambda!6347 () Bool)

(assert (= b_lambda!6305 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6347)))

(check-sat (not d!43849) (not b!140427) (not b!140933) (not d!44025) (not b!140757) (not d!43993) (not b_next!3027) (not b!141030) (not d!43759) (not b!140794) (not b!140515) (not b!140464) (not b!140920) (not b_lambda!6339) (not b!140528) (not bm!15603) (not b!140480) (not d!44185) (not b!140868) (not b!140949) (not b!140264) (not b_lambda!6347) (not b!140612) (not b!140308) (not b!141057) (not bm!15593) (not b!140372) (not b!140317) (not d!43855) (not d!44191) (not d!43839) (not b!140923) (not b!140752) (not bm!15619) (not b!140468) (not b!140371) (not b_lambda!6335) (not b!140880) (not d!43841) (not b!140938) (not d!43885) (not b!140262) (not b!140893) (not b!140739) (not b!141070) (not b!140971) (not d!43739) (not b!140489) (not d!44109) (not d!43987) (not d!43791) (not bm!15578) (not d!44121) (not b!140960) (not d!44021) (not b!140767) (not b!140708) (not d!44007) (not b!140695) (not b!140784) (not b!140412) (not bm!15643) (not d!43919) (not d!43729) (not bm!15616) (not d!44069) (not b!140383) (not b!141060) (not b!140711) (not d!43745) (not d!44029) (not b!140682) (not d!44135) (not b!140850) (not b!140727) (not d!43725) (not b_lambda!6313) (not d!43737) (not b!140457) (not d!43823) (not b!140275) (not b!140763) (not b_next!3025) (not b!140930) (not b!140419) (not b!140896) (not b!140491) (not bm!15565) (not d!43973) (not b!140312) (not d!43773) (not bm!15607) (not b!140424) (not b!140400) (not b!140287) (not b!140881) (not b!140379) (not b!140871) (not d!43765) (not d!43785) (not b!141054) (not d!43795) (not b!141040) (not b!140557) (not b!140667) (not d!43995) (not b!140455) (not d!44097) (not b_lambda!6337) (not b!140770) (not bm!15573) (not b!141034) (not d!43945) (not b!140729) (not b!140714) (not b!140706) (not b!140463) (not d!43787) (not d!44123) (not b!141007) (not d!43783) (not d!43949) (not bm!15622) (not b!141027) (not d!43959) (not b!140591) (not d!43799) (not d!44165) (not d!43803) (not b!141068) (not b_lambda!6329) (not d!43963) (not b!141046) (not d!43753) (not b!140531) (not d!44169) (not b!140702) (not b!140735) (not b!140879) (not b!140410) (not b!140883) (not b!140403) (not b!141078) (not b!140963) (not d!43997) (not b!140365) (not b!140392) (not bm!15594) (not b_lambda!6283) (not b!140604) (not b!141082) (not d!43741) (not b!141062) (not b!140548) (not d!43749) (not b!140940) (not bm!15557) (not d!43975) (not b!140297) (not b_lambda!6321) (not b!140736) (not b!140664) (not d!43717) (not b!140897) (not b!140363) (not d!43751) (not d!44053) (not d!43907) (not bm!15570) (not b!140276) (not bm!15610) (not b!140320) (not b!141093) (not b!140539) (not b!140894) (not mapNonEmpty!4848) (not b!140304) (not d!43927) (not b!141042) (not b!140789) (not b!140980) (not bm!15652) (not d!44039) (not d!44159) (not b!140892) (not b!140482) (not b!140316) (not b!140329) (not bm!15633) (not b!140911) (not b!140256) (not b!141091) (not b!140461) (not d!43789) (not d!44161) (not d!44033) (not d!44187) (not b!140795) (not bm!15575) (not d!43915) (not b!140691) (not b!140411) (not b!140381) (not b!140416) (not b!140673) (not d!43897) (not bm!15639) (not d!44115) (not b!140506) (not bm!15591) (not b!141084) (not b!140988) (not bm!15638) (not b!140574) (not b!141043) (not b!140830) (not b!140499) (not b!140566) (not b!140798) (not b!141077) (not d!44103) (not b!140570) (not b!140658) (not d!44195) (not b!140514) (not d!44101) (not b!140891) (not b!140990) (not d!43985) (not d!43695) (not b!141010) (not b!140472) (not d!43767) (not b!140951) (not b!140900) (not bm!15551) (not d!43727) (not bm!15585) (not b!140399) (not b!140492) (not b!141006) (not b!140544) (not b!140610) (not b!140519) (not b!140884) (not d!43921) (not bm!15629) (not b!141085) (not d!44011) (not b!141005) (not bm!15611) (not d!44197) (not d!44147) (not b!140484) (not b!140806) (not b!140685) (not d!43893) (not b!140872) (not d!44181) (not b_lambda!6265) (not b!140332) (not b!140511) (not b!140680) (not d!43899) (not bm!15627) (not d!43903) (not d!43869) (not b!140662) (not b!140914) (not b!141014) (not b!140318) (not b!140917) (not b!140282) (not b!140592) (not b!140740) (not b!140780) (not d!43889) (not b!140985) (not d!43755) (not b!140876) (not b!140422) (not d!44015) (not d!43937) (not b!140322) (not b!140487) (not b!140567) (not b!140279) (not b!140703) (not b!140578) (not d!43743) (not b!140982) (not b!140788) (not d!44077) (not d!43853) (not d!44003) (not bm!15653) (not b_lambda!6333) (not d!44013) (not b!140915) (not b!140926) (not bm!15584) (not b!140991) (not d!43935) (not b!140617) (not d!43933) (not b!140877) (not b!140284) (not b!140597) (not b!140367) (not b!140462) (not b!141063) (not b!140670) (not b!141029) (not b!140983) (not b!141003) (not d!43913) (not b!140828) (not d!44139) (not d!43931) (not d!43881) (not d!44179) (not bm!15649) (not d!43961) (not d!43735) (not d!43701) (not b!140864) (not b!141012) (not d!43747) (not b!140833) (not d!43775) (not b!141016) (not b!140576) (not b!140832) (not b!140545) (not d!43721) (not d!44001) (not b!140302) (not bm!15642) (not d!43909) (not b!140599) (not d!43763) (not b!141033) (not b!140386) (not bm!15574) (not b!141075) (not bm!15620) (not d!44171) (not d!44063) (not b!141092) (not d!44071) (not b!140786) (not mapNonEmpty!4847) (not b!140861) (not b!140954) (not b!140751) (not d!43965) (not b!140724) (not b!140588) (not b!140475) (not b!140325) (not bm!15626) (not b!141055) (not b!140885) (not d!43861) (not b!140898) (not b!141097) (not b!140800) (not b!140479) (not bm!15632) (not b!140978) (not b!140942) (not d!43865) (not b!140425) (not b!140571) (not b!140289) (not b!141037) (not d!43905) (not d!44023) (not bm!15621) (not b!140299) (not b!140733) (not b!140307) (not b!140465) (not b!140945) (not b!140547) (not b!140790) (not d!44117) (not b!140259) (not d!44143) (not b!140606) (not b!140409) (not b_lambda!6285) (not d!43947) (not b_lambda!6325) (not d!43857) (not bm!15563) (not d!43771) (not d!43733) (not b!140407) (not b!140654) (not b!140366) (not b!141072) (not d!44105) (not d!43859) (not bm!15566) (not d!43801) (not b!140517) (not bm!15623) (not b!141001) (not b!140661) (not b!140771) (not b!140306) (not b!140296) (not d!43805) (not b!140549) (not b!140853) (not d!44183) (not d!44035) (not d!44019) (not b!140337) (not b!140602) (not d!44133) (not b!140783) (not d!44173) (not b!141056) (not bm!15554) (not d!43821) (not d!43941) (not bm!15646) (not bm!15569) (not bm!15555) (not b!140895) (not b!141095) (not b_lambda!6345) (not d!44087) (not b!141035) (not b!141080) (not b!140550) (not b!141073) (not d!44009) (not b!140369) (not bm!15572) (not b!140948) (not d!43723) (not d!44189) (not b!140836) (not b_lambda!6281) (not b!140821) (not b!140909) (not b!140713) (not b!140907) b_and!8823 (not b_lambda!6323) (not bm!15589) (not b!141089) (not b!140737) (not b!141024) (not b!140326) (not bm!15636) (not b!140631) (not b!140536) (not b!140730) (not b!141087) (not bm!15637) (not b!140922) (not b!140555) (not b!140754) (not b!140619) (not b!140377) (not d!43793) (not b!140858) (not b_lambda!6327) (not d!43951) (not b!140849) (not b!140382) (not d!44041) (not d!44167) (not d!44125) (not b!141032) (not b!140553) (not b!140268) (not b!140831) (not bm!15576) (not b!140390) (not b!140388) (not b_lambda!6343) (not bm!15577) (not d!43971) (not b!140460) (not d!44175) (not b!140773) (not b!140503) (not d!43929) (not d!43847) (not b!140580) (not bm!15592) (not b!140630) (not b!140303) (not b!140669) (not b!140686) (not d!43699) (not b!140904) (not d!43829) (not d!43875) (not b!140759) (not b!140886) (not d!44027) (not d!44075) (not b!140957) (not b!140324) (not d!44153) (not b!141058) (not b!140721) (not b!140741) (not b!140458) (not b!140587) (not b!140614) (not b!140760) (not b!140405) (not b!140313) (not b!141066) (not b_lambda!6287) (not bm!15564) (not b!140981) (not b!140994) (not b!140840) (not b!140258) (not b!140370) (not d!44163) (not b!140310) (not d!43825) (not b!140838) (not d!44141) (not b_lambda!6341) (not d!44031) (not b_lambda!6269) (not d!44151) (not b!140693) (not d!43777) (not b!140689) (not b!140890) (not b!140447) (not d!44113) (not d!44017) (not b!140874) (not b!141004) (not d!43779) (not b!140621) (not d!44127) (not b!140529) (not b!141076) (not b!140860) (not d!43713) (not d!43769) (not d!43891) (not b!141023) (not b!140266) (not b!140290) (not d!43719) (not b!140775) (not bm!15647) (not b!141069) (not d!43731) (not d!43781) (not b!140935) (not b!140677) (not bm!15613) (not bm!15558) (not b!140717) (not b!140842) (not b!140375) b_and!8821 (not bm!15582) (not d!43873) (not d!44051) (not b!140421) (not d!44057) (not b!140974) (not d!44037) (not b!140495) (not d!44061) (not b!140609) (not b!140855) (not d!44203) (not b!141050) (not d!44177) (not d!43709) (not d!44119) (not b!141002) (not b_lambda!6289) (not b!140912) (not d!43691) (not d!43707) (not b_lambda!6331) (not b!140801) (not b!140684) (not b!140311) (not bm!15581) tp_is_empty!2929 (not d!43689) (not b!140321) (not bm!15606) (not b!141053) (not b!140257) (not b!140559) (not b!140964) (not b!140406) (not b!140998) (not b!140624) (not b!140683) (not b!140967) (not bm!15588) (not b!140934) (not b!140417))
(check-sat b_and!8821 b_and!8823 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun d!44205 () Bool)

(declare-fun e!91966 () Bool)

(assert (=> d!44205 e!91966))

(declare-fun res!67393 () Bool)

(assert (=> d!44205 (=> res!67393 e!91966)))

(declare-fun lt!74039 () Bool)

(assert (=> d!44205 (= res!67393 (not lt!74039))))

(declare-fun lt!74036 () Bool)

(assert (=> d!44205 (= lt!74039 lt!74036)))

(declare-fun lt!74038 () Unit!4387)

(declare-fun e!91967 () Unit!4387)

(assert (=> d!44205 (= lt!74038 e!91967)))

(declare-fun c!26504 () Bool)

(assert (=> d!44205 (= c!26504 lt!74036)))

(assert (=> d!44205 (= lt!74036 (containsKey!180 (toList!858 lt!73855) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (=> d!44205 (= (contains!904 lt!73855 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) lt!74039)))

(declare-fun b!141102 () Bool)

(declare-fun lt!74037 () Unit!4387)

(assert (=> b!141102 (= e!91967 lt!74037)))

(assert (=> b!141102 (= lt!74037 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73855) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (=> b!141102 (isDefined!129 (getValueByKey!177 (toList!858 lt!73855) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!141103 () Bool)

(declare-fun Unit!4449 () Unit!4387)

(assert (=> b!141103 (= e!91967 Unit!4449)))

(declare-fun b!141104 () Bool)

(assert (=> b!141104 (= e!91966 (isDefined!129 (getValueByKey!177 (toList!858 lt!73855) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))))

(assert (= (and d!44205 c!26504) b!141102))

(assert (= (and d!44205 (not c!26504)) b!141103))

(assert (= (and d!44205 (not res!67393)) b!141104))

(assert (=> d!44205 m!168391))

(declare-fun m!169113 () Bool)

(assert (=> d!44205 m!169113))

(assert (=> b!141102 m!168391))

(declare-fun m!169115 () Bool)

(assert (=> b!141102 m!169115))

(assert (=> b!141102 m!168391))

(declare-fun m!169117 () Bool)

(assert (=> b!141102 m!169117))

(assert (=> b!141102 m!169117))

(declare-fun m!169119 () Bool)

(assert (=> b!141102 m!169119))

(assert (=> b!141104 m!168391))

(assert (=> b!141104 m!169117))

(assert (=> b!141104 m!169117))

(assert (=> b!141104 m!169119))

(assert (=> b!140836 d!44205))

(declare-fun d!44207 () Bool)

(assert (=> d!44207 (= (get!1535 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) (v!3285 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44143 d!44207))

(declare-fun b!141106 () Bool)

(declare-fun e!91968 () Option!183)

(declare-fun e!91969 () Option!183)

(assert (=> b!141106 (= e!91968 e!91969)))

(declare-fun c!26506 () Bool)

(assert (=> b!141106 (= c!26506 (and ((_ is Cons!1715) (toList!858 lt!73237)) (not (= (_1!1322 (h!2322 (toList!858 lt!73237))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141107 () Bool)

(assert (=> b!141107 (= e!91969 (getValueByKey!177 (t!6295 (toList!858 lt!73237)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141105 () Bool)

(assert (=> b!141105 (= e!91968 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73237)))))))

(declare-fun b!141108 () Bool)

(assert (=> b!141108 (= e!91969 None!181)))

(declare-fun d!44209 () Bool)

(declare-fun c!26505 () Bool)

(assert (=> d!44209 (= c!26505 (and ((_ is Cons!1715) (toList!858 lt!73237)) (= (_1!1322 (h!2322 (toList!858 lt!73237))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44209 (= (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) e!91968)))

(assert (= (and d!44209 c!26505) b!141105))

(assert (= (and d!44209 (not c!26505)) b!141106))

(assert (= (and b!141106 c!26506) b!141107))

(assert (= (and b!141106 (not c!26506)) b!141108))

(assert (=> b!141107 m!166927))

(declare-fun m!169121 () Bool)

(assert (=> b!141107 m!169121))

(assert (=> d!44143 d!44209))

(declare-fun d!44211 () Bool)

(declare-fun lt!74040 () Bool)

(assert (=> d!44211 (= lt!74040 (select (content!139 (toList!858 lt!73511)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!91970 () Bool)

(assert (=> d!44211 (= lt!74040 e!91970)))

(declare-fun res!67394 () Bool)

(assert (=> d!44211 (=> (not res!67394) (not e!91970))))

(assert (=> d!44211 (= res!67394 ((_ is Cons!1715) (toList!858 lt!73511)))))

(assert (=> d!44211 (= (contains!907 (toList!858 lt!73511) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74040)))

(declare-fun b!141109 () Bool)

(declare-fun e!91971 () Bool)

(assert (=> b!141109 (= e!91970 e!91971)))

(declare-fun res!67395 () Bool)

(assert (=> b!141109 (=> res!67395 e!91971)))

(assert (=> b!141109 (= res!67395 (= (h!2322 (toList!858 lt!73511)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141110 () Bool)

(assert (=> b!141110 (= e!91971 (contains!907 (t!6295 (toList!858 lt!73511)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44211 res!67394) b!141109))

(assert (= (and b!141109 (not res!67395)) b!141110))

(declare-fun m!169123 () Bool)

(assert (=> d!44211 m!169123))

(declare-fun m!169125 () Bool)

(assert (=> d!44211 m!169125))

(declare-fun m!169127 () Bool)

(assert (=> b!141110 m!169127))

(assert (=> b!140257 d!44211))

(declare-fun d!44213 () Bool)

(declare-fun e!91972 () Bool)

(assert (=> d!44213 e!91972))

(declare-fun res!67396 () Bool)

(assert (=> d!44213 (=> res!67396 e!91972)))

(declare-fun lt!74044 () Bool)

(assert (=> d!44213 (= res!67396 (not lt!74044))))

(declare-fun lt!74041 () Bool)

(assert (=> d!44213 (= lt!74044 lt!74041)))

(declare-fun lt!74043 () Unit!4387)

(declare-fun e!91973 () Unit!4387)

(assert (=> d!44213 (= lt!74043 e!91973)))

(declare-fun c!26507 () Bool)

(assert (=> d!44213 (= c!26507 lt!74041)))

(assert (=> d!44213 (= lt!74041 (containsKey!180 (toList!858 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))) lt!73611))))

(assert (=> d!44213 (= (contains!904 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))) lt!73611) lt!74044)))

(declare-fun b!141111 () Bool)

(declare-fun lt!74042 () Unit!4387)

(assert (=> b!141111 (= e!91973 lt!74042)))

(assert (=> b!141111 (= lt!74042 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))) lt!73611))))

(assert (=> b!141111 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))) lt!73611))))

(declare-fun b!141112 () Bool)

(declare-fun Unit!4450 () Unit!4387)

(assert (=> b!141112 (= e!91973 Unit!4450)))

(declare-fun b!141113 () Bool)

(assert (=> b!141113 (= e!91972 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))) lt!73611)))))

(assert (= (and d!44213 c!26507) b!141111))

(assert (= (and d!44213 (not c!26507)) b!141112))

(assert (= (and d!44213 (not res!67396)) b!141113))

(declare-fun m!169129 () Bool)

(assert (=> d!44213 m!169129))

(declare-fun m!169131 () Bool)

(assert (=> b!141111 m!169131))

(declare-fun m!169133 () Bool)

(assert (=> b!141111 m!169133))

(assert (=> b!141111 m!169133))

(declare-fun m!169135 () Bool)

(assert (=> b!141111 m!169135))

(assert (=> b!141113 m!169133))

(assert (=> b!141113 m!169133))

(assert (=> b!141113 m!169135))

(assert (=> b!140392 d!44213))

(declare-fun d!44215 () Bool)

(assert (=> d!44215 (= (apply!120 (+!173 lt!73604 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))) lt!73602) (apply!120 lt!73604 lt!73602))))

(declare-fun lt!74045 () Unit!4387)

(assert (=> d!44215 (= lt!74045 (choose!867 lt!73604 lt!73614 (zeroValue!2789 newMap!16) lt!73602))))

(declare-fun e!91974 () Bool)

(assert (=> d!44215 e!91974))

(declare-fun res!67397 () Bool)

(assert (=> d!44215 (=> (not res!67397) (not e!91974))))

(assert (=> d!44215 (= res!67397 (contains!904 lt!73604 lt!73602))))

(assert (=> d!44215 (= (addApplyDifferent!96 lt!73604 lt!73614 (zeroValue!2789 newMap!16) lt!73602) lt!74045)))

(declare-fun b!141114 () Bool)

(assert (=> b!141114 (= e!91974 (not (= lt!73602 lt!73614)))))

(assert (= (and d!44215 res!67397) b!141114))

(assert (=> d!44215 m!167775))

(declare-fun m!169137 () Bool)

(assert (=> d!44215 m!169137))

(assert (=> d!44215 m!167755))

(assert (=> d!44215 m!167777))

(declare-fun m!169139 () Bool)

(assert (=> d!44215 m!169139))

(assert (=> d!44215 m!167755))

(assert (=> b!140392 d!44215))

(declare-fun d!44217 () Bool)

(declare-fun e!91975 () Bool)

(assert (=> d!44217 e!91975))

(declare-fun res!67398 () Bool)

(assert (=> d!44217 (=> (not res!67398) (not e!91975))))

(declare-fun lt!74048 () ListLongMap!1685)

(assert (=> d!44217 (= res!67398 (contains!904 lt!74048 (_1!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))))))

(declare-fun lt!74047 () List!1719)

(assert (=> d!44217 (= lt!74048 (ListLongMap!1686 lt!74047))))

(declare-fun lt!74046 () Unit!4387)

(declare-fun lt!74049 () Unit!4387)

(assert (=> d!44217 (= lt!74046 lt!74049)))

(assert (=> d!44217 (= (getValueByKey!177 lt!74047 (_1!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))))))

(assert (=> d!44217 (= lt!74049 (lemmaContainsTupThenGetReturnValue!91 lt!74047 (_1!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))))))

(assert (=> d!44217 (= lt!74047 (insertStrictlySorted!94 (toList!858 lt!73617) (_1!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))))))

(assert (=> d!44217 (= (+!173 lt!73617 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))) lt!74048)))

(declare-fun b!141115 () Bool)

(declare-fun res!67399 () Bool)

(assert (=> b!141115 (=> (not res!67399) (not e!91975))))

(assert (=> b!141115 (= res!67399 (= (getValueByKey!177 (toList!858 lt!74048) (_1!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))))))))

(declare-fun b!141116 () Bool)

(assert (=> b!141116 (= e!91975 (contains!907 (toList!858 lt!74048) (tuple2!2623 lt!73606 (minValue!2789 newMap!16))))))

(assert (= (and d!44217 res!67398) b!141115))

(assert (= (and b!141115 res!67399) b!141116))

(declare-fun m!169141 () Bool)

(assert (=> d!44217 m!169141))

(declare-fun m!169143 () Bool)

(assert (=> d!44217 m!169143))

(declare-fun m!169145 () Bool)

(assert (=> d!44217 m!169145))

(declare-fun m!169147 () Bool)

(assert (=> d!44217 m!169147))

(declare-fun m!169149 () Bool)

(assert (=> b!141115 m!169149))

(declare-fun m!169151 () Bool)

(assert (=> b!141116 m!169151))

(assert (=> b!140392 d!44217))

(declare-fun d!44219 () Bool)

(assert (=> d!44219 (contains!904 (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))) lt!73611)))

(declare-fun lt!74050 () Unit!4387)

(assert (=> d!44219 (= lt!74050 (choose!866 lt!73605 lt!73607 (zeroValue!2789 newMap!16) lt!73611))))

(assert (=> d!44219 (contains!904 lt!73605 lt!73611)))

(assert (=> d!44219 (= (addStillContains!96 lt!73605 lt!73607 (zeroValue!2789 newMap!16) lt!73611) lt!74050)))

(declare-fun bs!5914 () Bool)

(assert (= bs!5914 d!44219))

(assert (=> bs!5914 m!167761))

(assert (=> bs!5914 m!167761))

(assert (=> bs!5914 m!167763))

(declare-fun m!169153 () Bool)

(assert (=> bs!5914 m!169153))

(declare-fun m!169155 () Bool)

(assert (=> bs!5914 m!169155))

(assert (=> b!140392 d!44219))

(declare-fun d!44221 () Bool)

(assert (=> d!44221 (= (apply!120 (+!173 lt!73617 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))) lt!73612) (apply!120 lt!73617 lt!73612))))

(declare-fun lt!74051 () Unit!4387)

(assert (=> d!44221 (= lt!74051 (choose!867 lt!73617 lt!73606 (minValue!2789 newMap!16) lt!73612))))

(declare-fun e!91976 () Bool)

(assert (=> d!44221 e!91976))

(declare-fun res!67400 () Bool)

(assert (=> d!44221 (=> (not res!67400) (not e!91976))))

(assert (=> d!44221 (= res!67400 (contains!904 lt!73617 lt!73612))))

(assert (=> d!44221 (= (addApplyDifferent!96 lt!73617 lt!73606 (minValue!2789 newMap!16) lt!73612) lt!74051)))

(declare-fun b!141117 () Bool)

(assert (=> b!141117 (= e!91976 (not (= lt!73612 lt!73606)))))

(assert (= (and d!44221 res!67400) b!141117))

(assert (=> d!44221 m!167771))

(declare-fun m!169157 () Bool)

(assert (=> d!44221 m!169157))

(assert (=> d!44221 m!167749))

(assert (=> d!44221 m!167751))

(declare-fun m!169159 () Bool)

(assert (=> d!44221 m!169159))

(assert (=> d!44221 m!167749))

(assert (=> b!140392 d!44221))

(declare-fun d!44223 () Bool)

(declare-fun e!91977 () Bool)

(assert (=> d!44223 e!91977))

(declare-fun res!67401 () Bool)

(assert (=> d!44223 (=> (not res!67401) (not e!91977))))

(declare-fun lt!74054 () ListLongMap!1685)

(assert (=> d!44223 (= res!67401 (contains!904 lt!74054 (_1!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74053 () List!1719)

(assert (=> d!44223 (= lt!74054 (ListLongMap!1686 lt!74053))))

(declare-fun lt!74052 () Unit!4387)

(declare-fun lt!74055 () Unit!4387)

(assert (=> d!44223 (= lt!74052 lt!74055)))

(assert (=> d!44223 (= (getValueByKey!177 lt!74053 (_1!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44223 (= lt!74055 (lemmaContainsTupThenGetReturnValue!91 lt!74053 (_1!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44223 (= lt!74053 (insertStrictlySorted!94 (toList!858 lt!73604) (_1!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44223 (= (+!173 lt!73604 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))) lt!74054)))

(declare-fun b!141118 () Bool)

(declare-fun res!67402 () Bool)

(assert (=> b!141118 (=> (not res!67402) (not e!91977))))

(assert (=> b!141118 (= res!67402 (= (getValueByKey!177 (toList!858 lt!74054) (_1!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141119 () Bool)

(assert (=> b!141119 (= e!91977 (contains!907 (toList!858 lt!74054) (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44223 res!67401) b!141118))

(assert (= (and b!141118 res!67402) b!141119))

(declare-fun m!169161 () Bool)

(assert (=> d!44223 m!169161))

(declare-fun m!169163 () Bool)

(assert (=> d!44223 m!169163))

(declare-fun m!169165 () Bool)

(assert (=> d!44223 m!169165))

(declare-fun m!169167 () Bool)

(assert (=> d!44223 m!169167))

(declare-fun m!169169 () Bool)

(assert (=> b!141118 m!169169))

(declare-fun m!169171 () Bool)

(assert (=> b!141119 m!169171))

(assert (=> b!140392 d!44223))

(declare-fun d!44225 () Bool)

(assert (=> d!44225 (= (apply!120 (+!173 lt!73620 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))) lt!73619) (apply!120 lt!73620 lt!73619))))

(declare-fun lt!74056 () Unit!4387)

(assert (=> d!44225 (= lt!74056 (choose!867 lt!73620 lt!73616 (minValue!2789 newMap!16) lt!73619))))

(declare-fun e!91978 () Bool)

(assert (=> d!44225 e!91978))

(declare-fun res!67403 () Bool)

(assert (=> d!44225 (=> (not res!67403) (not e!91978))))

(assert (=> d!44225 (= res!67403 (contains!904 lt!73620 lt!73619))))

(assert (=> d!44225 (= (addApplyDifferent!96 lt!73620 lt!73616 (minValue!2789 newMap!16) lt!73619) lt!74056)))

(declare-fun b!141120 () Bool)

(assert (=> b!141120 (= e!91978 (not (= lt!73619 lt!73616)))))

(assert (= (and d!44225 res!67403) b!141120))

(assert (=> d!44225 m!167765))

(declare-fun m!169173 () Bool)

(assert (=> d!44225 m!169173))

(assert (=> d!44225 m!167767))

(assert (=> d!44225 m!167769))

(declare-fun m!169175 () Bool)

(assert (=> d!44225 m!169175))

(assert (=> d!44225 m!167767))

(assert (=> b!140392 d!44225))

(declare-fun d!44227 () Bool)

(declare-fun e!91979 () Bool)

(assert (=> d!44227 e!91979))

(declare-fun res!67404 () Bool)

(assert (=> d!44227 (=> (not res!67404) (not e!91979))))

(declare-fun lt!74059 () ListLongMap!1685)

(assert (=> d!44227 (= res!67404 (contains!904 lt!74059 (_1!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))))))

(declare-fun lt!74058 () List!1719)

(assert (=> d!44227 (= lt!74059 (ListLongMap!1686 lt!74058))))

(declare-fun lt!74057 () Unit!4387)

(declare-fun lt!74060 () Unit!4387)

(assert (=> d!44227 (= lt!74057 lt!74060)))

(assert (=> d!44227 (= (getValueByKey!177 lt!74058 (_1!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))))))

(assert (=> d!44227 (= lt!74060 (lemmaContainsTupThenGetReturnValue!91 lt!74058 (_1!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))))))

(assert (=> d!44227 (= lt!74058 (insertStrictlySorted!94 (toList!858 lt!73620) (_1!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))))))

(assert (=> d!44227 (= (+!173 lt!73620 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))) lt!74059)))

(declare-fun b!141121 () Bool)

(declare-fun res!67405 () Bool)

(assert (=> b!141121 (=> (not res!67405) (not e!91979))))

(assert (=> b!141121 (= res!67405 (= (getValueByKey!177 (toList!858 lt!74059) (_1!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))))))))

(declare-fun b!141122 () Bool)

(assert (=> b!141122 (= e!91979 (contains!907 (toList!858 lt!74059) (tuple2!2623 lt!73616 (minValue!2789 newMap!16))))))

(assert (= (and d!44227 res!67404) b!141121))

(assert (= (and b!141121 res!67405) b!141122))

(declare-fun m!169177 () Bool)

(assert (=> d!44227 m!169177))

(declare-fun m!169179 () Bool)

(assert (=> d!44227 m!169179))

(declare-fun m!169181 () Bool)

(assert (=> d!44227 m!169181))

(declare-fun m!169183 () Bool)

(assert (=> d!44227 m!169183))

(declare-fun m!169185 () Bool)

(assert (=> b!141121 m!169185))

(declare-fun m!169187 () Bool)

(assert (=> b!141122 m!169187))

(assert (=> b!140392 d!44227))

(declare-fun d!44229 () Bool)

(assert (=> d!44229 (= (apply!120 lt!73604 lt!73602) (get!1535 (getValueByKey!177 (toList!858 lt!73604) lt!73602)))))

(declare-fun bs!5915 () Bool)

(assert (= bs!5915 d!44229))

(declare-fun m!169189 () Bool)

(assert (=> bs!5915 m!169189))

(assert (=> bs!5915 m!169189))

(declare-fun m!169191 () Bool)

(assert (=> bs!5915 m!169191))

(assert (=> b!140392 d!44229))

(declare-fun d!44231 () Bool)

(declare-fun e!91980 () Bool)

(assert (=> d!44231 e!91980))

(declare-fun res!67406 () Bool)

(assert (=> d!44231 (=> (not res!67406) (not e!91980))))

(declare-fun lt!74063 () ListLongMap!1685)

(assert (=> d!44231 (= res!67406 (contains!904 lt!74063 (_1!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74062 () List!1719)

(assert (=> d!44231 (= lt!74063 (ListLongMap!1686 lt!74062))))

(declare-fun lt!74061 () Unit!4387)

(declare-fun lt!74064 () Unit!4387)

(assert (=> d!44231 (= lt!74061 lt!74064)))

(assert (=> d!44231 (= (getValueByKey!177 lt!74062 (_1!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44231 (= lt!74064 (lemmaContainsTupThenGetReturnValue!91 lt!74062 (_1!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44231 (= lt!74062 (insertStrictlySorted!94 (toList!858 lt!73605) (_1!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44231 (= (+!173 lt!73605 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))) lt!74063)))

(declare-fun b!141123 () Bool)

(declare-fun res!67407 () Bool)

(assert (=> b!141123 (=> (not res!67407) (not e!91980))))

(assert (=> b!141123 (= res!67407 (= (getValueByKey!177 (toList!858 lt!74063) (_1!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141124 () Bool)

(assert (=> b!141124 (= e!91980 (contains!907 (toList!858 lt!74063) (tuple2!2623 lt!73607 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44231 res!67406) b!141123))

(assert (= (and b!141123 res!67407) b!141124))

(declare-fun m!169193 () Bool)

(assert (=> d!44231 m!169193))

(declare-fun m!169195 () Bool)

(assert (=> d!44231 m!169195))

(declare-fun m!169197 () Bool)

(assert (=> d!44231 m!169197))

(declare-fun m!169199 () Bool)

(assert (=> d!44231 m!169199))

(declare-fun m!169201 () Bool)

(assert (=> b!141123 m!169201))

(declare-fun m!169203 () Bool)

(assert (=> b!141124 m!169203))

(assert (=> b!140392 d!44231))

(declare-fun d!44233 () Bool)

(assert (=> d!44233 (= (apply!120 (+!173 lt!73604 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16))) lt!73602) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73604 (tuple2!2623 lt!73614 (zeroValue!2789 newMap!16)))) lt!73602)))))

(declare-fun bs!5916 () Bool)

(assert (= bs!5916 d!44233))

(declare-fun m!169205 () Bool)

(assert (=> bs!5916 m!169205))

(assert (=> bs!5916 m!169205))

(declare-fun m!169207 () Bool)

(assert (=> bs!5916 m!169207))

(assert (=> b!140392 d!44233))

(declare-fun b!141125 () Bool)

(declare-fun res!67409 () Bool)

(declare-fun e!91986 () Bool)

(assert (=> b!141125 (=> (not res!67409) (not e!91986))))

(declare-fun lt!74067 () ListLongMap!1685)

(assert (=> b!141125 (= res!67409 (not (contains!904 lt!74067 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141126 () Bool)

(declare-fun e!91982 () Bool)

(assert (=> b!141126 (= e!91986 e!91982)))

(declare-fun c!26508 () Bool)

(declare-fun e!91984 () Bool)

(assert (=> b!141126 (= c!26508 e!91984)))

(declare-fun res!67410 () Bool)

(assert (=> b!141126 (=> (not res!67410) (not e!91984))))

(assert (=> b!141126 (= res!67410 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!91983 () Bool)

(declare-fun b!141127 () Bool)

(assert (=> b!141127 (= e!91983 (= lt!74067 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141128 () Bool)

(declare-fun lt!74069 () Unit!4387)

(declare-fun lt!74065 () Unit!4387)

(assert (=> b!141128 (= lt!74069 lt!74065)))

(declare-fun lt!74071 () (_ BitVec 64))

(declare-fun lt!74066 () (_ BitVec 64))

(declare-fun lt!74068 () ListLongMap!1685)

(declare-fun lt!74070 () V!3553)

(assert (=> b!141128 (not (contains!904 (+!173 lt!74068 (tuple2!2623 lt!74066 lt!74070)) lt!74071))))

(assert (=> b!141128 (= lt!74065 (addStillNotContains!66 lt!74068 lt!74066 lt!74070 lt!74071))))

(assert (=> b!141128 (= lt!74071 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141128 (= lt!74070 (get!1531 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141128 (= lt!74066 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15657 () ListLongMap!1685)

(assert (=> b!141128 (= lt!74068 call!15657)))

(declare-fun e!91987 () ListLongMap!1685)

(assert (=> b!141128 (= e!91987 (+!173 call!15657 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141129 () Bool)

(declare-fun e!91981 () Bool)

(assert (=> b!141129 (= e!91982 e!91981)))

(assert (=> b!141129 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67411 () Bool)

(assert (=> b!141129 (= res!67411 (contains!904 lt!74067 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141129 (=> (not res!67411) (not e!91981))))

(declare-fun d!44235 () Bool)

(assert (=> d!44235 e!91986))

(declare-fun res!67408 () Bool)

(assert (=> d!44235 (=> (not res!67408) (not e!91986))))

(assert (=> d!44235 (= res!67408 (not (contains!904 lt!74067 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91985 () ListLongMap!1685)

(assert (=> d!44235 (= lt!74067 e!91985)))

(declare-fun c!26511 () Bool)

(assert (=> d!44235 (= c!26511 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44235 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44235 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74067)))

(declare-fun bm!15654 () Bool)

(assert (=> bm!15654 (= call!15657 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141130 () Bool)

(assert (=> b!141130 (= e!91987 call!15657)))

(declare-fun b!141131 () Bool)

(assert (=> b!141131 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141131 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 lt!73112)))))

(assert (=> b!141131 (= e!91981 (= (apply!120 lt!74067 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141132 () Bool)

(assert (=> b!141132 (= e!91983 (isEmpty!424 lt!74067))))

(declare-fun b!141133 () Bool)

(assert (=> b!141133 (= e!91985 e!91987)))

(declare-fun c!26509 () Bool)

(assert (=> b!141133 (= c!26509 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141134 () Bool)

(assert (=> b!141134 (= e!91984 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141134 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141135 () Bool)

(assert (=> b!141135 (= e!91982 e!91983)))

(declare-fun c!26510 () Bool)

(assert (=> b!141135 (= c!26510 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141136 () Bool)

(assert (=> b!141136 (= e!91985 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44235 c!26511) b!141136))

(assert (= (and d!44235 (not c!26511)) b!141133))

(assert (= (and b!141133 c!26509) b!141128))

(assert (= (and b!141133 (not c!26509)) b!141130))

(assert (= (or b!141128 b!141130) bm!15654))

(assert (= (and d!44235 res!67408) b!141125))

(assert (= (and b!141125 res!67409) b!141126))

(assert (= (and b!141126 res!67410) b!141134))

(assert (= (and b!141126 c!26508) b!141129))

(assert (= (and b!141126 (not c!26508)) b!141135))

(assert (= (and b!141129 res!67411) b!141131))

(assert (= (and b!141135 c!26510) b!141127))

(assert (= (and b!141135 (not c!26510)) b!141132))

(declare-fun b_lambda!6349 () Bool)

(assert (=> (not b_lambda!6349) (not b!141128)))

(assert (=> b!141128 t!6309))

(declare-fun b_and!8825 () Bool)

(assert (= b_and!8821 (and (=> t!6309 result!4187) b_and!8825)))

(assert (=> b!141128 t!6311))

(declare-fun b_and!8827 () Bool)

(assert (= b_and!8823 (and (=> t!6311 result!4189) b_and!8827)))

(declare-fun b_lambda!6351 () Bool)

(assert (=> (not b_lambda!6351) (not b!141131)))

(assert (=> b!141131 t!6309))

(declare-fun b_and!8829 () Bool)

(assert (= b_and!8825 (and (=> t!6309 result!4187) b_and!8829)))

(assert (=> b!141131 t!6311))

(declare-fun b_and!8831 () Bool)

(assert (= b_and!8827 (and (=> t!6311 result!4189) b_and!8831)))

(assert (=> b!141128 m!166927))

(declare-fun m!169209 () Bool)

(assert (=> b!141128 m!169209))

(declare-fun m!169211 () Bool)

(assert (=> b!141128 m!169211))

(assert (=> b!141128 m!166963))

(assert (=> b!141128 m!169209))

(declare-fun m!169213 () Bool)

(assert (=> b!141128 m!169213))

(assert (=> b!141128 m!167789))

(assert (=> b!141128 m!167789))

(assert (=> b!141128 m!166963))

(assert (=> b!141128 m!167791))

(declare-fun m!169215 () Bool)

(assert (=> b!141128 m!169215))

(assert (=> b!141134 m!166927))

(assert (=> b!141134 m!166927))

(assert (=> b!141134 m!166957))

(declare-fun m!169217 () Bool)

(assert (=> b!141127 m!169217))

(assert (=> b!141131 m!166927))

(assert (=> b!141131 m!166963))

(assert (=> b!141131 m!167789))

(assert (=> b!141131 m!167789))

(assert (=> b!141131 m!166963))

(assert (=> b!141131 m!167791))

(assert (=> b!141131 m!166927))

(declare-fun m!169219 () Bool)

(assert (=> b!141131 m!169219))

(declare-fun m!169221 () Bool)

(assert (=> b!141125 m!169221))

(declare-fun m!169223 () Bool)

(assert (=> d!44235 m!169223))

(assert (=> d!44235 m!166907))

(declare-fun m!169225 () Bool)

(assert (=> b!141132 m!169225))

(assert (=> b!141129 m!166927))

(assert (=> b!141129 m!166927))

(declare-fun m!169227 () Bool)

(assert (=> b!141129 m!169227))

(assert (=> b!141133 m!166927))

(assert (=> b!141133 m!166927))

(assert (=> b!141133 m!166957))

(assert (=> bm!15654 m!169217))

(assert (=> b!140392 d!44235))

(declare-fun d!44237 () Bool)

(assert (=> d!44237 (= (apply!120 lt!73617 lt!73612) (get!1535 (getValueByKey!177 (toList!858 lt!73617) lt!73612)))))

(declare-fun bs!5917 () Bool)

(assert (= bs!5917 d!44237))

(declare-fun m!169229 () Bool)

(assert (=> bs!5917 m!169229))

(assert (=> bs!5917 m!169229))

(declare-fun m!169231 () Bool)

(assert (=> bs!5917 m!169231))

(assert (=> b!140392 d!44237))

(declare-fun d!44239 () Bool)

(assert (=> d!44239 (= (apply!120 (+!173 lt!73620 (tuple2!2623 lt!73616 (minValue!2789 newMap!16))) lt!73619) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73620 (tuple2!2623 lt!73616 (minValue!2789 newMap!16)))) lt!73619)))))

(declare-fun bs!5918 () Bool)

(assert (= bs!5918 d!44239))

(declare-fun m!169233 () Bool)

(assert (=> bs!5918 m!169233))

(assert (=> bs!5918 m!169233))

(declare-fun m!169235 () Bool)

(assert (=> bs!5918 m!169235))

(assert (=> b!140392 d!44239))

(declare-fun d!44241 () Bool)

(assert (=> d!44241 (= (apply!120 (+!173 lt!73617 (tuple2!2623 lt!73606 (minValue!2789 newMap!16))) lt!73612) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73617 (tuple2!2623 lt!73606 (minValue!2789 newMap!16)))) lt!73612)))))

(declare-fun bs!5919 () Bool)

(assert (= bs!5919 d!44241))

(declare-fun m!169237 () Bool)

(assert (=> bs!5919 m!169237))

(assert (=> bs!5919 m!169237))

(declare-fun m!169239 () Bool)

(assert (=> bs!5919 m!169239))

(assert (=> b!140392 d!44241))

(declare-fun d!44243 () Bool)

(assert (=> d!44243 (= (apply!120 lt!73620 lt!73619) (get!1535 (getValueByKey!177 (toList!858 lt!73620) lt!73619)))))

(declare-fun bs!5920 () Bool)

(assert (= bs!5920 d!44243))

(declare-fun m!169241 () Bool)

(assert (=> bs!5920 m!169241))

(assert (=> bs!5920 m!169241))

(declare-fun m!169243 () Bool)

(assert (=> bs!5920 m!169243))

(assert (=> b!140392 d!44243))

(declare-fun b!141138 () Bool)

(declare-fun e!91988 () Option!183)

(declare-fun e!91989 () Option!183)

(assert (=> b!141138 (= e!91988 e!91989)))

(declare-fun c!26513 () Bool)

(assert (=> b!141138 (= c!26513 (and ((_ is Cons!1715) (toList!858 lt!73549)) (not (= (_1!1322 (h!2322 (toList!858 lt!73549))) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141139 () Bool)

(assert (=> b!141139 (= e!91989 (getValueByKey!177 (t!6295 (toList!858 lt!73549)) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141137 () Bool)

(assert (=> b!141137 (= e!91988 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73549)))))))

(declare-fun b!141140 () Bool)

(assert (=> b!141140 (= e!91989 None!181)))

(declare-fun c!26512 () Bool)

(declare-fun d!44245 () Bool)

(assert (=> d!44245 (= c!26512 (and ((_ is Cons!1715) (toList!858 lt!73549)) (= (_1!1322 (h!2322 (toList!858 lt!73549))) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44245 (= (getValueByKey!177 (toList!858 lt!73549) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) e!91988)))

(assert (= (and d!44245 c!26512) b!141137))

(assert (= (and d!44245 (not c!26512)) b!141138))

(assert (= (and b!141138 c!26513) b!141139))

(assert (= (and b!141138 (not c!26513)) b!141140))

(declare-fun m!169245 () Bool)

(assert (=> b!141139 m!169245))

(assert (=> b!140302 d!44245))

(assert (=> d!44123 d!44119))

(assert (=> d!44123 d!43565))

(assert (=> d!44123 d!44121))

(declare-fun b!141141 () Bool)

(declare-fun e!91990 () (_ BitVec 32))

(assert (=> b!141141 (= e!91990 #b00000000000000000000000000000000)))

(declare-fun b!141143 () Bool)

(declare-fun e!91991 () (_ BitVec 32))

(declare-fun call!15658 () (_ BitVec 32))

(assert (=> b!141143 (= e!91991 (bvadd #b00000000000000000000000000000001 call!15658))))

(declare-fun d!44247 () Bool)

(declare-fun lt!74072 () (_ BitVec 32))

(assert (=> d!44247 (and (bvsge lt!74072 #b00000000000000000000000000000000) (bvsle lt!74072 (bvsub (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44247 (= lt!74072 e!91990)))

(declare-fun c!26514 () Bool)

(assert (=> d!44247 (= c!26514 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44247 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 newMap!16)) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!44247 (= (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))) lt!74072)))

(declare-fun b!141142 () Bool)

(assert (=> b!141142 (= e!91990 e!91991)))

(declare-fun c!26515 () Bool)

(assert (=> b!141142 (= c!26515 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!15655 () Bool)

(assert (=> bm!15655 (= call!15658 (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141144 () Bool)

(assert (=> b!141144 (= e!91991 call!15658)))

(assert (= (and d!44247 c!26514) b!141141))

(assert (= (and d!44247 (not c!26514)) b!141142))

(assert (= (and b!141142 c!26515) b!141143))

(assert (= (and b!141142 (not c!26515)) b!141144))

(assert (= (or b!141143 b!141144) bm!15655))

(declare-fun m!169247 () Bool)

(assert (=> b!141142 m!169247))

(assert (=> b!141142 m!169247))

(declare-fun m!169249 () Bool)

(assert (=> b!141142 m!169249))

(declare-fun m!169251 () Bool)

(assert (=> bm!15655 m!169251))

(assert (=> bm!15577 d!44247))

(declare-fun d!44249 () Bool)

(declare-fun lt!74073 () Bool)

(assert (=> d!44249 (= lt!74073 (select (content!138 (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!91993 () Bool)

(assert (=> d!44249 (= lt!74073 e!91993)))

(declare-fun res!67412 () Bool)

(assert (=> d!44249 (=> (not res!67412) (not e!91993))))

(assert (=> d!44249 (= res!67412 ((_ is Cons!1716) (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))))))

(assert (=> d!44249 (= (contains!906 (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!74073)))

(declare-fun b!141145 () Bool)

(declare-fun e!91992 () Bool)

(assert (=> b!141145 (= e!91993 e!91992)))

(declare-fun res!67413 () Bool)

(assert (=> b!141145 (=> res!67413 e!91992)))

(assert (=> b!141145 (= res!67413 (= (h!2323 (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!141146 () Bool)

(assert (=> b!141146 (= e!91992 (contains!906 (t!6296 (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!44249 res!67412) b!141145))

(assert (= (and b!141145 (not res!67413)) b!141146))

(declare-fun m!169253 () Bool)

(assert (=> d!44249 m!169253))

(assert (=> d!44249 m!167249))

(declare-fun m!169255 () Bool)

(assert (=> d!44249 m!169255))

(assert (=> b!141146 m!167249))

(declare-fun m!169257 () Bool)

(assert (=> b!141146 m!169257))

(assert (=> b!140506 d!44249))

(declare-fun call!15659 () Bool)

(declare-fun bm!15656 () Bool)

(assert (=> bm!15656 (= call!15659 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)))))

(declare-fun b!141147 () Bool)

(declare-fun e!91996 () Bool)

(declare-fun e!91995 () Bool)

(assert (=> b!141147 (= e!91996 e!91995)))

(declare-fun c!26516 () Bool)

(assert (=> b!141147 (= c!26516 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141148 () Bool)

(declare-fun e!91994 () Bool)

(assert (=> b!141148 (= e!91995 e!91994)))

(declare-fun lt!74076 () (_ BitVec 64))

(assert (=> b!141148 (= lt!74076 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74074 () Unit!4387)

(assert (=> b!141148 (= lt!74074 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!74076 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141148 (arrayContainsKey!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!74076 #b00000000000000000000000000000000)))

(declare-fun lt!74075 () Unit!4387)

(assert (=> b!141148 (= lt!74075 lt!74074)))

(declare-fun res!67414 () Bool)

(assert (=> b!141148 (= res!67414 (= (seekEntryOrOpen!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)) (Found!273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141148 (=> (not res!67414) (not e!91994))))

(declare-fun d!44251 () Bool)

(declare-fun res!67415 () Bool)

(assert (=> d!44251 (=> res!67415 e!91996)))

(assert (=> d!44251 (= res!67415 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!44251 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)) e!91996)))

(declare-fun b!141149 () Bool)

(assert (=> b!141149 (= e!91995 call!15659)))

(declare-fun b!141150 () Bool)

(assert (=> b!141150 (= e!91994 call!15659)))

(assert (= (and d!44251 (not res!67415)) b!141147))

(assert (= (and b!141147 c!26516) b!141148))

(assert (= (and b!141147 (not c!26516)) b!141149))

(assert (= (and b!141148 res!67414) b!141150))

(assert (= (or b!141150 b!141149) bm!15656))

(declare-fun m!169259 () Bool)

(assert (=> bm!15656 m!169259))

(assert (=> b!141147 m!169247))

(assert (=> b!141147 m!169247))

(assert (=> b!141147 m!169249))

(assert (=> b!141148 m!169247))

(declare-fun m!169261 () Bool)

(assert (=> b!141148 m!169261))

(declare-fun m!169263 () Bool)

(assert (=> b!141148 m!169263))

(assert (=> b!141148 m!169247))

(declare-fun m!169265 () Bool)

(assert (=> b!141148 m!169265))

(assert (=> bm!15592 d!44251))

(assert (=> b!140279 d!44131))

(declare-fun d!44253 () Bool)

(assert (=> d!44253 (= (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)) (and (not (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140515 d!44253))

(declare-fun b!141152 () Bool)

(declare-fun e!91997 () Option!183)

(declare-fun e!91998 () Option!183)

(assert (=> b!141152 (= e!91997 e!91998)))

(declare-fun c!26518 () Bool)

(assert (=> b!141152 (= c!26518 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73290))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73290)))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141153 () Bool)

(assert (=> b!141153 (= e!91998 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73290))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141151 () Bool)

(assert (=> b!141151 (= e!91997 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73290))))))))

(declare-fun b!141154 () Bool)

(assert (=> b!141154 (= e!91998 None!181)))

(declare-fun d!44255 () Bool)

(declare-fun c!26517 () Bool)

(assert (=> d!44255 (= c!26517 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73290))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73290)))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44255 (= (getValueByKey!177 (t!6295 (toList!858 lt!73290)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!91997)))

(assert (= (and d!44255 c!26517) b!141151))

(assert (= (and d!44255 (not c!26517)) b!141152))

(assert (= (and b!141152 c!26518) b!141153))

(assert (= (and b!141152 (not c!26518)) b!141154))

(declare-fun m!169267 () Bool)

(assert (=> b!141153 m!169267))

(assert (=> b!140472 d!44255))

(declare-fun d!44257 () Bool)

(assert (=> d!44257 (= (+!173 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!531 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!44257 true))

(declare-fun _$3!49 () Unit!4387)

(assert (=> d!44257 (= (choose!872 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) _$3!49)))

(declare-fun bs!5921 () Bool)

(assert (= bs!5921 d!44257))

(assert (=> bs!5921 m!166773))

(assert (=> bs!5921 m!167207))

(assert (=> bs!5921 m!167211))

(assert (=> bs!5921 m!166773))

(assert (=> bs!5921 m!167217))

(assert (=> bs!5921 m!167195))

(assert (=> d!43873 d!44257))

(assert (=> d!43873 d!43697))

(declare-fun d!44259 () Bool)

(assert (=> d!44259 (isDefined!129 (getValueByKey!177 (toList!858 lt!73200) lt!73195))))

(declare-fun lt!74077 () Unit!4387)

(assert (=> d!44259 (= lt!74077 (choose!864 (toList!858 lt!73200) lt!73195))))

(declare-fun e!91999 () Bool)

(assert (=> d!44259 e!91999))

(declare-fun res!67416 () Bool)

(assert (=> d!44259 (=> (not res!67416) (not e!91999))))

(assert (=> d!44259 (= res!67416 (isStrictlySorted!312 (toList!858 lt!73200)))))

(assert (=> d!44259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73200) lt!73195) lt!74077)))

(declare-fun b!141155 () Bool)

(assert (=> b!141155 (= e!91999 (containsKey!180 (toList!858 lt!73200) lt!73195))))

(assert (= (and d!44259 res!67416) b!141155))

(assert (=> d!44259 m!167371))

(assert (=> d!44259 m!167371))

(assert (=> d!44259 m!167839))

(declare-fun m!169269 () Bool)

(assert (=> d!44259 m!169269))

(assert (=> d!44259 m!168167))

(assert (=> b!141155 m!167835))

(assert (=> b!140419 d!44259))

(declare-fun d!44261 () Bool)

(assert (=> d!44261 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73200) lt!73195)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73200) lt!73195))))))

(declare-fun bs!5922 () Bool)

(assert (= bs!5922 d!44261))

(assert (=> bs!5922 m!167371))

(declare-fun m!169271 () Bool)

(assert (=> bs!5922 m!169271))

(assert (=> b!140419 d!44261))

(assert (=> b!140419 d!44091))

(declare-fun d!44263 () Bool)

(assert (=> d!44263 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5923 () Bool)

(assert (= bs!5923 d!44263))

(assert (=> bs!5923 m!168741))

(declare-fun m!169273 () Bool)

(assert (=> bs!5923 m!169273))

(assert (=> b!140951 d!44263))

(declare-fun b!141157 () Bool)

(declare-fun e!92000 () Option!183)

(declare-fun e!92001 () Option!183)

(assert (=> b!141157 (= e!92000 e!92001)))

(declare-fun c!26520 () Bool)

(assert (=> b!141157 (= c!26520 (and ((_ is Cons!1715) (toList!858 lt!73215)) (not (= (_1!1322 (h!2322 (toList!858 lt!73215))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141158 () Bool)

(assert (=> b!141158 (= e!92001 (getValueByKey!177 (t!6295 (toList!858 lt!73215)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141156 () Bool)

(assert (=> b!141156 (= e!92000 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73215)))))))

(declare-fun b!141159 () Bool)

(assert (=> b!141159 (= e!92001 None!181)))

(declare-fun d!44265 () Bool)

(declare-fun c!26519 () Bool)

(assert (=> d!44265 (= c!26519 (and ((_ is Cons!1715) (toList!858 lt!73215)) (= (_1!1322 (h!2322 (toList!858 lt!73215))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44265 (= (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000) e!92000)))

(assert (= (and d!44265 c!26519) b!141156))

(assert (= (and d!44265 (not c!26519)) b!141157))

(assert (= (and b!141157 c!26520) b!141158))

(assert (= (and b!141157 (not c!26520)) b!141159))

(declare-fun m!169275 () Bool)

(assert (=> b!141158 m!169275))

(assert (=> b!140951 d!44265))

(declare-fun d!44267 () Bool)

(assert (=> d!44267 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5924 () Bool)

(assert (= bs!5924 d!44267))

(assert (=> bs!5924 m!167073))

(declare-fun m!169277 () Bool)

(assert (=> bs!5924 m!169277))

(assert (=> b!140708 d!44267))

(assert (=> b!140708 d!43819))

(declare-fun d!44269 () Bool)

(declare-fun lt!74078 () Bool)

(assert (=> d!44269 (= lt!74078 (select (content!139 (toList!858 lt!73902)) (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun e!92002 () Bool)

(assert (=> d!44269 (= lt!74078 e!92002)))

(declare-fun res!67417 () Bool)

(assert (=> d!44269 (=> (not res!67417) (not e!92002))))

(assert (=> d!44269 (= res!67417 ((_ is Cons!1715) (toList!858 lt!73902)))))

(assert (=> d!44269 (= (contains!907 (toList!858 lt!73902) (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!74078)))

(declare-fun b!141160 () Bool)

(declare-fun e!92003 () Bool)

(assert (=> b!141160 (= e!92002 e!92003)))

(declare-fun res!67418 () Bool)

(assert (=> b!141160 (=> res!67418 e!92003)))

(assert (=> b!141160 (= res!67418 (= (h!2322 (toList!858 lt!73902)) (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun b!141161 () Bool)

(assert (=> b!141161 (= e!92003 (contains!907 (t!6295 (toList!858 lt!73902)) (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44269 res!67417) b!141160))

(assert (= (and b!141160 (not res!67418)) b!141161))

(declare-fun m!169279 () Bool)

(assert (=> d!44269 m!169279))

(declare-fun m!169281 () Bool)

(assert (=> d!44269 m!169281))

(declare-fun m!169283 () Bool)

(assert (=> b!141161 m!169283))

(assert (=> b!140893 d!44269))

(declare-fun d!44271 () Bool)

(declare-fun lt!74079 () Bool)

(assert (=> d!44271 (= lt!74079 (select (content!139 lt!73274) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun e!92004 () Bool)

(assert (=> d!44271 (= lt!74079 e!92004)))

(declare-fun res!67419 () Bool)

(assert (=> d!44271 (=> (not res!67419) (not e!92004))))

(assert (=> d!44271 (= res!67419 ((_ is Cons!1715) lt!73274))))

(assert (=> d!44271 (= (contains!907 lt!73274 (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!74079)))

(declare-fun b!141162 () Bool)

(declare-fun e!92005 () Bool)

(assert (=> b!141162 (= e!92004 e!92005)))

(declare-fun res!67420 () Bool)

(assert (=> b!141162 (=> res!67420 e!92005)))

(assert (=> b!141162 (= res!67420 (= (h!2322 lt!73274) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141163 () Bool)

(assert (=> b!141163 (= e!92005 (contains!907 (t!6295 lt!73274) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (= (and d!44271 res!67419) b!141162))

(assert (= (and b!141162 (not res!67420)) b!141163))

(declare-fun m!169285 () Bool)

(assert (=> d!44271 m!169285))

(declare-fun m!169287 () Bool)

(assert (=> d!44271 m!169287))

(declare-fun m!169289 () Bool)

(assert (=> b!141163 m!169289))

(assert (=> b!140923 d!44271))

(declare-fun d!44273 () Bool)

(assert (=> d!44273 (= (apply!120 lt!73713 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73713) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5925 () Bool)

(assert (= bs!5925 d!44273))

(declare-fun m!169291 () Bool)

(assert (=> bs!5925 m!169291))

(assert (=> bs!5925 m!169291))

(declare-fun m!169293 () Bool)

(assert (=> bs!5925 m!169293))

(assert (=> b!140571 d!44273))

(declare-fun lt!74080 () Bool)

(declare-fun d!44275 () Bool)

(assert (=> d!44275 (= lt!74080 (select (content!139 lt!73469) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92006 () Bool)

(assert (=> d!44275 (= lt!74080 e!92006)))

(declare-fun res!67421 () Bool)

(assert (=> d!44275 (=> (not res!67421) (not e!92006))))

(assert (=> d!44275 (= res!67421 ((_ is Cons!1715) lt!73469))))

(assert (=> d!44275 (= (contains!907 lt!73469 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74080)))

(declare-fun b!141164 () Bool)

(declare-fun e!92007 () Bool)

(assert (=> b!141164 (= e!92006 e!92007)))

(declare-fun res!67422 () Bool)

(assert (=> b!141164 (=> res!67422 e!92007)))

(assert (=> b!141164 (= res!67422 (= (h!2322 lt!73469) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141165 () Bool)

(assert (=> b!141165 (= e!92007 (contains!907 (t!6295 lt!73469) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44275 res!67421) b!141164))

(assert (= (and b!141164 (not res!67422)) b!141165))

(declare-fun m!169295 () Bool)

(assert (=> d!44275 m!169295))

(declare-fun m!169297 () Bool)

(assert (=> d!44275 m!169297))

(declare-fun m!169299 () Bool)

(assert (=> b!141165 m!169299))

(assert (=> b!140760 d!44275))

(declare-fun d!44277 () Bool)

(declare-fun e!92008 () Bool)

(assert (=> d!44277 e!92008))

(declare-fun res!67423 () Bool)

(assert (=> d!44277 (=> res!67423 e!92008)))

(declare-fun lt!74084 () Bool)

(assert (=> d!44277 (= res!67423 (not lt!74084))))

(declare-fun lt!74081 () Bool)

(assert (=> d!44277 (= lt!74084 lt!74081)))

(declare-fun lt!74083 () Unit!4387)

(declare-fun e!92009 () Unit!4387)

(assert (=> d!44277 (= lt!74083 e!92009)))

(declare-fun c!26521 () Bool)

(assert (=> d!44277 (= c!26521 lt!74081)))

(assert (=> d!44277 (= lt!74081 (containsKey!180 (toList!858 lt!73999) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44277 (= (contains!904 lt!73999 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74084)))

(declare-fun b!141166 () Bool)

(declare-fun lt!74082 () Unit!4387)

(assert (=> b!141166 (= e!92009 lt!74082)))

(assert (=> b!141166 (= lt!74082 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73999) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> b!141166 (isDefined!129 (getValueByKey!177 (toList!858 lt!73999) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141167 () Bool)

(declare-fun Unit!4451 () Unit!4387)

(assert (=> b!141167 (= e!92009 Unit!4451)))

(declare-fun b!141168 () Bool)

(assert (=> b!141168 (= e!92008 (isDefined!129 (getValueByKey!177 (toList!858 lt!73999) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!44277 c!26521) b!141166))

(assert (= (and d!44277 (not c!26521)) b!141167))

(assert (= (and d!44277 (not res!67423)) b!141168))

(declare-fun m!169301 () Bool)

(assert (=> d!44277 m!169301))

(declare-fun m!169303 () Bool)

(assert (=> b!141166 m!169303))

(assert (=> b!141166 m!168961))

(assert (=> b!141166 m!168961))

(declare-fun m!169305 () Bool)

(assert (=> b!141166 m!169305))

(assert (=> b!141168 m!168961))

(assert (=> b!141168 m!168961))

(assert (=> b!141168 m!169305))

(assert (=> d!44147 d!44277))

(declare-fun b!141170 () Bool)

(declare-fun e!92010 () Option!183)

(declare-fun e!92011 () Option!183)

(assert (=> b!141170 (= e!92010 e!92011)))

(declare-fun c!26523 () Bool)

(assert (=> b!141170 (= c!26523 (and ((_ is Cons!1715) lt!73998) (not (= (_1!1322 (h!2322 lt!73998)) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!141171 () Bool)

(assert (=> b!141171 (= e!92011 (getValueByKey!177 (t!6295 lt!73998) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141169 () Bool)

(assert (=> b!141169 (= e!92010 (Some!182 (_2!1322 (h!2322 lt!73998))))))

(declare-fun b!141172 () Bool)

(assert (=> b!141172 (= e!92011 None!181)))

(declare-fun c!26522 () Bool)

(declare-fun d!44279 () Bool)

(assert (=> d!44279 (= c!26522 (and ((_ is Cons!1715) lt!73998) (= (_1!1322 (h!2322 lt!73998)) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!44279 (= (getValueByKey!177 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92010)))

(assert (= (and d!44279 c!26522) b!141169))

(assert (= (and d!44279 (not c!26522)) b!141170))

(assert (= (and b!141170 c!26523) b!141171))

(assert (= (and b!141170 (not c!26523)) b!141172))

(declare-fun m!169307 () Bool)

(assert (=> b!141171 m!169307))

(assert (=> d!44147 d!44279))

(declare-fun d!44281 () Bool)

(assert (=> d!44281 (= (getValueByKey!177 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74085 () Unit!4387)

(assert (=> d!44281 (= lt!74085 (choose!873 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92012 () Bool)

(assert (=> d!44281 e!92012))

(declare-fun res!67424 () Bool)

(assert (=> d!44281 (=> (not res!67424) (not e!92012))))

(assert (=> d!44281 (= res!67424 (isStrictlySorted!312 lt!73998))))

(assert (=> d!44281 (= (lemmaContainsTupThenGetReturnValue!91 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74085)))

(declare-fun b!141173 () Bool)

(declare-fun res!67425 () Bool)

(assert (=> b!141173 (=> (not res!67425) (not e!92012))))

(assert (=> b!141173 (= res!67425 (containsKey!180 lt!73998 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141174 () Bool)

(assert (=> b!141174 (= e!92012 (contains!907 lt!73998 (tuple2!2623 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!44281 res!67424) b!141173))

(assert (= (and b!141173 res!67425) b!141174))

(assert (=> d!44281 m!168955))

(declare-fun m!169309 () Bool)

(assert (=> d!44281 m!169309))

(declare-fun m!169311 () Bool)

(assert (=> d!44281 m!169311))

(declare-fun m!169313 () Bool)

(assert (=> b!141173 m!169313))

(declare-fun m!169315 () Bool)

(assert (=> b!141174 m!169315))

(assert (=> d!44147 d!44281))

(declare-fun bm!15657 () Bool)

(declare-fun call!15662 () List!1719)

(declare-fun call!15661 () List!1719)

(assert (=> bm!15657 (= call!15662 call!15661)))

(declare-fun b!141176 () Bool)

(declare-fun e!92014 () List!1719)

(declare-fun e!92016 () List!1719)

(assert (=> b!141176 (= e!92014 e!92016)))

(declare-fun c!26527 () Bool)

(assert (=> b!141176 (= c!26527 (and ((_ is Cons!1715) (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (= (_1!1322 (h!2322 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141177 () Bool)

(declare-fun res!67427 () Bool)

(declare-fun e!92013 () Bool)

(assert (=> b!141177 (=> (not res!67427) (not e!92013))))

(declare-fun lt!74086 () List!1719)

(assert (=> b!141177 (= res!67427 (containsKey!180 lt!74086 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun c!26525 () Bool)

(declare-fun b!141178 () Bool)

(assert (=> b!141178 (= c!26525 (and ((_ is Cons!1715) (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (bvsgt (_1!1322 (h!2322 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun e!92015 () List!1719)

(assert (=> b!141178 (= e!92016 e!92015)))

(declare-fun bm!15658 () Bool)

(declare-fun call!15660 () List!1719)

(assert (=> bm!15658 (= call!15661 call!15660)))

(declare-fun b!141179 () Bool)

(assert (=> b!141179 (= e!92016 call!15661)))

(declare-fun b!141180 () Bool)

(assert (=> b!141180 (= e!92014 call!15660)))

(declare-fun b!141181 () Bool)

(assert (=> b!141181 (= e!92013 (contains!907 lt!74086 (tuple2!2623 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun e!92017 () List!1719)

(declare-fun b!141175 () Bool)

(assert (=> b!141175 (= e!92017 (ite c!26527 (t!6295 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (ite c!26525 (Cons!1715 (h!2322 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (t!6295 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))))) Nil!1716)))))

(declare-fun d!44283 () Bool)

(assert (=> d!44283 e!92013))

(declare-fun res!67426 () Bool)

(assert (=> d!44283 (=> (not res!67426) (not e!92013))))

(assert (=> d!44283 (= res!67426 (isStrictlySorted!312 lt!74086))))

(assert (=> d!44283 (= lt!74086 e!92014)))

(declare-fun c!26526 () Bool)

(assert (=> d!44283 (= c!26526 (and ((_ is Cons!1715) (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (bvslt (_1!1322 (h!2322 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!44283 (isStrictlySorted!312 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))))))

(assert (=> d!44283 (= (insertStrictlySorted!94 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74086)))

(declare-fun b!141182 () Bool)

(assert (=> b!141182 (= e!92015 call!15662)))

(declare-fun b!141183 () Bool)

(assert (=> b!141183 (= e!92015 call!15662)))

(declare-fun bm!15659 () Bool)

(assert (=> bm!15659 (= call!15660 ($colon$colon!93 e!92017 (ite c!26526 (h!2322 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (tuple2!2623 (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun c!26524 () Bool)

(assert (=> bm!15659 (= c!26524 c!26526)))

(declare-fun b!141184 () Bool)

(assert (=> b!141184 (= e!92017 (insertStrictlySorted!94 (t!6295 (toList!858 (ite c!26214 call!15523 (ite c!26215 call!15522 call!15524)))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44283 c!26526) b!141180))

(assert (= (and d!44283 (not c!26526)) b!141176))

(assert (= (and b!141176 c!26527) b!141179))

(assert (= (and b!141176 (not c!26527)) b!141178))

(assert (= (and b!141178 c!26525) b!141182))

(assert (= (and b!141178 (not c!26525)) b!141183))

(assert (= (or b!141182 b!141183) bm!15657))

(assert (= (or b!141179 bm!15657) bm!15658))

(assert (= (or b!141180 bm!15658) bm!15659))

(assert (= (and bm!15659 c!26524) b!141184))

(assert (= (and bm!15659 (not c!26524)) b!141175))

(assert (= (and d!44283 res!67426) b!141177))

(assert (= (and b!141177 res!67427) b!141181))

(declare-fun m!169317 () Bool)

(assert (=> bm!15659 m!169317))

(declare-fun m!169319 () Bool)

(assert (=> d!44283 m!169319))

(declare-fun m!169321 () Bool)

(assert (=> d!44283 m!169321))

(declare-fun m!169323 () Bool)

(assert (=> b!141177 m!169323))

(declare-fun m!169325 () Bool)

(assert (=> b!141184 m!169325))

(declare-fun m!169327 () Bool)

(assert (=> b!141181 m!169327))

(assert (=> d!44147 d!44283))

(declare-fun bm!15660 () Bool)

(declare-fun call!15665 () List!1719)

(declare-fun call!15664 () List!1719)

(assert (=> bm!15660 (= call!15665 call!15664)))

(declare-fun b!141186 () Bool)

(declare-fun e!92019 () List!1719)

(declare-fun e!92021 () List!1719)

(assert (=> b!141186 (= e!92019 e!92021)))

(declare-fun c!26531 () Bool)

(assert (=> b!141186 (= c!26531 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73188))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73188)))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141187 () Bool)

(declare-fun res!67429 () Bool)

(declare-fun e!92018 () Bool)

(assert (=> b!141187 (=> (not res!67429) (not e!92018))))

(declare-fun lt!74087 () List!1719)

(assert (=> b!141187 (= res!67429 (containsKey!180 lt!74087 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun c!26529 () Bool)

(declare-fun b!141188 () Bool)

(assert (=> b!141188 (= c!26529 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73188))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73188)))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92020 () List!1719)

(assert (=> b!141188 (= e!92021 e!92020)))

(declare-fun bm!15661 () Bool)

(declare-fun call!15663 () List!1719)

(assert (=> bm!15661 (= call!15664 call!15663)))

(declare-fun b!141189 () Bool)

(assert (=> b!141189 (= e!92021 call!15664)))

(declare-fun b!141190 () Bool)

(assert (=> b!141190 (= e!92019 call!15663)))

(declare-fun b!141191 () Bool)

(assert (=> b!141191 (= e!92018 (contains!907 lt!74087 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141185 () Bool)

(declare-fun e!92022 () List!1719)

(assert (=> b!141185 (= e!92022 (ite c!26531 (t!6295 (t!6295 (toList!858 lt!73188))) (ite c!26529 (Cons!1715 (h!2322 (t!6295 (toList!858 lt!73188))) (t!6295 (t!6295 (toList!858 lt!73188)))) Nil!1716)))))

(declare-fun d!44285 () Bool)

(assert (=> d!44285 e!92018))

(declare-fun res!67428 () Bool)

(assert (=> d!44285 (=> (not res!67428) (not e!92018))))

(assert (=> d!44285 (= res!67428 (isStrictlySorted!312 lt!74087))))

(assert (=> d!44285 (= lt!74087 e!92019)))

(declare-fun c!26530 () Bool)

(assert (=> d!44285 (= c!26530 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73188))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73188)))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44285 (isStrictlySorted!312 (t!6295 (toList!858 lt!73188)))))

(assert (=> d!44285 (= (insertStrictlySorted!94 (t!6295 (toList!858 lt!73188)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74087)))

(declare-fun b!141192 () Bool)

(assert (=> b!141192 (= e!92020 call!15665)))

(declare-fun b!141193 () Bool)

(assert (=> b!141193 (= e!92020 call!15665)))

(declare-fun bm!15662 () Bool)

(assert (=> bm!15662 (= call!15663 ($colon$colon!93 e!92022 (ite c!26530 (h!2322 (t!6295 (toList!858 lt!73188))) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26528 () Bool)

(assert (=> bm!15662 (= c!26528 c!26530)))

(declare-fun b!141194 () Bool)

(assert (=> b!141194 (= e!92022 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 lt!73188))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44285 c!26530) b!141190))

(assert (= (and d!44285 (not c!26530)) b!141186))

(assert (= (and b!141186 c!26531) b!141189))

(assert (= (and b!141186 (not c!26531)) b!141188))

(assert (= (and b!141188 c!26529) b!141192))

(assert (= (and b!141188 (not c!26529)) b!141193))

(assert (= (or b!141192 b!141193) bm!15660))

(assert (= (or b!141189 bm!15660) bm!15661))

(assert (= (or b!141190 bm!15661) bm!15662))

(assert (= (and bm!15662 c!26528) b!141194))

(assert (= (and bm!15662 (not c!26528)) b!141185))

(assert (= (and d!44285 res!67428) b!141187))

(assert (= (and b!141187 res!67429) b!141191))

(declare-fun m!169329 () Bool)

(assert (=> bm!15662 m!169329))

(declare-fun m!169331 () Bool)

(assert (=> d!44285 m!169331))

(declare-fun m!169333 () Bool)

(assert (=> d!44285 m!169333))

(declare-fun m!169335 () Bool)

(assert (=> b!141187 m!169335))

(declare-fun m!169337 () Bool)

(assert (=> b!141194 m!169337))

(declare-fun m!169339 () Bool)

(assert (=> b!141191 m!169339))

(assert (=> b!141001 d!44285))

(declare-fun d!44287 () Bool)

(declare-fun res!67430 () Bool)

(declare-fun e!92023 () Bool)

(assert (=> d!44287 (=> res!67430 e!92023)))

(assert (=> d!44287 (= res!67430 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!44287 (= (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92023)))

(declare-fun b!141195 () Bool)

(declare-fun e!92024 () Bool)

(assert (=> b!141195 (= e!92023 e!92024)))

(declare-fun res!67431 () Bool)

(assert (=> b!141195 (=> (not res!67431) (not e!92024))))

(assert (=> b!141195 (= res!67431 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141196 () Bool)

(assert (=> b!141196 (= e!92024 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44287 (not res!67430)) b!141195))

(assert (= (and b!141195 res!67431) b!141196))

(declare-fun m!169341 () Bool)

(assert (=> d!44287 m!169341))

(assert (=> b!141196 m!166633))

(declare-fun m!169343 () Bool)

(assert (=> b!141196 m!169343))

(assert (=> b!140514 d!44287))

(declare-fun d!44289 () Bool)

(declare-fun e!92025 () Bool)

(assert (=> d!44289 e!92025))

(declare-fun res!67432 () Bool)

(assert (=> d!44289 (=> res!67432 e!92025)))

(declare-fun lt!74091 () Bool)

(assert (=> d!44289 (= res!67432 (not lt!74091))))

(declare-fun lt!74088 () Bool)

(assert (=> d!44289 (= lt!74091 lt!74088)))

(declare-fun lt!74090 () Unit!4387)

(declare-fun e!92026 () Unit!4387)

(assert (=> d!44289 (= lt!74090 e!92026)))

(declare-fun c!26532 () Bool)

(assert (=> d!44289 (= c!26532 lt!74088)))

(assert (=> d!44289 (= lt!74088 (containsKey!180 (toList!858 lt!73770) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44289 (= (contains!904 lt!73770 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74091)))

(declare-fun b!141197 () Bool)

(declare-fun lt!74089 () Unit!4387)

(assert (=> b!141197 (= e!92026 lt!74089)))

(assert (=> b!141197 (= lt!74089 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73770) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141197 (isDefined!129 (getValueByKey!177 (toList!858 lt!73770) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141198 () Bool)

(declare-fun Unit!4452 () Unit!4387)

(assert (=> b!141198 (= e!92026 Unit!4452)))

(declare-fun b!141199 () Bool)

(assert (=> b!141199 (= e!92025 (isDefined!129 (getValueByKey!177 (toList!858 lt!73770) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44289 c!26532) b!141197))

(assert (= (and d!44289 (not c!26532)) b!141198))

(assert (= (and d!44289 (not res!67432)) b!141199))

(declare-fun m!169345 () Bool)

(assert (=> d!44289 m!169345))

(declare-fun m!169347 () Bool)

(assert (=> b!141197 m!169347))

(declare-fun m!169349 () Bool)

(assert (=> b!141197 m!169349))

(assert (=> b!141197 m!169349))

(declare-fun m!169351 () Bool)

(assert (=> b!141197 m!169351))

(assert (=> b!141199 m!169349))

(assert (=> b!141199 m!169349))

(assert (=> b!141199 m!169351))

(assert (=> bm!15613 d!44289))

(declare-fun d!44291 () Bool)

(declare-fun res!67433 () Bool)

(declare-fun e!92027 () Bool)

(assert (=> d!44291 (=> res!67433 e!92027)))

(assert (=> d!44291 (= res!67433 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73319)))))

(assert (=> d!44291 (= (containsKey!180 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319) e!92027)))

(declare-fun b!141200 () Bool)

(declare-fun e!92028 () Bool)

(assert (=> b!141200 (= e!92027 e!92028)))

(declare-fun res!67434 () Bool)

(assert (=> b!141200 (=> (not res!67434) (not e!92028))))

(assert (=> b!141200 (= res!67434 (and (or (not ((_ is Cons!1715) (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) (bvsle (_1!1322 (h!2322 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73319)) ((_ is Cons!1715) (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (bvslt (_1!1322 (h!2322 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73319)))))

(declare-fun b!141201 () Bool)

(assert (=> b!141201 (= e!92028 (containsKey!180 (t!6295 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) lt!73319))))

(assert (= (and d!44291 (not res!67433)) b!141200))

(assert (= (and b!141200 res!67434) b!141201))

(declare-fun m!169353 () Bool)

(assert (=> b!141201 m!169353))

(assert (=> d!44031 d!44291))

(declare-fun d!44293 () Bool)

(assert (=> d!44293 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73226)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73226)))))

(assert (=> d!43729 d!44293))

(declare-fun b!141203 () Bool)

(declare-fun e!92029 () Option!183)

(declare-fun e!92030 () Option!183)

(assert (=> b!141203 (= e!92029 e!92030)))

(declare-fun c!26534 () Bool)

(assert (=> b!141203 (= c!26534 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73226))))))

(declare-fun b!141204 () Bool)

(assert (=> b!141204 (= e!92030 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!73226))))

(declare-fun b!141202 () Bool)

(assert (=> b!141202 (= e!92029 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun b!141205 () Bool)

(assert (=> b!141205 (= e!92030 None!181)))

(declare-fun d!44295 () Bool)

(declare-fun c!26533 () Bool)

(assert (=> d!44295 (= c!26533 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73226)))))

(assert (=> d!44295 (= (getValueByKey!177 (toList!858 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73226) e!92029)))

(assert (= (and d!44295 c!26533) b!141202))

(assert (= (and d!44295 (not c!26533)) b!141203))

(assert (= (and b!141203 c!26534) b!141204))

(assert (= (and b!141203 (not c!26534)) b!141205))

(declare-fun m!169355 () Bool)

(assert (=> b!141204 m!169355))

(assert (=> d!43729 d!44295))

(assert (=> d!43753 d!43755))

(assert (=> d!43753 d!43757))

(declare-fun d!44297 () Bool)

(assert (=> d!44297 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44297 true))

(declare-fun _$12!413 () Unit!4387)

(assert (=> d!44297 (= (choose!864 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!413)))

(declare-fun bs!5926 () Bool)

(assert (= bs!5926 d!44297))

(assert (=> bs!5926 m!167115))

(assert (=> bs!5926 m!167115))

(assert (=> bs!5926 m!167117))

(assert (=> d!43753 d!44297))

(declare-fun d!44299 () Bool)

(declare-fun res!67435 () Bool)

(declare-fun e!92031 () Bool)

(assert (=> d!44299 (=> res!67435 e!92031)))

(assert (=> d!44299 (= res!67435 (or ((_ is Nil!1716) (toList!858 lt!73184)) ((_ is Nil!1716) (t!6295 (toList!858 lt!73184)))))))

(assert (=> d!44299 (= (isStrictlySorted!312 (toList!858 lt!73184)) e!92031)))

(declare-fun b!141206 () Bool)

(declare-fun e!92032 () Bool)

(assert (=> b!141206 (= e!92031 e!92032)))

(declare-fun res!67436 () Bool)

(assert (=> b!141206 (=> (not res!67436) (not e!92032))))

(assert (=> b!141206 (= res!67436 (bvslt (_1!1322 (h!2322 (toList!858 lt!73184))) (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184))))))))

(declare-fun b!141207 () Bool)

(assert (=> b!141207 (= e!92032 (isStrictlySorted!312 (t!6295 (toList!858 lt!73184))))))

(assert (= (and d!44299 (not res!67435)) b!141206))

(assert (= (and b!141206 res!67436) b!141207))

(declare-fun m!169357 () Bool)

(assert (=> b!141207 m!169357))

(assert (=> d!43753 d!44299))

(declare-fun b!141209 () Bool)

(declare-fun e!92033 () Option!183)

(declare-fun e!92034 () Option!183)

(assert (=> b!141209 (= e!92033 e!92034)))

(declare-fun c!26536 () Bool)

(assert (=> b!141209 (= c!26536 (and ((_ is Cons!1715) (toList!858 lt!73663)) (not (= (_1!1322 (h!2322 (toList!858 lt!73663))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!141210 () Bool)

(assert (=> b!141210 (= e!92034 (getValueByKey!177 (t!6295 (toList!858 lt!73663)) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141208 () Bool)

(assert (=> b!141208 (= e!92033 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73663)))))))

(declare-fun b!141211 () Bool)

(assert (=> b!141211 (= e!92034 None!181)))

(declare-fun c!26535 () Bool)

(declare-fun d!44301 () Bool)

(assert (=> d!44301 (= c!26535 (and ((_ is Cons!1715) (toList!858 lt!73663)) (= (_1!1322 (h!2322 (toList!858 lt!73663))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!44301 (= (getValueByKey!177 (toList!858 lt!73663) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92033)))

(assert (= (and d!44301 c!26535) b!141208))

(assert (= (and d!44301 (not c!26535)) b!141209))

(assert (= (and b!141209 c!26536) b!141210))

(assert (= (and b!141209 (not c!26536)) b!141211))

(declare-fun m!169359 () Bool)

(assert (=> b!141210 m!169359))

(assert (=> b!140464 d!44301))

(declare-fun d!44303 () Bool)

(declare-fun res!67437 () Bool)

(declare-fun e!92035 () Bool)

(assert (=> d!44303 (=> res!67437 e!92035)))

(assert (=> d!44303 (= res!67437 (and ((_ is Cons!1715) (toList!858 lt!73309)) (= (_1!1322 (h!2322 (toList!858 lt!73309))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44303 (= (containsKey!180 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) e!92035)))

(declare-fun b!141212 () Bool)

(declare-fun e!92036 () Bool)

(assert (=> b!141212 (= e!92035 e!92036)))

(declare-fun res!67438 () Bool)

(assert (=> b!141212 (=> (not res!67438) (not e!92036))))

(assert (=> b!141212 (= res!67438 (and (or (not ((_ is Cons!1715) (toList!858 lt!73309))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73309))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1715) (toList!858 lt!73309)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73309))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!141213 () Bool)

(assert (=> b!141213 (= e!92036 (containsKey!180 (t!6295 (toList!858 lt!73309)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44303 (not res!67437)) b!141212))

(assert (= (and b!141212 res!67438) b!141213))

(assert (=> b!141213 m!166927))

(declare-fun m!169361 () Bool)

(assert (=> b!141213 m!169361))

(assert (=> d!44125 d!44303))

(declare-fun d!44305 () Bool)

(assert (=> d!44305 (not (contains!904 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627)) lt!73628))))

(declare-fun lt!74092 () Unit!4387)

(assert (=> d!44305 (= lt!74092 (choose!874 lt!73625 lt!73623 lt!73627 lt!73628))))

(declare-fun e!92037 () Bool)

(assert (=> d!44305 e!92037))

(declare-fun res!67439 () Bool)

(assert (=> d!44305 (=> (not res!67439) (not e!92037))))

(assert (=> d!44305 (= res!67439 (not (contains!904 lt!73625 lt!73628)))))

(assert (=> d!44305 (= (addStillNotContains!66 lt!73625 lt!73623 lt!73627 lt!73628) lt!74092)))

(declare-fun b!141214 () Bool)

(assert (=> b!141214 (= e!92037 (not (= lt!73623 lt!73628)))))

(assert (= (and d!44305 res!67439) b!141214))

(assert (=> d!44305 m!167801))

(assert (=> d!44305 m!167801))

(assert (=> d!44305 m!167803))

(declare-fun m!169363 () Bool)

(assert (=> d!44305 m!169363))

(declare-fun m!169365 () Bool)

(assert (=> d!44305 m!169365))

(assert (=> b!140406 d!44305))

(declare-fun d!44307 () Bool)

(declare-fun e!92038 () Bool)

(assert (=> d!44307 e!92038))

(declare-fun res!67440 () Bool)

(assert (=> d!44307 (=> (not res!67440) (not e!92038))))

(declare-fun lt!74095 () ListLongMap!1685)

(assert (=> d!44307 (= res!67440 (contains!904 lt!74095 (_1!1322 (tuple2!2623 lt!73623 lt!73627))))))

(declare-fun lt!74094 () List!1719)

(assert (=> d!44307 (= lt!74095 (ListLongMap!1686 lt!74094))))

(declare-fun lt!74093 () Unit!4387)

(declare-fun lt!74096 () Unit!4387)

(assert (=> d!44307 (= lt!74093 lt!74096)))

(assert (=> d!44307 (= (getValueByKey!177 lt!74094 (_1!1322 (tuple2!2623 lt!73623 lt!73627))) (Some!182 (_2!1322 (tuple2!2623 lt!73623 lt!73627))))))

(assert (=> d!44307 (= lt!74096 (lemmaContainsTupThenGetReturnValue!91 lt!74094 (_1!1322 (tuple2!2623 lt!73623 lt!73627)) (_2!1322 (tuple2!2623 lt!73623 lt!73627))))))

(assert (=> d!44307 (= lt!74094 (insertStrictlySorted!94 (toList!858 lt!73625) (_1!1322 (tuple2!2623 lt!73623 lt!73627)) (_2!1322 (tuple2!2623 lt!73623 lt!73627))))))

(assert (=> d!44307 (= (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627)) lt!74095)))

(declare-fun b!141215 () Bool)

(declare-fun res!67441 () Bool)

(assert (=> b!141215 (=> (not res!67441) (not e!92038))))

(assert (=> b!141215 (= res!67441 (= (getValueByKey!177 (toList!858 lt!74095) (_1!1322 (tuple2!2623 lt!73623 lt!73627))) (Some!182 (_2!1322 (tuple2!2623 lt!73623 lt!73627)))))))

(declare-fun b!141216 () Bool)

(assert (=> b!141216 (= e!92038 (contains!907 (toList!858 lt!74095) (tuple2!2623 lt!73623 lt!73627)))))

(assert (= (and d!44307 res!67440) b!141215))

(assert (= (and b!141215 res!67441) b!141216))

(declare-fun m!169367 () Bool)

(assert (=> d!44307 m!169367))

(declare-fun m!169369 () Bool)

(assert (=> d!44307 m!169369))

(declare-fun m!169371 () Bool)

(assert (=> d!44307 m!169371))

(declare-fun m!169373 () Bool)

(assert (=> d!44307 m!169373))

(declare-fun m!169375 () Bool)

(assert (=> b!141215 m!169375))

(declare-fun m!169377 () Bool)

(assert (=> b!141216 m!169377))

(assert (=> b!140406 d!44307))

(declare-fun d!44309 () Bool)

(declare-fun e!92039 () Bool)

(assert (=> d!44309 e!92039))

(declare-fun res!67442 () Bool)

(assert (=> d!44309 (=> res!67442 e!92039)))

(declare-fun lt!74100 () Bool)

(assert (=> d!44309 (= res!67442 (not lt!74100))))

(declare-fun lt!74097 () Bool)

(assert (=> d!44309 (= lt!74100 lt!74097)))

(declare-fun lt!74099 () Unit!4387)

(declare-fun e!92040 () Unit!4387)

(assert (=> d!44309 (= lt!74099 e!92040)))

(declare-fun c!26537 () Bool)

(assert (=> d!44309 (= c!26537 lt!74097)))

(assert (=> d!44309 (= lt!74097 (containsKey!180 (toList!858 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627))) lt!73628))))

(assert (=> d!44309 (= (contains!904 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627)) lt!73628) lt!74100)))

(declare-fun b!141217 () Bool)

(declare-fun lt!74098 () Unit!4387)

(assert (=> b!141217 (= e!92040 lt!74098)))

(assert (=> b!141217 (= lt!74098 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627))) lt!73628))))

(assert (=> b!141217 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627))) lt!73628))))

(declare-fun b!141218 () Bool)

(declare-fun Unit!4453 () Unit!4387)

(assert (=> b!141218 (= e!92040 Unit!4453)))

(declare-fun b!141219 () Bool)

(assert (=> b!141219 (= e!92039 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73625 (tuple2!2623 lt!73623 lt!73627))) lt!73628)))))

(assert (= (and d!44309 c!26537) b!141217))

(assert (= (and d!44309 (not c!26537)) b!141218))

(assert (= (and d!44309 (not res!67442)) b!141219))

(declare-fun m!169379 () Bool)

(assert (=> d!44309 m!169379))

(declare-fun m!169381 () Bool)

(assert (=> b!141217 m!169381))

(declare-fun m!169383 () Bool)

(assert (=> b!141217 m!169383))

(assert (=> b!141217 m!169383))

(declare-fun m!169385 () Bool)

(assert (=> b!141217 m!169385))

(assert (=> b!141219 m!169383))

(assert (=> b!141219 m!169383))

(assert (=> b!141219 m!169385))

(assert (=> b!140406 d!44309))

(declare-fun d!44311 () Bool)

(declare-fun c!26538 () Bool)

(assert (=> d!44311 (= c!26538 ((_ is ValueCellFull!1121) (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!92041 () V!3553)

(assert (=> d!44311 (= (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92041)))

(declare-fun b!141220 () Bool)

(assert (=> b!141220 (= e!92041 (get!1533 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141221 () Bool)

(assert (=> b!141221 (= e!92041 (get!1534 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44311 c!26538) b!141220))

(assert (= (and d!44311 (not c!26538)) b!141221))

(assert (=> b!141220 m!167807))

(assert (=> b!141220 m!166661))

(declare-fun m!169387 () Bool)

(assert (=> b!141220 m!169387))

(assert (=> b!141221 m!167807))

(assert (=> b!141221 m!166661))

(declare-fun m!169389 () Bool)

(assert (=> b!141221 m!169389))

(assert (=> b!140406 d!44311))

(declare-fun d!44313 () Bool)

(declare-fun e!92042 () Bool)

(assert (=> d!44313 e!92042))

(declare-fun res!67443 () Bool)

(assert (=> d!44313 (=> (not res!67443) (not e!92042))))

(declare-fun lt!74103 () ListLongMap!1685)

(assert (=> d!44313 (= res!67443 (contains!904 lt!74103 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74102 () List!1719)

(assert (=> d!44313 (= lt!74103 (ListLongMap!1686 lt!74102))))

(declare-fun lt!74101 () Unit!4387)

(declare-fun lt!74104 () Unit!4387)

(assert (=> d!44313 (= lt!74101 lt!74104)))

(assert (=> d!44313 (= (getValueByKey!177 lt!74102 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44313 (= lt!74104 (lemmaContainsTupThenGetReturnValue!91 lt!74102 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44313 (= lt!74102 (insertStrictlySorted!94 (toList!858 call!15576) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44313 (= (+!173 call!15576 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74103)))

(declare-fun b!141222 () Bool)

(declare-fun res!67444 () Bool)

(assert (=> b!141222 (=> (not res!67444) (not e!92042))))

(assert (=> b!141222 (= res!67444 (= (getValueByKey!177 (toList!858 lt!74103) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141223 () Bool)

(assert (=> b!141223 (= e!92042 (contains!907 (toList!858 lt!74103) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44313 res!67443) b!141222))

(assert (= (and b!141222 res!67444) b!141223))

(declare-fun m!169391 () Bool)

(assert (=> d!44313 m!169391))

(declare-fun m!169393 () Bool)

(assert (=> d!44313 m!169393))

(declare-fun m!169395 () Bool)

(assert (=> d!44313 m!169395))

(declare-fun m!169397 () Bool)

(assert (=> d!44313 m!169397))

(declare-fun m!169399 () Bool)

(assert (=> b!141222 m!169399))

(declare-fun m!169401 () Bool)

(assert (=> b!141223 m!169401))

(assert (=> b!140406 d!44313))

(declare-fun b!141224 () Bool)

(declare-fun res!67446 () Bool)

(declare-fun e!92048 () Bool)

(assert (=> b!141224 (=> (not res!67446) (not e!92048))))

(declare-fun lt!74107 () ListLongMap!1685)

(assert (=> b!141224 (= res!67446 (not (contains!904 lt!74107 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141225 () Bool)

(declare-fun e!92044 () Bool)

(assert (=> b!141225 (= e!92048 e!92044)))

(declare-fun c!26539 () Bool)

(declare-fun e!92046 () Bool)

(assert (=> b!141225 (= c!26539 e!92046)))

(declare-fun res!67447 () Bool)

(assert (=> b!141225 (=> (not res!67447) (not e!92046))))

(assert (=> b!141225 (= res!67447 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun b!141226 () Bool)

(declare-fun e!92045 () Bool)

(assert (=> b!141226 (= e!92045 (= lt!74107 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 (_2!1323 lt!73124)))))))

(declare-fun b!141227 () Bool)

(declare-fun lt!74109 () Unit!4387)

(declare-fun lt!74105 () Unit!4387)

(assert (=> b!141227 (= lt!74109 lt!74105)))

(declare-fun lt!74110 () V!3553)

(declare-fun lt!74106 () (_ BitVec 64))

(declare-fun lt!74111 () (_ BitVec 64))

(declare-fun lt!74108 () ListLongMap!1685)

(assert (=> b!141227 (not (contains!904 (+!173 lt!74108 (tuple2!2623 lt!74106 lt!74110)) lt!74111))))

(assert (=> b!141227 (= lt!74105 (addStillNotContains!66 lt!74108 lt!74106 lt!74110 lt!74111))))

(assert (=> b!141227 (= lt!74111 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141227 (= lt!74110 (get!1531 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141227 (= lt!74106 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))

(declare-fun call!15666 () ListLongMap!1685)

(assert (=> b!141227 (= lt!74108 call!15666)))

(declare-fun e!92049 () ListLongMap!1685)

(assert (=> b!141227 (= e!92049 (+!173 call!15666 (tuple2!2623 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141228 () Bool)

(declare-fun e!92043 () Bool)

(assert (=> b!141228 (= e!92044 e!92043)))

(assert (=> b!141228 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun res!67448 () Bool)

(assert (=> b!141228 (= res!67448 (contains!904 lt!74107 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (=> b!141228 (=> (not res!67448) (not e!92043))))

(declare-fun d!44315 () Bool)

(assert (=> d!44315 e!92048))

(declare-fun res!67445 () Bool)

(assert (=> d!44315 (=> (not res!67445) (not e!92048))))

(assert (=> d!44315 (= res!67445 (not (contains!904 lt!74107 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92047 () ListLongMap!1685)

(assert (=> d!44315 (= lt!74107 e!92047)))

(declare-fun c!26542 () Bool)

(assert (=> d!44315 (= c!26542 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!44315 (validMask!0 (mask!7279 (_2!1323 lt!73124)))))

(assert (=> d!44315 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73124))) lt!74107)))

(declare-fun bm!15663 () Bool)

(assert (=> bm!15663 (= call!15666 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73124)) (_values!2922 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124)) (extraKeys!2694 (_2!1323 lt!73124)) (zeroValue!2789 (_2!1323 lt!73124)) (minValue!2789 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 (_2!1323 lt!73124))))))

(declare-fun b!141229 () Bool)

(assert (=> b!141229 (= e!92049 call!15666)))

(declare-fun b!141230 () Bool)

(assert (=> b!141230 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> b!141230 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 (_2!1323 lt!73124)))))))

(assert (=> b!141230 (= e!92043 (= (apply!120 lt!74107 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141231 () Bool)

(assert (=> b!141231 (= e!92045 (isEmpty!424 lt!74107))))

(declare-fun b!141232 () Bool)

(assert (=> b!141232 (= e!92047 e!92049)))

(declare-fun c!26540 () Bool)

(assert (=> b!141232 (= c!26540 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!141233 () Bool)

(assert (=> b!141233 (= e!92046 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (=> b!141233 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141234 () Bool)

(assert (=> b!141234 (= e!92044 e!92045)))

(declare-fun c!26541 () Bool)

(assert (=> b!141234 (= c!26541 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun b!141235 () Bool)

(assert (=> b!141235 (= e!92047 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44315 c!26542) b!141235))

(assert (= (and d!44315 (not c!26542)) b!141232))

(assert (= (and b!141232 c!26540) b!141227))

(assert (= (and b!141232 (not c!26540)) b!141229))

(assert (= (or b!141227 b!141229) bm!15663))

(assert (= (and d!44315 res!67445) b!141224))

(assert (= (and b!141224 res!67446) b!141225))

(assert (= (and b!141225 res!67447) b!141233))

(assert (= (and b!141225 c!26539) b!141228))

(assert (= (and b!141225 (not c!26539)) b!141234))

(assert (= (and b!141228 res!67448) b!141230))

(assert (= (and b!141234 c!26541) b!141226))

(assert (= (and b!141234 (not c!26541)) b!141231))

(declare-fun b_lambda!6353 () Bool)

(assert (=> (not b_lambda!6353) (not b!141227)))

(assert (=> b!141227 t!6313))

(declare-fun b_and!8833 () Bool)

(assert (= b_and!8829 (and (=> t!6313 result!4191) b_and!8833)))

(assert (=> b!141227 t!6315))

(declare-fun b_and!8835 () Bool)

(assert (= b_and!8831 (and (=> t!6315 result!4193) b_and!8835)))

(declare-fun b_lambda!6355 () Bool)

(assert (=> (not b_lambda!6355) (not b!141230)))

(assert (=> b!141230 t!6313))

(declare-fun b_and!8837 () Bool)

(assert (= b_and!8833 (and (=> t!6313 result!4191) b_and!8837)))

(assert (=> b!141230 t!6315))

(declare-fun b_and!8839 () Bool)

(assert (= b_and!8835 (and (=> t!6315 result!4193) b_and!8839)))

(assert (=> b!141227 m!168391))

(declare-fun m!169403 () Bool)

(assert (=> b!141227 m!169403))

(declare-fun m!169405 () Bool)

(assert (=> b!141227 m!169405))

(assert (=> b!141227 m!168515))

(assert (=> b!141227 m!169403))

(declare-fun m!169407 () Bool)

(assert (=> b!141227 m!169407))

(assert (=> b!141227 m!168513))

(assert (=> b!141227 m!168513))

(assert (=> b!141227 m!168515))

(assert (=> b!141227 m!168517))

(declare-fun m!169409 () Bool)

(assert (=> b!141227 m!169409))

(assert (=> b!141233 m!168391))

(assert (=> b!141233 m!168391))

(assert (=> b!141233 m!168393))

(declare-fun m!169411 () Bool)

(assert (=> b!141226 m!169411))

(assert (=> b!141230 m!168391))

(assert (=> b!141230 m!168515))

(assert (=> b!141230 m!168513))

(assert (=> b!141230 m!168513))

(assert (=> b!141230 m!168515))

(assert (=> b!141230 m!168517))

(assert (=> b!141230 m!168391))

(declare-fun m!169413 () Bool)

(assert (=> b!141230 m!169413))

(declare-fun m!169415 () Bool)

(assert (=> b!141224 m!169415))

(declare-fun m!169417 () Bool)

(assert (=> d!44315 m!169417))

(assert (=> d!44315 m!167829))

(declare-fun m!169419 () Bool)

(assert (=> b!141231 m!169419))

(assert (=> b!141228 m!168391))

(assert (=> b!141228 m!168391))

(declare-fun m!169421 () Bool)

(assert (=> b!141228 m!169421))

(assert (=> b!141232 m!168391))

(assert (=> b!141232 m!168391))

(assert (=> b!141232 m!168393))

(assert (=> bm!15663 m!169411))

(assert (=> bm!15627 d!44315))

(assert (=> b!140529 d!43579))

(declare-fun d!44317 () Bool)

(assert (=> d!44317 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140480 d!44317))

(declare-fun d!44319 () Bool)

(assert (=> d!44319 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140612 d!44319))

(assert (=> b!140885 d!43693))

(declare-fun d!44321 () Bool)

(declare-fun lt!74112 () Bool)

(assert (=> d!44321 (= lt!74112 (select (content!139 (toList!858 lt!73549)) (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))

(declare-fun e!92050 () Bool)

(assert (=> d!44321 (= lt!74112 e!92050)))

(declare-fun res!67449 () Bool)

(assert (=> d!44321 (=> (not res!67449) (not e!92050))))

(assert (=> d!44321 (= res!67449 ((_ is Cons!1715) (toList!858 lt!73549)))))

(assert (=> d!44321 (= (contains!907 (toList!858 lt!73549) (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) lt!74112)))

(declare-fun b!141236 () Bool)

(declare-fun e!92051 () Bool)

(assert (=> b!141236 (= e!92050 e!92051)))

(declare-fun res!67450 () Bool)

(assert (=> b!141236 (=> res!67450 e!92051)))

(assert (=> b!141236 (= res!67450 (= (h!2322 (toList!858 lt!73549)) (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))

(declare-fun b!141237 () Bool)

(assert (=> b!141237 (= e!92051 (contains!907 (t!6295 (toList!858 lt!73549)) (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44321 res!67449) b!141236))

(assert (= (and b!141236 (not res!67450)) b!141237))

(declare-fun m!169423 () Bool)

(assert (=> d!44321 m!169423))

(declare-fun m!169425 () Bool)

(assert (=> d!44321 m!169425))

(declare-fun m!169427 () Bool)

(assert (=> b!141237 m!169427))

(assert (=> b!140303 d!44321))

(declare-fun d!44323 () Bool)

(assert (=> d!44323 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun lt!74113 () Unit!4387)

(assert (=> d!44323 (= lt!74113 (choose!864 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun e!92052 () Bool)

(assert (=> d!44323 e!92052))

(declare-fun res!67451 () Bool)

(assert (=> d!44323 (=> (not res!67451) (not e!92052))))

(assert (=> d!44323 (= res!67451 (isStrictlySorted!312 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))

(assert (=> d!44323 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) lt!74113)))

(declare-fun b!141238 () Bool)

(assert (=> b!141238 (= e!92052 (containsKey!180 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (= (and d!44323 res!67451) b!141238))

(assert (=> d!44323 m!166761))

(assert (=> d!44323 m!167745))

(assert (=> d!44323 m!167745))

(assert (=> d!44323 m!167747))

(assert (=> d!44323 m!166761))

(declare-fun m!169429 () Bool)

(assert (=> d!44323 m!169429))

(declare-fun m!169431 () Bool)

(assert (=> d!44323 m!169431))

(assert (=> b!141238 m!166761))

(assert (=> b!141238 m!167741))

(assert (=> b!140379 d!44323))

(declare-fun d!44325 () Bool)

(assert (=> d!44325 (= (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))) (not (isEmpty!423 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))))

(declare-fun bs!5927 () Bool)

(assert (= bs!5927 d!44325))

(assert (=> bs!5927 m!167745))

(declare-fun m!169433 () Bool)

(assert (=> bs!5927 m!169433))

(assert (=> b!140379 d!44325))

(declare-fun b!141240 () Bool)

(declare-fun e!92053 () Option!183)

(declare-fun e!92054 () Option!183)

(assert (=> b!141240 (= e!92053 e!92054)))

(declare-fun c!26544 () Bool)

(assert (=> b!141240 (= c!26544 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (not (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))))

(declare-fun b!141241 () Bool)

(assert (=> b!141241 (= e!92054 (getValueByKey!177 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun b!141239 () Bool)

(assert (=> b!141239 (= e!92053 (Some!182 (_2!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))))

(declare-fun b!141242 () Bool)

(assert (=> b!141242 (= e!92054 None!181)))

(declare-fun c!26543 () Bool)

(declare-fun d!44327 () Bool)

(assert (=> d!44327 (= c!26543 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (=> d!44327 (= (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) e!92053)))

(assert (= (and d!44327 c!26543) b!141239))

(assert (= (and d!44327 (not c!26543)) b!141240))

(assert (= (and b!141240 c!26544) b!141241))

(assert (= (and b!141240 (not c!26544)) b!141242))

(assert (=> b!141241 m!166761))

(declare-fun m!169435 () Bool)

(assert (=> b!141241 m!169435))

(assert (=> b!140379 d!44327))

(declare-fun b!141244 () Bool)

(declare-fun e!92055 () Option!183)

(declare-fun e!92056 () Option!183)

(assert (=> b!141244 (= e!92055 e!92056)))

(declare-fun c!26546 () Bool)

(assert (=> b!141244 (= c!26546 (and ((_ is Cons!1715) (toList!858 lt!73767)) (not (= (_1!1322 (h!2322 (toList!858 lt!73767))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141245 () Bool)

(assert (=> b!141245 (= e!92056 (getValueByKey!177 (t!6295 (toList!858 lt!73767)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141243 () Bool)

(assert (=> b!141243 (= e!92055 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73767)))))))

(declare-fun b!141246 () Bool)

(assert (=> b!141246 (= e!92056 None!181)))

(declare-fun c!26545 () Bool)

(declare-fun d!44329 () Bool)

(assert (=> d!44329 (= c!26545 (and ((_ is Cons!1715) (toList!858 lt!73767)) (= (_1!1322 (h!2322 (toList!858 lt!73767))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44329 (= (getValueByKey!177 (toList!858 lt!73767) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92055)))

(assert (= (and d!44329 c!26545) b!141243))

(assert (= (and d!44329 (not c!26545)) b!141244))

(assert (= (and b!141244 c!26546) b!141245))

(assert (= (and b!141244 (not c!26546)) b!141246))

(declare-fun m!169437 () Bool)

(assert (=> b!141245 m!169437))

(assert (=> b!140683 d!44329))

(declare-fun d!44331 () Bool)

(assert (=> d!44331 (= (get!1535 (getValueByKey!177 (toList!858 lt!73240) lt!73238)) (v!3285 (getValueByKey!177 (toList!858 lt!73240) lt!73238)))))

(assert (=> d!44177 d!44331))

(declare-fun b!141248 () Bool)

(declare-fun e!92057 () Option!183)

(declare-fun e!92058 () Option!183)

(assert (=> b!141248 (= e!92057 e!92058)))

(declare-fun c!26548 () Bool)

(assert (=> b!141248 (= c!26548 (and ((_ is Cons!1715) (toList!858 lt!73240)) (not (= (_1!1322 (h!2322 (toList!858 lt!73240))) lt!73238))))))

(declare-fun b!141249 () Bool)

(assert (=> b!141249 (= e!92058 (getValueByKey!177 (t!6295 (toList!858 lt!73240)) lt!73238))))

(declare-fun b!141247 () Bool)

(assert (=> b!141247 (= e!92057 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73240)))))))

(declare-fun b!141250 () Bool)

(assert (=> b!141250 (= e!92058 None!181)))

(declare-fun d!44333 () Bool)

(declare-fun c!26547 () Bool)

(assert (=> d!44333 (= c!26547 (and ((_ is Cons!1715) (toList!858 lt!73240)) (= (_1!1322 (h!2322 (toList!858 lt!73240))) lt!73238)))))

(assert (=> d!44333 (= (getValueByKey!177 (toList!858 lt!73240) lt!73238) e!92057)))

(assert (= (and d!44333 c!26547) b!141247))

(assert (= (and d!44333 (not c!26547)) b!141248))

(assert (= (and b!141248 c!26548) b!141249))

(assert (= (and b!141248 (not c!26548)) b!141250))

(declare-fun m!169439 () Bool)

(assert (=> b!141249 m!169439))

(assert (=> d!44177 d!44333))

(assert (=> d!43749 d!43723))

(assert (=> d!43749 d!43727))

(declare-fun d!44335 () Bool)

(declare-fun e!92059 () Bool)

(assert (=> d!44335 e!92059))

(declare-fun res!67452 () Bool)

(assert (=> d!44335 (=> res!67452 e!92059)))

(declare-fun lt!74117 () Bool)

(assert (=> d!44335 (= res!67452 (not lt!74117))))

(declare-fun lt!74114 () Bool)

(assert (=> d!44335 (= lt!74117 lt!74114)))

(declare-fun lt!74116 () Unit!4387)

(declare-fun e!92060 () Unit!4387)

(assert (=> d!44335 (= lt!74116 e!92060)))

(declare-fun c!26549 () Bool)

(assert (=> d!44335 (= c!26549 lt!74114)))

(assert (=> d!44335 (= lt!74114 (containsKey!180 (toList!858 lt!73218) lt!73216))))

(assert (=> d!44335 (= (contains!904 lt!73218 lt!73216) lt!74117)))

(declare-fun b!141251 () Bool)

(declare-fun lt!74115 () Unit!4387)

(assert (=> b!141251 (= e!92060 lt!74115)))

(assert (=> b!141251 (= lt!74115 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73218) lt!73216))))

(assert (=> b!141251 (isDefined!129 (getValueByKey!177 (toList!858 lt!73218) lt!73216))))

(declare-fun b!141252 () Bool)

(declare-fun Unit!4454 () Unit!4387)

(assert (=> b!141252 (= e!92060 Unit!4454)))

(declare-fun b!141253 () Bool)

(assert (=> b!141253 (= e!92059 (isDefined!129 (getValueByKey!177 (toList!858 lt!73218) lt!73216)))))

(assert (= (and d!44335 c!26549) b!141251))

(assert (= (and d!44335 (not c!26549)) b!141252))

(assert (= (and d!44335 (not res!67452)) b!141253))

(declare-fun m!169441 () Bool)

(assert (=> d!44335 m!169441))

(declare-fun m!169443 () Bool)

(assert (=> b!141251 m!169443))

(assert (=> b!141251 m!167577))

(assert (=> b!141251 m!167577))

(declare-fun m!169445 () Bool)

(assert (=> b!141251 m!169445))

(assert (=> b!141253 m!167577))

(assert (=> b!141253 m!167577))

(assert (=> b!141253 m!169445))

(assert (=> d!43749 d!44335))

(assert (=> d!43749 d!43739))

(declare-fun d!44337 () Bool)

(assert (=> d!44337 (= (apply!120 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) lt!73216) (apply!120 lt!73218 lt!73216))))

(assert (=> d!44337 true))

(declare-fun _$34!1005 () Unit!4387)

(assert (=> d!44337 (= (choose!867 lt!73218 lt!73228 (zeroValue!2789 newMap!16) lt!73216) _$34!1005)))

(declare-fun bs!5928 () Bool)

(assert (= bs!5928 d!44337))

(assert (=> bs!5928 m!166923))

(assert (=> bs!5928 m!166923))

(assert (=> bs!5928 m!166947))

(assert (=> bs!5928 m!166945))

(assert (=> d!43749 d!44337))

(declare-fun b!141254 () Bool)

(declare-fun res!67454 () Bool)

(declare-fun e!92066 () Bool)

(assert (=> b!141254 (=> (not res!67454) (not e!92066))))

(declare-fun lt!74120 () ListLongMap!1685)

(assert (=> b!141254 (= res!67454 (not (contains!904 lt!74120 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141255 () Bool)

(declare-fun e!92062 () Bool)

(assert (=> b!141255 (= e!92066 e!92062)))

(declare-fun c!26550 () Bool)

(declare-fun e!92064 () Bool)

(assert (=> b!141255 (= c!26550 e!92064)))

(declare-fun res!67455 () Bool)

(assert (=> b!141255 (=> (not res!67455) (not e!92064))))

(assert (=> b!141255 (= res!67455 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141256 () Bool)

(declare-fun e!92063 () Bool)

(assert (=> b!141256 (= e!92063 (= lt!74120 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141257 () Bool)

(declare-fun lt!74122 () Unit!4387)

(declare-fun lt!74118 () Unit!4387)

(assert (=> b!141257 (= lt!74122 lt!74118)))

(declare-fun lt!74121 () ListLongMap!1685)

(declare-fun lt!74123 () V!3553)

(declare-fun lt!74119 () (_ BitVec 64))

(declare-fun lt!74124 () (_ BitVec 64))

(assert (=> b!141257 (not (contains!904 (+!173 lt!74121 (tuple2!2623 lt!74119 lt!74123)) lt!74124))))

(assert (=> b!141257 (= lt!74118 (addStillNotContains!66 lt!74121 lt!74119 lt!74123 lt!74124))))

(assert (=> b!141257 (= lt!74124 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141257 (= lt!74123 (get!1531 (select (arr!2307 (_values!2922 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141257 (= lt!74119 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15667 () ListLongMap!1685)

(assert (=> b!141257 (= lt!74121 call!15667)))

(declare-fun e!92067 () ListLongMap!1685)

(assert (=> b!141257 (= e!92067 (+!173 call!15667 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141258 () Bool)

(declare-fun e!92061 () Bool)

(assert (=> b!141258 (= e!92062 e!92061)))

(assert (=> b!141258 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67456 () Bool)

(assert (=> b!141258 (= res!67456 (contains!904 lt!74120 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141258 (=> (not res!67456) (not e!92061))))

(declare-fun d!44339 () Bool)

(assert (=> d!44339 e!92066))

(declare-fun res!67453 () Bool)

(assert (=> d!44339 (=> (not res!67453) (not e!92066))))

(assert (=> d!44339 (= res!67453 (not (contains!904 lt!74120 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92065 () ListLongMap!1685)

(assert (=> d!44339 (= lt!74120 e!92065)))

(declare-fun c!26553 () Bool)

(assert (=> d!44339 (= c!26553 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44339 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44339 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)) lt!74120)))

(declare-fun bm!15664 () Bool)

(assert (=> bm!15664 (= call!15667 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141259 () Bool)

(assert (=> b!141259 (= e!92067 call!15667)))

(declare-fun b!141260 () Bool)

(assert (=> b!141260 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141260 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!141260 (= e!92061 (= (apply!120 lt!74120 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141261 () Bool)

(assert (=> b!141261 (= e!92063 (isEmpty!424 lt!74120))))

(declare-fun b!141262 () Bool)

(assert (=> b!141262 (= e!92065 e!92067)))

(declare-fun c!26551 () Bool)

(assert (=> b!141262 (= c!26551 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141263 () Bool)

(assert (=> b!141263 (= e!92064 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141263 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141264 () Bool)

(assert (=> b!141264 (= e!92062 e!92063)))

(declare-fun c!26552 () Bool)

(assert (=> b!141264 (= c!26552 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141265 () Bool)

(assert (=> b!141265 (= e!92065 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44339 c!26553) b!141265))

(assert (= (and d!44339 (not c!26553)) b!141262))

(assert (= (and b!141262 c!26551) b!141257))

(assert (= (and b!141262 (not c!26551)) b!141259))

(assert (= (or b!141257 b!141259) bm!15664))

(assert (= (and d!44339 res!67453) b!141254))

(assert (= (and b!141254 res!67454) b!141255))

(assert (= (and b!141255 res!67455) b!141263))

(assert (= (and b!141255 c!26550) b!141258))

(assert (= (and b!141255 (not c!26550)) b!141264))

(assert (= (and b!141258 res!67456) b!141260))

(assert (= (and b!141264 c!26552) b!141256))

(assert (= (and b!141264 (not c!26552)) b!141261))

(declare-fun b_lambda!6357 () Bool)

(assert (=> (not b_lambda!6357) (not b!141257)))

(assert (=> b!141257 t!6309))

(declare-fun b_and!8841 () Bool)

(assert (= b_and!8837 (and (=> t!6309 result!4187) b_and!8841)))

(assert (=> b!141257 t!6311))

(declare-fun b_and!8843 () Bool)

(assert (= b_and!8839 (and (=> t!6311 result!4189) b_and!8843)))

(declare-fun b_lambda!6359 () Bool)

(assert (=> (not b_lambda!6359) (not b!141260)))

(assert (=> b!141260 t!6309))

(declare-fun b_and!8845 () Bool)

(assert (= b_and!8841 (and (=> t!6309 result!4187) b_and!8845)))

(assert (=> b!141260 t!6311))

(declare-fun b_and!8847 () Bool)

(assert (= b_and!8843 (and (=> t!6311 result!4189) b_and!8847)))

(assert (=> b!141257 m!168135))

(declare-fun m!169447 () Bool)

(assert (=> b!141257 m!169447))

(declare-fun m!169449 () Bool)

(assert (=> b!141257 m!169449))

(assert (=> b!141257 m!166963))

(assert (=> b!141257 m!169447))

(declare-fun m!169451 () Bool)

(assert (=> b!141257 m!169451))

(declare-fun m!169453 () Bool)

(assert (=> b!141257 m!169453))

(assert (=> b!141257 m!169453))

(assert (=> b!141257 m!166963))

(declare-fun m!169455 () Bool)

(assert (=> b!141257 m!169455))

(declare-fun m!169457 () Bool)

(assert (=> b!141257 m!169457))

(assert (=> b!141263 m!168135))

(assert (=> b!141263 m!168135))

(assert (=> b!141263 m!168139))

(declare-fun m!169459 () Bool)

(assert (=> b!141256 m!169459))

(assert (=> b!141260 m!168135))

(assert (=> b!141260 m!166963))

(assert (=> b!141260 m!169453))

(assert (=> b!141260 m!169453))

(assert (=> b!141260 m!166963))

(assert (=> b!141260 m!169455))

(assert (=> b!141260 m!168135))

(declare-fun m!169461 () Bool)

(assert (=> b!141260 m!169461))

(declare-fun m!169463 () Bool)

(assert (=> b!141254 m!169463))

(declare-fun m!169465 () Bool)

(assert (=> d!44339 m!169465))

(assert (=> d!44339 m!166907))

(declare-fun m!169467 () Bool)

(assert (=> b!141261 m!169467))

(assert (=> b!141258 m!168135))

(assert (=> b!141258 m!168135))

(declare-fun m!169469 () Bool)

(assert (=> b!141258 m!169469))

(assert (=> b!141262 m!168135))

(assert (=> b!141262 m!168135))

(assert (=> b!141262 m!168139))

(assert (=> bm!15664 m!169459))

(assert (=> b!140365 d!44339))

(declare-fun d!44341 () Bool)

(declare-fun lt!74125 () Bool)

(assert (=> d!44341 (= lt!74125 (select (content!139 (toList!858 lt!73663)) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92068 () Bool)

(assert (=> d!44341 (= lt!74125 e!92068)))

(declare-fun res!67457 () Bool)

(assert (=> d!44341 (=> (not res!67457) (not e!92068))))

(assert (=> d!44341 (= res!67457 ((_ is Cons!1715) (toList!858 lt!73663)))))

(assert (=> d!44341 (= (contains!907 (toList!858 lt!73663) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74125)))

(declare-fun b!141266 () Bool)

(declare-fun e!92069 () Bool)

(assert (=> b!141266 (= e!92068 e!92069)))

(declare-fun res!67458 () Bool)

(assert (=> b!141266 (=> res!67458 e!92069)))

(assert (=> b!141266 (= res!67458 (= (h!2322 (toList!858 lt!73663)) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141267 () Bool)

(assert (=> b!141267 (= e!92069 (contains!907 (t!6295 (toList!858 lt!73663)) (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44341 res!67457) b!141266))

(assert (= (and b!141266 (not res!67458)) b!141267))

(declare-fun m!169471 () Bool)

(assert (=> d!44341 m!169471))

(declare-fun m!169473 () Bool)

(assert (=> d!44341 m!169473))

(declare-fun m!169475 () Bool)

(assert (=> b!141267 m!169475))

(assert (=> b!140465 d!44341))

(declare-fun d!44343 () Bool)

(assert (=> d!44343 (isDefined!129 (getValueByKey!177 (toList!858 lt!73187) lt!73185))))

(declare-fun lt!74126 () Unit!4387)

(assert (=> d!44343 (= lt!74126 (choose!864 (toList!858 lt!73187) lt!73185))))

(declare-fun e!92070 () Bool)

(assert (=> d!44343 e!92070))

(declare-fun res!67459 () Bool)

(assert (=> d!44343 (=> (not res!67459) (not e!92070))))

(assert (=> d!44343 (= res!67459 (isStrictlySorted!312 (toList!858 lt!73187)))))

(assert (=> d!44343 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73187) lt!73185) lt!74126)))

(declare-fun b!141268 () Bool)

(assert (=> b!141268 (= e!92070 (containsKey!180 (toList!858 lt!73187) lt!73185))))

(assert (= (and d!44343 res!67459) b!141268))

(assert (=> d!44343 m!167323))

(assert (=> d!44343 m!167323))

(assert (=> d!44343 m!168409))

(declare-fun m!169477 () Bool)

(assert (=> d!44343 m!169477))

(assert (=> d!44343 m!168937))

(assert (=> b!141268 m!168405))

(assert (=> b!140784 d!44343))

(declare-fun d!44345 () Bool)

(assert (=> d!44345 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73187) lt!73185)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73187) lt!73185))))))

(declare-fun bs!5929 () Bool)

(assert (= bs!5929 d!44345))

(assert (=> bs!5929 m!167323))

(declare-fun m!169479 () Bool)

(assert (=> bs!5929 m!169479))

(assert (=> b!140784 d!44345))

(assert (=> b!140784 d!43837))

(declare-fun d!44347 () Bool)

(assert (=> d!44347 (= (size!2584 (v!3279 (underlying!479 thiss!992))) (bvadd (_size!624 (v!3279 (underlying!479 thiss!992))) (bvsdiv (bvadd (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!141062 d!44347))

(declare-fun d!44349 () Bool)

(declare-fun e!92071 () Bool)

(assert (=> d!44349 e!92071))

(declare-fun res!67460 () Bool)

(assert (=> d!44349 (=> res!67460 e!92071)))

(declare-fun lt!74130 () Bool)

(assert (=> d!44349 (= res!67460 (not lt!74130))))

(declare-fun lt!74127 () Bool)

(assert (=> d!44349 (= lt!74130 lt!74127)))

(declare-fun lt!74129 () Unit!4387)

(declare-fun e!92072 () Unit!4387)

(assert (=> d!44349 (= lt!74129 e!92072)))

(declare-fun c!26554 () Bool)

(assert (=> d!44349 (= c!26554 lt!74127)))

(assert (=> d!44349 (= lt!74127 (containsKey!180 (toList!858 lt!73560) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44349 (= (contains!904 lt!73560 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74130)))

(declare-fun b!141269 () Bool)

(declare-fun lt!74128 () Unit!4387)

(assert (=> b!141269 (= e!92072 lt!74128)))

(assert (=> b!141269 (= lt!74128 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73560) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> b!141269 (isDefined!129 (getValueByKey!177 (toList!858 lt!73560) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!141270 () Bool)

(declare-fun Unit!4455 () Unit!4387)

(assert (=> b!141270 (= e!92072 Unit!4455)))

(declare-fun b!141271 () Bool)

(assert (=> b!141271 (= e!92071 (isDefined!129 (getValueByKey!177 (toList!858 lt!73560) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44349 c!26554) b!141269))

(assert (= (and d!44349 (not c!26554)) b!141270))

(assert (= (and d!44349 (not res!67460)) b!141271))

(declare-fun m!169481 () Bool)

(assert (=> d!44349 m!169481))

(declare-fun m!169483 () Bool)

(assert (=> b!141269 m!169483))

(assert (=> b!141269 m!167641))

(assert (=> b!141269 m!167641))

(declare-fun m!169485 () Bool)

(assert (=> b!141269 m!169485))

(assert (=> b!141271 m!167641))

(assert (=> b!141271 m!167641))

(assert (=> b!141271 m!169485))

(assert (=> d!43743 d!44349))

(declare-fun b!141273 () Bool)

(declare-fun e!92073 () Option!183)

(declare-fun e!92074 () Option!183)

(assert (=> b!141273 (= e!92073 e!92074)))

(declare-fun c!26556 () Bool)

(assert (=> b!141273 (= c!26556 (and ((_ is Cons!1715) lt!73559) (not (= (_1!1322 (h!2322 lt!73559)) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!141274 () Bool)

(assert (=> b!141274 (= e!92074 (getValueByKey!177 (t!6295 lt!73559) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!141272 () Bool)

(assert (=> b!141272 (= e!92073 (Some!182 (_2!1322 (h!2322 lt!73559))))))

(declare-fun b!141275 () Bool)

(assert (=> b!141275 (= e!92074 None!181)))

(declare-fun c!26555 () Bool)

(declare-fun d!44351 () Bool)

(assert (=> d!44351 (= c!26555 (and ((_ is Cons!1715) lt!73559) (= (_1!1322 (h!2322 lt!73559)) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44351 (= (getValueByKey!177 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92073)))

(assert (= (and d!44351 c!26555) b!141272))

(assert (= (and d!44351 (not c!26555)) b!141273))

(assert (= (and b!141273 c!26556) b!141274))

(assert (= (and b!141273 (not c!26556)) b!141275))

(declare-fun m!169487 () Bool)

(assert (=> b!141274 m!169487))

(assert (=> d!43743 d!44351))

(declare-fun d!44353 () Bool)

(assert (=> d!44353 (= (getValueByKey!177 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!74131 () Unit!4387)

(assert (=> d!44353 (= lt!74131 (choose!873 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!92075 () Bool)

(assert (=> d!44353 e!92075))

(declare-fun res!67461 () Bool)

(assert (=> d!44353 (=> (not res!67461) (not e!92075))))

(assert (=> d!44353 (= res!67461 (isStrictlySorted!312 lt!73559))))

(assert (=> d!44353 (= (lemmaContainsTupThenGetReturnValue!91 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74131)))

(declare-fun b!141276 () Bool)

(declare-fun res!67462 () Bool)

(assert (=> b!141276 (=> (not res!67462) (not e!92075))))

(assert (=> b!141276 (= res!67462 (containsKey!180 lt!73559 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!141277 () Bool)

(assert (=> b!141277 (= e!92075 (contains!907 lt!73559 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44353 res!67461) b!141276))

(assert (= (and b!141276 res!67462) b!141277))

(assert (=> d!44353 m!167635))

(declare-fun m!169489 () Bool)

(assert (=> d!44353 m!169489))

(declare-fun m!169491 () Bool)

(assert (=> d!44353 m!169491))

(declare-fun m!169493 () Bool)

(assert (=> b!141276 m!169493))

(declare-fun m!169495 () Bool)

(assert (=> b!141277 m!169495))

(assert (=> d!43743 d!44353))

(declare-fun bm!15665 () Bool)

(declare-fun call!15670 () List!1719)

(declare-fun call!15669 () List!1719)

(assert (=> bm!15665 (= call!15670 call!15669)))

(declare-fun b!141279 () Bool)

(declare-fun e!92077 () List!1719)

(declare-fun e!92079 () List!1719)

(assert (=> b!141279 (= e!92077 e!92079)))

(declare-fun c!26560 () Bool)

(assert (=> b!141279 (= c!26560 (and ((_ is Cons!1715) (toList!858 lt!73234)) (= (_1!1322 (h!2322 (toList!858 lt!73234))) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!141280 () Bool)

(declare-fun res!67464 () Bool)

(declare-fun e!92076 () Bool)

(assert (=> b!141280 (=> (not res!67464) (not e!92076))))

(declare-fun lt!74132 () List!1719)

(assert (=> b!141280 (= res!67464 (containsKey!180 lt!74132 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun c!26558 () Bool)

(declare-fun b!141281 () Bool)

(assert (=> b!141281 (= c!26558 (and ((_ is Cons!1715) (toList!858 lt!73234)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73234))) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92078 () List!1719)

(assert (=> b!141281 (= e!92079 e!92078)))

(declare-fun bm!15666 () Bool)

(declare-fun call!15668 () List!1719)

(assert (=> bm!15666 (= call!15669 call!15668)))

(declare-fun b!141282 () Bool)

(assert (=> b!141282 (= e!92079 call!15669)))

(declare-fun b!141283 () Bool)

(assert (=> b!141283 (= e!92077 call!15668)))

(declare-fun b!141284 () Bool)

(assert (=> b!141284 (= e!92076 (contains!907 lt!74132 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92080 () List!1719)

(declare-fun b!141278 () Bool)

(assert (=> b!141278 (= e!92080 (ite c!26560 (t!6295 (toList!858 lt!73234)) (ite c!26558 (Cons!1715 (h!2322 (toList!858 lt!73234)) (t!6295 (toList!858 lt!73234))) Nil!1716)))))

(declare-fun d!44355 () Bool)

(assert (=> d!44355 e!92076))

(declare-fun res!67463 () Bool)

(assert (=> d!44355 (=> (not res!67463) (not e!92076))))

(assert (=> d!44355 (= res!67463 (isStrictlySorted!312 lt!74132))))

(assert (=> d!44355 (= lt!74132 e!92077)))

(declare-fun c!26559 () Bool)

(assert (=> d!44355 (= c!26559 (and ((_ is Cons!1715) (toList!858 lt!73234)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73234))) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44355 (isStrictlySorted!312 (toList!858 lt!73234))))

(assert (=> d!44355 (= (insertStrictlySorted!94 (toList!858 lt!73234) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74132)))

(declare-fun b!141285 () Bool)

(assert (=> b!141285 (= e!92078 call!15670)))

(declare-fun b!141286 () Bool)

(assert (=> b!141286 (= e!92078 call!15670)))

(declare-fun bm!15667 () Bool)

(assert (=> bm!15667 (= call!15668 ($colon$colon!93 e!92080 (ite c!26559 (h!2322 (toList!858 lt!73234)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!26557 () Bool)

(assert (=> bm!15667 (= c!26557 c!26559)))

(declare-fun b!141287 () Bool)

(assert (=> b!141287 (= e!92080 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73234)) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!44355 c!26559) b!141283))

(assert (= (and d!44355 (not c!26559)) b!141279))

(assert (= (and b!141279 c!26560) b!141282))

(assert (= (and b!141279 (not c!26560)) b!141281))

(assert (= (and b!141281 c!26558) b!141285))

(assert (= (and b!141281 (not c!26558)) b!141286))

(assert (= (or b!141285 b!141286) bm!15665))

(assert (= (or b!141282 bm!15665) bm!15666))

(assert (= (or b!141283 bm!15666) bm!15667))

(assert (= (and bm!15667 c!26557) b!141287))

(assert (= (and bm!15667 (not c!26557)) b!141278))

(assert (= (and d!44355 res!67463) b!141280))

(assert (= (and b!141280 res!67464) b!141284))

(declare-fun m!169497 () Bool)

(assert (=> bm!15667 m!169497))

(declare-fun m!169499 () Bool)

(assert (=> d!44355 m!169499))

(declare-fun m!169501 () Bool)

(assert (=> d!44355 m!169501))

(declare-fun m!169503 () Bool)

(assert (=> b!141280 m!169503))

(declare-fun m!169505 () Bool)

(assert (=> b!141287 m!169505))

(declare-fun m!169507 () Bool)

(assert (=> b!141284 m!169507))

(assert (=> d!43743 d!44355))

(declare-fun d!44357 () Bool)

(declare-fun e!92081 () Bool)

(assert (=> d!44357 e!92081))

(declare-fun res!67465 () Bool)

(assert (=> d!44357 (=> (not res!67465) (not e!92081))))

(declare-fun lt!74135 () ListLongMap!1685)

(assert (=> d!44357 (= res!67465 (contains!904 lt!74135 (_1!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74134 () List!1719)

(assert (=> d!44357 (= lt!74135 (ListLongMap!1686 lt!74134))))

(declare-fun lt!74133 () Unit!4387)

(declare-fun lt!74136 () Unit!4387)

(assert (=> d!44357 (= lt!74133 lt!74136)))

(assert (=> d!44357 (= (getValueByKey!177 lt!74134 (_1!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44357 (= lt!74136 (lemmaContainsTupThenGetReturnValue!91 lt!74134 (_1!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44357 (= lt!74134 (insertStrictlySorted!94 (toList!858 (ite c!26301 call!15571 (ite c!26302 call!15570 call!15572))) (_1!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44357 (= (+!173 (ite c!26301 call!15571 (ite c!26302 call!15570 call!15572)) (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74135)))

(declare-fun b!141288 () Bool)

(declare-fun res!67466 () Bool)

(assert (=> b!141288 (=> (not res!67466) (not e!92081))))

(assert (=> b!141288 (= res!67466 (= (getValueByKey!177 (toList!858 lt!74135) (_1!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141289 () Bool)

(assert (=> b!141289 (= e!92081 (contains!907 (toList!858 lt!74135) (ite (or c!26301 c!26302) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44357 res!67465) b!141288))

(assert (= (and b!141288 res!67466) b!141289))

(declare-fun m!169509 () Bool)

(assert (=> d!44357 m!169509))

(declare-fun m!169511 () Bool)

(assert (=> d!44357 m!169511))

(declare-fun m!169513 () Bool)

(assert (=> d!44357 m!169513))

(declare-fun m!169515 () Bool)

(assert (=> d!44357 m!169515))

(declare-fun m!169517 () Bool)

(assert (=> b!141288 m!169517))

(declare-fun m!169519 () Bool)

(assert (=> b!141289 m!169519))

(assert (=> bm!15569 d!44357))

(declare-fun d!44359 () Bool)

(assert (=> d!44359 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5930 () Bool)

(assert (= bs!5930 d!44359))

(assert (=> bs!5930 m!168695))

(declare-fun m!169521 () Bool)

(assert (=> bs!5930 m!169521))

(assert (=> b!140914 d!44359))

(declare-fun b!141291 () Bool)

(declare-fun e!92082 () Option!183)

(declare-fun e!92083 () Option!183)

(assert (=> b!141291 (= e!92082 e!92083)))

(declare-fun c!26562 () Bool)

(assert (=> b!141291 (= c!26562 (and ((_ is Cons!1715) (toList!858 lt!73446)) (not (= (_1!1322 (h!2322 (toList!858 lt!73446))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141292 () Bool)

(assert (=> b!141292 (= e!92083 (getValueByKey!177 (t!6295 (toList!858 lt!73446)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141290 () Bool)

(assert (=> b!141290 (= e!92082 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73446)))))))

(declare-fun b!141293 () Bool)

(assert (=> b!141293 (= e!92083 None!181)))

(declare-fun d!44361 () Bool)

(declare-fun c!26561 () Bool)

(assert (=> d!44361 (= c!26561 (and ((_ is Cons!1715) (toList!858 lt!73446)) (= (_1!1322 (h!2322 (toList!858 lt!73446))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44361 (= (getValueByKey!177 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000) e!92082)))

(assert (= (and d!44361 c!26561) b!141290))

(assert (= (and d!44361 (not c!26561)) b!141291))

(assert (= (and b!141291 c!26562) b!141292))

(assert (= (and b!141291 (not c!26562)) b!141293))

(declare-fun m!169523 () Bool)

(assert (=> b!141292 m!169523))

(assert (=> b!140914 d!44361))

(declare-fun d!44363 () Bool)

(declare-fun e!92084 () Bool)

(assert (=> d!44363 e!92084))

(declare-fun res!67467 () Bool)

(assert (=> d!44363 (=> res!67467 e!92084)))

(declare-fun lt!74140 () Bool)

(assert (=> d!44363 (= res!67467 (not lt!74140))))

(declare-fun lt!74137 () Bool)

(assert (=> d!44363 (= lt!74140 lt!74137)))

(declare-fun lt!74139 () Unit!4387)

(declare-fun e!92085 () Unit!4387)

(assert (=> d!44363 (= lt!74139 e!92085)))

(declare-fun c!26563 () Bool)

(assert (=> d!44363 (= c!26563 lt!74137)))

(assert (=> d!44363 (= lt!74137 (containsKey!180 (toList!858 lt!73889) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44363 (= (contains!904 lt!73889 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74140)))

(declare-fun b!141294 () Bool)

(declare-fun lt!74138 () Unit!4387)

(assert (=> b!141294 (= e!92085 lt!74138)))

(assert (=> b!141294 (= lt!74138 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73889) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141294 (isDefined!129 (getValueByKey!177 (toList!858 lt!73889) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141295 () Bool)

(declare-fun Unit!4456 () Unit!4387)

(assert (=> b!141295 (= e!92085 Unit!4456)))

(declare-fun b!141296 () Bool)

(assert (=> b!141296 (= e!92084 (isDefined!129 (getValueByKey!177 (toList!858 lt!73889) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44363 c!26563) b!141294))

(assert (= (and d!44363 (not c!26563)) b!141295))

(assert (= (and d!44363 (not res!67467)) b!141296))

(declare-fun m!169525 () Bool)

(assert (=> d!44363 m!169525))

(declare-fun m!169527 () Bool)

(assert (=> b!141294 m!169527))

(declare-fun m!169529 () Bool)

(assert (=> b!141294 m!169529))

(assert (=> b!141294 m!169529))

(declare-fun m!169531 () Bool)

(assert (=> b!141294 m!169531))

(assert (=> b!141296 m!169529))

(assert (=> b!141296 m!169529))

(assert (=> b!141296 m!169531))

(assert (=> d!44011 d!44363))

(assert (=> d!44011 d!43697))

(declare-fun d!44365 () Bool)

(declare-fun c!26566 () Bool)

(assert (=> d!44365 (= c!26566 ((_ is Nil!1716) (toList!858 lt!73460)))))

(declare-fun e!92088 () (InoxSet tuple2!2622))

(assert (=> d!44365 (= (content!139 (toList!858 lt!73460)) e!92088)))

(declare-fun b!141301 () Bool)

(assert (=> b!141301 (= e!92088 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!141302 () Bool)

(assert (=> b!141302 (= e!92088 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73460)) true) (content!139 (t!6295 (toList!858 lt!73460)))))))

(assert (= (and d!44365 c!26566) b!141301))

(assert (= (and d!44365 (not c!26566)) b!141302))

(declare-fun m!169533 () Bool)

(assert (=> b!141302 m!169533))

(declare-fun m!169535 () Bool)

(assert (=> b!141302 m!169535))

(assert (=> d!44191 d!44365))

(assert (=> b!140492 d!43815))

(declare-fun d!44367 () Bool)

(declare-fun lt!74141 () Bool)

(assert (=> d!44367 (= lt!74141 (select (content!139 lt!73931) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun e!92089 () Bool)

(assert (=> d!44367 (= lt!74141 e!92089)))

(declare-fun res!67468 () Bool)

(assert (=> d!44367 (=> (not res!67468) (not e!92089))))

(assert (=> d!44367 (= res!67468 ((_ is Cons!1715) lt!73931))))

(assert (=> d!44367 (= (contains!907 lt!73931 (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!74141)))

(declare-fun b!141303 () Bool)

(declare-fun e!92090 () Bool)

(assert (=> b!141303 (= e!92089 e!92090)))

(declare-fun res!67469 () Bool)

(assert (=> b!141303 (=> res!67469 e!92090)))

(assert (=> b!141303 (= res!67469 (= (h!2322 lt!73931) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141304 () Bool)

(assert (=> b!141304 (= e!92090 (contains!907 (t!6295 lt!73931) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (= (and d!44367 res!67468) b!141303))

(assert (= (and b!141303 (not res!67469)) b!141304))

(declare-fun m!169537 () Bool)

(assert (=> d!44367 m!169537))

(declare-fun m!169539 () Bool)

(assert (=> d!44367 m!169539))

(declare-fun m!169541 () Bool)

(assert (=> b!141304 m!169541))

(assert (=> b!140930 d!44367))

(assert (=> b!141006 d!43693))

(declare-fun d!44369 () Bool)

(assert (=> d!44369 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74142 () Unit!4387)

(assert (=> d!44369 (= lt!74142 (choose!864 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92091 () Bool)

(assert (=> d!44369 e!92091))

(declare-fun res!67470 () Bool)

(assert (=> d!44369 (=> (not res!67470) (not e!92091))))

(assert (=> d!44369 (= res!67470 (isStrictlySorted!312 (toList!858 lt!73237)))))

(assert (=> d!44369 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74142)))

(declare-fun b!141305 () Bool)

(assert (=> b!141305 (= e!92091 (containsKey!180 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44369 res!67470) b!141305))

(assert (=> d!44369 m!166927))

(assert (=> d!44369 m!168945))

(assert (=> d!44369 m!168945))

(assert (=> d!44369 m!168969))

(assert (=> d!44369 m!166927))

(declare-fun m!169543 () Bool)

(assert (=> d!44369 m!169543))

(declare-fun m!169545 () Bool)

(assert (=> d!44369 m!169545))

(assert (=> b!141305 m!166927))

(assert (=> b!141305 m!168965))

(assert (=> b!141058 d!44369))

(declare-fun d!44371 () Bool)

(assert (=> d!44371 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5931 () Bool)

(assert (= bs!5931 d!44371))

(assert (=> bs!5931 m!168945))

(declare-fun m!169547 () Bool)

(assert (=> bs!5931 m!169547))

(assert (=> b!141058 d!44371))

(assert (=> b!141058 d!44209))

(declare-fun d!44373 () Bool)

(assert (=> d!44373 (= (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247)) (not (isEmpty!423 (getValueByKey!177 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))))

(declare-fun bs!5932 () Bool)

(assert (= bs!5932 d!44373))

(assert (=> bs!5932 m!169065))

(declare-fun m!169549 () Bool)

(assert (=> bs!5932 m!169549))

(assert (=> b!141082 d!44373))

(declare-fun b!141307 () Bool)

(declare-fun e!92092 () Option!183)

(declare-fun e!92093 () Option!183)

(assert (=> b!141307 (= e!92092 e!92093)))

(declare-fun c!26568 () Bool)

(assert (=> b!141307 (= c!26568 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))) lt!73247))))))

(declare-fun b!141308 () Bool)

(assert (=> b!141308 (= e!92093 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))) lt!73247))))

(declare-fun b!141306 () Bool)

(assert (=> b!141306 (= e!92092 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))))

(declare-fun b!141309 () Bool)

(assert (=> b!141309 (= e!92093 None!181)))

(declare-fun d!44375 () Bool)

(declare-fun c!26567 () Bool)

(assert (=> d!44375 (= c!26567 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))) lt!73247)))))

(assert (=> d!44375 (= (getValueByKey!177 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247) e!92092)))

(assert (= (and d!44375 c!26567) b!141306))

(assert (= (and d!44375 (not c!26567)) b!141307))

(assert (= (and b!141307 c!26568) b!141308))

(assert (= (and b!141307 (not c!26568)) b!141309))

(declare-fun m!169551 () Bool)

(assert (=> b!141308 m!169551))

(assert (=> b!141082 d!44375))

(declare-fun d!44377 () Bool)

(declare-fun lt!74143 () Bool)

(assert (=> d!44377 (= lt!74143 (select (content!139 lt!73821) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92094 () Bool)

(assert (=> d!44377 (= lt!74143 e!92094)))

(declare-fun res!67471 () Bool)

(assert (=> d!44377 (=> (not res!67471) (not e!92094))))

(assert (=> d!44377 (= res!67471 ((_ is Cons!1715) lt!73821))))

(assert (=> d!44377 (= (contains!907 lt!73821 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74143)))

(declare-fun b!141310 () Bool)

(declare-fun e!92095 () Bool)

(assert (=> b!141310 (= e!92094 e!92095)))

(declare-fun res!67472 () Bool)

(assert (=> b!141310 (=> res!67472 e!92095)))

(assert (=> b!141310 (= res!67472 (= (h!2322 lt!73821) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141311 () Bool)

(assert (=> b!141311 (= e!92095 (contains!907 (t!6295 lt!73821) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44377 res!67471) b!141310))

(assert (= (and b!141310 (not res!67472)) b!141311))

(declare-fun m!169553 () Bool)

(assert (=> d!44377 m!169553))

(declare-fun m!169555 () Bool)

(assert (=> d!44377 m!169555))

(declare-fun m!169557 () Bool)

(assert (=> b!141311 m!169557))

(assert (=> b!140767 d!44377))

(declare-fun d!44379 () Bool)

(assert (=> d!44379 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5933 () Bool)

(assert (= bs!5933 d!44379))

(assert (=> bs!5933 m!167543))

(declare-fun m!169559 () Bool)

(assert (=> bs!5933 m!169559))

(assert (=> b!140460 d!44379))

(declare-fun b!141313 () Bool)

(declare-fun e!92096 () Option!183)

(declare-fun e!92097 () Option!183)

(assert (=> b!141313 (= e!92096 e!92097)))

(declare-fun c!26570 () Bool)

(assert (=> b!141313 (= c!26570 (and ((_ is Cons!1715) (toList!858 lt!73215)) (not (= (_1!1322 (h!2322 (toList!858 lt!73215))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141314 () Bool)

(assert (=> b!141314 (= e!92097 (getValueByKey!177 (t!6295 (toList!858 lt!73215)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141312 () Bool)

(assert (=> b!141312 (= e!92096 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73215)))))))

(declare-fun b!141315 () Bool)

(assert (=> b!141315 (= e!92097 None!181)))

(declare-fun d!44381 () Bool)

(declare-fun c!26569 () Bool)

(assert (=> d!44381 (= c!26569 (and ((_ is Cons!1715) (toList!858 lt!73215)) (= (_1!1322 (h!2322 (toList!858 lt!73215))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44381 (= (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) e!92096)))

(assert (= (and d!44381 c!26569) b!141312))

(assert (= (and d!44381 (not c!26569)) b!141313))

(assert (= (and b!141313 c!26570) b!141314))

(assert (= (and b!141313 (not c!26570)) b!141315))

(assert (=> b!141314 m!166927))

(declare-fun m!169561 () Bool)

(assert (=> b!141314 m!169561))

(assert (=> b!140460 d!44381))

(assert (=> d!43737 d!43745))

(assert (=> d!43737 d!43751))

(declare-fun d!44383 () Bool)

(assert (=> d!44383 (contains!904 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) lt!73225)))

(assert (=> d!44383 true))

(declare-fun _$35!391 () Unit!4387)

(assert (=> d!44383 (= (choose!866 lt!73219 lt!73221 (zeroValue!2789 newMap!16) lt!73225) _$35!391)))

(declare-fun bs!5934 () Bool)

(assert (= bs!5934 d!44383))

(assert (=> bs!5934 m!166931))

(assert (=> bs!5934 m!166931))

(assert (=> bs!5934 m!166933))

(assert (=> d!43737 d!44383))

(declare-fun d!44385 () Bool)

(declare-fun e!92098 () Bool)

(assert (=> d!44385 e!92098))

(declare-fun res!67473 () Bool)

(assert (=> d!44385 (=> res!67473 e!92098)))

(declare-fun lt!74147 () Bool)

(assert (=> d!44385 (= res!67473 (not lt!74147))))

(declare-fun lt!74144 () Bool)

(assert (=> d!44385 (= lt!74147 lt!74144)))

(declare-fun lt!74146 () Unit!4387)

(declare-fun e!92099 () Unit!4387)

(assert (=> d!44385 (= lt!74146 e!92099)))

(declare-fun c!26571 () Bool)

(assert (=> d!44385 (= c!26571 lt!74144)))

(assert (=> d!44385 (= lt!74144 (containsKey!180 (toList!858 lt!73219) lt!73225))))

(assert (=> d!44385 (= (contains!904 lt!73219 lt!73225) lt!74147)))

(declare-fun b!141316 () Bool)

(declare-fun lt!74145 () Unit!4387)

(assert (=> b!141316 (= e!92099 lt!74145)))

(assert (=> b!141316 (= lt!74145 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73219) lt!73225))))

(assert (=> b!141316 (isDefined!129 (getValueByKey!177 (toList!858 lt!73219) lt!73225))))

(declare-fun b!141317 () Bool)

(declare-fun Unit!4457 () Unit!4387)

(assert (=> b!141317 (= e!92099 Unit!4457)))

(declare-fun b!141318 () Bool)

(assert (=> b!141318 (= e!92098 (isDefined!129 (getValueByKey!177 (toList!858 lt!73219) lt!73225)))))

(assert (= (and d!44385 c!26571) b!141316))

(assert (= (and d!44385 (not c!26571)) b!141317))

(assert (= (and d!44385 (not res!67473)) b!141318))

(declare-fun m!169563 () Bool)

(assert (=> d!44385 m!169563))

(declare-fun m!169565 () Bool)

(assert (=> b!141316 m!169565))

(declare-fun m!169567 () Bool)

(assert (=> b!141316 m!169567))

(assert (=> b!141316 m!169567))

(declare-fun m!169569 () Bool)

(assert (=> b!141316 m!169569))

(assert (=> b!141318 m!169567))

(assert (=> b!141318 m!169567))

(assert (=> b!141318 m!169569))

(assert (=> d!43737 d!44385))

(declare-fun d!44387 () Bool)

(declare-fun lt!74148 () Bool)

(assert (=> d!44387 (= lt!74148 (select (content!139 (t!6295 (toList!858 lt!73290))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!92100 () Bool)

(assert (=> d!44387 (= lt!74148 e!92100)))

(declare-fun res!67474 () Bool)

(assert (=> d!44387 (=> (not res!67474) (not e!92100))))

(assert (=> d!44387 (= res!67474 ((_ is Cons!1715) (t!6295 (toList!858 lt!73290))))))

(assert (=> d!44387 (= (contains!907 (t!6295 (toList!858 lt!73290)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!74148)))

(declare-fun b!141319 () Bool)

(declare-fun e!92101 () Bool)

(assert (=> b!141319 (= e!92100 e!92101)))

(declare-fun res!67475 () Bool)

(assert (=> b!141319 (=> res!67475 e!92101)))

(assert (=> b!141319 (= res!67475 (= (h!2322 (t!6295 (toList!858 lt!73290))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141320 () Bool)

(assert (=> b!141320 (= e!92101 (contains!907 (t!6295 (t!6295 (toList!858 lt!73290))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!44387 res!67474) b!141319))

(assert (= (and b!141319 (not res!67475)) b!141320))

(declare-fun m!169571 () Bool)

(assert (=> d!44387 m!169571))

(declare-fun m!169573 () Bool)

(assert (=> d!44387 m!169573))

(declare-fun m!169575 () Bool)

(assert (=> b!141320 m!169575))

(assert (=> b!140783 d!44387))

(declare-fun d!44389 () Bool)

(assert (=> d!44389 (= (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225)) (not (isEmpty!423 (getValueByKey!177 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))))

(declare-fun bs!5935 () Bool)

(assert (= bs!5935 d!44389))

(assert (=> bs!5935 m!167649))

(declare-fun m!169577 () Bool)

(assert (=> bs!5935 m!169577))

(assert (=> b!140320 d!44389))

(declare-fun b!141322 () Bool)

(declare-fun e!92102 () Option!183)

(declare-fun e!92103 () Option!183)

(assert (=> b!141322 (= e!92102 e!92103)))

(declare-fun c!26573 () Bool)

(assert (=> b!141322 (= c!26573 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))) lt!73225))))))

(declare-fun b!141323 () Bool)

(assert (=> b!141323 (= e!92103 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))) lt!73225))))

(declare-fun b!141321 () Bool)

(assert (=> b!141321 (= e!92102 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))))

(declare-fun b!141324 () Bool)

(assert (=> b!141324 (= e!92103 None!181)))

(declare-fun d!44391 () Bool)

(declare-fun c!26572 () Bool)

(assert (=> d!44391 (= c!26572 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))) lt!73225)))))

(assert (=> d!44391 (= (getValueByKey!177 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225) e!92102)))

(assert (= (and d!44391 c!26572) b!141321))

(assert (= (and d!44391 (not c!26572)) b!141322))

(assert (= (and b!141322 c!26573) b!141323))

(assert (= (and b!141322 (not c!26573)) b!141324))

(declare-fun m!169579 () Bool)

(assert (=> b!141323 m!169579))

(assert (=> b!140320 d!44391))

(declare-fun d!44393 () Bool)

(declare-fun res!67476 () Bool)

(declare-fun e!92104 () Bool)

(assert (=> d!44393 (=> res!67476 e!92104)))

(assert (=> d!44393 (= res!67476 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15472))) (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15472)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (=> d!44393 (= (containsKey!180 (t!6295 (toList!858 call!15472)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) e!92104)))

(declare-fun b!141325 () Bool)

(declare-fun e!92105 () Bool)

(assert (=> b!141325 (= e!92104 e!92105)))

(declare-fun res!67477 () Bool)

(assert (=> b!141325 (=> (not res!67477) (not e!92105))))

(assert (=> b!141325 (= res!67477 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 call!15472)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 call!15472)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))) ((_ is Cons!1715) (t!6295 (toList!858 call!15472))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 call!15472)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(declare-fun b!141326 () Bool)

(assert (=> b!141326 (= e!92105 (containsKey!180 (t!6295 (t!6295 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (= (and d!44393 (not res!67476)) b!141325))

(assert (= (and b!141325 res!67477) b!141326))

(assert (=> b!141326 m!166761))

(declare-fun m!169581 () Bool)

(assert (=> b!141326 m!169581))

(assert (=> b!141032 d!44393))

(declare-fun d!44395 () Bool)

(assert (=> d!44395 (= ($colon$colon!93 e!91706 (ite c!26382 (h!2322 (toList!858 call!15501)) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (Cons!1715 (ite c!26382 (h!2322 (toList!858 call!15501)) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91706))))

(assert (=> bm!15606 d!44395))

(declare-fun d!44397 () Bool)

(assert (=> d!44397 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74149 () Unit!4387)

(assert (=> d!44397 (= lt!74149 (choose!864 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92106 () Bool)

(assert (=> d!44397 e!92106))

(declare-fun res!67478 () Bool)

(assert (=> d!44397 (=> (not res!67478) (not e!92106))))

(assert (=> d!44397 (= res!67478 (isStrictlySorted!312 (toList!858 lt!73309)))))

(assert (=> d!44397 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74149)))

(declare-fun b!141327 () Bool)

(assert (=> b!141327 (= e!92106 (containsKey!180 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44397 res!67478) b!141327))

(assert (=> d!44397 m!167925))

(assert (=> d!44397 m!167925))

(assert (=> d!44397 m!167927))

(declare-fun m!169583 () Bool)

(assert (=> d!44397 m!169583))

(declare-fun m!169585 () Bool)

(assert (=> d!44397 m!169585))

(assert (=> b!141327 m!167921))

(assert (=> b!140489 d!44397))

(declare-fun d!44399 () Bool)

(assert (=> d!44399 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5936 () Bool)

(assert (= bs!5936 d!44399))

(assert (=> bs!5936 m!167925))

(declare-fun m!169587 () Bool)

(assert (=> bs!5936 m!169587))

(assert (=> b!140489 d!44399))

(declare-fun b!141329 () Bool)

(declare-fun e!92107 () Option!183)

(declare-fun e!92108 () Option!183)

(assert (=> b!141329 (= e!92107 e!92108)))

(declare-fun c!26575 () Bool)

(assert (=> b!141329 (= c!26575 (and ((_ is Cons!1715) (toList!858 lt!73309)) (not (= (_1!1322 (h!2322 (toList!858 lt!73309))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141330 () Bool)

(assert (=> b!141330 (= e!92108 (getValueByKey!177 (t!6295 (toList!858 lt!73309)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141328 () Bool)

(assert (=> b!141328 (= e!92107 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73309)))))))

(declare-fun b!141331 () Bool)

(assert (=> b!141331 (= e!92108 None!181)))

(declare-fun d!44401 () Bool)

(declare-fun c!26574 () Bool)

(assert (=> d!44401 (= c!26574 (and ((_ is Cons!1715) (toList!858 lt!73309)) (= (_1!1322 (h!2322 (toList!858 lt!73309))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44401 (= (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000) e!92107)))

(assert (= (and d!44401 c!26574) b!141328))

(assert (= (and d!44401 (not c!26574)) b!141329))

(assert (= (and b!141329 c!26575) b!141330))

(assert (= (and b!141329 (not c!26575)) b!141331))

(declare-fun m!169589 () Bool)

(assert (=> b!141330 m!169589))

(assert (=> b!140489 d!44401))

(declare-fun b!141333 () Bool)

(declare-fun e!92109 () Option!183)

(declare-fun e!92110 () Option!183)

(assert (=> b!141333 (= e!92109 e!92110)))

(declare-fun c!26577 () Bool)

(assert (=> b!141333 (= c!26577 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15472))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15472)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))))

(declare-fun b!141334 () Bool)

(assert (=> b!141334 (= e!92110 (getValueByKey!177 (t!6295 (t!6295 (toList!858 call!15472))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(declare-fun b!141332 () Bool)

(assert (=> b!141332 (= e!92109 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 call!15472))))))))

(declare-fun b!141335 () Bool)

(assert (=> b!141335 (= e!92110 None!181)))

(declare-fun c!26576 () Bool)

(declare-fun d!44403 () Bool)

(assert (=> d!44403 (= c!26576 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15472))) (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15472)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (=> d!44403 (= (getValueByKey!177 (t!6295 (toList!858 call!15472)) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) e!92109)))

(assert (= (and d!44403 c!26576) b!141332))

(assert (= (and d!44403 (not c!26576)) b!141333))

(assert (= (and b!141333 c!26577) b!141334))

(assert (= (and b!141333 (not c!26577)) b!141335))

(assert (=> b!141334 m!166761))

(declare-fun m!169591 () Bool)

(assert (=> b!141334 m!169591))

(assert (=> b!140282 d!44403))

(declare-fun b!141337 () Bool)

(declare-fun e!92111 () Option!183)

(declare-fun e!92112 () Option!183)

(assert (=> b!141337 (= e!92111 e!92112)))

(declare-fun c!26579 () Bool)

(assert (=> b!141337 (= c!26579 (and ((_ is Cons!1715) (t!6295 (t!6295 (toList!858 lt!73005)))) (not (= (_1!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!141338 () Bool)

(assert (=> b!141338 (= e!92112 (getValueByKey!177 (t!6295 (t!6295 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!141336 () Bool)

(assert (=> b!141336 (= e!92111 (Some!182 (_2!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005)))))))))

(declare-fun b!141339 () Bool)

(assert (=> b!141339 (= e!92112 None!181)))

(declare-fun d!44405 () Bool)

(declare-fun c!26578 () Bool)

(assert (=> d!44405 (= c!26578 (and ((_ is Cons!1715) (t!6295 (t!6295 (toList!858 lt!73005)))) (= (_1!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!44405 (= (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92111)))

(assert (= (and d!44405 c!26578) b!141336))

(assert (= (and d!44405 (not c!26578)) b!141337))

(assert (= (and b!141337 c!26579) b!141338))

(assert (= (and b!141337 (not c!26579)) b!141339))

(assert (=> b!141338 m!166633))

(declare-fun m!169593 () Bool)

(assert (=> b!141338 m!169593))

(assert (=> b!140727 d!44405))

(declare-fun d!44407 () Bool)

(declare-fun e!92113 () Bool)

(assert (=> d!44407 e!92113))

(declare-fun res!67479 () Bool)

(assert (=> d!44407 (=> res!67479 e!92113)))

(declare-fun lt!74153 () Bool)

(assert (=> d!44407 (= res!67479 (not lt!74153))))

(declare-fun lt!74150 () Bool)

(assert (=> d!44407 (= lt!74153 lt!74150)))

(declare-fun lt!74152 () Unit!4387)

(declare-fun e!92114 () Unit!4387)

(assert (=> d!44407 (= lt!74152 e!92114)))

(declare-fun c!26580 () Bool)

(assert (=> d!44407 (= c!26580 lt!74150)))

(assert (=> d!44407 (= lt!74150 (containsKey!180 (toList!858 lt!74033) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44407 (= (contains!904 lt!74033 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74153)))

(declare-fun b!141340 () Bool)

(declare-fun lt!74151 () Unit!4387)

(assert (=> b!141340 (= e!92114 lt!74151)))

(assert (=> b!141340 (= lt!74151 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!74033) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!141340 (isDefined!129 (getValueByKey!177 (toList!858 lt!74033) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141341 () Bool)

(declare-fun Unit!4458 () Unit!4387)

(assert (=> b!141341 (= e!92114 Unit!4458)))

(declare-fun b!141342 () Bool)

(assert (=> b!141342 (= e!92113 (isDefined!129 (getValueByKey!177 (toList!858 lt!74033) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44407 c!26580) b!141340))

(assert (= (and d!44407 (not c!26580)) b!141341))

(assert (= (and d!44407 (not res!67479)) b!141342))

(declare-fun m!169595 () Bool)

(assert (=> d!44407 m!169595))

(declare-fun m!169597 () Bool)

(assert (=> b!141340 m!169597))

(assert (=> b!141340 m!169097))

(assert (=> b!141340 m!169097))

(declare-fun m!169599 () Bool)

(assert (=> b!141340 m!169599))

(assert (=> b!141342 m!169097))

(assert (=> b!141342 m!169097))

(assert (=> b!141342 m!169599))

(assert (=> d!44197 d!44407))

(declare-fun b!141344 () Bool)

(declare-fun e!92115 () Option!183)

(declare-fun e!92116 () Option!183)

(assert (=> b!141344 (= e!92115 e!92116)))

(declare-fun c!26582 () Bool)

(assert (=> b!141344 (= c!26582 (and ((_ is Cons!1715) lt!74032) (not (= (_1!1322 (h!2322 lt!74032)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141345 () Bool)

(assert (=> b!141345 (= e!92116 (getValueByKey!177 (t!6295 lt!74032) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141343 () Bool)

(assert (=> b!141343 (= e!92115 (Some!182 (_2!1322 (h!2322 lt!74032))))))

(declare-fun b!141346 () Bool)

(assert (=> b!141346 (= e!92116 None!181)))

(declare-fun c!26581 () Bool)

(declare-fun d!44409 () Bool)

(assert (=> d!44409 (= c!26581 (and ((_ is Cons!1715) lt!74032) (= (_1!1322 (h!2322 lt!74032)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44409 (= (getValueByKey!177 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92115)))

(assert (= (and d!44409 c!26581) b!141343))

(assert (= (and d!44409 (not c!26581)) b!141344))

(assert (= (and b!141344 c!26582) b!141345))

(assert (= (and b!141344 (not c!26582)) b!141346))

(declare-fun m!169601 () Bool)

(assert (=> b!141345 m!169601))

(assert (=> d!44197 d!44409))

(declare-fun d!44411 () Bool)

(assert (=> d!44411 (= (getValueByKey!177 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74154 () Unit!4387)

(assert (=> d!44411 (= lt!74154 (choose!873 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92117 () Bool)

(assert (=> d!44411 e!92117))

(declare-fun res!67480 () Bool)

(assert (=> d!44411 (=> (not res!67480) (not e!92117))))

(assert (=> d!44411 (= res!67480 (isStrictlySorted!312 lt!74032))))

(assert (=> d!44411 (= (lemmaContainsTupThenGetReturnValue!91 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74154)))

(declare-fun b!141347 () Bool)

(declare-fun res!67481 () Bool)

(assert (=> b!141347 (=> (not res!67481) (not e!92117))))

(assert (=> b!141347 (= res!67481 (containsKey!180 lt!74032 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141348 () Bool)

(assert (=> b!141348 (= e!92117 (contains!907 lt!74032 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44411 res!67480) b!141347))

(assert (= (and b!141347 res!67481) b!141348))

(assert (=> d!44411 m!169091))

(declare-fun m!169603 () Bool)

(assert (=> d!44411 m!169603))

(declare-fun m!169605 () Bool)

(assert (=> d!44411 m!169605))

(declare-fun m!169607 () Bool)

(assert (=> b!141347 m!169607))

(declare-fun m!169609 () Bool)

(assert (=> b!141348 m!169609))

(assert (=> d!44197 d!44411))

(declare-fun bm!15668 () Bool)

(declare-fun call!15673 () List!1719)

(declare-fun call!15672 () List!1719)

(assert (=> bm!15668 (= call!15673 call!15672)))

(declare-fun b!141350 () Bool)

(declare-fun e!92119 () List!1719)

(declare-fun e!92121 () List!1719)

(assert (=> b!141350 (= e!92119 e!92121)))

(declare-fun c!26586 () Bool)

(assert (=> b!141350 (= c!26586 (and ((_ is Cons!1715) (toList!858 (map!1429 newMap!16))) (= (_1!1322 (h!2322 (toList!858 (map!1429 newMap!16)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141351 () Bool)

(declare-fun res!67483 () Bool)

(declare-fun e!92118 () Bool)

(assert (=> b!141351 (=> (not res!67483) (not e!92118))))

(declare-fun lt!74155 () List!1719)

(assert (=> b!141351 (= res!67483 (containsKey!180 lt!74155 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26584 () Bool)

(declare-fun b!141352 () Bool)

(assert (=> b!141352 (= c!26584 (and ((_ is Cons!1715) (toList!858 (map!1429 newMap!16))) (bvsgt (_1!1322 (h!2322 (toList!858 (map!1429 newMap!16)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92120 () List!1719)

(assert (=> b!141352 (= e!92121 e!92120)))

(declare-fun bm!15669 () Bool)

(declare-fun call!15671 () List!1719)

(assert (=> bm!15669 (= call!15672 call!15671)))

(declare-fun b!141353 () Bool)

(assert (=> b!141353 (= e!92121 call!15672)))

(declare-fun b!141354 () Bool)

(assert (=> b!141354 (= e!92119 call!15671)))

(declare-fun b!141355 () Bool)

(assert (=> b!141355 (= e!92118 (contains!907 lt!74155 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92122 () List!1719)

(declare-fun b!141349 () Bool)

(assert (=> b!141349 (= e!92122 (ite c!26586 (t!6295 (toList!858 (map!1429 newMap!16))) (ite c!26584 (Cons!1715 (h!2322 (toList!858 (map!1429 newMap!16))) (t!6295 (toList!858 (map!1429 newMap!16)))) Nil!1716)))))

(declare-fun d!44413 () Bool)

(assert (=> d!44413 e!92118))

(declare-fun res!67482 () Bool)

(assert (=> d!44413 (=> (not res!67482) (not e!92118))))

(assert (=> d!44413 (= res!67482 (isStrictlySorted!312 lt!74155))))

(assert (=> d!44413 (= lt!74155 e!92119)))

(declare-fun c!26585 () Bool)

(assert (=> d!44413 (= c!26585 (and ((_ is Cons!1715) (toList!858 (map!1429 newMap!16))) (bvslt (_1!1322 (h!2322 (toList!858 (map!1429 newMap!16)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44413 (isStrictlySorted!312 (toList!858 (map!1429 newMap!16)))))

(assert (=> d!44413 (= (insertStrictlySorted!94 (toList!858 (map!1429 newMap!16)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74155)))

(declare-fun b!141356 () Bool)

(assert (=> b!141356 (= e!92120 call!15673)))

(declare-fun b!141357 () Bool)

(assert (=> b!141357 (= e!92120 call!15673)))

(declare-fun bm!15670 () Bool)

(assert (=> bm!15670 (= call!15671 ($colon$colon!93 e!92122 (ite c!26585 (h!2322 (toList!858 (map!1429 newMap!16))) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26583 () Bool)

(assert (=> bm!15670 (= c!26583 c!26585)))

(declare-fun b!141358 () Bool)

(assert (=> b!141358 (= e!92122 (insertStrictlySorted!94 (t!6295 (toList!858 (map!1429 newMap!16))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44413 c!26585) b!141354))

(assert (= (and d!44413 (not c!26585)) b!141350))

(assert (= (and b!141350 c!26586) b!141353))

(assert (= (and b!141350 (not c!26586)) b!141352))

(assert (= (and b!141352 c!26584) b!141356))

(assert (= (and b!141352 (not c!26584)) b!141357))

(assert (= (or b!141356 b!141357) bm!15668))

(assert (= (or b!141353 bm!15668) bm!15669))

(assert (= (or b!141354 bm!15669) bm!15670))

(assert (= (and bm!15670 c!26583) b!141358))

(assert (= (and bm!15670 (not c!26583)) b!141349))

(assert (= (and d!44413 res!67482) b!141351))

(assert (= (and b!141351 res!67483) b!141355))

(declare-fun m!169611 () Bool)

(assert (=> bm!15670 m!169611))

(declare-fun m!169613 () Bool)

(assert (=> d!44413 m!169613))

(declare-fun m!169615 () Bool)

(assert (=> d!44413 m!169615))

(declare-fun m!169617 () Bool)

(assert (=> b!141351 m!169617))

(declare-fun m!169619 () Bool)

(assert (=> b!141358 m!169619))

(declare-fun m!169621 () Bool)

(assert (=> b!141355 m!169621))

(assert (=> d!44197 d!44413))

(declare-fun d!44415 () Bool)

(assert (=> d!44415 (= (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140591 d!44415))

(declare-fun d!44417 () Bool)

(assert (=> d!44417 (= (apply!120 (+!173 lt!73694 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))) lt!73692) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73694 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))) lt!73692)))))

(declare-fun bs!5937 () Bool)

(assert (= bs!5937 d!44417))

(declare-fun m!169623 () Bool)

(assert (=> bs!5937 m!169623))

(assert (=> bs!5937 m!169623))

(declare-fun m!169625 () Bool)

(assert (=> bs!5937 m!169625))

(assert (=> b!140559 d!44417))

(declare-fun d!44419 () Bool)

(assert (=> d!44419 (= (apply!120 (+!173 lt!73694 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))) lt!73692) (apply!120 lt!73694 lt!73692))))

(declare-fun lt!74156 () Unit!4387)

(assert (=> d!44419 (= lt!74156 (choose!867 lt!73694 lt!73704 (zeroValue!2789 newMap!16) lt!73692))))

(declare-fun e!92123 () Bool)

(assert (=> d!44419 e!92123))

(declare-fun res!67484 () Bool)

(assert (=> d!44419 (=> (not res!67484) (not e!92123))))

(assert (=> d!44419 (= res!67484 (contains!904 lt!73694 lt!73692))))

(assert (=> d!44419 (= (addApplyDifferent!96 lt!73694 lt!73704 (zeroValue!2789 newMap!16) lt!73692) lt!74156)))

(declare-fun b!141359 () Bool)

(assert (=> b!141359 (= e!92123 (not (= lt!73692 lt!73704)))))

(assert (= (and d!44419 res!67484) b!141359))

(assert (=> d!44419 m!168025))

(declare-fun m!169627 () Bool)

(assert (=> d!44419 m!169627))

(assert (=> d!44419 m!168005))

(assert (=> d!44419 m!168027))

(declare-fun m!169629 () Bool)

(assert (=> d!44419 m!169629))

(assert (=> d!44419 m!168005))

(assert (=> b!140559 d!44419))

(declare-fun d!44421 () Bool)

(assert (=> d!44421 (contains!904 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))) lt!73701)))

(declare-fun lt!74157 () Unit!4387)

(assert (=> d!44421 (= lt!74157 (choose!866 lt!73695 lt!73697 (zeroValue!2789 newMap!16) lt!73701))))

(assert (=> d!44421 (contains!904 lt!73695 lt!73701)))

(assert (=> d!44421 (= (addStillContains!96 lt!73695 lt!73697 (zeroValue!2789 newMap!16) lt!73701) lt!74157)))

(declare-fun bs!5938 () Bool)

(assert (= bs!5938 d!44421))

(assert (=> bs!5938 m!168011))

(assert (=> bs!5938 m!168011))

(assert (=> bs!5938 m!168013))

(declare-fun m!169631 () Bool)

(assert (=> bs!5938 m!169631))

(declare-fun m!169633 () Bool)

(assert (=> bs!5938 m!169633))

(assert (=> b!140559 d!44421))

(declare-fun d!44423 () Bool)

(assert (=> d!44423 (= (apply!120 (+!173 lt!73710 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))) lt!73709) (apply!120 lt!73710 lt!73709))))

(declare-fun lt!74158 () Unit!4387)

(assert (=> d!44423 (= lt!74158 (choose!867 lt!73710 lt!73706 (minValue!2789 newMap!16) lt!73709))))

(declare-fun e!92124 () Bool)

(assert (=> d!44423 e!92124))

(declare-fun res!67485 () Bool)

(assert (=> d!44423 (=> (not res!67485) (not e!92124))))

(assert (=> d!44423 (= res!67485 (contains!904 lt!73710 lt!73709))))

(assert (=> d!44423 (= (addApplyDifferent!96 lt!73710 lt!73706 (minValue!2789 newMap!16) lt!73709) lt!74158)))

(declare-fun b!141360 () Bool)

(assert (=> b!141360 (= e!92124 (not (= lt!73709 lt!73706)))))

(assert (= (and d!44423 res!67485) b!141360))

(assert (=> d!44423 m!168015))

(declare-fun m!169635 () Bool)

(assert (=> d!44423 m!169635))

(assert (=> d!44423 m!168017))

(assert (=> d!44423 m!168019))

(declare-fun m!169637 () Bool)

(assert (=> d!44423 m!169637))

(assert (=> d!44423 m!168017))

(assert (=> b!140559 d!44423))

(declare-fun d!44425 () Bool)

(declare-fun e!92125 () Bool)

(assert (=> d!44425 e!92125))

(declare-fun res!67486 () Bool)

(assert (=> d!44425 (=> (not res!67486) (not e!92125))))

(declare-fun lt!74161 () ListLongMap!1685)

(assert (=> d!44425 (= res!67486 (contains!904 lt!74161 (_1!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))))))

(declare-fun lt!74160 () List!1719)

(assert (=> d!44425 (= lt!74161 (ListLongMap!1686 lt!74160))))

(declare-fun lt!74159 () Unit!4387)

(declare-fun lt!74162 () Unit!4387)

(assert (=> d!44425 (= lt!74159 lt!74162)))

(assert (=> d!44425 (= (getValueByKey!177 lt!74160 (_1!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))))))

(assert (=> d!44425 (= lt!74162 (lemmaContainsTupThenGetReturnValue!91 lt!74160 (_1!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))))))

(assert (=> d!44425 (= lt!74160 (insertStrictlySorted!94 (toList!858 lt!73710) (_1!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))))))

(assert (=> d!44425 (= (+!173 lt!73710 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))) lt!74161)))

(declare-fun b!141361 () Bool)

(declare-fun res!67487 () Bool)

(assert (=> b!141361 (=> (not res!67487) (not e!92125))))

(assert (=> b!141361 (= res!67487 (= (getValueByKey!177 (toList!858 lt!74161) (_1!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))))))))

(declare-fun b!141362 () Bool)

(assert (=> b!141362 (= e!92125 (contains!907 (toList!858 lt!74161) (tuple2!2623 lt!73706 (minValue!2789 newMap!16))))))

(assert (= (and d!44425 res!67486) b!141361))

(assert (= (and b!141361 res!67487) b!141362))

(declare-fun m!169639 () Bool)

(assert (=> d!44425 m!169639))

(declare-fun m!169641 () Bool)

(assert (=> d!44425 m!169641))

(declare-fun m!169643 () Bool)

(assert (=> d!44425 m!169643))

(declare-fun m!169645 () Bool)

(assert (=> d!44425 m!169645))

(declare-fun m!169647 () Bool)

(assert (=> b!141361 m!169647))

(declare-fun m!169649 () Bool)

(assert (=> b!141362 m!169649))

(assert (=> b!140559 d!44425))

(declare-fun d!44427 () Bool)

(declare-fun e!92126 () Bool)

(assert (=> d!44427 e!92126))

(declare-fun res!67488 () Bool)

(assert (=> d!44427 (=> res!67488 e!92126)))

(declare-fun lt!74166 () Bool)

(assert (=> d!44427 (= res!67488 (not lt!74166))))

(declare-fun lt!74163 () Bool)

(assert (=> d!44427 (= lt!74166 lt!74163)))

(declare-fun lt!74165 () Unit!4387)

(declare-fun e!92127 () Unit!4387)

(assert (=> d!44427 (= lt!74165 e!92127)))

(declare-fun c!26587 () Bool)

(assert (=> d!44427 (= c!26587 lt!74163)))

(assert (=> d!44427 (= lt!74163 (containsKey!180 (toList!858 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))) lt!73701))))

(assert (=> d!44427 (= (contains!904 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))) lt!73701) lt!74166)))

(declare-fun b!141363 () Bool)

(declare-fun lt!74164 () Unit!4387)

(assert (=> b!141363 (= e!92127 lt!74164)))

(assert (=> b!141363 (= lt!74164 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))) lt!73701))))

(assert (=> b!141363 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))) lt!73701))))

(declare-fun b!141364 () Bool)

(declare-fun Unit!4459 () Unit!4387)

(assert (=> b!141364 (= e!92127 Unit!4459)))

(declare-fun b!141365 () Bool)

(assert (=> b!141365 (= e!92126 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))) lt!73701)))))

(assert (= (and d!44427 c!26587) b!141363))

(assert (= (and d!44427 (not c!26587)) b!141364))

(assert (= (and d!44427 (not res!67488)) b!141365))

(declare-fun m!169651 () Bool)

(assert (=> d!44427 m!169651))

(declare-fun m!169653 () Bool)

(assert (=> b!141363 m!169653))

(declare-fun m!169655 () Bool)

(assert (=> b!141363 m!169655))

(assert (=> b!141363 m!169655))

(declare-fun m!169657 () Bool)

(assert (=> b!141363 m!169657))

(assert (=> b!141365 m!169655))

(assert (=> b!141365 m!169655))

(assert (=> b!141365 m!169657))

(assert (=> b!140559 d!44427))

(declare-fun d!44429 () Bool)

(declare-fun e!92128 () Bool)

(assert (=> d!44429 e!92128))

(declare-fun res!67489 () Bool)

(assert (=> d!44429 (=> (not res!67489) (not e!92128))))

(declare-fun lt!74169 () ListLongMap!1685)

(assert (=> d!44429 (= res!67489 (contains!904 lt!74169 (_1!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74168 () List!1719)

(assert (=> d!44429 (= lt!74169 (ListLongMap!1686 lt!74168))))

(declare-fun lt!74167 () Unit!4387)

(declare-fun lt!74170 () Unit!4387)

(assert (=> d!44429 (= lt!74167 lt!74170)))

(assert (=> d!44429 (= (getValueByKey!177 lt!74168 (_1!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44429 (= lt!74170 (lemmaContainsTupThenGetReturnValue!91 lt!74168 (_1!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44429 (= lt!74168 (insertStrictlySorted!94 (toList!858 lt!73694) (_1!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44429 (= (+!173 lt!73694 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))) lt!74169)))

(declare-fun b!141366 () Bool)

(declare-fun res!67490 () Bool)

(assert (=> b!141366 (=> (not res!67490) (not e!92128))))

(assert (=> b!141366 (= res!67490 (= (getValueByKey!177 (toList!858 lt!74169) (_1!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141367 () Bool)

(assert (=> b!141367 (= e!92128 (contains!907 (toList!858 lt!74169) (tuple2!2623 lt!73704 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44429 res!67489) b!141366))

(assert (= (and b!141366 res!67490) b!141367))

(declare-fun m!169659 () Bool)

(assert (=> d!44429 m!169659))

(declare-fun m!169661 () Bool)

(assert (=> d!44429 m!169661))

(declare-fun m!169663 () Bool)

(assert (=> d!44429 m!169663))

(declare-fun m!169665 () Bool)

(assert (=> d!44429 m!169665))

(declare-fun m!169667 () Bool)

(assert (=> b!141366 m!169667))

(declare-fun m!169669 () Bool)

(assert (=> b!141367 m!169669))

(assert (=> b!140559 d!44429))

(declare-fun d!44431 () Bool)

(declare-fun e!92129 () Bool)

(assert (=> d!44431 e!92129))

(declare-fun res!67491 () Bool)

(assert (=> d!44431 (=> (not res!67491) (not e!92129))))

(declare-fun lt!74173 () ListLongMap!1685)

(assert (=> d!44431 (= res!67491 (contains!904 lt!74173 (_1!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))))))

(declare-fun lt!74172 () List!1719)

(assert (=> d!44431 (= lt!74173 (ListLongMap!1686 lt!74172))))

(declare-fun lt!74171 () Unit!4387)

(declare-fun lt!74174 () Unit!4387)

(assert (=> d!44431 (= lt!74171 lt!74174)))

(assert (=> d!44431 (= (getValueByKey!177 lt!74172 (_1!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))))))

(assert (=> d!44431 (= lt!74174 (lemmaContainsTupThenGetReturnValue!91 lt!74172 (_1!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))))))

(assert (=> d!44431 (= lt!74172 (insertStrictlySorted!94 (toList!858 lt!73707) (_1!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))))))

(assert (=> d!44431 (= (+!173 lt!73707 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))) lt!74173)))

(declare-fun b!141368 () Bool)

(declare-fun res!67492 () Bool)

(assert (=> b!141368 (=> (not res!67492) (not e!92129))))

(assert (=> b!141368 (= res!67492 (= (getValueByKey!177 (toList!858 lt!74173) (_1!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))))))))

(declare-fun b!141369 () Bool)

(assert (=> b!141369 (= e!92129 (contains!907 (toList!858 lt!74173) (tuple2!2623 lt!73696 (minValue!2789 newMap!16))))))

(assert (= (and d!44431 res!67491) b!141368))

(assert (= (and b!141368 res!67492) b!141369))

(declare-fun m!169671 () Bool)

(assert (=> d!44431 m!169671))

(declare-fun m!169673 () Bool)

(assert (=> d!44431 m!169673))

(declare-fun m!169675 () Bool)

(assert (=> d!44431 m!169675))

(declare-fun m!169677 () Bool)

(assert (=> d!44431 m!169677))

(declare-fun m!169679 () Bool)

(assert (=> b!141368 m!169679))

(declare-fun m!169681 () Bool)

(assert (=> b!141369 m!169681))

(assert (=> b!140559 d!44431))

(declare-fun d!44433 () Bool)

(assert (=> d!44433 (= (apply!120 (+!173 lt!73707 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))) lt!73702) (apply!120 lt!73707 lt!73702))))

(declare-fun lt!74175 () Unit!4387)

(assert (=> d!44433 (= lt!74175 (choose!867 lt!73707 lt!73696 (minValue!2789 newMap!16) lt!73702))))

(declare-fun e!92130 () Bool)

(assert (=> d!44433 e!92130))

(declare-fun res!67493 () Bool)

(assert (=> d!44433 (=> (not res!67493) (not e!92130))))

(assert (=> d!44433 (= res!67493 (contains!904 lt!73707 lt!73702))))

(assert (=> d!44433 (= (addApplyDifferent!96 lt!73707 lt!73696 (minValue!2789 newMap!16) lt!73702) lt!74175)))

(declare-fun b!141370 () Bool)

(assert (=> b!141370 (= e!92130 (not (= lt!73702 lt!73696)))))

(assert (= (and d!44433 res!67493) b!141370))

(assert (=> d!44433 m!168021))

(declare-fun m!169683 () Bool)

(assert (=> d!44433 m!169683))

(assert (=> d!44433 m!167999))

(assert (=> d!44433 m!168001))

(declare-fun m!169685 () Bool)

(assert (=> d!44433 m!169685))

(assert (=> d!44433 m!167999))

(assert (=> b!140559 d!44433))

(declare-fun d!44435 () Bool)

(assert (=> d!44435 (= (apply!120 lt!73710 lt!73709) (get!1535 (getValueByKey!177 (toList!858 lt!73710) lt!73709)))))

(declare-fun bs!5939 () Bool)

(assert (= bs!5939 d!44435))

(declare-fun m!169687 () Bool)

(assert (=> bs!5939 m!169687))

(assert (=> bs!5939 m!169687))

(declare-fun m!169689 () Bool)

(assert (=> bs!5939 m!169689))

(assert (=> b!140559 d!44435))

(declare-fun d!44437 () Bool)

(assert (=> d!44437 (= (apply!120 (+!173 lt!73707 (tuple2!2623 lt!73696 (minValue!2789 newMap!16))) lt!73702) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73707 (tuple2!2623 lt!73696 (minValue!2789 newMap!16)))) lt!73702)))))

(declare-fun bs!5940 () Bool)

(assert (= bs!5940 d!44437))

(declare-fun m!169691 () Bool)

(assert (=> bs!5940 m!169691))

(assert (=> bs!5940 m!169691))

(declare-fun m!169693 () Bool)

(assert (=> bs!5940 m!169693))

(assert (=> b!140559 d!44437))

(declare-fun d!44439 () Bool)

(declare-fun e!92131 () Bool)

(assert (=> d!44439 e!92131))

(declare-fun res!67494 () Bool)

(assert (=> d!44439 (=> (not res!67494) (not e!92131))))

(declare-fun lt!74178 () ListLongMap!1685)

(assert (=> d!44439 (= res!67494 (contains!904 lt!74178 (_1!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74177 () List!1719)

(assert (=> d!44439 (= lt!74178 (ListLongMap!1686 lt!74177))))

(declare-fun lt!74176 () Unit!4387)

(declare-fun lt!74179 () Unit!4387)

(assert (=> d!44439 (= lt!74176 lt!74179)))

(assert (=> d!44439 (= (getValueByKey!177 lt!74177 (_1!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44439 (= lt!74179 (lemmaContainsTupThenGetReturnValue!91 lt!74177 (_1!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44439 (= lt!74177 (insertStrictlySorted!94 (toList!858 lt!73695) (_1!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44439 (= (+!173 lt!73695 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))) lt!74178)))

(declare-fun b!141371 () Bool)

(declare-fun res!67495 () Bool)

(assert (=> b!141371 (=> (not res!67495) (not e!92131))))

(assert (=> b!141371 (= res!67495 (= (getValueByKey!177 (toList!858 lt!74178) (_1!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141372 () Bool)

(assert (=> b!141372 (= e!92131 (contains!907 (toList!858 lt!74178) (tuple2!2623 lt!73697 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44439 res!67494) b!141371))

(assert (= (and b!141371 res!67495) b!141372))

(declare-fun m!169695 () Bool)

(assert (=> d!44439 m!169695))

(declare-fun m!169697 () Bool)

(assert (=> d!44439 m!169697))

(declare-fun m!169699 () Bool)

(assert (=> d!44439 m!169699))

(declare-fun m!169701 () Bool)

(assert (=> d!44439 m!169701))

(declare-fun m!169703 () Bool)

(assert (=> b!141371 m!169703))

(declare-fun m!169705 () Bool)

(assert (=> b!141372 m!169705))

(assert (=> b!140559 d!44439))

(declare-fun b!141373 () Bool)

(declare-fun res!67497 () Bool)

(declare-fun e!92137 () Bool)

(assert (=> b!141373 (=> (not res!67497) (not e!92137))))

(declare-fun lt!74182 () ListLongMap!1685)

(assert (=> b!141373 (= res!67497 (not (contains!904 lt!74182 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141374 () Bool)

(declare-fun e!92133 () Bool)

(assert (=> b!141374 (= e!92137 e!92133)))

(declare-fun c!26588 () Bool)

(declare-fun e!92135 () Bool)

(assert (=> b!141374 (= c!26588 e!92135)))

(declare-fun res!67498 () Bool)

(assert (=> b!141374 (=> (not res!67498) (not e!92135))))

(assert (=> b!141374 (= res!67498 (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun e!92134 () Bool)

(declare-fun b!141375 () Bool)

(assert (=> b!141375 (= e!92134 (= lt!74182 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141376 () Bool)

(declare-fun lt!74184 () Unit!4387)

(declare-fun lt!74180 () Unit!4387)

(assert (=> b!141376 (= lt!74184 lt!74180)))

(declare-fun lt!74181 () (_ BitVec 64))

(declare-fun lt!74186 () (_ BitVec 64))

(declare-fun lt!74183 () ListLongMap!1685)

(declare-fun lt!74185 () V!3553)

(assert (=> b!141376 (not (contains!904 (+!173 lt!74183 (tuple2!2623 lt!74181 lt!74185)) lt!74186))))

(assert (=> b!141376 (= lt!74180 (addStillNotContains!66 lt!74183 lt!74181 lt!74185 lt!74186))))

(assert (=> b!141376 (= lt!74186 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141376 (= lt!74185 (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141376 (= lt!74181 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun call!15674 () ListLongMap!1685)

(assert (=> b!141376 (= lt!74183 call!15674)))

(declare-fun e!92138 () ListLongMap!1685)

(assert (=> b!141376 (= e!92138 (+!173 call!15674 (tuple2!2623 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141377 () Bool)

(declare-fun e!92132 () Bool)

(assert (=> b!141377 (= e!92133 e!92132)))

(assert (=> b!141377 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun res!67499 () Bool)

(assert (=> b!141377 (= res!67499 (contains!904 lt!74182 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141377 (=> (not res!67499) (not e!92132))))

(declare-fun d!44441 () Bool)

(assert (=> d!44441 e!92137))

(declare-fun res!67496 () Bool)

(assert (=> d!44441 (=> (not res!67496) (not e!92137))))

(assert (=> d!44441 (= res!67496 (not (contains!904 lt!74182 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92136 () ListLongMap!1685)

(assert (=> d!44441 (= lt!74182 e!92136)))

(declare-fun c!26591 () Bool)

(assert (=> d!44441 (= c!26591 (bvsge #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!44441 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44441 (= (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74182)))

(declare-fun bm!15671 () Bool)

(assert (=> bm!15671 (= call!15674 (getCurrentListMapNoExtraKeys!140 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141378 () Bool)

(assert (=> b!141378 (= e!92138 call!15674)))

(declare-fun b!141379 () Bool)

(assert (=> b!141379 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> b!141379 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))))))

(assert (=> b!141379 (= e!92132 (= (apply!120 lt!74182 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141380 () Bool)

(assert (=> b!141380 (= e!92134 (isEmpty!424 lt!74182))))

(declare-fun b!141381 () Bool)

(assert (=> b!141381 (= e!92136 e!92138)))

(declare-fun c!26589 () Bool)

(assert (=> b!141381 (= c!26589 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141382 () Bool)

(assert (=> b!141382 (= e!92135 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141382 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141383 () Bool)

(assert (=> b!141383 (= e!92133 e!92134)))

(declare-fun c!26590 () Bool)

(assert (=> b!141383 (= c!26590 (bvslt #b00000000000000000000000000000000 (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun b!141384 () Bool)

(assert (=> b!141384 (= e!92136 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44441 c!26591) b!141384))

(assert (= (and d!44441 (not c!26591)) b!141381))

(assert (= (and b!141381 c!26589) b!141376))

(assert (= (and b!141381 (not c!26589)) b!141378))

(assert (= (or b!141376 b!141378) bm!15671))

(assert (= (and d!44441 res!67496) b!141373))

(assert (= (and b!141373 res!67497) b!141374))

(assert (= (and b!141374 res!67498) b!141382))

(assert (= (and b!141374 c!26588) b!141377))

(assert (= (and b!141374 (not c!26588)) b!141383))

(assert (= (and b!141377 res!67499) b!141379))

(assert (= (and b!141383 c!26590) b!141375))

(assert (= (and b!141383 (not c!26590)) b!141380))

(declare-fun b_lambda!6361 () Bool)

(assert (=> (not b_lambda!6361) (not b!141376)))

(assert (=> b!141376 t!6309))

(declare-fun b_and!8849 () Bool)

(assert (= b_and!8845 (and (=> t!6309 result!4187) b_and!8849)))

(assert (=> b!141376 t!6311))

(declare-fun b_and!8851 () Bool)

(assert (= b_and!8847 (and (=> t!6311 result!4189) b_and!8851)))

(declare-fun b_lambda!6363 () Bool)

(assert (=> (not b_lambda!6363) (not b!141379)))

(assert (=> b!141379 t!6309))

(declare-fun b_and!8853 () Bool)

(assert (= b_and!8849 (and (=> t!6309 result!4187) b_and!8853)))

(assert (=> b!141379 t!6311))

(declare-fun b_and!8855 () Bool)

(assert (= b_and!8851 (and (=> t!6311 result!4189) b_and!8855)))

(assert (=> b!141376 m!167977))

(declare-fun m!169707 () Bool)

(assert (=> b!141376 m!169707))

(declare-fun m!169709 () Bool)

(assert (=> b!141376 m!169709))

(assert (=> b!141376 m!166963))

(assert (=> b!141376 m!169707))

(declare-fun m!169711 () Bool)

(assert (=> b!141376 m!169711))

(assert (=> b!141376 m!168039))

(assert (=> b!141376 m!168039))

(assert (=> b!141376 m!166963))

(assert (=> b!141376 m!168041))

(declare-fun m!169713 () Bool)

(assert (=> b!141376 m!169713))

(assert (=> b!141382 m!167977))

(assert (=> b!141382 m!167977))

(assert (=> b!141382 m!167979))

(declare-fun m!169715 () Bool)

(assert (=> b!141375 m!169715))

(assert (=> b!141379 m!167977))

(assert (=> b!141379 m!166963))

(assert (=> b!141379 m!168039))

(assert (=> b!141379 m!168039))

(assert (=> b!141379 m!166963))

(assert (=> b!141379 m!168041))

(assert (=> b!141379 m!167977))

(declare-fun m!169717 () Bool)

(assert (=> b!141379 m!169717))

(declare-fun m!169719 () Bool)

(assert (=> b!141373 m!169719))

(declare-fun m!169721 () Bool)

(assert (=> d!44441 m!169721))

(assert (=> d!44441 m!166907))

(declare-fun m!169723 () Bool)

(assert (=> b!141380 m!169723))

(assert (=> b!141377 m!167977))

(assert (=> b!141377 m!167977))

(declare-fun m!169725 () Bool)

(assert (=> b!141377 m!169725))

(assert (=> b!141381 m!167977))

(assert (=> b!141381 m!167977))

(assert (=> b!141381 m!167979))

(assert (=> bm!15671 m!169715))

(assert (=> b!140559 d!44441))

(declare-fun d!44443 () Bool)

(assert (=> d!44443 (= (apply!120 (+!173 lt!73710 (tuple2!2623 lt!73706 (minValue!2789 newMap!16))) lt!73709) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73710 (tuple2!2623 lt!73706 (minValue!2789 newMap!16)))) lt!73709)))))

(declare-fun bs!5941 () Bool)

(assert (= bs!5941 d!44443))

(declare-fun m!169727 () Bool)

(assert (=> bs!5941 m!169727))

(assert (=> bs!5941 m!169727))

(declare-fun m!169729 () Bool)

(assert (=> bs!5941 m!169729))

(assert (=> b!140559 d!44443))

(declare-fun d!44445 () Bool)

(assert (=> d!44445 (= (apply!120 lt!73694 lt!73692) (get!1535 (getValueByKey!177 (toList!858 lt!73694) lt!73692)))))

(declare-fun bs!5942 () Bool)

(assert (= bs!5942 d!44445))

(declare-fun m!169731 () Bool)

(assert (=> bs!5942 m!169731))

(assert (=> bs!5942 m!169731))

(declare-fun m!169733 () Bool)

(assert (=> bs!5942 m!169733))

(assert (=> b!140559 d!44445))

(declare-fun d!44447 () Bool)

(assert (=> d!44447 (= (apply!120 lt!73707 lt!73702) (get!1535 (getValueByKey!177 (toList!858 lt!73707) lt!73702)))))

(declare-fun bs!5943 () Bool)

(assert (= bs!5943 d!44447))

(declare-fun m!169735 () Bool)

(assert (=> bs!5943 m!169735))

(assert (=> bs!5943 m!169735))

(declare-fun m!169737 () Bool)

(assert (=> bs!5943 m!169737))

(assert (=> b!140559 d!44447))

(declare-fun d!44449 () Bool)

(assert (=> d!44449 (isDefined!129 (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!74187 () Unit!4387)

(assert (=> d!44449 (= lt!74187 (choose!864 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!92139 () Bool)

(assert (=> d!44449 e!92139))

(declare-fun res!67500 () Bool)

(assert (=> d!44449 (=> (not res!67500) (not e!92139))))

(assert (=> d!44449 (= res!67500 (isStrictlySorted!312 (toList!858 lt!73460)))))

(assert (=> d!44449 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74187)))

(declare-fun b!141385 () Bool)

(assert (=> b!141385 (= e!92139 (containsKey!180 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44449 res!67500) b!141385))

(assert (=> d!44449 m!167339))

(assert (=> d!44449 m!167339))

(assert (=> d!44449 m!168799))

(declare-fun m!169739 () Bool)

(assert (=> d!44449 m!169739))

(declare-fun m!169741 () Bool)

(assert (=> d!44449 m!169741))

(assert (=> b!141385 m!168795))

(assert (=> b!140983 d!44449))

(declare-fun d!44451 () Bool)

(assert (=> d!44451 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun bs!5944 () Bool)

(assert (= bs!5944 d!44451))

(assert (=> bs!5944 m!167339))

(declare-fun m!169743 () Bool)

(assert (=> bs!5944 m!169743))

(assert (=> b!140983 d!44451))

(assert (=> b!140983 d!44083))

(declare-fun d!44453 () Bool)

(assert (=> d!44453 (= (apply!120 (+!173 lt!73533 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))) lt!73532) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73533 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))) lt!73532)))))

(declare-fun bs!5945 () Bool)

(assert (= bs!5945 d!44453))

(declare-fun m!169745 () Bool)

(assert (=> bs!5945 m!169745))

(assert (=> bs!5945 m!169745))

(declare-fun m!169747 () Bool)

(assert (=> bs!5945 m!169747))

(assert (=> b!140268 d!44453))

(declare-fun d!44455 () Bool)

(assert (=> d!44455 (= (apply!120 (+!173 lt!73517 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))) lt!73515) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73517 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))) lt!73515)))))

(declare-fun bs!5946 () Bool)

(assert (= bs!5946 d!44455))

(declare-fun m!169749 () Bool)

(assert (=> bs!5946 m!169749))

(assert (=> bs!5946 m!169749))

(declare-fun m!169751 () Bool)

(assert (=> bs!5946 m!169751))

(assert (=> b!140268 d!44455))

(declare-fun d!44457 () Bool)

(declare-fun e!92140 () Bool)

(assert (=> d!44457 e!92140))

(declare-fun res!67501 () Bool)

(assert (=> d!44457 (=> (not res!67501) (not e!92140))))

(declare-fun lt!74190 () ListLongMap!1685)

(assert (=> d!44457 (= res!67501 (contains!904 lt!74190 (_1!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))))))

(declare-fun lt!74189 () List!1719)

(assert (=> d!44457 (= lt!74190 (ListLongMap!1686 lt!74189))))

(declare-fun lt!74188 () Unit!4387)

(declare-fun lt!74191 () Unit!4387)

(assert (=> d!44457 (= lt!74188 lt!74191)))

(assert (=> d!44457 (= (getValueByKey!177 lt!74189 (_1!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))))))

(assert (=> d!44457 (= lt!74191 (lemmaContainsTupThenGetReturnValue!91 lt!74189 (_1!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))))))

(assert (=> d!44457 (= lt!74189 (insertStrictlySorted!94 (toList!858 lt!73530) (_1!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))))))

(assert (=> d!44457 (= (+!173 lt!73530 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))) lt!74190)))

(declare-fun b!141386 () Bool)

(declare-fun res!67502 () Bool)

(assert (=> b!141386 (=> (not res!67502) (not e!92140))))

(assert (=> b!141386 (= res!67502 (= (getValueByKey!177 (toList!858 lt!74190) (_1!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))))))))

(declare-fun b!141387 () Bool)

(assert (=> b!141387 (= e!92140 (contains!907 (toList!858 lt!74190) (tuple2!2623 lt!73519 (minValue!2789 newMap!16))))))

(assert (= (and d!44457 res!67501) b!141386))

(assert (= (and b!141386 res!67502) b!141387))

(declare-fun m!169753 () Bool)

(assert (=> d!44457 m!169753))

(declare-fun m!169755 () Bool)

(assert (=> d!44457 m!169755))

(declare-fun m!169757 () Bool)

(assert (=> d!44457 m!169757))

(declare-fun m!169759 () Bool)

(assert (=> d!44457 m!169759))

(declare-fun m!169761 () Bool)

(assert (=> b!141386 m!169761))

(declare-fun m!169763 () Bool)

(assert (=> b!141387 m!169763))

(assert (=> b!140268 d!44457))

(declare-fun d!44459 () Bool)

(declare-fun e!92141 () Bool)

(assert (=> d!44459 e!92141))

(declare-fun res!67503 () Bool)

(assert (=> d!44459 (=> (not res!67503) (not e!92141))))

(declare-fun lt!74194 () ListLongMap!1685)

(assert (=> d!44459 (= res!67503 (contains!904 lt!74194 (_1!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74193 () List!1719)

(assert (=> d!44459 (= lt!74194 (ListLongMap!1686 lt!74193))))

(declare-fun lt!74192 () Unit!4387)

(declare-fun lt!74195 () Unit!4387)

(assert (=> d!44459 (= lt!74192 lt!74195)))

(assert (=> d!44459 (= (getValueByKey!177 lt!74193 (_1!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44459 (= lt!74195 (lemmaContainsTupThenGetReturnValue!91 lt!74193 (_1!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44459 (= lt!74193 (insertStrictlySorted!94 (toList!858 lt!73517) (_1!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44459 (= (+!173 lt!73517 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))) lt!74194)))

(declare-fun b!141388 () Bool)

(declare-fun res!67504 () Bool)

(assert (=> b!141388 (=> (not res!67504) (not e!92141))))

(assert (=> b!141388 (= res!67504 (= (getValueByKey!177 (toList!858 lt!74194) (_1!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141389 () Bool)

(assert (=> b!141389 (= e!92141 (contains!907 (toList!858 lt!74194) (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44459 res!67503) b!141388))

(assert (= (and b!141388 res!67504) b!141389))

(declare-fun m!169765 () Bool)

(assert (=> d!44459 m!169765))

(declare-fun m!169767 () Bool)

(assert (=> d!44459 m!169767))

(declare-fun m!169769 () Bool)

(assert (=> d!44459 m!169769))

(declare-fun m!169771 () Bool)

(assert (=> d!44459 m!169771))

(declare-fun m!169773 () Bool)

(assert (=> b!141388 m!169773))

(declare-fun m!169775 () Bool)

(assert (=> b!141389 m!169775))

(assert (=> b!140268 d!44459))

(declare-fun d!44461 () Bool)

(assert (=> d!44461 (= (apply!120 lt!73517 lt!73515) (get!1535 (getValueByKey!177 (toList!858 lt!73517) lt!73515)))))

(declare-fun bs!5947 () Bool)

(assert (= bs!5947 d!44461))

(declare-fun m!169777 () Bool)

(assert (=> bs!5947 m!169777))

(assert (=> bs!5947 m!169777))

(declare-fun m!169779 () Bool)

(assert (=> bs!5947 m!169779))

(assert (=> b!140268 d!44461))

(declare-fun d!44463 () Bool)

(assert (=> d!44463 (= (apply!120 lt!73530 lt!73525) (get!1535 (getValueByKey!177 (toList!858 lt!73530) lt!73525)))))

(declare-fun bs!5948 () Bool)

(assert (= bs!5948 d!44463))

(declare-fun m!169781 () Bool)

(assert (=> bs!5948 m!169781))

(assert (=> bs!5948 m!169781))

(declare-fun m!169783 () Bool)

(assert (=> bs!5948 m!169783))

(assert (=> b!140268 d!44463))

(declare-fun d!44465 () Bool)

(assert (=> d!44465 (= (apply!120 (+!173 lt!73533 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))) lt!73532) (apply!120 lt!73533 lt!73532))))

(declare-fun lt!74196 () Unit!4387)

(assert (=> d!44465 (= lt!74196 (choose!867 lt!73533 lt!73529 (minValue!2789 newMap!16) lt!73532))))

(declare-fun e!92142 () Bool)

(assert (=> d!44465 e!92142))

(declare-fun res!67505 () Bool)

(assert (=> d!44465 (=> (not res!67505) (not e!92142))))

(assert (=> d!44465 (= res!67505 (contains!904 lt!73533 lt!73532))))

(assert (=> d!44465 (= (addApplyDifferent!96 lt!73533 lt!73529 (minValue!2789 newMap!16) lt!73532) lt!74196)))

(declare-fun b!141390 () Bool)

(assert (=> b!141390 (= e!92142 (not (= lt!73532 lt!73529)))))

(assert (= (and d!44465 res!67505) b!141390))

(assert (=> d!44465 m!167491))

(declare-fun m!169785 () Bool)

(assert (=> d!44465 m!169785))

(assert (=> d!44465 m!167493))

(assert (=> d!44465 m!167495))

(declare-fun m!169787 () Bool)

(assert (=> d!44465 m!169787))

(assert (=> d!44465 m!167493))

(assert (=> b!140268 d!44465))

(declare-fun d!44467 () Bool)

(assert (=> d!44467 (= (apply!120 (+!173 lt!73517 (tuple2!2623 lt!73527 (zeroValue!2789 newMap!16))) lt!73515) (apply!120 lt!73517 lt!73515))))

(declare-fun lt!74197 () Unit!4387)

(assert (=> d!44467 (= lt!74197 (choose!867 lt!73517 lt!73527 (zeroValue!2789 newMap!16) lt!73515))))

(declare-fun e!92143 () Bool)

(assert (=> d!44467 e!92143))

(declare-fun res!67506 () Bool)

(assert (=> d!44467 (=> (not res!67506) (not e!92143))))

(assert (=> d!44467 (= res!67506 (contains!904 lt!73517 lt!73515))))

(assert (=> d!44467 (= (addApplyDifferent!96 lt!73517 lt!73527 (zeroValue!2789 newMap!16) lt!73515) lt!74197)))

(declare-fun b!141391 () Bool)

(assert (=> b!141391 (= e!92143 (not (= lt!73515 lt!73527)))))

(assert (= (and d!44467 res!67506) b!141391))

(assert (=> d!44467 m!167501))

(declare-fun m!169789 () Bool)

(assert (=> d!44467 m!169789))

(assert (=> d!44467 m!167481))

(assert (=> d!44467 m!167503))

(declare-fun m!169791 () Bool)

(assert (=> d!44467 m!169791))

(assert (=> d!44467 m!167481))

(assert (=> b!140268 d!44467))

(declare-fun d!44469 () Bool)

(declare-fun e!92144 () Bool)

(assert (=> d!44469 e!92144))

(declare-fun res!67507 () Bool)

(assert (=> d!44469 (=> (not res!67507) (not e!92144))))

(declare-fun lt!74200 () ListLongMap!1685)

(assert (=> d!44469 (= res!67507 (contains!904 lt!74200 (_1!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74199 () List!1719)

(assert (=> d!44469 (= lt!74200 (ListLongMap!1686 lt!74199))))

(declare-fun lt!74198 () Unit!4387)

(declare-fun lt!74201 () Unit!4387)

(assert (=> d!44469 (= lt!74198 lt!74201)))

(assert (=> d!44469 (= (getValueByKey!177 lt!74199 (_1!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44469 (= lt!74201 (lemmaContainsTupThenGetReturnValue!91 lt!74199 (_1!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44469 (= lt!74199 (insertStrictlySorted!94 (toList!858 lt!73518) (_1!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44469 (= (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))) lt!74200)))

(declare-fun b!141392 () Bool)

(declare-fun res!67508 () Bool)

(assert (=> b!141392 (=> (not res!67508) (not e!92144))))

(assert (=> b!141392 (= res!67508 (= (getValueByKey!177 (toList!858 lt!74200) (_1!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141393 () Bool)

(assert (=> b!141393 (= e!92144 (contains!907 (toList!858 lt!74200) (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44469 res!67507) b!141392))

(assert (= (and b!141392 res!67508) b!141393))

(declare-fun m!169793 () Bool)

(assert (=> d!44469 m!169793))

(declare-fun m!169795 () Bool)

(assert (=> d!44469 m!169795))

(declare-fun m!169797 () Bool)

(assert (=> d!44469 m!169797))

(declare-fun m!169799 () Bool)

(assert (=> d!44469 m!169799))

(declare-fun m!169801 () Bool)

(assert (=> b!141392 m!169801))

(declare-fun m!169803 () Bool)

(assert (=> b!141393 m!169803))

(assert (=> b!140268 d!44469))

(declare-fun d!44471 () Bool)

(assert (=> d!44471 (contains!904 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))) lt!73524)))

(declare-fun lt!74202 () Unit!4387)

(assert (=> d!44471 (= lt!74202 (choose!866 lt!73518 lt!73520 (zeroValue!2789 newMap!16) lt!73524))))

(assert (=> d!44471 (contains!904 lt!73518 lt!73524)))

(assert (=> d!44471 (= (addStillContains!96 lt!73518 lt!73520 (zeroValue!2789 newMap!16) lt!73524) lt!74202)))

(declare-fun bs!5949 () Bool)

(assert (= bs!5949 d!44471))

(assert (=> bs!5949 m!167487))

(assert (=> bs!5949 m!167487))

(assert (=> bs!5949 m!167489))

(declare-fun m!169805 () Bool)

(assert (=> bs!5949 m!169805))

(declare-fun m!169807 () Bool)

(assert (=> bs!5949 m!169807))

(assert (=> b!140268 d!44471))

(declare-fun d!44473 () Bool)

(declare-fun e!92145 () Bool)

(assert (=> d!44473 e!92145))

(declare-fun res!67509 () Bool)

(assert (=> d!44473 (=> (not res!67509) (not e!92145))))

(declare-fun lt!74205 () ListLongMap!1685)

(assert (=> d!44473 (= res!67509 (contains!904 lt!74205 (_1!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))))))

(declare-fun lt!74204 () List!1719)

(assert (=> d!44473 (= lt!74205 (ListLongMap!1686 lt!74204))))

(declare-fun lt!74203 () Unit!4387)

(declare-fun lt!74206 () Unit!4387)

(assert (=> d!44473 (= lt!74203 lt!74206)))

(assert (=> d!44473 (= (getValueByKey!177 lt!74204 (_1!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))))))

(assert (=> d!44473 (= lt!74206 (lemmaContainsTupThenGetReturnValue!91 lt!74204 (_1!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))))))

(assert (=> d!44473 (= lt!74204 (insertStrictlySorted!94 (toList!858 lt!73533) (_1!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))))))

(assert (=> d!44473 (= (+!173 lt!73533 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))) lt!74205)))

(declare-fun b!141394 () Bool)

(declare-fun res!67510 () Bool)

(assert (=> b!141394 (=> (not res!67510) (not e!92145))))

(assert (=> b!141394 (= res!67510 (= (getValueByKey!177 (toList!858 lt!74205) (_1!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73529 (minValue!2789 newMap!16))))))))

(declare-fun b!141395 () Bool)

(assert (=> b!141395 (= e!92145 (contains!907 (toList!858 lt!74205) (tuple2!2623 lt!73529 (minValue!2789 newMap!16))))))

(assert (= (and d!44473 res!67509) b!141394))

(assert (= (and b!141394 res!67510) b!141395))

(declare-fun m!169809 () Bool)

(assert (=> d!44473 m!169809))

(declare-fun m!169811 () Bool)

(assert (=> d!44473 m!169811))

(declare-fun m!169813 () Bool)

(assert (=> d!44473 m!169813))

(declare-fun m!169815 () Bool)

(assert (=> d!44473 m!169815))

(declare-fun m!169817 () Bool)

(assert (=> b!141394 m!169817))

(declare-fun m!169819 () Bool)

(assert (=> b!141395 m!169819))

(assert (=> b!140268 d!44473))

(declare-fun d!44475 () Bool)

(declare-fun e!92146 () Bool)

(assert (=> d!44475 e!92146))

(declare-fun res!67511 () Bool)

(assert (=> d!44475 (=> res!67511 e!92146)))

(declare-fun lt!74210 () Bool)

(assert (=> d!44475 (= res!67511 (not lt!74210))))

(declare-fun lt!74207 () Bool)

(assert (=> d!44475 (= lt!74210 lt!74207)))

(declare-fun lt!74209 () Unit!4387)

(declare-fun e!92147 () Unit!4387)

(assert (=> d!44475 (= lt!74209 e!92147)))

(declare-fun c!26592 () Bool)

(assert (=> d!44475 (= c!26592 lt!74207)))

(assert (=> d!44475 (= lt!74207 (containsKey!180 (toList!858 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))) lt!73524))))

(assert (=> d!44475 (= (contains!904 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16))) lt!73524) lt!74210)))

(declare-fun b!141396 () Bool)

(declare-fun lt!74208 () Unit!4387)

(assert (=> b!141396 (= e!92147 lt!74208)))

(assert (=> b!141396 (= lt!74208 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))) lt!73524))))

(assert (=> b!141396 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))) lt!73524))))

(declare-fun b!141397 () Bool)

(declare-fun Unit!4460 () Unit!4387)

(assert (=> b!141397 (= e!92147 Unit!4460)))

(declare-fun b!141398 () Bool)

(assert (=> b!141398 (= e!92146 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73518 (tuple2!2623 lt!73520 (zeroValue!2789 newMap!16)))) lt!73524)))))

(assert (= (and d!44475 c!26592) b!141396))

(assert (= (and d!44475 (not c!26592)) b!141397))

(assert (= (and d!44475 (not res!67511)) b!141398))

(declare-fun m!169821 () Bool)

(assert (=> d!44475 m!169821))

(declare-fun m!169823 () Bool)

(assert (=> b!141396 m!169823))

(declare-fun m!169825 () Bool)

(assert (=> b!141396 m!169825))

(assert (=> b!141396 m!169825))

(declare-fun m!169827 () Bool)

(assert (=> b!141396 m!169827))

(assert (=> b!141398 m!169825))

(assert (=> b!141398 m!169825))

(assert (=> b!141398 m!169827))

(assert (=> b!140268 d!44475))

(declare-fun d!44477 () Bool)

(assert (=> d!44477 (= (apply!120 (+!173 lt!73530 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))) lt!73525) (apply!120 lt!73530 lt!73525))))

(declare-fun lt!74211 () Unit!4387)

(assert (=> d!44477 (= lt!74211 (choose!867 lt!73530 lt!73519 (minValue!2789 newMap!16) lt!73525))))

(declare-fun e!92148 () Bool)

(assert (=> d!44477 e!92148))

(declare-fun res!67512 () Bool)

(assert (=> d!44477 (=> (not res!67512) (not e!92148))))

(assert (=> d!44477 (= res!67512 (contains!904 lt!73530 lt!73525))))

(assert (=> d!44477 (= (addApplyDifferent!96 lt!73530 lt!73519 (minValue!2789 newMap!16) lt!73525) lt!74211)))

(declare-fun b!141399 () Bool)

(assert (=> b!141399 (= e!92148 (not (= lt!73525 lt!73519)))))

(assert (= (and d!44477 res!67512) b!141399))

(assert (=> d!44477 m!167497))

(declare-fun m!169829 () Bool)

(assert (=> d!44477 m!169829))

(assert (=> d!44477 m!167475))

(assert (=> d!44477 m!167477))

(declare-fun m!169831 () Bool)

(assert (=> d!44477 m!169831))

(assert (=> d!44477 m!167475))

(assert (=> b!140268 d!44477))

(declare-fun d!44479 () Bool)

(assert (=> d!44479 (= (apply!120 lt!73533 lt!73532) (get!1535 (getValueByKey!177 (toList!858 lt!73533) lt!73532)))))

(declare-fun bs!5950 () Bool)

(assert (= bs!5950 d!44479))

(declare-fun m!169833 () Bool)

(assert (=> bs!5950 m!169833))

(assert (=> bs!5950 m!169833))

(declare-fun m!169835 () Bool)

(assert (=> bs!5950 m!169835))

(assert (=> b!140268 d!44479))

(declare-fun d!44481 () Bool)

(assert (=> d!44481 (= (apply!120 (+!173 lt!73530 (tuple2!2623 lt!73519 (minValue!2789 newMap!16))) lt!73525) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73530 (tuple2!2623 lt!73519 (minValue!2789 newMap!16)))) lt!73525)))))

(declare-fun bs!5951 () Bool)

(assert (= bs!5951 d!44481))

(declare-fun m!169837 () Bool)

(assert (=> bs!5951 m!169837))

(assert (=> bs!5951 m!169837))

(declare-fun m!169839 () Bool)

(assert (=> bs!5951 m!169839))

(assert (=> b!140268 d!44481))

(declare-fun b!141400 () Bool)

(declare-fun res!67514 () Bool)

(declare-fun e!92154 () Bool)

(assert (=> b!141400 (=> (not res!67514) (not e!92154))))

(declare-fun lt!74214 () ListLongMap!1685)

(assert (=> b!141400 (= res!67514 (not (contains!904 lt!74214 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141401 () Bool)

(declare-fun e!92150 () Bool)

(assert (=> b!141401 (= e!92154 e!92150)))

(declare-fun c!26593 () Bool)

(declare-fun e!92152 () Bool)

(assert (=> b!141401 (= c!26593 e!92152)))

(declare-fun res!67515 () Bool)

(assert (=> b!141401 (=> (not res!67515) (not e!92152))))

(assert (=> b!141401 (= res!67515 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!92151 () Bool)

(declare-fun b!141402 () Bool)

(assert (=> b!141402 (= e!92151 (= lt!74214 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141403 () Bool)

(declare-fun lt!74216 () Unit!4387)

(declare-fun lt!74212 () Unit!4387)

(assert (=> b!141403 (= lt!74216 lt!74212)))

(declare-fun lt!74218 () (_ BitVec 64))

(declare-fun lt!74213 () (_ BitVec 64))

(declare-fun lt!74215 () ListLongMap!1685)

(declare-fun lt!74217 () V!3553)

(assert (=> b!141403 (not (contains!904 (+!173 lt!74215 (tuple2!2623 lt!74213 lt!74217)) lt!74218))))

(assert (=> b!141403 (= lt!74212 (addStillNotContains!66 lt!74215 lt!74213 lt!74217 lt!74218))))

(assert (=> b!141403 (= lt!74218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141403 (= lt!74217 (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141403 (= lt!74213 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15675 () ListLongMap!1685)

(assert (=> b!141403 (= lt!74215 call!15675)))

(declare-fun e!92155 () ListLongMap!1685)

(assert (=> b!141403 (= e!92155 (+!173 call!15675 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141404 () Bool)

(declare-fun e!92149 () Bool)

(assert (=> b!141404 (= e!92150 e!92149)))

(assert (=> b!141404 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67516 () Bool)

(assert (=> b!141404 (= res!67516 (contains!904 lt!74214 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141404 (=> (not res!67516) (not e!92149))))

(declare-fun d!44483 () Bool)

(assert (=> d!44483 e!92154))

(declare-fun res!67513 () Bool)

(assert (=> d!44483 (=> (not res!67513) (not e!92154))))

(assert (=> d!44483 (= res!67513 (not (contains!904 lt!74214 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92153 () ListLongMap!1685)

(assert (=> d!44483 (= lt!74214 e!92153)))

(declare-fun c!26596 () Bool)

(assert (=> d!44483 (= c!26596 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44483 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44483 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74214)))

(declare-fun bm!15672 () Bool)

(assert (=> bm!15672 (= call!15675 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141405 () Bool)

(assert (=> b!141405 (= e!92155 call!15675)))

(declare-fun b!141406 () Bool)

(assert (=> b!141406 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141406 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))))))

(assert (=> b!141406 (= e!92149 (= (apply!120 lt!74214 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141407 () Bool)

(assert (=> b!141407 (= e!92151 (isEmpty!424 lt!74214))))

(declare-fun b!141408 () Bool)

(assert (=> b!141408 (= e!92153 e!92155)))

(declare-fun c!26594 () Bool)

(assert (=> b!141408 (= c!26594 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141409 () Bool)

(assert (=> b!141409 (= e!92152 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141409 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141410 () Bool)

(assert (=> b!141410 (= e!92150 e!92151)))

(declare-fun c!26595 () Bool)

(assert (=> b!141410 (= c!26595 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141411 () Bool)

(assert (=> b!141411 (= e!92153 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44483 c!26596) b!141411))

(assert (= (and d!44483 (not c!26596)) b!141408))

(assert (= (and b!141408 c!26594) b!141403))

(assert (= (and b!141408 (not c!26594)) b!141405))

(assert (= (or b!141403 b!141405) bm!15672))

(assert (= (and d!44483 res!67513) b!141400))

(assert (= (and b!141400 res!67514) b!141401))

(assert (= (and b!141401 res!67515) b!141409))

(assert (= (and b!141401 c!26593) b!141404))

(assert (= (and b!141401 (not c!26593)) b!141410))

(assert (= (and b!141404 res!67516) b!141406))

(assert (= (and b!141410 c!26595) b!141402))

(assert (= (and b!141410 (not c!26595)) b!141407))

(declare-fun b_lambda!6365 () Bool)

(assert (=> (not b_lambda!6365) (not b!141403)))

(assert (=> b!141403 t!6309))

(declare-fun b_and!8857 () Bool)

(assert (= b_and!8853 (and (=> t!6309 result!4187) b_and!8857)))

(assert (=> b!141403 t!6311))

(declare-fun b_and!8859 () Bool)

(assert (= b_and!8855 (and (=> t!6311 result!4189) b_and!8859)))

(declare-fun b_lambda!6367 () Bool)

(assert (=> (not b_lambda!6367) (not b!141406)))

(assert (=> b!141406 t!6309))

(declare-fun b_and!8861 () Bool)

(assert (= b_and!8857 (and (=> t!6309 result!4187) b_and!8861)))

(assert (=> b!141406 t!6311))

(declare-fun b_and!8863 () Bool)

(assert (= b_and!8859 (and (=> t!6311 result!4189) b_and!8863)))

(assert (=> b!141403 m!166927))

(declare-fun m!169841 () Bool)

(assert (=> b!141403 m!169841))

(declare-fun m!169843 () Bool)

(assert (=> b!141403 m!169843))

(assert (=> b!141403 m!166963))

(assert (=> b!141403 m!169841))

(declare-fun m!169845 () Bool)

(assert (=> b!141403 m!169845))

(assert (=> b!141403 m!167515))

(assert (=> b!141403 m!167515))

(assert (=> b!141403 m!166963))

(assert (=> b!141403 m!167517))

(declare-fun m!169847 () Bool)

(assert (=> b!141403 m!169847))

(assert (=> b!141409 m!166927))

(assert (=> b!141409 m!166927))

(assert (=> b!141409 m!166957))

(declare-fun m!169849 () Bool)

(assert (=> b!141402 m!169849))

(assert (=> b!141406 m!166927))

(assert (=> b!141406 m!166963))

(assert (=> b!141406 m!167515))

(assert (=> b!141406 m!167515))

(assert (=> b!141406 m!166963))

(assert (=> b!141406 m!167517))

(assert (=> b!141406 m!166927))

(declare-fun m!169851 () Bool)

(assert (=> b!141406 m!169851))

(declare-fun m!169853 () Bool)

(assert (=> b!141400 m!169853))

(declare-fun m!169855 () Bool)

(assert (=> d!44483 m!169855))

(assert (=> d!44483 m!166907))

(declare-fun m!169857 () Bool)

(assert (=> b!141407 m!169857))

(assert (=> b!141404 m!166927))

(assert (=> b!141404 m!166927))

(declare-fun m!169859 () Bool)

(assert (=> b!141404 m!169859))

(assert (=> b!141408 m!166927))

(assert (=> b!141408 m!166927))

(assert (=> b!141408 m!166957))

(assert (=> bm!15672 m!169849))

(assert (=> b!140268 d!44483))

(declare-fun d!44485 () Bool)

(declare-fun res!67517 () Bool)

(declare-fun e!92156 () Bool)

(assert (=> d!44485 (=> res!67517 e!92156)))

(assert (=> d!44485 (= res!67517 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))))

(assert (=> d!44485 (= (containsKey!180 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) e!92156)))

(declare-fun b!141412 () Bool)

(declare-fun e!92157 () Bool)

(assert (=> b!141412 (= e!92156 e!92157)))

(declare-fun res!67518 () Bool)

(assert (=> b!141412 (=> (not res!67518) (not e!92157))))

(assert (=> b!141412 (= res!67518 (and (or (not ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (bvsle (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))) ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))))

(declare-fun b!141413 () Bool)

(assert (=> b!141413 (= e!92157 (containsKey!180 (t!6295 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (= (and d!44485 (not res!67517)) b!141412))

(assert (= (and b!141412 res!67518) b!141413))

(assert (=> b!141413 m!167185))

(declare-fun m!169861 () Bool)

(assert (=> b!141413 m!169861))

(assert (=> d!43869 d!44485))

(assert (=> b!140886 d!43693))

(declare-fun d!44487 () Bool)

(assert (=> d!44487 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140850 d!44487))

(declare-fun d!44489 () Bool)

(declare-fun res!67519 () Bool)

(declare-fun e!92158 () Bool)

(assert (=> d!44489 (=> res!67519 e!92158)))

(assert (=> d!44489 (= res!67519 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73194)))))

(assert (=> d!44489 (= (containsKey!180 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73194) e!92158)))

(declare-fun b!141414 () Bool)

(declare-fun e!92159 () Bool)

(assert (=> b!141414 (= e!92158 e!92159)))

(declare-fun res!67520 () Bool)

(assert (=> b!141414 (=> (not res!67520) (not e!92159))))

(assert (=> b!141414 (= res!67520 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73194)) ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73194)))))

(declare-fun b!141415 () Bool)

(assert (=> b!141415 (= e!92159 (containsKey!180 (t!6295 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194))))

(assert (= (and d!44489 (not res!67519)) b!141414))

(assert (= (and b!141414 res!67520) b!141415))

(declare-fun m!169863 () Bool)

(assert (=> b!141415 m!169863))

(assert (=> b!140904 d!44489))

(declare-fun d!44491 () Bool)

(assert (=> d!44491 (= (get!1535 (getValueByKey!177 (toList!858 lt!73312) lt!73310)) (v!3285 (getValueByKey!177 (toList!858 lt!73312) lt!73310)))))

(assert (=> d!44021 d!44491))

(declare-fun b!141417 () Bool)

(declare-fun e!92160 () Option!183)

(declare-fun e!92161 () Option!183)

(assert (=> b!141417 (= e!92160 e!92161)))

(declare-fun c!26598 () Bool)

(assert (=> b!141417 (= c!26598 (and ((_ is Cons!1715) (toList!858 lt!73312)) (not (= (_1!1322 (h!2322 (toList!858 lt!73312))) lt!73310))))))

(declare-fun b!141418 () Bool)

(assert (=> b!141418 (= e!92161 (getValueByKey!177 (t!6295 (toList!858 lt!73312)) lt!73310))))

(declare-fun b!141416 () Bool)

(assert (=> b!141416 (= e!92160 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73312)))))))

(declare-fun b!141419 () Bool)

(assert (=> b!141419 (= e!92161 None!181)))

(declare-fun d!44493 () Bool)

(declare-fun c!26597 () Bool)

(assert (=> d!44493 (= c!26597 (and ((_ is Cons!1715) (toList!858 lt!73312)) (= (_1!1322 (h!2322 (toList!858 lt!73312))) lt!73310)))))

(assert (=> d!44493 (= (getValueByKey!177 (toList!858 lt!73312) lt!73310) e!92160)))

(assert (= (and d!44493 c!26597) b!141416))

(assert (= (and d!44493 (not c!26597)) b!141417))

(assert (= (and b!141417 c!26598) b!141418))

(assert (= (and b!141417 (not c!26598)) b!141419))

(declare-fun m!169865 () Bool)

(assert (=> b!141418 m!169865))

(assert (=> d!44021 d!44493))

(declare-fun d!44495 () Bool)

(declare-fun e!92162 () Bool)

(assert (=> d!44495 e!92162))

(declare-fun res!67521 () Bool)

(assert (=> d!44495 (=> res!67521 e!92162)))

(declare-fun lt!74222 () Bool)

(assert (=> d!44495 (= res!67521 (not lt!74222))))

(declare-fun lt!74219 () Bool)

(assert (=> d!44495 (= lt!74222 lt!74219)))

(declare-fun lt!74221 () Unit!4387)

(declare-fun e!92163 () Unit!4387)

(assert (=> d!44495 (= lt!74221 e!92163)))

(declare-fun c!26599 () Bool)

(assert (=> d!44495 (= c!26599 lt!74219)))

(assert (=> d!44495 (= lt!74219 (containsKey!180 (toList!858 lt!73624) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!44495 (= (contains!904 lt!73624 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!74222)))

(declare-fun b!141420 () Bool)

(declare-fun lt!74220 () Unit!4387)

(assert (=> b!141420 (= e!92163 lt!74220)))

(assert (=> b!141420 (= lt!74220 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73624) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!141420 (isDefined!129 (getValueByKey!177 (toList!858 lt!73624) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!141421 () Bool)

(declare-fun Unit!4461 () Unit!4387)

(assert (=> b!141421 (= e!92163 Unit!4461)))

(declare-fun b!141422 () Bool)

(assert (=> b!141422 (= e!92162 (isDefined!129 (getValueByKey!177 (toList!858 lt!73624) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!44495 c!26599) b!141420))

(assert (= (and d!44495 (not c!26599)) b!141421))

(assert (= (and d!44495 (not res!67521)) b!141422))

(assert (=> d!44495 m!167405))

(declare-fun m!169867 () Bool)

(assert (=> d!44495 m!169867))

(assert (=> b!141420 m!167405))

(declare-fun m!169869 () Bool)

(assert (=> b!141420 m!169869))

(assert (=> b!141420 m!167405))

(declare-fun m!169871 () Bool)

(assert (=> b!141420 m!169871))

(assert (=> b!141420 m!169871))

(declare-fun m!169873 () Bool)

(assert (=> b!141420 m!169873))

(assert (=> b!141422 m!167405))

(assert (=> b!141422 m!169871))

(assert (=> b!141422 m!169871))

(assert (=> b!141422 m!169873))

(assert (=> b!140407 d!44495))

(declare-fun d!44497 () Bool)

(assert (=> d!44497 (= (get!1535 (getValueByKey!177 (toList!858 lt!73256) lt!73255)) (v!3285 (getValueByKey!177 (toList!858 lt!73256) lt!73255)))))

(assert (=> d!44181 d!44497))

(declare-fun b!141424 () Bool)

(declare-fun e!92164 () Option!183)

(declare-fun e!92165 () Option!183)

(assert (=> b!141424 (= e!92164 e!92165)))

(declare-fun c!26601 () Bool)

(assert (=> b!141424 (= c!26601 (and ((_ is Cons!1715) (toList!858 lt!73256)) (not (= (_1!1322 (h!2322 (toList!858 lt!73256))) lt!73255))))))

(declare-fun b!141425 () Bool)

(assert (=> b!141425 (= e!92165 (getValueByKey!177 (t!6295 (toList!858 lt!73256)) lt!73255))))

(declare-fun b!141423 () Bool)

(assert (=> b!141423 (= e!92164 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73256)))))))

(declare-fun b!141426 () Bool)

(assert (=> b!141426 (= e!92165 None!181)))

(declare-fun d!44499 () Bool)

(declare-fun c!26600 () Bool)

(assert (=> d!44499 (= c!26600 (and ((_ is Cons!1715) (toList!858 lt!73256)) (= (_1!1322 (h!2322 (toList!858 lt!73256))) lt!73255)))))

(assert (=> d!44499 (= (getValueByKey!177 (toList!858 lt!73256) lt!73255) e!92164)))

(assert (= (and d!44499 c!26600) b!141423))

(assert (= (and d!44499 (not c!26600)) b!141424))

(assert (= (and b!141424 c!26601) b!141425))

(assert (= (and b!141424 (not c!26601)) b!141426))

(declare-fun m!169875 () Bool)

(assert (=> b!141425 m!169875))

(assert (=> d!44181 d!44499))

(declare-fun d!44501 () Bool)

(declare-fun e!92166 () Bool)

(assert (=> d!44501 e!92166))

(declare-fun res!67522 () Bool)

(assert (=> d!44501 (=> res!67522 e!92166)))

(declare-fun lt!74226 () Bool)

(assert (=> d!44501 (= res!67522 (not lt!74226))))

(declare-fun lt!74223 () Bool)

(assert (=> d!44501 (= lt!74226 lt!74223)))

(declare-fun lt!74225 () Unit!4387)

(declare-fun e!92167 () Unit!4387)

(assert (=> d!44501 (= lt!74225 e!92167)))

(declare-fun c!26602 () Bool)

(assert (=> d!44501 (= c!26602 lt!74223)))

(assert (=> d!44501 (= lt!74223 (containsKey!180 (toList!858 lt!73852) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44501 (= (contains!904 lt!73852 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74226)))

(declare-fun b!141427 () Bool)

(declare-fun lt!74224 () Unit!4387)

(assert (=> b!141427 (= e!92167 lt!74224)))

(assert (=> b!141427 (= lt!74224 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73852) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> b!141427 (isDefined!129 (getValueByKey!177 (toList!858 lt!73852) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141428 () Bool)

(declare-fun Unit!4462 () Unit!4387)

(assert (=> b!141428 (= e!92167 Unit!4462)))

(declare-fun b!141429 () Bool)

(assert (=> b!141429 (= e!92166 (isDefined!129 (getValueByKey!177 (toList!858 lt!73852) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44501 c!26602) b!141427))

(assert (= (and d!44501 (not c!26602)) b!141428))

(assert (= (and d!44501 (not res!67522)) b!141429))

(declare-fun m!169877 () Bool)

(assert (=> d!44501 m!169877))

(declare-fun m!169879 () Bool)

(assert (=> b!141427 m!169879))

(assert (=> b!141427 m!168469))

(assert (=> b!141427 m!168469))

(declare-fun m!169881 () Bool)

(assert (=> b!141427 m!169881))

(assert (=> b!141429 m!168469))

(assert (=> b!141429 m!168469))

(assert (=> b!141429 m!169881))

(assert (=> d!43993 d!44501))

(declare-fun b!141431 () Bool)

(declare-fun e!92168 () Option!183)

(declare-fun e!92169 () Option!183)

(assert (=> b!141431 (= e!92168 e!92169)))

(declare-fun c!26604 () Bool)

(assert (=> b!141431 (= c!26604 (and ((_ is Cons!1715) lt!73851) (not (= (_1!1322 (h!2322 lt!73851)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141432 () Bool)

(assert (=> b!141432 (= e!92169 (getValueByKey!177 (t!6295 lt!73851) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141430 () Bool)

(assert (=> b!141430 (= e!92168 (Some!182 (_2!1322 (h!2322 lt!73851))))))

(declare-fun b!141433 () Bool)

(assert (=> b!141433 (= e!92169 None!181)))

(declare-fun d!44503 () Bool)

(declare-fun c!26603 () Bool)

(assert (=> d!44503 (= c!26603 (and ((_ is Cons!1715) lt!73851) (= (_1!1322 (h!2322 lt!73851)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44503 (= (getValueByKey!177 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!92168)))

(assert (= (and d!44503 c!26603) b!141430))

(assert (= (and d!44503 (not c!26603)) b!141431))

(assert (= (and b!141431 c!26604) b!141432))

(assert (= (and b!141431 (not c!26604)) b!141433))

(declare-fun m!169883 () Bool)

(assert (=> b!141432 m!169883))

(assert (=> d!43993 d!44503))

(declare-fun d!44505 () Bool)

(assert (=> d!44505 (= (getValueByKey!177 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74227 () Unit!4387)

(assert (=> d!44505 (= lt!74227 (choose!873 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92170 () Bool)

(assert (=> d!44505 e!92170))

(declare-fun res!67523 () Bool)

(assert (=> d!44505 (=> (not res!67523) (not e!92170))))

(assert (=> d!44505 (= res!67523 (isStrictlySorted!312 lt!73851))))

(assert (=> d!44505 (= (lemmaContainsTupThenGetReturnValue!91 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74227)))

(declare-fun b!141434 () Bool)

(declare-fun res!67524 () Bool)

(assert (=> b!141434 (=> (not res!67524) (not e!92170))))

(assert (=> b!141434 (= res!67524 (containsKey!180 lt!73851 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141435 () Bool)

(assert (=> b!141435 (= e!92170 (contains!907 lt!73851 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44505 res!67523) b!141434))

(assert (= (and b!141434 res!67524) b!141435))

(assert (=> d!44505 m!168463))

(declare-fun m!169885 () Bool)

(assert (=> d!44505 m!169885))

(declare-fun m!169887 () Bool)

(assert (=> d!44505 m!169887))

(declare-fun m!169889 () Bool)

(assert (=> b!141434 m!169889))

(declare-fun m!169891 () Bool)

(assert (=> b!141435 m!169891))

(assert (=> d!43993 d!44505))

(declare-fun bm!15673 () Bool)

(declare-fun call!15678 () List!1719)

(declare-fun call!15677 () List!1719)

(assert (=> bm!15673 (= call!15678 call!15677)))

(declare-fun b!141437 () Bool)

(declare-fun e!92172 () List!1719)

(declare-fun e!92174 () List!1719)

(assert (=> b!141437 (= e!92172 e!92174)))

(declare-fun c!26608 () Bool)

(assert (=> b!141437 (= c!26608 (and ((_ is Cons!1715) (toList!858 call!15525)) (= (_1!1322 (h!2322 (toList!858 call!15525))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141438 () Bool)

(declare-fun res!67526 () Bool)

(declare-fun e!92171 () Bool)

(assert (=> b!141438 (=> (not res!67526) (not e!92171))))

(declare-fun lt!74228 () List!1719)

(assert (=> b!141438 (= res!67526 (containsKey!180 lt!74228 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141439 () Bool)

(declare-fun c!26606 () Bool)

(assert (=> b!141439 (= c!26606 (and ((_ is Cons!1715) (toList!858 call!15525)) (bvsgt (_1!1322 (h!2322 (toList!858 call!15525))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92173 () List!1719)

(assert (=> b!141439 (= e!92174 e!92173)))

(declare-fun bm!15674 () Bool)

(declare-fun call!15676 () List!1719)

(assert (=> bm!15674 (= call!15677 call!15676)))

(declare-fun b!141440 () Bool)

(assert (=> b!141440 (= e!92174 call!15677)))

(declare-fun b!141441 () Bool)

(assert (=> b!141441 (= e!92172 call!15676)))

(declare-fun b!141442 () Bool)

(assert (=> b!141442 (= e!92171 (contains!907 lt!74228 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92175 () List!1719)

(declare-fun b!141436 () Bool)

(assert (=> b!141436 (= e!92175 (ite c!26608 (t!6295 (toList!858 call!15525)) (ite c!26606 (Cons!1715 (h!2322 (toList!858 call!15525)) (t!6295 (toList!858 call!15525))) Nil!1716)))))

(declare-fun d!44507 () Bool)

(assert (=> d!44507 e!92171))

(declare-fun res!67525 () Bool)

(assert (=> d!44507 (=> (not res!67525) (not e!92171))))

(assert (=> d!44507 (= res!67525 (isStrictlySorted!312 lt!74228))))

(assert (=> d!44507 (= lt!74228 e!92172)))

(declare-fun c!26607 () Bool)

(assert (=> d!44507 (= c!26607 (and ((_ is Cons!1715) (toList!858 call!15525)) (bvslt (_1!1322 (h!2322 (toList!858 call!15525))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44507 (isStrictlySorted!312 (toList!858 call!15525))))

(assert (=> d!44507 (= (insertStrictlySorted!94 (toList!858 call!15525) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74228)))

(declare-fun b!141443 () Bool)

(assert (=> b!141443 (= e!92173 call!15678)))

(declare-fun b!141444 () Bool)

(assert (=> b!141444 (= e!92173 call!15678)))

(declare-fun bm!15675 () Bool)

(assert (=> bm!15675 (= call!15676 ($colon$colon!93 e!92175 (ite c!26607 (h!2322 (toList!858 call!15525)) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun c!26605 () Bool)

(assert (=> bm!15675 (= c!26605 c!26607)))

(declare-fun b!141445 () Bool)

(assert (=> b!141445 (= e!92175 (insertStrictlySorted!94 (t!6295 (toList!858 call!15525)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44507 c!26607) b!141441))

(assert (= (and d!44507 (not c!26607)) b!141437))

(assert (= (and b!141437 c!26608) b!141440))

(assert (= (and b!141437 (not c!26608)) b!141439))

(assert (= (and b!141439 c!26606) b!141443))

(assert (= (and b!141439 (not c!26606)) b!141444))

(assert (= (or b!141443 b!141444) bm!15673))

(assert (= (or b!141440 bm!15673) bm!15674))

(assert (= (or b!141441 bm!15674) bm!15675))

(assert (= (and bm!15675 c!26605) b!141445))

(assert (= (and bm!15675 (not c!26605)) b!141436))

(assert (= (and d!44507 res!67525) b!141438))

(assert (= (and b!141438 res!67526) b!141442))

(declare-fun m!169893 () Bool)

(assert (=> bm!15675 m!169893))

(declare-fun m!169895 () Bool)

(assert (=> d!44507 m!169895))

(declare-fun m!169897 () Bool)

(assert (=> d!44507 m!169897))

(declare-fun m!169899 () Bool)

(assert (=> b!141438 m!169899))

(declare-fun m!169901 () Bool)

(assert (=> b!141445 m!169901))

(declare-fun m!169903 () Bool)

(assert (=> b!141442 m!169903))

(assert (=> d!43993 d!44507))

(declare-fun bm!15676 () Bool)

(declare-fun call!15679 () Bool)

(assert (=> bm!15676 (= call!15679 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410))))))

(declare-fun b!141446 () Bool)

(declare-fun e!92178 () Bool)

(declare-fun e!92177 () Bool)

(assert (=> b!141446 (= e!92178 e!92177)))

(declare-fun c!26609 () Bool)

(assert (=> b!141446 (= c!26609 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(declare-fun b!141447 () Bool)

(declare-fun e!92176 () Bool)

(assert (=> b!141447 (= e!92177 e!92176)))

(declare-fun lt!74231 () (_ BitVec 64))

(assert (=> b!141447 (= lt!74231 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000))))

(declare-fun lt!74229 () Unit!4387)

(assert (=> b!141447 (= lt!74229 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (_2!1323 lt!73410)) lt!74231 #b00000000000000000000000000000000))))

(assert (=> b!141447 (arrayContainsKey!0 (_keys!4698 (_2!1323 lt!73410)) lt!74231 #b00000000000000000000000000000000)))

(declare-fun lt!74230 () Unit!4387)

(assert (=> b!141447 (= lt!74230 lt!74229)))

(declare-fun res!67527 () Bool)

(assert (=> b!141447 (= res!67527 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000) (_keys!4698 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410))) (Found!273 #b00000000000000000000000000000000)))))

(assert (=> b!141447 (=> (not res!67527) (not e!92176))))

(declare-fun d!44509 () Bool)

(declare-fun res!67528 () Bool)

(assert (=> d!44509 (=> res!67528 e!92178)))

(assert (=> d!44509 (= res!67528 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(assert (=> d!44509 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4698 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410))) e!92178)))

(declare-fun b!141448 () Bool)

(assert (=> b!141448 (= e!92177 call!15679)))

(declare-fun b!141449 () Bool)

(assert (=> b!141449 (= e!92176 call!15679)))

(assert (= (and d!44509 (not res!67528)) b!141446))

(assert (= (and b!141446 c!26609) b!141447))

(assert (= (and b!141446 (not c!26609)) b!141448))

(assert (= (and b!141447 res!67527) b!141449))

(assert (= (or b!141449 b!141448) bm!15676))

(declare-fun m!169905 () Bool)

(assert (=> bm!15676 m!169905))

(declare-fun m!169907 () Bool)

(assert (=> b!141446 m!169907))

(assert (=> b!141446 m!169907))

(declare-fun m!169909 () Bool)

(assert (=> b!141446 m!169909))

(assert (=> b!141447 m!169907))

(declare-fun m!169911 () Bool)

(assert (=> b!141447 m!169911))

(declare-fun m!169913 () Bool)

(assert (=> b!141447 m!169913))

(assert (=> b!141447 m!169907))

(declare-fun m!169915 () Bool)

(assert (=> b!141447 m!169915))

(assert (=> b!140462 d!44509))

(declare-fun d!44511 () Bool)

(declare-fun e!92179 () Bool)

(assert (=> d!44511 e!92179))

(declare-fun res!67529 () Bool)

(assert (=> d!44511 (=> res!67529 e!92179)))

(declare-fun lt!74235 () Bool)

(assert (=> d!44511 (= res!67529 (not lt!74235))))

(declare-fun lt!74232 () Bool)

(assert (=> d!44511 (= lt!74235 lt!74232)))

(declare-fun lt!74234 () Unit!4387)

(declare-fun e!92180 () Unit!4387)

(assert (=> d!44511 (= lt!74234 e!92180)))

(declare-fun c!26610 () Bool)

(assert (=> d!44511 (= c!26610 lt!74232)))

(assert (=> d!44511 (= lt!74232 (containsKey!180 (toList!858 lt!73855) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44511 (= (contains!904 lt!73855 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74235)))

(declare-fun b!141450 () Bool)

(declare-fun lt!74233 () Unit!4387)

(assert (=> b!141450 (= e!92180 lt!74233)))

(assert (=> b!141450 (= lt!74233 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73855) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141450 (isDefined!129 (getValueByKey!177 (toList!858 lt!73855) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141451 () Bool)

(declare-fun Unit!4463 () Unit!4387)

(assert (=> b!141451 (= e!92180 Unit!4463)))

(declare-fun b!141452 () Bool)

(assert (=> b!141452 (= e!92179 (isDefined!129 (getValueByKey!177 (toList!858 lt!73855) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44511 c!26610) b!141450))

(assert (= (and d!44511 (not c!26610)) b!141451))

(assert (= (and d!44511 (not res!67529)) b!141452))

(declare-fun m!169917 () Bool)

(assert (=> d!44511 m!169917))

(declare-fun m!169919 () Bool)

(assert (=> b!141450 m!169919))

(declare-fun m!169921 () Bool)

(assert (=> b!141450 m!169921))

(assert (=> b!141450 m!169921))

(declare-fun m!169923 () Bool)

(assert (=> b!141450 m!169923))

(assert (=> b!141452 m!169921))

(assert (=> b!141452 m!169921))

(assert (=> b!141452 m!169923))

(assert (=> bm!15623 d!44511))

(declare-fun b!141453 () Bool)

(declare-fun e!92182 () Bool)

(declare-fun lt!74237 () SeekEntryResult!273)

(assert (=> b!141453 (= e!92182 (bvsge (x!16130 lt!74237) #b01111111111111111111111111111110))))

(declare-fun b!141454 () Bool)

(declare-fun e!92181 () SeekEntryResult!273)

(assert (=> b!141454 (= e!92181 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!141455 () Bool)

(declare-fun e!92185 () SeekEntryResult!273)

(assert (=> b!141455 (= e!92185 e!92181)))

(declare-fun c!26612 () Bool)

(declare-fun lt!74236 () (_ BitVec 64))

(assert (=> b!141455 (= c!26612 (or (= lt!74236 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!74236 lt!74236) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141456 () Bool)

(assert (=> b!141456 (= e!92185 (Intermediate!273 true (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!141458 () Bool)

(assert (=> b!141458 (and (bvsge (index!3257 lt!74237) #b00000000000000000000000000000000) (bvslt (index!3257 lt!74237) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67531 () Bool)

(assert (=> b!141458 (= res!67531 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74237)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92183 () Bool)

(assert (=> b!141458 (=> res!67531 e!92183)))

(declare-fun b!141459 () Bool)

(assert (=> b!141459 (and (bvsge (index!3257 lt!74237) #b00000000000000000000000000000000) (bvslt (index!3257 lt!74237) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141459 (= e!92183 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74237)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141460 () Bool)

(assert (=> b!141460 (= e!92181 (Intermediate!273 false (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!141461 () Bool)

(declare-fun e!92184 () Bool)

(assert (=> b!141461 (= e!92182 e!92184)))

(declare-fun res!67530 () Bool)

(assert (=> b!141461 (= res!67530 (and ((_ is Intermediate!273) lt!74237) (not (undefined!1085 lt!74237)) (bvslt (x!16130 lt!74237) #b01111111111111111111111111111110) (bvsge (x!16130 lt!74237) #b00000000000000000000000000000000) (bvsge (x!16130 lt!74237) #b00000000000000000000000000000000)))))

(assert (=> b!141461 (=> (not res!67530) (not e!92184))))

(declare-fun d!44513 () Bool)

(assert (=> d!44513 e!92182))

(declare-fun c!26611 () Bool)

(assert (=> d!44513 (= c!26611 (and ((_ is Intermediate!273) lt!74237) (undefined!1085 lt!74237)))))

(assert (=> d!44513 (= lt!74237 e!92185)))

(declare-fun c!26613 () Bool)

(assert (=> d!44513 (= c!26613 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!44513 (= lt!74236 (select (arr!2306 (_keys!4698 newMap!16)) (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16))))))

(assert (=> d!44513 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44513 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!74237)))

(declare-fun b!141457 () Bool)

(assert (=> b!141457 (and (bvsge (index!3257 lt!74237) #b00000000000000000000000000000000) (bvslt (index!3257 lt!74237) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67532 () Bool)

(assert (=> b!141457 (= res!67532 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74237)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141457 (=> res!67532 e!92183)))

(assert (=> b!141457 (= e!92184 e!92183)))

(assert (= (and d!44513 c!26613) b!141456))

(assert (= (and d!44513 (not c!26613)) b!141455))

(assert (= (and b!141455 c!26612) b!141460))

(assert (= (and b!141455 (not c!26612)) b!141454))

(assert (= (and d!44513 c!26611) b!141453))

(assert (= (and d!44513 (not c!26611)) b!141461))

(assert (= (and b!141461 res!67530) b!141457))

(assert (= (and b!141457 (not res!67532)) b!141458))

(assert (= (and b!141458 (not res!67531)) b!141459))

(declare-fun m!169925 () Bool)

(assert (=> b!141458 m!169925))

(assert (=> d!44513 m!167693))

(declare-fun m!169927 () Bool)

(assert (=> d!44513 m!169927))

(assert (=> d!44513 m!166907))

(assert (=> b!141457 m!169925))

(assert (=> b!141459 m!169925))

(assert (=> b!141454 m!167693))

(declare-fun m!169929 () Bool)

(assert (=> b!141454 m!169929))

(assert (=> b!141454 m!169929))

(assert (=> b!141454 m!166927))

(declare-fun m!169931 () Bool)

(assert (=> b!141454 m!169931))

(assert (=> d!43763 d!44513))

(declare-fun d!44515 () Bool)

(declare-fun lt!74239 () (_ BitVec 32))

(declare-fun lt!74238 () (_ BitVec 32))

(assert (=> d!44515 (= lt!74239 (bvmul (bvxor lt!74238 (bvlshr lt!74238 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!44515 (= lt!74238 ((_ extract 31 0) (bvand (bvxor (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!44515 (and (bvsge (mask!7279 newMap!16) #b00000000000000000000000000000000) (let ((res!67117 (let ((h!2327 ((_ extract 31 0) (bvand (bvxor (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16233 (bvmul (bvxor h!2327 (bvlshr h!2327 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16233 (bvlshr x!16233 #b00000000000000000000000000001101)) (mask!7279 newMap!16)))))) (and (bvslt res!67117 (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67117 #b00000000000000000000000000000000))))))

(assert (=> d!44515 (= (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (mask!7279 newMap!16)) (bvand (bvxor lt!74239 (bvlshr lt!74239 #b00000000000000000000000000001101)) (mask!7279 newMap!16)))))

(assert (=> d!43763 d!44515))

(assert (=> d!43763 d!43697))

(declare-fun d!44517 () Bool)

(assert (=> d!44517 (= (arrayCountValidKeys!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4698 newMap!16) #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!44517 true))

(declare-fun _$84!15 () Unit!4387)

(assert (=> d!44517 (= (choose!1 (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) _$84!15)))

(declare-fun bs!5952 () Bool)

(assert (= bs!5952 d!44517))

(assert (=> bs!5952 m!167195))

(assert (=> bs!5952 m!167209))

(assert (=> bs!5952 m!166819))

(assert (=> d!43847 d!44517))

(declare-fun lt!74240 () Bool)

(declare-fun d!44519 () Bool)

(assert (=> d!44519 (= lt!74240 (select (content!139 (toList!858 lt!73989)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun e!92186 () Bool)

(assert (=> d!44519 (= lt!74240 e!92186)))

(declare-fun res!67533 () Bool)

(assert (=> d!44519 (=> (not res!67533) (not e!92186))))

(assert (=> d!44519 (= res!67533 ((_ is Cons!1715) (toList!858 lt!73989)))))

(assert (=> d!44519 (= (contains!907 (toList!858 lt!73989) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!74240)))

(declare-fun b!141462 () Bool)

(declare-fun e!92187 () Bool)

(assert (=> b!141462 (= e!92186 e!92187)))

(declare-fun res!67534 () Bool)

(assert (=> b!141462 (=> res!67534 e!92187)))

(assert (=> b!141462 (= res!67534 (= (h!2322 (toList!858 lt!73989)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!141463 () Bool)

(assert (=> b!141463 (= e!92187 (contains!907 (t!6295 (toList!858 lt!73989)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!44519 res!67533) b!141462))

(assert (= (and b!141462 (not res!67534)) b!141463))

(declare-fun m!169933 () Bool)

(assert (=> d!44519 m!169933))

(declare-fun m!169935 () Bool)

(assert (=> d!44519 m!169935))

(declare-fun m!169937 () Bool)

(assert (=> b!141463 m!169937))

(assert (=> b!141034 d!44519))

(declare-fun b!141464 () Bool)

(declare-fun e!92190 () Bool)

(assert (=> b!141464 (= e!92190 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(declare-fun b!141465 () Bool)

(declare-fun e!92196 () Bool)

(declare-fun lt!74242 () ListLongMap!1685)

(assert (=> b!141465 (= e!92196 (= (apply!120 lt!74242 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 (_2!1323 lt!73410))))))

(declare-fun b!141466 () Bool)

(declare-fun c!26618 () Bool)

(assert (=> b!141466 (= c!26618 (and (not (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!92198 () ListLongMap!1685)

(declare-fun e!92188 () ListLongMap!1685)

(assert (=> b!141466 (= e!92198 e!92188)))

(declare-fun bm!15677 () Bool)

(declare-fun call!15680 () Bool)

(assert (=> bm!15677 (= call!15680 (contains!904 lt!74242 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141467 () Bool)

(declare-fun e!92197 () Bool)

(declare-fun e!92195 () Bool)

(assert (=> b!141467 (= e!92197 e!92195)))

(declare-fun c!26615 () Bool)

(assert (=> b!141467 (= c!26615 (not (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141468 () Bool)

(declare-fun e!92189 () Bool)

(declare-fun e!92191 () Bool)

(assert (=> b!141468 (= e!92189 e!92191)))

(declare-fun res!67543 () Bool)

(assert (=> b!141468 (=> (not res!67543) (not e!92191))))

(assert (=> b!141468 (= res!67543 (contains!904 lt!74242 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(assert (=> b!141468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(declare-fun b!141469 () Bool)

(declare-fun res!67537 () Bool)

(assert (=> b!141469 (=> (not res!67537) (not e!92197))))

(declare-fun e!92194 () Bool)

(assert (=> b!141469 (= res!67537 e!92194)))

(declare-fun c!26619 () Bool)

(assert (=> b!141469 (= c!26619 (not (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!141470 () Bool)

(declare-fun e!92199 () Bool)

(assert (=> b!141470 (= e!92199 (= (apply!120 lt!74242 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 (_2!1323 lt!73410))))))

(declare-fun b!141471 () Bool)

(declare-fun call!15686 () Bool)

(assert (=> b!141471 (= e!92195 (not call!15686))))

(declare-fun b!141472 () Bool)

(assert (=> b!141472 (= e!92191 (= (apply!120 lt!74242 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 (_2!1323 lt!73410))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73410)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141472 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 (_2!1323 lt!73410)))))))

(assert (=> b!141472 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(declare-fun bm!15678 () Bool)

(declare-fun call!15683 () ListLongMap!1685)

(declare-fun call!15681 () ListLongMap!1685)

(assert (=> bm!15678 (= call!15683 call!15681)))

(declare-fun b!141473 () Bool)

(declare-fun res!67541 () Bool)

(assert (=> b!141473 (=> (not res!67541) (not e!92197))))

(assert (=> b!141473 (= res!67541 e!92189)))

(declare-fun res!67540 () Bool)

(assert (=> b!141473 (=> res!67540 e!92189)))

(assert (=> b!141473 (= res!67540 (not e!92190))))

(declare-fun res!67536 () Bool)

(assert (=> b!141473 (=> (not res!67536) (not e!92190))))

(assert (=> b!141473 (= res!67536 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(declare-fun bm!15679 () Bool)

(declare-fun call!15682 () ListLongMap!1685)

(assert (=> bm!15679 (= call!15681 call!15682)))

(declare-fun b!141474 () Bool)

(declare-fun e!92192 () Unit!4387)

(declare-fun lt!74259 () Unit!4387)

(assert (=> b!141474 (= e!92192 lt!74259)))

(declare-fun lt!74246 () ListLongMap!1685)

(assert (=> b!141474 (= lt!74246 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))))))

(declare-fun lt!74248 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74248 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74252 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74252 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000))))

(declare-fun lt!74262 () Unit!4387)

(assert (=> b!141474 (= lt!74262 (addStillContains!96 lt!74246 lt!74248 (zeroValue!2789 (_2!1323 lt!73410)) lt!74252))))

(assert (=> b!141474 (contains!904 (+!173 lt!74246 (tuple2!2623 lt!74248 (zeroValue!2789 (_2!1323 lt!73410)))) lt!74252)))

(declare-fun lt!74251 () Unit!4387)

(assert (=> b!141474 (= lt!74251 lt!74262)))

(declare-fun lt!74258 () ListLongMap!1685)

(assert (=> b!141474 (= lt!74258 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))))))

(declare-fun lt!74247 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74247 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74253 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74253 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000))))

(declare-fun lt!74256 () Unit!4387)

(assert (=> b!141474 (= lt!74256 (addApplyDifferent!96 lt!74258 lt!74247 (minValue!2789 (_2!1323 lt!73410)) lt!74253))))

(assert (=> b!141474 (= (apply!120 (+!173 lt!74258 (tuple2!2623 lt!74247 (minValue!2789 (_2!1323 lt!73410)))) lt!74253) (apply!120 lt!74258 lt!74253))))

(declare-fun lt!74241 () Unit!4387)

(assert (=> b!141474 (= lt!74241 lt!74256)))

(declare-fun lt!74245 () ListLongMap!1685)

(assert (=> b!141474 (= lt!74245 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))))))

(declare-fun lt!74255 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74255 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74243 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74243 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000))))

(declare-fun lt!74254 () Unit!4387)

(assert (=> b!141474 (= lt!74254 (addApplyDifferent!96 lt!74245 lt!74255 (zeroValue!2789 (_2!1323 lt!73410)) lt!74243))))

(assert (=> b!141474 (= (apply!120 (+!173 lt!74245 (tuple2!2623 lt!74255 (zeroValue!2789 (_2!1323 lt!73410)))) lt!74243) (apply!120 lt!74245 lt!74243))))

(declare-fun lt!74244 () Unit!4387)

(assert (=> b!141474 (= lt!74244 lt!74254)))

(declare-fun lt!74261 () ListLongMap!1685)

(assert (=> b!141474 (= lt!74261 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))))))

(declare-fun lt!74257 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74257 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74260 () (_ BitVec 64))

(assert (=> b!141474 (= lt!74260 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000))))

(assert (=> b!141474 (= lt!74259 (addApplyDifferent!96 lt!74261 lt!74257 (minValue!2789 (_2!1323 lt!73410)) lt!74260))))

(assert (=> b!141474 (= (apply!120 (+!173 lt!74261 (tuple2!2623 lt!74257 (minValue!2789 (_2!1323 lt!73410)))) lt!74260) (apply!120 lt!74261 lt!74260))))

(declare-fun bm!15680 () Bool)

(declare-fun c!26616 () Bool)

(declare-fun c!26617 () Bool)

(declare-fun call!15684 () ListLongMap!1685)

(assert (=> bm!15680 (= call!15684 (+!173 (ite c!26616 call!15682 (ite c!26617 call!15681 call!15683)) (ite (or c!26616 c!26617) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73410))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73410))))))))

(declare-fun d!44521 () Bool)

(assert (=> d!44521 e!92197))

(declare-fun res!67535 () Bool)

(assert (=> d!44521 (=> (not res!67535) (not e!92197))))

(assert (=> d!44521 (= res!67535 (or (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))))

(declare-fun lt!74249 () ListLongMap!1685)

(assert (=> d!44521 (= lt!74242 lt!74249)))

(declare-fun lt!74250 () Unit!4387)

(assert (=> d!44521 (= lt!74250 e!92192)))

(declare-fun c!26614 () Bool)

(declare-fun e!92193 () Bool)

(assert (=> d!44521 (= c!26614 e!92193)))

(declare-fun res!67538 () Bool)

(assert (=> d!44521 (=> (not res!67538) (not e!92193))))

(assert (=> d!44521 (= res!67538 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(declare-fun e!92200 () ListLongMap!1685)

(assert (=> d!44521 (= lt!74249 e!92200)))

(assert (=> d!44521 (= c!26616 (and (not (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!44521 (validMask!0 (mask!7279 (_2!1323 lt!73410)))))

(assert (=> d!44521 (= (getCurrentListMap!531 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))) lt!74242)))

(declare-fun b!141475 () Bool)

(assert (=> b!141475 (= e!92188 call!15683)))

(declare-fun b!141476 () Bool)

(declare-fun Unit!4464 () Unit!4387)

(assert (=> b!141476 (= e!92192 Unit!4464)))

(declare-fun b!141477 () Bool)

(assert (=> b!141477 (= e!92195 e!92196)))

(declare-fun res!67539 () Bool)

(assert (=> b!141477 (= res!67539 call!15686)))

(assert (=> b!141477 (=> (not res!67539) (not e!92196))))

(declare-fun b!141478 () Bool)

(assert (=> b!141478 (= e!92194 e!92199)))

(declare-fun res!67542 () Bool)

(assert (=> b!141478 (= res!67542 call!15680)))

(assert (=> b!141478 (=> (not res!67542) (not e!92199))))

(declare-fun b!141479 () Bool)

(declare-fun call!15685 () ListLongMap!1685)

(assert (=> b!141479 (= e!92188 call!15685)))

(declare-fun b!141480 () Bool)

(assert (=> b!141480 (= e!92198 call!15685)))

(declare-fun b!141481 () Bool)

(assert (=> b!141481 (= e!92200 (+!173 call!15684 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73410)))))))

(declare-fun bm!15681 () Bool)

(assert (=> bm!15681 (= call!15682 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (_2!1323 lt!73410)) (_values!2922 (_2!1323 lt!73410)) (mask!7279 (_2!1323 lt!73410)) (extraKeys!2694 (_2!1323 lt!73410)) (zeroValue!2789 (_2!1323 lt!73410)) (minValue!2789 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1323 lt!73410))))))

(declare-fun b!141482 () Bool)

(assert (=> b!141482 (= e!92193 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(declare-fun b!141483 () Bool)

(assert (=> b!141483 (= e!92200 e!92198)))

(assert (=> b!141483 (= c!26617 (and (not (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141484 () Bool)

(assert (=> b!141484 (= e!92194 (not call!15680))))

(declare-fun bm!15682 () Bool)

(assert (=> bm!15682 (= call!15685 call!15684)))

(declare-fun bm!15683 () Bool)

(assert (=> bm!15683 (= call!15686 (contains!904 lt!74242 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44521 c!26616) b!141481))

(assert (= (and d!44521 (not c!26616)) b!141483))

(assert (= (and b!141483 c!26617) b!141480))

(assert (= (and b!141483 (not c!26617)) b!141466))

(assert (= (and b!141466 c!26618) b!141479))

(assert (= (and b!141466 (not c!26618)) b!141475))

(assert (= (or b!141479 b!141475) bm!15678))

(assert (= (or b!141480 bm!15678) bm!15679))

(assert (= (or b!141480 b!141479) bm!15682))

(assert (= (or b!141481 bm!15679) bm!15681))

(assert (= (or b!141481 bm!15682) bm!15680))

(assert (= (and d!44521 res!67538) b!141482))

(assert (= (and d!44521 c!26614) b!141474))

(assert (= (and d!44521 (not c!26614)) b!141476))

(assert (= (and d!44521 res!67535) b!141473))

(assert (= (and b!141473 res!67536) b!141464))

(assert (= (and b!141473 (not res!67540)) b!141468))

(assert (= (and b!141468 res!67543) b!141472))

(assert (= (and b!141473 res!67541) b!141469))

(assert (= (and b!141469 c!26619) b!141478))

(assert (= (and b!141469 (not c!26619)) b!141484))

(assert (= (and b!141478 res!67542) b!141470))

(assert (= (or b!141478 b!141484) bm!15677))

(assert (= (and b!141469 res!67537) b!141467))

(assert (= (and b!141467 c!26615) b!141477))

(assert (= (and b!141467 (not c!26615)) b!141471))

(assert (= (and b!141477 res!67539) b!141465))

(assert (= (or b!141477 b!141471) bm!15683))

(declare-fun b_lambda!6369 () Bool)

(assert (=> (not b_lambda!6369) (not b!141472)))

(declare-fun tb!2557 () Bool)

(declare-fun t!6318 () Bool)

(assert (=> (and b!139542 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 (_2!1323 lt!73410))) t!6318) tb!2557))

(declare-fun result!4195 () Bool)

(assert (=> tb!2557 (= result!4195 tp_is_empty!2929)))

(assert (=> b!141472 t!6318))

(declare-fun b_and!8865 () Bool)

(assert (= b_and!8861 (and (=> t!6318 result!4195) b_and!8865)))

(declare-fun t!6320 () Bool)

(declare-fun tb!2559 () Bool)

(assert (=> (and b!139556 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (_2!1323 lt!73410))) t!6320) tb!2559))

(declare-fun result!4197 () Bool)

(assert (= result!4197 result!4195))

(assert (=> b!141472 t!6320))

(declare-fun b_and!8867 () Bool)

(assert (= b_and!8863 (and (=> t!6320 result!4197) b_and!8867)))

(declare-fun m!169939 () Bool)

(assert (=> b!141474 m!169939))

(declare-fun m!169941 () Bool)

(assert (=> b!141474 m!169941))

(declare-fun m!169943 () Bool)

(assert (=> b!141474 m!169943))

(declare-fun m!169945 () Bool)

(assert (=> b!141474 m!169945))

(declare-fun m!169947 () Bool)

(assert (=> b!141474 m!169947))

(assert (=> b!141474 m!169907))

(assert (=> b!141474 m!169939))

(declare-fun m!169949 () Bool)

(assert (=> b!141474 m!169949))

(declare-fun m!169951 () Bool)

(assert (=> b!141474 m!169951))

(assert (=> b!141474 m!169951))

(declare-fun m!169953 () Bool)

(assert (=> b!141474 m!169953))

(declare-fun m!169955 () Bool)

(assert (=> b!141474 m!169955))

(declare-fun m!169957 () Bool)

(assert (=> b!141474 m!169957))

(declare-fun m!169959 () Bool)

(assert (=> b!141474 m!169959))

(declare-fun m!169961 () Bool)

(assert (=> b!141474 m!169961))

(declare-fun m!169963 () Bool)

(assert (=> b!141474 m!169963))

(declare-fun m!169965 () Bool)

(assert (=> b!141474 m!169965))

(assert (=> b!141474 m!169945))

(declare-fun m!169967 () Bool)

(assert (=> b!141474 m!169967))

(assert (=> b!141474 m!169957))

(declare-fun m!169969 () Bool)

(assert (=> b!141474 m!169969))

(declare-fun m!169971 () Bool)

(assert (=> b!141481 m!169971))

(declare-fun m!169973 () Bool)

(assert (=> b!141470 m!169973))

(declare-fun m!169975 () Bool)

(assert (=> bm!15677 m!169975))

(assert (=> b!141464 m!169907))

(assert (=> b!141464 m!169907))

(assert (=> b!141464 m!169909))

(declare-fun m!169977 () Bool)

(assert (=> b!141465 m!169977))

(declare-fun m!169979 () Bool)

(assert (=> b!141472 m!169979))

(assert (=> b!141472 m!169979))

(declare-fun m!169981 () Bool)

(assert (=> b!141472 m!169981))

(declare-fun m!169983 () Bool)

(assert (=> b!141472 m!169983))

(assert (=> b!141472 m!169907))

(assert (=> b!141472 m!169907))

(declare-fun m!169985 () Bool)

(assert (=> b!141472 m!169985))

(assert (=> b!141472 m!169981))

(declare-fun m!169987 () Bool)

(assert (=> bm!15683 m!169987))

(declare-fun m!169989 () Bool)

(assert (=> d!44521 m!169989))

(declare-fun m!169991 () Bool)

(assert (=> bm!15680 m!169991))

(assert (=> bm!15681 m!169947))

(assert (=> b!141468 m!169907))

(assert (=> b!141468 m!169907))

(declare-fun m!169993 () Bool)

(assert (=> b!141468 m!169993))

(assert (=> b!141482 m!169907))

(assert (=> b!141482 m!169907))

(assert (=> b!141482 m!169909))

(assert (=> d!43791 d!44521))

(assert (=> b!140539 d!44415))

(declare-fun d!44523 () Bool)

(assert (=> d!44523 (= (validKeyInArray!0 (select (arr!2306 lt!73415) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) (and (not (= (select (arr!2306 lt!73415) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 lt!73415) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140536 d!44523))

(declare-fun b!141485 () Bool)

(declare-fun e!92201 () (_ BitVec 32))

(assert (=> b!141485 (= e!92201 #b00000000000000000000000000000000)))

(declare-fun b!141487 () Bool)

(declare-fun e!92202 () (_ BitVec 32))

(declare-fun call!15687 () (_ BitVec 32))

(assert (=> b!141487 (= e!92202 (bvadd #b00000000000000000000000000000001 call!15687))))

(declare-fun d!44525 () Bool)

(declare-fun lt!74263 () (_ BitVec 32))

(assert (=> d!44525 (and (bvsge lt!74263 #b00000000000000000000000000000000) (bvsle lt!74263 (bvsub (size!2578 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!44525 (= lt!74263 e!92201)))

(declare-fun c!26620 () Bool)

(assert (=> d!44525 (= c!26620 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44525 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 newMap!16)) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44525 (= (arrayCountValidKeys!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))) lt!74263)))

(declare-fun b!141486 () Bool)

(assert (=> b!141486 (= e!92201 e!92202)))

(declare-fun c!26621 () Bool)

(assert (=> b!141486 (= c!26621 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!15684 () Bool)

(assert (=> bm!15684 (= call!15687 (arrayCountValidKeys!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141488 () Bool)

(assert (=> b!141488 (= e!92202 call!15687)))

(assert (= (and d!44525 c!26620) b!141485))

(assert (= (and d!44525 (not c!26620)) b!141486))

(assert (= (and b!141486 c!26621) b!141487))

(assert (= (and b!141486 (not c!26621)) b!141488))

(assert (= (or b!141487 b!141488) bm!15684))

(declare-fun m!169995 () Bool)

(assert (=> b!141486 m!169995))

(assert (=> b!141486 m!169995))

(declare-fun m!169997 () Bool)

(assert (=> b!141486 m!169997))

(declare-fun m!169999 () Bool)

(assert (=> bm!15684 m!169999))

(assert (=> bm!15639 d!44525))

(assert (=> d!43733 d!43721))

(assert (=> d!43733 d!43743))

(assert (=> d!43733 d!43725))

(declare-fun d!44527 () Bool)

(declare-fun e!92203 () Bool)

(assert (=> d!44527 e!92203))

(declare-fun res!67544 () Bool)

(assert (=> d!44527 (=> res!67544 e!92203)))

(declare-fun lt!74267 () Bool)

(assert (=> d!44527 (= res!67544 (not lt!74267))))

(declare-fun lt!74264 () Bool)

(assert (=> d!44527 (= lt!74267 lt!74264)))

(declare-fun lt!74266 () Unit!4387)

(declare-fun e!92204 () Unit!4387)

(assert (=> d!44527 (= lt!74266 e!92204)))

(declare-fun c!26622 () Bool)

(assert (=> d!44527 (= c!26622 lt!74264)))

(assert (=> d!44527 (= lt!74264 (containsKey!180 (toList!858 lt!73234) lt!73233))))

(assert (=> d!44527 (= (contains!904 lt!73234 lt!73233) lt!74267)))

(declare-fun b!141489 () Bool)

(declare-fun lt!74265 () Unit!4387)

(assert (=> b!141489 (= e!92204 lt!74265)))

(assert (=> b!141489 (= lt!74265 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73234) lt!73233))))

(assert (=> b!141489 (isDefined!129 (getValueByKey!177 (toList!858 lt!73234) lt!73233))))

(declare-fun b!141490 () Bool)

(declare-fun Unit!4465 () Unit!4387)

(assert (=> b!141490 (= e!92204 Unit!4465)))

(declare-fun b!141491 () Bool)

(assert (=> b!141491 (= e!92203 (isDefined!129 (getValueByKey!177 (toList!858 lt!73234) lt!73233)))))

(assert (= (and d!44527 c!26622) b!141489))

(assert (= (and d!44527 (not c!26622)) b!141490))

(assert (= (and d!44527 (not res!67544)) b!141491))

(declare-fun m!170001 () Bool)

(assert (=> d!44527 m!170001))

(declare-fun m!170003 () Bool)

(assert (=> b!141489 m!170003))

(assert (=> b!141489 m!167573))

(assert (=> b!141489 m!167573))

(declare-fun m!170005 () Bool)

(assert (=> b!141489 m!170005))

(assert (=> b!141491 m!167573))

(assert (=> b!141491 m!167573))

(assert (=> b!141491 m!170005))

(assert (=> d!43733 d!44527))

(declare-fun d!44529 () Bool)

(assert (=> d!44529 (= (apply!120 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73233) (apply!120 lt!73234 lt!73233))))

(assert (=> d!44529 true))

(declare-fun _$34!1006 () Unit!4387)

(assert (=> d!44529 (= (choose!867 lt!73234 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73233) _$34!1006)))

(declare-fun bs!5953 () Bool)

(assert (= bs!5953 d!44529))

(assert (=> bs!5953 m!166937))

(assert (=> bs!5953 m!166937))

(assert (=> bs!5953 m!166939))

(assert (=> bs!5953 m!166935))

(assert (=> d!43733 d!44529))

(assert (=> d!43859 d!43697))

(declare-fun d!44531 () Bool)

(assert (=> d!44531 (= (isEmpty!425 (toList!858 lt!73446)) ((_ is Nil!1716) (toList!858 lt!73446)))))

(assert (=> d!44069 d!44531))

(declare-fun d!44533 () Bool)

(assert (=> d!44533 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!73320)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!73320)))))

(assert (=> d!44025 d!44533))

(declare-fun b!141493 () Bool)

(declare-fun e!92205 () Option!183)

(declare-fun e!92206 () Option!183)

(assert (=> b!141493 (= e!92205 e!92206)))

(declare-fun c!26624 () Bool)

(assert (=> b!141493 (= c!26624 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))) lt!73320))))))

(declare-fun b!141494 () Bool)

(assert (=> b!141494 (= e!92206 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))) lt!73320))))

(declare-fun b!141492 () Bool)

(assert (=> b!141492 (= e!92205 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))))

(declare-fun b!141495 () Bool)

(assert (=> b!141495 (= e!92206 None!181)))

(declare-fun c!26623 () Bool)

(declare-fun d!44535 () Bool)

(assert (=> d!44535 (= c!26623 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))) lt!73320)))))

(assert (=> d!44535 (= (getValueByKey!177 (toList!858 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!73320) e!92205)))

(assert (= (and d!44535 c!26623) b!141492))

(assert (= (and d!44535 (not c!26623)) b!141493))

(assert (= (and b!141493 c!26624) b!141494))

(assert (= (and b!141493 (not c!26624)) b!141495))

(declare-fun m!170007 () Bool)

(assert (=> b!141494 m!170007))

(assert (=> d!44025 d!44535))

(declare-fun d!44537 () Bool)

(assert (=> d!44537 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16))))

(assert (=> d!44537 true))

(declare-fun _$56!15 () Unit!4387)

(assert (=> d!44537 (= (choose!102 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (mask!7279 newMap!16)) _$56!15)))

(declare-fun bs!5954 () Bool)

(assert (= bs!5954 d!44537))

(assert (=> bs!5954 m!167195))

(assert (=> bs!5954 m!167215))

(assert (=> d!43865 d!44537))

(assert (=> d!43865 d!43697))

(declare-fun d!44539 () Bool)

(declare-fun res!67545 () Bool)

(declare-fun e!92207 () Bool)

(assert (=> d!44539 (=> res!67545 e!92207)))

(assert (=> d!44539 (= res!67545 (and ((_ is Cons!1715) lt!73267) (= (_1!1322 (h!2322 lt!73267)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44539 (= (containsKey!180 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92207)))

(declare-fun b!141496 () Bool)

(declare-fun e!92208 () Bool)

(assert (=> b!141496 (= e!92207 e!92208)))

(declare-fun res!67546 () Bool)

(assert (=> b!141496 (=> (not res!67546) (not e!92208))))

(assert (=> b!141496 (= res!67546 (and (or (not ((_ is Cons!1715) lt!73267)) (bvsle (_1!1322 (h!2322 lt!73267)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1715) lt!73267) (bvslt (_1!1322 (h!2322 lt!73267)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141497 () Bool)

(assert (=> b!141497 (= e!92208 (containsKey!180 (t!6295 lt!73267) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44539 (not res!67545)) b!141496))

(assert (= (and b!141496 res!67546) b!141497))

(declare-fun m!170009 () Bool)

(assert (=> b!141497 m!170009))

(assert (=> b!140860 d!44539))

(declare-fun d!44541 () Bool)

(assert (=> d!44541 (= (apply!120 lt!73691 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73691) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!5955 () Bool)

(assert (= bs!5955 d!44541))

(assert (=> bs!5955 m!167977))

(declare-fun m!170011 () Bool)

(assert (=> bs!5955 m!170011))

(assert (=> bs!5955 m!170011))

(declare-fun m!170013 () Bool)

(assert (=> bs!5955 m!170013))

(assert (=> b!140557 d!44541))

(declare-fun d!44543 () Bool)

(declare-fun c!26625 () Bool)

(assert (=> d!44543 (= c!26625 ((_ is ValueCellFull!1121) (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!92209 () V!3553)

(assert (=> d!44543 (= (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92209)))

(declare-fun b!141498 () Bool)

(assert (=> b!141498 (= e!92209 (get!1533 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141499 () Bool)

(assert (=> b!141499 (= e!92209 (get!1534 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44543 c!26625) b!141498))

(assert (= (and d!44543 (not c!26625)) b!141499))

(assert (=> b!141498 m!168039))

(assert (=> b!141498 m!166963))

(declare-fun m!170015 () Bool)

(assert (=> b!141498 m!170015))

(assert (=> b!141499 m!168039))

(assert (=> b!141499 m!166963))

(declare-fun m!170017 () Bool)

(assert (=> b!141499 m!170017))

(assert (=> b!140557 d!44543))

(declare-fun bm!15685 () Bool)

(declare-fun call!15690 () List!1719)

(declare-fun call!15689 () List!1719)

(assert (=> bm!15685 (= call!15690 call!15689)))

(declare-fun b!141501 () Bool)

(declare-fun e!92211 () List!1719)

(declare-fun e!92213 () List!1719)

(assert (=> b!141501 (= e!92211 e!92213)))

(declare-fun c!26629 () Bool)

(assert (=> b!141501 (= c!26629 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73200))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73200)))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141502 () Bool)

(declare-fun res!67548 () Bool)

(declare-fun e!92210 () Bool)

(assert (=> b!141502 (=> (not res!67548) (not e!92210))))

(declare-fun lt!74268 () List!1719)

(assert (=> b!141502 (= res!67548 (containsKey!180 lt!74268 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun c!26627 () Bool)

(declare-fun b!141503 () Bool)

(assert (=> b!141503 (= c!26627 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73200))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73200)))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92212 () List!1719)

(assert (=> b!141503 (= e!92213 e!92212)))

(declare-fun bm!15686 () Bool)

(declare-fun call!15688 () List!1719)

(assert (=> bm!15686 (= call!15689 call!15688)))

(declare-fun b!141504 () Bool)

(assert (=> b!141504 (= e!92213 call!15689)))

(declare-fun b!141505 () Bool)

(assert (=> b!141505 (= e!92211 call!15688)))

(declare-fun b!141506 () Bool)

(assert (=> b!141506 (= e!92210 (contains!907 lt!74268 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92214 () List!1719)

(declare-fun b!141500 () Bool)

(assert (=> b!141500 (= e!92214 (ite c!26629 (t!6295 (t!6295 (toList!858 lt!73200))) (ite c!26627 (Cons!1715 (h!2322 (t!6295 (toList!858 lt!73200))) (t!6295 (t!6295 (toList!858 lt!73200)))) Nil!1716)))))

(declare-fun d!44545 () Bool)

(assert (=> d!44545 e!92210))

(declare-fun res!67547 () Bool)

(assert (=> d!44545 (=> (not res!67547) (not e!92210))))

(assert (=> d!44545 (= res!67547 (isStrictlySorted!312 lt!74268))))

(assert (=> d!44545 (= lt!74268 e!92211)))

(declare-fun c!26628 () Bool)

(assert (=> d!44545 (= c!26628 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73200))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73200)))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44545 (isStrictlySorted!312 (t!6295 (toList!858 lt!73200)))))

(assert (=> d!44545 (= (insertStrictlySorted!94 (t!6295 (toList!858 lt!73200)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74268)))

(declare-fun b!141507 () Bool)

(assert (=> b!141507 (= e!92212 call!15690)))

(declare-fun b!141508 () Bool)

(assert (=> b!141508 (= e!92212 call!15690)))

(declare-fun bm!15687 () Bool)

(assert (=> bm!15687 (= call!15688 ($colon$colon!93 e!92214 (ite c!26628 (h!2322 (t!6295 (toList!858 lt!73200))) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26626 () Bool)

(assert (=> bm!15687 (= c!26626 c!26628)))

(declare-fun b!141509 () Bool)

(assert (=> b!141509 (= e!92214 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 lt!73200))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44545 c!26628) b!141505))

(assert (= (and d!44545 (not c!26628)) b!141501))

(assert (= (and b!141501 c!26629) b!141504))

(assert (= (and b!141501 (not c!26629)) b!141503))

(assert (= (and b!141503 c!26627) b!141507))

(assert (= (and b!141503 (not c!26627)) b!141508))

(assert (= (or b!141507 b!141508) bm!15685))

(assert (= (or b!141504 bm!15685) bm!15686))

(assert (= (or b!141505 bm!15686) bm!15687))

(assert (= (and bm!15687 c!26626) b!141509))

(assert (= (and bm!15687 (not c!26626)) b!141500))

(assert (= (and d!44545 res!67547) b!141502))

(assert (= (and b!141502 res!67548) b!141506))

(declare-fun m!170019 () Bool)

(assert (=> bm!15687 m!170019))

(declare-fun m!170021 () Bool)

(assert (=> d!44545 m!170021))

(declare-fun m!170023 () Bool)

(assert (=> d!44545 m!170023))

(declare-fun m!170025 () Bool)

(assert (=> b!141502 m!170025))

(declare-fun m!170027 () Bool)

(assert (=> b!141509 m!170027))

(declare-fun m!170029 () Bool)

(assert (=> b!141506 m!170029))

(assert (=> b!140661 d!44545))

(declare-fun lt!74269 () Bool)

(declare-fun d!44547 () Bool)

(assert (=> d!44547 (= lt!74269 (select (content!139 (toList!858 lt!74017)) (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))

(declare-fun e!92215 () Bool)

(assert (=> d!44547 (= lt!74269 e!92215)))

(declare-fun res!67549 () Bool)

(assert (=> d!44547 (=> (not res!67549) (not e!92215))))

(assert (=> d!44547 (= res!67549 ((_ is Cons!1715) (toList!858 lt!74017)))))

(assert (=> d!44547 (= (contains!907 (toList!858 lt!74017) (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) lt!74269)))

(declare-fun b!141510 () Bool)

(declare-fun e!92216 () Bool)

(assert (=> b!141510 (= e!92215 e!92216)))

(declare-fun res!67550 () Bool)

(assert (=> b!141510 (=> res!67550 e!92216)))

(assert (=> b!141510 (= res!67550 (= (h!2322 (toList!858 lt!74017)) (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))

(declare-fun b!141511 () Bool)

(assert (=> b!141511 (= e!92216 (contains!907 (t!6295 (toList!858 lt!74017)) (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))

(assert (= (and d!44547 res!67549) b!141510))

(assert (= (and b!141510 (not res!67550)) b!141511))

(declare-fun m!170031 () Bool)

(assert (=> d!44547 m!170031))

(declare-fun m!170033 () Bool)

(assert (=> d!44547 m!170033))

(declare-fun m!170035 () Bool)

(assert (=> b!141511 m!170035))

(assert (=> b!141076 d!44547))

(assert (=> b!140312 d!43693))

(declare-fun d!44549 () Bool)

(declare-fun e!92217 () Bool)

(assert (=> d!44549 e!92217))

(declare-fun res!67551 () Bool)

(assert (=> d!44549 (=> res!67551 e!92217)))

(declare-fun lt!74273 () Bool)

(assert (=> d!44549 (= res!67551 (not lt!74273))))

(declare-fun lt!74270 () Bool)

(assert (=> d!44549 (= lt!74273 lt!74270)))

(declare-fun lt!74272 () Unit!4387)

(declare-fun e!92218 () Unit!4387)

(assert (=> d!44549 (= lt!74272 e!92218)))

(declare-fun c!26630 () Bool)

(assert (=> d!44549 (= c!26630 lt!74270)))

(assert (=> d!44549 (= lt!74270 (containsKey!180 (toList!858 lt!73954) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44549 (= (contains!904 lt!73954 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74273)))

(declare-fun b!141512 () Bool)

(declare-fun lt!74271 () Unit!4387)

(assert (=> b!141512 (= e!92218 lt!74271)))

(assert (=> b!141512 (= lt!74271 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73954) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> b!141512 (isDefined!129 (getValueByKey!177 (toList!858 lt!73954) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141513 () Bool)

(declare-fun Unit!4466 () Unit!4387)

(assert (=> b!141513 (= e!92218 Unit!4466)))

(declare-fun b!141514 () Bool)

(assert (=> b!141514 (= e!92217 (isDefined!129 (getValueByKey!177 (toList!858 lt!73954) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44549 c!26630) b!141512))

(assert (= (and d!44549 (not c!26630)) b!141513))

(assert (= (and d!44549 (not res!67551)) b!141514))

(declare-fun m!170037 () Bool)

(assert (=> d!44549 m!170037))

(declare-fun m!170039 () Bool)

(assert (=> b!141512 m!170039))

(assert (=> b!141512 m!168831))

(assert (=> b!141512 m!168831))

(declare-fun m!170041 () Bool)

(assert (=> b!141512 m!170041))

(assert (=> b!141514 m!168831))

(assert (=> b!141514 m!168831))

(assert (=> b!141514 m!170041))

(assert (=> d!44117 d!44549))

(declare-fun b!141516 () Bool)

(declare-fun e!92219 () Option!183)

(declare-fun e!92220 () Option!183)

(assert (=> b!141516 (= e!92219 e!92220)))

(declare-fun c!26632 () Bool)

(assert (=> b!141516 (= c!26632 (and ((_ is Cons!1715) lt!73953) (not (= (_1!1322 (h!2322 lt!73953)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141517 () Bool)

(assert (=> b!141517 (= e!92220 (getValueByKey!177 (t!6295 lt!73953) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141515 () Bool)

(assert (=> b!141515 (= e!92219 (Some!182 (_2!1322 (h!2322 lt!73953))))))

(declare-fun b!141518 () Bool)

(assert (=> b!141518 (= e!92220 None!181)))

(declare-fun d!44551 () Bool)

(declare-fun c!26631 () Bool)

(assert (=> d!44551 (= c!26631 (and ((_ is Cons!1715) lt!73953) (= (_1!1322 (h!2322 lt!73953)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44551 (= (getValueByKey!177 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!92219)))

(assert (= (and d!44551 c!26631) b!141515))

(assert (= (and d!44551 (not c!26631)) b!141516))

(assert (= (and b!141516 c!26632) b!141517))

(assert (= (and b!141516 (not c!26632)) b!141518))

(declare-fun m!170043 () Bool)

(assert (=> b!141517 m!170043))

(assert (=> d!44117 d!44551))

(declare-fun d!44553 () Bool)

(assert (=> d!44553 (= (getValueByKey!177 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74274 () Unit!4387)

(assert (=> d!44553 (= lt!74274 (choose!873 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92221 () Bool)

(assert (=> d!44553 e!92221))

(declare-fun res!67552 () Bool)

(assert (=> d!44553 (=> (not res!67552) (not e!92221))))

(assert (=> d!44553 (= res!67552 (isStrictlySorted!312 lt!73953))))

(assert (=> d!44553 (= (lemmaContainsTupThenGetReturnValue!91 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74274)))

(declare-fun b!141519 () Bool)

(declare-fun res!67553 () Bool)

(assert (=> b!141519 (=> (not res!67553) (not e!92221))))

(assert (=> b!141519 (= res!67553 (containsKey!180 lt!73953 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141520 () Bool)

(assert (=> b!141520 (= e!92221 (contains!907 lt!73953 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44553 res!67552) b!141519))

(assert (= (and b!141519 res!67553) b!141520))

(assert (=> d!44553 m!168825))

(declare-fun m!170045 () Bool)

(assert (=> d!44553 m!170045))

(declare-fun m!170047 () Bool)

(assert (=> d!44553 m!170047))

(declare-fun m!170049 () Bool)

(assert (=> b!141519 m!170049))

(declare-fun m!170051 () Bool)

(assert (=> b!141520 m!170051))

(assert (=> d!44117 d!44553))

(declare-fun bm!15688 () Bool)

(declare-fun call!15693 () List!1719)

(declare-fun call!15692 () List!1719)

(assert (=> bm!15688 (= call!15693 call!15692)))

(declare-fun b!141522 () Bool)

(declare-fun e!92223 () List!1719)

(declare-fun e!92225 () List!1719)

(assert (=> b!141522 (= e!92223 e!92225)))

(declare-fun c!26636 () Bool)

(assert (=> b!141522 (= c!26636 (and ((_ is Cons!1715) (toList!858 call!15515)) (= (_1!1322 (h!2322 (toList!858 call!15515))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141523 () Bool)

(declare-fun res!67555 () Bool)

(declare-fun e!92222 () Bool)

(assert (=> b!141523 (=> (not res!67555) (not e!92222))))

(declare-fun lt!74275 () List!1719)

(assert (=> b!141523 (= res!67555 (containsKey!180 lt!74275 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141524 () Bool)

(declare-fun c!26634 () Bool)

(assert (=> b!141524 (= c!26634 (and ((_ is Cons!1715) (toList!858 call!15515)) (bvsgt (_1!1322 (h!2322 (toList!858 call!15515))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92224 () List!1719)

(assert (=> b!141524 (= e!92225 e!92224)))

(declare-fun bm!15689 () Bool)

(declare-fun call!15691 () List!1719)

(assert (=> bm!15689 (= call!15692 call!15691)))

(declare-fun b!141525 () Bool)

(assert (=> b!141525 (= e!92225 call!15692)))

(declare-fun b!141526 () Bool)

(assert (=> b!141526 (= e!92223 call!15691)))

(declare-fun b!141527 () Bool)

(assert (=> b!141527 (= e!92222 (contains!907 lt!74275 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92226 () List!1719)

(declare-fun b!141521 () Bool)

(assert (=> b!141521 (= e!92226 (ite c!26636 (t!6295 (toList!858 call!15515)) (ite c!26634 (Cons!1715 (h!2322 (toList!858 call!15515)) (t!6295 (toList!858 call!15515))) Nil!1716)))))

(declare-fun d!44555 () Bool)

(assert (=> d!44555 e!92222))

(declare-fun res!67554 () Bool)

(assert (=> d!44555 (=> (not res!67554) (not e!92222))))

(assert (=> d!44555 (= res!67554 (isStrictlySorted!312 lt!74275))))

(assert (=> d!44555 (= lt!74275 e!92223)))

(declare-fun c!26635 () Bool)

(assert (=> d!44555 (= c!26635 (and ((_ is Cons!1715) (toList!858 call!15515)) (bvslt (_1!1322 (h!2322 (toList!858 call!15515))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44555 (isStrictlySorted!312 (toList!858 call!15515))))

(assert (=> d!44555 (= (insertStrictlySorted!94 (toList!858 call!15515) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74275)))

(declare-fun b!141528 () Bool)

(assert (=> b!141528 (= e!92224 call!15693)))

(declare-fun b!141529 () Bool)

(assert (=> b!141529 (= e!92224 call!15693)))

(declare-fun bm!15690 () Bool)

(assert (=> bm!15690 (= call!15691 ($colon$colon!93 e!92226 (ite c!26635 (h!2322 (toList!858 call!15515)) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun c!26633 () Bool)

(assert (=> bm!15690 (= c!26633 c!26635)))

(declare-fun b!141530 () Bool)

(assert (=> b!141530 (= e!92226 (insertStrictlySorted!94 (t!6295 (toList!858 call!15515)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44555 c!26635) b!141526))

(assert (= (and d!44555 (not c!26635)) b!141522))

(assert (= (and b!141522 c!26636) b!141525))

(assert (= (and b!141522 (not c!26636)) b!141524))

(assert (= (and b!141524 c!26634) b!141528))

(assert (= (and b!141524 (not c!26634)) b!141529))

(assert (= (or b!141528 b!141529) bm!15688))

(assert (= (or b!141525 bm!15688) bm!15689))

(assert (= (or b!141526 bm!15689) bm!15690))

(assert (= (and bm!15690 c!26633) b!141530))

(assert (= (and bm!15690 (not c!26633)) b!141521))

(assert (= (and d!44555 res!67554) b!141523))

(assert (= (and b!141523 res!67555) b!141527))

(declare-fun m!170053 () Bool)

(assert (=> bm!15690 m!170053))

(declare-fun m!170055 () Bool)

(assert (=> d!44555 m!170055))

(declare-fun m!170057 () Bool)

(assert (=> d!44555 m!170057))

(declare-fun m!170059 () Bool)

(assert (=> b!141523 m!170059))

(declare-fun m!170061 () Bool)

(assert (=> b!141530 m!170061))

(declare-fun m!170063 () Bool)

(assert (=> b!141527 m!170063))

(assert (=> d!44117 d!44555))

(assert (=> d!44185 d!44187))

(assert (=> d!44185 d!44163))

(declare-fun d!44557 () Bool)

(assert (=> d!44557 (contains!904 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) lt!73247)))

(assert (=> d!44557 true))

(declare-fun _$35!392 () Unit!4387)

(assert (=> d!44557 (= (choose!866 lt!73241 lt!73243 (zeroValue!2789 newMap!16) lt!73247) _$35!392)))

(declare-fun bs!5956 () Bool)

(assert (= bs!5956 d!44557))

(assert (=> bs!5956 m!166987))

(assert (=> bs!5956 m!166987))

(assert (=> bs!5956 m!166989))

(assert (=> d!44185 d!44557))

(declare-fun d!44559 () Bool)

(declare-fun e!92227 () Bool)

(assert (=> d!44559 e!92227))

(declare-fun res!67556 () Bool)

(assert (=> d!44559 (=> res!67556 e!92227)))

(declare-fun lt!74279 () Bool)

(assert (=> d!44559 (= res!67556 (not lt!74279))))

(declare-fun lt!74276 () Bool)

(assert (=> d!44559 (= lt!74279 lt!74276)))

(declare-fun lt!74278 () Unit!4387)

(declare-fun e!92228 () Unit!4387)

(assert (=> d!44559 (= lt!74278 e!92228)))

(declare-fun c!26637 () Bool)

(assert (=> d!44559 (= c!26637 lt!74276)))

(assert (=> d!44559 (= lt!74276 (containsKey!180 (toList!858 lt!73241) lt!73247))))

(assert (=> d!44559 (= (contains!904 lt!73241 lt!73247) lt!74279)))

(declare-fun b!141531 () Bool)

(declare-fun lt!74277 () Unit!4387)

(assert (=> b!141531 (= e!92228 lt!74277)))

(assert (=> b!141531 (= lt!74277 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73241) lt!73247))))

(assert (=> b!141531 (isDefined!129 (getValueByKey!177 (toList!858 lt!73241) lt!73247))))

(declare-fun b!141532 () Bool)

(declare-fun Unit!4467 () Unit!4387)

(assert (=> b!141532 (= e!92228 Unit!4467)))

(declare-fun b!141533 () Bool)

(assert (=> b!141533 (= e!92227 (isDefined!129 (getValueByKey!177 (toList!858 lt!73241) lt!73247)))))

(assert (= (and d!44559 c!26637) b!141531))

(assert (= (and d!44559 (not c!26637)) b!141532))

(assert (= (and d!44559 (not res!67556)) b!141533))

(declare-fun m!170065 () Bool)

(assert (=> d!44559 m!170065))

(declare-fun m!170067 () Bool)

(assert (=> b!141531 m!170067))

(declare-fun m!170069 () Bool)

(assert (=> b!141531 m!170069))

(assert (=> b!141531 m!170069))

(declare-fun m!170071 () Bool)

(assert (=> b!141531 m!170071))

(assert (=> b!141533 m!170069))

(assert (=> b!141533 m!170069))

(assert (=> b!141533 m!170071))

(assert (=> d!44185 d!44559))

(declare-fun d!44561 () Bool)

(declare-fun e!92229 () Bool)

(assert (=> d!44561 e!92229))

(declare-fun res!67557 () Bool)

(assert (=> d!44561 (=> res!67557 e!92229)))

(declare-fun lt!74283 () Bool)

(assert (=> d!44561 (= res!67557 (not lt!74283))))

(declare-fun lt!74280 () Bool)

(assert (=> d!44561 (= lt!74283 lt!74280)))

(declare-fun lt!74282 () Unit!4387)

(declare-fun e!92230 () Unit!4387)

(assert (=> d!44561 (= lt!74282 e!92230)))

(declare-fun c!26638 () Bool)

(assert (=> d!44561 (= c!26638 lt!74280)))

(assert (=> d!44561 (= lt!74280 (containsKey!180 (toList!858 lt!73514) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44561 (= (contains!904 lt!73514 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74283)))

(declare-fun b!141534 () Bool)

(declare-fun lt!74281 () Unit!4387)

(assert (=> b!141534 (= e!92230 lt!74281)))

(assert (=> b!141534 (= lt!74281 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73514) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141534 (isDefined!129 (getValueByKey!177 (toList!858 lt!73514) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141535 () Bool)

(declare-fun Unit!4468 () Unit!4387)

(assert (=> b!141535 (= e!92230 Unit!4468)))

(declare-fun b!141536 () Bool)

(assert (=> b!141536 (= e!92229 (isDefined!129 (getValueByKey!177 (toList!858 lt!73514) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44561 c!26638) b!141534))

(assert (= (and d!44561 (not c!26638)) b!141535))

(assert (= (and d!44561 (not res!67557)) b!141536))

(declare-fun m!170073 () Bool)

(assert (=> d!44561 m!170073))

(declare-fun m!170075 () Bool)

(assert (=> b!141534 m!170075))

(declare-fun m!170077 () Bool)

(assert (=> b!141534 m!170077))

(assert (=> b!141534 m!170077))

(declare-fun m!170079 () Bool)

(assert (=> b!141534 m!170079))

(assert (=> b!141536 m!170077))

(assert (=> b!141536 m!170077))

(assert (=> b!141536 m!170079))

(assert (=> bm!15557 d!44561))

(declare-fun d!44563 () Bool)

(assert (=> d!44563 (isDefined!129 (getValueByKey!177 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74284 () Unit!4387)

(assert (=> d!44563 (= lt!74284 (choose!864 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92231 () Bool)

(assert (=> d!44563 e!92231))

(declare-fun res!67558 () Bool)

(assert (=> d!44563 (=> (not res!67558) (not e!92231))))

(assert (=> d!44563 (= res!67558 (isStrictlySorted!312 (toList!858 lt!73279)))))

(assert (=> d!44563 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74284)))

(declare-fun b!141537 () Bool)

(assert (=> b!141537 (= e!92231 (containsKey!180 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44563 res!67558) b!141537))

(assert (=> d!44563 m!167073))

(assert (=> d!44563 m!167073))

(assert (=> d!44563 m!168269))

(declare-fun m!170081 () Bool)

(assert (=> d!44563 m!170081))

(declare-fun m!170083 () Bool)

(assert (=> d!44563 m!170083))

(assert (=> b!141537 m!168265))

(assert (=> b!140706 d!44563))

(assert (=> b!140706 d!44267))

(assert (=> b!140706 d!43819))

(declare-fun d!44565 () Bool)

(declare-fun lt!74285 () Bool)

(assert (=> d!44565 (= lt!74285 (select (content!139 lt!73464) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92232 () Bool)

(assert (=> d!44565 (= lt!74285 e!92232)))

(declare-fun res!67559 () Bool)

(assert (=> d!44565 (=> (not res!67559) (not e!92232))))

(assert (=> d!44565 (= res!67559 ((_ is Cons!1715) lt!73464))))

(assert (=> d!44565 (= (contains!907 lt!73464 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74285)))

(declare-fun b!141538 () Bool)

(declare-fun e!92233 () Bool)

(assert (=> b!141538 (= e!92232 e!92233)))

(declare-fun res!67560 () Bool)

(assert (=> b!141538 (=> res!67560 e!92233)))

(assert (=> b!141538 (= res!67560 (= (h!2322 lt!73464) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141539 () Bool)

(assert (=> b!141539 (= e!92233 (contains!907 (t!6295 lt!73464) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44565 res!67559) b!141538))

(assert (= (and b!141538 (not res!67560)) b!141539))

(declare-fun m!170085 () Bool)

(assert (=> d!44565 m!170085))

(declare-fun m!170087 () Bool)

(assert (=> d!44565 m!170087))

(declare-fun m!170089 () Bool)

(assert (=> b!141539 m!170089))

(assert (=> b!141043 d!44565))

(declare-fun d!44567 () Bool)

(assert (=> d!44567 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5957 () Bool)

(assert (= bs!5957 d!44567))

(assert (=> bs!5957 m!167705))

(declare-fun m!170091 () Bool)

(assert (=> bs!5957 m!170091))

(assert (=> b!140457 d!44567))

(declare-fun b!141541 () Bool)

(declare-fun e!92234 () Option!183)

(declare-fun e!92235 () Option!183)

(assert (=> b!141541 (= e!92234 e!92235)))

(declare-fun c!26640 () Bool)

(assert (=> b!141541 (= c!26640 (and ((_ is Cons!1715) (toList!858 lt!73237)) (not (= (_1!1322 (h!2322 (toList!858 lt!73237))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141542 () Bool)

(assert (=> b!141542 (= e!92235 (getValueByKey!177 (t!6295 (toList!858 lt!73237)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141540 () Bool)

(assert (=> b!141540 (= e!92234 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73237)))))))

(declare-fun b!141543 () Bool)

(assert (=> b!141543 (= e!92235 None!181)))

(declare-fun d!44569 () Bool)

(declare-fun c!26639 () Bool)

(assert (=> d!44569 (= c!26639 (and ((_ is Cons!1715) (toList!858 lt!73237)) (= (_1!1322 (h!2322 (toList!858 lt!73237))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44569 (= (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000) e!92234)))

(assert (= (and d!44569 c!26639) b!141540))

(assert (= (and d!44569 (not c!26639)) b!141541))

(assert (= (and b!141541 c!26640) b!141542))

(assert (= (and b!141541 (not c!26640)) b!141543))

(declare-fun m!170093 () Bool)

(assert (=> b!141542 m!170093))

(assert (=> b!140457 d!44569))

(declare-fun d!44571 () Bool)

(declare-fun res!67561 () Bool)

(declare-fun e!92236 () Bool)

(assert (=> d!44571 (=> res!67561 e!92236)))

(assert (=> d!44571 (= res!67561 (and ((_ is Cons!1715) lt!73424) (= (_1!1322 (h!2322 lt!73424)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44571 (= (containsKey!180 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92236)))

(declare-fun b!141544 () Bool)

(declare-fun e!92237 () Bool)

(assert (=> b!141544 (= e!92236 e!92237)))

(declare-fun res!67562 () Bool)

(assert (=> b!141544 (=> (not res!67562) (not e!92237))))

(assert (=> b!141544 (= res!67562 (and (or (not ((_ is Cons!1715) lt!73424)) (bvsle (_1!1322 (h!2322 lt!73424)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73424) (bvslt (_1!1322 (h!2322 lt!73424)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141545 () Bool)

(assert (=> b!141545 (= e!92237 (containsKey!180 (t!6295 lt!73424) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44571 (not res!67561)) b!141544))

(assert (= (and b!141544 res!67562) b!141545))

(declare-fun m!170095 () Bool)

(assert (=> b!141545 m!170095))

(assert (=> b!140630 d!44571))

(declare-fun d!44573 () Bool)

(assert (=> d!44573 (arrayContainsKey!0 (_keys!4698 (_2!1323 lt!73124)) lt!73934 #b00000000000000000000000000000000)))

(declare-fun lt!74286 () Unit!4387)

(assert (=> d!44573 (= lt!74286 (choose!13 (_keys!4698 (_2!1323 lt!73124)) lt!73934 #b00000000000000000000000000000000))))

(assert (=> d!44573 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44573 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (_2!1323 lt!73124)) lt!73934 #b00000000000000000000000000000000) lt!74286)))

(declare-fun bs!5958 () Bool)

(assert (= bs!5958 d!44573))

(assert (=> bs!5958 m!168731))

(declare-fun m!170097 () Bool)

(assert (=> bs!5958 m!170097))

(assert (=> b!140935 d!44573))

(declare-fun d!44575 () Bool)

(declare-fun res!67563 () Bool)

(declare-fun e!92238 () Bool)

(assert (=> d!44575 (=> res!67563 e!92238)))

(assert (=> d!44575 (= res!67563 (= (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) lt!73934))))

(assert (=> d!44575 (= (arrayContainsKey!0 (_keys!4698 (_2!1323 lt!73124)) lt!73934 #b00000000000000000000000000000000) e!92238)))

(declare-fun b!141546 () Bool)

(declare-fun e!92239 () Bool)

(assert (=> b!141546 (= e!92238 e!92239)))

(declare-fun res!67564 () Bool)

(assert (=> b!141546 (=> (not res!67564) (not e!92239))))

(assert (=> b!141546 (= res!67564 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun b!141547 () Bool)

(assert (=> b!141547 (= e!92239 (arrayContainsKey!0 (_keys!4698 (_2!1323 lt!73124)) lt!73934 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44575 (not res!67563)) b!141546))

(assert (= (and b!141546 res!67564) b!141547))

(assert (=> d!44575 m!168391))

(declare-fun m!170099 () Bool)

(assert (=> b!141547 m!170099))

(assert (=> b!140935 d!44575))

(declare-fun b!141548 () Bool)

(declare-fun e!92240 () SeekEntryResult!273)

(declare-fun e!92241 () SeekEntryResult!273)

(assert (=> b!141548 (= e!92240 e!92241)))

(declare-fun lt!74289 () (_ BitVec 64))

(declare-fun lt!74288 () SeekEntryResult!273)

(assert (=> b!141548 (= lt!74289 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (index!3257 lt!74288)))))

(declare-fun c!26642 () Bool)

(assert (=> b!141548 (= c!26642 (= lt!74289 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!141549 () Bool)

(declare-fun c!26641 () Bool)

(assert (=> b!141549 (= c!26641 (= lt!74289 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92242 () SeekEntryResult!273)

(assert (=> b!141549 (= e!92241 e!92242)))

(declare-fun b!141550 () Bool)

(assert (=> b!141550 (= e!92240 Undefined!273)))

(declare-fun d!44577 () Bool)

(declare-fun lt!74287 () SeekEntryResult!273)

(assert (=> d!44577 (and (or ((_ is Undefined!273) lt!74287) (not ((_ is Found!273) lt!74287)) (and (bvsge (index!3256 lt!74287) #b00000000000000000000000000000000) (bvslt (index!3256 lt!74287) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))) (or ((_ is Undefined!273) lt!74287) ((_ is Found!273) lt!74287) (not ((_ is MissingZero!273) lt!74287)) (and (bvsge (index!3255 lt!74287) #b00000000000000000000000000000000) (bvslt (index!3255 lt!74287) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))) (or ((_ is Undefined!273) lt!74287) ((_ is Found!273) lt!74287) ((_ is MissingZero!273) lt!74287) (not ((_ is MissingVacant!273) lt!74287)) (and (bvsge (index!3258 lt!74287) #b00000000000000000000000000000000) (bvslt (index!3258 lt!74287) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))) (or ((_ is Undefined!273) lt!74287) (ite ((_ is Found!273) lt!74287) (= (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (index!3256 lt!74287)) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!273) lt!74287) (= (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (index!3255 lt!74287)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!273) lt!74287) (= (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (index!3258 lt!74287)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44577 (= lt!74287 e!92240)))

(declare-fun c!26643 () Bool)

(assert (=> d!44577 (= c!26643 (and ((_ is Intermediate!273) lt!74288) (undefined!1085 lt!74288)))))

(assert (=> d!44577 (= lt!74288 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (mask!7279 (_2!1323 lt!73124))) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))))))

(assert (=> d!44577 (validMask!0 (mask!7279 (_2!1323 lt!73124)))))

(assert (=> d!44577 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))) lt!74287)))

(declare-fun b!141551 () Bool)

(assert (=> b!141551 (= e!92242 (MissingZero!273 (index!3257 lt!74288)))))

(declare-fun b!141552 () Bool)

(assert (=> b!141552 (= e!92242 (seekKeyOrZeroReturnVacant!0 (x!16130 lt!74288) (index!3257 lt!74288) (index!3257 lt!74288) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))))))

(declare-fun b!141553 () Bool)

(assert (=> b!141553 (= e!92241 (Found!273 (index!3257 lt!74288)))))

(assert (= (and d!44577 c!26643) b!141550))

(assert (= (and d!44577 (not c!26643)) b!141548))

(assert (= (and b!141548 c!26642) b!141553))

(assert (= (and b!141548 (not c!26642)) b!141549))

(assert (= (and b!141549 c!26641) b!141551))

(assert (= (and b!141549 (not c!26641)) b!141552))

(declare-fun m!170101 () Bool)

(assert (=> b!141548 m!170101))

(assert (=> d!44577 m!168391))

(declare-fun m!170103 () Bool)

(assert (=> d!44577 m!170103))

(assert (=> d!44577 m!170103))

(assert (=> d!44577 m!168391))

(declare-fun m!170105 () Bool)

(assert (=> d!44577 m!170105))

(assert (=> d!44577 m!167829))

(declare-fun m!170107 () Bool)

(assert (=> d!44577 m!170107))

(declare-fun m!170109 () Bool)

(assert (=> d!44577 m!170109))

(declare-fun m!170111 () Bool)

(assert (=> d!44577 m!170111))

(assert (=> b!141552 m!168391))

(declare-fun m!170113 () Bool)

(assert (=> b!141552 m!170113))

(assert (=> b!140935 d!44577))

(declare-fun d!44579 () Bool)

(assert (=> d!44579 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74290 () Unit!4387)

(assert (=> d!44579 (= lt!74290 (choose!864 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92243 () Bool)

(assert (=> d!44579 e!92243))

(declare-fun res!67565 () Bool)

(assert (=> d!44579 (=> (not res!67565) (not e!92243))))

(assert (=> d!44579 (= res!67565 (isStrictlySorted!312 (toList!858 lt!73215)))))

(assert (=> d!44579 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74290)))

(declare-fun b!141554 () Bool)

(assert (=> b!141554 (= e!92243 (containsKey!180 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44579 res!67565) b!141554))

(assert (=> d!44579 m!168741))

(assert (=> d!44579 m!168741))

(assert (=> d!44579 m!168757))

(declare-fun m!170115 () Bool)

(assert (=> d!44579 m!170115))

(declare-fun m!170117 () Bool)

(assert (=> d!44579 m!170117))

(assert (=> b!141554 m!168753))

(assert (=> b!140949 d!44579))

(assert (=> b!140949 d!44263))

(assert (=> b!140949 d!44265))

(declare-fun d!44581 () Bool)

(declare-fun c!26644 () Bool)

(assert (=> d!44581 (= c!26644 ((_ is Nil!1716) (toList!858 lt!73425)))))

(declare-fun e!92244 () (InoxSet tuple2!2622))

(assert (=> d!44581 (= (content!139 (toList!858 lt!73425)) e!92244)))

(declare-fun b!141555 () Bool)

(assert (=> b!141555 (= e!92244 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!141556 () Bool)

(assert (=> b!141556 (= e!92244 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73425)) true) (content!139 (t!6295 (toList!858 lt!73425)))))))

(assert (= (and d!44581 c!26644) b!141555))

(assert (= (and d!44581 (not c!26644)) b!141556))

(declare-fun m!170119 () Bool)

(assert (=> b!141556 m!170119))

(declare-fun m!170121 () Bool)

(assert (=> b!141556 m!170121))

(assert (=> d!43965 d!44581))

(declare-fun d!44583 () Bool)

(assert (=> d!44583 (= (apply!120 lt!73889 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73889) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5959 () Bool)

(assert (= bs!5959 d!44583))

(assert (=> bs!5959 m!166927))

(declare-fun m!170123 () Bool)

(assert (=> bs!5959 m!170123))

(assert (=> bs!5959 m!170123))

(declare-fun m!170125 () Bool)

(assert (=> bs!5959 m!170125))

(assert (=> b!140883 d!44583))

(assert (=> b!140883 d!44107))

(declare-fun lt!74291 () Bool)

(declare-fun d!44585 () Bool)

(assert (=> d!44585 (= lt!74291 (select (content!139 (t!6295 (toList!858 lt!73470))) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!92245 () Bool)

(assert (=> d!44585 (= lt!74291 e!92245)))

(declare-fun res!67566 () Bool)

(assert (=> d!44585 (=> (not res!67566) (not e!92245))))

(assert (=> d!44585 (= res!67566 ((_ is Cons!1715) (t!6295 (toList!858 lt!73470))))))

(assert (=> d!44585 (= (contains!907 (t!6295 (toList!858 lt!73470)) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!74291)))

(declare-fun b!141557 () Bool)

(declare-fun e!92246 () Bool)

(assert (=> b!141557 (= e!92245 e!92246)))

(declare-fun res!67567 () Bool)

(assert (=> b!141557 (=> res!67567 e!92246)))

(assert (=> b!141557 (= res!67567 (= (h!2322 (t!6295 (toList!858 lt!73470))) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141558 () Bool)

(assert (=> b!141558 (= e!92246 (contains!907 (t!6295 (t!6295 (toList!858 lt!73470))) (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!44585 res!67566) b!141557))

(assert (= (and b!141557 (not res!67567)) b!141558))

(declare-fun m!170127 () Bool)

(assert (=> d!44585 m!170127))

(declare-fun m!170129 () Bool)

(assert (=> d!44585 m!170129))

(declare-fun m!170131 () Bool)

(assert (=> b!141558 m!170131))

(assert (=> b!140948 d!44585))

(assert (=> b!140610 d!44319))

(declare-fun d!44587 () Bool)

(declare-fun lt!74292 () Bool)

(assert (=> d!44587 (= lt!74292 (select (content!139 lt!73289) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92247 () Bool)

(assert (=> d!44587 (= lt!74292 e!92247)))

(declare-fun res!67568 () Bool)

(assert (=> d!44587 (=> (not res!67568) (not e!92247))))

(assert (=> d!44587 (= res!67568 ((_ is Cons!1715) lt!73289))))

(assert (=> d!44587 (= (contains!907 lt!73289 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74292)))

(declare-fun b!141559 () Bool)

(declare-fun e!92248 () Bool)

(assert (=> b!141559 (= e!92247 e!92248)))

(declare-fun res!67569 () Bool)

(assert (=> b!141559 (=> res!67569 e!92248)))

(assert (=> b!141559 (= res!67569 (= (h!2322 lt!73289) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141560 () Bool)

(assert (=> b!141560 (= e!92248 (contains!907 (t!6295 lt!73289) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44587 res!67568) b!141559))

(assert (= (and b!141559 (not res!67569)) b!141560))

(declare-fun m!170133 () Bool)

(assert (=> d!44587 m!170133))

(declare-fun m!170135 () Bool)

(assert (=> d!44587 m!170135))

(declare-fun m!170137 () Bool)

(assert (=> b!141560 m!170137))

(assert (=> b!140670 d!44587))

(declare-fun d!44589 () Bool)

(declare-fun res!67570 () Bool)

(declare-fun e!92249 () Bool)

(assert (=> d!44589 (=> res!67570 e!92249)))

(assert (=> d!44589 (= res!67570 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!44589 (= (containsKey!180 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92249)))

(declare-fun b!141561 () Bool)

(declare-fun e!92250 () Bool)

(assert (=> b!141561 (= e!92249 e!92250)))

(declare-fun res!67571 () Bool)

(assert (=> b!141561 (=> (not res!67571) (not e!92250))))

(assert (=> b!141561 (= res!67571 (and (or (not ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (bvsle (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!141562 () Bool)

(assert (=> b!141562 (= e!92250 (containsKey!180 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!44589 (not res!67570)) b!141561))

(assert (= (and b!141561 res!67571) b!141562))

(assert (=> b!141562 m!166633))

(declare-fun m!170139 () Bool)

(assert (=> b!141562 m!170139))

(assert (=> d!43855 d!44589))

(declare-fun d!44591 () Bool)

(declare-fun e!92251 () Bool)

(assert (=> d!44591 e!92251))

(declare-fun res!67572 () Bool)

(assert (=> d!44591 (=> (not res!67572) (not e!92251))))

(declare-fun lt!74295 () ListLongMap!1685)

(assert (=> d!44591 (= res!67572 (contains!904 lt!74295 (_1!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74294 () List!1719)

(assert (=> d!44591 (= lt!74295 (ListLongMap!1686 lt!74294))))

(declare-fun lt!74293 () Unit!4387)

(declare-fun lt!74296 () Unit!4387)

(assert (=> d!44591 (= lt!74293 lt!74296)))

(assert (=> d!44591 (= (getValueByKey!177 lt!74294 (_1!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44591 (= lt!74296 (lemmaContainsTupThenGetReturnValue!91 lt!74294 (_1!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44591 (= lt!74294 (insertStrictlySorted!94 (toList!858 (ite c!26488 call!15648 (ite c!26489 call!15647 call!15649))) (_1!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44591 (= (+!173 (ite c!26488 call!15648 (ite c!26489 call!15647 call!15649)) (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74295)))

(declare-fun b!141563 () Bool)

(declare-fun res!67573 () Bool)

(assert (=> b!141563 (=> (not res!67573) (not e!92251))))

(assert (=> b!141563 (= res!67573 (= (getValueByKey!177 (toList!858 lt!74295) (_1!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141564 () Bool)

(assert (=> b!141564 (= e!92251 (contains!907 (toList!858 lt!74295) (ite (or c!26488 c!26489) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44591 res!67572) b!141563))

(assert (= (and b!141563 res!67573) b!141564))

(declare-fun m!170141 () Bool)

(assert (=> d!44591 m!170141))

(declare-fun m!170143 () Bool)

(assert (=> d!44591 m!170143))

(declare-fun m!170145 () Bool)

(assert (=> d!44591 m!170145))

(declare-fun m!170147 () Bool)

(assert (=> d!44591 m!170147))

(declare-fun m!170149 () Bool)

(assert (=> b!141563 m!170149))

(declare-fun m!170151 () Bool)

(assert (=> b!141564 m!170151))

(assert (=> bm!15646 d!44591))

(declare-fun d!44593 () Bool)

(assert (=> d!44593 (= (isEmpty!423 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not ((_ is Some!182) (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(assert (=> d!43975 d!44593))

(declare-fun d!44595 () Bool)

(declare-fun res!67574 () Bool)

(declare-fun e!92252 () Bool)

(assert (=> d!44595 (=> res!67574 e!92252)))

(assert (=> d!44595 (= res!67574 (= (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!44595 (= (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92252)))

(declare-fun b!141565 () Bool)

(declare-fun e!92253 () Bool)

(assert (=> b!141565 (= e!92252 e!92253)))

(declare-fun res!67575 () Bool)

(assert (=> b!141565 (=> (not res!67575) (not e!92253))))

(assert (=> b!141565 (= res!67575 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141566 () Bool)

(assert (=> b!141566 (= e!92253 (arrayContainsKey!0 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44595 (not res!67574)) b!141565))

(assert (= (and b!141565 res!67575) b!141566))

(assert (=> d!44595 m!169995))

(assert (=> b!141566 m!166633))

(declare-fun m!170153 () Bool)

(assert (=> b!141566 m!170153))

(assert (=> b!140963 d!44595))

(declare-fun d!44597 () Bool)

(declare-fun e!92254 () Bool)

(assert (=> d!44597 e!92254))

(declare-fun res!67576 () Bool)

(assert (=> d!44597 (=> res!67576 e!92254)))

(declare-fun lt!74300 () Bool)

(assert (=> d!44597 (= res!67576 (not lt!74300))))

(declare-fun lt!74297 () Bool)

(assert (=> d!44597 (= lt!74300 lt!74297)))

(declare-fun lt!74299 () Unit!4387)

(declare-fun e!92255 () Unit!4387)

(assert (=> d!44597 (= lt!74299 e!92255)))

(declare-fun c!26645 () Bool)

(assert (=> d!44597 (= c!26645 lt!74297)))

(assert (=> d!44597 (= lt!74297 (containsKey!180 (toList!858 lt!73553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44597 (= (contains!904 lt!73553 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74300)))

(declare-fun b!141567 () Bool)

(declare-fun lt!74298 () Unit!4387)

(assert (=> b!141567 (= e!92255 lt!74298)))

(assert (=> b!141567 (= lt!74298 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141567 (isDefined!129 (getValueByKey!177 (toList!858 lt!73553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141568 () Bool)

(declare-fun Unit!4469 () Unit!4387)

(assert (=> b!141568 (= e!92255 Unit!4469)))

(declare-fun b!141569 () Bool)

(assert (=> b!141569 (= e!92254 (isDefined!129 (getValueByKey!177 (toList!858 lt!73553) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44597 c!26645) b!141567))

(assert (= (and d!44597 (not c!26645)) b!141568))

(assert (= (and d!44597 (not res!67576)) b!141569))

(declare-fun m!170155 () Bool)

(assert (=> d!44597 m!170155))

(declare-fun m!170157 () Bool)

(assert (=> b!141567 m!170157))

(declare-fun m!170159 () Bool)

(assert (=> b!141567 m!170159))

(assert (=> b!141567 m!170159))

(declare-fun m!170161 () Bool)

(assert (=> b!141567 m!170161))

(assert (=> b!141569 m!170159))

(assert (=> b!141569 m!170159))

(assert (=> b!141569 m!170161))

(assert (=> d!43741 d!44597))

(assert (=> d!43741 d!43697))

(declare-fun d!44599 () Bool)

(assert (=> d!44599 (= (get!1535 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43927 d!44599))

(declare-fun b!141571 () Bool)

(declare-fun e!92256 () Option!183)

(declare-fun e!92257 () Option!183)

(assert (=> b!141571 (= e!92256 e!92257)))

(declare-fun c!26647 () Bool)

(assert (=> b!141571 (= c!26647 (and ((_ is Cons!1715) (toList!858 lt!73237)) (not (= (_1!1322 (h!2322 (toList!858 lt!73237))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141572 () Bool)

(assert (=> b!141572 (= e!92257 (getValueByKey!177 (t!6295 (toList!858 lt!73237)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141570 () Bool)

(assert (=> b!141570 (= e!92256 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73237)))))))

(declare-fun b!141573 () Bool)

(assert (=> b!141573 (= e!92257 None!181)))

(declare-fun d!44601 () Bool)

(declare-fun c!26646 () Bool)

(assert (=> d!44601 (= c!26646 (and ((_ is Cons!1715) (toList!858 lt!73237)) (= (_1!1322 (h!2322 (toList!858 lt!73237))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44601 (= (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000) e!92256)))

(assert (= (and d!44601 c!26646) b!141570))

(assert (= (and d!44601 (not c!26646)) b!141571))

(assert (= (and b!141571 c!26647) b!141572))

(assert (= (and b!141571 (not c!26647)) b!141573))

(declare-fun m!170163 () Bool)

(assert (=> b!141572 m!170163))

(assert (=> d!43927 d!44601))

(declare-fun bm!15691 () Bool)

(declare-fun call!15694 () Bool)

(declare-fun c!26648 () Bool)

(assert (=> bm!15691 (= call!15694 (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73410)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26648 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun b!141574 () Bool)

(declare-fun e!92258 () Bool)

(declare-fun e!92259 () Bool)

(assert (=> b!141574 (= e!92258 e!92259)))

(declare-fun res!67579 () Bool)

(assert (=> b!141574 (=> (not res!67579) (not e!92259))))

(declare-fun e!92261 () Bool)

(assert (=> b!141574 (= res!67579 (not e!92261))))

(declare-fun res!67577 () Bool)

(assert (=> b!141574 (=> (not res!67577) (not e!92261))))

(assert (=> b!141574 (= res!67577 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(declare-fun b!141575 () Bool)

(declare-fun e!92260 () Bool)

(assert (=> b!141575 (= e!92260 call!15694)))

(declare-fun b!141576 () Bool)

(assert (=> b!141576 (= e!92259 e!92260)))

(assert (=> b!141576 (= c!26648 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(declare-fun d!44603 () Bool)

(declare-fun res!67578 () Bool)

(assert (=> d!44603 (=> res!67578 e!92258)))

(assert (=> d!44603 (= res!67578 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(assert (=> d!44603 (= (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73410)) #b00000000000000000000000000000000 Nil!1717) e!92258)))

(declare-fun b!141577 () Bool)

(assert (=> b!141577 (= e!92260 call!15694)))

(declare-fun b!141578 () Bool)

(assert (=> b!141578 (= e!92261 (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(assert (= (and d!44603 (not res!67578)) b!141574))

(assert (= (and b!141574 res!67577) b!141578))

(assert (= (and b!141574 res!67579) b!141576))

(assert (= (and b!141576 c!26648) b!141575))

(assert (= (and b!141576 (not c!26648)) b!141577))

(assert (= (or b!141575 b!141577) bm!15691))

(assert (=> bm!15691 m!169907))

(declare-fun m!170165 () Bool)

(assert (=> bm!15691 m!170165))

(assert (=> b!141574 m!169907))

(assert (=> b!141574 m!169907))

(assert (=> b!141574 m!169909))

(assert (=> b!141576 m!169907))

(assert (=> b!141576 m!169907))

(assert (=> b!141576 m!169909))

(assert (=> b!141578 m!169907))

(assert (=> b!141578 m!169907))

(declare-fun m!170167 () Bool)

(assert (=> b!141578 m!170167))

(assert (=> b!140463 d!44603))

(declare-fun d!44605 () Bool)

(declare-fun e!92262 () Bool)

(assert (=> d!44605 e!92262))

(declare-fun res!67580 () Bool)

(assert (=> d!44605 (=> res!67580 e!92262)))

(declare-fun lt!74304 () Bool)

(assert (=> d!44605 (= res!67580 (not lt!74304))))

(declare-fun lt!74301 () Bool)

(assert (=> d!44605 (= lt!74304 lt!74301)))

(declare-fun lt!74303 () Unit!4387)

(declare-fun e!92263 () Unit!4387)

(assert (=> d!44605 (= lt!74303 e!92263)))

(declare-fun c!26649 () Bool)

(assert (=> d!44605 (= c!26649 lt!74301)))

(assert (=> d!44605 (= lt!74301 (containsKey!180 (toList!858 lt!73587) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44605 (= (contains!904 lt!73587 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74304)))

(declare-fun b!141579 () Bool)

(declare-fun lt!74302 () Unit!4387)

(assert (=> b!141579 (= e!92263 lt!74302)))

(assert (=> b!141579 (= lt!74302 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73587) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141579 (isDefined!129 (getValueByKey!177 (toList!858 lt!73587) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141580 () Bool)

(declare-fun Unit!4470 () Unit!4387)

(assert (=> b!141580 (= e!92263 Unit!4470)))

(declare-fun b!141581 () Bool)

(assert (=> b!141581 (= e!92262 (isDefined!129 (getValueByKey!177 (toList!858 lt!73587) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44605 c!26649) b!141579))

(assert (= (and d!44605 (not c!26649)) b!141580))

(assert (= (and d!44605 (not res!67580)) b!141581))

(declare-fun m!170169 () Bool)

(assert (=> d!44605 m!170169))

(declare-fun m!170171 () Bool)

(assert (=> b!141579 m!170171))

(declare-fun m!170173 () Bool)

(assert (=> b!141579 m!170173))

(assert (=> b!141579 m!170173))

(declare-fun m!170175 () Bool)

(assert (=> b!141579 m!170175))

(assert (=> b!141581 m!170173))

(assert (=> b!141581 m!170173))

(assert (=> b!141581 m!170175))

(assert (=> b!140363 d!44605))

(assert (=> b!140597 d!43863))

(declare-fun d!44607 () Bool)

(declare-fun e!92264 () Bool)

(assert (=> d!44607 e!92264))

(declare-fun res!67581 () Bool)

(assert (=> d!44607 (=> res!67581 e!92264)))

(declare-fun lt!74308 () Bool)

(assert (=> d!44607 (= res!67581 (not lt!74308))))

(declare-fun lt!74305 () Bool)

(assert (=> d!44607 (= lt!74308 lt!74305)))

(declare-fun lt!74307 () Unit!4387)

(declare-fun e!92265 () Unit!4387)

(assert (=> d!44607 (= lt!74307 e!92265)))

(declare-fun c!26650 () Bool)

(assert (=> d!44607 (= c!26650 lt!74305)))

(assert (=> d!44607 (= lt!74305 (containsKey!180 (toList!858 lt!74012) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44607 (= (contains!904 lt!74012 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!74308)))

(declare-fun b!141582 () Bool)

(declare-fun lt!74306 () Unit!4387)

(assert (=> b!141582 (= e!92265 lt!74306)))

(assert (=> b!141582 (= lt!74306 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!74012) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(assert (=> b!141582 (isDefined!129 (getValueByKey!177 (toList!858 lt!74012) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141583 () Bool)

(declare-fun Unit!4471 () Unit!4387)

(assert (=> b!141583 (= e!92265 Unit!4471)))

(declare-fun b!141584 () Bool)

(assert (=> b!141584 (= e!92264 (isDefined!129 (getValueByKey!177 (toList!858 lt!74012) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44607 c!26650) b!141582))

(assert (= (and d!44607 (not c!26650)) b!141583))

(assert (= (and d!44607 (not res!67581)) b!141584))

(declare-fun m!170177 () Bool)

(assert (=> d!44607 m!170177))

(declare-fun m!170179 () Bool)

(assert (=> b!141582 m!170179))

(assert (=> b!141582 m!169005))

(assert (=> b!141582 m!169005))

(declare-fun m!170181 () Bool)

(assert (=> b!141582 m!170181))

(assert (=> b!141584 m!169005))

(assert (=> b!141584 m!169005))

(assert (=> b!141584 m!170181))

(assert (=> d!44167 d!44607))

(declare-fun b!141586 () Bool)

(declare-fun e!92266 () Option!183)

(declare-fun e!92267 () Option!183)

(assert (=> b!141586 (= e!92266 e!92267)))

(declare-fun c!26652 () Bool)

(assert (=> b!141586 (= c!26652 (and ((_ is Cons!1715) lt!74011) (not (= (_1!1322 (h!2322 lt!74011)) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141587 () Bool)

(assert (=> b!141587 (= e!92267 (getValueByKey!177 (t!6295 lt!74011) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141585 () Bool)

(assert (=> b!141585 (= e!92266 (Some!182 (_2!1322 (h!2322 lt!74011))))))

(declare-fun b!141588 () Bool)

(assert (=> b!141588 (= e!92267 None!181)))

(declare-fun d!44609 () Bool)

(declare-fun c!26651 () Bool)

(assert (=> d!44609 (= c!26651 (and ((_ is Cons!1715) lt!74011) (= (_1!1322 (h!2322 lt!74011)) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44609 (= (getValueByKey!177 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) e!92266)))

(assert (= (and d!44609 c!26651) b!141585))

(assert (= (and d!44609 (not c!26651)) b!141586))

(assert (= (and b!141586 c!26652) b!141587))

(assert (= (and b!141586 (not c!26652)) b!141588))

(declare-fun m!170183 () Bool)

(assert (=> b!141587 m!170183))

(assert (=> d!44167 d!44609))

(declare-fun d!44611 () Bool)

(assert (=> d!44611 (= (getValueByKey!177 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74309 () Unit!4387)

(assert (=> d!44611 (= lt!74309 (choose!873 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92268 () Bool)

(assert (=> d!44611 e!92268))

(declare-fun res!67582 () Bool)

(assert (=> d!44611 (=> (not res!67582) (not e!92268))))

(assert (=> d!44611 (= res!67582 (isStrictlySorted!312 lt!74011))))

(assert (=> d!44611 (= (lemmaContainsTupThenGetReturnValue!91 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!74309)))

(declare-fun b!141589 () Bool)

(declare-fun res!67583 () Bool)

(assert (=> b!141589 (=> (not res!67583) (not e!92268))))

(assert (=> b!141589 (= res!67583 (containsKey!180 lt!74011 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141590 () Bool)

(assert (=> b!141590 (= e!92268 (contains!907 lt!74011 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44611 res!67582) b!141589))

(assert (= (and b!141589 res!67583) b!141590))

(assert (=> d!44611 m!168999))

(declare-fun m!170185 () Bool)

(assert (=> d!44611 m!170185))

(declare-fun m!170187 () Bool)

(assert (=> d!44611 m!170187))

(declare-fun m!170189 () Bool)

(assert (=> b!141589 m!170189))

(declare-fun m!170191 () Bool)

(assert (=> b!141590 m!170191))

(assert (=> d!44167 d!44611))

(declare-fun bm!15692 () Bool)

(declare-fun call!15697 () List!1719)

(declare-fun call!15696 () List!1719)

(assert (=> bm!15692 (= call!15697 call!15696)))

(declare-fun b!141592 () Bool)

(declare-fun e!92270 () List!1719)

(declare-fun e!92272 () List!1719)

(assert (=> b!141592 (= e!92270 e!92272)))

(declare-fun c!26656 () Bool)

(assert (=> b!141592 (= c!26656 (and ((_ is Cons!1715) (toList!858 lt!73240)) (= (_1!1322 (h!2322 (toList!858 lt!73240))) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141593 () Bool)

(declare-fun res!67585 () Bool)

(declare-fun e!92269 () Bool)

(assert (=> b!141593 (=> (not res!67585) (not e!92269))))

(declare-fun lt!74310 () List!1719)

(assert (=> b!141593 (= res!67585 (containsKey!180 lt!74310 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun c!26654 () Bool)

(declare-fun b!141594 () Bool)

(assert (=> b!141594 (= c!26654 (and ((_ is Cons!1715) (toList!858 lt!73240)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73240))) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92271 () List!1719)

(assert (=> b!141594 (= e!92272 e!92271)))

(declare-fun bm!15693 () Bool)

(declare-fun call!15695 () List!1719)

(assert (=> bm!15693 (= call!15696 call!15695)))

(declare-fun b!141595 () Bool)

(assert (=> b!141595 (= e!92272 call!15696)))

(declare-fun b!141596 () Bool)

(assert (=> b!141596 (= e!92270 call!15695)))

(declare-fun b!141597 () Bool)

(assert (=> b!141597 (= e!92269 (contains!907 lt!74310 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92273 () List!1719)

(declare-fun b!141591 () Bool)

(assert (=> b!141591 (= e!92273 (ite c!26656 (t!6295 (toList!858 lt!73240)) (ite c!26654 (Cons!1715 (h!2322 (toList!858 lt!73240)) (t!6295 (toList!858 lt!73240))) Nil!1716)))))

(declare-fun d!44613 () Bool)

(assert (=> d!44613 e!92269))

(declare-fun res!67584 () Bool)

(assert (=> d!44613 (=> (not res!67584) (not e!92269))))

(assert (=> d!44613 (= res!67584 (isStrictlySorted!312 lt!74310))))

(assert (=> d!44613 (= lt!74310 e!92270)))

(declare-fun c!26655 () Bool)

(assert (=> d!44613 (= c!26655 (and ((_ is Cons!1715) (toList!858 lt!73240)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73240))) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44613 (isStrictlySorted!312 (toList!858 lt!73240))))

(assert (=> d!44613 (= (insertStrictlySorted!94 (toList!858 lt!73240) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!74310)))

(declare-fun b!141598 () Bool)

(assert (=> b!141598 (= e!92271 call!15697)))

(declare-fun b!141599 () Bool)

(assert (=> b!141599 (= e!92271 call!15697)))

(declare-fun bm!15694 () Bool)

(assert (=> bm!15694 (= call!15695 ($colon$colon!93 e!92273 (ite c!26655 (h!2322 (toList!858 lt!73240)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26653 () Bool)

(assert (=> bm!15694 (= c!26653 c!26655)))

(declare-fun b!141600 () Bool)

(assert (=> b!141600 (= e!92273 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73240)) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44613 c!26655) b!141596))

(assert (= (and d!44613 (not c!26655)) b!141592))

(assert (= (and b!141592 c!26656) b!141595))

(assert (= (and b!141592 (not c!26656)) b!141594))

(assert (= (and b!141594 c!26654) b!141598))

(assert (= (and b!141594 (not c!26654)) b!141599))

(assert (= (or b!141598 b!141599) bm!15692))

(assert (= (or b!141595 bm!15692) bm!15693))

(assert (= (or b!141596 bm!15693) bm!15694))

(assert (= (and bm!15694 c!26653) b!141600))

(assert (= (and bm!15694 (not c!26653)) b!141591))

(assert (= (and d!44613 res!67584) b!141593))

(assert (= (and b!141593 res!67585) b!141597))

(declare-fun m!170193 () Bool)

(assert (=> bm!15694 m!170193))

(declare-fun m!170195 () Bool)

(assert (=> d!44613 m!170195))

(declare-fun m!170197 () Bool)

(assert (=> d!44613 m!170197))

(declare-fun m!170199 () Bool)

(assert (=> b!141593 m!170199))

(declare-fun m!170201 () Bool)

(assert (=> b!141600 m!170201))

(declare-fun m!170203 () Bool)

(assert (=> b!141597 m!170203))

(assert (=> d!44167 d!44613))

(declare-fun d!44615 () Bool)

(declare-fun lt!74311 () Bool)

(assert (=> d!44615 (= lt!74311 (select (content!139 lt!73996) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92274 () Bool)

(assert (=> d!44615 (= lt!74311 e!92274)))

(declare-fun res!67586 () Bool)

(assert (=> d!44615 (=> (not res!67586) (not e!92274))))

(assert (=> d!44615 (= res!67586 ((_ is Cons!1715) lt!73996))))

(assert (=> d!44615 (= (contains!907 lt!73996 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74311)))

(declare-fun b!141601 () Bool)

(declare-fun e!92275 () Bool)

(assert (=> b!141601 (= e!92274 e!92275)))

(declare-fun res!67587 () Bool)

(assert (=> b!141601 (=> res!67587 e!92275)))

(assert (=> b!141601 (= res!67587 (= (h!2322 lt!73996) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141602 () Bool)

(assert (=> b!141602 (= e!92275 (contains!907 (t!6295 lt!73996) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44615 res!67586) b!141601))

(assert (= (and b!141601 (not res!67587)) b!141602))

(declare-fun m!170205 () Bool)

(assert (=> d!44615 m!170205))

(declare-fun m!170207 () Bool)

(assert (=> d!44615 m!170207))

(declare-fun m!170209 () Bool)

(assert (=> b!141602 m!170209))

(assert (=> b!141050 d!44615))

(declare-fun d!44617 () Bool)

(assert (=> d!44617 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74312 () Unit!4387)

(assert (=> d!44617 (= lt!74312 (choose!864 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92276 () Bool)

(assert (=> d!44617 e!92276))

(declare-fun res!67588 () Bool)

(assert (=> d!44617 (=> (not res!67588) (not e!92276))))

(assert (=> d!44617 (= res!67588 (isStrictlySorted!312 (toList!858 lt!73446)))))

(assert (=> d!44617 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74312)))

(declare-fun b!141603 () Bool)

(assert (=> b!141603 (= e!92276 (containsKey!180 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44617 res!67588) b!141603))

(assert (=> d!44617 m!168695))

(assert (=> d!44617 m!168695))

(assert (=> d!44617 m!168697))

(declare-fun m!170211 () Bool)

(assert (=> d!44617 m!170211))

(declare-fun m!170213 () Bool)

(assert (=> d!44617 m!170213))

(assert (=> b!141603 m!168691))

(assert (=> b!140912 d!44617))

(assert (=> b!140912 d!44359))

(assert (=> b!140912 d!44361))

(declare-fun d!44619 () Bool)

(assert (=> d!44619 (= (validMask!0 (mask!7279 (_2!1323 lt!73124))) (and (or (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000000000111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000000001111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000000011111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000000111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000001111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000011111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000000111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000001111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000011111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000000111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000001111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000011111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000000111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000001111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000011111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000000111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000001111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000011111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000000111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000001111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000011111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000000111111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000001111111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000011111111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00000111111111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00001111111111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00011111111111111111111111111111) (= (mask!7279 (_2!1323 lt!73124)) #b00111111111111111111111111111111)) (bvsle (mask!7279 (_2!1323 lt!73124)) #b00111111111111111111111111111111)))))

(assert (=> d!43781 d!44619))

(declare-fun d!44621 () Bool)

(declare-fun lt!74313 () Bool)

(assert (=> d!44621 (= lt!74313 (select (content!139 lt!73267) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!92277 () Bool)

(assert (=> d!44621 (= lt!74313 e!92277)))

(declare-fun res!67589 () Bool)

(assert (=> d!44621 (=> (not res!67589) (not e!92277))))

(assert (=> d!44621 (= res!67589 ((_ is Cons!1715) lt!73267))))

(assert (=> d!44621 (= (contains!907 lt!73267 (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74313)))

(declare-fun b!141604 () Bool)

(declare-fun e!92278 () Bool)

(assert (=> b!141604 (= e!92277 e!92278)))

(declare-fun res!67590 () Bool)

(assert (=> b!141604 (=> res!67590 e!92278)))

(assert (=> b!141604 (= res!67590 (= (h!2322 lt!73267) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141605 () Bool)

(assert (=> b!141605 (= e!92278 (contains!907 (t!6295 lt!73267) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44621 res!67589) b!141604))

(assert (= (and b!141604 (not res!67590)) b!141605))

(declare-fun m!170215 () Bool)

(assert (=> d!44621 m!170215))

(declare-fun m!170217 () Bool)

(assert (=> d!44621 m!170217))

(declare-fun m!170219 () Bool)

(assert (=> b!141605 m!170219))

(assert (=> b!140861 d!44621))

(assert (=> b!140313 d!43693))

(declare-fun d!44623 () Bool)

(assert (=> d!44623 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74314 () Unit!4387)

(assert (=> d!44623 (= lt!74314 (choose!864 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92279 () Bool)

(assert (=> d!44623 e!92279))

(declare-fun res!67591 () Bool)

(assert (=> d!44623 (=> (not res!67591) (not e!92279))))

(assert (=> d!44623 (= res!67591 (isStrictlySorted!312 (toList!858 lt!73215)))))

(assert (=> d!44623 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74314)))

(declare-fun b!141606 () Bool)

(assert (=> b!141606 (= e!92279 (containsKey!180 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44623 res!67591) b!141606))

(assert (=> d!44623 m!166927))

(assert (=> d!44623 m!167543))

(assert (=> d!44623 m!167543))

(assert (=> d!44623 m!167877))

(assert (=> d!44623 m!166927))

(declare-fun m!170221 () Bool)

(assert (=> d!44623 m!170221))

(assert (=> d!44623 m!170117))

(assert (=> b!141606 m!166927))

(assert (=> b!141606 m!167873))

(assert (=> b!140458 d!44623))

(assert (=> b!140458 d!44379))

(assert (=> b!140458 d!44381))

(declare-fun d!44625 () Bool)

(assert (=> d!44625 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))

(declare-fun lt!74315 () Unit!4387)

(assert (=> d!44625 (= lt!74315 (choose!864 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))

(declare-fun e!92280 () Bool)

(assert (=> d!44625 e!92280))

(declare-fun res!67592 () Bool)

(assert (=> d!44625 (=> (not res!67592) (not e!92280))))

(assert (=> d!44625 (= res!67592 (isStrictlySorted!312 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44625 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247) lt!74315)))

(declare-fun b!141607 () Bool)

(assert (=> b!141607 (= e!92280 (containsKey!180 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247))))

(assert (= (and d!44625 res!67592) b!141607))

(assert (=> d!44625 m!169065))

(assert (=> d!44625 m!169065))

(assert (=> d!44625 m!169067))

(declare-fun m!170223 () Bool)

(assert (=> d!44625 m!170223))

(declare-fun m!170225 () Bool)

(assert (=> d!44625 m!170225))

(assert (=> b!141607 m!169061))

(assert (=> b!141080 d!44625))

(assert (=> b!141080 d!44373))

(assert (=> b!141080 d!44375))

(declare-fun d!44627 () Bool)

(declare-fun e!92281 () Bool)

(assert (=> d!44627 e!92281))

(declare-fun res!67593 () Bool)

(assert (=> d!44627 (=> res!67593 e!92281)))

(declare-fun lt!74319 () Bool)

(assert (=> d!44627 (= res!67593 (not lt!74319))))

(declare-fun lt!74316 () Bool)

(assert (=> d!44627 (= lt!74319 lt!74316)))

(declare-fun lt!74318 () Unit!4387)

(declare-fun e!92282 () Unit!4387)

(assert (=> d!44627 (= lt!74318 e!92282)))

(declare-fun c!26657 () Bool)

(assert (=> d!44627 (= c!26657 lt!74316)))

(assert (=> d!44627 (= lt!74316 (containsKey!180 (toList!858 lt!73811) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(assert (=> d!44627 (= (contains!904 lt!73811 (_1!1322 (tuple2!2623 lt!73445 lt!73449))) lt!74319)))

(declare-fun b!141608 () Bool)

(declare-fun lt!74317 () Unit!4387)

(assert (=> b!141608 (= e!92282 lt!74317)))

(assert (=> b!141608 (= lt!74317 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73811) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(assert (=> b!141608 (isDefined!129 (getValueByKey!177 (toList!858 lt!73811) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun b!141609 () Bool)

(declare-fun Unit!4472 () Unit!4387)

(assert (=> b!141609 (= e!92282 Unit!4472)))

(declare-fun b!141610 () Bool)

(assert (=> b!141610 (= e!92281 (isDefined!129 (getValueByKey!177 (toList!858 lt!73811) (_1!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(assert (= (and d!44627 c!26657) b!141608))

(assert (= (and d!44627 (not c!26657)) b!141609))

(assert (= (and d!44627 (not res!67593)) b!141610))

(declare-fun m!170227 () Bool)

(assert (=> d!44627 m!170227))

(declare-fun m!170229 () Bool)

(assert (=> b!141608 m!170229))

(assert (=> b!141608 m!168343))

(assert (=> b!141608 m!168343))

(declare-fun m!170231 () Bool)

(assert (=> b!141608 m!170231))

(assert (=> b!141610 m!168343))

(assert (=> b!141610 m!168343))

(assert (=> b!141610 m!170231))

(assert (=> d!43933 d!44627))

(declare-fun b!141612 () Bool)

(declare-fun e!92283 () Option!183)

(declare-fun e!92284 () Option!183)

(assert (=> b!141612 (= e!92283 e!92284)))

(declare-fun c!26659 () Bool)

(assert (=> b!141612 (= c!26659 (and ((_ is Cons!1715) lt!73810) (not (= (_1!1322 (h!2322 lt!73810)) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))))

(declare-fun b!141613 () Bool)

(assert (=> b!141613 (= e!92284 (getValueByKey!177 (t!6295 lt!73810) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun b!141611 () Bool)

(assert (=> b!141611 (= e!92283 (Some!182 (_2!1322 (h!2322 lt!73810))))))

(declare-fun b!141614 () Bool)

(assert (=> b!141614 (= e!92284 None!181)))

(declare-fun c!26658 () Bool)

(declare-fun d!44629 () Bool)

(assert (=> d!44629 (= c!26658 (and ((_ is Cons!1715) lt!73810) (= (_1!1322 (h!2322 lt!73810)) (_1!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(assert (=> d!44629 (= (getValueByKey!177 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449))) e!92283)))

(assert (= (and d!44629 c!26658) b!141611))

(assert (= (and d!44629 (not c!26658)) b!141612))

(assert (= (and b!141612 c!26659) b!141613))

(assert (= (and b!141612 (not c!26659)) b!141614))

(declare-fun m!170233 () Bool)

(assert (=> b!141613 m!170233))

(assert (=> d!43933 d!44629))

(declare-fun d!44631 () Bool)

(assert (=> d!44631 (= (getValueByKey!177 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449))) (Some!182 (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun lt!74320 () Unit!4387)

(assert (=> d!44631 (= lt!74320 (choose!873 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun e!92285 () Bool)

(assert (=> d!44631 e!92285))

(declare-fun res!67594 () Bool)

(assert (=> d!44631 (=> (not res!67594) (not e!92285))))

(assert (=> d!44631 (= res!67594 (isStrictlySorted!312 lt!73810))))

(assert (=> d!44631 (= (lemmaContainsTupThenGetReturnValue!91 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))) lt!74320)))

(declare-fun b!141615 () Bool)

(declare-fun res!67595 () Bool)

(assert (=> b!141615 (=> (not res!67595) (not e!92285))))

(assert (=> b!141615 (= res!67595 (containsKey!180 lt!73810 (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun b!141616 () Bool)

(assert (=> b!141616 (= e!92285 (contains!907 lt!73810 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(assert (= (and d!44631 res!67594) b!141615))

(assert (= (and b!141615 res!67595) b!141616))

(assert (=> d!44631 m!168337))

(declare-fun m!170235 () Bool)

(assert (=> d!44631 m!170235))

(declare-fun m!170237 () Bool)

(assert (=> d!44631 m!170237))

(declare-fun m!170239 () Bool)

(assert (=> b!141615 m!170239))

(declare-fun m!170241 () Bool)

(assert (=> b!141616 m!170241))

(assert (=> d!43933 d!44631))

(declare-fun bm!15695 () Bool)

(declare-fun call!15700 () List!1719)

(declare-fun call!15699 () List!1719)

(assert (=> bm!15695 (= call!15700 call!15699)))

(declare-fun b!141618 () Bool)

(declare-fun e!92287 () List!1719)

(declare-fun e!92289 () List!1719)

(assert (=> b!141618 (= e!92287 e!92289)))

(declare-fun c!26663 () Bool)

(assert (=> b!141618 (= c!26663 (and ((_ is Cons!1715) (toList!858 lt!73447)) (= (_1!1322 (h!2322 (toList!858 lt!73447))) (_1!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(declare-fun b!141619 () Bool)

(declare-fun res!67597 () Bool)

(declare-fun e!92286 () Bool)

(assert (=> b!141619 (=> (not res!67597) (not e!92286))))

(declare-fun lt!74321 () List!1719)

(assert (=> b!141619 (= res!67597 (containsKey!180 lt!74321 (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun c!26661 () Bool)

(declare-fun b!141620 () Bool)

(assert (=> b!141620 (= c!26661 (and ((_ is Cons!1715) (toList!858 lt!73447)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73447))) (_1!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(declare-fun e!92288 () List!1719)

(assert (=> b!141620 (= e!92289 e!92288)))

(declare-fun bm!15696 () Bool)

(declare-fun call!15698 () List!1719)

(assert (=> bm!15696 (= call!15699 call!15698)))

(declare-fun b!141621 () Bool)

(assert (=> b!141621 (= e!92289 call!15699)))

(declare-fun b!141622 () Bool)

(assert (=> b!141622 (= e!92287 call!15698)))

(declare-fun b!141623 () Bool)

(assert (=> b!141623 (= e!92286 (contains!907 lt!74321 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(declare-fun e!92290 () List!1719)

(declare-fun b!141617 () Bool)

(assert (=> b!141617 (= e!92290 (ite c!26663 (t!6295 (toList!858 lt!73447)) (ite c!26661 (Cons!1715 (h!2322 (toList!858 lt!73447)) (t!6295 (toList!858 lt!73447))) Nil!1716)))))

(declare-fun d!44633 () Bool)

(assert (=> d!44633 e!92286))

(declare-fun res!67596 () Bool)

(assert (=> d!44633 (=> (not res!67596) (not e!92286))))

(assert (=> d!44633 (= res!67596 (isStrictlySorted!312 lt!74321))))

(assert (=> d!44633 (= lt!74321 e!92287)))

(declare-fun c!26662 () Bool)

(assert (=> d!44633 (= c!26662 (and ((_ is Cons!1715) (toList!858 lt!73447)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73447))) (_1!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(assert (=> d!44633 (isStrictlySorted!312 (toList!858 lt!73447))))

(assert (=> d!44633 (= (insertStrictlySorted!94 (toList!858 lt!73447) (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))) lt!74321)))

(declare-fun b!141624 () Bool)

(assert (=> b!141624 (= e!92288 call!15700)))

(declare-fun b!141625 () Bool)

(assert (=> b!141625 (= e!92288 call!15700)))

(declare-fun bm!15697 () Bool)

(assert (=> bm!15697 (= call!15698 ($colon$colon!93 e!92290 (ite c!26662 (h!2322 (toList!858 lt!73447)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))))

(declare-fun c!26660 () Bool)

(assert (=> bm!15697 (= c!26660 c!26662)))

(declare-fun b!141626 () Bool)

(assert (=> b!141626 (= e!92290 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73447)) (_1!1322 (tuple2!2623 lt!73445 lt!73449)) (_2!1322 (tuple2!2623 lt!73445 lt!73449))))))

(assert (= (and d!44633 c!26662) b!141622))

(assert (= (and d!44633 (not c!26662)) b!141618))

(assert (= (and b!141618 c!26663) b!141621))

(assert (= (and b!141618 (not c!26663)) b!141620))

(assert (= (and b!141620 c!26661) b!141624))

(assert (= (and b!141620 (not c!26661)) b!141625))

(assert (= (or b!141624 b!141625) bm!15695))

(assert (= (or b!141621 bm!15695) bm!15696))

(assert (= (or b!141622 bm!15696) bm!15697))

(assert (= (and bm!15697 c!26660) b!141626))

(assert (= (and bm!15697 (not c!26660)) b!141617))

(assert (= (and d!44633 res!67596) b!141619))

(assert (= (and b!141619 res!67597) b!141623))

(declare-fun m!170243 () Bool)

(assert (=> bm!15697 m!170243))

(declare-fun m!170245 () Bool)

(assert (=> d!44633 m!170245))

(declare-fun m!170247 () Bool)

(assert (=> d!44633 m!170247))

(declare-fun m!170249 () Bool)

(assert (=> b!141619 m!170249))

(declare-fun m!170251 () Bool)

(assert (=> b!141626 m!170251))

(declare-fun m!170253 () Bool)

(assert (=> b!141623 m!170253))

(assert (=> d!43933 d!44633))

(declare-fun d!44635 () Bool)

(declare-fun e!92291 () Bool)

(assert (=> d!44635 e!92291))

(declare-fun res!67598 () Bool)

(assert (=> d!44635 (=> res!67598 e!92291)))

(declare-fun lt!74325 () Bool)

(assert (=> d!44635 (= res!67598 (not lt!74325))))

(declare-fun lt!74322 () Bool)

(assert (=> d!44635 (= lt!74325 lt!74322)))

(declare-fun lt!74324 () Unit!4387)

(declare-fun e!92292 () Unit!4387)

(assert (=> d!44635 (= lt!74324 e!92292)))

(declare-fun c!26664 () Bool)

(assert (=> d!44635 (= c!26664 lt!74322)))

(assert (=> d!44635 (= lt!74322 (containsKey!180 (toList!858 lt!73691) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44635 (= (contains!904 lt!73691 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74325)))

(declare-fun b!141627 () Bool)

(declare-fun lt!74323 () Unit!4387)

(assert (=> b!141627 (= e!92292 lt!74323)))

(assert (=> b!141627 (= lt!74323 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73691) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141627 (isDefined!129 (getValueByKey!177 (toList!858 lt!73691) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141628 () Bool)

(declare-fun Unit!4473 () Unit!4387)

(assert (=> b!141628 (= e!92292 Unit!4473)))

(declare-fun b!141629 () Bool)

(assert (=> b!141629 (= e!92291 (isDefined!129 (getValueByKey!177 (toList!858 lt!73691) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44635 c!26664) b!141627))

(assert (= (and d!44635 (not c!26664)) b!141628))

(assert (= (and d!44635 (not res!67598)) b!141629))

(declare-fun m!170255 () Bool)

(assert (=> d!44635 m!170255))

(declare-fun m!170257 () Bool)

(assert (=> b!141627 m!170257))

(declare-fun m!170259 () Bool)

(assert (=> b!141627 m!170259))

(assert (=> b!141627 m!170259))

(declare-fun m!170261 () Bool)

(assert (=> b!141627 m!170261))

(assert (=> b!141629 m!170259))

(assert (=> b!141629 m!170259))

(assert (=> b!141629 m!170261))

(assert (=> bm!15584 d!44635))

(declare-fun b!141631 () Bool)

(declare-fun e!92293 () Option!183)

(declare-fun e!92294 () Option!183)

(assert (=> b!141631 (= e!92293 e!92294)))

(declare-fun c!26666 () Bool)

(assert (=> b!141631 (= c!26666 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73268))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73268)))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!141632 () Bool)

(assert (=> b!141632 (= e!92294 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73268))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141630 () Bool)

(assert (=> b!141630 (= e!92293 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73268))))))))

(declare-fun b!141633 () Bool)

(assert (=> b!141633 (= e!92294 None!181)))

(declare-fun d!44637 () Bool)

(declare-fun c!26665 () Bool)

(assert (=> d!44637 (= c!26665 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73268))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73268)))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44637 (= (getValueByKey!177 (t!6295 (toList!858 lt!73268)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92293)))

(assert (= (and d!44637 c!26665) b!141630))

(assert (= (and d!44637 (not c!26665)) b!141631))

(assert (= (and b!141631 c!26666) b!141632))

(assert (= (and b!141631 (not c!26666)) b!141633))

(declare-fun m!170263 () Bool)

(assert (=> b!141632 m!170263))

(assert (=> b!140954 d!44637))

(declare-fun b!141635 () Bool)

(declare-fun e!92295 () Option!183)

(declare-fun e!92296 () Option!183)

(assert (=> b!141635 (= e!92295 e!92296)))

(declare-fun c!26668 () Bool)

(assert (=> b!141635 (= c!26668 (and ((_ is Cons!1715) (t!6295 lt!73278)) (not (= (_1!1322 (h!2322 (t!6295 lt!73278))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141636 () Bool)

(assert (=> b!141636 (= e!92296 (getValueByKey!177 (t!6295 (t!6295 lt!73278)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141634 () Bool)

(assert (=> b!141634 (= e!92295 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73278)))))))

(declare-fun b!141637 () Bool)

(assert (=> b!141637 (= e!92296 None!181)))

(declare-fun d!44639 () Bool)

(declare-fun c!26667 () Bool)

(assert (=> d!44639 (= c!26667 (and ((_ is Cons!1715) (t!6295 lt!73278)) (= (_1!1322 (h!2322 (t!6295 lt!73278))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44639 (= (getValueByKey!177 (t!6295 lt!73278) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92295)))

(assert (= (and d!44639 c!26667) b!141634))

(assert (= (and d!44639 (not c!26667)) b!141635))

(assert (= (and b!141635 c!26668) b!141636))

(assert (= (and b!141635 (not c!26668)) b!141637))

(declare-fun m!170265 () Bool)

(assert (=> b!141636 m!170265))

(assert (=> b!140711 d!44639))

(declare-fun b!141639 () Bool)

(declare-fun e!92297 () Option!183)

(declare-fun e!92298 () Option!183)

(assert (=> b!141639 (= e!92297 e!92298)))

(declare-fun c!26670 () Bool)

(assert (=> b!141639 (= c!26670 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73203))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73203)))) lt!73202))))))

(declare-fun b!141640 () Bool)

(assert (=> b!141640 (= e!92298 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73203))) lt!73202))))

(declare-fun b!141638 () Bool)

(assert (=> b!141638 (= e!92297 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73203))))))))

(declare-fun b!141641 () Bool)

(assert (=> b!141641 (= e!92298 None!181)))

(declare-fun d!44641 () Bool)

(declare-fun c!26669 () Bool)

(assert (=> d!44641 (= c!26669 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73203))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73203)))) lt!73202)))))

(assert (=> d!44641 (= (getValueByKey!177 (t!6295 (toList!858 lt!73203)) lt!73202) e!92297)))

(assert (= (and d!44641 c!26669) b!141638))

(assert (= (and d!44641 (not c!26669)) b!141639))

(assert (= (and b!141639 c!26670) b!141640))

(assert (= (and b!141639 (not c!26670)) b!141641))

(declare-fun m!170267 () Bool)

(assert (=> b!141640 m!170267))

(assert (=> b!140806 d!44641))

(declare-fun d!44643 () Bool)

(assert (=> d!44643 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5960 () Bool)

(assert (= bs!5960 d!44643))

(assert (=> bs!5960 m!168387))

(declare-fun m!170269 () Bool)

(assert (=> bs!5960 m!170269))

(assert (=> b!140911 d!44643))

(declare-fun b!141643 () Bool)

(declare-fun e!92299 () Option!183)

(declare-fun e!92300 () Option!183)

(assert (=> b!141643 (= e!92299 e!92300)))

(declare-fun c!26672 () Bool)

(assert (=> b!141643 (= c!26672 (and ((_ is Cons!1715) (toList!858 lt!73446)) (not (= (_1!1322 (h!2322 (toList!858 lt!73446))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!141644 () Bool)

(assert (=> b!141644 (= e!92300 (getValueByKey!177 (t!6295 (toList!858 lt!73446)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!141642 () Bool)

(assert (=> b!141642 (= e!92299 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73446)))))))

(declare-fun b!141645 () Bool)

(assert (=> b!141645 (= e!92300 None!181)))

(declare-fun d!44645 () Bool)

(declare-fun c!26671 () Bool)

(assert (=> d!44645 (= c!26671 (and ((_ is Cons!1715) (toList!858 lt!73446)) (= (_1!1322 (h!2322 (toList!858 lt!73446))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44645 (= (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92299)))

(assert (= (and d!44645 c!26671) b!141642))

(assert (= (and d!44645 (not c!26671)) b!141643))

(assert (= (and b!141643 c!26672) b!141644))

(assert (= (and b!141643 (not c!26672)) b!141645))

(assert (=> b!141644 m!166833))

(declare-fun m!170271 () Bool)

(assert (=> b!141644 m!170271))

(assert (=> b!140911 d!44645))

(declare-fun d!44647 () Bool)

(declare-fun lt!74326 () Bool)

(assert (=> d!44647 (= lt!74326 (select (content!139 lt!73764) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92301 () Bool)

(assert (=> d!44647 (= lt!74326 e!92301)))

(declare-fun res!67599 () Bool)

(assert (=> d!44647 (=> (not res!67599) (not e!92301))))

(assert (=> d!44647 (= res!67599 ((_ is Cons!1715) lt!73764))))

(assert (=> d!44647 (= (contains!907 lt!73764 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74326)))

(declare-fun b!141646 () Bool)

(declare-fun e!92302 () Bool)

(assert (=> b!141646 (= e!92301 e!92302)))

(declare-fun res!67600 () Bool)

(assert (=> b!141646 (=> res!67600 e!92302)))

(assert (=> b!141646 (= res!67600 (= (h!2322 lt!73764) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141647 () Bool)

(assert (=> b!141647 (= e!92302 (contains!907 (t!6295 lt!73764) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44647 res!67599) b!141646))

(assert (= (and b!141646 (not res!67600)) b!141647))

(declare-fun m!170273 () Bool)

(assert (=> d!44647 m!170273))

(declare-fun m!170275 () Bool)

(assert (=> d!44647 m!170275))

(declare-fun m!170277 () Bool)

(assert (=> b!141647 m!170277))

(assert (=> b!140677 d!44647))

(declare-fun d!44649 () Bool)

(declare-fun res!67601 () Bool)

(declare-fun e!92303 () Bool)

(assert (=> d!44649 (=> res!67601 e!92303)))

(assert (=> d!44649 (= res!67601 (and ((_ is Cons!1715) lt!73274) (= (_1!1322 (h!2322 lt!73274)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!44649 (= (containsKey!180 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!92303)))

(declare-fun b!141648 () Bool)

(declare-fun e!92304 () Bool)

(assert (=> b!141648 (= e!92303 e!92304)))

(declare-fun res!67602 () Bool)

(assert (=> b!141648 (=> (not res!67602) (not e!92304))))

(assert (=> b!141648 (= res!67602 (and (or (not ((_ is Cons!1715) lt!73274)) (bvsle (_1!1322 (h!2322 lt!73274)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) ((_ is Cons!1715) lt!73274) (bvslt (_1!1322 (h!2322 lt!73274)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141649 () Bool)

(assert (=> b!141649 (= e!92304 (containsKey!180 (t!6295 lt!73274) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44649 (not res!67601)) b!141648))

(assert (= (and b!141648 res!67602) b!141649))

(declare-fun m!170279 () Bool)

(assert (=> b!141649 m!170279))

(assert (=> b!140922 d!44649))

(declare-fun b!141651 () Bool)

(declare-fun e!92305 () Option!183)

(declare-fun e!92306 () Option!183)

(assert (=> b!141651 (= e!92305 e!92306)))

(declare-fun c!26674 () Bool)

(assert (=> b!141651 (= c!26674 (and ((_ is Cons!1715) (toList!858 lt!73902)) (not (= (_1!1322 (h!2322 (toList!858 lt!73902))) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!141652 () Bool)

(assert (=> b!141652 (= e!92306 (getValueByKey!177 (t!6295 (toList!858 lt!73902)) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!141650 () Bool)

(assert (=> b!141650 (= e!92305 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73902)))))))

(declare-fun b!141653 () Bool)

(assert (=> b!141653 (= e!92306 None!181)))

(declare-fun c!26673 () Bool)

(declare-fun d!44651 () Bool)

(assert (=> d!44651 (= c!26673 (and ((_ is Cons!1715) (toList!858 lt!73902)) (= (_1!1322 (h!2322 (toList!858 lt!73902))) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!44651 (= (getValueByKey!177 (toList!858 lt!73902) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92305)))

(assert (= (and d!44651 c!26673) b!141650))

(assert (= (and d!44651 (not c!26673)) b!141651))

(assert (= (and b!141651 c!26674) b!141652))

(assert (= (and b!141651 (not c!26674)) b!141653))

(declare-fun m!170281 () Bool)

(assert (=> b!141652 m!170281))

(assert (=> b!140892 d!44651))

(declare-fun c!26675 () Bool)

(declare-fun bm!15698 () Bool)

(declare-fun call!15701 () Bool)

(assert (=> bm!15698 (= call!15701 (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (bvadd lt!73399 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26675 (Cons!1716 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd lt!73399 #b00000000000000000000000000000001)) (ite c!26339 (Cons!1716 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) lt!73396) lt!73396)) (ite c!26339 (Cons!1716 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) lt!73396) lt!73396))))))

(declare-fun b!141654 () Bool)

(declare-fun e!92307 () Bool)

(declare-fun e!92308 () Bool)

(assert (=> b!141654 (= e!92307 e!92308)))

(declare-fun res!67605 () Bool)

(assert (=> b!141654 (=> (not res!67605) (not e!92308))))

(declare-fun e!92310 () Bool)

(assert (=> b!141654 (= res!67605 (not e!92310))))

(declare-fun res!67603 () Bool)

(assert (=> b!141654 (=> (not res!67603) (not e!92310))))

(assert (=> b!141654 (= res!67603 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd lt!73399 #b00000000000000000000000000000001))))))

(declare-fun b!141655 () Bool)

(declare-fun e!92309 () Bool)

(assert (=> b!141655 (= e!92309 call!15701)))

(declare-fun b!141656 () Bool)

(assert (=> b!141656 (= e!92308 e!92309)))

(assert (=> b!141656 (= c!26675 (validKeyInArray!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd lt!73399 #b00000000000000000000000000000001))))))

(declare-fun d!44653 () Bool)

(declare-fun res!67604 () Bool)

(assert (=> d!44653 (=> res!67604 e!92307)))

(assert (=> d!44653 (= res!67604 (bvsge (bvadd lt!73399 #b00000000000000000000000000000001) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(assert (=> d!44653 (= (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (bvadd lt!73399 #b00000000000000000000000000000001) (ite c!26339 (Cons!1716 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) lt!73396) lt!73396)) e!92307)))

(declare-fun b!141657 () Bool)

(assert (=> b!141657 (= e!92309 call!15701)))

(declare-fun b!141658 () Bool)

(assert (=> b!141658 (= e!92310 (contains!906 (ite c!26339 (Cons!1716 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399) lt!73396) lt!73396) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (bvadd lt!73399 #b00000000000000000000000000000001))))))

(assert (= (and d!44653 (not res!67604)) b!141654))

(assert (= (and b!141654 res!67603) b!141658))

(assert (= (and b!141654 res!67605) b!141656))

(assert (= (and b!141656 c!26675) b!141655))

(assert (= (and b!141656 (not c!26675)) b!141657))

(assert (= (or b!141655 b!141657) bm!15698))

(declare-fun m!170283 () Bool)

(assert (=> bm!15698 m!170283))

(declare-fun m!170285 () Bool)

(assert (=> bm!15698 m!170285))

(assert (=> b!141654 m!170283))

(assert (=> b!141654 m!170283))

(declare-fun m!170287 () Bool)

(assert (=> b!141654 m!170287))

(assert (=> b!141656 m!170283))

(assert (=> b!141656 m!170283))

(assert (=> b!141656 m!170287))

(assert (=> b!141658 m!170283))

(assert (=> b!141658 m!170283))

(declare-fun m!170289 () Bool)

(assert (=> b!141658 m!170289))

(assert (=> bm!15576 d!44653))

(declare-fun d!44655 () Bool)

(declare-fun e!92311 () Bool)

(assert (=> d!44655 e!92311))

(declare-fun res!67606 () Bool)

(assert (=> d!44655 (=> res!67606 e!92311)))

(declare-fun lt!74330 () Bool)

(assert (=> d!44655 (= res!67606 (not lt!74330))))

(declare-fun lt!74327 () Bool)

(assert (=> d!44655 (= lt!74330 lt!74327)))

(declare-fun lt!74329 () Unit!4387)

(declare-fun e!92312 () Unit!4387)

(assert (=> d!44655 (= lt!74329 e!92312)))

(declare-fun c!26676 () Bool)

(assert (=> d!44655 (= c!26676 lt!74327)))

(assert (=> d!44655 (= lt!74327 (containsKey!180 (toList!858 lt!74007) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44655 (= (contains!904 lt!74007 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!74330)))

(declare-fun b!141659 () Bool)

(declare-fun lt!74328 () Unit!4387)

(assert (=> b!141659 (= e!92312 lt!74328)))

(assert (=> b!141659 (= lt!74328 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!74007) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(assert (=> b!141659 (isDefined!129 (getValueByKey!177 (toList!858 lt!74007) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141660 () Bool)

(declare-fun Unit!4474 () Unit!4387)

(assert (=> b!141660 (= e!92312 Unit!4474)))

(declare-fun b!141661 () Bool)

(assert (=> b!141661 (= e!92311 (isDefined!129 (getValueByKey!177 (toList!858 lt!74007) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44655 c!26676) b!141659))

(assert (= (and d!44655 (not c!26676)) b!141660))

(assert (= (and d!44655 (not res!67606)) b!141661))

(declare-fun m!170291 () Bool)

(assert (=> d!44655 m!170291))

(declare-fun m!170293 () Bool)

(assert (=> b!141659 m!170293))

(assert (=> b!141659 m!168989))

(assert (=> b!141659 m!168989))

(declare-fun m!170295 () Bool)

(assert (=> b!141659 m!170295))

(assert (=> b!141661 m!168989))

(assert (=> b!141661 m!168989))

(assert (=> b!141661 m!170295))

(assert (=> d!44163 d!44655))

(declare-fun b!141663 () Bool)

(declare-fun e!92313 () Option!183)

(declare-fun e!92314 () Option!183)

(assert (=> b!141663 (= e!92313 e!92314)))

(declare-fun c!26678 () Bool)

(assert (=> b!141663 (= c!26678 (and ((_ is Cons!1715) lt!74006) (not (= (_1!1322 (h!2322 lt!74006)) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141664 () Bool)

(assert (=> b!141664 (= e!92314 (getValueByKey!177 (t!6295 lt!74006) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141662 () Bool)

(assert (=> b!141662 (= e!92313 (Some!182 (_2!1322 (h!2322 lt!74006))))))

(declare-fun b!141665 () Bool)

(assert (=> b!141665 (= e!92314 None!181)))

(declare-fun d!44657 () Bool)

(declare-fun c!26677 () Bool)

(assert (=> d!44657 (= c!26677 (and ((_ is Cons!1715) lt!74006) (= (_1!1322 (h!2322 lt!74006)) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44657 (= (getValueByKey!177 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) e!92313)))

(assert (= (and d!44657 c!26677) b!141662))

(assert (= (and d!44657 (not c!26677)) b!141663))

(assert (= (and b!141663 c!26678) b!141664))

(assert (= (and b!141663 (not c!26678)) b!141665))

(declare-fun m!170297 () Bool)

(assert (=> b!141664 m!170297))

(assert (=> d!44163 d!44657))

(declare-fun d!44659 () Bool)

(assert (=> d!44659 (= (getValueByKey!177 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74331 () Unit!4387)

(assert (=> d!44659 (= lt!74331 (choose!873 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92315 () Bool)

(assert (=> d!44659 e!92315))

(declare-fun res!67607 () Bool)

(assert (=> d!44659 (=> (not res!67607) (not e!92315))))

(assert (=> d!44659 (= res!67607 (isStrictlySorted!312 lt!74006))))

(assert (=> d!44659 (= (lemmaContainsTupThenGetReturnValue!91 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!74331)))

(declare-fun b!141666 () Bool)

(declare-fun res!67608 () Bool)

(assert (=> b!141666 (=> (not res!67608) (not e!92315))))

(assert (=> b!141666 (= res!67608 (containsKey!180 lt!74006 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141667 () Bool)

(assert (=> b!141667 (= e!92315 (contains!907 lt!74006 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44659 res!67607) b!141666))

(assert (= (and b!141666 res!67608) b!141667))

(assert (=> d!44659 m!168983))

(declare-fun m!170299 () Bool)

(assert (=> d!44659 m!170299))

(declare-fun m!170301 () Bool)

(assert (=> d!44659 m!170301))

(declare-fun m!170303 () Bool)

(assert (=> b!141666 m!170303))

(declare-fun m!170305 () Bool)

(assert (=> b!141667 m!170305))

(assert (=> d!44163 d!44659))

(declare-fun bm!15699 () Bool)

(declare-fun call!15704 () List!1719)

(declare-fun call!15703 () List!1719)

(assert (=> bm!15699 (= call!15704 call!15703)))

(declare-fun b!141669 () Bool)

(declare-fun e!92317 () List!1719)

(declare-fun e!92319 () List!1719)

(assert (=> b!141669 (= e!92317 e!92319)))

(declare-fun c!26682 () Bool)

(assert (=> b!141669 (= c!26682 (and ((_ is Cons!1715) (toList!858 lt!73241)) (= (_1!1322 (h!2322 (toList!858 lt!73241))) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141670 () Bool)

(declare-fun res!67610 () Bool)

(declare-fun e!92316 () Bool)

(assert (=> b!141670 (=> (not res!67610) (not e!92316))))

(declare-fun lt!74332 () List!1719)

(assert (=> b!141670 (= res!67610 (containsKey!180 lt!74332 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141671 () Bool)

(declare-fun c!26680 () Bool)

(assert (=> b!141671 (= c!26680 (and ((_ is Cons!1715) (toList!858 lt!73241)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73241))) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92318 () List!1719)

(assert (=> b!141671 (= e!92319 e!92318)))

(declare-fun bm!15700 () Bool)

(declare-fun call!15702 () List!1719)

(assert (=> bm!15700 (= call!15703 call!15702)))

(declare-fun b!141672 () Bool)

(assert (=> b!141672 (= e!92319 call!15703)))

(declare-fun b!141673 () Bool)

(assert (=> b!141673 (= e!92317 call!15702)))

(declare-fun b!141674 () Bool)

(assert (=> b!141674 (= e!92316 (contains!907 lt!74332 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92320 () List!1719)

(declare-fun b!141668 () Bool)

(assert (=> b!141668 (= e!92320 (ite c!26682 (t!6295 (toList!858 lt!73241)) (ite c!26680 (Cons!1715 (h!2322 (toList!858 lt!73241)) (t!6295 (toList!858 lt!73241))) Nil!1716)))))

(declare-fun d!44661 () Bool)

(assert (=> d!44661 e!92316))

(declare-fun res!67609 () Bool)

(assert (=> d!44661 (=> (not res!67609) (not e!92316))))

(assert (=> d!44661 (= res!67609 (isStrictlySorted!312 lt!74332))))

(assert (=> d!44661 (= lt!74332 e!92317)))

(declare-fun c!26681 () Bool)

(assert (=> d!44661 (= c!26681 (and ((_ is Cons!1715) (toList!858 lt!73241)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73241))) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44661 (isStrictlySorted!312 (toList!858 lt!73241))))

(assert (=> d!44661 (= (insertStrictlySorted!94 (toList!858 lt!73241) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!74332)))

(declare-fun b!141675 () Bool)

(assert (=> b!141675 (= e!92318 call!15704)))

(declare-fun b!141676 () Bool)

(assert (=> b!141676 (= e!92318 call!15704)))

(declare-fun bm!15701 () Bool)

(assert (=> bm!15701 (= call!15702 ($colon$colon!93 e!92320 (ite c!26681 (h!2322 (toList!858 lt!73241)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26679 () Bool)

(assert (=> bm!15701 (= c!26679 c!26681)))

(declare-fun b!141677 () Bool)

(assert (=> b!141677 (= e!92320 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73241)) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44661 c!26681) b!141673))

(assert (= (and d!44661 (not c!26681)) b!141669))

(assert (= (and b!141669 c!26682) b!141672))

(assert (= (and b!141669 (not c!26682)) b!141671))

(assert (= (and b!141671 c!26680) b!141675))

(assert (= (and b!141671 (not c!26680)) b!141676))

(assert (= (or b!141675 b!141676) bm!15699))

(assert (= (or b!141672 bm!15699) bm!15700))

(assert (= (or b!141673 bm!15700) bm!15701))

(assert (= (and bm!15701 c!26679) b!141677))

(assert (= (and bm!15701 (not c!26679)) b!141668))

(assert (= (and d!44661 res!67609) b!141670))

(assert (= (and b!141670 res!67610) b!141674))

(declare-fun m!170307 () Bool)

(assert (=> bm!15701 m!170307))

(declare-fun m!170309 () Bool)

(assert (=> d!44661 m!170309))

(declare-fun m!170311 () Bool)

(assert (=> d!44661 m!170311))

(declare-fun m!170313 () Bool)

(assert (=> b!141670 m!170313))

(declare-fun m!170315 () Bool)

(assert (=> b!141677 m!170315))

(declare-fun m!170317 () Bool)

(assert (=> b!141674 m!170317))

(assert (=> d!44163 d!44661))

(declare-fun d!44663 () Bool)

(assert (=> d!44663 (= ($colon$colon!93 e!91899 (ite c!26484 (h!2322 (toList!858 lt!73188)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (Cons!1715 (ite c!26484 (h!2322 (toList!858 lt!73188)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91899))))

(assert (=> bm!15642 d!44663))

(declare-fun d!44665 () Bool)

(assert (=> d!44665 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))

(declare-fun lt!74333 () Unit!4387)

(assert (=> d!44665 (= lt!74333 (choose!864 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))

(declare-fun e!92321 () Bool)

(assert (=> d!44665 e!92321))

(declare-fun res!67611 () Bool)

(assert (=> d!44665 (=> (not res!67611) (not e!92321))))

(assert (=> d!44665 (= res!67611 (isStrictlySorted!312 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44665 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225) lt!74333)))

(declare-fun b!141678 () Bool)

(assert (=> b!141678 (= e!92321 (containsKey!180 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225))))

(assert (= (and d!44665 res!67611) b!141678))

(assert (=> d!44665 m!167649))

(assert (=> d!44665 m!167649))

(assert (=> d!44665 m!167651))

(declare-fun m!170319 () Bool)

(assert (=> d!44665 m!170319))

(declare-fun m!170321 () Bool)

(assert (=> d!44665 m!170321))

(assert (=> b!141678 m!167645))

(assert (=> b!140318 d!44665))

(assert (=> b!140318 d!44389))

(assert (=> b!140318 d!44391))

(declare-fun b!141680 () Bool)

(declare-fun e!92322 () Option!183)

(declare-fun e!92323 () Option!183)

(assert (=> b!141680 (= e!92322 e!92323)))

(declare-fun c!26684 () Bool)

(assert (=> b!141680 (= c!26684 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73465))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73465)))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141681 () Bool)

(assert (=> b!141681 (= e!92323 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73465))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141679 () Bool)

(assert (=> b!141679 (= e!92322 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73465))))))))

(declare-fun b!141682 () Bool)

(assert (=> b!141682 (= e!92323 None!181)))

(declare-fun d!44667 () Bool)

(declare-fun c!26683 () Bool)

(assert (=> d!44667 (= c!26683 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73465))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73465)))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44667 (= (getValueByKey!177 (t!6295 (toList!858 lt!73465)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92322)))

(assert (= (and d!44667 c!26683) b!141679))

(assert (= (and d!44667 (not c!26683)) b!141680))

(assert (= (and b!141680 c!26684) b!141681))

(assert (= (and b!141680 (not c!26684)) b!141682))

(declare-fun m!170323 () Bool)

(assert (=> b!141681 m!170323))

(assert (=> b!140971 d!44667))

(declare-fun d!44669 () Bool)

(assert (=> d!44669 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) (and (not (= (select (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140528 d!44669))

(declare-fun call!15705 () Bool)

(declare-fun bm!15702 () Bool)

(declare-fun c!26685 () Bool)

(assert (=> bm!15702 (= call!15705 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26685 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26329 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))) (ite c!26329 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))))))))

(declare-fun b!141683 () Bool)

(declare-fun e!92324 () Bool)

(declare-fun e!92325 () Bool)

(assert (=> b!141683 (= e!92324 e!92325)))

(declare-fun res!67614 () Bool)

(assert (=> b!141683 (=> (not res!67614) (not e!92325))))

(declare-fun e!92327 () Bool)

(assert (=> b!141683 (= res!67614 (not e!92327))))

(declare-fun res!67612 () Bool)

(assert (=> b!141683 (=> (not res!67612) (not e!92327))))

(assert (=> b!141683 (= res!67612 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141684 () Bool)

(declare-fun e!92326 () Bool)

(assert (=> b!141684 (= e!92326 call!15705)))

(declare-fun b!141685 () Bool)

(assert (=> b!141685 (= e!92325 e!92326)))

(assert (=> b!141685 (= c!26685 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!44671 () Bool)

(declare-fun res!67613 () Bool)

(assert (=> d!44671 (=> res!67613 e!92324)))

(assert (=> d!44671 (= res!67613 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!44671 (= (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26329 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))) e!92324)))

(declare-fun b!141686 () Bool)

(assert (=> b!141686 (= e!92326 call!15705)))

(declare-fun b!141687 () Bool)

(assert (=> b!141687 (= e!92327 (contains!906 (ite c!26329 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!44671 (not res!67613)) b!141683))

(assert (= (and b!141683 res!67612) b!141687))

(assert (= (and b!141683 res!67614) b!141685))

(assert (= (and b!141685 c!26685) b!141684))

(assert (= (and b!141685 (not c!26685)) b!141686))

(assert (= (or b!141684 b!141686) bm!15702))

(declare-fun m!170325 () Bool)

(assert (=> bm!15702 m!170325))

(declare-fun m!170327 () Bool)

(assert (=> bm!15702 m!170327))

(assert (=> b!141683 m!170325))

(assert (=> b!141683 m!170325))

(declare-fun m!170329 () Bool)

(assert (=> b!141683 m!170329))

(assert (=> b!141685 m!170325))

(assert (=> b!141685 m!170325))

(assert (=> b!141685 m!170329))

(assert (=> b!141687 m!170325))

(assert (=> b!141687 m!170325))

(declare-fun m!170331 () Bool)

(assert (=> b!141687 m!170331))

(assert (=> bm!15575 d!44671))

(declare-fun d!44673 () Bool)

(declare-fun res!67615 () Bool)

(declare-fun e!92328 () Bool)

(assert (=> d!44673 (=> res!67615 e!92328)))

(assert (=> d!44673 (= res!67615 (and ((_ is Cons!1715) lt!73469) (= (_1!1322 (h!2322 lt!73469)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44673 (= (containsKey!180 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92328)))

(declare-fun b!141688 () Bool)

(declare-fun e!92329 () Bool)

(assert (=> b!141688 (= e!92328 e!92329)))

(declare-fun res!67616 () Bool)

(assert (=> b!141688 (=> (not res!67616) (not e!92329))))

(assert (=> b!141688 (= res!67616 (and (or (not ((_ is Cons!1715) lt!73469)) (bvsle (_1!1322 (h!2322 lt!73469)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73469) (bvslt (_1!1322 (h!2322 lt!73469)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141689 () Bool)

(assert (=> b!141689 (= e!92329 (containsKey!180 (t!6295 lt!73469) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44673 (not res!67615)) b!141688))

(assert (= (and b!141688 res!67616) b!141689))

(declare-fun m!170333 () Bool)

(assert (=> b!141689 m!170333))

(assert (=> b!140759 d!44673))

(declare-fun d!44675 () Bool)

(assert (=> d!44675 (= (isEmpty!424 lt!73889) (isEmpty!425 (toList!858 lt!73889)))))

(declare-fun bs!5961 () Bool)

(assert (= bs!5961 d!44675))

(declare-fun m!170335 () Bool)

(assert (=> bs!5961 m!170335))

(assert (=> b!140884 d!44675))

(declare-fun d!44677 () Bool)

(assert (=> d!44677 (= (validKeyInArray!0 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)) (and (not (= (select (arr!2306 lt!73406) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 lt!73406) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140570 d!44677))

(declare-fun d!44679 () Bool)

(declare-fun e!92330 () Bool)

(assert (=> d!44679 e!92330))

(declare-fun res!67617 () Bool)

(assert (=> d!44679 (=> (not res!67617) (not e!92330))))

(declare-fun lt!74336 () ListLongMap!1685)

(assert (=> d!44679 (= res!67617 (contains!904 lt!74336 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))

(declare-fun lt!74335 () List!1719)

(assert (=> d!44679 (= lt!74336 (ListLongMap!1686 lt!74335))))

(declare-fun lt!74334 () Unit!4387)

(declare-fun lt!74337 () Unit!4387)

(assert (=> d!44679 (= lt!74334 lt!74337)))

(assert (=> d!44679 (= (getValueByKey!177 lt!74335 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!44679 (= lt!74337 (lemmaContainsTupThenGetReturnValue!91 lt!74335 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!44679 (= lt!74335 (insertStrictlySorted!94 (toList!858 call!15630) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!44679 (= (+!173 call!15630 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))) lt!74336)))

(declare-fun b!141690 () Bool)

(declare-fun res!67618 () Bool)

(assert (=> b!141690 (=> (not res!67618) (not e!92330))))

(assert (=> b!141690 (= res!67618 (= (getValueByKey!177 (toList!858 lt!74336) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))))

(declare-fun b!141691 () Bool)

(assert (=> b!141691 (= e!92330 (contains!907 (toList!858 lt!74336) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))

(assert (= (and d!44679 res!67617) b!141690))

(assert (= (and b!141690 res!67618) b!141691))

(declare-fun m!170337 () Bool)

(assert (=> d!44679 m!170337))

(declare-fun m!170339 () Bool)

(assert (=> d!44679 m!170339))

(declare-fun m!170341 () Bool)

(assert (=> d!44679 m!170341))

(declare-fun m!170343 () Bool)

(assert (=> d!44679 m!170343))

(declare-fun m!170345 () Bool)

(assert (=> b!141690 m!170345))

(declare-fun m!170347 () Bool)

(assert (=> b!141691 m!170347))

(assert (=> b!140849 d!44679))

(declare-fun b!141693 () Bool)

(declare-fun e!92331 () Option!183)

(declare-fun e!92332 () Option!183)

(assert (=> b!141693 (= e!92331 e!92332)))

(declare-fun c!26687 () Bool)

(assert (=> b!141693 (= c!26687 (and ((_ is Cons!1715) (toList!858 lt!73511)) (not (= (_1!1322 (h!2322 (toList!858 lt!73511))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141694 () Bool)

(assert (=> b!141694 (= e!92332 (getValueByKey!177 (t!6295 (toList!858 lt!73511)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141692 () Bool)

(assert (=> b!141692 (= e!92331 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73511)))))))

(declare-fun b!141695 () Bool)

(assert (=> b!141695 (= e!92332 None!181)))

(declare-fun c!26686 () Bool)

(declare-fun d!44681 () Bool)

(assert (=> d!44681 (= c!26686 (and ((_ is Cons!1715) (toList!858 lt!73511)) (= (_1!1322 (h!2322 (toList!858 lt!73511))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44681 (= (getValueByKey!177 (toList!858 lt!73511) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92331)))

(assert (= (and d!44681 c!26686) b!141692))

(assert (= (and d!44681 (not c!26686)) b!141693))

(assert (= (and b!141693 c!26687) b!141694))

(assert (= (and b!141693 (not c!26687)) b!141695))

(declare-fun m!170349 () Bool)

(assert (=> b!141694 m!170349))

(assert (=> b!140256 d!44681))

(assert (=> d!43905 d!43697))

(declare-fun lt!74338 () Bool)

(declare-fun d!44683 () Bool)

(assert (=> d!44683 (= lt!74338 (select (content!139 lt!73424) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92333 () Bool)

(assert (=> d!44683 (= lt!74338 e!92333)))

(declare-fun res!67619 () Bool)

(assert (=> d!44683 (=> (not res!67619) (not e!92333))))

(assert (=> d!44683 (= res!67619 ((_ is Cons!1715) lt!73424))))

(assert (=> d!44683 (= (contains!907 lt!73424 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74338)))

(declare-fun b!141696 () Bool)

(declare-fun e!92334 () Bool)

(assert (=> b!141696 (= e!92333 e!92334)))

(declare-fun res!67620 () Bool)

(assert (=> b!141696 (=> res!67620 e!92334)))

(assert (=> b!141696 (= res!67620 (= (h!2322 lt!73424) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141697 () Bool)

(assert (=> b!141697 (= e!92334 (contains!907 (t!6295 lt!73424) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44683 res!67619) b!141696))

(assert (= (and b!141696 (not res!67620)) b!141697))

(declare-fun m!170351 () Bool)

(assert (=> d!44683 m!170351))

(declare-fun m!170353 () Bool)

(assert (=> d!44683 m!170353))

(declare-fun m!170355 () Bool)

(assert (=> b!141697 m!170355))

(assert (=> b!140631 d!44683))

(declare-fun b!141698 () Bool)

(declare-fun res!67622 () Bool)

(declare-fun e!92340 () Bool)

(assert (=> b!141698 (=> (not res!67622) (not e!92340))))

(declare-fun lt!74341 () ListLongMap!1685)

(assert (=> b!141698 (= res!67622 (not (contains!904 lt!74341 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141699 () Bool)

(declare-fun e!92336 () Bool)

(assert (=> b!141699 (= e!92340 e!92336)))

(declare-fun c!26688 () Bool)

(declare-fun e!92338 () Bool)

(assert (=> b!141699 (= c!26688 e!92338)))

(declare-fun res!67623 () Bool)

(assert (=> b!141699 (=> (not res!67623) (not e!92338))))

(assert (=> b!141699 (= res!67623 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!92337 () Bool)

(declare-fun b!141700 () Bool)

(assert (=> b!141700 (= e!92337 (= lt!74341 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141701 () Bool)

(declare-fun lt!74343 () Unit!4387)

(declare-fun lt!74339 () Unit!4387)

(assert (=> b!141701 (= lt!74343 lt!74339)))

(declare-fun lt!74344 () V!3553)

(declare-fun lt!74340 () (_ BitVec 64))

(declare-fun lt!74342 () ListLongMap!1685)

(declare-fun lt!74345 () (_ BitVec 64))

(assert (=> b!141701 (not (contains!904 (+!173 lt!74342 (tuple2!2623 lt!74340 lt!74344)) lt!74345))))

(assert (=> b!141701 (= lt!74339 (addStillNotContains!66 lt!74342 lt!74340 lt!74344 lt!74345))))

(assert (=> b!141701 (= lt!74345 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141701 (= lt!74344 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141701 (= lt!74340 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!15706 () ListLongMap!1685)

(assert (=> b!141701 (= lt!74342 call!15706)))

(declare-fun e!92341 () ListLongMap!1685)

(assert (=> b!141701 (= e!92341 (+!173 call!15706 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141702 () Bool)

(declare-fun e!92335 () Bool)

(assert (=> b!141702 (= e!92336 e!92335)))

(assert (=> b!141702 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun res!67624 () Bool)

(assert (=> b!141702 (= res!67624 (contains!904 lt!74341 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!141702 (=> (not res!67624) (not e!92335))))

(declare-fun d!44685 () Bool)

(assert (=> d!44685 e!92340))

(declare-fun res!67621 () Bool)

(assert (=> d!44685 (=> (not res!67621) (not e!92340))))

(assert (=> d!44685 (= res!67621 (not (contains!904 lt!74341 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92339 () ListLongMap!1685)

(assert (=> d!44685 (= lt!74341 e!92339)))

(declare-fun c!26691 () Bool)

(assert (=> d!44685 (= c!26691 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!44685 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!44685 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))) lt!74341)))

(declare-fun bm!15703 () Bool)

(assert (=> bm!15703 (= call!15706 (getCurrentListMapNoExtraKeys!140 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (_values!2922 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992))) (extraKeys!2694 (v!3279 (underlying!479 thiss!992))) (zeroValue!2789 (v!3279 (underlying!479 thiss!992))) (minValue!2789 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!141703 () Bool)

(assert (=> b!141703 (= e!92341 call!15706)))

(declare-fun b!141704 () Bool)

(assert (=> b!141704 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!141704 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2579 (_values!2922 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> b!141704 (= e!92335 (= (apply!120 lt!74341 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141705 () Bool)

(assert (=> b!141705 (= e!92337 (isEmpty!424 lt!74341))))

(declare-fun b!141706 () Bool)

(assert (=> b!141706 (= e!92339 e!92341)))

(declare-fun c!26689 () Bool)

(assert (=> b!141706 (= c!26689 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141707 () Bool)

(assert (=> b!141707 (= e!92338 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!141707 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141708 () Bool)

(assert (=> b!141708 (= e!92336 e!92337)))

(declare-fun c!26690 () Bool)

(assert (=> b!141708 (= c!26690 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141709 () Bool)

(assert (=> b!141709 (= e!92339 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44685 c!26691) b!141709))

(assert (= (and d!44685 (not c!26691)) b!141706))

(assert (= (and b!141706 c!26689) b!141701))

(assert (= (and b!141706 (not c!26689)) b!141703))

(assert (= (or b!141701 b!141703) bm!15703))

(assert (= (and d!44685 res!67621) b!141698))

(assert (= (and b!141698 res!67622) b!141699))

(assert (= (and b!141699 res!67623) b!141707))

(assert (= (and b!141699 c!26688) b!141702))

(assert (= (and b!141699 (not c!26688)) b!141708))

(assert (= (and b!141702 res!67624) b!141704))

(assert (= (and b!141708 c!26690) b!141700))

(assert (= (and b!141708 (not c!26690)) b!141705))

(declare-fun b_lambda!6371 () Bool)

(assert (=> (not b_lambda!6371) (not b!141701)))

(assert (=> b!141701 t!6292))

(declare-fun b_and!8869 () Bool)

(assert (= b_and!8865 (and (=> t!6292 result!4167) b_and!8869)))

(assert (=> b!141701 t!6294))

(declare-fun b_and!8871 () Bool)

(assert (= b_and!8867 (and (=> t!6294 result!4171) b_and!8871)))

(declare-fun b_lambda!6373 () Bool)

(assert (=> (not b_lambda!6373) (not b!141704)))

(assert (=> b!141704 t!6292))

(declare-fun b_and!8873 () Bool)

(assert (= b_and!8869 (and (=> t!6292 result!4167) b_and!8873)))

(assert (=> b!141704 t!6294))

(declare-fun b_and!8875 () Bool)

(assert (= b_and!8871 (and (=> t!6294 result!4171) b_and!8875)))

(assert (=> b!141701 m!167953))

(declare-fun m!170357 () Bool)

(assert (=> b!141701 m!170357))

(declare-fun m!170359 () Bool)

(assert (=> b!141701 m!170359))

(assert (=> b!141701 m!166661))

(assert (=> b!141701 m!170357))

(declare-fun m!170361 () Bool)

(assert (=> b!141701 m!170361))

(declare-fun m!170363 () Bool)

(assert (=> b!141701 m!170363))

(assert (=> b!141701 m!170363))

(assert (=> b!141701 m!166661))

(declare-fun m!170365 () Bool)

(assert (=> b!141701 m!170365))

(declare-fun m!170367 () Bool)

(assert (=> b!141701 m!170367))

(assert (=> b!141707 m!167953))

(assert (=> b!141707 m!167953))

(declare-fun m!170369 () Bool)

(assert (=> b!141707 m!170369))

(declare-fun m!170371 () Bool)

(assert (=> b!141700 m!170371))

(assert (=> b!141704 m!167953))

(assert (=> b!141704 m!166661))

(assert (=> b!141704 m!170363))

(assert (=> b!141704 m!170363))

(assert (=> b!141704 m!166661))

(assert (=> b!141704 m!170365))

(assert (=> b!141704 m!167953))

(declare-fun m!170373 () Bool)

(assert (=> b!141704 m!170373))

(declare-fun m!170375 () Bool)

(assert (=> b!141698 m!170375))

(declare-fun m!170377 () Bool)

(assert (=> d!44685 m!170377))

(assert (=> d!44685 m!166839))

(declare-fun m!170379 () Bool)

(assert (=> b!141705 m!170379))

(assert (=> b!141702 m!167953))

(assert (=> b!141702 m!167953))

(declare-fun m!170381 () Bool)

(assert (=> b!141702 m!170381))

(assert (=> b!141706 m!167953))

(assert (=> b!141706 m!167953))

(assert (=> b!141706 m!170369))

(assert (=> bm!15703 m!170371))

(assert (=> b!140405 d!44685))

(declare-fun d!44687 () Bool)

(assert (=> d!44687 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73188) lt!73194)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73188) lt!73194))))))

(declare-fun bs!5962 () Bool)

(assert (= bs!5962 d!44687))

(assert (=> bs!5962 m!168783))

(declare-fun m!170383 () Bool)

(assert (=> bs!5962 m!170383))

(assert (=> b!140980 d!44687))

(declare-fun b!141711 () Bool)

(declare-fun e!92342 () Option!183)

(declare-fun e!92343 () Option!183)

(assert (=> b!141711 (= e!92342 e!92343)))

(declare-fun c!26693 () Bool)

(assert (=> b!141711 (= c!26693 (and ((_ is Cons!1715) (toList!858 lt!73188)) (not (= (_1!1322 (h!2322 (toList!858 lt!73188))) lt!73194))))))

(declare-fun b!141712 () Bool)

(assert (=> b!141712 (= e!92343 (getValueByKey!177 (t!6295 (toList!858 lt!73188)) lt!73194))))

(declare-fun b!141710 () Bool)

(assert (=> b!141710 (= e!92342 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73188)))))))

(declare-fun b!141713 () Bool)

(assert (=> b!141713 (= e!92343 None!181)))

(declare-fun d!44689 () Bool)

(declare-fun c!26692 () Bool)

(assert (=> d!44689 (= c!26692 (and ((_ is Cons!1715) (toList!858 lt!73188)) (= (_1!1322 (h!2322 (toList!858 lt!73188))) lt!73194)))))

(assert (=> d!44689 (= (getValueByKey!177 (toList!858 lt!73188) lt!73194) e!92342)))

(assert (= (and d!44689 c!26692) b!141710))

(assert (= (and d!44689 (not c!26692)) b!141711))

(assert (= (and b!141711 c!26693) b!141712))

(assert (= (and b!141711 (not c!26693)) b!141713))

(declare-fun m!170385 () Bool)

(assert (=> b!141712 m!170385))

(assert (=> b!140980 d!44689))

(declare-fun d!44691 () Bool)

(assert (=> d!44691 (= (apply!120 lt!73770 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73770) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5963 () Bool)

(assert (= bs!5963 d!44691))

(assert (=> bs!5963 m!166927))

(declare-fun m!170387 () Bool)

(assert (=> bs!5963 m!170387))

(assert (=> bs!5963 m!170387))

(declare-fun m!170389 () Bool)

(assert (=> bs!5963 m!170389))

(assert (=> b!140693 d!44691))

(assert (=> b!140693 d!44145))

(declare-fun lt!74346 () Bool)

(declare-fun d!44693 () Bool)

(assert (=> d!44693 (= lt!74346 (select (content!139 lt!73881) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!92344 () Bool)

(assert (=> d!44693 (= lt!74346 e!92344)))

(declare-fun res!67625 () Bool)

(assert (=> d!44693 (=> (not res!67625) (not e!92344))))

(assert (=> d!44693 (= res!67625 ((_ is Cons!1715) lt!73881))))

(assert (=> d!44693 (= (contains!907 lt!73881 (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74346)))

(declare-fun b!141714 () Bool)

(declare-fun e!92345 () Bool)

(assert (=> b!141714 (= e!92344 e!92345)))

(declare-fun res!67626 () Bool)

(assert (=> b!141714 (=> res!67626 e!92345)))

(assert (=> b!141714 (= res!67626 (= (h!2322 lt!73881) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141715 () Bool)

(assert (=> b!141715 (= e!92345 (contains!907 (t!6295 lt!73881) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44693 res!67625) b!141714))

(assert (= (and b!141714 (not res!67626)) b!141715))

(declare-fun m!170391 () Bool)

(assert (=> d!44693 m!170391))

(declare-fun m!170393 () Bool)

(assert (=> d!44693 m!170393))

(declare-fun m!170395 () Bool)

(assert (=> b!141715 m!170395))

(assert (=> b!140868 d!44693))

(declare-fun d!44695 () Bool)

(declare-fun res!67627 () Bool)

(declare-fun e!92346 () Bool)

(assert (=> d!44695 (=> res!67627 e!92346)))

(assert (=> d!44695 (= res!67627 (and ((_ is Cons!1715) lt!73931) (= (_1!1322 (h!2322 lt!73931)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!44695 (= (containsKey!180 lt!73931 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!92346)))

(declare-fun b!141716 () Bool)

(declare-fun e!92347 () Bool)

(assert (=> b!141716 (= e!92346 e!92347)))

(declare-fun res!67628 () Bool)

(assert (=> b!141716 (=> (not res!67628) (not e!92347))))

(assert (=> b!141716 (= res!67628 (and (or (not ((_ is Cons!1715) lt!73931)) (bvsle (_1!1322 (h!2322 lt!73931)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) ((_ is Cons!1715) lt!73931) (bvslt (_1!1322 (h!2322 lt!73931)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141717 () Bool)

(assert (=> b!141717 (= e!92347 (containsKey!180 (t!6295 lt!73931) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44695 (not res!67627)) b!141716))

(assert (= (and b!141716 res!67628) b!141717))

(declare-fun m!170397 () Bool)

(assert (=> b!141717 m!170397))

(assert (=> b!140926 d!44695))

(declare-fun b!141719 () Bool)

(declare-fun e!92348 () Option!183)

(declare-fun e!92349 () Option!183)

(assert (=> b!141719 (= e!92348 e!92349)))

(declare-fun c!26695 () Bool)

(assert (=> b!141719 (= c!26695 (and ((_ is Cons!1715) (toList!858 lt!73906)) (not (= (_1!1322 (h!2322 (toList!858 lt!73906))) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!141720 () Bool)

(assert (=> b!141720 (= e!92349 (getValueByKey!177 (t!6295 (toList!858 lt!73906)) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!141718 () Bool)

(assert (=> b!141718 (= e!92348 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73906)))))))

(declare-fun b!141721 () Bool)

(assert (=> b!141721 (= e!92349 None!181)))

(declare-fun c!26694 () Bool)

(declare-fun d!44697 () Bool)

(assert (=> d!44697 (= c!26694 (and ((_ is Cons!1715) (toList!858 lt!73906)) (= (_1!1322 (h!2322 (toList!858 lt!73906))) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!44697 (= (getValueByKey!177 (toList!858 lt!73906) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92348)))

(assert (= (and d!44697 c!26694) b!141718))

(assert (= (and d!44697 (not c!26694)) b!141719))

(assert (= (and b!141719 c!26695) b!141720))

(assert (= (and b!141719 (not c!26695)) b!141721))

(declare-fun m!170399 () Bool)

(assert (=> b!141720 m!170399))

(assert (=> b!140894 d!44697))

(declare-fun d!44699 () Bool)

(declare-fun res!67629 () Bool)

(declare-fun e!92350 () Bool)

(assert (=> d!44699 (=> res!67629 e!92350)))

(assert (=> d!44699 (= res!67629 (and ((_ is Cons!1715) lt!73821) (= (_1!1322 (h!2322 lt!73821)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44699 (= (containsKey!180 lt!73821 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92350)))

(declare-fun b!141722 () Bool)

(declare-fun e!92351 () Bool)

(assert (=> b!141722 (= e!92350 e!92351)))

(declare-fun res!67630 () Bool)

(assert (=> b!141722 (=> (not res!67630) (not e!92351))))

(assert (=> b!141722 (= res!67630 (and (or (not ((_ is Cons!1715) lt!73821)) (bvsle (_1!1322 (h!2322 lt!73821)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73821) (bvslt (_1!1322 (h!2322 lt!73821)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141723 () Bool)

(assert (=> b!141723 (= e!92351 (containsKey!180 (t!6295 lt!73821) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44699 (not res!67629)) b!141722))

(assert (= (and b!141722 res!67630) b!141723))

(declare-fun m!170401 () Bool)

(assert (=> b!141723 m!170401))

(assert (=> b!140763 d!44699))

(declare-fun d!44701 () Bool)

(declare-fun res!67631 () Bool)

(declare-fun e!92352 () Bool)

(assert (=> d!44701 (=> res!67631 e!92352)))

(assert (=> d!44701 (= res!67631 (and ((_ is Cons!1715) (toList!858 lt!73425)) (= (_1!1322 (h!2322 (toList!858 lt!73425))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44701 (= (containsKey!180 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92352)))

(declare-fun b!141724 () Bool)

(declare-fun e!92353 () Bool)

(assert (=> b!141724 (= e!92352 e!92353)))

(declare-fun res!67632 () Bool)

(assert (=> b!141724 (=> (not res!67632) (not e!92353))))

(assert (=> b!141724 (= res!67632 (and (or (not ((_ is Cons!1715) (toList!858 lt!73425))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73425))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) (toList!858 lt!73425)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73425))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141725 () Bool)

(assert (=> b!141725 (= e!92353 (containsKey!180 (t!6295 (toList!858 lt!73425)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44701 (not res!67631)) b!141724))

(assert (= (and b!141724 res!67632) b!141725))

(declare-fun m!170403 () Bool)

(assert (=> b!141725 m!170403))

(assert (=> d!43885 d!44701))

(assert (=> b!140284 d!44157))

(assert (=> b!140974 d!44319))

(declare-fun d!44703 () Bool)

(assert (=> d!44703 (= (apply!120 lt!73691 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73691) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5964 () Bool)

(assert (= bs!5964 d!44703))

(declare-fun m!170405 () Bool)

(assert (=> bs!5964 m!170405))

(assert (=> bs!5964 m!170405))

(declare-fun m!170407 () Bool)

(assert (=> bs!5964 m!170407))

(assert (=> b!140555 d!44703))

(declare-fun d!44705 () Bool)

(assert (=> d!44705 (= (get!1535 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43765 d!44705))

(assert (=> d!43765 d!44569))

(declare-fun d!44707 () Bool)

(assert (=> d!44707 (= (apply!120 lt!73553 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73553) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5965 () Bool)

(assert (= bs!5965 d!44707))

(assert (=> bs!5965 m!166927))

(declare-fun m!170409 () Bool)

(assert (=> bs!5965 m!170409))

(assert (=> bs!5965 m!170409))

(declare-fun m!170411 () Bool)

(assert (=> bs!5965 m!170411))

(assert (=> b!140310 d!44707))

(assert (=> b!140310 d!43715))

(assert (=> d!43937 d!43595))

(assert (=> d!43937 d!43597))

(declare-fun d!44709 () Bool)

(assert (=> d!44709 (= (isEmpty!423 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!182) (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43881 d!44709))

(assert (=> d!44171 d!44181))

(declare-fun d!44711 () Bool)

(assert (=> d!44711 (= (apply!120 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) lt!73255) (apply!120 lt!73256 lt!73255))))

(assert (=> d!44711 true))

(declare-fun _$34!1007 () Unit!4387)

(assert (=> d!44711 (= (choose!867 lt!73256 lt!73252 (minValue!2789 newMap!16) lt!73255) _$34!1007)))

(declare-fun bs!5966 () Bool)

(assert (= bs!5966 d!44711))

(assert (=> bs!5966 m!166993))

(assert (=> bs!5966 m!166993))

(assert (=> bs!5966 m!166995))

(assert (=> bs!5966 m!166991))

(assert (=> d!44171 d!44711))

(assert (=> d!44171 d!44169))

(declare-fun d!44713 () Bool)

(declare-fun e!92354 () Bool)

(assert (=> d!44713 e!92354))

(declare-fun res!67633 () Bool)

(assert (=> d!44713 (=> res!67633 e!92354)))

(declare-fun lt!74350 () Bool)

(assert (=> d!44713 (= res!67633 (not lt!74350))))

(declare-fun lt!74347 () Bool)

(assert (=> d!44713 (= lt!74350 lt!74347)))

(declare-fun lt!74349 () Unit!4387)

(declare-fun e!92355 () Unit!4387)

(assert (=> d!44713 (= lt!74349 e!92355)))

(declare-fun c!26696 () Bool)

(assert (=> d!44713 (= c!26696 lt!74347)))

(assert (=> d!44713 (= lt!74347 (containsKey!180 (toList!858 lt!73256) lt!73255))))

(assert (=> d!44713 (= (contains!904 lt!73256 lt!73255) lt!74350)))

(declare-fun b!141726 () Bool)

(declare-fun lt!74348 () Unit!4387)

(assert (=> b!141726 (= e!92355 lt!74348)))

(assert (=> b!141726 (= lt!74348 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73256) lt!73255))))

(assert (=> b!141726 (isDefined!129 (getValueByKey!177 (toList!858 lt!73256) lt!73255))))

(declare-fun b!141727 () Bool)

(declare-fun Unit!4475 () Unit!4387)

(assert (=> b!141727 (= e!92355 Unit!4475)))

(declare-fun b!141728 () Bool)

(assert (=> b!141728 (= e!92354 (isDefined!129 (getValueByKey!177 (toList!858 lt!73256) lt!73255)))))

(assert (= (and d!44713 c!26696) b!141726))

(assert (= (and d!44713 (not c!26696)) b!141727))

(assert (= (and d!44713 (not res!67633)) b!141728))

(declare-fun m!170413 () Bool)

(assert (=> d!44713 m!170413))

(declare-fun m!170415 () Bool)

(assert (=> b!141726 m!170415))

(assert (=> b!141726 m!169049))

(assert (=> b!141726 m!169049))

(declare-fun m!170417 () Bool)

(assert (=> b!141726 m!170417))

(assert (=> b!141728 m!169049))

(assert (=> b!141728 m!169049))

(assert (=> b!141728 m!170417))

(assert (=> d!44171 d!44713))

(assert (=> d!44171 d!44175))

(declare-fun d!44715 () Bool)

(declare-fun e!92356 () Bool)

(assert (=> d!44715 e!92356))

(declare-fun res!67634 () Bool)

(assert (=> d!44715 (=> (not res!67634) (not e!92356))))

(declare-fun lt!74353 () ListLongMap!1685)

(assert (=> d!44715 (= res!67634 (contains!904 lt!74353 (_1!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))))))

(declare-fun lt!74352 () List!1719)

(assert (=> d!44715 (= lt!74353 (ListLongMap!1686 lt!74352))))

(declare-fun lt!74351 () Unit!4387)

(declare-fun lt!74354 () Unit!4387)

(assert (=> d!44715 (= lt!74351 lt!74354)))

(assert (=> d!44715 (= (getValueByKey!177 lt!74352 (_1!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))))))

(assert (=> d!44715 (= lt!74354 (lemmaContainsTupThenGetReturnValue!91 lt!74352 (_1!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))))))

(assert (=> d!44715 (= lt!74352 (insertStrictlySorted!94 (toList!858 lt!73729) (_1!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))))))

(assert (=> d!44715 (= (+!173 lt!73729 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))) lt!74353)))

(declare-fun b!141729 () Bool)

(declare-fun res!67635 () Bool)

(assert (=> b!141729 (=> (not res!67635) (not e!92356))))

(assert (=> b!141729 (= res!67635 (= (getValueByKey!177 (toList!858 lt!74353) (_1!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))))))))

(declare-fun b!141730 () Bool)

(assert (=> b!141730 (= e!92356 (contains!907 (toList!858 lt!74353) (tuple2!2623 lt!73718 (minValue!2789 newMap!16))))))

(assert (= (and d!44715 res!67634) b!141729))

(assert (= (and b!141729 res!67635) b!141730))

(declare-fun m!170419 () Bool)

(assert (=> d!44715 m!170419))

(declare-fun m!170421 () Bool)

(assert (=> d!44715 m!170421))

(declare-fun m!170423 () Bool)

(assert (=> d!44715 m!170423))

(declare-fun m!170425 () Bool)

(assert (=> d!44715 m!170425))

(declare-fun m!170427 () Bool)

(assert (=> b!141729 m!170427))

(declare-fun m!170429 () Bool)

(assert (=> b!141730 m!170429))

(assert (=> b!140580 d!44715))

(declare-fun b!141731 () Bool)

(declare-fun res!67637 () Bool)

(declare-fun e!92362 () Bool)

(assert (=> b!141731 (=> (not res!67637) (not e!92362))))

(declare-fun lt!74357 () ListLongMap!1685)

(assert (=> b!141731 (= res!67637 (not (contains!904 lt!74357 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141732 () Bool)

(declare-fun e!92358 () Bool)

(assert (=> b!141732 (= e!92362 e!92358)))

(declare-fun c!26697 () Bool)

(declare-fun e!92360 () Bool)

(assert (=> b!141732 (= c!26697 e!92360)))

(declare-fun res!67638 () Bool)

(assert (=> b!141732 (=> (not res!67638) (not e!92360))))

(assert (=> b!141732 (= res!67638 (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun b!141733 () Bool)

(declare-fun e!92359 () Bool)

(assert (=> b!141733 (= e!92359 (= lt!74357 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141734 () Bool)

(declare-fun lt!74359 () Unit!4387)

(declare-fun lt!74355 () Unit!4387)

(assert (=> b!141734 (= lt!74359 lt!74355)))

(declare-fun lt!74356 () (_ BitVec 64))

(declare-fun lt!74361 () (_ BitVec 64))

(declare-fun lt!74358 () ListLongMap!1685)

(declare-fun lt!74360 () V!3553)

(assert (=> b!141734 (not (contains!904 (+!173 lt!74358 (tuple2!2623 lt!74356 lt!74360)) lt!74361))))

(assert (=> b!141734 (= lt!74355 (addStillNotContains!66 lt!74358 lt!74356 lt!74360 lt!74361))))

(assert (=> b!141734 (= lt!74361 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141734 (= lt!74360 (get!1531 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141734 (= lt!74356 (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))

(declare-fun call!15707 () ListLongMap!1685)

(assert (=> b!141734 (= lt!74358 call!15707)))

(declare-fun e!92363 () ListLongMap!1685)

(assert (=> b!141734 (= e!92363 (+!173 call!15707 (tuple2!2623 (select (arr!2306 lt!73406) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141735 () Bool)

(declare-fun e!92357 () Bool)

(assert (=> b!141735 (= e!92358 e!92357)))

(assert (=> b!141735 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun res!67639 () Bool)

(assert (=> b!141735 (= res!67639 (contains!904 lt!74357 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(assert (=> b!141735 (=> (not res!67639) (not e!92357))))

(declare-fun d!44717 () Bool)

(assert (=> d!44717 e!92362))

(declare-fun res!67636 () Bool)

(assert (=> d!44717 (=> (not res!67636) (not e!92362))))

(assert (=> d!44717 (= res!67636 (not (contains!904 lt!74357 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92361 () ListLongMap!1685)

(assert (=> d!44717 (= lt!74357 e!92361)))

(declare-fun c!26700 () Bool)

(assert (=> d!44717 (= c!26700 (bvsge #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(assert (=> d!44717 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44717 (= (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74357)))

(declare-fun bm!15704 () Bool)

(assert (=> bm!15704 (= call!15707 (getCurrentListMapNoExtraKeys!140 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141736 () Bool)

(assert (=> b!141736 (= e!92363 call!15707)))

(declare-fun b!141737 () Bool)

(assert (=> b!141737 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(assert (=> b!141737 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 lt!73413)))))

(assert (=> b!141737 (= e!92357 (= (apply!120 lt!74357 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141738 () Bool)

(assert (=> b!141738 (= e!92359 (isEmpty!424 lt!74357))))

(declare-fun b!141739 () Bool)

(assert (=> b!141739 (= e!92361 e!92363)))

(declare-fun c!26698 () Bool)

(assert (=> b!141739 (= c!26698 (validKeyInArray!0 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(declare-fun b!141740 () Bool)

(assert (=> b!141740 (= e!92360 (validKeyInArray!0 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(assert (=> b!141740 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141741 () Bool)

(assert (=> b!141741 (= e!92358 e!92359)))

(declare-fun c!26699 () Bool)

(assert (=> b!141741 (= c!26699 (bvslt #b00000000000000000000000000000000 (size!2578 lt!73406)))))

(declare-fun b!141742 () Bool)

(assert (=> b!141742 (= e!92361 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44717 c!26700) b!141742))

(assert (= (and d!44717 (not c!26700)) b!141739))

(assert (= (and b!141739 c!26698) b!141734))

(assert (= (and b!141739 (not c!26698)) b!141736))

(assert (= (or b!141734 b!141736) bm!15704))

(assert (= (and d!44717 res!67636) b!141731))

(assert (= (and b!141731 res!67637) b!141732))

(assert (= (and b!141732 res!67638) b!141740))

(assert (= (and b!141732 c!26697) b!141735))

(assert (= (and b!141732 (not c!26697)) b!141741))

(assert (= (and b!141735 res!67639) b!141737))

(assert (= (and b!141741 c!26699) b!141733))

(assert (= (and b!141741 (not c!26699)) b!141738))

(declare-fun b_lambda!6375 () Bool)

(assert (=> (not b_lambda!6375) (not b!141734)))

(assert (=> b!141734 t!6309))

(declare-fun b_and!8877 () Bool)

(assert (= b_and!8873 (and (=> t!6309 result!4187) b_and!8877)))

(assert (=> b!141734 t!6311))

(declare-fun b_and!8879 () Bool)

(assert (= b_and!8875 (and (=> t!6311 result!4189) b_and!8879)))

(declare-fun b_lambda!6377 () Bool)

(assert (=> (not b_lambda!6377) (not b!141737)))

(assert (=> b!141737 t!6309))

(declare-fun b_and!8881 () Bool)

(assert (= b_and!8877 (and (=> t!6309 result!4187) b_and!8881)))

(assert (=> b!141737 t!6311))

(declare-fun b_and!8883 () Bool)

(assert (= b_and!8879 (and (=> t!6311 result!4189) b_and!8883)))

(assert (=> b!141734 m!168061))

(declare-fun m!170431 () Bool)

(assert (=> b!141734 m!170431))

(declare-fun m!170433 () Bool)

(assert (=> b!141734 m!170433))

(assert (=> b!141734 m!166963))

(assert (=> b!141734 m!170431))

(declare-fun m!170435 () Bool)

(assert (=> b!141734 m!170435))

(assert (=> b!141734 m!168095))

(assert (=> b!141734 m!168095))

(assert (=> b!141734 m!166963))

(assert (=> b!141734 m!168097))

(declare-fun m!170437 () Bool)

(assert (=> b!141734 m!170437))

(assert (=> b!141740 m!168061))

(assert (=> b!141740 m!168061))

(assert (=> b!141740 m!168091))

(declare-fun m!170439 () Bool)

(assert (=> b!141733 m!170439))

(assert (=> b!141737 m!168061))

(assert (=> b!141737 m!166963))

(assert (=> b!141737 m!168095))

(assert (=> b!141737 m!168095))

(assert (=> b!141737 m!166963))

(assert (=> b!141737 m!168097))

(assert (=> b!141737 m!168061))

(declare-fun m!170441 () Bool)

(assert (=> b!141737 m!170441))

(declare-fun m!170443 () Bool)

(assert (=> b!141731 m!170443))

(declare-fun m!170445 () Bool)

(assert (=> d!44717 m!170445))

(assert (=> d!44717 m!166907))

(declare-fun m!170447 () Bool)

(assert (=> b!141738 m!170447))

(assert (=> b!141735 m!168061))

(assert (=> b!141735 m!168061))

(declare-fun m!170449 () Bool)

(assert (=> b!141735 m!170449))

(assert (=> b!141739 m!168061))

(assert (=> b!141739 m!168061))

(assert (=> b!141739 m!168091))

(assert (=> bm!15704 m!170439))

(assert (=> b!140580 d!44717))

(declare-fun d!44719 () Bool)

(assert (=> d!44719 (= (apply!120 (+!173 lt!73732 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))) lt!73731) (apply!120 lt!73732 lt!73731))))

(declare-fun lt!74362 () Unit!4387)

(assert (=> d!44719 (= lt!74362 (choose!867 lt!73732 lt!73728 (minValue!2789 newMap!16) lt!73731))))

(declare-fun e!92364 () Bool)

(assert (=> d!44719 e!92364))

(declare-fun res!67640 () Bool)

(assert (=> d!44719 (=> (not res!67640) (not e!92364))))

(assert (=> d!44719 (= res!67640 (contains!904 lt!73732 lt!73731))))

(assert (=> d!44719 (= (addApplyDifferent!96 lt!73732 lt!73728 (minValue!2789 newMap!16) lt!73731) lt!74362)))

(declare-fun b!141743 () Bool)

(assert (=> b!141743 (= e!92364 (not (= lt!73731 lt!73728)))))

(assert (= (and d!44719 res!67640) b!141743))

(assert (=> d!44719 m!168069))

(declare-fun m!170451 () Bool)

(assert (=> d!44719 m!170451))

(assert (=> d!44719 m!168071))

(assert (=> d!44719 m!168073))

(declare-fun m!170453 () Bool)

(assert (=> d!44719 m!170453))

(assert (=> d!44719 m!168071))

(assert (=> b!140580 d!44719))

(declare-fun d!44721 () Bool)

(assert (=> d!44721 (= (apply!120 (+!173 lt!73716 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))) lt!73714) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73716 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))) lt!73714)))))

(declare-fun bs!5967 () Bool)

(assert (= bs!5967 d!44721))

(declare-fun m!170455 () Bool)

(assert (=> bs!5967 m!170455))

(assert (=> bs!5967 m!170455))

(declare-fun m!170457 () Bool)

(assert (=> bs!5967 m!170457))

(assert (=> b!140580 d!44721))

(declare-fun d!44723 () Bool)

(assert (=> d!44723 (= (apply!120 (+!173 lt!73716 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))) lt!73714) (apply!120 lt!73716 lt!73714))))

(declare-fun lt!74363 () Unit!4387)

(assert (=> d!44723 (= lt!74363 (choose!867 lt!73716 lt!73726 (zeroValue!2789 newMap!16) lt!73714))))

(declare-fun e!92365 () Bool)

(assert (=> d!44723 e!92365))

(declare-fun res!67641 () Bool)

(assert (=> d!44723 (=> (not res!67641) (not e!92365))))

(assert (=> d!44723 (= res!67641 (contains!904 lt!73716 lt!73714))))

(assert (=> d!44723 (= (addApplyDifferent!96 lt!73716 lt!73726 (zeroValue!2789 newMap!16) lt!73714) lt!74363)))

(declare-fun b!141744 () Bool)

(assert (=> b!141744 (= e!92365 (not (= lt!73714 lt!73726)))))

(assert (= (and d!44723 res!67641) b!141744))

(assert (=> d!44723 m!168079))

(declare-fun m!170459 () Bool)

(assert (=> d!44723 m!170459))

(assert (=> d!44723 m!168057))

(assert (=> d!44723 m!168081))

(declare-fun m!170461 () Bool)

(assert (=> d!44723 m!170461))

(assert (=> d!44723 m!168057))

(assert (=> b!140580 d!44723))

(declare-fun d!44725 () Bool)

(assert (=> d!44725 (contains!904 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))) lt!73723)))

(declare-fun lt!74364 () Unit!4387)

(assert (=> d!44725 (= lt!74364 (choose!866 lt!73717 lt!73719 (zeroValue!2789 newMap!16) lt!73723))))

(assert (=> d!44725 (contains!904 lt!73717 lt!73723)))

(assert (=> d!44725 (= (addStillContains!96 lt!73717 lt!73719 (zeroValue!2789 newMap!16) lt!73723) lt!74364)))

(declare-fun bs!5968 () Bool)

(assert (= bs!5968 d!44725))

(assert (=> bs!5968 m!168065))

(assert (=> bs!5968 m!168065))

(assert (=> bs!5968 m!168067))

(declare-fun m!170463 () Bool)

(assert (=> bs!5968 m!170463))

(declare-fun m!170465 () Bool)

(assert (=> bs!5968 m!170465))

(assert (=> b!140580 d!44725))

(declare-fun d!44727 () Bool)

(assert (=> d!44727 (= (apply!120 lt!73716 lt!73714) (get!1535 (getValueByKey!177 (toList!858 lt!73716) lt!73714)))))

(declare-fun bs!5969 () Bool)

(assert (= bs!5969 d!44727))

(declare-fun m!170467 () Bool)

(assert (=> bs!5969 m!170467))

(assert (=> bs!5969 m!170467))

(declare-fun m!170469 () Bool)

(assert (=> bs!5969 m!170469))

(assert (=> b!140580 d!44727))

(declare-fun d!44729 () Bool)

(declare-fun e!92366 () Bool)

(assert (=> d!44729 e!92366))

(declare-fun res!67642 () Bool)

(assert (=> d!44729 (=> (not res!67642) (not e!92366))))

(declare-fun lt!74367 () ListLongMap!1685)

(assert (=> d!44729 (= res!67642 (contains!904 lt!74367 (_1!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74366 () List!1719)

(assert (=> d!44729 (= lt!74367 (ListLongMap!1686 lt!74366))))

(declare-fun lt!74365 () Unit!4387)

(declare-fun lt!74368 () Unit!4387)

(assert (=> d!44729 (= lt!74365 lt!74368)))

(assert (=> d!44729 (= (getValueByKey!177 lt!74366 (_1!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44729 (= lt!74368 (lemmaContainsTupThenGetReturnValue!91 lt!74366 (_1!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44729 (= lt!74366 (insertStrictlySorted!94 (toList!858 lt!73716) (_1!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44729 (= (+!173 lt!73716 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))) lt!74367)))

(declare-fun b!141745 () Bool)

(declare-fun res!67643 () Bool)

(assert (=> b!141745 (=> (not res!67643) (not e!92366))))

(assert (=> b!141745 (= res!67643 (= (getValueByKey!177 (toList!858 lt!74367) (_1!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141746 () Bool)

(assert (=> b!141746 (= e!92366 (contains!907 (toList!858 lt!74367) (tuple2!2623 lt!73726 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44729 res!67642) b!141745))

(assert (= (and b!141745 res!67643) b!141746))

(declare-fun m!170471 () Bool)

(assert (=> d!44729 m!170471))

(declare-fun m!170473 () Bool)

(assert (=> d!44729 m!170473))

(declare-fun m!170475 () Bool)

(assert (=> d!44729 m!170475))

(declare-fun m!170477 () Bool)

(assert (=> d!44729 m!170477))

(declare-fun m!170479 () Bool)

(assert (=> b!141745 m!170479))

(declare-fun m!170481 () Bool)

(assert (=> b!141746 m!170481))

(assert (=> b!140580 d!44729))

(declare-fun d!44731 () Bool)

(declare-fun e!92367 () Bool)

(assert (=> d!44731 e!92367))

(declare-fun res!67644 () Bool)

(assert (=> d!44731 (=> (not res!67644) (not e!92367))))

(declare-fun lt!74371 () ListLongMap!1685)

(assert (=> d!44731 (= res!67644 (contains!904 lt!74371 (_1!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74370 () List!1719)

(assert (=> d!44731 (= lt!74371 (ListLongMap!1686 lt!74370))))

(declare-fun lt!74369 () Unit!4387)

(declare-fun lt!74372 () Unit!4387)

(assert (=> d!44731 (= lt!74369 lt!74372)))

(assert (=> d!44731 (= (getValueByKey!177 lt!74370 (_1!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44731 (= lt!74372 (lemmaContainsTupThenGetReturnValue!91 lt!74370 (_1!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44731 (= lt!74370 (insertStrictlySorted!94 (toList!858 lt!73717) (_1!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44731 (= (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))) lt!74371)))

(declare-fun b!141747 () Bool)

(declare-fun res!67645 () Bool)

(assert (=> b!141747 (=> (not res!67645) (not e!92367))))

(assert (=> b!141747 (= res!67645 (= (getValueByKey!177 (toList!858 lt!74371) (_1!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141748 () Bool)

(assert (=> b!141748 (= e!92367 (contains!907 (toList!858 lt!74371) (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44731 res!67644) b!141747))

(assert (= (and b!141747 res!67645) b!141748))

(declare-fun m!170483 () Bool)

(assert (=> d!44731 m!170483))

(declare-fun m!170485 () Bool)

(assert (=> d!44731 m!170485))

(declare-fun m!170487 () Bool)

(assert (=> d!44731 m!170487))

(declare-fun m!170489 () Bool)

(assert (=> d!44731 m!170489))

(declare-fun m!170491 () Bool)

(assert (=> b!141747 m!170491))

(declare-fun m!170493 () Bool)

(assert (=> b!141748 m!170493))

(assert (=> b!140580 d!44731))

(declare-fun d!44733 () Bool)

(assert (=> d!44733 (= (apply!120 (+!173 lt!73729 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))) lt!73724) (apply!120 lt!73729 lt!73724))))

(declare-fun lt!74373 () Unit!4387)

(assert (=> d!44733 (= lt!74373 (choose!867 lt!73729 lt!73718 (minValue!2789 newMap!16) lt!73724))))

(declare-fun e!92368 () Bool)

(assert (=> d!44733 e!92368))

(declare-fun res!67646 () Bool)

(assert (=> d!44733 (=> (not res!67646) (not e!92368))))

(assert (=> d!44733 (= res!67646 (contains!904 lt!73729 lt!73724))))

(assert (=> d!44733 (= (addApplyDifferent!96 lt!73729 lt!73718 (minValue!2789 newMap!16) lt!73724) lt!74373)))

(declare-fun b!141749 () Bool)

(assert (=> b!141749 (= e!92368 (not (= lt!73724 lt!73718)))))

(assert (= (and d!44733 res!67646) b!141749))

(assert (=> d!44733 m!168075))

(declare-fun m!170495 () Bool)

(assert (=> d!44733 m!170495))

(assert (=> d!44733 m!168051))

(assert (=> d!44733 m!168053))

(declare-fun m!170497 () Bool)

(assert (=> d!44733 m!170497))

(assert (=> d!44733 m!168051))

(assert (=> b!140580 d!44733))

(declare-fun d!44735 () Bool)

(assert (=> d!44735 (= (apply!120 (+!173 lt!73732 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))) lt!73731) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73732 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))) lt!73731)))))

(declare-fun bs!5970 () Bool)

(assert (= bs!5970 d!44735))

(declare-fun m!170499 () Bool)

(assert (=> bs!5970 m!170499))

(assert (=> bs!5970 m!170499))

(declare-fun m!170501 () Bool)

(assert (=> bs!5970 m!170501))

(assert (=> b!140580 d!44735))

(declare-fun d!44737 () Bool)

(declare-fun e!92369 () Bool)

(assert (=> d!44737 e!92369))

(declare-fun res!67647 () Bool)

(assert (=> d!44737 (=> res!67647 e!92369)))

(declare-fun lt!74377 () Bool)

(assert (=> d!44737 (= res!67647 (not lt!74377))))

(declare-fun lt!74374 () Bool)

(assert (=> d!44737 (= lt!74377 lt!74374)))

(declare-fun lt!74376 () Unit!4387)

(declare-fun e!92370 () Unit!4387)

(assert (=> d!44737 (= lt!74376 e!92370)))

(declare-fun c!26701 () Bool)

(assert (=> d!44737 (= c!26701 lt!74374)))

(assert (=> d!44737 (= lt!74374 (containsKey!180 (toList!858 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))) lt!73723))))

(assert (=> d!44737 (= (contains!904 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16))) lt!73723) lt!74377)))

(declare-fun b!141750 () Bool)

(declare-fun lt!74375 () Unit!4387)

(assert (=> b!141750 (= e!92370 lt!74375)))

(assert (=> b!141750 (= lt!74375 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))) lt!73723))))

(assert (=> b!141750 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))) lt!73723))))

(declare-fun b!141751 () Bool)

(declare-fun Unit!4476 () Unit!4387)

(assert (=> b!141751 (= e!92370 Unit!4476)))

(declare-fun b!141752 () Bool)

(assert (=> b!141752 (= e!92369 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73717 (tuple2!2623 lt!73719 (zeroValue!2789 newMap!16)))) lt!73723)))))

(assert (= (and d!44737 c!26701) b!141750))

(assert (= (and d!44737 (not c!26701)) b!141751))

(assert (= (and d!44737 (not res!67647)) b!141752))

(declare-fun m!170503 () Bool)

(assert (=> d!44737 m!170503))

(declare-fun m!170505 () Bool)

(assert (=> b!141750 m!170505))

(declare-fun m!170507 () Bool)

(assert (=> b!141750 m!170507))

(assert (=> b!141750 m!170507))

(declare-fun m!170509 () Bool)

(assert (=> b!141750 m!170509))

(assert (=> b!141752 m!170507))

(assert (=> b!141752 m!170507))

(assert (=> b!141752 m!170509))

(assert (=> b!140580 d!44737))

(declare-fun d!44739 () Bool)

(assert (=> d!44739 (= (apply!120 lt!73729 lt!73724) (get!1535 (getValueByKey!177 (toList!858 lt!73729) lt!73724)))))

(declare-fun bs!5971 () Bool)

(assert (= bs!5971 d!44739))

(declare-fun m!170511 () Bool)

(assert (=> bs!5971 m!170511))

(assert (=> bs!5971 m!170511))

(declare-fun m!170513 () Bool)

(assert (=> bs!5971 m!170513))

(assert (=> b!140580 d!44739))

(declare-fun d!44741 () Bool)

(assert (=> d!44741 (= (apply!120 (+!173 lt!73729 (tuple2!2623 lt!73718 (minValue!2789 newMap!16))) lt!73724) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73729 (tuple2!2623 lt!73718 (minValue!2789 newMap!16)))) lt!73724)))))

(declare-fun bs!5972 () Bool)

(assert (= bs!5972 d!44741))

(declare-fun m!170515 () Bool)

(assert (=> bs!5972 m!170515))

(assert (=> bs!5972 m!170515))

(declare-fun m!170517 () Bool)

(assert (=> bs!5972 m!170517))

(assert (=> b!140580 d!44741))

(declare-fun d!44743 () Bool)

(declare-fun e!92371 () Bool)

(assert (=> d!44743 e!92371))

(declare-fun res!67648 () Bool)

(assert (=> d!44743 (=> (not res!67648) (not e!92371))))

(declare-fun lt!74380 () ListLongMap!1685)

(assert (=> d!44743 (= res!67648 (contains!904 lt!74380 (_1!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))))))

(declare-fun lt!74379 () List!1719)

(assert (=> d!44743 (= lt!74380 (ListLongMap!1686 lt!74379))))

(declare-fun lt!74378 () Unit!4387)

(declare-fun lt!74381 () Unit!4387)

(assert (=> d!44743 (= lt!74378 lt!74381)))

(assert (=> d!44743 (= (getValueByKey!177 lt!74379 (_1!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))))))

(assert (=> d!44743 (= lt!74381 (lemmaContainsTupThenGetReturnValue!91 lt!74379 (_1!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))))))

(assert (=> d!44743 (= lt!74379 (insertStrictlySorted!94 (toList!858 lt!73732) (_1!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))))))

(assert (=> d!44743 (= (+!173 lt!73732 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))) lt!74380)))

(declare-fun b!141753 () Bool)

(declare-fun res!67649 () Bool)

(assert (=> b!141753 (=> (not res!67649) (not e!92371))))

(assert (=> b!141753 (= res!67649 (= (getValueByKey!177 (toList!858 lt!74380) (_1!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73728 (minValue!2789 newMap!16))))))))

(declare-fun b!141754 () Bool)

(assert (=> b!141754 (= e!92371 (contains!907 (toList!858 lt!74380) (tuple2!2623 lt!73728 (minValue!2789 newMap!16))))))

(assert (= (and d!44743 res!67648) b!141753))

(assert (= (and b!141753 res!67649) b!141754))

(declare-fun m!170519 () Bool)

(assert (=> d!44743 m!170519))

(declare-fun m!170521 () Bool)

(assert (=> d!44743 m!170521))

(declare-fun m!170523 () Bool)

(assert (=> d!44743 m!170523))

(declare-fun m!170525 () Bool)

(assert (=> d!44743 m!170525))

(declare-fun m!170527 () Bool)

(assert (=> b!141753 m!170527))

(declare-fun m!170529 () Bool)

(assert (=> b!141754 m!170529))

(assert (=> b!140580 d!44743))

(declare-fun d!44745 () Bool)

(assert (=> d!44745 (= (apply!120 lt!73732 lt!73731) (get!1535 (getValueByKey!177 (toList!858 lt!73732) lt!73731)))))

(declare-fun bs!5973 () Bool)

(assert (= bs!5973 d!44745))

(declare-fun m!170531 () Bool)

(assert (=> bs!5973 m!170531))

(assert (=> bs!5973 m!170531))

(declare-fun m!170533 () Bool)

(assert (=> bs!5973 m!170533))

(assert (=> b!140580 d!44745))

(declare-fun d!44747 () Bool)

(assert (=> d!44747 (= (get!1534 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140290 d!44747))

(declare-fun b!141756 () Bool)

(declare-fun e!92372 () Option!183)

(declare-fun e!92373 () Option!183)

(assert (=> b!141756 (= e!92372 e!92373)))

(declare-fun c!26703 () Bool)

(assert (=> b!141756 (= c!26703 (and ((_ is Cons!1715) (toList!858 lt!73803)) (not (= (_1!1322 (h!2322 (toList!858 lt!73803))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141757 () Bool)

(assert (=> b!141757 (= e!92373 (getValueByKey!177 (t!6295 (toList!858 lt!73803)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141755 () Bool)

(assert (=> b!141755 (= e!92372 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73803)))))))

(declare-fun b!141758 () Bool)

(assert (=> b!141758 (= e!92373 None!181)))

(declare-fun c!26702 () Bool)

(declare-fun d!44749 () Bool)

(assert (=> d!44749 (= c!26702 (and ((_ is Cons!1715) (toList!858 lt!73803)) (= (_1!1322 (h!2322 (toList!858 lt!73803))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44749 (= (getValueByKey!177 (toList!858 lt!73803) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92372)))

(assert (= (and d!44749 c!26702) b!141755))

(assert (= (and d!44749 (not c!26702)) b!141756))

(assert (= (and b!141756 c!26703) b!141757))

(assert (= (and b!141756 (not c!26703)) b!141758))

(declare-fun m!170535 () Bool)

(assert (=> b!141757 m!170535))

(assert (=> b!140735 d!44749))

(declare-fun d!44751 () Bool)

(declare-fun lt!74382 () Bool)

(assert (=> d!44751 (= lt!74382 (select (content!139 lt!73951) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92374 () Bool)

(assert (=> d!44751 (= lt!74382 e!92374)))

(declare-fun res!67650 () Bool)

(assert (=> d!44751 (=> (not res!67650) (not e!92374))))

(assert (=> d!44751 (= res!67650 ((_ is Cons!1715) lt!73951))))

(assert (=> d!44751 (= (contains!907 lt!73951 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74382)))

(declare-fun b!141759 () Bool)

(declare-fun e!92375 () Bool)

(assert (=> b!141759 (= e!92374 e!92375)))

(declare-fun res!67651 () Bool)

(assert (=> b!141759 (=> res!67651 e!92375)))

(assert (=> b!141759 (= res!67651 (= (h!2322 lt!73951) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141760 () Bool)

(assert (=> b!141760 (= e!92375 (contains!907 (t!6295 lt!73951) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44751 res!67650) b!141759))

(assert (= (and b!141759 (not res!67651)) b!141760))

(declare-fun m!170537 () Bool)

(assert (=> d!44751 m!170537))

(declare-fun m!170539 () Bool)

(assert (=> d!44751 m!170539))

(declare-fun m!170541 () Bool)

(assert (=> b!141760 m!170541))

(assert (=> b!140998 d!44751))

(declare-fun bm!15705 () Bool)

(declare-fun call!15708 () Bool)

(assert (=> bm!15705 (= call!15708 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))))))

(declare-fun b!141761 () Bool)

(declare-fun e!92378 () Bool)

(declare-fun e!92377 () Bool)

(assert (=> b!141761 (= e!92378 e!92377)))

(declare-fun c!26704 () Bool)

(assert (=> b!141761 (= c!26704 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141762 () Bool)

(declare-fun e!92376 () Bool)

(assert (=> b!141762 (= e!92377 e!92376)))

(declare-fun lt!74385 () (_ BitVec 64))

(assert (=> b!141762 (= lt!74385 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74383 () Unit!4387)

(assert (=> b!141762 (= lt!74383 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (_2!1323 lt!73124)) lt!74385 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141762 (arrayContainsKey!0 (_keys!4698 (_2!1323 lt!73124)) lt!74385 #b00000000000000000000000000000000)))

(declare-fun lt!74384 () Unit!4387)

(assert (=> b!141762 (= lt!74384 lt!74383)))

(declare-fun res!67652 () Bool)

(assert (=> b!141762 (= res!67652 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))) (Found!273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141762 (=> (not res!67652) (not e!92376))))

(declare-fun d!44753 () Bool)

(declare-fun res!67653 () Bool)

(assert (=> d!44753 (=> res!67653 e!92378)))

(assert (=> d!44753 (= res!67653 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!44753 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 (_2!1323 lt!73124)) (mask!7279 (_2!1323 lt!73124))) e!92378)))

(declare-fun b!141763 () Bool)

(assert (=> b!141763 (= e!92377 call!15708)))

(declare-fun b!141764 () Bool)

(assert (=> b!141764 (= e!92376 call!15708)))

(assert (= (and d!44753 (not res!67653)) b!141761))

(assert (= (and b!141761 c!26704) b!141762))

(assert (= (and b!141761 (not c!26704)) b!141763))

(assert (= (and b!141762 res!67652) b!141764))

(assert (= (or b!141764 b!141763) bm!15705))

(declare-fun m!170543 () Bool)

(assert (=> bm!15705 m!170543))

(declare-fun m!170545 () Bool)

(assert (=> b!141761 m!170545))

(assert (=> b!141761 m!170545))

(declare-fun m!170547 () Bool)

(assert (=> b!141761 m!170547))

(assert (=> b!141762 m!170545))

(declare-fun m!170549 () Bool)

(assert (=> b!141762 m!170549))

(declare-fun m!170551 () Bool)

(assert (=> b!141762 m!170551))

(assert (=> b!141762 m!170545))

(declare-fun m!170553 () Bool)

(assert (=> b!141762 m!170553))

(assert (=> bm!15637 d!44753))

(assert (=> b!140703 d!43693))

(assert (=> d!43777 d!43697))

(declare-fun b!141765 () Bool)

(declare-fun res!67655 () Bool)

(declare-fun e!92384 () Bool)

(assert (=> b!141765 (=> (not res!67655) (not e!92384))))

(declare-fun lt!74388 () ListLongMap!1685)

(assert (=> b!141765 (= res!67655 (not (contains!904 lt!74388 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141766 () Bool)

(declare-fun e!92380 () Bool)

(assert (=> b!141766 (= e!92384 e!92380)))

(declare-fun c!26705 () Bool)

(declare-fun e!92382 () Bool)

(assert (=> b!141766 (= c!26705 e!92382)))

(declare-fun res!67656 () Bool)

(assert (=> b!141766 (=> (not res!67656) (not e!92382))))

(assert (=> b!141766 (= res!67656 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!92381 () Bool)

(declare-fun b!141767 () Bool)

(assert (=> b!141767 (= e!92381 (= lt!74388 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141768 () Bool)

(declare-fun lt!74390 () Unit!4387)

(declare-fun lt!74386 () Unit!4387)

(assert (=> b!141768 (= lt!74390 lt!74386)))

(declare-fun lt!74387 () (_ BitVec 64))

(declare-fun lt!74391 () V!3553)

(declare-fun lt!74392 () (_ BitVec 64))

(declare-fun lt!74389 () ListLongMap!1685)

(assert (=> b!141768 (not (contains!904 (+!173 lt!74389 (tuple2!2623 lt!74387 lt!74391)) lt!74392))))

(assert (=> b!141768 (= lt!74386 (addStillNotContains!66 lt!74389 lt!74387 lt!74391 lt!74392))))

(assert (=> b!141768 (= lt!74392 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141768 (= lt!74391 (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141768 (= lt!74387 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15709 () ListLongMap!1685)

(assert (=> b!141768 (= lt!74389 call!15709)))

(declare-fun e!92385 () ListLongMap!1685)

(assert (=> b!141768 (= e!92385 (+!173 call!15709 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141769 () Bool)

(declare-fun e!92379 () Bool)

(assert (=> b!141769 (= e!92380 e!92379)))

(assert (=> b!141769 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67657 () Bool)

(assert (=> b!141769 (= res!67657 (contains!904 lt!74388 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141769 (=> (not res!67657) (not e!92379))))

(declare-fun d!44755 () Bool)

(assert (=> d!44755 e!92384))

(declare-fun res!67654 () Bool)

(assert (=> d!44755 (=> (not res!67654) (not e!92384))))

(assert (=> d!44755 (= res!67654 (not (contains!904 lt!74388 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92383 () ListLongMap!1685)

(assert (=> d!44755 (= lt!74388 e!92383)))

(declare-fun c!26708 () Bool)

(assert (=> d!44755 (= c!26708 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44755 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44755 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)) lt!74388)))

(declare-fun bm!15706 () Bool)

(assert (=> bm!15706 (= call!15709 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite c!26142 (_values!2922 newMap!16) lt!73112) (mask!7279 newMap!16) (ite (and c!26142 c!26144) lt!73116 (extraKeys!2694 newMap!16)) (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141770 () Bool)

(assert (=> b!141770 (= e!92385 call!15709)))

(declare-fun b!141771 () Bool)

(assert (=> b!141771 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141771 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2579 (ite c!26142 (_values!2922 newMap!16) lt!73112))))))

(assert (=> b!141771 (= e!92379 (= (apply!120 lt!74388 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141772 () Bool)

(assert (=> b!141772 (= e!92381 (isEmpty!424 lt!74388))))

(declare-fun b!141773 () Bool)

(assert (=> b!141773 (= e!92383 e!92385)))

(declare-fun c!26706 () Bool)

(assert (=> b!141773 (= c!26706 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141774 () Bool)

(assert (=> b!141774 (= e!92382 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141774 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141775 () Bool)

(assert (=> b!141775 (= e!92380 e!92381)))

(declare-fun c!26707 () Bool)

(assert (=> b!141775 (= c!26707 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141776 () Bool)

(assert (=> b!141776 (= e!92383 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44755 c!26708) b!141776))

(assert (= (and d!44755 (not c!26708)) b!141773))

(assert (= (and b!141773 c!26706) b!141768))

(assert (= (and b!141773 (not c!26706)) b!141770))

(assert (= (or b!141768 b!141770) bm!15706))

(assert (= (and d!44755 res!67654) b!141765))

(assert (= (and b!141765 res!67655) b!141766))

(assert (= (and b!141766 res!67656) b!141774))

(assert (= (and b!141766 c!26705) b!141769))

(assert (= (and b!141766 (not c!26705)) b!141775))

(assert (= (and b!141769 res!67657) b!141771))

(assert (= (and b!141775 c!26707) b!141767))

(assert (= (and b!141775 (not c!26707)) b!141772))

(declare-fun b_lambda!6379 () Bool)

(assert (=> (not b_lambda!6379) (not b!141768)))

(assert (=> b!141768 t!6309))

(declare-fun b_and!8885 () Bool)

(assert (= b_and!8881 (and (=> t!6309 result!4187) b_and!8885)))

(assert (=> b!141768 t!6311))

(declare-fun b_and!8887 () Bool)

(assert (= b_and!8883 (and (=> t!6311 result!4189) b_and!8887)))

(declare-fun b_lambda!6381 () Bool)

(assert (=> (not b_lambda!6381) (not b!141771)))

(assert (=> b!141771 t!6309))

(declare-fun b_and!8889 () Bool)

(assert (= b_and!8885 (and (=> t!6309 result!4187) b_and!8889)))

(assert (=> b!141771 t!6311))

(declare-fun b_and!8891 () Bool)

(assert (= b_and!8887 (and (=> t!6311 result!4189) b_and!8891)))

(assert (=> b!141768 m!168135))

(declare-fun m!170555 () Bool)

(assert (=> b!141768 m!170555))

(declare-fun m!170557 () Bool)

(assert (=> b!141768 m!170557))

(assert (=> b!141768 m!166963))

(assert (=> b!141768 m!170555))

(declare-fun m!170559 () Bool)

(assert (=> b!141768 m!170559))

(declare-fun m!170561 () Bool)

(assert (=> b!141768 m!170561))

(assert (=> b!141768 m!170561))

(assert (=> b!141768 m!166963))

(declare-fun m!170563 () Bool)

(assert (=> b!141768 m!170563))

(declare-fun m!170565 () Bool)

(assert (=> b!141768 m!170565))

(assert (=> b!141774 m!168135))

(assert (=> b!141774 m!168135))

(assert (=> b!141774 m!168139))

(declare-fun m!170567 () Bool)

(assert (=> b!141767 m!170567))

(assert (=> b!141771 m!168135))

(assert (=> b!141771 m!166963))

(assert (=> b!141771 m!170561))

(assert (=> b!141771 m!170561))

(assert (=> b!141771 m!166963))

(assert (=> b!141771 m!170563))

(assert (=> b!141771 m!168135))

(declare-fun m!170569 () Bool)

(assert (=> b!141771 m!170569))

(declare-fun m!170571 () Bool)

(assert (=> b!141765 m!170571))

(declare-fun m!170573 () Bool)

(assert (=> d!44755 m!170573))

(assert (=> d!44755 m!166907))

(declare-fun m!170575 () Bool)

(assert (=> b!141772 m!170575))

(assert (=> b!141769 m!168135))

(assert (=> b!141769 m!168135))

(declare-fun m!170577 () Bool)

(assert (=> b!141769 m!170577))

(assert (=> b!141773 m!168135))

(assert (=> b!141773 m!168135))

(assert (=> b!141773 m!168139))

(assert (=> bm!15706 m!170567))

(assert (=> bm!15633 d!44755))

(declare-fun d!44757 () Bool)

(assert (=> d!44757 (= ($colon$colon!93 e!91732 (ite c!26395 (h!2322 (toList!858 call!15471)) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1715 (ite c!26395 (h!2322 (toList!858 call!15471)) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91732))))

(assert (=> bm!15616 d!44757))

(declare-fun d!44759 () Bool)

(assert (=> d!44759 (= (apply!120 lt!73601 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73601) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5974 () Bool)

(assert (= bs!5974 d!44759))

(assert (=> bs!5974 m!166927))

(declare-fun m!170579 () Bool)

(assert (=> bs!5974 m!170579))

(assert (=> bs!5974 m!170579))

(declare-fun m!170581 () Bool)

(assert (=> bs!5974 m!170581))

(assert (=> b!140390 d!44759))

(declare-fun d!44761 () Bool)

(declare-fun c!26709 () Bool)

(assert (=> d!44761 (= c!26709 ((_ is ValueCellFull!1121) (select (arr!2307 lt!73112) #b00000000000000000000000000000000)))))

(declare-fun e!92386 () V!3553)

(assert (=> d!44761 (= (get!1531 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92386)))

(declare-fun b!141777 () Bool)

(assert (=> b!141777 (= e!92386 (get!1533 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141778 () Bool)

(assert (=> b!141778 (= e!92386 (get!1534 (select (arr!2307 lt!73112) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44761 c!26709) b!141777))

(assert (= (and d!44761 (not c!26709)) b!141778))

(assert (=> b!141777 m!167789))

(assert (=> b!141777 m!166963))

(declare-fun m!170583 () Bool)

(assert (=> b!141777 m!170583))

(assert (=> b!141778 m!167789))

(assert (=> b!141778 m!166963))

(declare-fun m!170585 () Bool)

(assert (=> b!141778 m!170585))

(assert (=> b!140390 d!44761))

(declare-fun d!44763 () Bool)

(assert (=> d!44763 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5975 () Bool)

(assert (= bs!5975 d!44763))

(assert (=> bs!5975 m!167831))

(declare-fun m!170587 () Bool)

(assert (=> bs!5975 m!170587))

(assert (=> b!140773 d!44763))

(declare-fun b!141780 () Bool)

(declare-fun e!92387 () Option!183)

(declare-fun e!92388 () Option!183)

(assert (=> b!141780 (= e!92387 e!92388)))

(declare-fun c!26711 () Bool)

(assert (=> b!141780 (= c!26711 (and ((_ is Cons!1715) (toList!858 lt!73215)) (not (= (_1!1322 (h!2322 (toList!858 lt!73215))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141781 () Bool)

(assert (=> b!141781 (= e!92388 (getValueByKey!177 (t!6295 (toList!858 lt!73215)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141779 () Bool)

(assert (=> b!141779 (= e!92387 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73215)))))))

(declare-fun b!141782 () Bool)

(assert (=> b!141782 (= e!92388 None!181)))

(declare-fun d!44765 () Bool)

(declare-fun c!26710 () Bool)

(assert (=> d!44765 (= c!26710 (and ((_ is Cons!1715) (toList!858 lt!73215)) (= (_1!1322 (h!2322 (toList!858 lt!73215))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44765 (= (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000) e!92387)))

(assert (= (and d!44765 c!26710) b!141779))

(assert (= (and d!44765 (not c!26710)) b!141780))

(assert (= (and b!141780 c!26711) b!141781))

(assert (= (and b!141780 (not c!26711)) b!141782))

(declare-fun m!170589 () Bool)

(assert (=> b!141781 m!170589))

(assert (=> b!140773 d!44765))

(declare-fun d!44767 () Bool)

(declare-fun lt!74393 () Bool)

(assert (=> d!44767 (= lt!74393 (select (content!139 (toList!858 lt!73897)) (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))

(declare-fun e!92389 () Bool)

(assert (=> d!44767 (= lt!74393 e!92389)))

(declare-fun res!67658 () Bool)

(assert (=> d!44767 (=> (not res!67658) (not e!92389))))

(assert (=> d!44767 (= res!67658 ((_ is Cons!1715) (toList!858 lt!73897)))))

(assert (=> d!44767 (= (contains!907 (toList!858 lt!73897) (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) lt!74393)))

(declare-fun b!141783 () Bool)

(declare-fun e!92390 () Bool)

(assert (=> b!141783 (= e!92389 e!92390)))

(declare-fun res!67659 () Bool)

(assert (=> b!141783 (=> res!67659 e!92390)))

(assert (=> b!141783 (= res!67659 (= (h!2322 (toList!858 lt!73897)) (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))

(declare-fun b!141784 () Bool)

(assert (=> b!141784 (= e!92390 (contains!907 (t!6295 (toList!858 lt!73897)) (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))

(assert (= (and d!44767 res!67658) b!141783))

(assert (= (and b!141783 (not res!67659)) b!141784))

(declare-fun m!170591 () Bool)

(assert (=> d!44767 m!170591))

(declare-fun m!170593 () Bool)

(assert (=> d!44767 m!170593))

(declare-fun m!170595 () Bool)

(assert (=> b!141784 m!170595))

(assert (=> b!140891 d!44767))

(declare-fun d!44769 () Bool)

(declare-fun lt!74394 () Bool)

(assert (=> d!44769 (= lt!74394 (select (content!139 (t!6295 (toList!858 lt!73268))) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92391 () Bool)

(assert (=> d!44769 (= lt!74394 e!92391)))

(declare-fun res!67660 () Bool)

(assert (=> d!44769 (=> (not res!67660) (not e!92391))))

(assert (=> d!44769 (= res!67660 ((_ is Cons!1715) (t!6295 (toList!858 lt!73268))))))

(assert (=> d!44769 (= (contains!907 (t!6295 (toList!858 lt!73268)) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74394)))

(declare-fun b!141785 () Bool)

(declare-fun e!92392 () Bool)

(assert (=> b!141785 (= e!92391 e!92392)))

(declare-fun res!67661 () Bool)

(assert (=> b!141785 (=> res!67661 e!92392)))

(assert (=> b!141785 (= res!67661 (= (h!2322 (t!6295 (toList!858 lt!73268))) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141786 () Bool)

(assert (=> b!141786 (= e!92392 (contains!907 (t!6295 (t!6295 (toList!858 lt!73268))) (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44769 res!67660) b!141785))

(assert (= (and b!141785 (not res!67661)) b!141786))

(declare-fun m!170597 () Bool)

(assert (=> d!44769 m!170597))

(declare-fun m!170599 () Bool)

(assert (=> d!44769 m!170599))

(declare-fun m!170601 () Bool)

(assert (=> b!141786 m!170601))

(assert (=> b!141097 d!44769))

(declare-fun d!44771 () Bool)

(assert (=> d!44771 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5976 () Bool)

(assert (= bs!5976 d!44771))

(assert (=> bs!5976 m!167561))

(declare-fun m!170603 () Bool)

(assert (=> bs!5976 m!170603))

(assert (=> b!140299 d!44771))

(declare-fun b!141788 () Bool)

(declare-fun e!92393 () Option!183)

(declare-fun e!92394 () Option!183)

(assert (=> b!141788 (= e!92393 e!92394)))

(declare-fun c!26713 () Bool)

(assert (=> b!141788 (= c!26713 (and ((_ is Cons!1715) (toList!858 lt!73309)) (not (= (_1!1322 (h!2322 (toList!858 lt!73309))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141789 () Bool)

(assert (=> b!141789 (= e!92394 (getValueByKey!177 (t!6295 (toList!858 lt!73309)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141787 () Bool)

(assert (=> b!141787 (= e!92393 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73309)))))))

(declare-fun b!141790 () Bool)

(assert (=> b!141790 (= e!92394 None!181)))

(declare-fun d!44773 () Bool)

(declare-fun c!26712 () Bool)

(assert (=> d!44773 (= c!26712 (and ((_ is Cons!1715) (toList!858 lt!73309)) (= (_1!1322 (h!2322 (toList!858 lt!73309))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44773 (= (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000) e!92393)))

(assert (= (and d!44773 c!26712) b!141787))

(assert (= (and d!44773 (not c!26712)) b!141788))

(assert (= (and b!141788 c!26713) b!141789))

(assert (= (and b!141788 (not c!26713)) b!141790))

(declare-fun m!170605 () Bool)

(assert (=> b!141789 m!170605))

(assert (=> b!140299 d!44773))

(declare-fun b!141791 () Bool)

(declare-fun e!92395 () (_ BitVec 32))

(assert (=> b!141791 (= e!92395 #b00000000000000000000000000000000)))

(declare-fun b!141793 () Bool)

(declare-fun e!92396 () (_ BitVec 32))

(declare-fun call!15710 () (_ BitVec 32))

(assert (=> b!141793 (= e!92396 (bvadd #b00000000000000000000000000000001 call!15710))))

(declare-fun d!44775 () Bool)

(declare-fun lt!74395 () (_ BitVec 32))

(assert (=> d!44775 (and (bvsge lt!74395 #b00000000000000000000000000000000) (bvsle lt!74395 (bvsub (size!2578 lt!73415) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001))))))

(assert (=> d!44775 (= lt!74395 e!92395)))

(declare-fun c!26714 () Bool)

(assert (=> d!44775 (= c!26714 (bvsge (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)))))

(assert (=> d!44775 (and (bvsle (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) (size!2578 lt!73415)))))

(assert (=> d!44775 (= (arrayCountValidKeys!0 lt!73415 (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) lt!74395)))

(declare-fun b!141792 () Bool)

(assert (=> b!141792 (= e!92395 e!92396)))

(declare-fun c!26715 () Bool)

(assert (=> b!141792 (= c!26715 (validKeyInArray!0 (select (arr!2306 lt!73415) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001))))))

(declare-fun bm!15707 () Bool)

(assert (=> bm!15707 (= call!15710 (arrayCountValidKeys!0 lt!73415 (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)))))

(declare-fun b!141794 () Bool)

(assert (=> b!141794 (= e!92396 call!15710)))

(assert (= (and d!44775 c!26714) b!141791))

(assert (= (and d!44775 (not c!26714)) b!141792))

(assert (= (and b!141792 c!26715) b!141793))

(assert (= (and b!141792 (not c!26715)) b!141794))

(assert (= (or b!141793 b!141794) bm!15707))

(declare-fun m!170607 () Bool)

(assert (=> b!141792 m!170607))

(assert (=> b!141792 m!170607))

(declare-fun m!170609 () Bool)

(assert (=> b!141792 m!170609))

(declare-fun m!170611 () Bool)

(assert (=> bm!15707 m!170611))

(assert (=> bm!15593 d!44775))

(declare-fun d!44777 () Bool)

(declare-fun res!67662 () Bool)

(declare-fun e!92397 () Bool)

(assert (=> d!44777 (=> res!67662 e!92397)))

(assert (=> d!44777 (= res!67662 (and ((_ is Cons!1715) (t!6295 (t!6295 (toList!858 lt!73005)))) (= (_1!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!44777 (= (containsKey!180 (t!6295 (t!6295 (toList!858 lt!73005))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92397)))

(declare-fun b!141795 () Bool)

(declare-fun e!92398 () Bool)

(assert (=> b!141795 (= e!92397 e!92398)))

(declare-fun res!67663 () Bool)

(assert (=> b!141795 (=> (not res!67663) (not e!92398))))

(assert (=> b!141795 (= res!67663 (and (or (not ((_ is Cons!1715) (t!6295 (t!6295 (toList!858 lt!73005))))) (bvsle (_1!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (t!6295 (t!6295 (toList!858 lt!73005)))) (bvslt (_1!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!141796 () Bool)

(assert (=> b!141796 (= e!92398 (containsKey!180 (t!6295 (t!6295 (t!6295 (toList!858 lt!73005)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!44777 (not res!67662)) b!141795))

(assert (= (and b!141795 res!67663) b!141796))

(assert (=> b!141796 m!166633))

(declare-fun m!170613 () Bool)

(assert (=> b!141796 m!170613))

(assert (=> b!141066 d!44777))

(declare-fun d!44779 () Bool)

(assert (=> d!44779 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!73216)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!73216)))))

(assert (=> d!43723 d!44779))

(declare-fun b!141798 () Bool)

(declare-fun e!92399 () Option!183)

(declare-fun e!92400 () Option!183)

(assert (=> b!141798 (= e!92399 e!92400)))

(declare-fun c!26717 () Bool)

(assert (=> b!141798 (= c!26717 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))) lt!73216))))))

(declare-fun b!141799 () Bool)

(assert (=> b!141799 (= e!92400 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))) lt!73216))))

(declare-fun b!141797 () Bool)

(assert (=> b!141797 (= e!92399 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))))

(declare-fun b!141800 () Bool)

(assert (=> b!141800 (= e!92400 None!181)))

(declare-fun d!44781 () Bool)

(declare-fun c!26716 () Bool)

(assert (=> d!44781 (= c!26716 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))) lt!73216)))))

(assert (=> d!44781 (= (getValueByKey!177 (toList!858 (+!173 lt!73218 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!73216) e!92399)))

(assert (= (and d!44781 c!26716) b!141797))

(assert (= (and d!44781 (not c!26716)) b!141798))

(assert (= (and b!141798 c!26717) b!141799))

(assert (= (and b!141798 (not c!26717)) b!141800))

(declare-fun m!170615 () Bool)

(assert (=> b!141799 m!170615))

(assert (=> d!43723 d!44781))

(declare-fun d!44783 () Bool)

(declare-fun lt!74396 () Bool)

(assert (=> d!44783 (= lt!74396 (select (content!139 lt!73459) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92401 () Bool)

(assert (=> d!44783 (= lt!74396 e!92401)))

(declare-fun res!67664 () Bool)

(assert (=> d!44783 (=> (not res!67664) (not e!92401))))

(assert (=> d!44783 (= res!67664 ((_ is Cons!1715) lt!73459))))

(assert (=> d!44783 (= (contains!907 lt!73459 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74396)))

(declare-fun b!141801 () Bool)

(declare-fun e!92402 () Bool)

(assert (=> b!141801 (= e!92401 e!92402)))

(declare-fun res!67665 () Bool)

(assert (=> b!141801 (=> res!67665 e!92402)))

(assert (=> b!141801 (= res!67665 (= (h!2322 lt!73459) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141802 () Bool)

(assert (=> b!141802 (= e!92402 (contains!907 (t!6295 lt!73459) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44783 res!67664) b!141801))

(assert (= (and b!141801 (not res!67665)) b!141802))

(declare-fun m!170617 () Bool)

(assert (=> d!44783 m!170617))

(declare-fun m!170619 () Bool)

(assert (=> d!44783 m!170619))

(declare-fun m!170621 () Bool)

(assert (=> b!141802 m!170621))

(assert (=> b!140991 d!44783))

(assert (=> d!43875 d!43871))

(declare-fun d!44785 () Bool)

(assert (=> d!44785 (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!44785 true))

(declare-fun _$60!369 () Unit!4387)

(assert (=> d!44785 (= (choose!13 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) _$60!369)))

(declare-fun bs!5977 () Bool)

(assert (= bs!5977 d!44785))

(assert (=> bs!5977 m!166633))

(assert (=> bs!5977 m!167193))

(assert (=> d!43875 d!44785))

(declare-fun d!44787 () Bool)

(declare-fun lt!74397 () Bool)

(assert (=> d!44787 (= lt!74397 (select (content!139 (toList!858 lt!73958)) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92403 () Bool)

(assert (=> d!44787 (= lt!74397 e!92403)))

(declare-fun res!67666 () Bool)

(assert (=> d!44787 (=> (not res!67666) (not e!92403))))

(assert (=> d!44787 (= res!67666 ((_ is Cons!1715) (toList!858 lt!73958)))))

(assert (=> d!44787 (= (contains!907 (toList!858 lt!73958) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74397)))

(declare-fun b!141803 () Bool)

(declare-fun e!92404 () Bool)

(assert (=> b!141803 (= e!92403 e!92404)))

(declare-fun res!67667 () Bool)

(assert (=> b!141803 (=> res!67667 e!92404)))

(assert (=> b!141803 (= res!67667 (= (h!2322 (toList!858 lt!73958)) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141804 () Bool)

(assert (=> b!141804 (= e!92404 (contains!907 (t!6295 (toList!858 lt!73958)) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44787 res!67666) b!141803))

(assert (= (and b!141803 (not res!67667)) b!141804))

(declare-fun m!170623 () Bool)

(assert (=> d!44787 m!170623))

(declare-fun m!170625 () Bool)

(assert (=> d!44787 m!170625))

(declare-fun m!170627 () Bool)

(assert (=> b!141804 m!170627))

(assert (=> b!141005 d!44787))

(declare-fun d!44789 () Bool)

(assert (=> d!44789 (= (apply!120 lt!73855 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73855) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5978 () Bool)

(assert (= bs!5978 d!44789))

(declare-fun m!170629 () Bool)

(assert (=> bs!5978 m!170629))

(assert (=> bs!5978 m!170629))

(declare-fun m!170631 () Bool)

(assert (=> bs!5978 m!170631))

(assert (=> b!140833 d!44789))

(assert (=> d!43823 d!43825))

(assert (=> d!43823 d!43827))

(declare-fun d!44791 () Bool)

(assert (=> d!44791 (isDefined!129 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!44791 true))

(declare-fun _$12!414 () Unit!4387)

(assert (=> d!44791 (= (choose!864 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) _$12!414)))

(declare-fun bs!5979 () Bool)

(assert (= bs!5979 d!44791))

(assert (=> bs!5979 m!166633))

(assert (=> bs!5979 m!167441))

(assert (=> bs!5979 m!167441))

(assert (=> bs!5979 m!167443))

(assert (=> d!43823 d!44791))

(declare-fun d!44793 () Bool)

(declare-fun res!67668 () Bool)

(declare-fun e!92405 () Bool)

(assert (=> d!44793 (=> res!67668 e!92405)))

(assert (=> d!44793 (= res!67668 (or ((_ is Nil!1716) (toList!858 call!15458)) ((_ is Nil!1716) (t!6295 (toList!858 call!15458)))))))

(assert (=> d!44793 (= (isStrictlySorted!312 (toList!858 call!15458)) e!92405)))

(declare-fun b!141805 () Bool)

(declare-fun e!92406 () Bool)

(assert (=> b!141805 (= e!92405 e!92406)))

(declare-fun res!67669 () Bool)

(assert (=> b!141805 (=> (not res!67669) (not e!92406))))

(assert (=> b!141805 (= res!67669 (bvslt (_1!1322 (h!2322 (toList!858 call!15458))) (_1!1322 (h!2322 (t!6295 (toList!858 call!15458))))))))

(declare-fun b!141806 () Bool)

(assert (=> b!141806 (= e!92406 (isStrictlySorted!312 (t!6295 (toList!858 call!15458))))))

(assert (= (and d!44793 (not res!67668)) b!141805))

(assert (= (and b!141805 res!67669) b!141806))

(declare-fun m!170633 () Bool)

(assert (=> b!141806 m!170633))

(assert (=> d!43823 d!44793))

(declare-fun d!44795 () Bool)

(assert (=> d!44795 (= (get!1535 (getValueByKey!177 (toList!858 lt!73325) lt!73320)) (v!3285 (getValueByKey!177 (toList!858 lt!73325) lt!73320)))))

(assert (=> d!44015 d!44795))

(declare-fun b!141808 () Bool)

(declare-fun e!92407 () Option!183)

(declare-fun e!92408 () Option!183)

(assert (=> b!141808 (= e!92407 e!92408)))

(declare-fun c!26719 () Bool)

(assert (=> b!141808 (= c!26719 (and ((_ is Cons!1715) (toList!858 lt!73325)) (not (= (_1!1322 (h!2322 (toList!858 lt!73325))) lt!73320))))))

(declare-fun b!141809 () Bool)

(assert (=> b!141809 (= e!92408 (getValueByKey!177 (t!6295 (toList!858 lt!73325)) lt!73320))))

(declare-fun b!141807 () Bool)

(assert (=> b!141807 (= e!92407 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73325)))))))

(declare-fun b!141810 () Bool)

(assert (=> b!141810 (= e!92408 None!181)))

(declare-fun d!44797 () Bool)

(declare-fun c!26718 () Bool)

(assert (=> d!44797 (= c!26718 (and ((_ is Cons!1715) (toList!858 lt!73325)) (= (_1!1322 (h!2322 (toList!858 lt!73325))) lt!73320)))))

(assert (=> d!44797 (= (getValueByKey!177 (toList!858 lt!73325) lt!73320) e!92407)))

(assert (= (and d!44797 c!26718) b!141807))

(assert (= (and d!44797 (not c!26718)) b!141808))

(assert (= (and b!141808 c!26719) b!141809))

(assert (= (and b!141808 (not c!26719)) b!141810))

(declare-fun m!170635 () Bool)

(assert (=> b!141809 m!170635))

(assert (=> d!44015 d!44797))

(assert (=> d!43773 d!43645))

(assert (=> d!43773 d!43653))

(assert (=> d!43773 d!43627))

(declare-fun b!141811 () Bool)

(declare-fun e!92409 () (_ BitVec 32))

(assert (=> b!141811 (= e!92409 #b00000000000000000000000000000000)))

(declare-fun b!141813 () Bool)

(declare-fun e!92410 () (_ BitVec 32))

(declare-fun call!15711 () (_ BitVec 32))

(assert (=> b!141813 (= e!92410 (bvadd #b00000000000000000000000000000001 call!15711))))

(declare-fun d!44799 () Bool)

(declare-fun lt!74398 () (_ BitVec 32))

(assert (=> d!44799 (and (bvsge lt!74398 #b00000000000000000000000000000000) (bvsle lt!74398 (bvsub (size!2578 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(assert (=> d!44799 (= lt!74398 e!92409)))

(declare-fun c!26720 () Bool)

(assert (=> d!44799 (= c!26720 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(assert (=> d!44799 (and (bvsle #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 (_2!1323 lt!73410))) (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(assert (=> d!44799 (= (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73410)) #b00000000000000000000000000000000 (size!2578 (_keys!4698 (_2!1323 lt!73410)))) lt!74398)))

(declare-fun b!141812 () Bool)

(assert (=> b!141812 (= e!92409 e!92410)))

(declare-fun c!26721 () Bool)

(assert (=> b!141812 (= c!26721 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73410))) #b00000000000000000000000000000000)))))

(declare-fun bm!15708 () Bool)

(assert (=> bm!15708 (= call!15711 (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73410)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73410)))))))

(declare-fun b!141814 () Bool)

(assert (=> b!141814 (= e!92410 call!15711)))

(assert (= (and d!44799 c!26720) b!141811))

(assert (= (and d!44799 (not c!26720)) b!141812))

(assert (= (and b!141812 c!26721) b!141813))

(assert (= (and b!141812 (not c!26721)) b!141814))

(assert (= (or b!141813 b!141814) bm!15708))

(assert (=> b!141812 m!169907))

(assert (=> b!141812 m!169907))

(assert (=> b!141812 m!169909))

(declare-fun m!170637 () Bool)

(assert (=> bm!15708 m!170637))

(assert (=> b!140461 d!44799))

(declare-fun lt!74399 () Bool)

(declare-fun d!44801 () Bool)

(assert (=> d!44801 (= lt!74399 (select (content!139 (toList!858 lt!73906)) (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun e!92411 () Bool)

(assert (=> d!44801 (= lt!74399 e!92411)))

(declare-fun res!67670 () Bool)

(assert (=> d!44801 (=> (not res!67670) (not e!92411))))

(assert (=> d!44801 (= res!67670 ((_ is Cons!1715) (toList!858 lt!73906)))))

(assert (=> d!44801 (= (contains!907 (toList!858 lt!73906) (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!74399)))

(declare-fun b!141815 () Bool)

(declare-fun e!92412 () Bool)

(assert (=> b!141815 (= e!92411 e!92412)))

(declare-fun res!67671 () Bool)

(assert (=> b!141815 (=> res!67671 e!92412)))

(assert (=> b!141815 (= res!67671 (= (h!2322 (toList!858 lt!73906)) (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun b!141816 () Bool)

(assert (=> b!141816 (= e!92412 (contains!907 (t!6295 (toList!858 lt!73906)) (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44801 res!67670) b!141815))

(assert (= (and b!141815 (not res!67671)) b!141816))

(declare-fun m!170639 () Bool)

(assert (=> d!44801 m!170639))

(declare-fun m!170641 () Bool)

(assert (=> d!44801 m!170641))

(declare-fun m!170643 () Bool)

(assert (=> b!141816 m!170643))

(assert (=> b!140895 d!44801))

(declare-fun d!44803 () Bool)

(declare-fun res!67672 () Bool)

(declare-fun e!92413 () Bool)

(assert (=> d!44803 (=> res!67672 e!92413)))

(assert (=> d!44803 (= res!67672 (and ((_ is Cons!1715) (toList!858 lt!73470)) (= (_1!1322 (h!2322 (toList!858 lt!73470))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44803 (= (containsKey!180 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92413)))

(declare-fun b!141817 () Bool)

(declare-fun e!92414 () Bool)

(assert (=> b!141817 (= e!92413 e!92414)))

(declare-fun res!67673 () Bool)

(assert (=> b!141817 (=> (not res!67673) (not e!92414))))

(assert (=> b!141817 (= res!67673 (and (or (not ((_ is Cons!1715) (toList!858 lt!73470))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73470))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) (toList!858 lt!73470)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73470))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141818 () Bool)

(assert (=> b!141818 (= e!92414 (containsKey!180 (t!6295 (toList!858 lt!73470)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44803 (not res!67672)) b!141817))

(assert (= (and b!141817 res!67673) b!141818))

(declare-fun m!170645 () Bool)

(assert (=> b!141818 m!170645))

(assert (=> d!43941 d!44803))

(declare-fun lt!74400 () Bool)

(declare-fun d!44805 () Bool)

(assert (=> d!44805 (= lt!74400 (select (content!139 (t!6295 (toList!858 lt!73279))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92415 () Bool)

(assert (=> d!44805 (= lt!74400 e!92415)))

(declare-fun res!67674 () Bool)

(assert (=> d!44805 (=> (not res!67674) (not e!92415))))

(assert (=> d!44805 (= res!67674 ((_ is Cons!1715) (t!6295 (toList!858 lt!73279))))))

(assert (=> d!44805 (= (contains!907 (t!6295 (toList!858 lt!73279)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74400)))

(declare-fun b!141819 () Bool)

(declare-fun e!92416 () Bool)

(assert (=> b!141819 (= e!92415 e!92416)))

(declare-fun res!67675 () Bool)

(assert (=> b!141819 (=> res!67675 e!92416)))

(assert (=> b!141819 (= res!67675 (= (h!2322 (t!6295 (toList!858 lt!73279))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141820 () Bool)

(assert (=> b!141820 (= e!92416 (contains!907 (t!6295 (t!6295 (toList!858 lt!73279))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44805 res!67674) b!141819))

(assert (= (and b!141819 (not res!67675)) b!141820))

(declare-fun m!170647 () Bool)

(assert (=> d!44805 m!170647))

(declare-fun m!170649 () Bool)

(assert (=> d!44805 m!170649))

(declare-fun m!170651 () Bool)

(assert (=> b!141820 m!170651))

(assert (=> b!140794 d!44805))

(declare-fun b!141822 () Bool)

(declare-fun e!92417 () Option!183)

(declare-fun e!92418 () Option!183)

(assert (=> b!141822 (= e!92417 e!92418)))

(declare-fun c!26723 () Bool)

(assert (=> b!141822 (= c!26723 (and ((_ is Cons!1715) (toList!858 lt!73989)) (not (= (_1!1322 (h!2322 (toList!858 lt!73989))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!141823 () Bool)

(assert (=> b!141823 (= e!92418 (getValueByKey!177 (t!6295 (toList!858 lt!73989)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!141821 () Bool)

(assert (=> b!141821 (= e!92417 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73989)))))))

(declare-fun b!141824 () Bool)

(assert (=> b!141824 (= e!92418 None!181)))

(declare-fun c!26722 () Bool)

(declare-fun d!44807 () Bool)

(assert (=> d!44807 (= c!26722 (and ((_ is Cons!1715) (toList!858 lt!73989)) (= (_1!1322 (h!2322 (toList!858 lt!73989))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44807 (= (getValueByKey!177 (toList!858 lt!73989) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92417)))

(assert (= (and d!44807 c!26722) b!141821))

(assert (= (and d!44807 (not c!26722)) b!141822))

(assert (= (and b!141822 c!26723) b!141823))

(assert (= (and b!141822 (not c!26723)) b!141824))

(declare-fun m!170653 () Bool)

(assert (=> b!141823 m!170653))

(assert (=> b!141033 d!44807))

(declare-fun d!44809 () Bool)

(assert (=> d!44809 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!74401 () Unit!4387)

(assert (=> d!44809 (= lt!74401 (choose!864 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!92419 () Bool)

(assert (=> d!44809 e!92419))

(declare-fun res!67676 () Bool)

(assert (=> d!44809 (=> (not res!67676) (not e!92419))))

(assert (=> d!44809 (= res!67676 (isStrictlySorted!312 (toList!858 lt!73446)))))

(assert (=> d!44809 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!74401)))

(declare-fun b!141825 () Bool)

(assert (=> b!141825 (= e!92419 (containsKey!180 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44809 res!67676) b!141825))

(assert (=> d!44809 m!166833))

(assert (=> d!44809 m!168387))

(assert (=> d!44809 m!168387))

(assert (=> d!44809 m!168689))

(assert (=> d!44809 m!166833))

(declare-fun m!170655 () Bool)

(assert (=> d!44809 m!170655))

(assert (=> d!44809 m!170213))

(assert (=> b!141825 m!166833))

(assert (=> b!141825 m!168685))

(assert (=> b!140909 d!44809))

(assert (=> b!140909 d!44643))

(assert (=> b!140909 d!44645))

(declare-fun d!44811 () Bool)

(assert (=> d!44811 (= ($colon$colon!93 e!91696 (ite c!26375 (h!2322 (toList!858 lt!73200)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (Cons!1715 (ite c!26375 (h!2322 (toList!858 lt!73200)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91696))))

(assert (=> bm!15603 d!44811))

(declare-fun b!141827 () Bool)

(declare-fun e!92420 () Option!183)

(declare-fun e!92421 () Option!183)

(assert (=> b!141827 (= e!92420 e!92421)))

(declare-fun c!26725 () Bool)

(assert (=> b!141827 (= c!26725 (and ((_ is Cons!1715) (toList!858 lt!74017)) (not (= (_1!1322 (h!2322 (toList!858 lt!74017))) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))))

(declare-fun b!141828 () Bool)

(assert (=> b!141828 (= e!92421 (getValueByKey!177 (t!6295 (toList!858 lt!74017)) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun b!141826 () Bool)

(assert (=> b!141826 (= e!92420 (Some!182 (_2!1322 (h!2322 (toList!858 lt!74017)))))))

(declare-fun b!141829 () Bool)

(assert (=> b!141829 (= e!92421 None!181)))

(declare-fun d!44813 () Bool)

(declare-fun c!26724 () Bool)

(assert (=> d!44813 (= c!26724 (and ((_ is Cons!1715) (toList!858 lt!74017)) (= (_1!1322 (h!2322 (toList!858 lt!74017))) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(assert (=> d!44813 (= (getValueByKey!177 (toList!858 lt!74017) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) e!92420)))

(assert (= (and d!44813 c!26724) b!141826))

(assert (= (and d!44813 (not c!26724)) b!141827))

(assert (= (and b!141827 c!26725) b!141828))

(assert (= (and b!141827 (not c!26725)) b!141829))

(declare-fun m!170657 () Bool)

(assert (=> b!141828 m!170657))

(assert (=> b!141075 d!44813))

(assert (=> d!43699 d!43701))

(assert (=> d!43699 d!43703))

(declare-fun d!44815 () Bool)

(assert (=> d!44815 (isDefined!129 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (=> d!44815 true))

(declare-fun _$12!415 () Unit!4387)

(assert (=> d!44815 (= (choose!864 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) _$12!415)))

(declare-fun bs!5980 () Bool)

(assert (= bs!5980 d!44815))

(assert (=> bs!5980 m!166761))

(assert (=> bs!5980 m!167391))

(assert (=> bs!5980 m!167391))

(assert (=> bs!5980 m!167393))

(assert (=> d!43699 d!44815))

(declare-fun d!44817 () Bool)

(declare-fun res!67677 () Bool)

(declare-fun e!92422 () Bool)

(assert (=> d!44817 (=> res!67677 e!92422)))

(assert (=> d!44817 (= res!67677 (or ((_ is Nil!1716) (toList!858 call!15472)) ((_ is Nil!1716) (t!6295 (toList!858 call!15472)))))))

(assert (=> d!44817 (= (isStrictlySorted!312 (toList!858 call!15472)) e!92422)))

(declare-fun b!141830 () Bool)

(declare-fun e!92423 () Bool)

(assert (=> b!141830 (= e!92422 e!92423)))

(declare-fun res!67678 () Bool)

(assert (=> b!141830 (=> (not res!67678) (not e!92423))))

(assert (=> b!141830 (= res!67678 (bvslt (_1!1322 (h!2322 (toList!858 call!15472))) (_1!1322 (h!2322 (t!6295 (toList!858 call!15472))))))))

(declare-fun b!141831 () Bool)

(assert (=> b!141831 (= e!92423 (isStrictlySorted!312 (t!6295 (toList!858 call!15472))))))

(assert (= (and d!44817 (not res!67677)) b!141830))

(assert (= (and b!141830 res!67678) b!141831))

(declare-fun m!170659 () Bool)

(assert (=> b!141831 m!170659))

(assert (=> d!43699 d!44817))

(declare-fun d!44819 () Bool)

(declare-fun e!92424 () Bool)

(assert (=> d!44819 e!92424))

(declare-fun res!67679 () Bool)

(assert (=> d!44819 (=> (not res!67679) (not e!92424))))

(declare-fun lt!74404 () ListLongMap!1685)

(assert (=> d!44819 (= res!67679 (contains!904 lt!74404 (_1!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74403 () List!1719)

(assert (=> d!44819 (= lt!74404 (ListLongMap!1686 lt!74403))))

(declare-fun lt!74402 () Unit!4387)

(declare-fun lt!74405 () Unit!4387)

(assert (=> d!44819 (= lt!74402 lt!74405)))

(assert (=> d!44819 (= (getValueByKey!177 lt!74403 (_1!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44819 (= lt!74405 (lemmaContainsTupThenGetReturnValue!91 lt!74403 (_1!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44819 (= lt!74403 (insertStrictlySorted!94 (toList!858 (ite c!26351 call!15590 (ite c!26352 call!15589 call!15591))) (_1!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44819 (= (+!173 (ite c!26351 call!15590 (ite c!26352 call!15589 call!15591)) (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74404)))

(declare-fun b!141832 () Bool)

(declare-fun res!67680 () Bool)

(assert (=> b!141832 (=> (not res!67680) (not e!92424))))

(assert (=> b!141832 (= res!67680 (= (getValueByKey!177 (toList!858 lt!74404) (_1!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141833 () Bool)

(assert (=> b!141833 (= e!92424 (contains!907 (toList!858 lt!74404) (ite (or c!26351 c!26352) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44819 res!67679) b!141832))

(assert (= (and b!141832 res!67680) b!141833))

(declare-fun m!170661 () Bool)

(assert (=> d!44819 m!170661))

(declare-fun m!170663 () Bool)

(assert (=> d!44819 m!170663))

(declare-fun m!170665 () Bool)

(assert (=> d!44819 m!170665))

(declare-fun m!170667 () Bool)

(assert (=> d!44819 m!170667))

(declare-fun m!170669 () Bool)

(assert (=> b!141832 m!170669))

(declare-fun m!170671 () Bool)

(assert (=> b!141833 m!170671))

(assert (=> bm!15588 d!44819))

(declare-fun d!44821 () Bool)

(assert (=> d!44821 (= (isEmpty!424 lt!73553) (isEmpty!425 (toList!858 lt!73553)))))

(declare-fun bs!5981 () Bool)

(assert (= bs!5981 d!44821))

(declare-fun m!170673 () Bool)

(assert (=> bs!5981 m!170673))

(assert (=> b!140311 d!44821))

(declare-fun d!44823 () Bool)

(assert (=> d!44823 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74406 () Unit!4387)

(assert (=> d!44823 (= lt!74406 (choose!864 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92425 () Bool)

(assert (=> d!44823 e!92425))

(declare-fun res!67681 () Bool)

(assert (=> d!44823 (=> (not res!67681) (not e!92425))))

(assert (=> d!44823 (= res!67681 (isStrictlySorted!312 (toList!858 lt!73237)))))

(assert (=> d!44823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74406)))

(declare-fun b!141834 () Bool)

(assert (=> b!141834 (= e!92425 (containsKey!180 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44823 res!67681) b!141834))

(assert (=> d!44823 m!167705))

(assert (=> d!44823 m!167705))

(assert (=> d!44823 m!167871))

(declare-fun m!170675 () Bool)

(assert (=> d!44823 m!170675))

(assert (=> d!44823 m!169545))

(assert (=> b!141834 m!167867))

(assert (=> b!140455 d!44823))

(assert (=> b!140455 d!44567))

(assert (=> b!140455 d!44569))

(declare-fun d!44825 () Bool)

(assert (=> d!44825 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5982 () Bool)

(assert (= bs!5982 d!44825))

(assert (=> bs!5982 m!168311))

(declare-fun m!170677 () Bool)

(assert (=> bs!5982 m!170677))

(assert (=> b!140874 d!44825))

(assert (=> b!140874 d!44601))

(declare-fun b!141836 () Bool)

(declare-fun e!92426 () Option!183)

(declare-fun e!92427 () Option!183)

(assert (=> b!141836 (= e!92426 e!92427)))

(declare-fun c!26727 () Bool)

(assert (=> b!141836 (= c!26727 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73195))))))

(declare-fun b!141837 () Bool)

(assert (=> b!141837 (= e!92427 (getValueByKey!177 (t!6295 (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73195))))

(declare-fun b!141835 () Bool)

(assert (=> b!141835 (= e!92426 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))))

(declare-fun b!141838 () Bool)

(assert (=> b!141838 (= e!92427 None!181)))

(declare-fun d!44827 () Bool)

(declare-fun c!26726 () Bool)

(assert (=> d!44827 (= c!26726 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73195)))))

(assert (=> d!44827 (= (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73200 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73195) e!92426)))

(assert (= (and d!44827 c!26726) b!141835))

(assert (= (and d!44827 (not c!26726)) b!141836))

(assert (= (and b!141836 c!26727) b!141837))

(assert (= (and b!141836 (not c!26727)) b!141838))

(declare-fun m!170679 () Bool)

(assert (=> b!141837 m!170679))

(assert (=> b!140907 d!44827))

(declare-fun d!44829 () Bool)

(declare-fun res!67682 () Bool)

(declare-fun e!92428 () Bool)

(assert (=> d!44829 (=> res!67682 e!92428)))

(assert (=> d!44829 (= res!67682 (and ((_ is Cons!1715) lt!73464) (= (_1!1322 (h!2322 lt!73464)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44829 (= (containsKey!180 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92428)))

(declare-fun b!141839 () Bool)

(declare-fun e!92429 () Bool)

(assert (=> b!141839 (= e!92428 e!92429)))

(declare-fun res!67683 () Bool)

(assert (=> b!141839 (=> (not res!67683) (not e!92429))))

(assert (=> b!141839 (= res!67683 (and (or (not ((_ is Cons!1715) lt!73464)) (bvsle (_1!1322 (h!2322 lt!73464)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73464) (bvslt (_1!1322 (h!2322 lt!73464)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141840 () Bool)

(assert (=> b!141840 (= e!92429 (containsKey!180 (t!6295 lt!73464) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44829 (not res!67682)) b!141839))

(assert (= (and b!141839 res!67683) b!141840))

(declare-fun m!170681 () Bool)

(assert (=> b!141840 m!170681))

(assert (=> b!141042 d!44829))

(declare-fun d!44831 () Bool)

(declare-fun e!92430 () Bool)

(assert (=> d!44831 e!92430))

(declare-fun res!67684 () Bool)

(assert (=> d!44831 (=> res!67684 e!92430)))

(declare-fun lt!74410 () Bool)

(assert (=> d!44831 (= res!67684 (not lt!74410))))

(declare-fun lt!74407 () Bool)

(assert (=> d!44831 (= lt!74410 lt!74407)))

(declare-fun lt!74409 () Unit!4387)

(declare-fun e!92431 () Unit!4387)

(assert (=> d!44831 (= lt!74409 e!92431)))

(declare-fun c!26728 () Bool)

(assert (=> d!44831 (= c!26728 lt!74407)))

(assert (=> d!44831 (= lt!74407 (containsKey!180 (toList!858 lt!73624) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44831 (= (contains!904 lt!73624 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74410)))

(declare-fun b!141841 () Bool)

(declare-fun lt!74408 () Unit!4387)

(assert (=> b!141841 (= e!92431 lt!74408)))

(assert (=> b!141841 (= lt!74408 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73624) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141841 (isDefined!129 (getValueByKey!177 (toList!858 lt!73624) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141842 () Bool)

(declare-fun Unit!4477 () Unit!4387)

(assert (=> b!141842 (= e!92431 Unit!4477)))

(declare-fun b!141843 () Bool)

(assert (=> b!141843 (= e!92430 (isDefined!129 (getValueByKey!177 (toList!858 lt!73624) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44831 c!26728) b!141841))

(assert (= (and d!44831 (not c!26728)) b!141842))

(assert (= (and d!44831 (not res!67684)) b!141843))

(declare-fun m!170683 () Bool)

(assert (=> d!44831 m!170683))

(declare-fun m!170685 () Bool)

(assert (=> b!141841 m!170685))

(declare-fun m!170687 () Bool)

(assert (=> b!141841 m!170687))

(assert (=> b!141841 m!170687))

(declare-fun m!170689 () Bool)

(assert (=> b!141841 m!170689))

(assert (=> b!141843 m!170687))

(assert (=> b!141843 m!170687))

(assert (=> b!141843 m!170689))

(assert (=> b!140403 d!44831))

(assert (=> d!43691 d!43697))

(declare-fun d!44833 () Bool)

(declare-fun e!92432 () Bool)

(assert (=> d!44833 e!92432))

(declare-fun res!67685 () Bool)

(assert (=> d!44833 (=> res!67685 e!92432)))

(declare-fun lt!74414 () Bool)

(assert (=> d!44833 (= res!67685 (not lt!74414))))

(declare-fun lt!74411 () Bool)

(assert (=> d!44833 (= lt!74414 lt!74411)))

(declare-fun lt!74413 () Unit!4387)

(declare-fun e!92433 () Unit!4387)

(assert (=> d!44833 (= lt!74413 e!92433)))

(declare-fun c!26729 () Bool)

(assert (=> d!44833 (= c!26729 lt!74411)))

(assert (=> d!44833 (= lt!74411 (containsKey!180 (toList!858 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44833 (= (contains!904 lt!73601 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74414)))

(declare-fun b!141844 () Bool)

(declare-fun lt!74412 () Unit!4387)

(assert (=> b!141844 (= e!92433 lt!74412)))

(assert (=> b!141844 (= lt!74412 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141844 (isDefined!129 (getValueByKey!177 (toList!858 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141845 () Bool)

(declare-fun Unit!4478 () Unit!4387)

(assert (=> b!141845 (= e!92433 Unit!4478)))

(declare-fun b!141846 () Bool)

(assert (=> b!141846 (= e!92432 (isDefined!129 (getValueByKey!177 (toList!858 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44833 c!26729) b!141844))

(assert (= (and d!44833 (not c!26729)) b!141845))

(assert (= (and d!44833 (not res!67685)) b!141846))

(declare-fun m!170691 () Bool)

(assert (=> d!44833 m!170691))

(declare-fun m!170693 () Bool)

(assert (=> b!141844 m!170693))

(declare-fun m!170695 () Bool)

(assert (=> b!141844 m!170695))

(assert (=> b!141844 m!170695))

(declare-fun m!170697 () Bool)

(assert (=> b!141844 m!170697))

(assert (=> b!141846 m!170695))

(assert (=> b!141846 m!170695))

(assert (=> b!141846 m!170697))

(assert (=> bm!15572 d!44833))

(declare-fun c!26730 () Bool)

(declare-fun call!15712 () Bool)

(declare-fun bm!15709 () Bool)

(assert (=> bm!15709 (= call!15712 (arrayNoDuplicates!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26730 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26359 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717))) (ite c!26359 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))))

(declare-fun b!141847 () Bool)

(declare-fun e!92434 () Bool)

(declare-fun e!92435 () Bool)

(assert (=> b!141847 (= e!92434 e!92435)))

(declare-fun res!67688 () Bool)

(assert (=> b!141847 (=> (not res!67688) (not e!92435))))

(declare-fun e!92437 () Bool)

(assert (=> b!141847 (= res!67688 (not e!92437))))

(declare-fun res!67686 () Bool)

(assert (=> b!141847 (=> (not res!67686) (not e!92437))))

(assert (=> b!141847 (= res!67686 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141848 () Bool)

(declare-fun e!92436 () Bool)

(assert (=> b!141848 (= e!92436 call!15712)))

(declare-fun b!141849 () Bool)

(assert (=> b!141849 (= e!92435 e!92436)))

(assert (=> b!141849 (= c!26730 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!44835 () Bool)

(declare-fun res!67687 () Bool)

(assert (=> d!44835 (=> res!67687 e!92434)))

(assert (=> d!44835 (= res!67687 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44835 (= (arrayNoDuplicates!0 (_keys!4698 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26359 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717))) e!92434)))

(declare-fun b!141850 () Bool)

(assert (=> b!141850 (= e!92436 call!15712)))

(declare-fun b!141851 () Bool)

(assert (=> b!141851 (= e!92437 (contains!906 (ite c!26359 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!44835 (not res!67687)) b!141847))

(assert (= (and b!141847 res!67686) b!141851))

(assert (= (and b!141847 res!67688) b!141849))

(assert (= (and b!141849 c!26730) b!141848))

(assert (= (and b!141849 (not c!26730)) b!141850))

(assert (= (or b!141848 b!141850) bm!15709))

(assert (=> bm!15709 m!169995))

(declare-fun m!170699 () Bool)

(assert (=> bm!15709 m!170699))

(assert (=> b!141847 m!169995))

(assert (=> b!141847 m!169995))

(assert (=> b!141847 m!169997))

(assert (=> b!141849 m!169995))

(assert (=> b!141849 m!169995))

(assert (=> b!141849 m!169997))

(assert (=> b!141851 m!169995))

(assert (=> b!141851 m!169995))

(declare-fun m!170701 () Bool)

(assert (=> b!141851 m!170701))

(assert (=> bm!15594 d!44835))

(declare-fun bm!15710 () Bool)

(declare-fun call!15715 () List!1719)

(declare-fun call!15714 () List!1719)

(assert (=> bm!15710 (= call!15715 call!15714)))

(declare-fun b!141853 () Bool)

(declare-fun e!92439 () List!1719)

(declare-fun e!92441 () List!1719)

(assert (=> b!141853 (= e!92439 e!92441)))

(declare-fun c!26734 () Bool)

(assert (=> b!141853 (= c!26734 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15471))) (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15471)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141854 () Bool)

(declare-fun res!67690 () Bool)

(declare-fun e!92438 () Bool)

(assert (=> b!141854 (=> (not res!67690) (not e!92438))))

(declare-fun lt!74415 () List!1719)

(assert (=> b!141854 (= res!67690 (containsKey!180 lt!74415 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26732 () Bool)

(declare-fun b!141855 () Bool)

(assert (=> b!141855 (= c!26732 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15471))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 call!15471)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92440 () List!1719)

(assert (=> b!141855 (= e!92441 e!92440)))

(declare-fun bm!15711 () Bool)

(declare-fun call!15713 () List!1719)

(assert (=> bm!15711 (= call!15714 call!15713)))

(declare-fun b!141856 () Bool)

(assert (=> b!141856 (= e!92441 call!15714)))

(declare-fun b!141857 () Bool)

(assert (=> b!141857 (= e!92439 call!15713)))

(declare-fun b!141858 () Bool)

(assert (=> b!141858 (= e!92438 (contains!907 lt!74415 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141852 () Bool)

(declare-fun e!92442 () List!1719)

(assert (=> b!141852 (= e!92442 (ite c!26734 (t!6295 (t!6295 (toList!858 call!15471))) (ite c!26732 (Cons!1715 (h!2322 (t!6295 (toList!858 call!15471))) (t!6295 (t!6295 (toList!858 call!15471)))) Nil!1716)))))

(declare-fun d!44837 () Bool)

(assert (=> d!44837 e!92438))

(declare-fun res!67689 () Bool)

(assert (=> d!44837 (=> (not res!67689) (not e!92438))))

(assert (=> d!44837 (= res!67689 (isStrictlySorted!312 lt!74415))))

(assert (=> d!44837 (= lt!74415 e!92439)))

(declare-fun c!26733 () Bool)

(assert (=> d!44837 (= c!26733 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15471))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 call!15471)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44837 (isStrictlySorted!312 (t!6295 (toList!858 call!15471)))))

(assert (=> d!44837 (= (insertStrictlySorted!94 (t!6295 (toList!858 call!15471)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74415)))

(declare-fun b!141859 () Bool)

(assert (=> b!141859 (= e!92440 call!15715)))

(declare-fun b!141860 () Bool)

(assert (=> b!141860 (= e!92440 call!15715)))

(declare-fun bm!15712 () Bool)

(assert (=> bm!15712 (= call!15713 ($colon$colon!93 e!92442 (ite c!26733 (h!2322 (t!6295 (toList!858 call!15471))) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26731 () Bool)

(assert (=> bm!15712 (= c!26731 c!26733)))

(declare-fun b!141861 () Bool)

(assert (=> b!141861 (= e!92442 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 call!15471))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44837 c!26733) b!141857))

(assert (= (and d!44837 (not c!26733)) b!141853))

(assert (= (and b!141853 c!26734) b!141856))

(assert (= (and b!141853 (not c!26734)) b!141855))

(assert (= (and b!141855 c!26732) b!141859))

(assert (= (and b!141855 (not c!26732)) b!141860))

(assert (= (or b!141859 b!141860) bm!15710))

(assert (= (or b!141856 bm!15710) bm!15711))

(assert (= (or b!141857 bm!15711) bm!15712))

(assert (= (and bm!15712 c!26731) b!141861))

(assert (= (and bm!15712 (not c!26731)) b!141852))

(assert (= (and d!44837 res!67689) b!141854))

(assert (= (and b!141854 res!67690) b!141858))

(declare-fun m!170703 () Bool)

(assert (=> bm!15712 m!170703))

(declare-fun m!170705 () Bool)

(assert (=> d!44837 m!170705))

(declare-fun m!170707 () Bool)

(assert (=> d!44837 m!170707))

(declare-fun m!170709 () Bool)

(assert (=> b!141854 m!170709))

(declare-fun m!170711 () Bool)

(assert (=> b!141861 m!170711))

(declare-fun m!170713 () Bool)

(assert (=> b!141858 m!170713))

(assert (=> b!140724 d!44837))

(declare-fun d!44839 () Bool)

(declare-fun lt!74416 () Bool)

(assert (=> d!44839 (= lt!74416 (select (content!138 Nil!1717) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun e!92444 () Bool)

(assert (=> d!44839 (= lt!74416 e!92444)))

(declare-fun res!67691 () Bool)

(assert (=> d!44839 (=> (not res!67691) (not e!92444))))

(assert (=> d!44839 (= res!67691 ((_ is Cons!1716) Nil!1717))))

(assert (=> d!44839 (= (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) lt!74416)))

(declare-fun b!141862 () Bool)

(declare-fun e!92443 () Bool)

(assert (=> b!141862 (= e!92444 e!92443)))

(declare-fun res!67692 () Bool)

(assert (=> b!141862 (=> res!67692 e!92443)))

(assert (=> b!141862 (= res!67692 (= (h!2323 Nil!1717) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun b!141863 () Bool)

(assert (=> b!141863 (= e!92443 (contains!906 (t!6296 Nil!1717) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(assert (= (and d!44839 res!67691) b!141862))

(assert (= (and b!141862 (not res!67692)) b!141863))

(assert (=> d!44839 m!167077))

(assert (=> d!44839 m!168391))

(declare-fun m!170715 () Bool)

(assert (=> d!44839 m!170715))

(assert (=> b!141863 m!168391))

(declare-fun m!170717 () Bool)

(assert (=> b!141863 m!170717))

(assert (=> b!141089 d!44839))

(declare-fun d!44841 () Bool)

(declare-fun lt!74417 () Bool)

(assert (=> d!44841 (= lt!74417 (select (content!139 (toList!858 lt!73803)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92445 () Bool)

(assert (=> d!44841 (= lt!74417 e!92445)))

(declare-fun res!67693 () Bool)

(assert (=> d!44841 (=> (not res!67693) (not e!92445))))

(assert (=> d!44841 (= res!67693 ((_ is Cons!1715) (toList!858 lt!73803)))))

(assert (=> d!44841 (= (contains!907 (toList!858 lt!73803) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74417)))

(declare-fun b!141864 () Bool)

(declare-fun e!92446 () Bool)

(assert (=> b!141864 (= e!92445 e!92446)))

(declare-fun res!67694 () Bool)

(assert (=> b!141864 (=> res!67694 e!92446)))

(assert (=> b!141864 (= res!67694 (= (h!2322 (toList!858 lt!73803)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141865 () Bool)

(assert (=> b!141865 (= e!92446 (contains!907 (t!6295 (toList!858 lt!73803)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44841 res!67693) b!141864))

(assert (= (and b!141864 (not res!67694)) b!141865))

(declare-fun m!170719 () Bool)

(assert (=> d!44841 m!170719))

(declare-fun m!170721 () Bool)

(assert (=> d!44841 m!170721))

(declare-fun m!170723 () Bool)

(assert (=> b!141865 m!170723))

(assert (=> b!140736 d!44841))

(assert (=> b!140934 d!44487))

(declare-fun b!141867 () Bool)

(declare-fun e!92447 () Option!183)

(declare-fun e!92448 () Option!183)

(assert (=> b!141867 (= e!92447 e!92448)))

(declare-fun c!26736 () Bool)

(assert (=> b!141867 (= c!26736 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!141868 () Bool)

(assert (=> b!141868 (= e!92448 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!141866 () Bool)

(assert (=> b!141866 (= e!92447 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73184))))))))

(declare-fun b!141869 () Bool)

(assert (=> b!141869 (= e!92448 None!181)))

(declare-fun c!26735 () Bool)

(declare-fun d!44843 () Bool)

(assert (=> d!44843 (= c!26735 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44843 (= (getValueByKey!177 (t!6295 (toList!858 lt!73184)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92447)))

(assert (= (and d!44843 c!26735) b!141866))

(assert (= (and d!44843 (not c!26735)) b!141867))

(assert (= (and b!141867 c!26736) b!141868))

(assert (= (and b!141867 (not c!26736)) b!141869))

(assert (=> b!141868 m!166833))

(declare-fun m!170725 () Bool)

(assert (=> b!141868 m!170725))

(assert (=> b!140287 d!44843))

(declare-fun d!44845 () Bool)

(assert (=> d!44845 (= (apply!120 lt!73770 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73770) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5983 () Bool)

(assert (= bs!5983 d!44845))

(declare-fun m!170727 () Bool)

(assert (=> bs!5983 m!170727))

(assert (=> bs!5983 m!170727))

(declare-fun m!170729 () Bool)

(assert (=> bs!5983 m!170729))

(assert (=> b!140691 d!44845))

(declare-fun d!44847 () Bool)

(declare-fun res!67695 () Bool)

(declare-fun e!92449 () Bool)

(assert (=> d!44847 (=> res!67695 e!92449)))

(assert (=> d!44847 (= res!67695 (and ((_ is Cons!1715) lt!73289) (= (_1!1322 (h!2322 lt!73289)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44847 (= (containsKey!180 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92449)))

(declare-fun b!141870 () Bool)

(declare-fun e!92450 () Bool)

(assert (=> b!141870 (= e!92449 e!92450)))

(declare-fun res!67696 () Bool)

(assert (=> b!141870 (=> (not res!67696) (not e!92450))))

(assert (=> b!141870 (= res!67696 (and (or (not ((_ is Cons!1715) lt!73289)) (bvsle (_1!1322 (h!2322 lt!73289)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73289) (bvslt (_1!1322 (h!2322 lt!73289)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141871 () Bool)

(assert (=> b!141871 (= e!92450 (containsKey!180 (t!6295 lt!73289) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44847 (not res!67695)) b!141870))

(assert (= (and b!141870 res!67696) b!141871))

(declare-fun m!170731 () Bool)

(assert (=> b!141871 m!170731))

(assert (=> b!140669 d!44847))

(declare-fun d!44849 () Bool)

(assert (=> d!44849 (= (get!1535 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43783 d!44849))

(assert (=> d!43783 d!44765))

(declare-fun d!44851 () Bool)

(assert (=> d!44851 (= (apply!120 lt!73514 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73514) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5984 () Bool)

(assert (= bs!5984 d!44851))

(assert (=> bs!5984 m!166927))

(declare-fun m!170733 () Bool)

(assert (=> bs!5984 m!170733))

(assert (=> bs!5984 m!170733))

(declare-fun m!170735 () Bool)

(assert (=> bs!5984 m!170735))

(assert (=> b!140266 d!44851))

(declare-fun c!26737 () Bool)

(declare-fun d!44853 () Bool)

(assert (=> d!44853 (= c!26737 ((_ is ValueCellFull!1121) (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!92451 () V!3553)

(assert (=> d!44853 (= (get!1531 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92451)))

(declare-fun b!141872 () Bool)

(assert (=> b!141872 (= e!92451 (get!1533 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141873 () Bool)

(assert (=> b!141873 (= e!92451 (get!1534 (select (arr!2307 (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44853 c!26737) b!141872))

(assert (= (and d!44853 (not c!26737)) b!141873))

(assert (=> b!141872 m!167515))

(assert (=> b!141872 m!166963))

(declare-fun m!170737 () Bool)

(assert (=> b!141872 m!170737))

(assert (=> b!141873 m!167515))

(assert (=> b!141873 m!166963))

(declare-fun m!170739 () Bool)

(assert (=> b!141873 m!170739))

(assert (=> b!140266 d!44853))

(declare-fun d!44855 () Bool)

(assert (=> d!44855 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5985 () Bool)

(assert (= bs!5985 d!44855))

(assert (=> bs!5985 m!167855))

(declare-fun m!170741 () Bool)

(assert (=> bs!5985 m!170741))

(assert (=> b!140427 d!44855))

(declare-fun b!141875 () Bool)

(declare-fun e!92452 () Option!183)

(declare-fun e!92453 () Option!183)

(assert (=> b!141875 (= e!92452 e!92453)))

(declare-fun c!26739 () Bool)

(assert (=> b!141875 (= c!26739 (and ((_ is Cons!1715) (toList!858 lt!73446)) (not (= (_1!1322 (h!2322 (toList!858 lt!73446))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141876 () Bool)

(assert (=> b!141876 (= e!92453 (getValueByKey!177 (t!6295 (toList!858 lt!73446)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141874 () Bool)

(assert (=> b!141874 (= e!92452 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73446)))))))

(declare-fun b!141877 () Bool)

(assert (=> b!141877 (= e!92453 None!181)))

(declare-fun d!44857 () Bool)

(declare-fun c!26738 () Bool)

(assert (=> d!44857 (= c!26738 (and ((_ is Cons!1715) (toList!858 lt!73446)) (= (_1!1322 (h!2322 (toList!858 lt!73446))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44857 (= (getValueByKey!177 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000) e!92452)))

(assert (= (and d!44857 c!26738) b!141874))

(assert (= (and d!44857 (not c!26738)) b!141875))

(assert (= (and b!141875 c!26739) b!141876))

(assert (= (and b!141875 (not c!26739)) b!141877))

(declare-fun m!170743 () Bool)

(assert (=> b!141876 m!170743))

(assert (=> b!140427 d!44857))

(declare-fun d!44859 () Bool)

(assert (=> d!44859 (isDefined!129 (getValueByKey!177 (toList!858 lt!73188) lt!73194))))

(declare-fun lt!74418 () Unit!4387)

(assert (=> d!44859 (= lt!74418 (choose!864 (toList!858 lt!73188) lt!73194))))

(declare-fun e!92454 () Bool)

(assert (=> d!44859 e!92454))

(declare-fun res!67697 () Bool)

(assert (=> d!44859 (=> (not res!67697) (not e!92454))))

(assert (=> d!44859 (= res!67697 (isStrictlySorted!312 (toList!858 lt!73188)))))

(assert (=> d!44859 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73188) lt!73194) lt!74418)))

(declare-fun b!141878 () Bool)

(assert (=> b!141878 (= e!92454 (containsKey!180 (toList!858 lt!73188) lt!73194))))

(assert (= (and d!44859 res!67697) b!141878))

(assert (=> d!44859 m!168783))

(assert (=> d!44859 m!168783))

(assert (=> d!44859 m!168785))

(declare-fun m!170745 () Bool)

(assert (=> d!44859 m!170745))

(assert (=> d!44859 m!168815))

(assert (=> b!141878 m!168779))

(assert (=> b!140978 d!44859))

(assert (=> b!140978 d!44687))

(assert (=> b!140978 d!44689))

(declare-fun d!44861 () Bool)

(declare-fun e!92455 () Bool)

(assert (=> d!44861 e!92455))

(declare-fun res!67698 () Bool)

(assert (=> d!44861 (=> res!67698 e!92455)))

(declare-fun lt!74422 () Bool)

(assert (=> d!44861 (= res!67698 (not lt!74422))))

(declare-fun lt!74419 () Bool)

(assert (=> d!44861 (= lt!74422 lt!74419)))

(declare-fun lt!74421 () Unit!4387)

(declare-fun e!92456 () Unit!4387)

(assert (=> d!44861 (= lt!74421 e!92456)))

(declare-fun c!26740 () Bool)

(assert (=> d!44861 (= c!26740 lt!74419)))

(assert (=> d!44861 (= lt!74419 (containsKey!180 (toList!858 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73971))))

(assert (=> d!44861 (= (contains!904 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73971) lt!74422)))

(declare-fun b!141879 () Bool)

(declare-fun lt!74420 () Unit!4387)

(assert (=> b!141879 (= e!92456 lt!74420)))

(assert (=> b!141879 (= lt!74420 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73971))))

(assert (=> b!141879 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73971))))

(declare-fun b!141880 () Bool)

(declare-fun Unit!4479 () Unit!4387)

(assert (=> b!141880 (= e!92456 Unit!4479)))

(declare-fun b!141881 () Bool)

(assert (=> b!141881 (= e!92455 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73971)))))

(assert (= (and d!44861 c!26740) b!141879))

(assert (= (and d!44861 (not c!26740)) b!141880))

(assert (= (and d!44861 (not res!67698)) b!141881))

(declare-fun m!170747 () Bool)

(assert (=> d!44861 m!170747))

(declare-fun m!170749 () Bool)

(assert (=> b!141879 m!170749))

(declare-fun m!170751 () Bool)

(assert (=> b!141879 m!170751))

(assert (=> b!141879 m!170751))

(declare-fun m!170753 () Bool)

(assert (=> b!141879 m!170753))

(assert (=> b!141881 m!170751))

(assert (=> b!141881 m!170751))

(assert (=> b!141881 m!170753))

(assert (=> b!141016 d!44861))

(declare-fun d!44863 () Bool)

(assert (=> d!44863 (= (apply!120 (+!173 lt!73980 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))) lt!73979) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73980 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))) lt!73979)))))

(declare-fun bs!5986 () Bool)

(assert (= bs!5986 d!44863))

(declare-fun m!170755 () Bool)

(assert (=> bs!5986 m!170755))

(assert (=> bs!5986 m!170755))

(declare-fun m!170757 () Bool)

(assert (=> bs!5986 m!170757))

(assert (=> b!141016 d!44863))

(declare-fun d!44865 () Bool)

(assert (=> d!44865 (= (apply!120 (+!173 lt!73964 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73962) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73964 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73962)))))

(declare-fun bs!5987 () Bool)

(assert (= bs!5987 d!44865))

(declare-fun m!170759 () Bool)

(assert (=> bs!5987 m!170759))

(assert (=> bs!5987 m!170759))

(declare-fun m!170761 () Bool)

(assert (=> bs!5987 m!170761))

(assert (=> b!141016 d!44865))

(declare-fun d!44867 () Bool)

(assert (=> d!44867 (= (apply!120 (+!173 lt!73977 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))) lt!73972) (apply!120 lt!73977 lt!73972))))

(declare-fun lt!74423 () Unit!4387)

(assert (=> d!44867 (= lt!74423 (choose!867 lt!73977 lt!73966 (minValue!2789 newMap!16) lt!73972))))

(declare-fun e!92457 () Bool)

(assert (=> d!44867 e!92457))

(declare-fun res!67699 () Bool)

(assert (=> d!44867 (=> (not res!67699) (not e!92457))))

(assert (=> d!44867 (= res!67699 (contains!904 lt!73977 lt!73972))))

(assert (=> d!44867 (= (addApplyDifferent!96 lt!73977 lt!73966 (minValue!2789 newMap!16) lt!73972) lt!74423)))

(declare-fun b!141882 () Bool)

(assert (=> b!141882 (= e!92457 (not (= lt!73972 lt!73966)))))

(assert (= (and d!44867 res!67699) b!141882))

(assert (=> d!44867 m!168869))

(declare-fun m!170763 () Bool)

(assert (=> d!44867 m!170763))

(assert (=> d!44867 m!168847))

(assert (=> d!44867 m!168849))

(declare-fun m!170765 () Bool)

(assert (=> d!44867 m!170765))

(assert (=> d!44867 m!168847))

(assert (=> b!141016 d!44867))

(declare-fun d!44869 () Bool)

(assert (=> d!44869 (= (apply!120 lt!73977 lt!73972) (get!1535 (getValueByKey!177 (toList!858 lt!73977) lt!73972)))))

(declare-fun bs!5988 () Bool)

(assert (= bs!5988 d!44869))

(declare-fun m!170767 () Bool)

(assert (=> bs!5988 m!170767))

(assert (=> bs!5988 m!170767))

(declare-fun m!170769 () Bool)

(assert (=> bs!5988 m!170769))

(assert (=> b!141016 d!44869))

(declare-fun d!44871 () Bool)

(assert (=> d!44871 (= (apply!120 (+!173 lt!73964 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73962) (apply!120 lt!73964 lt!73962))))

(declare-fun lt!74424 () Unit!4387)

(assert (=> d!44871 (= lt!74424 (choose!867 lt!73964 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73962))))

(declare-fun e!92458 () Bool)

(assert (=> d!44871 e!92458))

(declare-fun res!67700 () Bool)

(assert (=> d!44871 (=> (not res!67700) (not e!92458))))

(assert (=> d!44871 (= res!67700 (contains!904 lt!73964 lt!73962))))

(assert (=> d!44871 (= (addApplyDifferent!96 lt!73964 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73962) lt!74424)))

(declare-fun b!141883 () Bool)

(assert (=> b!141883 (= e!92458 (not (= lt!73962 lt!73974)))))

(assert (= (and d!44871 res!67700) b!141883))

(assert (=> d!44871 m!168873))

(assert (=> d!44871 m!166663))

(declare-fun m!170771 () Bool)

(assert (=> d!44871 m!170771))

(assert (=> d!44871 m!168853))

(assert (=> d!44871 m!168875))

(declare-fun m!170773 () Bool)

(assert (=> d!44871 m!170773))

(assert (=> d!44871 m!168853))

(assert (=> b!141016 d!44871))

(declare-fun d!44873 () Bool)

(declare-fun e!92459 () Bool)

(assert (=> d!44873 e!92459))

(declare-fun res!67701 () Bool)

(assert (=> d!44873 (=> (not res!67701) (not e!92459))))

(declare-fun lt!74427 () ListLongMap!1685)

(assert (=> d!44873 (= res!67701 (contains!904 lt!74427 (_1!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74426 () List!1719)

(assert (=> d!44873 (= lt!74427 (ListLongMap!1686 lt!74426))))

(declare-fun lt!74425 () Unit!4387)

(declare-fun lt!74428 () Unit!4387)

(assert (=> d!44873 (= lt!74425 lt!74428)))

(assert (=> d!44873 (= (getValueByKey!177 lt!74426 (_1!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44873 (= lt!74428 (lemmaContainsTupThenGetReturnValue!91 lt!74426 (_1!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44873 (= lt!74426 (insertStrictlySorted!94 (toList!858 lt!73965) (_1!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44873 (= (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74427)))

(declare-fun b!141884 () Bool)

(declare-fun res!67702 () Bool)

(assert (=> b!141884 (=> (not res!67702) (not e!92459))))

(assert (=> b!141884 (= res!67702 (= (getValueByKey!177 (toList!858 lt!74427) (_1!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141885 () Bool)

(assert (=> b!141885 (= e!92459 (contains!907 (toList!858 lt!74427) (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44873 res!67701) b!141884))

(assert (= (and b!141884 res!67702) b!141885))

(declare-fun m!170775 () Bool)

(assert (=> d!44873 m!170775))

(declare-fun m!170777 () Bool)

(assert (=> d!44873 m!170777))

(declare-fun m!170779 () Bool)

(assert (=> d!44873 m!170779))

(declare-fun m!170781 () Bool)

(assert (=> d!44873 m!170781))

(declare-fun m!170783 () Bool)

(assert (=> b!141884 m!170783))

(declare-fun m!170785 () Bool)

(assert (=> b!141885 m!170785))

(assert (=> b!141016 d!44873))

(declare-fun d!44875 () Bool)

(assert (=> d!44875 (= (apply!120 lt!73964 lt!73962) (get!1535 (getValueByKey!177 (toList!858 lt!73964) lt!73962)))))

(declare-fun bs!5989 () Bool)

(assert (= bs!5989 d!44875))

(declare-fun m!170787 () Bool)

(assert (=> bs!5989 m!170787))

(assert (=> bs!5989 m!170787))

(declare-fun m!170789 () Bool)

(assert (=> bs!5989 m!170789))

(assert (=> b!141016 d!44875))

(declare-fun d!44877 () Bool)

(assert (=> d!44877 (contains!904 (+!173 lt!73965 (tuple2!2623 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73971)))

(declare-fun lt!74429 () Unit!4387)

(assert (=> d!44877 (= lt!74429 (choose!866 lt!73965 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73971))))

(assert (=> d!44877 (contains!904 lt!73965 lt!73971)))

(assert (=> d!44877 (= (addStillContains!96 lt!73965 lt!73967 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73971) lt!74429)))

(declare-fun bs!5990 () Bool)

(assert (= bs!5990 d!44877))

(assert (=> bs!5990 m!168859))

(assert (=> bs!5990 m!168859))

(assert (=> bs!5990 m!168861))

(assert (=> bs!5990 m!166663))

(declare-fun m!170791 () Bool)

(assert (=> bs!5990 m!170791))

(declare-fun m!170793 () Bool)

(assert (=> bs!5990 m!170793))

(assert (=> b!141016 d!44877))

(declare-fun d!44879 () Bool)

(assert (=> d!44879 (= (apply!120 lt!73980 lt!73979) (get!1535 (getValueByKey!177 (toList!858 lt!73980) lt!73979)))))

(declare-fun bs!5991 () Bool)

(assert (= bs!5991 d!44879))

(declare-fun m!170795 () Bool)

(assert (=> bs!5991 m!170795))

(assert (=> bs!5991 m!170795))

(declare-fun m!170797 () Bool)

(assert (=> bs!5991 m!170797))

(assert (=> b!141016 d!44879))

(declare-fun d!44881 () Bool)

(assert (=> d!44881 (= (apply!120 (+!173 lt!73977 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))) lt!73972) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73977 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))) lt!73972)))))

(declare-fun bs!5992 () Bool)

(assert (= bs!5992 d!44881))

(declare-fun m!170799 () Bool)

(assert (=> bs!5992 m!170799))

(assert (=> bs!5992 m!170799))

(declare-fun m!170801 () Bool)

(assert (=> bs!5992 m!170801))

(assert (=> b!141016 d!44881))

(declare-fun d!44883 () Bool)

(declare-fun e!92460 () Bool)

(assert (=> d!44883 e!92460))

(declare-fun res!67703 () Bool)

(assert (=> d!44883 (=> (not res!67703) (not e!92460))))

(declare-fun lt!74432 () ListLongMap!1685)

(assert (=> d!44883 (= res!67703 (contains!904 lt!74432 (_1!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74431 () List!1719)

(assert (=> d!44883 (= lt!74432 (ListLongMap!1686 lt!74431))))

(declare-fun lt!74430 () Unit!4387)

(declare-fun lt!74433 () Unit!4387)

(assert (=> d!44883 (= lt!74430 lt!74433)))

(assert (=> d!44883 (= (getValueByKey!177 lt!74431 (_1!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44883 (= lt!74433 (lemmaContainsTupThenGetReturnValue!91 lt!74431 (_1!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44883 (= lt!74431 (insertStrictlySorted!94 (toList!858 lt!73964) (_1!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44883 (= (+!173 lt!73964 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74432)))

(declare-fun b!141886 () Bool)

(declare-fun res!67704 () Bool)

(assert (=> b!141886 (=> (not res!67704) (not e!92460))))

(assert (=> b!141886 (= res!67704 (= (getValueByKey!177 (toList!858 lt!74432) (_1!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141887 () Bool)

(assert (=> b!141887 (= e!92460 (contains!907 (toList!858 lt!74432) (tuple2!2623 lt!73974 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44883 res!67703) b!141886))

(assert (= (and b!141886 res!67704) b!141887))

(declare-fun m!170803 () Bool)

(assert (=> d!44883 m!170803))

(declare-fun m!170805 () Bool)

(assert (=> d!44883 m!170805))

(declare-fun m!170807 () Bool)

(assert (=> d!44883 m!170807))

(declare-fun m!170809 () Bool)

(assert (=> d!44883 m!170809))

(declare-fun m!170811 () Bool)

(assert (=> b!141886 m!170811))

(declare-fun m!170813 () Bool)

(assert (=> b!141887 m!170813))

(assert (=> b!141016 d!44883))

(declare-fun d!44885 () Bool)

(assert (=> d!44885 (= (apply!120 (+!173 lt!73980 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))) lt!73979) (apply!120 lt!73980 lt!73979))))

(declare-fun lt!74434 () Unit!4387)

(assert (=> d!44885 (= lt!74434 (choose!867 lt!73980 lt!73976 (minValue!2789 newMap!16) lt!73979))))

(declare-fun e!92461 () Bool)

(assert (=> d!44885 e!92461))

(declare-fun res!67705 () Bool)

(assert (=> d!44885 (=> (not res!67705) (not e!92461))))

(assert (=> d!44885 (= res!67705 (contains!904 lt!73980 lt!73979))))

(assert (=> d!44885 (= (addApplyDifferent!96 lt!73980 lt!73976 (minValue!2789 newMap!16) lt!73979) lt!74434)))

(declare-fun b!141888 () Bool)

(assert (=> b!141888 (= e!92461 (not (= lt!73979 lt!73976)))))

(assert (= (and d!44885 res!67705) b!141888))

(assert (=> d!44885 m!168863))

(declare-fun m!170815 () Bool)

(assert (=> d!44885 m!170815))

(assert (=> d!44885 m!168865))

(assert (=> d!44885 m!168867))

(declare-fun m!170817 () Bool)

(assert (=> d!44885 m!170817))

(assert (=> d!44885 m!168865))

(assert (=> b!141016 d!44885))

(declare-fun b!141889 () Bool)

(declare-fun res!67707 () Bool)

(declare-fun e!92467 () Bool)

(assert (=> b!141889 (=> (not res!67707) (not e!92467))))

(declare-fun lt!74437 () ListLongMap!1685)

(assert (=> b!141889 (= res!67707 (not (contains!904 lt!74437 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141890 () Bool)

(declare-fun e!92463 () Bool)

(assert (=> b!141890 (= e!92467 e!92463)))

(declare-fun c!26741 () Bool)

(declare-fun e!92465 () Bool)

(assert (=> b!141890 (= c!26741 e!92465)))

(declare-fun res!67708 () Bool)

(assert (=> b!141890 (=> (not res!67708) (not e!92465))))

(assert (=> b!141890 (= res!67708 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!92464 () Bool)

(declare-fun b!141891 () Bool)

(assert (=> b!141891 (= e!92464 (= lt!74437 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141892 () Bool)

(declare-fun lt!74439 () Unit!4387)

(declare-fun lt!74435 () Unit!4387)

(assert (=> b!141892 (= lt!74439 lt!74435)))

(declare-fun lt!74438 () ListLongMap!1685)

(declare-fun lt!74441 () (_ BitVec 64))

(declare-fun lt!74436 () (_ BitVec 64))

(declare-fun lt!74440 () V!3553)

(assert (=> b!141892 (not (contains!904 (+!173 lt!74438 (tuple2!2623 lt!74436 lt!74440)) lt!74441))))

(assert (=> b!141892 (= lt!74435 (addStillNotContains!66 lt!74438 lt!74436 lt!74440 lt!74441))))

(assert (=> b!141892 (= lt!74441 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141892 (= lt!74440 (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141892 (= lt!74436 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15716 () ListLongMap!1685)

(assert (=> b!141892 (= lt!74438 call!15716)))

(declare-fun e!92468 () ListLongMap!1685)

(assert (=> b!141892 (= e!92468 (+!173 call!15716 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141893 () Bool)

(declare-fun e!92462 () Bool)

(assert (=> b!141893 (= e!92463 e!92462)))

(assert (=> b!141893 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67709 () Bool)

(assert (=> b!141893 (= res!67709 (contains!904 lt!74437 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141893 (=> (not res!67709) (not e!92462))))

(declare-fun d!44887 () Bool)

(assert (=> d!44887 e!92467))

(declare-fun res!67706 () Bool)

(assert (=> d!44887 (=> (not res!67706) (not e!92467))))

(assert (=> d!44887 (= res!67706 (not (contains!904 lt!74437 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92466 () ListLongMap!1685)

(assert (=> d!44887 (= lt!74437 e!92466)))

(declare-fun c!26744 () Bool)

(assert (=> d!44887 (= c!26744 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44887 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44887 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74437)))

(declare-fun bm!15713 () Bool)

(assert (=> bm!15713 (= call!15716 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73116 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141894 () Bool)

(assert (=> b!141894 (= e!92468 call!15716)))

(declare-fun b!141895 () Bool)

(assert (=> b!141895 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141895 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!141895 (= e!92462 (= (apply!120 lt!74437 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141896 () Bool)

(assert (=> b!141896 (= e!92464 (isEmpty!424 lt!74437))))

(declare-fun b!141897 () Bool)

(assert (=> b!141897 (= e!92466 e!92468)))

(declare-fun c!26742 () Bool)

(assert (=> b!141897 (= c!26742 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141898 () Bool)

(assert (=> b!141898 (= e!92465 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141898 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141899 () Bool)

(assert (=> b!141899 (= e!92463 e!92464)))

(declare-fun c!26743 () Bool)

(assert (=> b!141899 (= c!26743 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141900 () Bool)

(assert (=> b!141900 (= e!92466 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44887 c!26744) b!141900))

(assert (= (and d!44887 (not c!26744)) b!141897))

(assert (= (and b!141897 c!26742) b!141892))

(assert (= (and b!141897 (not c!26742)) b!141894))

(assert (= (or b!141892 b!141894) bm!15713))

(assert (= (and d!44887 res!67706) b!141889))

(assert (= (and b!141889 res!67707) b!141890))

(assert (= (and b!141890 res!67708) b!141898))

(assert (= (and b!141890 c!26741) b!141893))

(assert (= (and b!141890 (not c!26741)) b!141899))

(assert (= (and b!141893 res!67709) b!141895))

(assert (= (and b!141899 c!26743) b!141891))

(assert (= (and b!141899 (not c!26743)) b!141896))

(declare-fun b_lambda!6383 () Bool)

(assert (=> (not b_lambda!6383) (not b!141892)))

(assert (=> b!141892 t!6309))

(declare-fun b_and!8893 () Bool)

(assert (= b_and!8889 (and (=> t!6309 result!4187) b_and!8893)))

(assert (=> b!141892 t!6311))

(declare-fun b_and!8895 () Bool)

(assert (= b_and!8891 (and (=> t!6311 result!4189) b_and!8895)))

(declare-fun b_lambda!6385 () Bool)

(assert (=> (not b_lambda!6385) (not b!141895)))

(assert (=> b!141895 t!6309))

(declare-fun b_and!8897 () Bool)

(assert (= b_and!8893 (and (=> t!6309 result!4187) b_and!8897)))

(assert (=> b!141895 t!6311))

(declare-fun b_and!8899 () Bool)

(assert (= b_and!8895 (and (=> t!6311 result!4189) b_and!8899)))

(assert (=> b!141892 m!166927))

(declare-fun m!170819 () Bool)

(assert (=> b!141892 m!170819))

(declare-fun m!170821 () Bool)

(assert (=> b!141892 m!170821))

(assert (=> b!141892 m!166963))

(assert (=> b!141892 m!170819))

(declare-fun m!170823 () Bool)

(assert (=> b!141892 m!170823))

(assert (=> b!141892 m!167015))

(assert (=> b!141892 m!167015))

(assert (=> b!141892 m!166963))

(assert (=> b!141892 m!167017))

(declare-fun m!170825 () Bool)

(assert (=> b!141892 m!170825))

(assert (=> b!141898 m!166927))

(assert (=> b!141898 m!166927))

(assert (=> b!141898 m!166957))

(assert (=> b!141891 m!166663))

(declare-fun m!170827 () Bool)

(assert (=> b!141891 m!170827))

(assert (=> b!141895 m!166927))

(assert (=> b!141895 m!166963))

(assert (=> b!141895 m!167015))

(assert (=> b!141895 m!167015))

(assert (=> b!141895 m!166963))

(assert (=> b!141895 m!167017))

(assert (=> b!141895 m!166927))

(declare-fun m!170829 () Bool)

(assert (=> b!141895 m!170829))

(declare-fun m!170831 () Bool)

(assert (=> b!141889 m!170831))

(declare-fun m!170833 () Bool)

(assert (=> d!44887 m!170833))

(assert (=> d!44887 m!166907))

(declare-fun m!170835 () Bool)

(assert (=> b!141896 m!170835))

(assert (=> b!141893 m!166927))

(assert (=> b!141893 m!166927))

(declare-fun m!170837 () Bool)

(assert (=> b!141893 m!170837))

(assert (=> b!141897 m!166927))

(assert (=> b!141897 m!166927))

(assert (=> b!141897 m!166957))

(assert (=> bm!15713 m!166663))

(assert (=> bm!15713 m!170827))

(assert (=> b!141016 d!44887))

(declare-fun d!44889 () Bool)

(declare-fun e!92469 () Bool)

(assert (=> d!44889 e!92469))

(declare-fun res!67710 () Bool)

(assert (=> d!44889 (=> (not res!67710) (not e!92469))))

(declare-fun lt!74444 () ListLongMap!1685)

(assert (=> d!44889 (= res!67710 (contains!904 lt!74444 (_1!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))))))

(declare-fun lt!74443 () List!1719)

(assert (=> d!44889 (= lt!74444 (ListLongMap!1686 lt!74443))))

(declare-fun lt!74442 () Unit!4387)

(declare-fun lt!74445 () Unit!4387)

(assert (=> d!44889 (= lt!74442 lt!74445)))

(assert (=> d!44889 (= (getValueByKey!177 lt!74443 (_1!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))))))

(assert (=> d!44889 (= lt!74445 (lemmaContainsTupThenGetReturnValue!91 lt!74443 (_1!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))))))

(assert (=> d!44889 (= lt!74443 (insertStrictlySorted!94 (toList!858 lt!73977) (_1!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))))))

(assert (=> d!44889 (= (+!173 lt!73977 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))) lt!74444)))

(declare-fun b!141901 () Bool)

(declare-fun res!67711 () Bool)

(assert (=> b!141901 (=> (not res!67711) (not e!92469))))

(assert (=> b!141901 (= res!67711 (= (getValueByKey!177 (toList!858 lt!74444) (_1!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73966 (minValue!2789 newMap!16))))))))

(declare-fun b!141902 () Bool)

(assert (=> b!141902 (= e!92469 (contains!907 (toList!858 lt!74444) (tuple2!2623 lt!73966 (minValue!2789 newMap!16))))))

(assert (= (and d!44889 res!67710) b!141901))

(assert (= (and b!141901 res!67711) b!141902))

(declare-fun m!170839 () Bool)

(assert (=> d!44889 m!170839))

(declare-fun m!170841 () Bool)

(assert (=> d!44889 m!170841))

(declare-fun m!170843 () Bool)

(assert (=> d!44889 m!170843))

(declare-fun m!170845 () Bool)

(assert (=> d!44889 m!170845))

(declare-fun m!170847 () Bool)

(assert (=> b!141901 m!170847))

(declare-fun m!170849 () Bool)

(assert (=> b!141902 m!170849))

(assert (=> b!141016 d!44889))

(declare-fun d!44891 () Bool)

(declare-fun e!92470 () Bool)

(assert (=> d!44891 e!92470))

(declare-fun res!67712 () Bool)

(assert (=> d!44891 (=> (not res!67712) (not e!92470))))

(declare-fun lt!74448 () ListLongMap!1685)

(assert (=> d!44891 (= res!67712 (contains!904 lt!74448 (_1!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))))))

(declare-fun lt!74447 () List!1719)

(assert (=> d!44891 (= lt!74448 (ListLongMap!1686 lt!74447))))

(declare-fun lt!74446 () Unit!4387)

(declare-fun lt!74449 () Unit!4387)

(assert (=> d!44891 (= lt!74446 lt!74449)))

(assert (=> d!44891 (= (getValueByKey!177 lt!74447 (_1!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))))))

(assert (=> d!44891 (= lt!74449 (lemmaContainsTupThenGetReturnValue!91 lt!74447 (_1!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))))))

(assert (=> d!44891 (= lt!74447 (insertStrictlySorted!94 (toList!858 lt!73980) (_1!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))))))

(assert (=> d!44891 (= (+!173 lt!73980 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))) lt!74448)))

(declare-fun b!141903 () Bool)

(declare-fun res!67713 () Bool)

(assert (=> b!141903 (=> (not res!67713) (not e!92470))))

(assert (=> b!141903 (= res!67713 (= (getValueByKey!177 (toList!858 lt!74448) (_1!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73976 (minValue!2789 newMap!16))))))))

(declare-fun b!141904 () Bool)

(assert (=> b!141904 (= e!92470 (contains!907 (toList!858 lt!74448) (tuple2!2623 lt!73976 (minValue!2789 newMap!16))))))

(assert (= (and d!44891 res!67712) b!141903))

(assert (= (and b!141903 res!67713) b!141904))

(declare-fun m!170851 () Bool)

(assert (=> d!44891 m!170851))

(declare-fun m!170853 () Bool)

(assert (=> d!44891 m!170853))

(declare-fun m!170855 () Bool)

(assert (=> d!44891 m!170855))

(declare-fun m!170857 () Bool)

(assert (=> d!44891 m!170857))

(declare-fun m!170859 () Bool)

(assert (=> b!141903 m!170859))

(declare-fun m!170861 () Bool)

(assert (=> b!141904 m!170861))

(assert (=> b!141016 d!44891))

(declare-fun d!44893 () Bool)

(declare-fun res!67714 () Bool)

(declare-fun e!92471 () Bool)

(assert (=> d!44893 (=> res!67714 e!92471)))

(assert (=> d!44893 (= res!67714 (and ((_ is Cons!1715) (toList!858 lt!73275)) (= (_1!1322 (h!2322 (toList!858 lt!73275))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!44893 (= (containsKey!180 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!92471)))

(declare-fun b!141905 () Bool)

(declare-fun e!92472 () Bool)

(assert (=> b!141905 (= e!92471 e!92472)))

(declare-fun res!67715 () Bool)

(assert (=> b!141905 (=> (not res!67715) (not e!92472))))

(assert (=> b!141905 (= res!67715 (and (or (not ((_ is Cons!1715) (toList!858 lt!73275))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73275))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) ((_ is Cons!1715) (toList!858 lt!73275)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73275))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!141906 () Bool)

(assert (=> b!141906 (= e!92472 (containsKey!180 (t!6295 (toList!858 lt!73275)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44893 (not res!67714)) b!141905))

(assert (= (and b!141905 res!67715) b!141906))

(declare-fun m!170863 () Bool)

(assert (=> b!141906 m!170863))

(assert (=> d!44057 d!44893))

(declare-fun lt!74450 () Bool)

(declare-fun d!44895 () Bool)

(assert (=> d!44895 (= lt!74450 (select (content!139 (toList!858 lt!74033)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92473 () Bool)

(assert (=> d!44895 (= lt!74450 e!92473)))

(declare-fun res!67716 () Bool)

(assert (=> d!44895 (=> (not res!67716) (not e!92473))))

(assert (=> d!44895 (= res!67716 ((_ is Cons!1715) (toList!858 lt!74033)))))

(assert (=> d!44895 (= (contains!907 (toList!858 lt!74033) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74450)))

(declare-fun b!141907 () Bool)

(declare-fun e!92474 () Bool)

(assert (=> b!141907 (= e!92473 e!92474)))

(declare-fun res!67717 () Bool)

(assert (=> b!141907 (=> res!67717 e!92474)))

(assert (=> b!141907 (= res!67717 (= (h!2322 (toList!858 lt!74033)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141908 () Bool)

(assert (=> b!141908 (= e!92474 (contains!907 (t!6295 (toList!858 lt!74033)) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44895 res!67716) b!141907))

(assert (= (and b!141907 (not res!67717)) b!141908))

(declare-fun m!170865 () Bool)

(assert (=> d!44895 m!170865))

(declare-fun m!170867 () Bool)

(assert (=> d!44895 m!170867))

(declare-fun m!170869 () Bool)

(assert (=> b!141908 m!170869))

(assert (=> b!141093 d!44895))

(declare-fun b!141909 () Bool)

(declare-fun res!67719 () Bool)

(declare-fun e!92480 () Bool)

(assert (=> b!141909 (=> (not res!67719) (not e!92480))))

(declare-fun lt!74453 () ListLongMap!1685)

(assert (=> b!141909 (= res!67719 (not (contains!904 lt!74453 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141910 () Bool)

(declare-fun e!92476 () Bool)

(assert (=> b!141910 (= e!92480 e!92476)))

(declare-fun c!26745 () Bool)

(declare-fun e!92478 () Bool)

(assert (=> b!141910 (= c!26745 e!92478)))

(declare-fun res!67720 () Bool)

(assert (=> b!141910 (=> (not res!67720) (not e!92478))))

(assert (=> b!141910 (= res!67720 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun e!92477 () Bool)

(declare-fun b!141911 () Bool)

(assert (=> b!141911 (= e!92477 (= lt!74453 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!141912 () Bool)

(declare-fun lt!74455 () Unit!4387)

(declare-fun lt!74451 () Unit!4387)

(assert (=> b!141912 (= lt!74455 lt!74451)))

(declare-fun lt!74454 () ListLongMap!1685)

(declare-fun lt!74452 () (_ BitVec 64))

(declare-fun lt!74456 () V!3553)

(declare-fun lt!74457 () (_ BitVec 64))

(assert (=> b!141912 (not (contains!904 (+!173 lt!74454 (tuple2!2623 lt!74452 lt!74456)) lt!74457))))

(assert (=> b!141912 (= lt!74451 (addStillNotContains!66 lt!74454 lt!74452 lt!74456 lt!74457))))

(assert (=> b!141912 (= lt!74457 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141912 (= lt!74456 (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141912 (= lt!74452 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15717 () ListLongMap!1685)

(assert (=> b!141912 (= lt!74454 call!15717)))

(declare-fun e!92481 () ListLongMap!1685)

(assert (=> b!141912 (= e!92481 (+!173 call!15717 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141913 () Bool)

(declare-fun e!92475 () Bool)

(assert (=> b!141913 (= e!92476 e!92475)))

(assert (=> b!141913 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67721 () Bool)

(assert (=> b!141913 (= res!67721 (contains!904 lt!74453 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141913 (=> (not res!67721) (not e!92475))))

(declare-fun d!44897 () Bool)

(assert (=> d!44897 e!92480))

(declare-fun res!67718 () Bool)

(assert (=> d!44897 (=> (not res!67718) (not e!92480))))

(assert (=> d!44897 (= res!67718 (not (contains!904 lt!74453 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92479 () ListLongMap!1685)

(assert (=> d!44897 (= lt!74453 e!92479)))

(declare-fun c!26748 () Bool)

(assert (=> d!44897 (= c!26748 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!44897 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!44897 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)) lt!74453)))

(declare-fun bm!15714 () Bool)

(assert (=> bm!15714 (= call!15717 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))) (mask!7279 newMap!16) (ite c!26142 (ite c!26144 (extraKeys!2694 newMap!16) lt!73129) (extraKeys!2694 newMap!16)) (zeroValue!2789 newMap!16) (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141914 () Bool)

(assert (=> b!141914 (= e!92481 call!15717)))

(declare-fun b!141915 () Bool)

(assert (=> b!141915 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!141915 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2579 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16)))))))))

(assert (=> b!141915 (= e!92475 (= (apply!120 lt!74453 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141916 () Bool)

(assert (=> b!141916 (= e!92477 (isEmpty!424 lt!74453))))

(declare-fun b!141917 () Bool)

(assert (=> b!141917 (= e!92479 e!92481)))

(declare-fun c!26746 () Bool)

(assert (=> b!141917 (= c!26746 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141918 () Bool)

(assert (=> b!141918 (= e!92478 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141918 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141919 () Bool)

(assert (=> b!141919 (= e!92476 e!92477)))

(declare-fun c!26747 () Bool)

(assert (=> b!141919 (= c!26747 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!141920 () Bool)

(assert (=> b!141920 (= e!92479 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!44897 c!26748) b!141920))

(assert (= (and d!44897 (not c!26748)) b!141917))

(assert (= (and b!141917 c!26746) b!141912))

(assert (= (and b!141917 (not c!26746)) b!141914))

(assert (= (or b!141912 b!141914) bm!15714))

(assert (= (and d!44897 res!67718) b!141909))

(assert (= (and b!141909 res!67719) b!141910))

(assert (= (and b!141910 res!67720) b!141918))

(assert (= (and b!141910 c!26745) b!141913))

(assert (= (and b!141910 (not c!26745)) b!141919))

(assert (= (and b!141913 res!67721) b!141915))

(assert (= (and b!141919 c!26747) b!141911))

(assert (= (and b!141919 (not c!26747)) b!141916))

(declare-fun b_lambda!6387 () Bool)

(assert (=> (not b_lambda!6387) (not b!141912)))

(assert (=> b!141912 t!6309))

(declare-fun b_and!8901 () Bool)

(assert (= b_and!8897 (and (=> t!6309 result!4187) b_and!8901)))

(assert (=> b!141912 t!6311))

(declare-fun b_and!8903 () Bool)

(assert (= b_and!8899 (and (=> t!6311 result!4189) b_and!8903)))

(declare-fun b_lambda!6389 () Bool)

(assert (=> (not b_lambda!6389) (not b!141915)))

(assert (=> b!141915 t!6309))

(declare-fun b_and!8905 () Bool)

(assert (= b_and!8901 (and (=> t!6309 result!4187) b_and!8905)))

(assert (=> b!141915 t!6311))

(declare-fun b_and!8907 () Bool)

(assert (= b_and!8903 (and (=> t!6311 result!4189) b_and!8907)))

(assert (=> b!141912 m!168135))

(declare-fun m!170871 () Bool)

(assert (=> b!141912 m!170871))

(declare-fun m!170873 () Bool)

(assert (=> b!141912 m!170873))

(assert (=> b!141912 m!166963))

(assert (=> b!141912 m!170871))

(declare-fun m!170875 () Bool)

(assert (=> b!141912 m!170875))

(declare-fun m!170877 () Bool)

(assert (=> b!141912 m!170877))

(assert (=> b!141912 m!170877))

(assert (=> b!141912 m!166963))

(declare-fun m!170879 () Bool)

(assert (=> b!141912 m!170879))

(declare-fun m!170881 () Bool)

(assert (=> b!141912 m!170881))

(assert (=> b!141918 m!168135))

(assert (=> b!141918 m!168135))

(assert (=> b!141918 m!168139))

(declare-fun m!170883 () Bool)

(assert (=> b!141911 m!170883))

(assert (=> b!141915 m!168135))

(assert (=> b!141915 m!166963))

(assert (=> b!141915 m!170877))

(assert (=> b!141915 m!170877))

(assert (=> b!141915 m!166963))

(assert (=> b!141915 m!170879))

(assert (=> b!141915 m!168135))

(declare-fun m!170885 () Bool)

(assert (=> b!141915 m!170885))

(declare-fun m!170887 () Bool)

(assert (=> b!141909 m!170887))

(declare-fun m!170889 () Bool)

(assert (=> d!44897 m!170889))

(assert (=> d!44897 m!166907))

(declare-fun m!170891 () Bool)

(assert (=> b!141916 m!170891))

(assert (=> b!141913 m!168135))

(assert (=> b!141913 m!168135))

(declare-fun m!170893 () Bool)

(assert (=> b!141913 m!170893))

(assert (=> b!141917 m!168135))

(assert (=> b!141917 m!168135))

(assert (=> b!141917 m!168139))

(assert (=> bm!15714 m!170883))

(assert (=> bm!15558 d!44897))

(declare-fun d!44899 () Bool)

(declare-fun c!26749 () Bool)

(assert (=> d!44899 (= c!26749 ((_ is Nil!1716) (toList!858 lt!73290)))))

(declare-fun e!92482 () (InoxSet tuple2!2622))

(assert (=> d!44899 (= (content!139 (toList!858 lt!73290)) e!92482)))

(declare-fun b!141921 () Bool)

(assert (=> b!141921 (= e!92482 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!141922 () Bool)

(assert (=> b!141922 (= e!92482 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73290)) true) (content!139 (t!6295 (toList!858 lt!73290)))))))

(assert (= (and d!44899 c!26749) b!141921))

(assert (= (and d!44899 (not c!26749)) b!141922))

(declare-fun m!170895 () Bool)

(assert (=> b!141922 m!170895))

(assert (=> b!141922 m!169571))

(assert (=> d!43959 d!44899))

(assert (=> bm!15582 d!44441))

(declare-fun d!44901 () Bool)

(declare-fun res!67722 () Bool)

(declare-fun e!92483 () Bool)

(assert (=> d!44901 (=> res!67722 e!92483)))

(assert (=> d!44901 (= res!67722 (and ((_ is Cons!1715) (toList!858 (map!1429 (_2!1323 lt!73410)))) (= (_1!1322 (h!2322 (toList!858 (map!1429 (_2!1323 lt!73410))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!44901 (= (containsKey!180 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92483)))

(declare-fun b!141923 () Bool)

(declare-fun e!92484 () Bool)

(assert (=> b!141923 (= e!92483 e!92484)))

(declare-fun res!67723 () Bool)

(assert (=> b!141923 (=> (not res!67723) (not e!92484))))

(assert (=> b!141923 (= res!67723 (and (or (not ((_ is Cons!1715) (toList!858 (map!1429 (_2!1323 lt!73410))))) (bvsle (_1!1322 (h!2322 (toList!858 (map!1429 (_2!1323 lt!73410))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 (map!1429 (_2!1323 lt!73410)))) (bvslt (_1!1322 (h!2322 (toList!858 (map!1429 (_2!1323 lt!73410))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!141924 () Bool)

(assert (=> b!141924 (= e!92484 (containsKey!180 (t!6295 (toList!858 (map!1429 (_2!1323 lt!73410)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!44901 (not res!67722)) b!141923))

(assert (= (and b!141923 res!67723) b!141924))

(assert (=> b!141924 m!166633))

(declare-fun m!170897 () Bool)

(assert (=> b!141924 m!170897))

(assert (=> d!43789 d!44901))

(declare-fun lt!74458 () Bool)

(declare-fun d!44903 () Bool)

(assert (=> d!44903 (= lt!74458 (select (content!139 lt!73758) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92485 () Bool)

(assert (=> d!44903 (= lt!74458 e!92485)))

(declare-fun res!67724 () Bool)

(assert (=> d!44903 (=> (not res!67724) (not e!92485))))

(assert (=> d!44903 (= res!67724 ((_ is Cons!1715) lt!73758))))

(assert (=> d!44903 (= (contains!907 lt!73758 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74458)))

(declare-fun b!141925 () Bool)

(declare-fun e!92486 () Bool)

(assert (=> b!141925 (= e!92485 e!92486)))

(declare-fun res!67725 () Bool)

(assert (=> b!141925 (=> res!67725 e!92486)))

(assert (=> b!141925 (= res!67725 (= (h!2322 lt!73758) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141926 () Bool)

(assert (=> b!141926 (= e!92486 (contains!907 (t!6295 lt!73758) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!44903 res!67724) b!141925))

(assert (= (and b!141925 (not res!67725)) b!141926))

(declare-fun m!170899 () Bool)

(assert (=> d!44903 m!170899))

(declare-fun m!170901 () Bool)

(assert (=> d!44903 m!170901))

(declare-fun m!170903 () Bool)

(assert (=> b!141926 m!170903))

(assert (=> b!140658 d!44903))

(declare-fun d!44905 () Bool)

(declare-fun res!67726 () Bool)

(declare-fun e!92487 () Bool)

(assert (=> d!44905 (=> res!67726 e!92487)))

(assert (=> d!44905 (= res!67726 (and ((_ is Cons!1715) lt!73764) (= (_1!1322 (h!2322 lt!73764)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44905 (= (containsKey!180 lt!73764 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92487)))

(declare-fun b!141927 () Bool)

(declare-fun e!92488 () Bool)

(assert (=> b!141927 (= e!92487 e!92488)))

(declare-fun res!67727 () Bool)

(assert (=> b!141927 (=> (not res!67727) (not e!92488))))

(assert (=> b!141927 (= res!67727 (and (or (not ((_ is Cons!1715) lt!73764)) (bvsle (_1!1322 (h!2322 lt!73764)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73764) (bvslt (_1!1322 (h!2322 lt!73764)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!141928 () Bool)

(assert (=> b!141928 (= e!92488 (containsKey!180 (t!6295 lt!73764) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44905 (not res!67726)) b!141927))

(assert (= (and b!141927 res!67727) b!141928))

(declare-fun m!170905 () Bool)

(assert (=> b!141928 m!170905))

(assert (=> b!140673 d!44905))

(declare-fun lt!74459 () Bool)

(declare-fun d!44907 () Bool)

(assert (=> d!44907 (= lt!74459 (select (content!139 (t!6295 (toList!858 lt!73465))) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!92489 () Bool)

(assert (=> d!44907 (= lt!74459 e!92489)))

(declare-fun res!67728 () Bool)

(assert (=> d!44907 (=> (not res!67728) (not e!92489))))

(assert (=> d!44907 (= res!67728 ((_ is Cons!1715) (t!6295 (toList!858 lt!73465))))))

(assert (=> d!44907 (= (contains!907 (t!6295 (toList!858 lt!73465)) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!74459)))

(declare-fun b!141929 () Bool)

(declare-fun e!92490 () Bool)

(assert (=> b!141929 (= e!92489 e!92490)))

(declare-fun res!67729 () Bool)

(assert (=> b!141929 (=> res!67729 e!92490)))

(assert (=> b!141929 (= res!67729 (= (h!2322 (t!6295 (toList!858 lt!73465))) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!141930 () Bool)

(assert (=> b!141930 (= e!92490 (contains!907 (t!6295 (t!6295 (toList!858 lt!73465))) (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!44907 res!67728) b!141929))

(assert (= (and b!141929 (not res!67729)) b!141930))

(declare-fun m!170907 () Bool)

(assert (=> d!44907 m!170907))

(declare-fun m!170909 () Bool)

(assert (=> d!44907 m!170909))

(declare-fun m!170911 () Bool)

(assert (=> b!141930 m!170911))

(assert (=> b!140296 d!44907))

(declare-fun d!44909 () Bool)

(declare-fun res!67730 () Bool)

(declare-fun e!92491 () Bool)

(assert (=> d!44909 (=> res!67730 e!92491)))

(assert (=> d!44909 (= res!67730 (or ((_ is Nil!1716) lt!73931) ((_ is Nil!1716) (t!6295 lt!73931))))))

(assert (=> d!44909 (= (isStrictlySorted!312 lt!73931) e!92491)))

(declare-fun b!141931 () Bool)

(declare-fun e!92492 () Bool)

(assert (=> b!141931 (= e!92491 e!92492)))

(declare-fun res!67731 () Bool)

(assert (=> b!141931 (=> (not res!67731) (not e!92492))))

(assert (=> b!141931 (= res!67731 (bvslt (_1!1322 (h!2322 lt!73931)) (_1!1322 (h!2322 (t!6295 lt!73931)))))))

(declare-fun b!141932 () Bool)

(assert (=> b!141932 (= e!92492 (isStrictlySorted!312 (t!6295 lt!73931)))))

(assert (= (and d!44909 (not res!67730)) b!141931))

(assert (= (and b!141931 res!67731) b!141932))

(declare-fun m!170913 () Bool)

(assert (=> b!141932 m!170913))

(assert (=> d!44063 d!44909))

(declare-fun d!44911 () Bool)

(declare-fun res!67732 () Bool)

(declare-fun e!92493 () Bool)

(assert (=> d!44911 (=> res!67732 e!92493)))

(assert (=> d!44911 (= res!67732 (or ((_ is Nil!1716) (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) ((_ is Nil!1716) (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))))))))

(assert (=> d!44911 (= (isStrictlySorted!312 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) e!92493)))

(declare-fun b!141933 () Bool)

(declare-fun e!92494 () Bool)

(assert (=> b!141933 (= e!92493 e!92494)))

(declare-fun res!67733 () Bool)

(assert (=> b!141933 (=> (not res!67733) (not e!92494))))

(assert (=> b!141933 (= res!67733 (bvslt (_1!1322 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (_1!1322 (h!2322 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))))))))

(declare-fun b!141934 () Bool)

(assert (=> b!141934 (= e!92494 (isStrictlySorted!312 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))))))

(assert (= (and d!44911 (not res!67732)) b!141933))

(assert (= (and b!141933 res!67733) b!141934))

(declare-fun m!170915 () Bool)

(assert (=> b!141934 m!170915))

(assert (=> d!44063 d!44911))

(assert (=> b!140800 d!44319))

(assert (=> bm!15555 d!44483))

(declare-fun d!44913 () Bool)

(assert (=> d!44913 (= (get!1535 (getValueByKey!177 (toList!858 lt!73218) lt!73216)) (v!3285 (getValueByKey!177 (toList!858 lt!73218) lt!73216)))))

(assert (=> d!43727 d!44913))

(declare-fun b!141936 () Bool)

(declare-fun e!92495 () Option!183)

(declare-fun e!92496 () Option!183)

(assert (=> b!141936 (= e!92495 e!92496)))

(declare-fun c!26751 () Bool)

(assert (=> b!141936 (= c!26751 (and ((_ is Cons!1715) (toList!858 lt!73218)) (not (= (_1!1322 (h!2322 (toList!858 lt!73218))) lt!73216))))))

(declare-fun b!141937 () Bool)

(assert (=> b!141937 (= e!92496 (getValueByKey!177 (t!6295 (toList!858 lt!73218)) lt!73216))))

(declare-fun b!141935 () Bool)

(assert (=> b!141935 (= e!92495 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73218)))))))

(declare-fun b!141938 () Bool)

(assert (=> b!141938 (= e!92496 None!181)))

(declare-fun d!44915 () Bool)

(declare-fun c!26750 () Bool)

(assert (=> d!44915 (= c!26750 (and ((_ is Cons!1715) (toList!858 lt!73218)) (= (_1!1322 (h!2322 (toList!858 lt!73218))) lt!73216)))))

(assert (=> d!44915 (= (getValueByKey!177 (toList!858 lt!73218) lt!73216) e!92495)))

(assert (= (and d!44915 c!26750) b!141935))

(assert (= (and d!44915 (not c!26750)) b!141936))

(assert (= (and b!141936 c!26751) b!141937))

(assert (= (and b!141936 (not c!26751)) b!141938))

(declare-fun m!170917 () Bool)

(assert (=> b!141937 m!170917))

(assert (=> d!43727 d!44915))

(declare-fun d!44917 () Bool)

(declare-fun res!67734 () Bool)

(declare-fun e!92497 () Bool)

(assert (=> d!44917 (=> res!67734 e!92497)))

(assert (=> d!44917 (= res!67734 (or ((_ is Nil!1716) lt!73821) ((_ is Nil!1716) (t!6295 lt!73821))))))

(assert (=> d!44917 (= (isStrictlySorted!312 lt!73821) e!92497)))

(declare-fun b!141939 () Bool)

(declare-fun e!92498 () Bool)

(assert (=> b!141939 (= e!92497 e!92498)))

(declare-fun res!67735 () Bool)

(assert (=> b!141939 (=> (not res!67735) (not e!92498))))

(assert (=> b!141939 (= res!67735 (bvslt (_1!1322 (h!2322 lt!73821)) (_1!1322 (h!2322 (t!6295 lt!73821)))))))

(declare-fun b!141940 () Bool)

(assert (=> b!141940 (= e!92498 (isStrictlySorted!312 (t!6295 lt!73821)))))

(assert (= (and d!44917 (not res!67734)) b!141939))

(assert (= (and b!141939 res!67735) b!141940))

(declare-fun m!170919 () Bool)

(assert (=> b!141940 m!170919))

(assert (=> d!43947 d!44917))

(declare-fun d!44919 () Bool)

(declare-fun res!67736 () Bool)

(declare-fun e!92499 () Bool)

(assert (=> d!44919 (=> res!67736 e!92499)))

(assert (=> d!44919 (= res!67736 (or ((_ is Nil!1716) (toList!858 lt!73203)) ((_ is Nil!1716) (t!6295 (toList!858 lt!73203)))))))

(assert (=> d!44919 (= (isStrictlySorted!312 (toList!858 lt!73203)) e!92499)))

(declare-fun b!141941 () Bool)

(declare-fun e!92500 () Bool)

(assert (=> b!141941 (= e!92499 e!92500)))

(declare-fun res!67737 () Bool)

(assert (=> b!141941 (=> (not res!67737) (not e!92500))))

(assert (=> b!141941 (= res!67737 (bvslt (_1!1322 (h!2322 (toList!858 lt!73203))) (_1!1322 (h!2322 (t!6295 (toList!858 lt!73203))))))))

(declare-fun b!141942 () Bool)

(assert (=> b!141942 (= e!92500 (isStrictlySorted!312 (t!6295 (toList!858 lt!73203))))))

(assert (= (and d!44919 (not res!67736)) b!141941))

(assert (= (and b!141941 res!67737) b!141942))

(declare-fun m!170921 () Bool)

(assert (=> b!141942 m!170921))

(assert (=> d!43947 d!44919))

(declare-fun d!44921 () Bool)

(declare-fun lt!74460 () Bool)

(assert (=> d!44921 (= lt!74460 (select (content!139 (t!6295 (toList!858 lt!73275))) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!92501 () Bool)

(assert (=> d!44921 (= lt!74460 e!92501)))

(declare-fun res!67738 () Bool)

(assert (=> d!44921 (=> (not res!67738) (not e!92501))))

(assert (=> d!44921 (= res!67738 ((_ is Cons!1715) (t!6295 (toList!858 lt!73275))))))

(assert (=> d!44921 (= (contains!907 (t!6295 (toList!858 lt!73275)) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74460)))

(declare-fun b!141943 () Bool)

(declare-fun e!92502 () Bool)

(assert (=> b!141943 (= e!92501 e!92502)))

(declare-fun res!67739 () Bool)

(assert (=> b!141943 (=> res!67739 e!92502)))

(assert (=> b!141943 (= res!67739 (= (h!2322 (t!6295 (toList!858 lt!73275))) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!141944 () Bool)

(assert (=> b!141944 (= e!92502 (contains!907 (t!6295 (t!6295 (toList!858 lt!73275))) (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44921 res!67738) b!141943))

(assert (= (and b!141943 (not res!67739)) b!141944))

(declare-fun m!170923 () Bool)

(assert (=> d!44921 m!170923))

(declare-fun m!170925 () Bool)

(assert (=> d!44921 m!170925))

(declare-fun m!170927 () Bool)

(assert (=> b!141944 m!170927))

(assert (=> b!141091 d!44921))

(declare-fun d!44923 () Bool)

(declare-fun e!92503 () Bool)

(assert (=> d!44923 e!92503))

(declare-fun res!67740 () Bool)

(assert (=> d!44923 (=> res!67740 e!92503)))

(declare-fun lt!74464 () Bool)

(assert (=> d!44923 (= res!67740 (not lt!74464))))

(declare-fun lt!74461 () Bool)

(assert (=> d!44923 (= lt!74464 lt!74461)))

(declare-fun lt!74463 () Unit!4387)

(declare-fun e!92504 () Unit!4387)

(assert (=> d!44923 (= lt!74463 e!92504)))

(declare-fun c!26752 () Bool)

(assert (=> d!44923 (= c!26752 lt!74461)))

(assert (=> d!44923 (= lt!74461 (containsKey!180 (toList!858 lt!73691) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!44923 (= (contains!904 lt!73691 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)) lt!74464)))

(declare-fun b!141945 () Bool)

(declare-fun lt!74462 () Unit!4387)

(assert (=> b!141945 (= e!92504 lt!74462)))

(assert (=> b!141945 (= lt!74462 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73691) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141945 (isDefined!129 (getValueByKey!177 (toList!858 lt!73691) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141946 () Bool)

(declare-fun Unit!4480 () Unit!4387)

(assert (=> b!141946 (= e!92504 Unit!4480)))

(declare-fun b!141947 () Bool)

(assert (=> b!141947 (= e!92503 (isDefined!129 (getValueByKey!177 (toList!858 lt!73691) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!44923 c!26752) b!141945))

(assert (= (and d!44923 (not c!26752)) b!141946))

(assert (= (and d!44923 (not res!67740)) b!141947))

(assert (=> d!44923 m!167977))

(declare-fun m!170929 () Bool)

(assert (=> d!44923 m!170929))

(assert (=> b!141945 m!167977))

(declare-fun m!170931 () Bool)

(assert (=> b!141945 m!170931))

(assert (=> b!141945 m!167977))

(assert (=> b!141945 m!170011))

(assert (=> b!141945 m!170011))

(declare-fun m!170933 () Bool)

(assert (=> b!141945 m!170933))

(assert (=> b!141947 m!167977))

(assert (=> b!141947 m!170011))

(assert (=> b!141947 m!170011))

(assert (=> b!141947 m!170933))

(assert (=> b!140553 d!44923))

(assert (=> d!44159 d!43775))

(assert (=> d!44159 d!43777))

(assert (=> b!141085 d!44487))

(declare-fun d!44925 () Bool)

(assert (=> d!44925 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun lt!74465 () Unit!4387)

(assert (=> d!44925 (= lt!74465 (choose!864 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun e!92505 () Bool)

(assert (=> d!44925 e!92505))

(declare-fun res!67741 () Bool)

(assert (=> d!44925 (=> (not res!67741) (not e!92505))))

(assert (=> d!44925 (= res!67741 (isStrictlySorted!312 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))

(assert (=> d!44925 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) lt!74465)))

(declare-fun b!141948 () Bool)

(assert (=> b!141948 (= e!92505 (containsKey!180 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (= (and d!44925 res!67741) b!141948))

(assert (=> d!44925 m!167185))

(assert (=> d!44925 m!168123))

(assert (=> d!44925 m!168123))

(assert (=> d!44925 m!168125))

(assert (=> d!44925 m!167185))

(declare-fun m!170935 () Bool)

(assert (=> d!44925 m!170935))

(declare-fun m!170937 () Bool)

(assert (=> d!44925 m!170937))

(assert (=> b!141948 m!167185))

(assert (=> b!141948 m!168119))

(assert (=> b!140602 d!44925))

(declare-fun d!44927 () Bool)

(assert (=> d!44927 (= (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))))

(declare-fun bs!5993 () Bool)

(assert (= bs!5993 d!44927))

(assert (=> bs!5993 m!168123))

(declare-fun m!170939 () Bool)

(assert (=> bs!5993 m!170939))

(assert (=> b!140602 d!44927))

(declare-fun b!141950 () Bool)

(declare-fun e!92506 () Option!183)

(declare-fun e!92507 () Option!183)

(assert (=> b!141950 (= e!92506 e!92507)))

(declare-fun c!26754 () Bool)

(assert (=> b!141950 (= c!26754 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (not (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))))

(declare-fun b!141951 () Bool)

(assert (=> b!141951 (= e!92507 (getValueByKey!177 (t!6295 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun b!141949 () Bool)

(assert (=> b!141949 (= e!92506 (Some!182 (_2!1322 (h!2322 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))))

(declare-fun b!141952 () Bool)

(assert (=> b!141952 (= e!92507 None!181)))

(declare-fun c!26753 () Bool)

(declare-fun d!44929 () Bool)

(assert (=> d!44929 (= c!26753 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))))

(assert (=> d!44929 (= (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) e!92506)))

(assert (= (and d!44929 c!26753) b!141949))

(assert (= (and d!44929 (not c!26753)) b!141950))

(assert (= (and b!141950 c!26754) b!141951))

(assert (= (and b!141950 (not c!26754)) b!141952))

(assert (=> b!141951 m!167185))

(declare-fun m!170941 () Bool)

(assert (=> b!141951 m!170941))

(assert (=> b!140602 d!44929))

(assert (=> d!43849 d!43867))

(declare-fun d!44931 () Bool)

(assert (=> d!44931 (= (arrayCountValidKeys!0 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (bvadd (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!44931 true))

(declare-fun _$85!15 () Unit!4387)

(assert (=> d!44931 (= (choose!2 lt!73415 (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))) _$85!15)))

(declare-fun bs!5994 () Bool)

(assert (= bs!5994 d!44931))

(assert (=> bs!5994 m!167197))

(assert (=> d!43849 d!44931))

(declare-fun d!44933 () Bool)

(assert (=> d!44933 (= (get!1534 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141055 d!44933))

(assert (=> b!140544 d!43845))

(assert (=> d!43945 d!43943))

(declare-fun d!44935 () Bool)

(assert (=> d!44935 (= (getValueByKey!177 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!44935 true))

(declare-fun _$22!494 () Unit!4387)

(assert (=> d!44935 (= (choose!873 lt!73469 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) _$22!494)))

(declare-fun bs!5995 () Bool)

(assert (= bs!5995 d!44935))

(assert (=> bs!5995 m!167377))

(assert (=> d!43945 d!44935))

(declare-fun d!44937 () Bool)

(declare-fun res!67742 () Bool)

(declare-fun e!92508 () Bool)

(assert (=> d!44937 (=> res!67742 e!92508)))

(assert (=> d!44937 (= res!67742 (or ((_ is Nil!1716) lt!73469) ((_ is Nil!1716) (t!6295 lt!73469))))))

(assert (=> d!44937 (= (isStrictlySorted!312 lt!73469) e!92508)))

(declare-fun b!141953 () Bool)

(declare-fun e!92509 () Bool)

(assert (=> b!141953 (= e!92508 e!92509)))

(declare-fun res!67743 () Bool)

(assert (=> b!141953 (=> (not res!67743) (not e!92509))))

(assert (=> b!141953 (= res!67743 (bvslt (_1!1322 (h!2322 lt!73469)) (_1!1322 (h!2322 (t!6295 lt!73469)))))))

(declare-fun b!141954 () Bool)

(assert (=> b!141954 (= e!92509 (isStrictlySorted!312 (t!6295 lt!73469)))))

(assert (= (and d!44937 (not res!67742)) b!141953))

(assert (= (and b!141953 res!67743) b!141954))

(declare-fun m!170943 () Bool)

(assert (=> b!141954 m!170943))

(assert (=> d!43945 d!44937))

(declare-fun d!44939 () Bool)

(declare-fun e!92510 () Bool)

(assert (=> d!44939 e!92510))

(declare-fun res!67744 () Bool)

(assert (=> d!44939 (=> res!67744 e!92510)))

(declare-fun lt!74469 () Bool)

(assert (=> d!44939 (= res!67744 (not lt!74469))))

(declare-fun lt!74466 () Bool)

(assert (=> d!44939 (= lt!74469 lt!74466)))

(declare-fun lt!74468 () Unit!4387)

(declare-fun e!92511 () Unit!4387)

(assert (=> d!44939 (= lt!74468 e!92511)))

(declare-fun c!26755 () Bool)

(assert (=> d!44939 (= c!26755 lt!74466)))

(assert (=> d!44939 (= lt!74466 (containsKey!180 (toList!858 lt!73573) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44939 (= (contains!904 lt!73573 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!74469)))

(declare-fun b!141955 () Bool)

(declare-fun lt!74467 () Unit!4387)

(assert (=> b!141955 (= e!92511 lt!74467)))

(assert (=> b!141955 (= lt!74467 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73573) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(assert (=> b!141955 (isDefined!129 (getValueByKey!177 (toList!858 lt!73573) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141956 () Bool)

(declare-fun Unit!4481 () Unit!4387)

(assert (=> b!141956 (= e!92511 Unit!4481)))

(declare-fun b!141957 () Bool)

(assert (=> b!141957 (= e!92510 (isDefined!129 (getValueByKey!177 (toList!858 lt!73573) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44939 c!26755) b!141955))

(assert (= (and d!44939 (not c!26755)) b!141956))

(assert (= (and d!44939 (not res!67744)) b!141957))

(declare-fun m!170945 () Bool)

(assert (=> d!44939 m!170945))

(declare-fun m!170947 () Bool)

(assert (=> b!141955 m!170947))

(assert (=> b!141955 m!167677))

(assert (=> b!141955 m!167677))

(declare-fun m!170949 () Bool)

(assert (=> b!141955 m!170949))

(assert (=> b!141957 m!167677))

(assert (=> b!141957 m!167677))

(assert (=> b!141957 m!170949))

(assert (=> d!43751 d!44939))

(declare-fun b!141959 () Bool)

(declare-fun e!92512 () Option!183)

(declare-fun e!92513 () Option!183)

(assert (=> b!141959 (= e!92512 e!92513)))

(declare-fun c!26757 () Bool)

(assert (=> b!141959 (= c!26757 (and ((_ is Cons!1715) lt!73572) (not (= (_1!1322 (h!2322 lt!73572)) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141960 () Bool)

(assert (=> b!141960 (= e!92513 (getValueByKey!177 (t!6295 lt!73572) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141958 () Bool)

(assert (=> b!141958 (= e!92512 (Some!182 (_2!1322 (h!2322 lt!73572))))))

(declare-fun b!141961 () Bool)

(assert (=> b!141961 (= e!92513 None!181)))

(declare-fun c!26756 () Bool)

(declare-fun d!44941 () Bool)

(assert (=> d!44941 (= c!26756 (and ((_ is Cons!1715) lt!73572) (= (_1!1322 (h!2322 lt!73572)) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44941 (= (getValueByKey!177 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) e!92512)))

(assert (= (and d!44941 c!26756) b!141958))

(assert (= (and d!44941 (not c!26756)) b!141959))

(assert (= (and b!141959 c!26757) b!141960))

(assert (= (and b!141959 (not c!26757)) b!141961))

(declare-fun m!170951 () Bool)

(assert (=> b!141960 m!170951))

(assert (=> d!43751 d!44941))

(declare-fun d!44943 () Bool)

(assert (=> d!44943 (= (getValueByKey!177 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74470 () Unit!4387)

(assert (=> d!44943 (= lt!74470 (choose!873 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92514 () Bool)

(assert (=> d!44943 e!92514))

(declare-fun res!67745 () Bool)

(assert (=> d!44943 (=> (not res!67745) (not e!92514))))

(assert (=> d!44943 (= res!67745 (isStrictlySorted!312 lt!73572))))

(assert (=> d!44943 (= (lemmaContainsTupThenGetReturnValue!91 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!74470)))

(declare-fun b!141962 () Bool)

(declare-fun res!67746 () Bool)

(assert (=> b!141962 (=> (not res!67746) (not e!92514))))

(assert (=> b!141962 (= res!67746 (containsKey!180 lt!73572 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141963 () Bool)

(assert (=> b!141963 (= e!92514 (contains!907 lt!73572 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44943 res!67745) b!141962))

(assert (= (and b!141962 res!67746) b!141963))

(assert (=> d!44943 m!167671))

(declare-fun m!170953 () Bool)

(assert (=> d!44943 m!170953))

(declare-fun m!170955 () Bool)

(assert (=> d!44943 m!170955))

(declare-fun m!170957 () Bool)

(assert (=> b!141962 m!170957))

(declare-fun m!170959 () Bool)

(assert (=> b!141963 m!170959))

(assert (=> d!43751 d!44943))

(declare-fun bm!15715 () Bool)

(declare-fun call!15720 () List!1719)

(declare-fun call!15719 () List!1719)

(assert (=> bm!15715 (= call!15720 call!15719)))

(declare-fun b!141965 () Bool)

(declare-fun e!92516 () List!1719)

(declare-fun e!92518 () List!1719)

(assert (=> b!141965 (= e!92516 e!92518)))

(declare-fun c!26761 () Bool)

(assert (=> b!141965 (= c!26761 (and ((_ is Cons!1715) (toList!858 lt!73219)) (= (_1!1322 (h!2322 (toList!858 lt!73219))) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141966 () Bool)

(declare-fun res!67748 () Bool)

(declare-fun e!92515 () Bool)

(assert (=> b!141966 (=> (not res!67748) (not e!92515))))

(declare-fun lt!74471 () List!1719)

(assert (=> b!141966 (= res!67748 (containsKey!180 lt!74471 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun c!26759 () Bool)

(declare-fun b!141967 () Bool)

(assert (=> b!141967 (= c!26759 (and ((_ is Cons!1715) (toList!858 lt!73219)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73219))) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92517 () List!1719)

(assert (=> b!141967 (= e!92518 e!92517)))

(declare-fun bm!15716 () Bool)

(declare-fun call!15718 () List!1719)

(assert (=> bm!15716 (= call!15719 call!15718)))

(declare-fun b!141968 () Bool)

(assert (=> b!141968 (= e!92518 call!15719)))

(declare-fun b!141969 () Bool)

(assert (=> b!141969 (= e!92516 call!15718)))

(declare-fun b!141970 () Bool)

(assert (=> b!141970 (= e!92515 (contains!907 lt!74471 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92519 () List!1719)

(declare-fun b!141964 () Bool)

(assert (=> b!141964 (= e!92519 (ite c!26761 (t!6295 (toList!858 lt!73219)) (ite c!26759 (Cons!1715 (h!2322 (toList!858 lt!73219)) (t!6295 (toList!858 lt!73219))) Nil!1716)))))

(declare-fun d!44945 () Bool)

(assert (=> d!44945 e!92515))

(declare-fun res!67747 () Bool)

(assert (=> d!44945 (=> (not res!67747) (not e!92515))))

(assert (=> d!44945 (= res!67747 (isStrictlySorted!312 lt!74471))))

(assert (=> d!44945 (= lt!74471 e!92516)))

(declare-fun c!26760 () Bool)

(assert (=> d!44945 (= c!26760 (and ((_ is Cons!1715) (toList!858 lt!73219)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73219))) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44945 (isStrictlySorted!312 (toList!858 lt!73219))))

(assert (=> d!44945 (= (insertStrictlySorted!94 (toList!858 lt!73219) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!74471)))

(declare-fun b!141971 () Bool)

(assert (=> b!141971 (= e!92517 call!15720)))

(declare-fun b!141972 () Bool)

(assert (=> b!141972 (= e!92517 call!15720)))

(declare-fun bm!15717 () Bool)

(assert (=> bm!15717 (= call!15718 ($colon$colon!93 e!92519 (ite c!26760 (h!2322 (toList!858 lt!73219)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26758 () Bool)

(assert (=> bm!15717 (= c!26758 c!26760)))

(declare-fun b!141973 () Bool)

(assert (=> b!141973 (= e!92519 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73219)) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44945 c!26760) b!141969))

(assert (= (and d!44945 (not c!26760)) b!141965))

(assert (= (and b!141965 c!26761) b!141968))

(assert (= (and b!141965 (not c!26761)) b!141967))

(assert (= (and b!141967 c!26759) b!141971))

(assert (= (and b!141967 (not c!26759)) b!141972))

(assert (= (or b!141971 b!141972) bm!15715))

(assert (= (or b!141968 bm!15715) bm!15716))

(assert (= (or b!141969 bm!15716) bm!15717))

(assert (= (and bm!15717 c!26758) b!141973))

(assert (= (and bm!15717 (not c!26758)) b!141964))

(assert (= (and d!44945 res!67747) b!141966))

(assert (= (and b!141966 res!67748) b!141970))

(declare-fun m!170961 () Bool)

(assert (=> bm!15717 m!170961))

(declare-fun m!170963 () Bool)

(assert (=> d!44945 m!170963))

(declare-fun m!170965 () Bool)

(assert (=> d!44945 m!170965))

(declare-fun m!170967 () Bool)

(assert (=> b!141966 m!170967))

(declare-fun m!170969 () Bool)

(assert (=> b!141973 m!170969))

(declare-fun m!170971 () Bool)

(assert (=> b!141970 m!170971))

(assert (=> d!43751 d!44945))

(declare-fun d!44947 () Bool)

(declare-fun e!92520 () Bool)

(assert (=> d!44947 e!92520))

(declare-fun res!67749 () Bool)

(assert (=> d!44947 (=> res!67749 e!92520)))

(declare-fun lt!74475 () Bool)

(assert (=> d!44947 (= res!67749 (not lt!74475))))

(declare-fun lt!74472 () Bool)

(assert (=> d!44947 (= lt!74475 lt!74472)))

(declare-fun lt!74474 () Unit!4387)

(declare-fun e!92521 () Unit!4387)

(assert (=> d!44947 (= lt!74474 e!92521)))

(declare-fun c!26762 () Bool)

(assert (=> d!44947 (= c!26762 lt!74472)))

(assert (=> d!44947 (= lt!74472 (containsKey!180 (toList!858 lt!73961) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44947 (= (contains!904 lt!73961 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74475)))

(declare-fun b!141974 () Bool)

(declare-fun lt!74473 () Unit!4387)

(assert (=> b!141974 (= e!92521 lt!74473)))

(assert (=> b!141974 (= lt!74473 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73961) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141974 (isDefined!129 (getValueByKey!177 (toList!858 lt!73961) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141975 () Bool)

(declare-fun Unit!4482 () Unit!4387)

(assert (=> b!141975 (= e!92521 Unit!4482)))

(declare-fun b!141976 () Bool)

(assert (=> b!141976 (= e!92520 (isDefined!129 (getValueByKey!177 (toList!858 lt!73961) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44947 c!26762) b!141974))

(assert (= (and d!44947 (not c!26762)) b!141975))

(assert (= (and d!44947 (not res!67749)) b!141976))

(declare-fun m!170973 () Bool)

(assert (=> d!44947 m!170973))

(declare-fun m!170975 () Bool)

(assert (=> b!141974 m!170975))

(declare-fun m!170977 () Bool)

(assert (=> b!141974 m!170977))

(assert (=> b!141974 m!170977))

(declare-fun m!170979 () Bool)

(assert (=> b!141974 m!170979))

(assert (=> b!141976 m!170977))

(assert (=> b!141976 m!170977))

(assert (=> b!141976 m!170979))

(assert (=> bm!15649 d!44947))

(declare-fun d!44949 () Bool)

(assert (=> d!44949 (isDefined!129 (getValueByKey!177 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74476 () Unit!4387)

(assert (=> d!44949 (= lt!74476 (choose!864 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92522 () Bool)

(assert (=> d!44949 e!92522))

(declare-fun res!67750 () Bool)

(assert (=> d!44949 (=> (not res!67750) (not e!92522))))

(assert (=> d!44949 (= res!67750 (isStrictlySorted!312 (toList!858 lt!73215)))))

(assert (=> d!44949 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74476)))

(declare-fun b!141977 () Bool)

(assert (=> b!141977 (= e!92522 (containsKey!180 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44949 res!67750) b!141977))

(assert (=> d!44949 m!167831))

(assert (=> d!44949 m!167831))

(assert (=> d!44949 m!168385))

(declare-fun m!170981 () Bool)

(assert (=> d!44949 m!170981))

(assert (=> d!44949 m!170117))

(assert (=> b!141977 m!168381))

(assert (=> b!140771 d!44949))

(assert (=> b!140771 d!44763))

(assert (=> b!140771 d!44765))

(declare-fun d!44951 () Bool)

(declare-fun e!92523 () Bool)

(assert (=> d!44951 e!92523))

(declare-fun res!67751 () Bool)

(assert (=> d!44951 (=> res!67751 e!92523)))

(declare-fun lt!74480 () Bool)

(assert (=> d!44951 (= res!67751 (not lt!74480))))

(declare-fun lt!74477 () Bool)

(assert (=> d!44951 (= lt!74480 lt!74477)))

(declare-fun lt!74479 () Unit!4387)

(declare-fun e!92524 () Unit!4387)

(assert (=> d!44951 (= lt!74479 e!92524)))

(declare-fun c!26763 () Bool)

(assert (=> d!44951 (= c!26763 lt!74477)))

(assert (=> d!44951 (= lt!74477 (containsKey!180 (toList!858 lt!73910) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(assert (=> d!44951 (= (contains!904 lt!73910 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!74480)))

(declare-fun b!141978 () Bool)

(declare-fun lt!74478 () Unit!4387)

(assert (=> b!141978 (= e!92524 lt!74478)))

(assert (=> b!141978 (= lt!74478 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73910) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(assert (=> b!141978 (isDefined!129 (getValueByKey!177 (toList!858 lt!73910) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun b!141979 () Bool)

(declare-fun Unit!4483 () Unit!4387)

(assert (=> b!141979 (= e!92524 Unit!4483)))

(declare-fun b!141980 () Bool)

(assert (=> b!141980 (= e!92523 (isDefined!129 (getValueByKey!177 (toList!858 lt!73910) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(assert (= (and d!44951 c!26763) b!141978))

(assert (= (and d!44951 (not c!26763)) b!141979))

(assert (= (and d!44951 (not res!67751)) b!141980))

(declare-fun m!170983 () Bool)

(assert (=> d!44951 m!170983))

(declare-fun m!170985 () Bool)

(assert (=> b!141978 m!170985))

(assert (=> b!141978 m!168649))

(assert (=> b!141978 m!168649))

(declare-fun m!170987 () Bool)

(assert (=> b!141978 m!170987))

(assert (=> b!141980 m!168649))

(assert (=> b!141980 m!168649))

(assert (=> b!141980 m!170987))

(assert (=> d!44029 d!44951))

(declare-fun b!141982 () Bool)

(declare-fun e!92525 () Option!183)

(declare-fun e!92526 () Option!183)

(assert (=> b!141982 (= e!92525 e!92526)))

(declare-fun c!26765 () Bool)

(assert (=> b!141982 (= c!26765 (and ((_ is Cons!1715) lt!73909) (not (= (_1!1322 (h!2322 lt!73909)) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))))

(declare-fun b!141983 () Bool)

(assert (=> b!141983 (= e!92526 (getValueByKey!177 (t!6295 lt!73909) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun b!141981 () Bool)

(assert (=> b!141981 (= e!92525 (Some!182 (_2!1322 (h!2322 lt!73909))))))

(declare-fun b!141984 () Bool)

(assert (=> b!141984 (= e!92526 None!181)))

(declare-fun d!44953 () Bool)

(declare-fun c!26764 () Bool)

(assert (=> d!44953 (= c!26764 (and ((_ is Cons!1715) lt!73909) (= (_1!1322 (h!2322 lt!73909)) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(assert (=> d!44953 (= (getValueByKey!177 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) e!92525)))

(assert (= (and d!44953 c!26764) b!141981))

(assert (= (and d!44953 (not c!26764)) b!141982))

(assert (= (and b!141982 c!26765) b!141983))

(assert (= (and b!141982 (not c!26765)) b!141984))

(declare-fun m!170989 () Bool)

(assert (=> b!141983 m!170989))

(assert (=> d!44029 d!44953))

(declare-fun d!44955 () Bool)

(assert (=> d!44955 (= (getValueByKey!177 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun lt!74481 () Unit!4387)

(assert (=> d!44955 (= lt!74481 (choose!873 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun e!92527 () Bool)

(assert (=> d!44955 e!92527))

(declare-fun res!67752 () Bool)

(assert (=> d!44955 (=> (not res!67752) (not e!92527))))

(assert (=> d!44955 (= res!67752 (isStrictlySorted!312 lt!73909))))

(assert (=> d!44955 (= (lemmaContainsTupThenGetReturnValue!91 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!74481)))

(declare-fun b!141985 () Bool)

(declare-fun res!67753 () Bool)

(assert (=> b!141985 (=> (not res!67753) (not e!92527))))

(assert (=> b!141985 (= res!67753 (containsKey!180 lt!73909 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun b!141986 () Bool)

(assert (=> b!141986 (= e!92527 (contains!907 lt!73909 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(assert (= (and d!44955 res!67752) b!141985))

(assert (= (and b!141985 res!67753) b!141986))

(assert (=> d!44955 m!168643))

(declare-fun m!170991 () Bool)

(assert (=> d!44955 m!170991))

(declare-fun m!170993 () Bool)

(assert (=> d!44955 m!170993))

(declare-fun m!170995 () Bool)

(assert (=> b!141985 m!170995))

(declare-fun m!170997 () Bool)

(assert (=> b!141986 m!170997))

(assert (=> d!44029 d!44955))

(declare-fun bm!15718 () Bool)

(declare-fun call!15723 () List!1719)

(declare-fun call!15722 () List!1719)

(assert (=> bm!15718 (= call!15723 call!15722)))

(declare-fun b!141988 () Bool)

(declare-fun e!92529 () List!1719)

(declare-fun e!92531 () List!1719)

(assert (=> b!141988 (= e!92529 e!92531)))

(declare-fun c!26769 () Bool)

(assert (=> b!141988 (= c!26769 (and ((_ is Cons!1715) (toList!858 lt!73325)) (= (_1!1322 (h!2322 (toList!858 lt!73325))) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(declare-fun b!141989 () Bool)

(declare-fun res!67755 () Bool)

(declare-fun e!92528 () Bool)

(assert (=> b!141989 (=> (not res!67755) (not e!92528))))

(declare-fun lt!74482 () List!1719)

(assert (=> b!141989 (= res!67755 (containsKey!180 lt!74482 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun c!26767 () Bool)

(declare-fun b!141990 () Bool)

(assert (=> b!141990 (= c!26767 (and ((_ is Cons!1715) (toList!858 lt!73325)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73325))) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(declare-fun e!92530 () List!1719)

(assert (=> b!141990 (= e!92531 e!92530)))

(declare-fun bm!15719 () Bool)

(declare-fun call!15721 () List!1719)

(assert (=> bm!15719 (= call!15722 call!15721)))

(declare-fun b!141991 () Bool)

(assert (=> b!141991 (= e!92531 call!15722)))

(declare-fun b!141992 () Bool)

(assert (=> b!141992 (= e!92529 call!15721)))

(declare-fun b!141993 () Bool)

(assert (=> b!141993 (= e!92528 (contains!907 lt!74482 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(declare-fun e!92532 () List!1719)

(declare-fun b!141987 () Bool)

(assert (=> b!141987 (= e!92532 (ite c!26769 (t!6295 (toList!858 lt!73325)) (ite c!26767 (Cons!1715 (h!2322 (toList!858 lt!73325)) (t!6295 (toList!858 lt!73325))) Nil!1716)))))

(declare-fun d!44957 () Bool)

(assert (=> d!44957 e!92528))

(declare-fun res!67754 () Bool)

(assert (=> d!44957 (=> (not res!67754) (not e!92528))))

(assert (=> d!44957 (= res!67754 (isStrictlySorted!312 lt!74482))))

(assert (=> d!44957 (= lt!74482 e!92529)))

(declare-fun c!26768 () Bool)

(assert (=> d!44957 (= c!26768 (and ((_ is Cons!1715) (toList!858 lt!73325)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73325))) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(assert (=> d!44957 (isStrictlySorted!312 (toList!858 lt!73325))))

(assert (=> d!44957 (= (insertStrictlySorted!94 (toList!858 lt!73325) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) lt!74482)))

(declare-fun b!141994 () Bool)

(assert (=> b!141994 (= e!92530 call!15723)))

(declare-fun b!141995 () Bool)

(assert (=> b!141995 (= e!92530 call!15723)))

(declare-fun bm!15720 () Bool)

(assert (=> bm!15720 (= call!15721 ($colon$colon!93 e!92532 (ite c!26768 (h!2322 (toList!858 lt!73325)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))))

(declare-fun c!26766 () Bool)

(assert (=> bm!15720 (= c!26766 c!26768)))

(declare-fun b!141996 () Bool)

(assert (=> b!141996 (= e!92532 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73325)) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(assert (= (and d!44957 c!26768) b!141992))

(assert (= (and d!44957 (not c!26768)) b!141988))

(assert (= (and b!141988 c!26769) b!141991))

(assert (= (and b!141988 (not c!26769)) b!141990))

(assert (= (and b!141990 c!26767) b!141994))

(assert (= (and b!141990 (not c!26767)) b!141995))

(assert (= (or b!141994 b!141995) bm!15718))

(assert (= (or b!141991 bm!15718) bm!15719))

(assert (= (or b!141992 bm!15719) bm!15720))

(assert (= (and bm!15720 c!26766) b!141996))

(assert (= (and bm!15720 (not c!26766)) b!141987))

(assert (= (and d!44957 res!67754) b!141989))

(assert (= (and b!141989 res!67755) b!141993))

(declare-fun m!170999 () Bool)

(assert (=> bm!15720 m!170999))

(declare-fun m!171001 () Bool)

(assert (=> d!44957 m!171001))

(declare-fun m!171003 () Bool)

(assert (=> d!44957 m!171003))

(declare-fun m!171005 () Bool)

(assert (=> b!141989 m!171005))

(declare-fun m!171007 () Bool)

(assert (=> b!141996 m!171007))

(declare-fun m!171009 () Bool)

(assert (=> b!141993 m!171009))

(assert (=> d!44029 d!44957))

(declare-fun d!44959 () Bool)

(declare-fun res!67756 () Bool)

(declare-fun e!92533 () Bool)

(assert (=> d!44959 (=> res!67756 e!92533)))

(assert (=> d!44959 (= res!67756 (and ((_ is Cons!1715) lt!73881) (= (_1!1322 (h!2322 lt!73881)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44959 (= (containsKey!180 lt!73881 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92533)))

(declare-fun b!141997 () Bool)

(declare-fun e!92534 () Bool)

(assert (=> b!141997 (= e!92533 e!92534)))

(declare-fun res!67757 () Bool)

(assert (=> b!141997 (=> (not res!67757) (not e!92534))))

(assert (=> b!141997 (= res!67757 (and (or (not ((_ is Cons!1715) lt!73881)) (bvsle (_1!1322 (h!2322 lt!73881)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1715) lt!73881) (bvslt (_1!1322 (h!2322 lt!73881)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141998 () Bool)

(assert (=> b!141998 (= e!92534 (containsKey!180 (t!6295 lt!73881) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44959 (not res!67756)) b!141997))

(assert (= (and b!141997 res!67757) b!141998))

(declare-fun m!171011 () Bool)

(assert (=> b!141998 m!171011))

(assert (=> b!140864 d!44959))

(assert (=> d!43963 d!43643))

(assert (=> d!43963 d!43647))

(assert (=> d!43963 d!43635))

(assert (=> b!140599 d!44523))

(declare-fun d!44961 () Bool)

(assert (=> d!44961 (not (contains!904 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892)) lt!73893))))

(declare-fun lt!74483 () Unit!4387)

(assert (=> d!44961 (= lt!74483 (choose!874 lt!73890 lt!73888 lt!73892 lt!73893))))

(declare-fun e!92535 () Bool)

(assert (=> d!44961 e!92535))

(declare-fun res!67758 () Bool)

(assert (=> d!44961 (=> (not res!67758) (not e!92535))))

(assert (=> d!44961 (= res!67758 (not (contains!904 lt!73890 lt!73893)))))

(assert (=> d!44961 (= (addStillNotContains!66 lt!73890 lt!73888 lt!73892 lt!73893) lt!74483)))

(declare-fun b!141999 () Bool)

(assert (=> b!141999 (= e!92535 (not (= lt!73888 lt!73893)))))

(assert (= (and d!44961 res!67758) b!141999))

(assert (=> d!44961 m!168565))

(assert (=> d!44961 m!168565))

(assert (=> d!44961 m!168567))

(declare-fun m!171013 () Bool)

(assert (=> d!44961 m!171013))

(declare-fun m!171015 () Bool)

(assert (=> d!44961 m!171015))

(assert (=> b!140880 d!44961))

(declare-fun d!44963 () Bool)

(declare-fun e!92536 () Bool)

(assert (=> d!44963 e!92536))

(declare-fun res!67759 () Bool)

(assert (=> d!44963 (=> res!67759 e!92536)))

(declare-fun lt!74487 () Bool)

(assert (=> d!44963 (= res!67759 (not lt!74487))))

(declare-fun lt!74484 () Bool)

(assert (=> d!44963 (= lt!74487 lt!74484)))

(declare-fun lt!74486 () Unit!4387)

(declare-fun e!92537 () Unit!4387)

(assert (=> d!44963 (= lt!74486 e!92537)))

(declare-fun c!26770 () Bool)

(assert (=> d!44963 (= c!26770 lt!74484)))

(assert (=> d!44963 (= lt!74484 (containsKey!180 (toList!858 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892))) lt!73893))))

(assert (=> d!44963 (= (contains!904 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892)) lt!73893) lt!74487)))

(declare-fun b!142000 () Bool)

(declare-fun lt!74485 () Unit!4387)

(assert (=> b!142000 (= e!92537 lt!74485)))

(assert (=> b!142000 (= lt!74485 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892))) lt!73893))))

(assert (=> b!142000 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892))) lt!73893))))

(declare-fun b!142001 () Bool)

(declare-fun Unit!4484 () Unit!4387)

(assert (=> b!142001 (= e!92537 Unit!4484)))

(declare-fun b!142002 () Bool)

(assert (=> b!142002 (= e!92536 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892))) lt!73893)))))

(assert (= (and d!44963 c!26770) b!142000))

(assert (= (and d!44963 (not c!26770)) b!142001))

(assert (= (and d!44963 (not res!67759)) b!142002))

(declare-fun m!171017 () Bool)

(assert (=> d!44963 m!171017))

(declare-fun m!171019 () Bool)

(assert (=> b!142000 m!171019))

(declare-fun m!171021 () Bool)

(assert (=> b!142000 m!171021))

(assert (=> b!142000 m!171021))

(declare-fun m!171023 () Bool)

(assert (=> b!142000 m!171023))

(assert (=> b!142002 m!171021))

(assert (=> b!142002 m!171021))

(assert (=> b!142002 m!171023))

(assert (=> b!140880 d!44963))

(assert (=> b!140880 d!44107))

(declare-fun d!44965 () Bool)

(declare-fun e!92538 () Bool)

(assert (=> d!44965 e!92538))

(declare-fun res!67760 () Bool)

(assert (=> d!44965 (=> (not res!67760) (not e!92538))))

(declare-fun lt!74490 () ListLongMap!1685)

(assert (=> d!44965 (= res!67760 (contains!904 lt!74490 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74489 () List!1719)

(assert (=> d!44965 (= lt!74490 (ListLongMap!1686 lt!74489))))

(declare-fun lt!74488 () Unit!4387)

(declare-fun lt!74491 () Unit!4387)

(assert (=> d!44965 (= lt!74488 lt!74491)))

(assert (=> d!44965 (= (getValueByKey!177 lt!74489 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44965 (= lt!74491 (lemmaContainsTupThenGetReturnValue!91 lt!74489 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44965 (= lt!74489 (insertStrictlySorted!94 (toList!858 call!15636) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44965 (= (+!173 call!15636 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74490)))

(declare-fun b!142003 () Bool)

(declare-fun res!67761 () Bool)

(assert (=> b!142003 (=> (not res!67761) (not e!92538))))

(assert (=> b!142003 (= res!67761 (= (getValueByKey!177 (toList!858 lt!74490) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142004 () Bool)

(assert (=> b!142004 (= e!92538 (contains!907 (toList!858 lt!74490) (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44965 res!67760) b!142003))

(assert (= (and b!142003 res!67761) b!142004))

(declare-fun m!171025 () Bool)

(assert (=> d!44965 m!171025))

(declare-fun m!171027 () Bool)

(assert (=> d!44965 m!171027))

(declare-fun m!171029 () Bool)

(assert (=> d!44965 m!171029))

(declare-fun m!171031 () Bool)

(assert (=> d!44965 m!171031))

(declare-fun m!171033 () Bool)

(assert (=> b!142003 m!171033))

(declare-fun m!171035 () Bool)

(assert (=> b!142004 m!171035))

(assert (=> b!140880 d!44965))

(declare-fun d!44967 () Bool)

(declare-fun e!92539 () Bool)

(assert (=> d!44967 e!92539))

(declare-fun res!67762 () Bool)

(assert (=> d!44967 (=> (not res!67762) (not e!92539))))

(declare-fun lt!74494 () ListLongMap!1685)

(assert (=> d!44967 (= res!67762 (contains!904 lt!74494 (_1!1322 (tuple2!2623 lt!73888 lt!73892))))))

(declare-fun lt!74493 () List!1719)

(assert (=> d!44967 (= lt!74494 (ListLongMap!1686 lt!74493))))

(declare-fun lt!74492 () Unit!4387)

(declare-fun lt!74495 () Unit!4387)

(assert (=> d!44967 (= lt!74492 lt!74495)))

(assert (=> d!44967 (= (getValueByKey!177 lt!74493 (_1!1322 (tuple2!2623 lt!73888 lt!73892))) (Some!182 (_2!1322 (tuple2!2623 lt!73888 lt!73892))))))

(assert (=> d!44967 (= lt!74495 (lemmaContainsTupThenGetReturnValue!91 lt!74493 (_1!1322 (tuple2!2623 lt!73888 lt!73892)) (_2!1322 (tuple2!2623 lt!73888 lt!73892))))))

(assert (=> d!44967 (= lt!74493 (insertStrictlySorted!94 (toList!858 lt!73890) (_1!1322 (tuple2!2623 lt!73888 lt!73892)) (_2!1322 (tuple2!2623 lt!73888 lt!73892))))))

(assert (=> d!44967 (= (+!173 lt!73890 (tuple2!2623 lt!73888 lt!73892)) lt!74494)))

(declare-fun b!142005 () Bool)

(declare-fun res!67763 () Bool)

(assert (=> b!142005 (=> (not res!67763) (not e!92539))))

(assert (=> b!142005 (= res!67763 (= (getValueByKey!177 (toList!858 lt!74494) (_1!1322 (tuple2!2623 lt!73888 lt!73892))) (Some!182 (_2!1322 (tuple2!2623 lt!73888 lt!73892)))))))

(declare-fun b!142006 () Bool)

(assert (=> b!142006 (= e!92539 (contains!907 (toList!858 lt!74494) (tuple2!2623 lt!73888 lt!73892)))))

(assert (= (and d!44967 res!67762) b!142005))

(assert (= (and b!142005 res!67763) b!142006))

(declare-fun m!171037 () Bool)

(assert (=> d!44967 m!171037))

(declare-fun m!171039 () Bool)

(assert (=> d!44967 m!171039))

(declare-fun m!171041 () Bool)

(assert (=> d!44967 m!171041))

(declare-fun m!171043 () Bool)

(assert (=> d!44967 m!171043))

(declare-fun m!171045 () Bool)

(assert (=> b!142005 m!171045))

(declare-fun m!171047 () Bool)

(assert (=> b!142006 m!171047))

(assert (=> b!140880 d!44967))

(declare-fun d!44969 () Bool)

(assert (=> d!44969 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74496 () Unit!4387)

(assert (=> d!44969 (= lt!74496 (choose!864 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92540 () Bool)

(assert (=> d!44969 e!92540))

(declare-fun res!67764 () Bool)

(assert (=> d!44969 (=> (not res!67764) (not e!92540))))

(assert (=> d!44969 (= res!67764 (isStrictlySorted!312 (toList!858 lt!73309)))))

(assert (=> d!44969 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74496)))

(declare-fun b!142007 () Bool)

(assert (=> b!142007 (= e!92540 (containsKey!180 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44969 res!67764) b!142007))

(assert (=> d!44969 m!167561))

(assert (=> d!44969 m!167561))

(assert (=> d!44969 m!167563))

(declare-fun m!171049 () Bool)

(assert (=> d!44969 m!171049))

(assert (=> d!44969 m!169585))

(assert (=> b!142007 m!167557))

(assert (=> b!140297 d!44969))

(assert (=> b!140297 d!44771))

(assert (=> b!140297 d!44773))

(declare-fun d!44971 () Bool)

(assert (=> d!44971 (= (apply!120 lt!73601 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5996 () Bool)

(assert (= bs!5996 d!44971))

(declare-fun m!171051 () Bool)

(assert (=> bs!5996 m!171051))

(assert (=> bs!5996 m!171051))

(declare-fun m!171053 () Bool)

(assert (=> bs!5996 m!171053))

(assert (=> b!140388 d!44971))

(declare-fun d!44973 () Bool)

(declare-fun res!67765 () Bool)

(declare-fun e!92541 () Bool)

(assert (=> d!44973 (=> res!67765 e!92541)))

(assert (=> d!44973 (= res!67765 (and ((_ is Cons!1715) lt!73996) (= (_1!1322 (h!2322 lt!73996)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44973 (= (containsKey!180 lt!73996 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92541)))

(declare-fun b!142008 () Bool)

(declare-fun e!92542 () Bool)

(assert (=> b!142008 (= e!92541 e!92542)))

(declare-fun res!67766 () Bool)

(assert (=> b!142008 (=> (not res!67766) (not e!92542))))

(assert (=> b!142008 (= res!67766 (and (or (not ((_ is Cons!1715) lt!73996)) (bvsle (_1!1322 (h!2322 lt!73996)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73996) (bvslt (_1!1322 (h!2322 lt!73996)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142009 () Bool)

(assert (=> b!142009 (= e!92542 (containsKey!180 (t!6295 lt!73996) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44973 (not res!67765)) b!142008))

(assert (= (and b!142008 res!67766) b!142009))

(declare-fun m!171055 () Bool)

(assert (=> b!142009 m!171055))

(assert (=> b!141046 d!44973))

(declare-fun d!44975 () Bool)

(declare-fun res!67767 () Bool)

(declare-fun e!92543 () Bool)

(assert (=> d!44975 (=> res!67767 e!92543)))

(assert (=> d!44975 (= res!67767 (= (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!73300))))

(assert (=> d!44975 (= (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!92543)))

(declare-fun b!142010 () Bool)

(declare-fun e!92544 () Bool)

(assert (=> b!142010 (= e!92543 e!92544)))

(declare-fun res!67768 () Bool)

(assert (=> b!142010 (=> (not res!67768) (not e!92544))))

(assert (=> b!142010 (= res!67768 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!142011 () Bool)

(assert (=> b!142011 (= e!92544 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44975 (not res!67767)) b!142010))

(assert (= (and b!142010 res!67768) b!142011))

(assert (=> d!44975 m!168135))

(declare-fun m!171057 () Bool)

(assert (=> b!142011 m!171057))

(assert (=> b!140332 d!44975))

(assert (=> d!44153 d!43665))

(declare-fun d!44977 () Bool)

(assert (=> d!44977 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!73238)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!73238)))))

(assert (=> d!44189 d!44977))

(declare-fun b!142013 () Bool)

(declare-fun e!92545 () Option!183)

(declare-fun e!92546 () Option!183)

(assert (=> b!142013 (= e!92545 e!92546)))

(declare-fun c!26772 () Bool)

(assert (=> b!142013 (= c!26772 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))) lt!73238))))))

(declare-fun b!142014 () Bool)

(assert (=> b!142014 (= e!92546 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))) lt!73238))))

(declare-fun b!142012 () Bool)

(assert (=> b!142012 (= e!92545 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))))

(declare-fun b!142015 () Bool)

(assert (=> b!142015 (= e!92546 None!181)))

(declare-fun c!26771 () Bool)

(declare-fun d!44979 () Bool)

(assert (=> d!44979 (= c!26771 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))) lt!73238)))))

(assert (=> d!44979 (= (getValueByKey!177 (toList!858 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) lt!73238) e!92545)))

(assert (= (and d!44979 c!26771) b!142012))

(assert (= (and d!44979 (not c!26771)) b!142013))

(assert (= (and b!142013 c!26772) b!142014))

(assert (= (and b!142013 (not c!26772)) b!142015))

(declare-fun m!171059 () Bool)

(assert (=> b!142014 m!171059))

(assert (=> d!44189 d!44979))

(declare-fun d!44981 () Bool)

(assert (not d!44981))

(assert (=> b!140876 d!44981))

(declare-fun d!44983 () Bool)

(declare-fun e!92547 () Bool)

(assert (=> d!44983 e!92547))

(declare-fun res!67769 () Bool)

(assert (=> d!44983 (=> res!67769 e!92547)))

(declare-fun lt!74500 () Bool)

(assert (=> d!44983 (= res!67769 (not lt!74500))))

(declare-fun lt!74497 () Bool)

(assert (=> d!44983 (= lt!74500 lt!74497)))

(declare-fun lt!74499 () Unit!4387)

(declare-fun e!92548 () Unit!4387)

(assert (=> d!44983 (= lt!74499 e!92548)))

(declare-fun c!26773 () Bool)

(assert (=> d!44983 (= c!26773 lt!74497)))

(assert (=> d!44983 (= lt!74497 (containsKey!180 (toList!858 lt!73568) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44983 (= (contains!904 lt!73568 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74500)))

(declare-fun b!142016 () Bool)

(declare-fun lt!74498 () Unit!4387)

(assert (=> b!142016 (= e!92548 lt!74498)))

(assert (=> b!142016 (= lt!74498 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73568) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> b!142016 (isDefined!129 (getValueByKey!177 (toList!858 lt!73568) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142017 () Bool)

(declare-fun Unit!4485 () Unit!4387)

(assert (=> b!142017 (= e!92548 Unit!4485)))

(declare-fun b!142018 () Bool)

(assert (=> b!142018 (= e!92547 (isDefined!129 (getValueByKey!177 (toList!858 lt!73568) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44983 c!26773) b!142016))

(assert (= (and d!44983 (not c!26773)) b!142017))

(assert (= (and d!44983 (not res!67769)) b!142018))

(declare-fun m!171061 () Bool)

(assert (=> d!44983 m!171061))

(declare-fun m!171063 () Bool)

(assert (=> b!142016 m!171063))

(assert (=> b!142016 m!167661))

(assert (=> b!142016 m!167661))

(declare-fun m!171065 () Bool)

(assert (=> b!142016 m!171065))

(assert (=> b!142018 m!167661))

(assert (=> b!142018 m!167661))

(assert (=> b!142018 m!171065))

(assert (=> d!43747 d!44983))

(declare-fun b!142020 () Bool)

(declare-fun e!92549 () Option!183)

(declare-fun e!92550 () Option!183)

(assert (=> b!142020 (= e!92549 e!92550)))

(declare-fun c!26775 () Bool)

(assert (=> b!142020 (= c!26775 (and ((_ is Cons!1715) lt!73567) (not (= (_1!1322 (h!2322 lt!73567)) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142021 () Bool)

(assert (=> b!142021 (= e!92550 (getValueByKey!177 (t!6295 lt!73567) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142019 () Bool)

(assert (=> b!142019 (= e!92549 (Some!182 (_2!1322 (h!2322 lt!73567))))))

(declare-fun b!142022 () Bool)

(assert (=> b!142022 (= e!92550 None!181)))

(declare-fun c!26774 () Bool)

(declare-fun d!44985 () Bool)

(assert (=> d!44985 (= c!26774 (and ((_ is Cons!1715) lt!73567) (= (_1!1322 (h!2322 lt!73567)) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44985 (= (getValueByKey!177 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92549)))

(assert (= (and d!44985 c!26774) b!142019))

(assert (= (and d!44985 (not c!26774)) b!142020))

(assert (= (and b!142020 c!26775) b!142021))

(assert (= (and b!142020 (not c!26775)) b!142022))

(declare-fun m!171067 () Bool)

(assert (=> b!142021 m!171067))

(assert (=> d!43747 d!44985))

(declare-fun d!44987 () Bool)

(assert (=> d!44987 (= (getValueByKey!177 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!74501 () Unit!4387)

(assert (=> d!44987 (= lt!74501 (choose!873 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!92551 () Bool)

(assert (=> d!44987 e!92551))

(declare-fun res!67770 () Bool)

(assert (=> d!44987 (=> (not res!67770) (not e!92551))))

(assert (=> d!44987 (= res!67770 (isStrictlySorted!312 lt!73567))))

(assert (=> d!44987 (= (lemmaContainsTupThenGetReturnValue!91 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74501)))

(declare-fun b!142023 () Bool)

(declare-fun res!67771 () Bool)

(assert (=> b!142023 (=> (not res!67771) (not e!92551))))

(assert (=> b!142023 (= res!67771 (containsKey!180 lt!73567 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142024 () Bool)

(assert (=> b!142024 (= e!92551 (contains!907 lt!73567 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44987 res!67770) b!142023))

(assert (= (and b!142023 res!67771) b!142024))

(assert (=> d!44987 m!167655))

(declare-fun m!171069 () Bool)

(assert (=> d!44987 m!171069))

(declare-fun m!171071 () Bool)

(assert (=> d!44987 m!171071))

(declare-fun m!171073 () Bool)

(assert (=> b!142023 m!171073))

(declare-fun m!171075 () Bool)

(assert (=> b!142024 m!171075))

(assert (=> d!43747 d!44987))

(declare-fun bm!15721 () Bool)

(declare-fun call!15726 () List!1719)

(declare-fun call!15725 () List!1719)

(assert (=> bm!15721 (= call!15726 call!15725)))

(declare-fun b!142026 () Bool)

(declare-fun e!92553 () List!1719)

(declare-fun e!92555 () List!1719)

(assert (=> b!142026 (= e!92553 e!92555)))

(declare-fun c!26779 () Bool)

(assert (=> b!142026 (= c!26779 (and ((_ is Cons!1715) (toList!858 lt!73231)) (= (_1!1322 (h!2322 (toList!858 lt!73231))) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142027 () Bool)

(declare-fun res!67773 () Bool)

(declare-fun e!92552 () Bool)

(assert (=> b!142027 (=> (not res!67773) (not e!92552))))

(declare-fun lt!74502 () List!1719)

(assert (=> b!142027 (= res!67773 (containsKey!180 lt!74502 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun c!26777 () Bool)

(declare-fun b!142028 () Bool)

(assert (=> b!142028 (= c!26777 (and ((_ is Cons!1715) (toList!858 lt!73231)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73231))) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92554 () List!1719)

(assert (=> b!142028 (= e!92555 e!92554)))

(declare-fun bm!15722 () Bool)

(declare-fun call!15724 () List!1719)

(assert (=> bm!15722 (= call!15725 call!15724)))

(declare-fun b!142029 () Bool)

(assert (=> b!142029 (= e!92555 call!15725)))

(declare-fun b!142030 () Bool)

(assert (=> b!142030 (= e!92553 call!15724)))

(declare-fun b!142031 () Bool)

(assert (=> b!142031 (= e!92552 (contains!907 lt!74502 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92556 () List!1719)

(declare-fun b!142025 () Bool)

(assert (=> b!142025 (= e!92556 (ite c!26779 (t!6295 (toList!858 lt!73231)) (ite c!26777 (Cons!1715 (h!2322 (toList!858 lt!73231)) (t!6295 (toList!858 lt!73231))) Nil!1716)))))

(declare-fun d!44989 () Bool)

(assert (=> d!44989 e!92552))

(declare-fun res!67772 () Bool)

(assert (=> d!44989 (=> (not res!67772) (not e!92552))))

(assert (=> d!44989 (= res!67772 (isStrictlySorted!312 lt!74502))))

(assert (=> d!44989 (= lt!74502 e!92553)))

(declare-fun c!26778 () Bool)

(assert (=> d!44989 (= c!26778 (and ((_ is Cons!1715) (toList!858 lt!73231)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73231))) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44989 (isStrictlySorted!312 (toList!858 lt!73231))))

(assert (=> d!44989 (= (insertStrictlySorted!94 (toList!858 lt!73231) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74502)))

(declare-fun b!142032 () Bool)

(assert (=> b!142032 (= e!92554 call!15726)))

(declare-fun b!142033 () Bool)

(assert (=> b!142033 (= e!92554 call!15726)))

(declare-fun bm!15723 () Bool)

(assert (=> bm!15723 (= call!15724 ($colon$colon!93 e!92556 (ite c!26778 (h!2322 (toList!858 lt!73231)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!26776 () Bool)

(assert (=> bm!15723 (= c!26776 c!26778)))

(declare-fun b!142034 () Bool)

(assert (=> b!142034 (= e!92556 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73231)) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!44989 c!26778) b!142030))

(assert (= (and d!44989 (not c!26778)) b!142026))

(assert (= (and b!142026 c!26779) b!142029))

(assert (= (and b!142026 (not c!26779)) b!142028))

(assert (= (and b!142028 c!26777) b!142032))

(assert (= (and b!142028 (not c!26777)) b!142033))

(assert (= (or b!142032 b!142033) bm!15721))

(assert (= (or b!142029 bm!15721) bm!15722))

(assert (= (or b!142030 bm!15722) bm!15723))

(assert (= (and bm!15723 c!26776) b!142034))

(assert (= (and bm!15723 (not c!26776)) b!142025))

(assert (= (and d!44989 res!67772) b!142027))

(assert (= (and b!142027 res!67773) b!142031))

(declare-fun m!171077 () Bool)

(assert (=> bm!15723 m!171077))

(declare-fun m!171079 () Bool)

(assert (=> d!44989 m!171079))

(declare-fun m!171081 () Bool)

(assert (=> d!44989 m!171081))

(declare-fun m!171083 () Bool)

(assert (=> b!142027 m!171083))

(declare-fun m!171085 () Bool)

(assert (=> b!142034 m!171085))

(declare-fun m!171087 () Bool)

(assert (=> b!142031 m!171087))

(assert (=> d!43747 d!44989))

(assert (=> b!140567 d!44415))

(declare-fun d!44991 () Bool)

(declare-fun res!67774 () Bool)

(declare-fun e!92557 () Bool)

(assert (=> d!44991 (=> res!67774 e!92557)))

(assert (=> d!44991 (= res!67774 (and ((_ is Cons!1715) (toList!858 lt!73290)) (= (_1!1322 (h!2322 (toList!858 lt!73290))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!44991 (= (containsKey!180 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92557)))

(declare-fun b!142035 () Bool)

(declare-fun e!92558 () Bool)

(assert (=> b!142035 (= e!92557 e!92558)))

(declare-fun res!67775 () Bool)

(assert (=> b!142035 (=> (not res!67775) (not e!92558))))

(assert (=> b!142035 (= res!67775 (and (or (not ((_ is Cons!1715) (toList!858 lt!73290))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73290))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) (toList!858 lt!73290)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73290))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142036 () Bool)

(assert (=> b!142036 (= e!92558 (containsKey!180 (t!6295 (toList!858 lt!73290)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!44991 (not res!67774)) b!142035))

(assert (= (and b!142035 res!67775) b!142036))

(declare-fun m!171089 () Bool)

(assert (=> b!142036 m!171089))

(assert (=> d!43893 d!44991))

(declare-fun d!44993 () Bool)

(assert (=> d!44993 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!73327)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!73327)))))

(assert (=> d!44035 d!44993))

(declare-fun b!142038 () Bool)

(declare-fun e!92559 () Option!183)

(declare-fun e!92560 () Option!183)

(assert (=> b!142038 (= e!92559 e!92560)))

(declare-fun c!26781 () Bool)

(assert (=> b!142038 (= c!26781 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))) lt!73327))))))

(declare-fun b!142039 () Bool)

(assert (=> b!142039 (= e!92560 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))) lt!73327))))

(declare-fun b!142037 () Bool)

(assert (=> b!142037 (= e!92559 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))))

(declare-fun b!142040 () Bool)

(assert (=> b!142040 (= e!92560 None!181)))

(declare-fun d!44995 () Bool)

(declare-fun c!26780 () Bool)

(assert (=> d!44995 (= c!26780 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))) lt!73327)))))

(assert (=> d!44995 (= (getValueByKey!177 (toList!858 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!73327) e!92559)))

(assert (= (and d!44995 c!26780) b!142037))

(assert (= (and d!44995 (not c!26780)) b!142038))

(assert (= (and b!142038 c!26781) b!142039))

(assert (= (and b!142038 (not c!26781)) b!142040))

(declare-fun m!171091 () Bool)

(assert (=> b!142039 m!171091))

(assert (=> d!44035 d!44995))

(declare-fun d!44997 () Bool)

(declare-fun e!92561 () Bool)

(assert (=> d!44997 e!92561))

(declare-fun res!67776 () Bool)

(assert (=> d!44997 (=> res!67776 e!92561)))

(declare-fun lt!74506 () Bool)

(assert (=> d!44997 (= res!67776 (not lt!74506))))

(declare-fun lt!74503 () Bool)

(assert (=> d!44997 (= lt!74506 lt!74503)))

(declare-fun lt!74505 () Unit!4387)

(declare-fun e!92562 () Unit!4387)

(assert (=> d!44997 (= lt!74505 e!92562)))

(declare-fun c!26782 () Bool)

(assert (=> d!44997 (= c!26782 lt!74503)))

(assert (=> d!44997 (= lt!74503 (containsKey!180 (toList!858 lt!74021) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(assert (=> d!44997 (= (contains!904 lt!74021 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!74506)))

(declare-fun b!142041 () Bool)

(declare-fun lt!74504 () Unit!4387)

(assert (=> b!142041 (= e!92562 lt!74504)))

(assert (=> b!142041 (= lt!74504 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!74021) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(assert (=> b!142041 (isDefined!129 (getValueByKey!177 (toList!858 lt!74021) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun b!142042 () Bool)

(declare-fun Unit!4486 () Unit!4387)

(assert (=> b!142042 (= e!92562 Unit!4486)))

(declare-fun b!142043 () Bool)

(assert (=> b!142043 (= e!92561 (isDefined!129 (getValueByKey!177 (toList!858 lt!74021) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(assert (= (and d!44997 c!26782) b!142041))

(assert (= (and d!44997 (not c!26782)) b!142042))

(assert (= (and d!44997 (not res!67776)) b!142043))

(declare-fun m!171093 () Bool)

(assert (=> d!44997 m!171093))

(declare-fun m!171095 () Bool)

(assert (=> b!142041 m!171095))

(assert (=> b!142041 m!169037))

(assert (=> b!142041 m!169037))

(declare-fun m!171097 () Bool)

(assert (=> b!142041 m!171097))

(assert (=> b!142043 m!169037))

(assert (=> b!142043 m!169037))

(assert (=> b!142043 m!171097))

(assert (=> d!44175 d!44997))

(declare-fun b!142045 () Bool)

(declare-fun e!92563 () Option!183)

(declare-fun e!92564 () Option!183)

(assert (=> b!142045 (= e!92563 e!92564)))

(declare-fun c!26784 () Bool)

(assert (=> b!142045 (= c!26784 (and ((_ is Cons!1715) lt!74020) (not (= (_1!1322 (h!2322 lt!74020)) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))))

(declare-fun b!142046 () Bool)

(assert (=> b!142046 (= e!92564 (getValueByKey!177 (t!6295 lt!74020) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun b!142044 () Bool)

(assert (=> b!142044 (= e!92563 (Some!182 (_2!1322 (h!2322 lt!74020))))))

(declare-fun b!142047 () Bool)

(assert (=> b!142047 (= e!92564 None!181)))

(declare-fun d!44999 () Bool)

(declare-fun c!26783 () Bool)

(assert (=> d!44999 (= c!26783 (and ((_ is Cons!1715) lt!74020) (= (_1!1322 (h!2322 lt!74020)) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(assert (=> d!44999 (= (getValueByKey!177 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) e!92563)))

(assert (= (and d!44999 c!26783) b!142044))

(assert (= (and d!44999 (not c!26783)) b!142045))

(assert (= (and b!142045 c!26784) b!142046))

(assert (= (and b!142045 (not c!26784)) b!142047))

(declare-fun m!171099 () Bool)

(assert (=> b!142046 m!171099))

(assert (=> d!44175 d!44999))

(declare-fun d!45001 () Bool)

(assert (=> d!45001 (= (getValueByKey!177 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun lt!74507 () Unit!4387)

(assert (=> d!45001 (= lt!74507 (choose!873 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun e!92565 () Bool)

(assert (=> d!45001 e!92565))

(declare-fun res!67777 () Bool)

(assert (=> d!45001 (=> (not res!67777) (not e!92565))))

(assert (=> d!45001 (= res!67777 (isStrictlySorted!312 lt!74020))))

(assert (=> d!45001 (= (lemmaContainsTupThenGetReturnValue!91 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!74507)))

(declare-fun b!142048 () Bool)

(declare-fun res!67778 () Bool)

(assert (=> b!142048 (=> (not res!67778) (not e!92565))))

(assert (=> b!142048 (= res!67778 (containsKey!180 lt!74020 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun b!142049 () Bool)

(assert (=> b!142049 (= e!92565 (contains!907 lt!74020 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(assert (= (and d!45001 res!67777) b!142048))

(assert (= (and b!142048 res!67778) b!142049))

(assert (=> d!45001 m!169031))

(declare-fun m!171101 () Bool)

(assert (=> d!45001 m!171101))

(declare-fun m!171103 () Bool)

(assert (=> d!45001 m!171103))

(declare-fun m!171105 () Bool)

(assert (=> b!142048 m!171105))

(declare-fun m!171107 () Bool)

(assert (=> b!142049 m!171107))

(assert (=> d!44175 d!45001))

(declare-fun bm!15724 () Bool)

(declare-fun call!15729 () List!1719)

(declare-fun call!15728 () List!1719)

(assert (=> bm!15724 (= call!15729 call!15728)))

(declare-fun b!142051 () Bool)

(declare-fun e!92567 () List!1719)

(declare-fun e!92569 () List!1719)

(assert (=> b!142051 (= e!92567 e!92569)))

(declare-fun c!26788 () Bool)

(assert (=> b!142051 (= c!26788 (and ((_ is Cons!1715) (toList!858 lt!73256)) (= (_1!1322 (h!2322 (toList!858 lt!73256))) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(declare-fun b!142052 () Bool)

(declare-fun res!67780 () Bool)

(declare-fun e!92566 () Bool)

(assert (=> b!142052 (=> (not res!67780) (not e!92566))))

(declare-fun lt!74508 () List!1719)

(assert (=> b!142052 (= res!67780 (containsKey!180 lt!74508 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun b!142053 () Bool)

(declare-fun c!26786 () Bool)

(assert (=> b!142053 (= c!26786 (and ((_ is Cons!1715) (toList!858 lt!73256)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73256))) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(declare-fun e!92568 () List!1719)

(assert (=> b!142053 (= e!92569 e!92568)))

(declare-fun bm!15725 () Bool)

(declare-fun call!15727 () List!1719)

(assert (=> bm!15725 (= call!15728 call!15727)))

(declare-fun b!142054 () Bool)

(assert (=> b!142054 (= e!92569 call!15728)))

(declare-fun b!142055 () Bool)

(assert (=> b!142055 (= e!92567 call!15727)))

(declare-fun b!142056 () Bool)

(assert (=> b!142056 (= e!92566 (contains!907 lt!74508 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(declare-fun b!142050 () Bool)

(declare-fun e!92570 () List!1719)

(assert (=> b!142050 (= e!92570 (ite c!26788 (t!6295 (toList!858 lt!73256)) (ite c!26786 (Cons!1715 (h!2322 (toList!858 lt!73256)) (t!6295 (toList!858 lt!73256))) Nil!1716)))))

(declare-fun d!45003 () Bool)

(assert (=> d!45003 e!92566))

(declare-fun res!67779 () Bool)

(assert (=> d!45003 (=> (not res!67779) (not e!92566))))

(assert (=> d!45003 (= res!67779 (isStrictlySorted!312 lt!74508))))

(assert (=> d!45003 (= lt!74508 e!92567)))

(declare-fun c!26787 () Bool)

(assert (=> d!45003 (= c!26787 (and ((_ is Cons!1715) (toList!858 lt!73256)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73256))) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(assert (=> d!45003 (isStrictlySorted!312 (toList!858 lt!73256))))

(assert (=> d!45003 (= (insertStrictlySorted!94 (toList!858 lt!73256) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!74508)))

(declare-fun b!142057 () Bool)

(assert (=> b!142057 (= e!92568 call!15729)))

(declare-fun b!142058 () Bool)

(assert (=> b!142058 (= e!92568 call!15729)))

(declare-fun bm!15726 () Bool)

(assert (=> bm!15726 (= call!15727 ($colon$colon!93 e!92570 (ite c!26787 (h!2322 (toList!858 lt!73256)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))))

(declare-fun c!26785 () Bool)

(assert (=> bm!15726 (= c!26785 c!26787)))

(declare-fun b!142059 () Bool)

(assert (=> b!142059 (= e!92570 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73256)) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(assert (= (and d!45003 c!26787) b!142055))

(assert (= (and d!45003 (not c!26787)) b!142051))

(assert (= (and b!142051 c!26788) b!142054))

(assert (= (and b!142051 (not c!26788)) b!142053))

(assert (= (and b!142053 c!26786) b!142057))

(assert (= (and b!142053 (not c!26786)) b!142058))

(assert (= (or b!142057 b!142058) bm!15724))

(assert (= (or b!142054 bm!15724) bm!15725))

(assert (= (or b!142055 bm!15725) bm!15726))

(assert (= (and bm!15726 c!26785) b!142059))

(assert (= (and bm!15726 (not c!26785)) b!142050))

(assert (= (and d!45003 res!67779) b!142052))

(assert (= (and b!142052 res!67780) b!142056))

(declare-fun m!171109 () Bool)

(assert (=> bm!15726 m!171109))

(declare-fun m!171111 () Bool)

(assert (=> d!45003 m!171111))

(declare-fun m!171113 () Bool)

(assert (=> d!45003 m!171113))

(declare-fun m!171115 () Bool)

(assert (=> b!142052 m!171115))

(declare-fun m!171117 () Bool)

(assert (=> b!142059 m!171117))

(declare-fun m!171119 () Bool)

(assert (=> b!142056 m!171119))

(assert (=> d!44175 d!45003))

(declare-fun d!45005 () Bool)

(declare-fun e!92571 () Bool)

(assert (=> d!45005 e!92571))

(declare-fun res!67781 () Bool)

(assert (=> d!45005 (=> res!67781 e!92571)))

(declare-fun lt!74512 () Bool)

(assert (=> d!45005 (= res!67781 (not lt!74512))))

(declare-fun lt!74509 () Bool)

(assert (=> d!45005 (= lt!74512 lt!74509)))

(declare-fun lt!74511 () Unit!4387)

(declare-fun e!92572 () Unit!4387)

(assert (=> d!45005 (= lt!74511 e!92572)))

(declare-fun c!26789 () Bool)

(assert (=> d!45005 (= c!26789 lt!74509)))

(assert (=> d!45005 (= lt!74509 (containsKey!180 (toList!858 lt!73799) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45005 (= (contains!904 lt!73799 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!74512)))

(declare-fun b!142060 () Bool)

(declare-fun lt!74510 () Unit!4387)

(assert (=> b!142060 (= e!92572 lt!74510)))

(assert (=> b!142060 (= lt!74510 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73799) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> b!142060 (isDefined!129 (getValueByKey!177 (toList!858 lt!73799) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142061 () Bool)

(declare-fun Unit!4487 () Unit!4387)

(assert (=> b!142061 (= e!92572 Unit!4487)))

(declare-fun b!142062 () Bool)

(assert (=> b!142062 (= e!92571 (isDefined!129 (getValueByKey!177 (toList!858 lt!73799) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (= (and d!45005 c!26789) b!142060))

(assert (= (and d!45005 (not c!26789)) b!142061))

(assert (= (and d!45005 (not res!67781)) b!142062))

(declare-fun m!171121 () Bool)

(assert (=> d!45005 m!171121))

(declare-fun m!171123 () Bool)

(assert (=> b!142060 m!171123))

(assert (=> b!142060 m!168305))

(assert (=> b!142060 m!168305))

(declare-fun m!171125 () Bool)

(assert (=> b!142060 m!171125))

(assert (=> b!142062 m!168305))

(assert (=> b!142062 m!168305))

(assert (=> b!142062 m!171125))

(assert (=> d!43921 d!45005))

(declare-fun b!142064 () Bool)

(declare-fun e!92573 () Option!183)

(declare-fun e!92574 () Option!183)

(assert (=> b!142064 (= e!92573 e!92574)))

(declare-fun c!26791 () Bool)

(assert (=> b!142064 (= c!26791 (and ((_ is Cons!1715) lt!73798) (not (= (_1!1322 (h!2322 lt!73798)) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun b!142065 () Bool)

(assert (=> b!142065 (= e!92574 (getValueByKey!177 (t!6295 lt!73798) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142063 () Bool)

(assert (=> b!142063 (= e!92573 (Some!182 (_2!1322 (h!2322 lt!73798))))))

(declare-fun b!142066 () Bool)

(assert (=> b!142066 (= e!92574 None!181)))

(declare-fun c!26790 () Bool)

(declare-fun d!45007 () Bool)

(assert (=> d!45007 (= c!26790 (and ((_ is Cons!1715) lt!73798) (= (_1!1322 (h!2322 lt!73798)) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (=> d!45007 (= (getValueByKey!177 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) e!92573)))

(assert (= (and d!45007 c!26790) b!142063))

(assert (= (and d!45007 (not c!26790)) b!142064))

(assert (= (and b!142064 c!26791) b!142065))

(assert (= (and b!142064 (not c!26791)) b!142066))

(declare-fun m!171127 () Bool)

(assert (=> b!142065 m!171127))

(assert (=> d!43921 d!45007))

(declare-fun d!45009 () Bool)

(assert (=> d!45009 (= (getValueByKey!177 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (Some!182 (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun lt!74513 () Unit!4387)

(assert (=> d!45009 (= lt!74513 (choose!873 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92575 () Bool)

(assert (=> d!45009 e!92575))

(declare-fun res!67782 () Bool)

(assert (=> d!45009 (=> (not res!67782) (not e!92575))))

(assert (=> d!45009 (= res!67782 (isStrictlySorted!312 lt!73798))))

(assert (=> d!45009 (= (lemmaContainsTupThenGetReturnValue!91 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!74513)))

(declare-fun b!142067 () Bool)

(declare-fun res!67783 () Bool)

(assert (=> b!142067 (=> (not res!67783) (not e!92575))))

(assert (=> b!142067 (= res!67783 (containsKey!180 lt!73798 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142068 () Bool)

(assert (=> b!142068 (= e!92575 (contains!907 lt!73798 (tuple2!2623 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (= (and d!45009 res!67782) b!142067))

(assert (= (and b!142067 res!67783) b!142068))

(assert (=> d!45009 m!168299))

(declare-fun m!171129 () Bool)

(assert (=> d!45009 m!171129))

(declare-fun m!171131 () Bool)

(assert (=> d!45009 m!171131))

(declare-fun m!171133 () Bool)

(assert (=> b!142067 m!171133))

(declare-fun m!171135 () Bool)

(assert (=> b!142068 m!171135))

(assert (=> d!43921 d!45009))

(declare-fun bm!15727 () Bool)

(declare-fun call!15732 () List!1719)

(declare-fun call!15731 () List!1719)

(assert (=> bm!15727 (= call!15732 call!15731)))

(declare-fun b!142070 () Bool)

(declare-fun e!92577 () List!1719)

(declare-fun e!92579 () List!1719)

(assert (=> b!142070 (= e!92577 e!92579)))

(declare-fun c!26795 () Bool)

(assert (=> b!142070 (= c!26795 (and ((_ is Cons!1715) (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (= (_1!1322 (h!2322 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142071 () Bool)

(declare-fun res!67785 () Bool)

(declare-fun e!92576 () Bool)

(assert (=> b!142071 (=> (not res!67785) (not e!92576))))

(declare-fun lt!74514 () List!1719)

(assert (=> b!142071 (= res!67785 (containsKey!180 lt!74514 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun c!26793 () Bool)

(declare-fun b!142072 () Bool)

(assert (=> b!142072 (= c!26793 (and ((_ is Cons!1715) (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (bvsgt (_1!1322 (h!2322 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun e!92578 () List!1719)

(assert (=> b!142072 (= e!92579 e!92578)))

(declare-fun bm!15728 () Bool)

(declare-fun call!15730 () List!1719)

(assert (=> bm!15728 (= call!15731 call!15730)))

(declare-fun b!142073 () Bool)

(assert (=> b!142073 (= e!92579 call!15731)))

(declare-fun b!142074 () Bool)

(assert (=> b!142074 (= e!92577 call!15730)))

(declare-fun b!142075 () Bool)

(assert (=> b!142075 (= e!92576 (contains!907 lt!74514 (tuple2!2623 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun e!92580 () List!1719)

(declare-fun b!142069 () Bool)

(assert (=> b!142069 (= e!92580 (ite c!26795 (t!6295 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (ite c!26793 (Cons!1715 (h!2322 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (t!6295 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))))) Nil!1716)))))

(declare-fun d!45011 () Bool)

(assert (=> d!45011 e!92576))

(declare-fun res!67784 () Bool)

(assert (=> d!45011 (=> (not res!67784) (not e!92576))))

(assert (=> d!45011 (= res!67784 (isStrictlySorted!312 lt!74514))))

(assert (=> d!45011 (= lt!74514 e!92577)))

(declare-fun c!26794 () Bool)

(assert (=> d!45011 (= c!26794 (and ((_ is Cons!1715) (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (bvslt (_1!1322 (h!2322 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (=> d!45011 (isStrictlySorted!312 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))))))

(assert (=> d!45011 (= (insertStrictlySorted!94 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!74514)))

(declare-fun b!142076 () Bool)

(assert (=> b!142076 (= e!92578 call!15732)))

(declare-fun b!142077 () Bool)

(assert (=> b!142077 (= e!92578 call!15732)))

(declare-fun bm!15729 () Bool)

(assert (=> bm!15729 (= call!15730 ($colon$colon!93 e!92580 (ite c!26794 (h!2322 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (tuple2!2623 (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun c!26792 () Bool)

(assert (=> bm!15729 (= c!26792 c!26794)))

(declare-fun b!142078 () Bool)

(assert (=> b!142078 (= e!92580 (insertStrictlySorted!94 (t!6295 (toList!858 (ite c!26191 call!15506 (ite c!26192 call!15505 call!15507)))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45011 c!26794) b!142074))

(assert (= (and d!45011 (not c!26794)) b!142070))

(assert (= (and b!142070 c!26795) b!142073))

(assert (= (and b!142070 (not c!26795)) b!142072))

(assert (= (and b!142072 c!26793) b!142076))

(assert (= (and b!142072 (not c!26793)) b!142077))

(assert (= (or b!142076 b!142077) bm!15727))

(assert (= (or b!142073 bm!15727) bm!15728))

(assert (= (or b!142074 bm!15728) bm!15729))

(assert (= (and bm!15729 c!26792) b!142078))

(assert (= (and bm!15729 (not c!26792)) b!142069))

(assert (= (and d!45011 res!67784) b!142071))

(assert (= (and b!142071 res!67785) b!142075))

(declare-fun m!171137 () Bool)

(assert (=> bm!15729 m!171137))

(declare-fun m!171139 () Bool)

(assert (=> d!45011 m!171139))

(declare-fun m!171141 () Bool)

(assert (=> d!45011 m!171141))

(declare-fun m!171143 () Bool)

(assert (=> b!142071 m!171143))

(declare-fun m!171145 () Bool)

(assert (=> b!142078 m!171145))

(declare-fun m!171147 () Bool)

(assert (=> b!142075 m!171147))

(assert (=> d!43921 d!45011))

(assert (=> b!140276 d!43693))

(declare-fun d!45013 () Bool)

(declare-fun res!67786 () Bool)

(declare-fun e!92581 () Bool)

(assert (=> d!45013 (=> res!67786 e!92581)))

(assert (=> d!45013 (= res!67786 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))))) lt!73450)))))

(assert (=> d!45013 (= (containsKey!180 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450) e!92581)))

(declare-fun b!142079 () Bool)

(declare-fun e!92582 () Bool)

(assert (=> b!142079 (= e!92581 e!92582)))

(declare-fun res!67787 () Bool)

(assert (=> b!142079 (=> (not res!67787) (not e!92582))))

(assert (=> b!142079 (= res!67787 (and (or (not ((_ is Cons!1715) (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))))) (bvsle (_1!1322 (h!2322 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))))) lt!73450)) ((_ is Cons!1715) (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))) (bvslt (_1!1322 (h!2322 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))))) lt!73450)))))

(declare-fun b!142080 () Bool)

(assert (=> b!142080 (= e!92582 (containsKey!180 (t!6295 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))) lt!73450))))

(assert (= (and d!45013 (not res!67786)) b!142079))

(assert (= (and b!142079 res!67787) b!142080))

(declare-fun m!171149 () Bool)

(assert (=> b!142080 m!171149))

(assert (=> d!43931 d!45013))

(declare-fun d!45015 () Bool)

(assert (=> d!45015 (= (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319)) (not (isEmpty!423 (getValueByKey!177 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))))

(declare-fun bs!5997 () Bool)

(assert (= bs!5997 d!45015))

(assert (=> bs!5997 m!168657))

(declare-fun m!171151 () Bool)

(assert (=> bs!5997 m!171151))

(assert (=> b!140900 d!45015))

(declare-fun b!142082 () Bool)

(declare-fun e!92583 () Option!183)

(declare-fun e!92584 () Option!183)

(assert (=> b!142082 (= e!92583 e!92584)))

(declare-fun c!26797 () Bool)

(assert (=> b!142082 (= c!26797 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73319))))))

(declare-fun b!142083 () Bool)

(assert (=> b!142083 (= e!92584 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) lt!73319))))

(declare-fun b!142081 () Bool)

(assert (=> b!142081 (= e!92583 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))))

(declare-fun b!142084 () Bool)

(assert (=> b!142084 (= e!92584 None!181)))

(declare-fun c!26796 () Bool)

(declare-fun d!45017 () Bool)

(assert (=> d!45017 (= c!26796 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73319)))))

(assert (=> d!45017 (= (getValueByKey!177 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319) e!92583)))

(assert (= (and d!45017 c!26796) b!142081))

(assert (= (and d!45017 (not c!26796)) b!142082))

(assert (= (and b!142082 c!26797) b!142083))

(assert (= (and b!142082 (not c!26797)) b!142084))

(declare-fun m!171153 () Bool)

(assert (=> b!142083 m!171153))

(assert (=> b!140900 d!45017))

(declare-fun d!45019 () Bool)

(declare-fun res!67788 () Bool)

(declare-fun e!92585 () Bool)

(assert (=> d!45019 (=> res!67788 e!92585)))

(assert (=> d!45019 (= res!67788 (= (select (arr!2306 lt!73414) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!45019 (= (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!92585)))

(declare-fun b!142085 () Bool)

(declare-fun e!92586 () Bool)

(assert (=> b!142085 (= e!92585 e!92586)))

(declare-fun res!67789 () Bool)

(assert (=> b!142085 (=> (not res!67789) (not e!92586))))

(assert (=> b!142085 (= res!67789 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 lt!73414)))))

(declare-fun b!142086 () Bool)

(assert (=> b!142086 (= e!92586 (arrayContainsKey!0 lt!73414 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45019 (not res!67788)) b!142085))

(assert (= (and b!142085 res!67789) b!142086))

(declare-fun m!171155 () Bool)

(assert (=> d!45019 m!171155))

(assert (=> b!142086 m!166633))

(declare-fun m!171157 () Bool)

(assert (=> b!142086 m!171157))

(assert (=> b!140606 d!45019))

(declare-fun d!45021 () Bool)

(assert (=> d!45021 (isDefined!129 (getValueByKey!177 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74515 () Unit!4387)

(assert (=> d!45021 (= lt!74515 (choose!864 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92587 () Bool)

(assert (=> d!45021 e!92587))

(declare-fun res!67790 () Bool)

(assert (=> d!45021 (=> (not res!67790) (not e!92587))))

(assert (=> d!45021 (= res!67790 (isStrictlySorted!312 (toList!858 lt!73237)))))

(assert (=> d!45021 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74515)))

(declare-fun b!142087 () Bool)

(assert (=> b!142087 (= e!92587 (containsKey!180 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45021 res!67790) b!142087))

(assert (=> d!45021 m!168311))

(assert (=> d!45021 m!168311))

(assert (=> d!45021 m!168559))

(declare-fun m!171159 () Bool)

(assert (=> d!45021 m!171159))

(assert (=> d!45021 m!169545))

(assert (=> b!142087 m!168555))

(assert (=> b!140872 d!45021))

(assert (=> b!140872 d!44825))

(assert (=> b!140872 d!44601))

(declare-fun d!45023 () Bool)

(declare-fun e!92588 () Bool)

(assert (=> d!45023 e!92588))

(declare-fun res!67791 () Bool)

(assert (=> d!45023 (=> (not res!67791) (not e!92588))))

(declare-fun lt!74518 () ListLongMap!1685)

(assert (=> d!45023 (= res!67791 (contains!904 lt!74518 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74517 () List!1719)

(assert (=> d!45023 (= lt!74518 (ListLongMap!1686 lt!74517))))

(declare-fun lt!74516 () Unit!4387)

(declare-fun lt!74519 () Unit!4387)

(assert (=> d!45023 (= lt!74516 lt!74519)))

(assert (=> d!45023 (= (getValueByKey!177 lt!74517 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45023 (= lt!74519 (lemmaContainsTupThenGetReturnValue!91 lt!74517 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45023 (= lt!74517 (insertStrictlySorted!94 (toList!858 call!15614) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45023 (= (+!173 call!15614 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74518)))

(declare-fun b!142088 () Bool)

(declare-fun res!67792 () Bool)

(assert (=> b!142088 (=> (not res!67792) (not e!92588))))

(assert (=> b!142088 (= res!67792 (= (getValueByKey!177 (toList!858 lt!74518) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142089 () Bool)

(assert (=> b!142089 (= e!92588 (contains!907 (toList!858 lt!74518) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45023 res!67791) b!142088))

(assert (= (and b!142088 res!67792) b!142089))

(declare-fun m!171161 () Bool)

(assert (=> d!45023 m!171161))

(declare-fun m!171163 () Bool)

(assert (=> d!45023 m!171163))

(declare-fun m!171165 () Bool)

(assert (=> d!45023 m!171165))

(declare-fun m!171167 () Bool)

(assert (=> d!45023 m!171167))

(declare-fun m!171169 () Bool)

(assert (=> b!142088 m!171169))

(declare-fun m!171171 () Bool)

(assert (=> b!142089 m!171171))

(assert (=> b!140702 d!45023))

(declare-fun d!45025 () Bool)

(declare-fun res!67793 () Bool)

(declare-fun e!92589 () Bool)

(assert (=> d!45025 (=> res!67793 e!92589)))

(assert (=> d!45025 (= res!67793 (and ((_ is Cons!1715) (toList!858 lt!73203)) (= (_1!1322 (h!2322 (toList!858 lt!73203))) lt!73202)))))

(assert (=> d!45025 (= (containsKey!180 (toList!858 lt!73203) lt!73202) e!92589)))

(declare-fun b!142090 () Bool)

(declare-fun e!92590 () Bool)

(assert (=> b!142090 (= e!92589 e!92590)))

(declare-fun res!67794 () Bool)

(assert (=> b!142090 (=> (not res!67794) (not e!92590))))

(assert (=> b!142090 (= res!67794 (and (or (not ((_ is Cons!1715) (toList!858 lt!73203))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73203))) lt!73202)) ((_ is Cons!1715) (toList!858 lt!73203)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73203))) lt!73202)))))

(declare-fun b!142091 () Bool)

(assert (=> b!142091 (= e!92590 (containsKey!180 (t!6295 (toList!858 lt!73203)) lt!73202))))

(assert (= (and d!45025 (not res!67793)) b!142090))

(assert (= (and b!142090 res!67794) b!142091))

(declare-fun m!171173 () Bool)

(assert (=> b!142091 m!171173))

(assert (=> d!43771 d!45025))

(declare-fun d!45027 () Bool)

(assert (=> d!45027 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5998 () Bool)

(assert (= bs!5998 d!45027))

(assert (=> bs!5998 m!168787))

(declare-fun m!171175 () Bool)

(assert (=> bs!5998 m!171175))

(assert (=> b!141029 d!45027))

(declare-fun b!142093 () Bool)

(declare-fun e!92591 () Option!183)

(declare-fun e!92592 () Option!183)

(assert (=> b!142093 (= e!92591 e!92592)))

(declare-fun c!26799 () Bool)

(assert (=> b!142093 (= c!26799 (and ((_ is Cons!1715) (toList!858 lt!73309)) (not (= (_1!1322 (h!2322 (toList!858 lt!73309))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!142094 () Bool)

(assert (=> b!142094 (= e!92592 (getValueByKey!177 (t!6295 (toList!858 lt!73309)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142092 () Bool)

(assert (=> b!142092 (= e!92591 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73309)))))))

(declare-fun b!142095 () Bool)

(assert (=> b!142095 (= e!92592 None!181)))

(declare-fun d!45029 () Bool)

(declare-fun c!26798 () Bool)

(assert (=> d!45029 (= c!26798 (and ((_ is Cons!1715) (toList!858 lt!73309)) (= (_1!1322 (h!2322 (toList!858 lt!73309))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45029 (= (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) e!92591)))

(assert (= (and d!45029 c!26798) b!142092))

(assert (= (and d!45029 (not c!26798)) b!142093))

(assert (= (and b!142093 c!26799) b!142094))

(assert (= (and b!142093 (not c!26799)) b!142095))

(assert (=> b!142094 m!166927))

(declare-fun m!171177 () Bool)

(assert (=> b!142094 m!171177))

(assert (=> b!141029 d!45029))

(assert (=> d!44061 d!44059))

(declare-fun d!45031 () Bool)

(assert (=> d!45031 (= (getValueByKey!177 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (Some!182 (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45031 true))

(declare-fun _$22!495 () Unit!4387)

(assert (=> d!45031 (= (choose!873 lt!73274 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) _$22!495)))

(declare-fun bs!5999 () Bool)

(assert (= bs!5999 d!45031))

(assert (=> bs!5999 m!167047))

(assert (=> d!44061 d!45031))

(declare-fun d!45033 () Bool)

(declare-fun res!67795 () Bool)

(declare-fun e!92593 () Bool)

(assert (=> d!45033 (=> res!67795 e!92593)))

(assert (=> d!45033 (= res!67795 (or ((_ is Nil!1716) lt!73274) ((_ is Nil!1716) (t!6295 lt!73274))))))

(assert (=> d!45033 (= (isStrictlySorted!312 lt!73274) e!92593)))

(declare-fun b!142096 () Bool)

(declare-fun e!92594 () Bool)

(assert (=> b!142096 (= e!92593 e!92594)))

(declare-fun res!67796 () Bool)

(assert (=> b!142096 (=> (not res!67796) (not e!92594))))

(assert (=> b!142096 (= res!67796 (bvslt (_1!1322 (h!2322 lt!73274)) (_1!1322 (h!2322 (t!6295 lt!73274)))))))

(declare-fun b!142097 () Bool)

(assert (=> b!142097 (= e!92594 (isStrictlySorted!312 (t!6295 lt!73274)))))

(assert (= (and d!45033 (not res!67795)) b!142096))

(assert (= (and b!142096 res!67796) b!142097))

(declare-fun m!171179 () Bool)

(assert (=> b!142097 m!171179))

(assert (=> d!44061 d!45033))

(declare-fun d!45035 () Bool)

(assert (=> d!45035 (= (inRange!0 (ite c!26291 (index!3255 lt!73584) (index!3258 lt!73584)) (mask!7279 newMap!16)) (and (bvsge (ite c!26291 (index!3255 lt!73584) (index!3258 lt!73584)) #b00000000000000000000000000000000) (bvslt (ite c!26291 (index!3255 lt!73584) (index!3258 lt!73584)) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15564 d!45035))

(declare-fun d!45037 () Bool)

(assert (=> d!45037 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73840 #b00000000000000000000000000000000)))

(declare-fun lt!74520 () Unit!4387)

(assert (=> d!45037 (= lt!74520 (choose!13 (_keys!4698 newMap!16) lt!73840 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!45037 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!45037 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 newMap!16) lt!73840 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!74520)))

(declare-fun bs!6000 () Bool)

(assert (= bs!6000 d!45037))

(assert (=> bs!6000 m!168443))

(declare-fun m!171181 () Bool)

(assert (=> bs!6000 m!171181))

(assert (=> b!140801 d!45037))

(declare-fun d!45039 () Bool)

(declare-fun res!67797 () Bool)

(declare-fun e!92595 () Bool)

(assert (=> d!45039 (=> res!67797 e!92595)))

(assert (=> d!45039 (= res!67797 (= (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) lt!73840))))

(assert (=> d!45039 (= (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73840 #b00000000000000000000000000000000) e!92595)))

(declare-fun b!142098 () Bool)

(declare-fun e!92596 () Bool)

(assert (=> b!142098 (= e!92595 e!92596)))

(declare-fun res!67798 () Bool)

(assert (=> b!142098 (=> (not res!67798) (not e!92596))))

(assert (=> b!142098 (= res!67798 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!142099 () Bool)

(assert (=> b!142099 (= e!92596 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73840 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!45039 (not res!67797)) b!142098))

(assert (= (and b!142098 res!67798) b!142099))

(assert (=> d!45039 m!166927))

(declare-fun m!171183 () Bool)

(assert (=> b!142099 m!171183))

(assert (=> b!140801 d!45039))

(declare-fun b!142100 () Bool)

(declare-fun e!92597 () SeekEntryResult!273)

(declare-fun e!92598 () SeekEntryResult!273)

(assert (=> b!142100 (= e!92597 e!92598)))

(declare-fun lt!74523 () (_ BitVec 64))

(declare-fun lt!74522 () SeekEntryResult!273)

(assert (=> b!142100 (= lt!74523 (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74522)))))

(declare-fun c!26801 () Bool)

(assert (=> b!142100 (= c!26801 (= lt!74523 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142101 () Bool)

(declare-fun c!26800 () Bool)

(assert (=> b!142101 (= c!26800 (= lt!74523 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92599 () SeekEntryResult!273)

(assert (=> b!142101 (= e!92598 e!92599)))

(declare-fun b!142102 () Bool)

(assert (=> b!142102 (= e!92597 Undefined!273)))

(declare-fun d!45041 () Bool)

(declare-fun lt!74521 () SeekEntryResult!273)

(assert (=> d!45041 (and (or ((_ is Undefined!273) lt!74521) (not ((_ is Found!273) lt!74521)) (and (bvsge (index!3256 lt!74521) #b00000000000000000000000000000000) (bvslt (index!3256 lt!74521) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74521) ((_ is Found!273) lt!74521) (not ((_ is MissingZero!273) lt!74521)) (and (bvsge (index!3255 lt!74521) #b00000000000000000000000000000000) (bvslt (index!3255 lt!74521) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74521) ((_ is Found!273) lt!74521) ((_ is MissingZero!273) lt!74521) (not ((_ is MissingVacant!273) lt!74521)) (and (bvsge (index!3258 lt!74521) #b00000000000000000000000000000000) (bvslt (index!3258 lt!74521) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74521) (ite ((_ is Found!273) lt!74521) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!74521)) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!273) lt!74521) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3255 lt!74521)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!273) lt!74521) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!74521)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45041 (= lt!74521 e!92597)))

(declare-fun c!26802 () Bool)

(assert (=> d!45041 (= c!26802 (and ((_ is Intermediate!273) lt!74522) (undefined!1085 lt!74522)))))

(assert (=> d!45041 (= lt!74522 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(assert (=> d!45041 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45041 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!74521)))

(declare-fun b!142103 () Bool)

(assert (=> b!142103 (= e!92599 (MissingZero!273 (index!3257 lt!74522)))))

(declare-fun b!142104 () Bool)

(assert (=> b!142104 (= e!92599 (seekKeyOrZeroReturnVacant!0 (x!16130 lt!74522) (index!3257 lt!74522) (index!3257 lt!74522) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!142105 () Bool)

(assert (=> b!142105 (= e!92598 (Found!273 (index!3257 lt!74522)))))

(assert (= (and d!45041 c!26802) b!142102))

(assert (= (and d!45041 (not c!26802)) b!142100))

(assert (= (and b!142100 c!26801) b!142105))

(assert (= (and b!142100 (not c!26801)) b!142101))

(assert (= (and b!142101 c!26800) b!142103))

(assert (= (and b!142101 (not c!26800)) b!142104))

(declare-fun m!171185 () Bool)

(assert (=> b!142100 m!171185))

(assert (=> d!45041 m!168135))

(declare-fun m!171187 () Bool)

(assert (=> d!45041 m!171187))

(assert (=> d!45041 m!171187))

(assert (=> d!45041 m!168135))

(declare-fun m!171189 () Bool)

(assert (=> d!45041 m!171189))

(assert (=> d!45041 m!166907))

(declare-fun m!171191 () Bool)

(assert (=> d!45041 m!171191))

(declare-fun m!171193 () Bool)

(assert (=> d!45041 m!171193))

(declare-fun m!171195 () Bool)

(assert (=> d!45041 m!171195))

(assert (=> b!142104 m!168135))

(declare-fun m!171197 () Bool)

(assert (=> b!142104 m!171197))

(assert (=> b!140801 d!45041))

(assert (=> b!141087 d!44487))

(declare-fun b!142106 () Bool)

(declare-fun e!92602 () SeekEntryResult!273)

(assert (=> b!142106 (= e!92602 (MissingVacant!273 (index!3257 lt!73580)))))

(declare-fun b!142107 () Bool)

(assert (=> b!142107 (= e!92602 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16130 lt!73580) #b00000000000000000000000000000001) (nextIndex!0 (index!3257 lt!73580) (bvadd (x!16130 lt!73580) #b00000000000000000000000000000001) (mask!7279 newMap!16)) (index!3257 lt!73580) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!142108 () Bool)

(declare-fun e!92600 () SeekEntryResult!273)

(assert (=> b!142108 (= e!92600 Undefined!273)))

(declare-fun b!142109 () Bool)

(declare-fun e!92601 () SeekEntryResult!273)

(assert (=> b!142109 (= e!92601 (Found!273 (index!3257 lt!73580)))))

(declare-fun d!45043 () Bool)

(declare-fun lt!74524 () SeekEntryResult!273)

(assert (=> d!45043 (and (or ((_ is Undefined!273) lt!74524) (not ((_ is Found!273) lt!74524)) (and (bvsge (index!3256 lt!74524) #b00000000000000000000000000000000) (bvslt (index!3256 lt!74524) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74524) ((_ is Found!273) lt!74524) (not ((_ is MissingVacant!273) lt!74524)) (not (= (index!3258 lt!74524) (index!3257 lt!73580))) (and (bvsge (index!3258 lt!74524) #b00000000000000000000000000000000) (bvslt (index!3258 lt!74524) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74524) (ite ((_ is Found!273) lt!74524) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!74524)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!273) lt!74524) (= (index!3258 lt!74524) (index!3257 lt!73580)) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!74524)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!45043 (= lt!74524 e!92600)))

(declare-fun c!26803 () Bool)

(assert (=> d!45043 (= c!26803 (bvsge (x!16130 lt!73580) #b01111111111111111111111111111110))))

(declare-fun lt!74525 () (_ BitVec 64))

(assert (=> d!45043 (= lt!74525 (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!73580)))))

(assert (=> d!45043 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45043 (= (seekKeyOrZeroReturnVacant!0 (x!16130 lt!73580) (index!3257 lt!73580) (index!3257 lt!73580) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!74524)))

(declare-fun b!142110 () Bool)

(declare-fun c!26804 () Bool)

(assert (=> b!142110 (= c!26804 (= lt!74525 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142110 (= e!92601 e!92602)))

(declare-fun b!142111 () Bool)

(assert (=> b!142111 (= e!92600 e!92601)))

(declare-fun c!26805 () Bool)

(assert (=> b!142111 (= c!26805 (= lt!74525 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45043 c!26803) b!142108))

(assert (= (and d!45043 (not c!26803)) b!142111))

(assert (= (and b!142111 c!26805) b!142109))

(assert (= (and b!142111 (not c!26805)) b!142110))

(assert (= (and b!142110 c!26804) b!142106))

(assert (= (and b!142110 (not c!26804)) b!142107))

(declare-fun m!171199 () Bool)

(assert (=> b!142107 m!171199))

(assert (=> b!142107 m!171199))

(assert (=> b!142107 m!166927))

(declare-fun m!171201 () Bool)

(assert (=> b!142107 m!171201))

(declare-fun m!171203 () Bool)

(assert (=> d!45043 m!171203))

(declare-fun m!171205 () Bool)

(assert (=> d!45043 m!171205))

(assert (=> d!45043 m!167691))

(assert (=> d!45043 m!166907))

(assert (=> b!140337 d!45043))

(declare-fun d!45045 () Bool)

(declare-fun res!67799 () Bool)

(declare-fun e!92603 () Bool)

(assert (=> d!45045 (=> res!67799 e!92603)))

(assert (=> d!45045 (= res!67799 (and ((_ is Cons!1715) (toList!858 lt!73268)) (= (_1!1322 (h!2322 (toList!858 lt!73268))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45045 (= (containsKey!180 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92603)))

(declare-fun b!142112 () Bool)

(declare-fun e!92604 () Bool)

(assert (=> b!142112 (= e!92603 e!92604)))

(declare-fun res!67800 () Bool)

(assert (=> b!142112 (=> (not res!67800) (not e!92604))))

(assert (=> b!142112 (= res!67800 (and (or (not ((_ is Cons!1715) (toList!858 lt!73268))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73268))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1715) (toList!858 lt!73268)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73268))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142113 () Bool)

(assert (=> b!142113 (= e!92604 (containsKey!180 (t!6295 (toList!858 lt!73268)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45045 (not res!67799)) b!142112))

(assert (= (and b!142112 res!67800) b!142113))

(declare-fun m!171207 () Bool)

(assert (=> b!142113 m!171207))

(assert (=> d!43997 d!45045))

(declare-fun b!142114 () Bool)

(declare-fun res!67802 () Bool)

(declare-fun e!92610 () Bool)

(assert (=> b!142114 (=> (not res!67802) (not e!92610))))

(declare-fun lt!74528 () ListLongMap!1685)

(assert (=> b!142114 (= res!67802 (not (contains!904 lt!74528 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142115 () Bool)

(declare-fun e!92606 () Bool)

(assert (=> b!142115 (= e!92610 e!92606)))

(declare-fun c!26806 () Bool)

(declare-fun e!92608 () Bool)

(assert (=> b!142115 (= c!26806 e!92608)))

(declare-fun res!67803 () Bool)

(assert (=> b!142115 (=> (not res!67803) (not e!92608))))

(assert (=> b!142115 (= res!67803 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!142116 () Bool)

(declare-fun e!92607 () Bool)

(assert (=> b!142116 (= e!92607 (= lt!74528 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(declare-fun b!142117 () Bool)

(declare-fun lt!74530 () Unit!4387)

(declare-fun lt!74526 () Unit!4387)

(assert (=> b!142117 (= lt!74530 lt!74526)))

(declare-fun lt!74529 () ListLongMap!1685)

(declare-fun lt!74531 () V!3553)

(declare-fun lt!74532 () (_ BitVec 64))

(declare-fun lt!74527 () (_ BitVec 64))

(assert (=> b!142117 (not (contains!904 (+!173 lt!74529 (tuple2!2623 lt!74527 lt!74531)) lt!74532))))

(assert (=> b!142117 (= lt!74526 (addStillNotContains!66 lt!74529 lt!74527 lt!74531 lt!74532))))

(assert (=> b!142117 (= lt!74532 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142117 (= lt!74531 (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142117 (= lt!74527 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15733 () ListLongMap!1685)

(assert (=> b!142117 (= lt!74529 call!15733)))

(declare-fun e!92611 () ListLongMap!1685)

(assert (=> b!142117 (= e!92611 (+!173 call!15733 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142118 () Bool)

(declare-fun e!92605 () Bool)

(assert (=> b!142118 (= e!92606 e!92605)))

(assert (=> b!142118 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!67804 () Bool)

(assert (=> b!142118 (= res!67804 (contains!904 lt!74528 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142118 (=> (not res!67804) (not e!92605))))

(declare-fun d!45047 () Bool)

(assert (=> d!45047 e!92610))

(declare-fun res!67801 () Bool)

(assert (=> d!45047 (=> (not res!67801) (not e!92610))))

(assert (=> d!45047 (= res!67801 (not (contains!904 lt!74528 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92609 () ListLongMap!1685)

(assert (=> d!45047 (= lt!74528 e!92609)))

(declare-fun c!26809 () Bool)

(assert (=> d!45047 (= c!26809 (bvsge #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!45047 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45047 (= (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74528)))

(declare-fun bm!15730 () Bool)

(assert (=> bm!15730 (= call!15733 (getCurrentListMapNoExtraKeys!140 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) lt!73129 (zeroValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!142119 () Bool)

(assert (=> b!142119 (= e!92611 call!15733)))

(declare-fun b!142120 () Bool)

(assert (=> b!142120 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!142120 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2579 (_values!2922 newMap!16))))))

(assert (=> b!142120 (= e!92605 (= (apply!120 lt!74528 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142121 () Bool)

(assert (=> b!142121 (= e!92607 (isEmpty!424 lt!74528))))

(declare-fun b!142122 () Bool)

(assert (=> b!142122 (= e!92609 e!92611)))

(declare-fun c!26807 () Bool)

(assert (=> b!142122 (= c!26807 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142123 () Bool)

(assert (=> b!142123 (= e!92608 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142123 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!142124 () Bool)

(assert (=> b!142124 (= e!92606 e!92607)))

(declare-fun c!26808 () Bool)

(assert (=> b!142124 (= c!26808 (bvslt #b00000000000000000000000000000000 (size!2578 (_keys!4698 newMap!16))))))

(declare-fun b!142125 () Bool)

(assert (=> b!142125 (= e!92609 (ListLongMap!1686 Nil!1716))))

(assert (= (and d!45047 c!26809) b!142125))

(assert (= (and d!45047 (not c!26809)) b!142122))

(assert (= (and b!142122 c!26807) b!142117))

(assert (= (and b!142122 (not c!26807)) b!142119))

(assert (= (or b!142117 b!142119) bm!15730))

(assert (= (and d!45047 res!67801) b!142114))

(assert (= (and b!142114 res!67802) b!142115))

(assert (= (and b!142115 res!67803) b!142123))

(assert (= (and b!142115 c!26806) b!142118))

(assert (= (and b!142115 (not c!26806)) b!142124))

(assert (= (and b!142118 res!67804) b!142120))

(assert (= (and b!142124 c!26808) b!142116))

(assert (= (and b!142124 (not c!26808)) b!142121))

(declare-fun b_lambda!6391 () Bool)

(assert (=> (not b_lambda!6391) (not b!142117)))

(assert (=> b!142117 t!6309))

(declare-fun b_and!8909 () Bool)

(assert (= b_and!8905 (and (=> t!6309 result!4187) b_and!8909)))

(assert (=> b!142117 t!6311))

(declare-fun b_and!8911 () Bool)

(assert (= b_and!8907 (and (=> t!6311 result!4189) b_and!8911)))

(declare-fun b_lambda!6393 () Bool)

(assert (=> (not b_lambda!6393) (not b!142120)))

(assert (=> b!142120 t!6309))

(declare-fun b_and!8913 () Bool)

(assert (= b_and!8909 (and (=> t!6309 result!4187) b_and!8913)))

(assert (=> b!142120 t!6311))

(declare-fun b_and!8915 () Bool)

(assert (= b_and!8911 (and (=> t!6311 result!4189) b_and!8915)))

(assert (=> b!142117 m!166927))

(declare-fun m!171209 () Bool)

(assert (=> b!142117 m!171209))

(declare-fun m!171211 () Bool)

(assert (=> b!142117 m!171211))

(assert (=> b!142117 m!166963))

(assert (=> b!142117 m!171209))

(declare-fun m!171213 () Bool)

(assert (=> b!142117 m!171213))

(assert (=> b!142117 m!167015))

(assert (=> b!142117 m!167015))

(assert (=> b!142117 m!166963))

(assert (=> b!142117 m!167017))

(declare-fun m!171215 () Bool)

(assert (=> b!142117 m!171215))

(assert (=> b!142123 m!166927))

(assert (=> b!142123 m!166927))

(assert (=> b!142123 m!166957))

(assert (=> b!142116 m!166663))

(declare-fun m!171217 () Bool)

(assert (=> b!142116 m!171217))

(assert (=> b!142120 m!166927))

(assert (=> b!142120 m!166963))

(assert (=> b!142120 m!167015))

(assert (=> b!142120 m!167015))

(assert (=> b!142120 m!166963))

(assert (=> b!142120 m!167017))

(assert (=> b!142120 m!166927))

(declare-fun m!171219 () Bool)

(assert (=> b!142120 m!171219))

(declare-fun m!171221 () Bool)

(assert (=> b!142114 m!171221))

(declare-fun m!171223 () Bool)

(assert (=> d!45047 m!171223))

(assert (=> d!45047 m!166907))

(declare-fun m!171225 () Bool)

(assert (=> b!142121 m!171225))

(assert (=> b!142118 m!166927))

(assert (=> b!142118 m!166927))

(declare-fun m!171227 () Bool)

(assert (=> b!142118 m!171227))

(assert (=> b!142122 m!166927))

(assert (=> b!142122 m!166927))

(assert (=> b!142122 m!166957))

(assert (=> bm!15730 m!166663))

(assert (=> bm!15730 m!171217))

(assert (=> bm!15611 d!45047))

(declare-fun d!45049 () Bool)

(assert (=> d!45049 (= (apply!120 lt!73514 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73514) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6001 () Bool)

(assert (= bs!6001 d!45049))

(declare-fun m!171229 () Bool)

(assert (=> bs!6001 m!171229))

(assert (=> bs!6001 m!171229))

(declare-fun m!171231 () Bool)

(assert (=> bs!6001 m!171231))

(assert (=> b!140264 d!45049))

(assert (=> b!140604 d!44927))

(assert (=> b!140604 d!44929))

(declare-fun d!45051 () Bool)

(declare-fun e!92612 () Bool)

(assert (=> d!45051 e!92612))

(declare-fun res!67805 () Bool)

(assert (=> d!45051 (=> res!67805 e!92612)))

(declare-fun lt!74536 () Bool)

(assert (=> d!45051 (= res!67805 (not lt!74536))))

(declare-fun lt!74533 () Bool)

(assert (=> d!45051 (= lt!74536 lt!74533)))

(declare-fun lt!74535 () Unit!4387)

(declare-fun e!92613 () Unit!4387)

(assert (=> d!45051 (= lt!74535 e!92613)))

(declare-fun c!26810 () Bool)

(assert (=> d!45051 (= c!26810 lt!74533)))

(assert (=> d!45051 (= lt!74533 (containsKey!180 (toList!858 lt!73770) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45051 (= (contains!904 lt!73770 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74536)))

(declare-fun b!142126 () Bool)

(declare-fun lt!74534 () Unit!4387)

(assert (=> b!142126 (= e!92613 lt!74534)))

(assert (=> b!142126 (= lt!74534 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73770) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142126 (isDefined!129 (getValueByKey!177 (toList!858 lt!73770) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142127 () Bool)

(declare-fun Unit!4488 () Unit!4387)

(assert (=> b!142127 (= e!92613 Unit!4488)))

(declare-fun b!142128 () Bool)

(assert (=> b!142128 (= e!92612 (isDefined!129 (getValueByKey!177 (toList!858 lt!73770) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45051 c!26810) b!142126))

(assert (= (and d!45051 (not c!26810)) b!142127))

(assert (= (and d!45051 (not res!67805)) b!142128))

(assert (=> d!45051 m!166927))

(declare-fun m!171233 () Bool)

(assert (=> d!45051 m!171233))

(assert (=> b!142126 m!166927))

(declare-fun m!171235 () Bool)

(assert (=> b!142126 m!171235))

(assert (=> b!142126 m!166927))

(assert (=> b!142126 m!170387))

(assert (=> b!142126 m!170387))

(declare-fun m!171237 () Bool)

(assert (=> b!142126 m!171237))

(assert (=> b!142128 m!166927))

(assert (=> b!142128 m!170387))

(assert (=> b!142128 m!170387))

(assert (=> b!142128 m!171237))

(assert (=> b!140689 d!45051))

(declare-fun d!45053 () Bool)

(assert (=> d!45053 (= (get!1533 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3278 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000)))))

(assert (=> b!140289 d!45053))

(declare-fun d!45055 () Bool)

(declare-fun e!92614 () Bool)

(assert (=> d!45055 e!92614))

(declare-fun res!67806 () Bool)

(assert (=> d!45055 (=> res!67806 e!92614)))

(declare-fun lt!74540 () Bool)

(assert (=> d!45055 (= res!67806 (not lt!74540))))

(declare-fun lt!74537 () Bool)

(assert (=> d!45055 (= lt!74540 lt!74537)))

(declare-fun lt!74539 () Unit!4387)

(declare-fun e!92615 () Unit!4387)

(assert (=> d!45055 (= lt!74539 e!92615)))

(declare-fun c!26811 () Bool)

(assert (=> d!45055 (= c!26811 lt!74537)))

(assert (=> d!45055 (= lt!74537 (containsKey!180 (toList!858 lt!73889) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45055 (= (contains!904 lt!73889 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74540)))

(declare-fun b!142129 () Bool)

(declare-fun lt!74538 () Unit!4387)

(assert (=> b!142129 (= e!92615 lt!74538)))

(assert (=> b!142129 (= lt!74538 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73889) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142129 (isDefined!129 (getValueByKey!177 (toList!858 lt!73889) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142130 () Bool)

(declare-fun Unit!4489 () Unit!4387)

(assert (=> b!142130 (= e!92615 Unit!4489)))

(declare-fun b!142131 () Bool)

(assert (=> b!142131 (= e!92614 (isDefined!129 (getValueByKey!177 (toList!858 lt!73889) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45055 c!26811) b!142129))

(assert (= (and d!45055 (not c!26811)) b!142130))

(assert (= (and d!45055 (not res!67806)) b!142131))

(assert (=> d!45055 m!166927))

(declare-fun m!171239 () Bool)

(assert (=> d!45055 m!171239))

(assert (=> b!142129 m!166927))

(declare-fun m!171241 () Bool)

(assert (=> b!142129 m!171241))

(assert (=> b!142129 m!166927))

(assert (=> b!142129 m!170123))

(assert (=> b!142129 m!170123))

(declare-fun m!171243 () Bool)

(assert (=> b!142129 m!171243))

(assert (=> b!142131 m!166927))

(assert (=> b!142131 m!170123))

(assert (=> b!142131 m!170123))

(assert (=> b!142131 m!171243))

(assert (=> b!140881 d!45055))

(declare-fun d!45057 () Bool)

(assert (=> d!45057 (isDefined!129 (getValueByKey!177 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74541 () Unit!4387)

(assert (=> d!45057 (= lt!74541 (choose!864 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92616 () Bool)

(assert (=> d!45057 e!92616))

(declare-fun res!67807 () Bool)

(assert (=> d!45057 (=> (not res!67807) (not e!92616))))

(assert (=> d!45057 (= res!67807 (isStrictlySorted!312 (toList!858 lt!73446)))))

(assert (=> d!45057 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74541)))

(declare-fun b!142132 () Bool)

(assert (=> b!142132 (= e!92616 (containsKey!180 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45057 res!67807) b!142132))

(assert (=> d!45057 m!167855))

(assert (=> d!45057 m!167855))

(assert (=> d!45057 m!167857))

(declare-fun m!171245 () Bool)

(assert (=> d!45057 m!171245))

(assert (=> d!45057 m!170213))

(assert (=> b!142132 m!167851))

(assert (=> b!140425 d!45057))

(assert (=> b!140425 d!44855))

(assert (=> b!140425 d!44857))

(declare-fun b!142134 () Bool)

(declare-fun e!92617 () Option!183)

(declare-fun e!92618 () Option!183)

(assert (=> b!142134 (= e!92617 e!92618)))

(declare-fun c!26813 () Bool)

(assert (=> b!142134 (= c!26813 (and ((_ is Cons!1715) (toList!858 lt!73897)) (not (= (_1!1322 (h!2322 (toList!858 lt!73897))) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))))

(declare-fun b!142135 () Bool)

(assert (=> b!142135 (= e!92618 (getValueByKey!177 (t!6295 (toList!858 lt!73897)) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun b!142133 () Bool)

(assert (=> b!142133 (= e!92617 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73897)))))))

(declare-fun b!142136 () Bool)

(assert (=> b!142136 (= e!92618 None!181)))

(declare-fun d!45059 () Bool)

(declare-fun c!26812 () Bool)

(assert (=> d!45059 (= c!26812 (and ((_ is Cons!1715) (toList!858 lt!73897)) (= (_1!1322 (h!2322 (toList!858 lt!73897))) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(assert (=> d!45059 (= (getValueByKey!177 (toList!858 lt!73897) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) e!92617)))

(assert (= (and d!45059 c!26812) b!142133))

(assert (= (and d!45059 (not c!26812)) b!142134))

(assert (= (and b!142134 c!26813) b!142135))

(assert (= (and b!142134 (not c!26813)) b!142136))

(declare-fun m!171247 () Bool)

(assert (=> b!142135 m!171247))

(assert (=> b!140890 d!45059))

(assert (=> b!140832 d!44487))

(declare-fun b!142138 () Bool)

(declare-fun e!92619 () Option!183)

(declare-fun e!92620 () Option!183)

(assert (=> b!142138 (= e!92619 e!92620)))

(declare-fun c!26815 () Bool)

(assert (=> b!142138 (= c!26815 (and ((_ is Cons!1715) (toList!858 lt!73958)) (not (= (_1!1322 (h!2322 (toList!858 lt!73958))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142139 () Bool)

(assert (=> b!142139 (= e!92620 (getValueByKey!177 (t!6295 (toList!858 lt!73958)) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142137 () Bool)

(assert (=> b!142137 (= e!92619 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73958)))))))

(declare-fun b!142140 () Bool)

(assert (=> b!142140 (= e!92620 None!181)))

(declare-fun c!26814 () Bool)

(declare-fun d!45061 () Bool)

(assert (=> d!45061 (= c!26814 (and ((_ is Cons!1715) (toList!858 lt!73958)) (= (_1!1322 (h!2322 (toList!858 lt!73958))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45061 (= (getValueByKey!177 (toList!858 lt!73958) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92619)))

(assert (= (and d!45061 c!26814) b!142137))

(assert (= (and d!45061 (not c!26814)) b!142138))

(assert (= (and b!142138 c!26815) b!142139))

(assert (= (and b!142138 (not c!26815)) b!142140))

(declare-fun m!171249 () Bool)

(assert (=> b!142139 m!171249))

(assert (=> b!141004 d!45061))

(declare-fun d!45063 () Bool)

(assert (=> d!45063 (= (apply!120 (+!173 lt!73325 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) lt!73320) (apply!120 lt!73325 lt!73320))))

(assert (=> d!45063 true))

(declare-fun _$34!1008 () Unit!4387)

(assert (=> d!45063 (= (choose!867 lt!73325 lt!73314 (minValue!2789 newMap!16) lt!73320) _$34!1008)))

(declare-fun bs!6002 () Bool)

(assert (= bs!6002 d!45063))

(assert (=> bs!6002 m!167129))

(assert (=> bs!6002 m!167129))

(assert (=> bs!6002 m!167131))

(assert (=> bs!6002 m!167151))

(assert (=> d!44039 d!45063))

(assert (=> d!44039 d!44015))

(assert (=> d!44039 d!44025))

(declare-fun d!45065 () Bool)

(declare-fun e!92621 () Bool)

(assert (=> d!45065 e!92621))

(declare-fun res!67808 () Bool)

(assert (=> d!45065 (=> res!67808 e!92621)))

(declare-fun lt!74545 () Bool)

(assert (=> d!45065 (= res!67808 (not lt!74545))))

(declare-fun lt!74542 () Bool)

(assert (=> d!45065 (= lt!74545 lt!74542)))

(declare-fun lt!74544 () Unit!4387)

(declare-fun e!92622 () Unit!4387)

(assert (=> d!45065 (= lt!74544 e!92622)))

(declare-fun c!26816 () Bool)

(assert (=> d!45065 (= c!26816 lt!74542)))

(assert (=> d!45065 (= lt!74542 (containsKey!180 (toList!858 lt!73325) lt!73320))))

(assert (=> d!45065 (= (contains!904 lt!73325 lt!73320) lt!74545)))

(declare-fun b!142141 () Bool)

(declare-fun lt!74543 () Unit!4387)

(assert (=> b!142141 (= e!92622 lt!74543)))

(assert (=> b!142141 (= lt!74543 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73325) lt!73320))))

(assert (=> b!142141 (isDefined!129 (getValueByKey!177 (toList!858 lt!73325) lt!73320))))

(declare-fun b!142142 () Bool)

(declare-fun Unit!4490 () Unit!4387)

(assert (=> b!142142 (= e!92622 Unit!4490)))

(declare-fun b!142143 () Bool)

(assert (=> b!142143 (= e!92621 (isDefined!129 (getValueByKey!177 (toList!858 lt!73325) lt!73320)))))

(assert (= (and d!45065 c!26816) b!142141))

(assert (= (and d!45065 (not c!26816)) b!142142))

(assert (= (and d!45065 (not res!67808)) b!142143))

(declare-fun m!171251 () Bool)

(assert (=> d!45065 m!171251))

(declare-fun m!171253 () Bool)

(assert (=> b!142141 m!171253))

(assert (=> b!142141 m!168589))

(assert (=> b!142141 m!168589))

(declare-fun m!171255 () Bool)

(assert (=> b!142141 m!171255))

(assert (=> b!142143 m!168589))

(assert (=> b!142143 m!168589))

(assert (=> b!142143 m!171255))

(assert (=> d!44039 d!45065))

(assert (=> d!44039 d!44029))

(declare-fun d!45067 () Bool)

(declare-fun res!67809 () Bool)

(declare-fun e!92623 () Bool)

(assert (=> d!45067 (=> res!67809 e!92623)))

(assert (=> d!45067 (= res!67809 (and ((_ is Cons!1715) (toList!858 lt!73465)) (= (_1!1322 (h!2322 (toList!858 lt!73465))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45067 (= (containsKey!180 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92623)))

(declare-fun b!142144 () Bool)

(declare-fun e!92624 () Bool)

(assert (=> b!142144 (= e!92623 e!92624)))

(declare-fun res!67810 () Bool)

(assert (=> b!142144 (=> (not res!67810) (not e!92624))))

(assert (=> b!142144 (= res!67810 (and (or (not ((_ is Cons!1715) (toList!858 lt!73465))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73465))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) (toList!858 lt!73465)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73465))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142145 () Bool)

(assert (=> b!142145 (= e!92624 (containsKey!180 (t!6295 (toList!858 lt!73465)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45067 (not res!67809)) b!142144))

(assert (= (and b!142144 res!67810) b!142145))

(declare-fun m!171257 () Bool)

(assert (=> b!142145 m!171257))

(assert (=> d!44135 d!45067))

(declare-fun d!45069 () Bool)

(declare-fun res!67811 () Bool)

(declare-fun e!92625 () Bool)

(assert (=> d!45069 (=> res!67811 e!92625)))

(assert (=> d!45069 (= res!67811 (and ((_ is Cons!1715) lt!73459) (= (_1!1322 (h!2322 lt!73459)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45069 (= (containsKey!180 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92625)))

(declare-fun b!142146 () Bool)

(declare-fun e!92626 () Bool)

(assert (=> b!142146 (= e!92625 e!92626)))

(declare-fun res!67812 () Bool)

(assert (=> b!142146 (=> (not res!67812) (not e!92626))))

(assert (=> b!142146 (= res!67812 (and (or (not ((_ is Cons!1715) lt!73459)) (bvsle (_1!1322 (h!2322 lt!73459)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73459) (bvslt (_1!1322 (h!2322 lt!73459)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142147 () Bool)

(assert (=> b!142147 (= e!92626 (containsKey!180 (t!6295 lt!73459) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45069 (not res!67811)) b!142146))

(assert (= (and b!142146 res!67812) b!142147))

(declare-fun m!171259 () Bool)

(assert (=> b!142147 m!171259))

(assert (=> b!140990 d!45069))

(declare-fun d!45071 () Bool)

(assert (=> d!45071 (= (isEmpty!423 (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!182) (getValueByKey!177 (toList!858 lt!73184) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43755 d!45071))

(assert (=> d!43861 d!43697))

(declare-fun d!45073 () Bool)

(assert (=> d!45073 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140789 d!45073))

(declare-fun d!45075 () Bool)

(declare-fun res!67813 () Bool)

(declare-fun e!92627 () Bool)

(assert (=> d!45075 (=> res!67813 e!92627)))

(assert (=> d!45075 (= res!67813 (or ((_ is Nil!1716) lt!73996) ((_ is Nil!1716) (t!6295 lt!73996))))))

(assert (=> d!45075 (= (isStrictlySorted!312 lt!73996) e!92627)))

(declare-fun b!142148 () Bool)

(declare-fun e!92628 () Bool)

(assert (=> b!142148 (= e!92627 e!92628)))

(declare-fun res!67814 () Bool)

(assert (=> b!142148 (=> (not res!67814) (not e!92628))))

(assert (=> b!142148 (= res!67814 (bvslt (_1!1322 (h!2322 lt!73996)) (_1!1322 (h!2322 (t!6295 lt!73996)))))))

(declare-fun b!142149 () Bool)

(assert (=> b!142149 (= e!92628 (isStrictlySorted!312 (t!6295 lt!73996)))))

(assert (= (and d!45075 (not res!67813)) b!142148))

(assert (= (and b!142148 res!67814) b!142149))

(declare-fun m!171261 () Bool)

(assert (=> b!142149 m!171261))

(assert (=> d!44141 d!45075))

(declare-fun d!45077 () Bool)

(declare-fun res!67815 () Bool)

(declare-fun e!92629 () Bool)

(assert (=> d!45077 (=> res!67815 e!92629)))

(assert (=> d!45077 (= res!67815 (or ((_ is Nil!1716) (toList!858 lt!73187)) ((_ is Nil!1716) (t!6295 (toList!858 lt!73187)))))))

(assert (=> d!45077 (= (isStrictlySorted!312 (toList!858 lt!73187)) e!92629)))

(declare-fun b!142150 () Bool)

(declare-fun e!92630 () Bool)

(assert (=> b!142150 (= e!92629 e!92630)))

(declare-fun res!67816 () Bool)

(assert (=> b!142150 (=> (not res!67816) (not e!92630))))

(assert (=> b!142150 (= res!67816 (bvslt (_1!1322 (h!2322 (toList!858 lt!73187))) (_1!1322 (h!2322 (t!6295 (toList!858 lt!73187))))))))

(declare-fun b!142151 () Bool)

(assert (=> b!142151 (= e!92630 (isStrictlySorted!312 (t!6295 (toList!858 lt!73187))))))

(assert (= (and d!45077 (not res!67815)) b!142150))

(assert (= (and b!142150 res!67816) b!142151))

(declare-fun m!171263 () Bool)

(assert (=> b!142151 m!171263))

(assert (=> d!44141 d!45077))

(declare-fun d!45079 () Bool)

(declare-fun res!67817 () Bool)

(declare-fun e!92631 () Bool)

(assert (=> d!45079 (=> res!67817 e!92631)))

(assert (=> d!45079 (= res!67817 (and ((_ is Cons!1715) (toList!858 lt!73237)) (= (_1!1322 (h!2322 (toList!858 lt!73237))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45079 (= (containsKey!180 (toList!858 lt!73237) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) e!92631)))

(declare-fun b!142152 () Bool)

(declare-fun e!92632 () Bool)

(assert (=> b!142152 (= e!92631 e!92632)))

(declare-fun res!67818 () Bool)

(assert (=> b!142152 (=> (not res!67818) (not e!92632))))

(assert (=> b!142152 (= res!67818 (and (or (not ((_ is Cons!1715) (toList!858 lt!73237))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73237))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1715) (toList!858 lt!73237)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73237))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142153 () Bool)

(assert (=> b!142153 (= e!92632 (containsKey!180 (t!6295 (toList!858 lt!73237)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45079 (not res!67817)) b!142152))

(assert (= (and b!142152 res!67818) b!142153))

(assert (=> b!142153 m!166927))

(declare-fun m!171265 () Bool)

(assert (=> b!142153 m!171265))

(assert (=> d!44151 d!45079))

(declare-fun d!45081 () Bool)

(assert (=> d!45081 (= (apply!120 lt!73713 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73713) (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))))

(declare-fun bs!6003 () Bool)

(assert (= bs!6003 d!45081))

(assert (=> bs!6003 m!168061))

(declare-fun m!171267 () Bool)

(assert (=> bs!6003 m!171267))

(assert (=> bs!6003 m!171267))

(declare-fun m!171269 () Bool)

(assert (=> bs!6003 m!171269))

(assert (=> b!140578 d!45081))

(declare-fun d!45083 () Bool)

(declare-fun c!26817 () Bool)

(assert (=> d!45083 (= c!26817 ((_ is ValueCellFull!1121) (select (arr!2307 lt!73413) #b00000000000000000000000000000000)))))

(declare-fun e!92633 () V!3553)

(assert (=> d!45083 (= (get!1531 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92633)))

(declare-fun b!142154 () Bool)

(assert (=> b!142154 (= e!92633 (get!1533 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142155 () Bool)

(assert (=> b!142155 (= e!92633 (get!1534 (select (arr!2307 lt!73413) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45083 c!26817) b!142154))

(assert (= (and d!45083 (not c!26817)) b!142155))

(assert (=> b!142154 m!168095))

(assert (=> b!142154 m!166963))

(declare-fun m!171271 () Bool)

(assert (=> b!142154 m!171271))

(assert (=> b!142155 m!168095))

(assert (=> b!142155 m!166963))

(declare-fun m!171273 () Bool)

(assert (=> b!142155 m!171273))

(assert (=> b!140578 d!45083))

(declare-fun d!45085 () Bool)

(declare-fun e!92634 () Bool)

(assert (=> d!45085 e!92634))

(declare-fun res!67819 () Bool)

(assert (=> d!45085 (=> res!67819 e!92634)))

(declare-fun lt!74549 () Bool)

(assert (=> d!45085 (= res!67819 (not lt!74549))))

(declare-fun lt!74546 () Bool)

(assert (=> d!45085 (= lt!74549 lt!74546)))

(declare-fun lt!74548 () Unit!4387)

(declare-fun e!92635 () Unit!4387)

(assert (=> d!45085 (= lt!74548 e!92635)))

(declare-fun c!26818 () Bool)

(assert (=> d!45085 (= c!26818 lt!74546)))

(assert (=> d!45085 (= lt!74546 (containsKey!180 (toList!858 lt!73587) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45085 (= (contains!904 lt!73587 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74549)))

(declare-fun b!142156 () Bool)

(declare-fun lt!74547 () Unit!4387)

(assert (=> b!142156 (= e!92635 lt!74547)))

(assert (=> b!142156 (= lt!74547 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73587) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142156 (isDefined!129 (getValueByKey!177 (toList!858 lt!73587) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142157 () Bool)

(declare-fun Unit!4491 () Unit!4387)

(assert (=> b!142157 (= e!92635 Unit!4491)))

(declare-fun b!142158 () Bool)

(assert (=> b!142158 (= e!92634 (isDefined!129 (getValueByKey!177 (toList!858 lt!73587) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45085 c!26818) b!142156))

(assert (= (and d!45085 (not c!26818)) b!142157))

(assert (= (and d!45085 (not res!67819)) b!142158))

(declare-fun m!171275 () Bool)

(assert (=> d!45085 m!171275))

(declare-fun m!171277 () Bool)

(assert (=> b!142156 m!171277))

(declare-fun m!171279 () Bool)

(assert (=> b!142156 m!171279))

(assert (=> b!142156 m!171279))

(declare-fun m!171281 () Bool)

(assert (=> b!142156 m!171281))

(assert (=> b!142158 m!171279))

(assert (=> b!142158 m!171279))

(assert (=> b!142158 m!171281))

(assert (=> d!43769 d!45085))

(assert (=> d!43769 d!43697))

(declare-fun b!142160 () Bool)

(declare-fun e!92636 () Option!183)

(declare-fun e!92637 () Option!183)

(assert (=> b!142160 (= e!92636 e!92637)))

(declare-fun c!26820 () Bool)

(assert (=> b!142160 (= c!26820 (and ((_ is Cons!1715) (toList!858 lt!73999)) (not (= (_1!1322 (h!2322 (toList!858 lt!73999))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!142161 () Bool)

(assert (=> b!142161 (= e!92637 (getValueByKey!177 (t!6295 (toList!858 lt!73999)) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142159 () Bool)

(assert (=> b!142159 (= e!92636 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73999)))))))

(declare-fun b!142162 () Bool)

(assert (=> b!142162 (= e!92637 None!181)))

(declare-fun d!45087 () Bool)

(declare-fun c!26819 () Bool)

(assert (=> d!45087 (= c!26819 (and ((_ is Cons!1715) (toList!858 lt!73999)) (= (_1!1322 (h!2322 (toList!858 lt!73999))) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!45087 (= (getValueByKey!177 (toList!858 lt!73999) (_1!1322 (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92636)))

(assert (= (and d!45087 c!26819) b!142159))

(assert (= (and d!45087 (not c!26819)) b!142160))

(assert (= (and b!142160 c!26820) b!142161))

(assert (= (and b!142160 (not c!26820)) b!142162))

(declare-fun m!171283 () Bool)

(assert (=> b!142161 m!171283))

(assert (=> b!141056 d!45087))

(declare-fun d!45089 () Bool)

(declare-fun e!92638 () Bool)

(assert (=> d!45089 e!92638))

(declare-fun res!67820 () Bool)

(assert (=> d!45089 (=> res!67820 e!92638)))

(declare-fun lt!74553 () Bool)

(assert (=> d!45089 (= res!67820 (not lt!74553))))

(declare-fun lt!74550 () Bool)

(assert (=> d!45089 (= lt!74553 lt!74550)))

(declare-fun lt!74552 () Unit!4387)

(declare-fun e!92639 () Unit!4387)

(assert (=> d!45089 (= lt!74552 e!92639)))

(declare-fun c!26821 () Bool)

(assert (=> d!45089 (= c!26821 lt!74550)))

(assert (=> d!45089 (= lt!74550 (containsKey!180 (toList!858 lt!73902) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!45089 (= (contains!904 lt!73902 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74553)))

(declare-fun b!142163 () Bool)

(declare-fun lt!74551 () Unit!4387)

(assert (=> b!142163 (= e!92639 lt!74551)))

(assert (=> b!142163 (= lt!74551 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73902) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> b!142163 (isDefined!129 (getValueByKey!177 (toList!858 lt!73902) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142164 () Bool)

(declare-fun Unit!4492 () Unit!4387)

(assert (=> b!142164 (= e!92639 Unit!4492)))

(declare-fun b!142165 () Bool)

(assert (=> b!142165 (= e!92638 (isDefined!129 (getValueByKey!177 (toList!858 lt!73902) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45089 c!26821) b!142163))

(assert (= (and d!45089 (not c!26821)) b!142164))

(assert (= (and d!45089 (not res!67820)) b!142165))

(declare-fun m!171285 () Bool)

(assert (=> d!45089 m!171285))

(declare-fun m!171287 () Bool)

(assert (=> b!142163 m!171287))

(assert (=> b!142163 m!168621))

(assert (=> b!142163 m!168621))

(declare-fun m!171289 () Bool)

(assert (=> b!142163 m!171289))

(assert (=> b!142165 m!168621))

(assert (=> b!142165 m!168621))

(assert (=> b!142165 m!171289))

(assert (=> d!44023 d!45089))

(declare-fun b!142167 () Bool)

(declare-fun e!92640 () Option!183)

(declare-fun e!92641 () Option!183)

(assert (=> b!142167 (= e!92640 e!92641)))

(declare-fun c!26823 () Bool)

(assert (=> b!142167 (= c!26823 (and ((_ is Cons!1715) lt!73901) (not (= (_1!1322 (h!2322 lt!73901)) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!142168 () Bool)

(assert (=> b!142168 (= e!92641 (getValueByKey!177 (t!6295 lt!73901) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142166 () Bool)

(assert (=> b!142166 (= e!92640 (Some!182 (_2!1322 (h!2322 lt!73901))))))

(declare-fun b!142169 () Bool)

(assert (=> b!142169 (= e!92641 None!181)))

(declare-fun c!26822 () Bool)

(declare-fun d!45091 () Bool)

(assert (=> d!45091 (= c!26822 (and ((_ is Cons!1715) lt!73901) (= (_1!1322 (h!2322 lt!73901)) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45091 (= (getValueByKey!177 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92640)))

(assert (= (and d!45091 c!26822) b!142166))

(assert (= (and d!45091 (not c!26822)) b!142167))

(assert (= (and b!142167 c!26823) b!142168))

(assert (= (and b!142167 (not c!26823)) b!142169))

(declare-fun m!171291 () Bool)

(assert (=> b!142168 m!171291))

(assert (=> d!44023 d!45091))

(declare-fun d!45093 () Bool)

(assert (=> d!45093 (= (getValueByKey!177 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!74554 () Unit!4387)

(assert (=> d!45093 (= lt!74554 (choose!873 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun e!92642 () Bool)

(assert (=> d!45093 e!92642))

(declare-fun res!67821 () Bool)

(assert (=> d!45093 (=> (not res!67821) (not e!92642))))

(assert (=> d!45093 (= res!67821 (isStrictlySorted!312 lt!73901))))

(assert (=> d!45093 (= (lemmaContainsTupThenGetReturnValue!91 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74554)))

(declare-fun b!142170 () Bool)

(declare-fun res!67822 () Bool)

(assert (=> b!142170 (=> (not res!67822) (not e!92642))))

(assert (=> b!142170 (= res!67822 (containsKey!180 lt!73901 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142171 () Bool)

(assert (=> b!142171 (= e!92642 (contains!907 lt!73901 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45093 res!67821) b!142170))

(assert (= (and b!142170 res!67822) b!142171))

(assert (=> d!45093 m!168615))

(declare-fun m!171293 () Bool)

(assert (=> d!45093 m!171293))

(declare-fun m!171295 () Bool)

(assert (=> d!45093 m!171295))

(declare-fun m!171297 () Bool)

(assert (=> b!142170 m!171297))

(declare-fun m!171299 () Bool)

(assert (=> b!142171 m!171299))

(assert (=> d!44023 d!45093))

(declare-fun bm!15731 () Bool)

(declare-fun call!15736 () List!1719)

(declare-fun call!15735 () List!1719)

(assert (=> bm!15731 (= call!15736 call!15735)))

(declare-fun b!142173 () Bool)

(declare-fun e!92644 () List!1719)

(declare-fun e!92646 () List!1719)

(assert (=> b!142173 (= e!92644 e!92646)))

(declare-fun c!26827 () Bool)

(assert (=> b!142173 (= c!26827 (and ((_ is Cons!1715) (toList!858 lt!73313)) (= (_1!1322 (h!2322 (toList!858 lt!73313))) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142174 () Bool)

(declare-fun res!67824 () Bool)

(declare-fun e!92643 () Bool)

(assert (=> b!142174 (=> (not res!67824) (not e!92643))))

(declare-fun lt!74555 () List!1719)

(assert (=> b!142174 (= res!67824 (containsKey!180 lt!74555 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142175 () Bool)

(declare-fun c!26825 () Bool)

(assert (=> b!142175 (= c!26825 (and ((_ is Cons!1715) (toList!858 lt!73313)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73313))) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun e!92645 () List!1719)

(assert (=> b!142175 (= e!92646 e!92645)))

(declare-fun bm!15732 () Bool)

(declare-fun call!15734 () List!1719)

(assert (=> bm!15732 (= call!15735 call!15734)))

(declare-fun b!142176 () Bool)

(assert (=> b!142176 (= e!92646 call!15735)))

(declare-fun b!142177 () Bool)

(assert (=> b!142177 (= e!92644 call!15734)))

(declare-fun b!142178 () Bool)

(assert (=> b!142178 (= e!92643 (contains!907 lt!74555 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142172 () Bool)

(declare-fun e!92647 () List!1719)

(assert (=> b!142172 (= e!92647 (ite c!26827 (t!6295 (toList!858 lt!73313)) (ite c!26825 (Cons!1715 (h!2322 (toList!858 lt!73313)) (t!6295 (toList!858 lt!73313))) Nil!1716)))))

(declare-fun d!45095 () Bool)

(assert (=> d!45095 e!92643))

(declare-fun res!67823 () Bool)

(assert (=> d!45095 (=> (not res!67823) (not e!92643))))

(assert (=> d!45095 (= res!67823 (isStrictlySorted!312 lt!74555))))

(assert (=> d!45095 (= lt!74555 e!92644)))

(declare-fun c!26826 () Bool)

(assert (=> d!45095 (= c!26826 (and ((_ is Cons!1715) (toList!858 lt!73313)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73313))) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45095 (isStrictlySorted!312 (toList!858 lt!73313))))

(assert (=> d!45095 (= (insertStrictlySorted!94 (toList!858 lt!73313) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74555)))

(declare-fun b!142179 () Bool)

(assert (=> b!142179 (= e!92645 call!15736)))

(declare-fun b!142180 () Bool)

(assert (=> b!142180 (= e!92645 call!15736)))

(declare-fun bm!15733 () Bool)

(assert (=> bm!15733 (= call!15734 ($colon$colon!93 e!92647 (ite c!26826 (h!2322 (toList!858 lt!73313)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun c!26824 () Bool)

(assert (=> bm!15733 (= c!26824 c!26826)))

(declare-fun b!142181 () Bool)

(assert (=> b!142181 (= e!92647 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73313)) (_1!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45095 c!26826) b!142177))

(assert (= (and d!45095 (not c!26826)) b!142173))

(assert (= (and b!142173 c!26827) b!142176))

(assert (= (and b!142173 (not c!26827)) b!142175))

(assert (= (and b!142175 c!26825) b!142179))

(assert (= (and b!142175 (not c!26825)) b!142180))

(assert (= (or b!142179 b!142180) bm!15731))

(assert (= (or b!142176 bm!15731) bm!15732))

(assert (= (or b!142177 bm!15732) bm!15733))

(assert (= (and bm!15733 c!26824) b!142181))

(assert (= (and bm!15733 (not c!26824)) b!142172))

(assert (= (and d!45095 res!67823) b!142174))

(assert (= (and b!142174 res!67824) b!142178))

(declare-fun m!171301 () Bool)

(assert (=> bm!15733 m!171301))

(declare-fun m!171303 () Bool)

(assert (=> d!45095 m!171303))

(declare-fun m!171305 () Bool)

(assert (=> d!45095 m!171305))

(declare-fun m!171307 () Bool)

(assert (=> b!142174 m!171307))

(declare-fun m!171309 () Bool)

(assert (=> b!142181 m!171309))

(declare-fun m!171311 () Bool)

(assert (=> b!142178 m!171311))

(assert (=> d!44023 d!45095))

(declare-fun d!45097 () Bool)

(assert (=> d!45097 (= (get!1535 (getValueByKey!177 (toList!858 lt!73253) lt!73248)) (v!3285 (getValueByKey!177 (toList!858 lt!73253) lt!73248)))))

(assert (=> d!44183 d!45097))

(declare-fun b!142183 () Bool)

(declare-fun e!92648 () Option!183)

(declare-fun e!92649 () Option!183)

(assert (=> b!142183 (= e!92648 e!92649)))

(declare-fun c!26829 () Bool)

(assert (=> b!142183 (= c!26829 (and ((_ is Cons!1715) (toList!858 lt!73253)) (not (= (_1!1322 (h!2322 (toList!858 lt!73253))) lt!73248))))))

(declare-fun b!142184 () Bool)

(assert (=> b!142184 (= e!92649 (getValueByKey!177 (t!6295 (toList!858 lt!73253)) lt!73248))))

(declare-fun b!142182 () Bool)

(assert (=> b!142182 (= e!92648 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73253)))))))

(declare-fun b!142185 () Bool)

(assert (=> b!142185 (= e!92649 None!181)))

(declare-fun d!45099 () Bool)

(declare-fun c!26828 () Bool)

(assert (=> d!45099 (= c!26828 (and ((_ is Cons!1715) (toList!858 lt!73253)) (= (_1!1322 (h!2322 (toList!858 lt!73253))) lt!73248)))))

(assert (=> d!45099 (= (getValueByKey!177 (toList!858 lt!73253) lt!73248) e!92648)))

(assert (= (and d!45099 c!26828) b!142182))

(assert (= (and d!45099 (not c!26828)) b!142183))

(assert (= (and b!142183 c!26829) b!142184))

(assert (= (and b!142183 (not c!26829)) b!142185))

(declare-fun m!171313 () Bool)

(assert (=> b!142184 m!171313))

(assert (=> d!44183 d!45099))

(declare-fun d!45101 () Bool)

(assert (=> d!45101 (not (contains!904 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556)) lt!73557))))

(declare-fun lt!74556 () Unit!4387)

(assert (=> d!45101 (= lt!74556 (choose!874 lt!73554 lt!73552 lt!73556 lt!73557))))

(declare-fun e!92650 () Bool)

(assert (=> d!45101 e!92650))

(declare-fun res!67825 () Bool)

(assert (=> d!45101 (=> (not res!67825) (not e!92650))))

(assert (=> d!45101 (= res!67825 (not (contains!904 lt!73554 lt!73557)))))

(assert (=> d!45101 (= (addStillNotContains!66 lt!73554 lt!73552 lt!73556 lt!73557) lt!74556)))

(declare-fun b!142186 () Bool)

(assert (=> b!142186 (= e!92650 (not (= lt!73552 lt!73557)))))

(assert (= (and d!45101 res!67825) b!142186))

(assert (=> d!45101 m!167613))

(assert (=> d!45101 m!167613))

(assert (=> d!45101 m!167615))

(declare-fun m!171315 () Bool)

(assert (=> d!45101 m!171315))

(declare-fun m!171317 () Bool)

(assert (=> d!45101 m!171317))

(assert (=> b!140307 d!45101))

(declare-fun d!45103 () Bool)

(declare-fun e!92651 () Bool)

(assert (=> d!45103 e!92651))

(declare-fun res!67826 () Bool)

(assert (=> d!45103 (=> (not res!67826) (not e!92651))))

(declare-fun lt!74559 () ListLongMap!1685)

(assert (=> d!45103 (= res!67826 (contains!904 lt!74559 (_1!1322 (tuple2!2623 lt!73552 lt!73556))))))

(declare-fun lt!74558 () List!1719)

(assert (=> d!45103 (= lt!74559 (ListLongMap!1686 lt!74558))))

(declare-fun lt!74557 () Unit!4387)

(declare-fun lt!74560 () Unit!4387)

(assert (=> d!45103 (= lt!74557 lt!74560)))

(assert (=> d!45103 (= (getValueByKey!177 lt!74558 (_1!1322 (tuple2!2623 lt!73552 lt!73556))) (Some!182 (_2!1322 (tuple2!2623 lt!73552 lt!73556))))))

(assert (=> d!45103 (= lt!74560 (lemmaContainsTupThenGetReturnValue!91 lt!74558 (_1!1322 (tuple2!2623 lt!73552 lt!73556)) (_2!1322 (tuple2!2623 lt!73552 lt!73556))))))

(assert (=> d!45103 (= lt!74558 (insertStrictlySorted!94 (toList!858 lt!73554) (_1!1322 (tuple2!2623 lt!73552 lt!73556)) (_2!1322 (tuple2!2623 lt!73552 lt!73556))))))

(assert (=> d!45103 (= (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556)) lt!74559)))

(declare-fun b!142187 () Bool)

(declare-fun res!67827 () Bool)

(assert (=> b!142187 (=> (not res!67827) (not e!92651))))

(assert (=> b!142187 (= res!67827 (= (getValueByKey!177 (toList!858 lt!74559) (_1!1322 (tuple2!2623 lt!73552 lt!73556))) (Some!182 (_2!1322 (tuple2!2623 lt!73552 lt!73556)))))))

(declare-fun b!142188 () Bool)

(assert (=> b!142188 (= e!92651 (contains!907 (toList!858 lt!74559) (tuple2!2623 lt!73552 lt!73556)))))

(assert (= (and d!45103 res!67826) b!142187))

(assert (= (and b!142187 res!67827) b!142188))

(declare-fun m!171319 () Bool)

(assert (=> d!45103 m!171319))

(declare-fun m!171321 () Bool)

(assert (=> d!45103 m!171321))

(declare-fun m!171323 () Bool)

(assert (=> d!45103 m!171323))

(declare-fun m!171325 () Bool)

(assert (=> d!45103 m!171325))

(declare-fun m!171327 () Bool)

(assert (=> b!142187 m!171327))

(declare-fun m!171329 () Bool)

(assert (=> b!142188 m!171329))

(assert (=> b!140307 d!45103))

(declare-fun d!45105 () Bool)

(declare-fun e!92652 () Bool)

(assert (=> d!45105 e!92652))

(declare-fun res!67828 () Bool)

(assert (=> d!45105 (=> (not res!67828) (not e!92652))))

(declare-fun lt!74563 () ListLongMap!1685)

(assert (=> d!45105 (= res!67828 (contains!904 lt!74563 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74562 () List!1719)

(assert (=> d!45105 (= lt!74563 (ListLongMap!1686 lt!74562))))

(declare-fun lt!74561 () Unit!4387)

(declare-fun lt!74564 () Unit!4387)

(assert (=> d!45105 (= lt!74561 lt!74564)))

(assert (=> d!45105 (= (getValueByKey!177 lt!74562 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45105 (= lt!74564 (lemmaContainsTupThenGetReturnValue!91 lt!74562 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45105 (= lt!74562 (insertStrictlySorted!94 (toList!858 call!15561) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45105 (= (+!173 call!15561 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74563)))

(declare-fun b!142189 () Bool)

(declare-fun res!67829 () Bool)

(assert (=> b!142189 (=> (not res!67829) (not e!92652))))

(assert (=> b!142189 (= res!67829 (= (getValueByKey!177 (toList!858 lt!74563) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142190 () Bool)

(assert (=> b!142190 (= e!92652 (contains!907 (toList!858 lt!74563) (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (ite (or c!26142 c!26150) (_values!2922 newMap!16) (array!4882 (store (arr!2307 (_values!2922 newMap!16)) (index!3256 lt!73122) (ValueCellFull!1121 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2579 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45105 res!67828) b!142189))

(assert (= (and b!142189 res!67829) b!142190))

(declare-fun m!171331 () Bool)

(assert (=> d!45105 m!171331))

(declare-fun m!171333 () Bool)

(assert (=> d!45105 m!171333))

(declare-fun m!171335 () Bool)

(assert (=> d!45105 m!171335))

(declare-fun m!171337 () Bool)

(assert (=> d!45105 m!171337))

(declare-fun m!171339 () Bool)

(assert (=> b!142189 m!171339))

(declare-fun m!171341 () Bool)

(assert (=> b!142190 m!171341))

(assert (=> b!140307 d!45105))

(assert (=> b!140307 d!43715))

(declare-fun d!45107 () Bool)

(declare-fun e!92653 () Bool)

(assert (=> d!45107 e!92653))

(declare-fun res!67830 () Bool)

(assert (=> d!45107 (=> res!67830 e!92653)))

(declare-fun lt!74568 () Bool)

(assert (=> d!45107 (= res!67830 (not lt!74568))))

(declare-fun lt!74565 () Bool)

(assert (=> d!45107 (= lt!74568 lt!74565)))

(declare-fun lt!74567 () Unit!4387)

(declare-fun e!92654 () Unit!4387)

(assert (=> d!45107 (= lt!74567 e!92654)))

(declare-fun c!26830 () Bool)

(assert (=> d!45107 (= c!26830 lt!74565)))

(assert (=> d!45107 (= lt!74565 (containsKey!180 (toList!858 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556))) lt!73557))))

(assert (=> d!45107 (= (contains!904 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556)) lt!73557) lt!74568)))

(declare-fun b!142191 () Bool)

(declare-fun lt!74566 () Unit!4387)

(assert (=> b!142191 (= e!92654 lt!74566)))

(assert (=> b!142191 (= lt!74566 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556))) lt!73557))))

(assert (=> b!142191 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556))) lt!73557))))

(declare-fun b!142192 () Bool)

(declare-fun Unit!4493 () Unit!4387)

(assert (=> b!142192 (= e!92654 Unit!4493)))

(declare-fun b!142193 () Bool)

(assert (=> b!142193 (= e!92653 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73554 (tuple2!2623 lt!73552 lt!73556))) lt!73557)))))

(assert (= (and d!45107 c!26830) b!142191))

(assert (= (and d!45107 (not c!26830)) b!142192))

(assert (= (and d!45107 (not res!67830)) b!142193))

(declare-fun m!171343 () Bool)

(assert (=> d!45107 m!171343))

(declare-fun m!171345 () Bool)

(assert (=> b!142191 m!171345))

(declare-fun m!171347 () Bool)

(assert (=> b!142191 m!171347))

(assert (=> b!142191 m!171347))

(declare-fun m!171349 () Bool)

(assert (=> b!142191 m!171349))

(assert (=> b!142193 m!171347))

(assert (=> b!142193 m!171347))

(assert (=> b!142193 m!171349))

(assert (=> b!140307 d!45107))

(declare-fun d!45109 () Bool)

(declare-fun e!92655 () Bool)

(assert (=> d!45109 e!92655))

(declare-fun res!67831 () Bool)

(assert (=> d!45109 (=> res!67831 e!92655)))

(declare-fun lt!74572 () Bool)

(assert (=> d!45109 (= res!67831 (not lt!74572))))

(declare-fun lt!74569 () Bool)

(assert (=> d!45109 (= lt!74572 lt!74569)))

(declare-fun lt!74571 () Unit!4387)

(declare-fun e!92656 () Unit!4387)

(assert (=> d!45109 (= lt!74571 e!92656)))

(declare-fun c!26831 () Bool)

(assert (=> d!45109 (= c!26831 lt!74569)))

(assert (=> d!45109 (= lt!74569 (containsKey!180 (toList!858 lt!73691) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45109 (= (contains!904 lt!73691 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74572)))

(declare-fun b!142194 () Bool)

(declare-fun lt!74570 () Unit!4387)

(assert (=> b!142194 (= e!92656 lt!74570)))

(assert (=> b!142194 (= lt!74570 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73691) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142194 (isDefined!129 (getValueByKey!177 (toList!858 lt!73691) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142195 () Bool)

(declare-fun Unit!4494 () Unit!4387)

(assert (=> b!142195 (= e!92656 Unit!4494)))

(declare-fun b!142196 () Bool)

(assert (=> b!142196 (= e!92655 (isDefined!129 (getValueByKey!177 (toList!858 lt!73691) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45109 c!26831) b!142194))

(assert (= (and d!45109 (not c!26831)) b!142195))

(assert (= (and d!45109 (not res!67831)) b!142196))

(declare-fun m!171351 () Bool)

(assert (=> d!45109 m!171351))

(declare-fun m!171353 () Bool)

(assert (=> b!142194 m!171353))

(assert (=> b!142194 m!170405))

(assert (=> b!142194 m!170405))

(declare-fun m!171355 () Bool)

(assert (=> b!142194 m!171355))

(assert (=> b!142196 m!170405))

(assert (=> b!142196 m!170405))

(assert (=> b!142196 m!171355))

(assert (=> bm!15578 d!45109))

(declare-fun d!45111 () Bool)

(declare-fun res!67832 () Bool)

(declare-fun e!92657 () Bool)

(assert (=> d!45111 (=> res!67832 e!92657)))

(assert (=> d!45111 (= res!67832 (and ((_ is Cons!1715) lt!73951) (= (_1!1322 (h!2322 lt!73951)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45111 (= (containsKey!180 lt!73951 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92657)))

(declare-fun b!142197 () Bool)

(declare-fun e!92658 () Bool)

(assert (=> b!142197 (= e!92657 e!92658)))

(declare-fun res!67833 () Bool)

(assert (=> b!142197 (=> (not res!67833) (not e!92658))))

(assert (=> b!142197 (= res!67833 (and (or (not ((_ is Cons!1715) lt!73951)) (bvsle (_1!1322 (h!2322 lt!73951)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73951) (bvslt (_1!1322 (h!2322 lt!73951)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142198 () Bool)

(assert (=> b!142198 (= e!92658 (containsKey!180 (t!6295 lt!73951) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45111 (not res!67832)) b!142197))

(assert (= (and b!142197 res!67833) b!142198))

(declare-fun m!171357 () Bool)

(assert (=> b!142198 m!171357))

(assert (=> b!140994 d!45111))

(declare-fun d!45113 () Bool)

(declare-fun e!92659 () Bool)

(assert (=> d!45113 e!92659))

(declare-fun res!67834 () Bool)

(assert (=> d!45113 (=> (not res!67834) (not e!92659))))

(declare-fun lt!74575 () ListLongMap!1685)

(assert (=> d!45113 (= res!67834 (contains!904 lt!74575 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74574 () List!1719)

(assert (=> d!45113 (= lt!74575 (ListLongMap!1686 lt!74574))))

(declare-fun lt!74573 () Unit!4387)

(declare-fun lt!74576 () Unit!4387)

(assert (=> d!45113 (= lt!74573 lt!74576)))

(assert (=> d!45113 (= (getValueByKey!177 lt!74574 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45113 (= lt!74576 (lemmaContainsTupThenGetReturnValue!91 lt!74574 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45113 (= lt!74574 (insertStrictlySorted!94 (toList!858 call!15573) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45113 (= (+!173 call!15573 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74575)))

(declare-fun b!142199 () Bool)

(declare-fun res!67835 () Bool)

(assert (=> b!142199 (=> (not res!67835) (not e!92659))))

(assert (=> b!142199 (= res!67835 (= (getValueByKey!177 (toList!858 lt!74575) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142200 () Bool)

(assert (=> b!142200 (= e!92659 (contains!907 (toList!858 lt!74575) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45113 res!67834) b!142199))

(assert (= (and b!142199 res!67835) b!142200))

(declare-fun m!171359 () Bool)

(assert (=> d!45113 m!171359))

(declare-fun m!171361 () Bool)

(assert (=> d!45113 m!171361))

(declare-fun m!171363 () Bool)

(assert (=> d!45113 m!171363))

(declare-fun m!171365 () Bool)

(assert (=> d!45113 m!171365))

(declare-fun m!171367 () Bool)

(assert (=> b!142199 m!171367))

(declare-fun m!171369 () Bool)

(assert (=> b!142200 m!171369))

(assert (=> b!140399 d!45113))

(declare-fun d!45115 () Bool)

(declare-fun res!67836 () Bool)

(declare-fun e!92660 () Bool)

(assert (=> d!45115 (=> res!67836 e!92660)))

(assert (=> d!45115 (= res!67836 (or ((_ is Nil!1716) lt!73764) ((_ is Nil!1716) (t!6295 lt!73764))))))

(assert (=> d!45115 (= (isStrictlySorted!312 lt!73764) e!92660)))

(declare-fun b!142201 () Bool)

(declare-fun e!92661 () Bool)

(assert (=> b!142201 (= e!92660 e!92661)))

(declare-fun res!67837 () Bool)

(assert (=> b!142201 (=> (not res!67837) (not e!92661))))

(assert (=> b!142201 (= res!67837 (bvslt (_1!1322 (h!2322 lt!73764)) (_1!1322 (h!2322 (t!6295 lt!73764)))))))

(declare-fun b!142202 () Bool)

(assert (=> b!142202 (= e!92661 (isStrictlySorted!312 (t!6295 lt!73764)))))

(assert (= (and d!45115 (not res!67836)) b!142201))

(assert (= (and b!142201 res!67837) b!142202))

(declare-fun m!171371 () Bool)

(assert (=> b!142202 m!171371))

(assert (=> d!43899 d!45115))

(declare-fun d!45117 () Bool)

(declare-fun res!67838 () Bool)

(declare-fun e!92662 () Bool)

(assert (=> d!45117 (=> res!67838 e!92662)))

(assert (=> d!45117 (= res!67838 (or ((_ is Nil!1716) (toList!858 call!15501)) ((_ is Nil!1716) (t!6295 (toList!858 call!15501)))))))

(assert (=> d!45117 (= (isStrictlySorted!312 (toList!858 call!15501)) e!92662)))

(declare-fun b!142203 () Bool)

(declare-fun e!92663 () Bool)

(assert (=> b!142203 (= e!92662 e!92663)))

(declare-fun res!67839 () Bool)

(assert (=> b!142203 (=> (not res!67839) (not e!92663))))

(assert (=> b!142203 (= res!67839 (bvslt (_1!1322 (h!2322 (toList!858 call!15501))) (_1!1322 (h!2322 (t!6295 (toList!858 call!15501))))))))

(declare-fun b!142204 () Bool)

(assert (=> b!142204 (= e!92663 (isStrictlySorted!312 (t!6295 (toList!858 call!15501))))))

(assert (= (and d!45117 (not res!67838)) b!142203))

(assert (= (and b!142203 res!67839) b!142204))

(declare-fun m!171373 () Bool)

(assert (=> b!142204 m!171373))

(assert (=> d!43899 d!45117))

(declare-fun d!45119 () Bool)

(assert (=> d!45119 (= (apply!120 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) lt!73248) (apply!120 lt!73253 lt!73248))))

(assert (=> d!45119 true))

(declare-fun _$34!1009 () Unit!4387)

(assert (=> d!45119 (= (choose!867 lt!73253 lt!73242 (minValue!2789 newMap!16) lt!73248) _$34!1009)))

(declare-fun bs!6004 () Bool)

(assert (= bs!6004 d!45119))

(assert (=> bs!6004 m!166975))

(assert (=> bs!6004 m!166975))

(assert (=> bs!6004 m!166977))

(assert (=> bs!6004 m!166997))

(assert (=> d!44179 d!45119))

(assert (=> d!44179 d!44161))

(assert (=> d!44179 d!44183))

(assert (=> d!44179 d!44173))

(declare-fun d!45121 () Bool)

(declare-fun e!92664 () Bool)

(assert (=> d!45121 e!92664))

(declare-fun res!67840 () Bool)

(assert (=> d!45121 (=> res!67840 e!92664)))

(declare-fun lt!74580 () Bool)

(assert (=> d!45121 (= res!67840 (not lt!74580))))

(declare-fun lt!74577 () Bool)

(assert (=> d!45121 (= lt!74580 lt!74577)))

(declare-fun lt!74579 () Unit!4387)

(declare-fun e!92665 () Unit!4387)

(assert (=> d!45121 (= lt!74579 e!92665)))

(declare-fun c!26832 () Bool)

(assert (=> d!45121 (= c!26832 lt!74577)))

(assert (=> d!45121 (= lt!74577 (containsKey!180 (toList!858 lt!73253) lt!73248))))

(assert (=> d!45121 (= (contains!904 lt!73253 lt!73248) lt!74580)))

(declare-fun b!142205 () Bool)

(declare-fun lt!74578 () Unit!4387)

(assert (=> b!142205 (= e!92665 lt!74578)))

(assert (=> b!142205 (= lt!74578 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73253) lt!73248))))

(assert (=> b!142205 (isDefined!129 (getValueByKey!177 (toList!858 lt!73253) lt!73248))))

(declare-fun b!142206 () Bool)

(declare-fun Unit!4495 () Unit!4387)

(assert (=> b!142206 (= e!92665 Unit!4495)))

(declare-fun b!142207 () Bool)

(assert (=> b!142207 (= e!92664 (isDefined!129 (getValueByKey!177 (toList!858 lt!73253) lt!73248)))))

(assert (= (and d!45121 c!26832) b!142205))

(assert (= (and d!45121 (not c!26832)) b!142206))

(assert (= (and d!45121 (not res!67840)) b!142207))

(declare-fun m!171375 () Bool)

(assert (=> d!45121 m!171375))

(declare-fun m!171377 () Bool)

(assert (=> b!142205 m!171377))

(assert (=> b!142205 m!169053))

(assert (=> b!142205 m!169053))

(declare-fun m!171379 () Bool)

(assert (=> b!142205 m!171379))

(assert (=> b!142207 m!169053))

(assert (=> b!142207 m!169053))

(assert (=> b!142207 m!171379))

(assert (=> d!44179 d!45121))

(declare-fun d!45123 () Bool)

(assert (=> d!45123 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun bs!6005 () Bool)

(assert (= bs!6005 d!45123))

(assert (=> bs!6005 m!167053))

(declare-fun m!171381 () Bool)

(assert (=> bs!6005 m!171381))

(assert (=> b!140917 d!45123))

(assert (=> b!140917 d!44073))

(declare-fun d!45125 () Bool)

(declare-fun e!92666 () Bool)

(assert (=> d!45125 e!92666))

(declare-fun res!67841 () Bool)

(assert (=> d!45125 (=> res!67841 e!92666)))

(declare-fun lt!74584 () Bool)

(assert (=> d!45125 (= res!67841 (not lt!74584))))

(declare-fun lt!74581 () Bool)

(assert (=> d!45125 (= lt!74584 lt!74581)))

(declare-fun lt!74583 () Unit!4387)

(declare-fun e!92667 () Unit!4387)

(assert (=> d!45125 (= lt!74583 e!92667)))

(declare-fun c!26833 () Bool)

(assert (=> d!45125 (= c!26833 lt!74581)))

(assert (=> d!45125 (= lt!74581 (containsKey!180 (toList!858 lt!73889) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45125 (= (contains!904 lt!73889 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74584)))

(declare-fun b!142208 () Bool)

(declare-fun lt!74582 () Unit!4387)

(assert (=> b!142208 (= e!92667 lt!74582)))

(assert (=> b!142208 (= lt!74582 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73889) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142208 (isDefined!129 (getValueByKey!177 (toList!858 lt!73889) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142209 () Bool)

(declare-fun Unit!4496 () Unit!4387)

(assert (=> b!142209 (= e!92667 Unit!4496)))

(declare-fun b!142210 () Bool)

(assert (=> b!142210 (= e!92666 (isDefined!129 (getValueByKey!177 (toList!858 lt!73889) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45125 c!26833) b!142208))

(assert (= (and d!45125 (not c!26833)) b!142209))

(assert (= (and d!45125 (not res!67841)) b!142210))

(declare-fun m!171383 () Bool)

(assert (=> d!45125 m!171383))

(declare-fun m!171385 () Bool)

(assert (=> b!142208 m!171385))

(declare-fun m!171387 () Bool)

(assert (=> b!142208 m!171387))

(assert (=> b!142208 m!171387))

(declare-fun m!171389 () Bool)

(assert (=> b!142208 m!171389))

(assert (=> b!142210 m!171387))

(assert (=> b!142210 m!171387))

(assert (=> b!142210 m!171389))

(assert (=> b!140877 d!45125))

(assert (=> b!140842 d!44315))

(declare-fun d!45127 () Bool)

(assert (=> d!45127 (= (apply!120 (+!173 lt!73871 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))) lt!73866) (apply!120 lt!73871 lt!73866))))

(declare-fun lt!74585 () Unit!4387)

(assert (=> d!45127 (= lt!74585 (choose!867 lt!73871 lt!73860 (minValue!2789 (_2!1323 lt!73124)) lt!73866))))

(declare-fun e!92668 () Bool)

(assert (=> d!45127 e!92668))

(declare-fun res!67842 () Bool)

(assert (=> d!45127 (=> (not res!67842) (not e!92668))))

(assert (=> d!45127 (= res!67842 (contains!904 lt!73871 lt!73866))))

(assert (=> d!45127 (= (addApplyDifferent!96 lt!73871 lt!73860 (minValue!2789 (_2!1323 lt!73124)) lt!73866) lt!74585)))

(declare-fun b!142211 () Bool)

(assert (=> b!142211 (= e!92668 (not (= lt!73866 lt!73860)))))

(assert (= (and d!45127 res!67842) b!142211))

(assert (=> d!45127 m!168495))

(declare-fun m!171391 () Bool)

(assert (=> d!45127 m!171391))

(assert (=> d!45127 m!168473))

(assert (=> d!45127 m!168475))

(declare-fun m!171393 () Bool)

(assert (=> d!45127 m!171393))

(assert (=> d!45127 m!168473))

(assert (=> b!140842 d!45127))

(declare-fun d!45129 () Bool)

(assert (=> d!45129 (= (apply!120 (+!173 lt!73874 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))) lt!73873) (apply!120 lt!73874 lt!73873))))

(declare-fun lt!74586 () Unit!4387)

(assert (=> d!45129 (= lt!74586 (choose!867 lt!73874 lt!73870 (minValue!2789 (_2!1323 lt!73124)) lt!73873))))

(declare-fun e!92669 () Bool)

(assert (=> d!45129 e!92669))

(declare-fun res!67843 () Bool)

(assert (=> d!45129 (=> (not res!67843) (not e!92669))))

(assert (=> d!45129 (= res!67843 (contains!904 lt!73874 lt!73873))))

(assert (=> d!45129 (= (addApplyDifferent!96 lt!73874 lt!73870 (minValue!2789 (_2!1323 lt!73124)) lt!73873) lt!74586)))

(declare-fun b!142212 () Bool)

(assert (=> b!142212 (= e!92669 (not (= lt!73873 lt!73870)))))

(assert (= (and d!45129 res!67843) b!142212))

(assert (=> d!45129 m!168489))

(declare-fun m!171395 () Bool)

(assert (=> d!45129 m!171395))

(assert (=> d!45129 m!168491))

(assert (=> d!45129 m!168493))

(declare-fun m!171397 () Bool)

(assert (=> d!45129 m!171397))

(assert (=> d!45129 m!168491))

(assert (=> b!140842 d!45129))

(declare-fun d!45131 () Bool)

(assert (=> d!45131 (= (apply!120 lt!73871 lt!73866) (get!1535 (getValueByKey!177 (toList!858 lt!73871) lt!73866)))))

(declare-fun bs!6006 () Bool)

(assert (= bs!6006 d!45131))

(declare-fun m!171399 () Bool)

(assert (=> bs!6006 m!171399))

(assert (=> bs!6006 m!171399))

(declare-fun m!171401 () Bool)

(assert (=> bs!6006 m!171401))

(assert (=> b!140842 d!45131))

(declare-fun d!45133 () Bool)

(assert (=> d!45133 (= (apply!120 (+!173 lt!73871 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))) lt!73866) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73871 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))) lt!73866)))))

(declare-fun bs!6007 () Bool)

(assert (= bs!6007 d!45133))

(declare-fun m!171403 () Bool)

(assert (=> bs!6007 m!171403))

(assert (=> bs!6007 m!171403))

(declare-fun m!171405 () Bool)

(assert (=> bs!6007 m!171405))

(assert (=> b!140842 d!45133))

(declare-fun d!45135 () Bool)

(declare-fun e!92670 () Bool)

(assert (=> d!45135 e!92670))

(declare-fun res!67844 () Bool)

(assert (=> d!45135 (=> (not res!67844) (not e!92670))))

(declare-fun lt!74589 () ListLongMap!1685)

(assert (=> d!45135 (= res!67844 (contains!904 lt!74589 (_1!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))))))

(declare-fun lt!74588 () List!1719)

(assert (=> d!45135 (= lt!74589 (ListLongMap!1686 lt!74588))))

(declare-fun lt!74587 () Unit!4387)

(declare-fun lt!74590 () Unit!4387)

(assert (=> d!45135 (= lt!74587 lt!74590)))

(assert (=> d!45135 (= (getValueByKey!177 lt!74588 (_1!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45135 (= lt!74590 (lemmaContainsTupThenGetReturnValue!91 lt!74588 (_1!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45135 (= lt!74588 (insertStrictlySorted!94 (toList!858 lt!73859) (_1!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45135 (= (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))) lt!74589)))

(declare-fun b!142213 () Bool)

(declare-fun res!67845 () Bool)

(assert (=> b!142213 (=> (not res!67845) (not e!92670))))

(assert (=> b!142213 (= res!67845 (= (getValueByKey!177 (toList!858 lt!74589) (_1!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))))))))

(declare-fun b!142214 () Bool)

(assert (=> b!142214 (= e!92670 (contains!907 (toList!858 lt!74589) (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))))))

(assert (= (and d!45135 res!67844) b!142213))

(assert (= (and b!142213 res!67845) b!142214))

(declare-fun m!171407 () Bool)

(assert (=> d!45135 m!171407))

(declare-fun m!171409 () Bool)

(assert (=> d!45135 m!171409))

(declare-fun m!171411 () Bool)

(assert (=> d!45135 m!171411))

(declare-fun m!171413 () Bool)

(assert (=> d!45135 m!171413))

(declare-fun m!171415 () Bool)

(assert (=> b!142213 m!171415))

(declare-fun m!171417 () Bool)

(assert (=> b!142214 m!171417))

(assert (=> b!140842 d!45135))

(declare-fun d!45137 () Bool)

(declare-fun e!92671 () Bool)

(assert (=> d!45137 e!92671))

(declare-fun res!67846 () Bool)

(assert (=> d!45137 (=> (not res!67846) (not e!92671))))

(declare-fun lt!74593 () ListLongMap!1685)

(assert (=> d!45137 (= res!67846 (contains!904 lt!74593 (_1!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))))))

(declare-fun lt!74592 () List!1719)

(assert (=> d!45137 (= lt!74593 (ListLongMap!1686 lt!74592))))

(declare-fun lt!74591 () Unit!4387)

(declare-fun lt!74594 () Unit!4387)

(assert (=> d!45137 (= lt!74591 lt!74594)))

(assert (=> d!45137 (= (getValueByKey!177 lt!74592 (_1!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45137 (= lt!74594 (lemmaContainsTupThenGetReturnValue!91 lt!74592 (_1!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45137 (= lt!74592 (insertStrictlySorted!94 (toList!858 lt!73871) (_1!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45137 (= (+!173 lt!73871 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))) lt!74593)))

(declare-fun b!142215 () Bool)

(declare-fun res!67847 () Bool)

(assert (=> b!142215 (=> (not res!67847) (not e!92671))))

(assert (=> b!142215 (= res!67847 (= (getValueByKey!177 (toList!858 lt!74593) (_1!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))))))))

(declare-fun b!142216 () Bool)

(assert (=> b!142216 (= e!92671 (contains!907 (toList!858 lt!74593) (tuple2!2623 lt!73860 (minValue!2789 (_2!1323 lt!73124)))))))

(assert (= (and d!45137 res!67846) b!142215))

(assert (= (and b!142215 res!67847) b!142216))

(declare-fun m!171419 () Bool)

(assert (=> d!45137 m!171419))

(declare-fun m!171421 () Bool)

(assert (=> d!45137 m!171421))

(declare-fun m!171423 () Bool)

(assert (=> d!45137 m!171423))

(declare-fun m!171425 () Bool)

(assert (=> d!45137 m!171425))

(declare-fun m!171427 () Bool)

(assert (=> b!142215 m!171427))

(declare-fun m!171429 () Bool)

(assert (=> b!142216 m!171429))

(assert (=> b!140842 d!45137))

(declare-fun d!45139 () Bool)

(assert (=> d!45139 (contains!904 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))) lt!73865)))

(declare-fun lt!74595 () Unit!4387)

(assert (=> d!45139 (= lt!74595 (choose!866 lt!73859 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)) lt!73865))))

(assert (=> d!45139 (contains!904 lt!73859 lt!73865)))

(assert (=> d!45139 (= (addStillContains!96 lt!73859 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)) lt!73865) lt!74595)))

(declare-fun bs!6008 () Bool)

(assert (= bs!6008 d!45139))

(assert (=> bs!6008 m!168485))

(assert (=> bs!6008 m!168485))

(assert (=> bs!6008 m!168487))

(declare-fun m!171431 () Bool)

(assert (=> bs!6008 m!171431))

(declare-fun m!171433 () Bool)

(assert (=> bs!6008 m!171433))

(assert (=> b!140842 d!45139))

(declare-fun d!45141 () Bool)

(assert (=> d!45141 (= (apply!120 (+!173 lt!73858 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))) lt!73856) (apply!120 lt!73858 lt!73856))))

(declare-fun lt!74596 () Unit!4387)

(assert (=> d!45141 (= lt!74596 (choose!867 lt!73858 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)) lt!73856))))

(declare-fun e!92672 () Bool)

(assert (=> d!45141 e!92672))

(declare-fun res!67848 () Bool)

(assert (=> d!45141 (=> (not res!67848) (not e!92672))))

(assert (=> d!45141 (= res!67848 (contains!904 lt!73858 lt!73856))))

(assert (=> d!45141 (= (addApplyDifferent!96 lt!73858 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)) lt!73856) lt!74596)))

(declare-fun b!142217 () Bool)

(assert (=> b!142217 (= e!92672 (not (= lt!73856 lt!73868)))))

(assert (= (and d!45141 res!67848) b!142217))

(assert (=> d!45141 m!168499))

(declare-fun m!171435 () Bool)

(assert (=> d!45141 m!171435))

(assert (=> d!45141 m!168479))

(assert (=> d!45141 m!168501))

(declare-fun m!171437 () Bool)

(assert (=> d!45141 m!171437))

(assert (=> d!45141 m!168479))

(assert (=> b!140842 d!45141))

(declare-fun d!45143 () Bool)

(declare-fun e!92673 () Bool)

(assert (=> d!45143 e!92673))

(declare-fun res!67849 () Bool)

(assert (=> d!45143 (=> res!67849 e!92673)))

(declare-fun lt!74600 () Bool)

(assert (=> d!45143 (= res!67849 (not lt!74600))))

(declare-fun lt!74597 () Bool)

(assert (=> d!45143 (= lt!74600 lt!74597)))

(declare-fun lt!74599 () Unit!4387)

(declare-fun e!92674 () Unit!4387)

(assert (=> d!45143 (= lt!74599 e!92674)))

(declare-fun c!26834 () Bool)

(assert (=> d!45143 (= c!26834 lt!74597)))

(assert (=> d!45143 (= lt!74597 (containsKey!180 (toList!858 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))) lt!73865))))

(assert (=> d!45143 (= (contains!904 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124)))) lt!73865) lt!74600)))

(declare-fun b!142218 () Bool)

(declare-fun lt!74598 () Unit!4387)

(assert (=> b!142218 (= e!92674 lt!74598)))

(assert (=> b!142218 (= lt!74598 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))) lt!73865))))

(assert (=> b!142218 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))) lt!73865))))

(declare-fun b!142219 () Bool)

(declare-fun Unit!4497 () Unit!4387)

(assert (=> b!142219 (= e!92674 Unit!4497)))

(declare-fun b!142220 () Bool)

(assert (=> b!142220 (= e!92673 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73859 (tuple2!2623 lt!73861 (zeroValue!2789 (_2!1323 lt!73124))))) lt!73865)))))

(assert (= (and d!45143 c!26834) b!142218))

(assert (= (and d!45143 (not c!26834)) b!142219))

(assert (= (and d!45143 (not res!67849)) b!142220))

(declare-fun m!171439 () Bool)

(assert (=> d!45143 m!171439))

(declare-fun m!171441 () Bool)

(assert (=> b!142218 m!171441))

(declare-fun m!171443 () Bool)

(assert (=> b!142218 m!171443))

(assert (=> b!142218 m!171443))

(declare-fun m!171445 () Bool)

(assert (=> b!142218 m!171445))

(assert (=> b!142220 m!171443))

(assert (=> b!142220 m!171443))

(assert (=> b!142220 m!171445))

(assert (=> b!140842 d!45143))

(declare-fun d!45145 () Bool)

(declare-fun e!92675 () Bool)

(assert (=> d!45145 e!92675))

(declare-fun res!67850 () Bool)

(assert (=> d!45145 (=> (not res!67850) (not e!92675))))

(declare-fun lt!74603 () ListLongMap!1685)

(assert (=> d!45145 (= res!67850 (contains!904 lt!74603 (_1!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))))))

(declare-fun lt!74602 () List!1719)

(assert (=> d!45145 (= lt!74603 (ListLongMap!1686 lt!74602))))

(declare-fun lt!74601 () Unit!4387)

(declare-fun lt!74604 () Unit!4387)

(assert (=> d!45145 (= lt!74601 lt!74604)))

(assert (=> d!45145 (= (getValueByKey!177 lt!74602 (_1!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45145 (= lt!74604 (lemmaContainsTupThenGetReturnValue!91 lt!74602 (_1!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45145 (= lt!74602 (insertStrictlySorted!94 (toList!858 lt!73874) (_1!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45145 (= (+!173 lt!73874 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))) lt!74603)))

(declare-fun b!142221 () Bool)

(declare-fun res!67851 () Bool)

(assert (=> b!142221 (=> (not res!67851) (not e!92675))))

(assert (=> b!142221 (= res!67851 (= (getValueByKey!177 (toList!858 lt!74603) (_1!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))))))))

(declare-fun b!142222 () Bool)

(assert (=> b!142222 (= e!92675 (contains!907 (toList!858 lt!74603) (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))))))

(assert (= (and d!45145 res!67850) b!142221))

(assert (= (and b!142221 res!67851) b!142222))

(declare-fun m!171447 () Bool)

(assert (=> d!45145 m!171447))

(declare-fun m!171449 () Bool)

(assert (=> d!45145 m!171449))

(declare-fun m!171451 () Bool)

(assert (=> d!45145 m!171451))

(declare-fun m!171453 () Bool)

(assert (=> d!45145 m!171453))

(declare-fun m!171455 () Bool)

(assert (=> b!142221 m!171455))

(declare-fun m!171457 () Bool)

(assert (=> b!142222 m!171457))

(assert (=> b!140842 d!45145))

(declare-fun d!45147 () Bool)

(assert (=> d!45147 (= (apply!120 lt!73858 lt!73856) (get!1535 (getValueByKey!177 (toList!858 lt!73858) lt!73856)))))

(declare-fun bs!6009 () Bool)

(assert (= bs!6009 d!45147))

(declare-fun m!171459 () Bool)

(assert (=> bs!6009 m!171459))

(assert (=> bs!6009 m!171459))

(declare-fun m!171461 () Bool)

(assert (=> bs!6009 m!171461))

(assert (=> b!140842 d!45147))

(declare-fun d!45149 () Bool)

(assert (=> d!45149 (= (apply!120 (+!173 lt!73874 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124)))) lt!73873) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73874 (tuple2!2623 lt!73870 (minValue!2789 (_2!1323 lt!73124))))) lt!73873)))))

(declare-fun bs!6010 () Bool)

(assert (= bs!6010 d!45149))

(declare-fun m!171463 () Bool)

(assert (=> bs!6010 m!171463))

(assert (=> bs!6010 m!171463))

(declare-fun m!171465 () Bool)

(assert (=> bs!6010 m!171465))

(assert (=> b!140842 d!45149))

(declare-fun d!45151 () Bool)

(assert (=> d!45151 (= (apply!120 lt!73874 lt!73873) (get!1535 (getValueByKey!177 (toList!858 lt!73874) lt!73873)))))

(declare-fun bs!6011 () Bool)

(assert (= bs!6011 d!45151))

(declare-fun m!171467 () Bool)

(assert (=> bs!6011 m!171467))

(assert (=> bs!6011 m!171467))

(declare-fun m!171469 () Bool)

(assert (=> bs!6011 m!171469))

(assert (=> b!140842 d!45151))

(declare-fun d!45153 () Bool)

(assert (=> d!45153 (= (apply!120 (+!173 lt!73858 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))) lt!73856) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73858 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))) lt!73856)))))

(declare-fun bs!6012 () Bool)

(assert (= bs!6012 d!45153))

(declare-fun m!171471 () Bool)

(assert (=> bs!6012 m!171471))

(assert (=> bs!6012 m!171471))

(declare-fun m!171473 () Bool)

(assert (=> bs!6012 m!171473))

(assert (=> b!140842 d!45153))

(declare-fun d!45155 () Bool)

(declare-fun e!92676 () Bool)

(assert (=> d!45155 e!92676))

(declare-fun res!67852 () Bool)

(assert (=> d!45155 (=> (not res!67852) (not e!92676))))

(declare-fun lt!74607 () ListLongMap!1685)

(assert (=> d!45155 (= res!67852 (contains!904 lt!74607 (_1!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))))))

(declare-fun lt!74606 () List!1719)

(assert (=> d!45155 (= lt!74607 (ListLongMap!1686 lt!74606))))

(declare-fun lt!74605 () Unit!4387)

(declare-fun lt!74608 () Unit!4387)

(assert (=> d!45155 (= lt!74605 lt!74608)))

(assert (=> d!45155 (= (getValueByKey!177 lt!74606 (_1!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45155 (= lt!74608 (lemmaContainsTupThenGetReturnValue!91 lt!74606 (_1!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45155 (= lt!74606 (insertStrictlySorted!94 (toList!858 lt!73858) (_1!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))) (_2!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))))))

(assert (=> d!45155 (= (+!173 lt!73858 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))) lt!74607)))

(declare-fun b!142223 () Bool)

(declare-fun res!67853 () Bool)

(assert (=> b!142223 (=> (not res!67853) (not e!92676))))

(assert (=> b!142223 (= res!67853 (= (getValueByKey!177 (toList!858 lt!74607) (_1!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124))))) (Some!182 (_2!1322 (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))))))))

(declare-fun b!142224 () Bool)

(assert (=> b!142224 (= e!92676 (contains!907 (toList!858 lt!74607) (tuple2!2623 lt!73868 (zeroValue!2789 (_2!1323 lt!73124)))))))

(assert (= (and d!45155 res!67852) b!142223))

(assert (= (and b!142223 res!67853) b!142224))

(declare-fun m!171475 () Bool)

(assert (=> d!45155 m!171475))

(declare-fun m!171477 () Bool)

(assert (=> d!45155 m!171477))

(declare-fun m!171479 () Bool)

(assert (=> d!45155 m!171479))

(declare-fun m!171481 () Bool)

(assert (=> d!45155 m!171481))

(declare-fun m!171483 () Bool)

(assert (=> b!142223 m!171483))

(declare-fun m!171485 () Bool)

(assert (=> b!142224 m!171485))

(assert (=> b!140842 d!45155))

(declare-fun d!45157 () Bool)

(declare-fun res!67854 () Bool)

(declare-fun e!92677 () Bool)

(assert (=> d!45157 (=> res!67854 e!92677)))

(assert (=> d!45157 (= res!67854 (and ((_ is Cons!1715) (toList!858 lt!73200)) (= (_1!1322 (h!2322 (toList!858 lt!73200))) lt!73195)))))

(assert (=> d!45157 (= (containsKey!180 (toList!858 lt!73200) lt!73195) e!92677)))

(declare-fun b!142225 () Bool)

(declare-fun e!92678 () Bool)

(assert (=> b!142225 (= e!92677 e!92678)))

(declare-fun res!67855 () Bool)

(assert (=> b!142225 (=> (not res!67855) (not e!92678))))

(assert (=> b!142225 (= res!67855 (and (or (not ((_ is Cons!1715) (toList!858 lt!73200))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73200))) lt!73195)) ((_ is Cons!1715) (toList!858 lt!73200)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73200))) lt!73195)))))

(declare-fun b!142226 () Bool)

(assert (=> b!142226 (= e!92678 (containsKey!180 (t!6295 (toList!858 lt!73200)) lt!73195))))

(assert (= (and d!45157 (not res!67854)) b!142225))

(assert (= (and b!142225 res!67855) b!142226))

(declare-fun m!171487 () Bool)

(assert (=> b!142226 m!171487))

(assert (=> d!43787 d!45157))

(declare-fun d!45159 () Bool)

(declare-fun e!92679 () Bool)

(assert (=> d!45159 e!92679))

(declare-fun res!67856 () Bool)

(assert (=> d!45159 (=> res!67856 e!92679)))

(declare-fun lt!74612 () Bool)

(assert (=> d!45159 (= res!67856 (not lt!74612))))

(declare-fun lt!74609 () Bool)

(assert (=> d!45159 (= lt!74612 lt!74609)))

(declare-fun lt!74611 () Unit!4387)

(declare-fun e!92680 () Unit!4387)

(assert (=> d!45159 (= lt!74611 e!92680)))

(declare-fun c!26835 () Bool)

(assert (=> d!45159 (= c!26835 lt!74609)))

(assert (=> d!45159 (= lt!74609 (containsKey!180 (toList!858 lt!73663) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45159 (= (contains!904 lt!73663 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74612)))

(declare-fun b!142227 () Bool)

(declare-fun lt!74610 () Unit!4387)

(assert (=> b!142227 (= e!92680 lt!74610)))

(assert (=> b!142227 (= lt!74610 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73663) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> b!142227 (isDefined!129 (getValueByKey!177 (toList!858 lt!73663) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142228 () Bool)

(declare-fun Unit!4498 () Unit!4387)

(assert (=> b!142228 (= e!92680 Unit!4498)))

(declare-fun b!142229 () Bool)

(assert (=> b!142229 (= e!92679 (isDefined!129 (getValueByKey!177 (toList!858 lt!73663) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!45159 c!26835) b!142227))

(assert (= (and d!45159 (not c!26835)) b!142228))

(assert (= (and d!45159 (not res!67856)) b!142229))

(declare-fun m!171489 () Bool)

(assert (=> d!45159 m!171489))

(declare-fun m!171491 () Bool)

(assert (=> b!142227 m!171491))

(assert (=> b!142227 m!167895))

(assert (=> b!142227 m!167895))

(declare-fun m!171493 () Bool)

(assert (=> b!142227 m!171493))

(assert (=> b!142229 m!167895))

(assert (=> b!142229 m!167895))

(assert (=> b!142229 m!171493))

(assert (=> d!43805 d!45159))

(declare-fun b!142231 () Bool)

(declare-fun e!92681 () Option!183)

(declare-fun e!92682 () Option!183)

(assert (=> b!142231 (= e!92681 e!92682)))

(declare-fun c!26837 () Bool)

(assert (=> b!142231 (= c!26837 (and ((_ is Cons!1715) lt!73662) (not (= (_1!1322 (h!2322 lt!73662)) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!142232 () Bool)

(assert (=> b!142232 (= e!92682 (getValueByKey!177 (t!6295 lt!73662) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142230 () Bool)

(assert (=> b!142230 (= e!92681 (Some!182 (_2!1322 (h!2322 lt!73662))))))

(declare-fun b!142233 () Bool)

(assert (=> b!142233 (= e!92682 None!181)))

(declare-fun d!45161 () Bool)

(declare-fun c!26836 () Bool)

(assert (=> d!45161 (= c!26836 (and ((_ is Cons!1715) lt!73662) (= (_1!1322 (h!2322 lt!73662)) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!45161 (= (getValueByKey!177 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92681)))

(assert (= (and d!45161 c!26836) b!142230))

(assert (= (and d!45161 (not c!26836)) b!142231))

(assert (= (and b!142231 c!26837) b!142232))

(assert (= (and b!142231 (not c!26837)) b!142233))

(declare-fun m!171495 () Bool)

(assert (=> b!142232 m!171495))

(assert (=> d!43805 d!45161))

(declare-fun d!45163 () Bool)

(assert (=> d!45163 (= (getValueByKey!177 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74613 () Unit!4387)

(assert (=> d!45163 (= lt!74613 (choose!873 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92683 () Bool)

(assert (=> d!45163 e!92683))

(declare-fun res!67857 () Bool)

(assert (=> d!45163 (=> (not res!67857) (not e!92683))))

(assert (=> d!45163 (= res!67857 (isStrictlySorted!312 lt!73662))))

(assert (=> d!45163 (= (lemmaContainsTupThenGetReturnValue!91 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74613)))

(declare-fun b!142234 () Bool)

(declare-fun res!67858 () Bool)

(assert (=> b!142234 (=> (not res!67858) (not e!92683))))

(assert (=> b!142234 (= res!67858 (containsKey!180 lt!73662 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142235 () Bool)

(assert (=> b!142235 (= e!92683 (contains!907 lt!73662 (tuple2!2623 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!45163 res!67857) b!142234))

(assert (= (and b!142234 res!67858) b!142235))

(assert (=> d!45163 m!167889))

(declare-fun m!171497 () Bool)

(assert (=> d!45163 m!171497))

(declare-fun m!171499 () Bool)

(assert (=> d!45163 m!171499))

(declare-fun m!171501 () Bool)

(assert (=> b!142234 m!171501))

(declare-fun m!171503 () Bool)

(assert (=> b!142235 m!171503))

(assert (=> d!43805 d!45163))

(declare-fun bm!15734 () Bool)

(declare-fun call!15739 () List!1719)

(declare-fun call!15738 () List!1719)

(assert (=> bm!15734 (= call!15739 call!15738)))

(declare-fun b!142237 () Bool)

(declare-fun e!92685 () List!1719)

(declare-fun e!92687 () List!1719)

(assert (=> b!142237 (= e!92685 e!92687)))

(declare-fun c!26841 () Bool)

(assert (=> b!142237 (= c!26841 (and ((_ is Cons!1715) (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (= (_1!1322 (h!2322 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142238 () Bool)

(declare-fun res!67860 () Bool)

(declare-fun e!92684 () Bool)

(assert (=> b!142238 (=> (not res!67860) (not e!92684))))

(declare-fun lt!74614 () List!1719)

(assert (=> b!142238 (= res!67860 (containsKey!180 lt!74614 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142239 () Bool)

(declare-fun c!26839 () Bool)

(assert (=> b!142239 (= c!26839 (and ((_ is Cons!1715) (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (bvsgt (_1!1322 (h!2322 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun e!92686 () List!1719)

(assert (=> b!142239 (= e!92687 e!92686)))

(declare-fun bm!15735 () Bool)

(declare-fun call!15737 () List!1719)

(assert (=> bm!15735 (= call!15738 call!15737)))

(declare-fun b!142240 () Bool)

(assert (=> b!142240 (= e!92687 call!15738)))

(declare-fun b!142241 () Bool)

(assert (=> b!142241 (= e!92685 call!15737)))

(declare-fun b!142242 () Bool)

(assert (=> b!142242 (= e!92684 (contains!907 lt!74614 (tuple2!2623 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142236 () Bool)

(declare-fun e!92688 () List!1719)

(assert (=> b!142236 (= e!92688 (ite c!26841 (t!6295 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (ite c!26839 (Cons!1715 (h!2322 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (t!6295 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))))) Nil!1716)))))

(declare-fun d!45165 () Bool)

(assert (=> d!45165 e!92684))

(declare-fun res!67859 () Bool)

(assert (=> d!45165 (=> (not res!67859) (not e!92684))))

(assert (=> d!45165 (= res!67859 (isStrictlySorted!312 lt!74614))))

(assert (=> d!45165 (= lt!74614 e!92685)))

(declare-fun c!26840 () Bool)

(assert (=> d!45165 (= c!26840 (and ((_ is Cons!1715) (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (bvslt (_1!1322 (h!2322 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!45165 (isStrictlySorted!312 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))))))

(assert (=> d!45165 (= (insertStrictlySorted!94 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74614)))

(declare-fun b!142243 () Bool)

(assert (=> b!142243 (= e!92686 call!15739)))

(declare-fun b!142244 () Bool)

(assert (=> b!142244 (= e!92686 call!15739)))

(declare-fun bm!15736 () Bool)

(assert (=> bm!15736 (= call!15737 ($colon$colon!93 e!92688 (ite c!26840 (h!2322 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (tuple2!2623 (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun c!26838 () Bool)

(assert (=> bm!15736 (= c!26838 c!26840)))

(declare-fun b!142245 () Bool)

(assert (=> b!142245 (= e!92688 (insertStrictlySorted!94 (t!6295 (toList!858 (ite c!26197 call!15513 (ite c!26198 call!15512 call!15514)))) (_1!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26197 c!26198) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!45165 c!26840) b!142241))

(assert (= (and d!45165 (not c!26840)) b!142237))

(assert (= (and b!142237 c!26841) b!142240))

(assert (= (and b!142237 (not c!26841)) b!142239))

(assert (= (and b!142239 c!26839) b!142243))

(assert (= (and b!142239 (not c!26839)) b!142244))

(assert (= (or b!142243 b!142244) bm!15734))

(assert (= (or b!142240 bm!15734) bm!15735))

(assert (= (or b!142241 bm!15735) bm!15736))

(assert (= (and bm!15736 c!26838) b!142245))

(assert (= (and bm!15736 (not c!26838)) b!142236))

(assert (= (and d!45165 res!67859) b!142238))

(assert (= (and b!142238 res!67860) b!142242))

(declare-fun m!171505 () Bool)

(assert (=> bm!15736 m!171505))

(declare-fun m!171507 () Bool)

(assert (=> d!45165 m!171507))

(declare-fun m!171509 () Bool)

(assert (=> d!45165 m!171509))

(declare-fun m!171511 () Bool)

(assert (=> b!142238 m!171511))

(declare-fun m!171513 () Bool)

(assert (=> b!142245 m!171513))

(declare-fun m!171515 () Bool)

(assert (=> b!142242 m!171515))

(assert (=> d!43805 d!45165))

(declare-fun d!45167 () Bool)

(declare-fun e!92689 () Bool)

(assert (=> d!45167 e!92689))

(declare-fun res!67861 () Bool)

(assert (=> d!45167 (=> res!67861 e!92689)))

(declare-fun lt!74618 () Bool)

(assert (=> d!45167 (= res!67861 (not lt!74618))))

(declare-fun lt!74615 () Bool)

(assert (=> d!45167 (= lt!74618 lt!74615)))

(declare-fun lt!74617 () Unit!4387)

(declare-fun e!92690 () Unit!4387)

(assert (=> d!45167 (= lt!74617 e!92690)))

(declare-fun c!26842 () Bool)

(assert (=> d!45167 (= c!26842 lt!74615)))

(assert (=> d!45167 (= lt!74615 (containsKey!180 (toList!858 lt!73601) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45167 (= (contains!904 lt!73601 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74618)))

(declare-fun b!142246 () Bool)

(declare-fun lt!74616 () Unit!4387)

(assert (=> b!142246 (= e!92690 lt!74616)))

(assert (=> b!142246 (= lt!74616 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73601) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142246 (isDefined!129 (getValueByKey!177 (toList!858 lt!73601) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142247 () Bool)

(declare-fun Unit!4499 () Unit!4387)

(assert (=> b!142247 (= e!92690 Unit!4499)))

(declare-fun b!142248 () Bool)

(assert (=> b!142248 (= e!92689 (isDefined!129 (getValueByKey!177 (toList!858 lt!73601) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45167 c!26842) b!142246))

(assert (= (and d!45167 (not c!26842)) b!142247))

(assert (= (and d!45167 (not res!67861)) b!142248))

(assert (=> d!45167 m!166927))

(declare-fun m!171517 () Bool)

(assert (=> d!45167 m!171517))

(assert (=> b!142246 m!166927))

(declare-fun m!171519 () Bool)

(assert (=> b!142246 m!171519))

(assert (=> b!142246 m!166927))

(assert (=> b!142246 m!170579))

(assert (=> b!142246 m!170579))

(declare-fun m!171521 () Bool)

(assert (=> b!142246 m!171521))

(assert (=> b!142248 m!166927))

(assert (=> b!142248 m!170579))

(assert (=> b!142248 m!170579))

(assert (=> b!142248 m!171521))

(assert (=> b!140386 d!45167))

(declare-fun d!45169 () Bool)

(declare-fun e!92691 () Bool)

(assert (=> d!45169 e!92691))

(declare-fun res!67862 () Bool)

(assert (=> d!45169 (=> (not res!67862) (not e!92691))))

(declare-fun lt!74621 () ListLongMap!1685)

(assert (=> d!45169 (= res!67862 (contains!904 lt!74621 (_1!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))))

(declare-fun lt!74620 () List!1719)

(assert (=> d!45169 (= lt!74621 (ListLongMap!1686 lt!74620))))

(declare-fun lt!74619 () Unit!4387)

(declare-fun lt!74622 () Unit!4387)

(assert (=> d!45169 (= lt!74619 lt!74622)))

(assert (=> d!45169 (= (getValueByKey!177 lt!74620 (_1!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))) (Some!182 (_2!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))))

(assert (=> d!45169 (= lt!74622 (lemmaContainsTupThenGetReturnValue!91 lt!74620 (_1!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))) (_2!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))))

(assert (=> d!45169 (= lt!74620 (insertStrictlySorted!94 (toList!858 (ite c!26434 call!15628 (ite c!26435 call!15627 call!15629))) (_1!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))) (_2!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))))))

(assert (=> d!45169 (= (+!173 (ite c!26434 call!15628 (ite c!26435 call!15627 call!15629)) (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))) lt!74621)))

(declare-fun b!142249 () Bool)

(declare-fun res!67863 () Bool)

(assert (=> b!142249 (=> (not res!67863) (not e!92691))))

(assert (=> b!142249 (= res!67863 (= (getValueByKey!177 (toList!858 lt!74621) (_1!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124)))))) (Some!182 (_2!1322 (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))))

(declare-fun b!142250 () Bool)

(assert (=> b!142250 (= e!92691 (contains!907 (toList!858 lt!74621) (ite (or c!26434 c!26435) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1323 lt!73124))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1323 lt!73124))))))))

(assert (= (and d!45169 res!67862) b!142249))

(assert (= (and b!142249 res!67863) b!142250))

(declare-fun m!171523 () Bool)

(assert (=> d!45169 m!171523))

(declare-fun m!171525 () Bool)

(assert (=> d!45169 m!171525))

(declare-fun m!171527 () Bool)

(assert (=> d!45169 m!171527))

(declare-fun m!171529 () Bool)

(assert (=> d!45169 m!171529))

(declare-fun m!171531 () Bool)

(assert (=> b!142249 m!171531))

(declare-fun m!171533 () Bool)

(assert (=> b!142250 m!171533))

(assert (=> bm!15626 d!45169))

(declare-fun d!45171 () Bool)

(declare-fun e!92692 () Bool)

(assert (=> d!45171 e!92692))

(declare-fun res!67864 () Bool)

(assert (=> d!45171 (=> res!67864 e!92692)))

(declare-fun lt!74626 () Bool)

(assert (=> d!45171 (= res!67864 (not lt!74626))))

(declare-fun lt!74623 () Bool)

(assert (=> d!45171 (= lt!74626 lt!74623)))

(declare-fun lt!74625 () Unit!4387)

(declare-fun e!92693 () Unit!4387)

(assert (=> d!45171 (= lt!74625 e!92693)))

(declare-fun c!26843 () Bool)

(assert (=> d!45171 (= c!26843 lt!74623)))

(assert (=> d!45171 (= lt!74623 (containsKey!180 (toList!858 lt!73549) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45171 (= (contains!904 lt!73549 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!74626)))

(declare-fun b!142251 () Bool)

(declare-fun lt!74624 () Unit!4387)

(assert (=> b!142251 (= e!92693 lt!74624)))

(assert (=> b!142251 (= lt!74624 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73549) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(assert (=> b!142251 (isDefined!129 (getValueByKey!177 (toList!858 lt!73549) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142252 () Bool)

(declare-fun Unit!4500 () Unit!4387)

(assert (=> b!142252 (= e!92693 Unit!4500)))

(declare-fun b!142253 () Bool)

(assert (=> b!142253 (= e!92692 (isDefined!129 (getValueByKey!177 (toList!858 lt!73549) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45171 c!26843) b!142251))

(assert (= (and d!45171 (not c!26843)) b!142252))

(assert (= (and d!45171 (not res!67864)) b!142253))

(declare-fun m!171535 () Bool)

(assert (=> d!45171 m!171535))

(declare-fun m!171537 () Bool)

(assert (=> b!142251 m!171537))

(assert (=> b!142251 m!167609))

(assert (=> b!142251 m!167609))

(declare-fun m!171539 () Bool)

(assert (=> b!142251 m!171539))

(assert (=> b!142253 m!167609))

(assert (=> b!142253 m!167609))

(assert (=> b!142253 m!171539))

(assert (=> d!43739 d!45171))

(declare-fun b!142255 () Bool)

(declare-fun e!92694 () Option!183)

(declare-fun e!92695 () Option!183)

(assert (=> b!142255 (= e!92694 e!92695)))

(declare-fun c!26845 () Bool)

(assert (=> b!142255 (= c!26845 (and ((_ is Cons!1715) lt!73548) (not (= (_1!1322 (h!2322 lt!73548)) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142256 () Bool)

(assert (=> b!142256 (= e!92695 (getValueByKey!177 (t!6295 lt!73548) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142254 () Bool)

(assert (=> b!142254 (= e!92694 (Some!182 (_2!1322 (h!2322 lt!73548))))))

(declare-fun b!142257 () Bool)

(assert (=> b!142257 (= e!92695 None!181)))

(declare-fun c!26844 () Bool)

(declare-fun d!45173 () Bool)

(assert (=> d!45173 (= c!26844 (and ((_ is Cons!1715) lt!73548) (= (_1!1322 (h!2322 lt!73548)) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45173 (= (getValueByKey!177 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) e!92694)))

(assert (= (and d!45173 c!26844) b!142254))

(assert (= (and d!45173 (not c!26844)) b!142255))

(assert (= (and b!142255 c!26845) b!142256))

(assert (= (and b!142255 (not c!26845)) b!142257))

(declare-fun m!171541 () Bool)

(assert (=> b!142256 m!171541))

(assert (=> d!43739 d!45173))

(declare-fun d!45175 () Bool)

(assert (=> d!45175 (= (getValueByKey!177 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74627 () Unit!4387)

(assert (=> d!45175 (= lt!74627 (choose!873 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92696 () Bool)

(assert (=> d!45175 e!92696))

(declare-fun res!67865 () Bool)

(assert (=> d!45175 (=> (not res!67865) (not e!92696))))

(assert (=> d!45175 (= res!67865 (isStrictlySorted!312 lt!73548))))

(assert (=> d!45175 (= (lemmaContainsTupThenGetReturnValue!91 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!74627)))

(declare-fun b!142258 () Bool)

(declare-fun res!67866 () Bool)

(assert (=> b!142258 (=> (not res!67866) (not e!92696))))

(assert (=> b!142258 (= res!67866 (containsKey!180 lt!73548 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142259 () Bool)

(assert (=> b!142259 (= e!92696 (contains!907 lt!73548 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45175 res!67865) b!142258))

(assert (= (and b!142258 res!67866) b!142259))

(assert (=> d!45175 m!167603))

(declare-fun m!171543 () Bool)

(assert (=> d!45175 m!171543))

(declare-fun m!171545 () Bool)

(assert (=> d!45175 m!171545))

(declare-fun m!171547 () Bool)

(assert (=> b!142258 m!171547))

(declare-fun m!171549 () Bool)

(assert (=> b!142259 m!171549))

(assert (=> d!43739 d!45175))

(declare-fun bm!15737 () Bool)

(declare-fun call!15742 () List!1719)

(declare-fun call!15741 () List!1719)

(assert (=> bm!15737 (= call!15742 call!15741)))

(declare-fun b!142261 () Bool)

(declare-fun e!92698 () List!1719)

(declare-fun e!92700 () List!1719)

(assert (=> b!142261 (= e!92698 e!92700)))

(declare-fun c!26849 () Bool)

(assert (=> b!142261 (= c!26849 (and ((_ is Cons!1715) (toList!858 lt!73218)) (= (_1!1322 (h!2322 (toList!858 lt!73218))) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142262 () Bool)

(declare-fun res!67868 () Bool)

(declare-fun e!92697 () Bool)

(assert (=> b!142262 (=> (not res!67868) (not e!92697))))

(declare-fun lt!74628 () List!1719)

(assert (=> b!142262 (= res!67868 (containsKey!180 lt!74628 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(declare-fun c!26847 () Bool)

(declare-fun b!142263 () Bool)

(assert (=> b!142263 (= c!26847 (and ((_ is Cons!1715) (toList!858 lt!73218)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73218))) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92699 () List!1719)

(assert (=> b!142263 (= e!92700 e!92699)))

(declare-fun bm!15738 () Bool)

(declare-fun call!15740 () List!1719)

(assert (=> bm!15738 (= call!15741 call!15740)))

(declare-fun b!142264 () Bool)

(assert (=> b!142264 (= e!92700 call!15741)))

(declare-fun b!142265 () Bool)

(assert (=> b!142265 (= e!92698 call!15740)))

(declare-fun b!142266 () Bool)

(assert (=> b!142266 (= e!92697 (contains!907 lt!74628 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142260 () Bool)

(declare-fun e!92701 () List!1719)

(assert (=> b!142260 (= e!92701 (ite c!26849 (t!6295 (toList!858 lt!73218)) (ite c!26847 (Cons!1715 (h!2322 (toList!858 lt!73218)) (t!6295 (toList!858 lt!73218))) Nil!1716)))))

(declare-fun d!45177 () Bool)

(assert (=> d!45177 e!92697))

(declare-fun res!67867 () Bool)

(assert (=> d!45177 (=> (not res!67867) (not e!92697))))

(assert (=> d!45177 (= res!67867 (isStrictlySorted!312 lt!74628))))

(assert (=> d!45177 (= lt!74628 e!92698)))

(declare-fun c!26848 () Bool)

(assert (=> d!45177 (= c!26848 (and ((_ is Cons!1715) (toList!858 lt!73218)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73218))) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45177 (isStrictlySorted!312 (toList!858 lt!73218))))

(assert (=> d!45177 (= (insertStrictlySorted!94 (toList!858 lt!73218) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))) lt!74628)))

(declare-fun b!142267 () Bool)

(assert (=> b!142267 (= e!92699 call!15742)))

(declare-fun b!142268 () Bool)

(assert (=> b!142268 (= e!92699 call!15742)))

(declare-fun bm!15739 () Bool)

(assert (=> bm!15739 (= call!15740 ($colon$colon!93 e!92701 (ite c!26848 (h!2322 (toList!858 lt!73218)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26846 () Bool)

(assert (=> bm!15739 (= c!26846 c!26848)))

(declare-fun b!142269 () Bool)

(assert (=> b!142269 (= e!92701 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73218)) (_1!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73228 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!45177 c!26848) b!142265))

(assert (= (and d!45177 (not c!26848)) b!142261))

(assert (= (and b!142261 c!26849) b!142264))

(assert (= (and b!142261 (not c!26849)) b!142263))

(assert (= (and b!142263 c!26847) b!142267))

(assert (= (and b!142263 (not c!26847)) b!142268))

(assert (= (or b!142267 b!142268) bm!15737))

(assert (= (or b!142264 bm!15737) bm!15738))

(assert (= (or b!142265 bm!15738) bm!15739))

(assert (= (and bm!15739 c!26846) b!142269))

(assert (= (and bm!15739 (not c!26846)) b!142260))

(assert (= (and d!45177 res!67867) b!142262))

(assert (= (and b!142262 res!67868) b!142266))

(declare-fun m!171551 () Bool)

(assert (=> bm!15739 m!171551))

(declare-fun m!171553 () Bool)

(assert (=> d!45177 m!171553))

(declare-fun m!171555 () Bool)

(assert (=> d!45177 m!171555))

(declare-fun m!171557 () Bool)

(assert (=> b!142262 m!171557))

(declare-fun m!171559 () Bool)

(assert (=> b!142269 m!171559))

(declare-fun m!171561 () Bool)

(assert (=> b!142266 m!171561))

(assert (=> d!43739 d!45177))

(assert (=> d!43897 d!43895))

(declare-fun d!45179 () Bool)

(assert (=> d!45179 (= (getValueByKey!177 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!45179 true))

(declare-fun _$22!496 () Unit!4387)

(assert (=> d!45179 (= (choose!873 lt!73289 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) _$22!496)))

(declare-fun bs!6013 () Bool)

(assert (= bs!6013 d!45179))

(assert (=> bs!6013 m!167093))

(assert (=> d!43897 d!45179))

(declare-fun d!45181 () Bool)

(declare-fun res!67869 () Bool)

(declare-fun e!92702 () Bool)

(assert (=> d!45181 (=> res!67869 e!92702)))

(assert (=> d!45181 (= res!67869 (or ((_ is Nil!1716) lt!73289) ((_ is Nil!1716) (t!6295 lt!73289))))))

(assert (=> d!45181 (= (isStrictlySorted!312 lt!73289) e!92702)))

(declare-fun b!142270 () Bool)

(declare-fun e!92703 () Bool)

(assert (=> b!142270 (= e!92702 e!92703)))

(declare-fun res!67870 () Bool)

(assert (=> b!142270 (=> (not res!67870) (not e!92703))))

(assert (=> b!142270 (= res!67870 (bvslt (_1!1322 (h!2322 lt!73289)) (_1!1322 (h!2322 (t!6295 lt!73289)))))))

(declare-fun b!142271 () Bool)

(assert (=> b!142271 (= e!92703 (isStrictlySorted!312 (t!6295 lt!73289)))))

(assert (= (and d!45181 (not res!67869)) b!142270))

(assert (= (and b!142270 res!67870) b!142271))

(declare-fun m!171563 () Bool)

(assert (=> b!142271 m!171563))

(assert (=> d!43897 d!45181))

(assert (=> b!140609 d!43689))

(assert (=> b!140609 d!43565))

(assert (=> b!140609 d!43859))

(assert (=> b!140795 d!43901))

(declare-fun d!45183 () Bool)

(assert (=> d!45183 (arrayNoDuplicates!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73399 lt!73396)))

(assert (=> d!45183 true))

(declare-fun _$65!65 () Unit!4387)

(assert (=> d!45183 (= (choose!41 (_keys!4698 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) lt!73399 lt!73396) _$65!65)))

(declare-fun bs!6014 () Bool)

(assert (= bs!6014 d!45183))

(assert (=> bs!6014 m!167195))

(assert (=> bs!6014 m!167205))

(assert (=> d!43853 d!45183))

(assert (=> b!140372 d!43693))

(assert (=> d!43759 d!43761))

(declare-fun d!45185 () Bool)

(assert (=> d!45185 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000)))

(assert (=> d!45185 true))

(declare-fun _$60!370 () Unit!4387)

(assert (=> d!45185 (= (choose!13 (_keys!4698 newMap!16) lt!73300 #b00000000000000000000000000000000) _$60!370)))

(declare-fun bs!6015 () Bool)

(assert (= bs!6015 d!45185))

(assert (=> bs!6015 m!167107))

(assert (=> d!43759 d!45185))

(declare-fun b!142273 () Bool)

(declare-fun res!67871 () Bool)

(declare-fun e!92704 () Bool)

(assert (=> b!142273 (=> (not res!67871) (not e!92704))))

(assert (=> b!142273 (= res!67871 (bvsge (size!2584 (_2!1323 lt!73410)) (_size!624 (_2!1323 lt!73410))))))

(declare-fun d!45187 () Bool)

(declare-fun res!67873 () Bool)

(assert (=> d!45187 (=> (not res!67873) (not e!92704))))

(assert (=> d!45187 (= res!67873 (validMask!0 (mask!7279 (_2!1323 lt!73410))))))

(assert (=> d!45187 (= (simpleValid!96 (_2!1323 lt!73410)) e!92704)))

(declare-fun b!142274 () Bool)

(declare-fun res!67872 () Bool)

(assert (=> b!142274 (=> (not res!67872) (not e!92704))))

(assert (=> b!142274 (= res!67872 (= (size!2584 (_2!1323 lt!73410)) (bvadd (_size!624 (_2!1323 lt!73410)) (bvsdiv (bvadd (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!142272 () Bool)

(declare-fun res!67874 () Bool)

(assert (=> b!142272 (=> (not res!67874) (not e!92704))))

(assert (=> b!142272 (= res!67874 (and (= (size!2579 (_values!2922 (_2!1323 lt!73410))) (bvadd (mask!7279 (_2!1323 lt!73410)) #b00000000000000000000000000000001)) (= (size!2578 (_keys!4698 (_2!1323 lt!73410))) (size!2579 (_values!2922 (_2!1323 lt!73410)))) (bvsge (_size!624 (_2!1323 lt!73410)) #b00000000000000000000000000000000) (bvsle (_size!624 (_2!1323 lt!73410)) (bvadd (mask!7279 (_2!1323 lt!73410)) #b00000000000000000000000000000001))))))

(declare-fun b!142275 () Bool)

(assert (=> b!142275 (= e!92704 (and (bvsge (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 (_2!1323 lt!73410)) #b00000000000000000000000000000011) (bvsge (_vacant!624 (_2!1323 lt!73410)) #b00000000000000000000000000000000)))))

(assert (= (and d!45187 res!67873) b!142272))

(assert (= (and b!142272 res!67874) b!142273))

(assert (= (and b!142273 res!67871) b!142274))

(assert (= (and b!142274 res!67872) b!142275))

(declare-fun m!171565 () Bool)

(assert (=> b!142273 m!171565))

(assert (=> d!45187 m!169989))

(assert (=> b!142274 m!171565))

(assert (=> d!43803 d!45187))

(declare-fun d!45189 () Bool)

(declare-fun res!67875 () Bool)

(declare-fun e!92705 () Bool)

(assert (=> d!45189 (=> res!67875 e!92705)))

(assert (=> d!45189 (= res!67875 (or ((_ is Nil!1716) lt!73881) ((_ is Nil!1716) (t!6295 lt!73881))))))

(assert (=> d!45189 (= (isStrictlySorted!312 lt!73881) e!92705)))

(declare-fun b!142276 () Bool)

(declare-fun e!92706 () Bool)

(assert (=> b!142276 (= e!92705 e!92706)))

(declare-fun res!67876 () Bool)

(assert (=> b!142276 (=> (not res!67876) (not e!92706))))

(assert (=> b!142276 (= res!67876 (bvslt (_1!1322 (h!2322 lt!73881)) (_1!1322 (h!2322 (t!6295 lt!73881)))))))

(declare-fun b!142277 () Bool)

(assert (=> b!142277 (= e!92706 (isStrictlySorted!312 (t!6295 lt!73881)))))

(assert (= (and d!45189 (not res!67875)) b!142276))

(assert (= (and b!142276 res!67876) b!142277))

(declare-fun m!171567 () Bool)

(assert (=> b!142277 m!171567))

(assert (=> d!44003 d!45189))

(declare-fun d!45191 () Bool)

(declare-fun res!67877 () Bool)

(declare-fun e!92707 () Bool)

(assert (=> d!45191 (=> res!67877 e!92707)))

(assert (=> d!45191 (= res!67877 (or ((_ is Nil!1716) (toList!858 e!91166)) ((_ is Nil!1716) (t!6295 (toList!858 e!91166)))))))

(assert (=> d!45191 (= (isStrictlySorted!312 (toList!858 e!91166)) e!92707)))

(declare-fun b!142278 () Bool)

(declare-fun e!92708 () Bool)

(assert (=> b!142278 (= e!92707 e!92708)))

(declare-fun res!67878 () Bool)

(assert (=> b!142278 (=> (not res!67878) (not e!92708))))

(assert (=> b!142278 (= res!67878 (bvslt (_1!1322 (h!2322 (toList!858 e!91166))) (_1!1322 (h!2322 (t!6295 (toList!858 e!91166))))))))

(declare-fun b!142279 () Bool)

(assert (=> b!142279 (= e!92708 (isStrictlySorted!312 (t!6295 (toList!858 e!91166))))))

(assert (= (and d!45191 (not res!67877)) b!142278))

(assert (= (and b!142278 res!67878) b!142279))

(declare-fun m!171569 () Bool)

(assert (=> b!142279 m!171569))

(assert (=> d!44003 d!45191))

(declare-fun d!45193 () Bool)

(declare-fun res!67879 () Bool)

(declare-fun e!92709 () Bool)

(assert (=> d!45193 (=> res!67879 e!92709)))

(assert (=> d!45193 (= res!67879 (and ((_ is Cons!1715) (toList!858 lt!73187)) (= (_1!1322 (h!2322 (toList!858 lt!73187))) lt!73185)))))

(assert (=> d!45193 (= (containsKey!180 (toList!858 lt!73187) lt!73185) e!92709)))

(declare-fun b!142280 () Bool)

(declare-fun e!92710 () Bool)

(assert (=> b!142280 (= e!92709 e!92710)))

(declare-fun res!67880 () Bool)

(assert (=> b!142280 (=> (not res!67880) (not e!92710))))

(assert (=> b!142280 (= res!67880 (and (or (not ((_ is Cons!1715) (toList!858 lt!73187))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73187))) lt!73185)) ((_ is Cons!1715) (toList!858 lt!73187)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73187))) lt!73185)))))

(declare-fun b!142281 () Bool)

(assert (=> b!142281 (= e!92710 (containsKey!180 (t!6295 (toList!858 lt!73187)) lt!73185))))

(assert (= (and d!45193 (not res!67879)) b!142280))

(assert (= (and b!142280 res!67880) b!142281))

(declare-fun m!171571 () Bool)

(assert (=> b!142281 m!171571))

(assert (=> d!43961 d!45193))

(declare-fun d!45195 () Bool)

(declare-fun res!67881 () Bool)

(declare-fun e!92711 () Bool)

(assert (=> d!45195 (=> res!67881 e!92711)))

(assert (=> d!45195 (= res!67881 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(assert (=> d!45195 (= (containsKey!180 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))) e!92711)))

(declare-fun b!142282 () Bool)

(declare-fun e!92712 () Bool)

(assert (=> b!142282 (= e!92711 e!92712)))

(declare-fun res!67882 () Bool)

(assert (=> b!142282 (=> (not res!67882) (not e!92712))))

(assert (=> b!142282 (= res!67882 (and (or (not ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (bvsle (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))) ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))))))

(declare-fun b!142283 () Bool)

(assert (=> b!142283 (= e!92712 (containsKey!180 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) lt!73112 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))

(assert (= (and d!45195 (not res!67881)) b!142282))

(assert (= (and b!142282 res!67882) b!142283))

(assert (=> b!142283 m!166761))

(declare-fun m!171573 () Bool)

(assert (=> b!142283 m!171573))

(assert (=> d!43775 d!45195))

(declare-fun lt!74629 () Bool)

(declare-fun d!45197 () Bool)

(assert (=> d!45197 (= lt!74629 (select (content!139 (toList!858 lt!74007)) (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))

(declare-fun e!92713 () Bool)

(assert (=> d!45197 (= lt!74629 e!92713)))

(declare-fun res!67883 () Bool)

(assert (=> d!45197 (=> (not res!67883) (not e!92713))))

(assert (=> d!45197 (= res!67883 ((_ is Cons!1715) (toList!858 lt!74007)))))

(assert (=> d!45197 (= (contains!907 (toList!858 lt!74007) (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))) lt!74629)))

(declare-fun b!142284 () Bool)

(declare-fun e!92714 () Bool)

(assert (=> b!142284 (= e!92713 e!92714)))

(declare-fun res!67884 () Bool)

(assert (=> b!142284 (=> res!67884 e!92714)))

(assert (=> b!142284 (= res!67884 (= (h!2322 (toList!858 lt!74007)) (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))

(declare-fun b!142285 () Bool)

(assert (=> b!142285 (= e!92714 (contains!907 (t!6295 (toList!858 lt!74007)) (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45197 res!67883) b!142284))

(assert (= (and b!142284 (not res!67884)) b!142285))

(declare-fun m!171575 () Bool)

(assert (=> d!45197 m!171575))

(declare-fun m!171577 () Bool)

(assert (=> d!45197 m!171577))

(declare-fun m!171579 () Bool)

(assert (=> b!142285 m!171579))

(assert (=> b!141070 d!45197))

(declare-fun d!45199 () Bool)

(declare-fun lt!74630 () Bool)

(assert (=> d!45199 (= lt!74630 (select (content!138 Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!92716 () Bool)

(assert (=> d!45199 (= lt!74630 e!92716)))

(declare-fun res!67885 () Bool)

(assert (=> d!45199 (=> (not res!67885) (not e!92716))))

(assert (=> d!45199 (= res!67885 ((_ is Cons!1716) Nil!1717))))

(assert (=> d!45199 (= (contains!906 Nil!1717 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)) lt!74630)))

(declare-fun b!142286 () Bool)

(declare-fun e!92715 () Bool)

(assert (=> b!142286 (= e!92716 e!92715)))

(declare-fun res!67886 () Bool)

(assert (=> b!142286 (=> res!67886 e!92715)))

(assert (=> b!142286 (= res!67886 (= (h!2323 Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142287 () Bool)

(assert (=> b!142287 (= e!92715 (contains!906 (t!6296 Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!45199 res!67885) b!142286))

(assert (= (and b!142286 (not res!67886)) b!142287))

(assert (=> d!45199 m!167077))

(assert (=> d!45199 m!167903))

(declare-fun m!171581 () Bool)

(assert (=> d!45199 m!171581))

(assert (=> b!142287 m!167903))

(declare-fun m!171583 () Bool)

(assert (=> b!142287 m!171583))

(assert (=> b!140942 d!45199))

(assert (=> d!43707 d!43709))

(assert (=> d!43707 d!43711))

(declare-fun d!45201 () Bool)

(assert (=> d!45201 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!45201 true))

(declare-fun _$12!416 () Unit!4387)

(assert (=> d!45201 (= (choose!864 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!416)))

(declare-fun bs!6016 () Bool)

(assert (= bs!6016 d!45201))

(assert (=> bs!6016 m!166833))

(assert (=> bs!6016 m!167241))

(assert (=> bs!6016 m!167241))

(assert (=> bs!6016 m!167435))

(assert (=> d!43707 d!45201))

(assert (=> d!43707 d!44299))

(declare-fun d!45203 () Bool)

(declare-fun res!67887 () Bool)

(declare-fun e!92717 () Bool)

(assert (=> d!45203 (=> res!67887 e!92717)))

(assert (=> d!45203 (= res!67887 (and ((_ is Cons!1715) lt!73278) (= (_1!1322 (h!2322 lt!73278)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45203 (= (containsKey!180 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92717)))

(declare-fun b!142288 () Bool)

(declare-fun e!92718 () Bool)

(assert (=> b!142288 (= e!92717 e!92718)))

(declare-fun res!67888 () Bool)

(assert (=> b!142288 (=> (not res!67888) (not e!92718))))

(assert (=> b!142288 (= res!67888 (and (or (not ((_ is Cons!1715) lt!73278)) (bvsle (_1!1322 (h!2322 lt!73278)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1715) lt!73278) (bvslt (_1!1322 (h!2322 lt!73278)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142289 () Bool)

(assert (=> b!142289 (= e!92718 (containsKey!180 (t!6295 lt!73278) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45203 (not res!67887)) b!142288))

(assert (= (and b!142288 res!67888) b!142289))

(declare-fun m!171585 () Bool)

(assert (=> b!142289 m!171585))

(assert (=> b!140713 d!45203))

(declare-fun d!45205 () Bool)

(declare-fun res!67889 () Bool)

(declare-fun e!92719 () Bool)

(assert (=> d!45205 (=> res!67889 e!92719)))

(assert (=> d!45205 (= res!67889 (and ((_ is Cons!1715) (toList!858 lt!73309)) (= (_1!1322 (h!2322 (toList!858 lt!73309))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45205 (= (containsKey!180 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000) e!92719)))

(declare-fun b!142290 () Bool)

(declare-fun e!92720 () Bool)

(assert (=> b!142290 (= e!92719 e!92720)))

(declare-fun res!67890 () Bool)

(assert (=> b!142290 (=> (not res!67890) (not e!92720))))

(assert (=> b!142290 (= res!67890 (and (or (not ((_ is Cons!1715) (toList!858 lt!73309))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73309))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73309)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73309))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142291 () Bool)

(assert (=> b!142291 (= e!92720 (containsKey!180 (t!6295 (toList!858 lt!73309)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45205 (not res!67889)) b!142290))

(assert (= (and b!142290 res!67890) b!142291))

(declare-fun m!171587 () Bool)

(assert (=> b!142291 m!171587))

(assert (=> d!43821 d!45205))

(declare-fun d!45207 () Bool)

(declare-fun e!92721 () Bool)

(assert (=> d!45207 e!92721))

(declare-fun res!67891 () Bool)

(assert (=> d!45207 (=> res!67891 e!92721)))

(declare-fun lt!74634 () Bool)

(assert (=> d!45207 (= res!67891 (not lt!74634))))

(declare-fun lt!74631 () Bool)

(assert (=> d!45207 (= lt!74634 lt!74631)))

(declare-fun lt!74633 () Unit!4387)

(declare-fun e!92722 () Unit!4387)

(assert (=> d!45207 (= lt!74633 e!92722)))

(declare-fun c!26850 () Bool)

(assert (=> d!45207 (= c!26850 lt!74631)))

(assert (=> d!45207 (= lt!74631 (containsKey!180 (toList!858 lt!73713) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45207 (= (contains!904 lt!73713 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74634)))

(declare-fun b!142292 () Bool)

(declare-fun lt!74632 () Unit!4387)

(assert (=> b!142292 (= e!92722 lt!74632)))

(assert (=> b!142292 (= lt!74632 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73713) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142292 (isDefined!129 (getValueByKey!177 (toList!858 lt!73713) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142293 () Bool)

(declare-fun Unit!4501 () Unit!4387)

(assert (=> b!142293 (= e!92722 Unit!4501)))

(declare-fun b!142294 () Bool)

(assert (=> b!142294 (= e!92721 (isDefined!129 (getValueByKey!177 (toList!858 lt!73713) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45207 c!26850) b!142292))

(assert (= (and d!45207 (not c!26850)) b!142293))

(assert (= (and d!45207 (not res!67891)) b!142294))

(declare-fun m!171589 () Bool)

(assert (=> d!45207 m!171589))

(declare-fun m!171591 () Bool)

(assert (=> b!142292 m!171591))

(assert (=> b!142292 m!169291))

(assert (=> b!142292 m!169291))

(declare-fun m!171593 () Bool)

(assert (=> b!142292 m!171593))

(assert (=> b!142294 m!169291))

(assert (=> b!142294 m!169291))

(assert (=> b!142294 m!171593))

(assert (=> bm!15591 d!45207))

(declare-fun c!26853 () Bool)

(declare-fun d!45209 () Bool)

(assert (=> d!45209 (= c!26853 ((_ is Nil!1717) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))))

(declare-fun e!92725 () (InoxSet (_ BitVec 64)))

(assert (=> d!45209 (= (content!138 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) e!92725)))

(declare-fun b!142299 () Bool)

(assert (=> b!142299 (= e!92725 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!142300 () Bool)

(assert (=> b!142300 (= e!92725 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2323 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) true) (content!138 (t!6296 (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)))))))

(assert (= (and d!45209 c!26853) b!142299))

(assert (= (and d!45209 (not c!26853)) b!142300))

(declare-fun m!171595 () Bool)

(assert (=> b!142300 m!171595))

(assert (=> b!142300 m!169253))

(assert (=> d!43839 d!45209))

(declare-fun b!142302 () Bool)

(declare-fun e!92726 () Option!183)

(declare-fun e!92727 () Option!183)

(assert (=> b!142302 (= e!92726 e!92727)))

(declare-fun c!26855 () Bool)

(assert (=> b!142302 (= c!26855 (and ((_ is Cons!1715) (toList!858 lt!74033)) (not (= (_1!1322 (h!2322 (toList!858 lt!74033))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142303 () Bool)

(assert (=> b!142303 (= e!92727 (getValueByKey!177 (t!6295 (toList!858 lt!74033)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142301 () Bool)

(assert (=> b!142301 (= e!92726 (Some!182 (_2!1322 (h!2322 (toList!858 lt!74033)))))))

(declare-fun b!142304 () Bool)

(assert (=> b!142304 (= e!92727 None!181)))

(declare-fun d!45211 () Bool)

(declare-fun c!26854 () Bool)

(assert (=> d!45211 (= c!26854 (and ((_ is Cons!1715) (toList!858 lt!74033)) (= (_1!1322 (h!2322 (toList!858 lt!74033))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45211 (= (getValueByKey!177 (toList!858 lt!74033) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92726)))

(assert (= (and d!45211 c!26854) b!142301))

(assert (= (and d!45211 (not c!26854)) b!142302))

(assert (= (and b!142302 c!26855) b!142303))

(assert (= (and b!142302 (not c!26855)) b!142304))

(declare-fun m!171597 () Bool)

(assert (=> b!142303 m!171597))

(assert (=> b!141092 d!45211))

(assert (=> d!44001 d!43999))

(declare-fun d!45213 () Bool)

(assert (=> d!45213 (= (getValueByKey!177 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!182 (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45213 true))

(declare-fun _$22!497 () Unit!4387)

(assert (=> d!45213 (= (choose!873 lt!73267 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!497)))

(declare-fun bs!6017 () Bool)

(assert (= bs!6017 d!45213))

(assert (=> bs!6017 m!167029))

(assert (=> d!44001 d!45213))

(declare-fun d!45215 () Bool)

(declare-fun res!67892 () Bool)

(declare-fun e!92728 () Bool)

(assert (=> d!45215 (=> res!67892 e!92728)))

(assert (=> d!45215 (= res!67892 (or ((_ is Nil!1716) lt!73267) ((_ is Nil!1716) (t!6295 lt!73267))))))

(assert (=> d!45215 (= (isStrictlySorted!312 lt!73267) e!92728)))

(declare-fun b!142305 () Bool)

(declare-fun e!92729 () Bool)

(assert (=> b!142305 (= e!92728 e!92729)))

(declare-fun res!67893 () Bool)

(assert (=> b!142305 (=> (not res!67893) (not e!92729))))

(assert (=> b!142305 (= res!67893 (bvslt (_1!1322 (h!2322 lt!73267)) (_1!1322 (h!2322 (t!6295 lt!73267)))))))

(declare-fun b!142306 () Bool)

(assert (=> b!142306 (= e!92729 (isStrictlySorted!312 (t!6295 lt!73267)))))

(assert (= (and d!45215 (not res!67892)) b!142305))

(assert (= (and b!142305 res!67893) b!142306))

(declare-fun m!171599 () Bool)

(assert (=> b!142306 m!171599))

(assert (=> d!44001 d!45215))

(declare-fun d!45217 () Bool)

(declare-fun e!92730 () Bool)

(assert (=> d!45217 e!92730))

(declare-fun res!67894 () Bool)

(assert (=> d!45217 (=> (not res!67894) (not e!92730))))

(declare-fun lt!74637 () ListLongMap!1685)

(assert (=> d!45217 (= res!67894 (contains!904 lt!74637 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74636 () List!1719)

(assert (=> d!45217 (= lt!74637 (ListLongMap!1686 lt!74636))))

(declare-fun lt!74635 () Unit!4387)

(declare-fun lt!74638 () Unit!4387)

(assert (=> d!45217 (= lt!74635 lt!74638)))

(assert (=> d!45217 (= (getValueByKey!177 lt!74636 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45217 (= lt!74638 (lemmaContainsTupThenGetReturnValue!91 lt!74636 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45217 (= lt!74636 (insertStrictlySorted!94 (toList!858 call!15585) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45217 (= (+!173 call!15585 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74637)))

(declare-fun b!142307 () Bool)

(declare-fun res!67895 () Bool)

(assert (=> b!142307 (=> (not res!67895) (not e!92730))))

(assert (=> b!142307 (= res!67895 (= (getValueByKey!177 (toList!858 lt!74637) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142308 () Bool)

(assert (=> b!142308 (= e!92730 (contains!907 (toList!858 lt!74637) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45217 res!67894) b!142307))

(assert (= (and b!142307 res!67895) b!142308))

(declare-fun m!171601 () Bool)

(assert (=> d!45217 m!171601))

(declare-fun m!171603 () Bool)

(assert (=> d!45217 m!171603))

(declare-fun m!171605 () Bool)

(assert (=> d!45217 m!171605))

(declare-fun m!171607 () Bool)

(assert (=> d!45217 m!171607))

(declare-fun m!171609 () Bool)

(assert (=> b!142307 m!171609))

(declare-fun m!171611 () Bool)

(assert (=> b!142308 m!171611))

(assert (=> b!140566 d!45217))

(declare-fun d!45219 () Bool)

(assert (=> d!45219 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))

(declare-fun lt!74639 () Unit!4387)

(assert (=> d!45219 (= lt!74639 (choose!864 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))

(declare-fun e!92731 () Bool)

(assert (=> d!45219 e!92731))

(declare-fun res!67896 () Bool)

(assert (=> d!45219 (=> (not res!67896) (not e!92731))))

(assert (=> d!45219 (= res!67896 (isStrictlySorted!312 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45219 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319) lt!74639)))

(declare-fun b!142309 () Bool)

(assert (=> b!142309 (= e!92731 (containsKey!180 (toList!858 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73319))))

(assert (= (and d!45219 res!67896) b!142309))

(assert (=> d!45219 m!168657))

(assert (=> d!45219 m!168657))

(assert (=> d!45219 m!168659))

(declare-fun m!171613 () Bool)

(assert (=> d!45219 m!171613))

(declare-fun m!171615 () Bool)

(assert (=> d!45219 m!171615))

(assert (=> b!142309 m!168653))

(assert (=> b!140898 d!45219))

(assert (=> b!140898 d!45015))

(assert (=> b!140898 d!45017))

(declare-fun d!45221 () Bool)

(declare-fun res!67897 () Bool)

(declare-fun e!92732 () Bool)

(assert (=> d!45221 (=> res!67897 e!92732)))

(assert (=> d!45221 (= res!67897 (or ((_ is Nil!1716) lt!73758) ((_ is Nil!1716) (t!6295 lt!73758))))))

(assert (=> d!45221 (= (isStrictlySorted!312 lt!73758) e!92732)))

(declare-fun b!142310 () Bool)

(declare-fun e!92733 () Bool)

(assert (=> b!142310 (= e!92732 e!92733)))

(declare-fun res!67898 () Bool)

(assert (=> b!142310 (=> (not res!67898) (not e!92733))))

(assert (=> b!142310 (= res!67898 (bvslt (_1!1322 (h!2322 lt!73758)) (_1!1322 (h!2322 (t!6295 lt!73758)))))))

(declare-fun b!142311 () Bool)

(assert (=> b!142311 (= e!92733 (isStrictlySorted!312 (t!6295 lt!73758)))))

(assert (= (and d!45221 (not res!67897)) b!142310))

(assert (= (and b!142310 res!67898) b!142311))

(declare-fun m!171617 () Bool)

(assert (=> b!142311 m!171617))

(assert (=> d!43891 d!45221))

(declare-fun d!45223 () Bool)

(declare-fun res!67899 () Bool)

(declare-fun e!92734 () Bool)

(assert (=> d!45223 (=> res!67899 e!92734)))

(assert (=> d!45223 (= res!67899 (or ((_ is Nil!1716) (toList!858 lt!73200)) ((_ is Nil!1716) (t!6295 (toList!858 lt!73200)))))))

(assert (=> d!45223 (= (isStrictlySorted!312 (toList!858 lt!73200)) e!92734)))

(declare-fun b!142312 () Bool)

(declare-fun e!92735 () Bool)

(assert (=> b!142312 (= e!92734 e!92735)))

(declare-fun res!67900 () Bool)

(assert (=> b!142312 (=> (not res!67900) (not e!92735))))

(assert (=> b!142312 (= res!67900 (bvslt (_1!1322 (h!2322 (toList!858 lt!73200))) (_1!1322 (h!2322 (t!6295 (toList!858 lt!73200))))))))

(declare-fun b!142313 () Bool)

(assert (=> b!142313 (= e!92735 (isStrictlySorted!312 (t!6295 (toList!858 lt!73200))))))

(assert (= (and d!45223 (not res!67899)) b!142312))

(assert (= (and b!142312 res!67900) b!142313))

(assert (=> b!142313 m!170023))

(assert (=> d!43891 d!45223))

(declare-fun d!45225 () Bool)

(assert (=> d!45225 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!73248)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!73248)))))

(assert (=> d!44161 d!45225))

(declare-fun b!142315 () Bool)

(declare-fun e!92736 () Option!183)

(declare-fun e!92737 () Option!183)

(assert (=> b!142315 (= e!92736 e!92737)))

(declare-fun c!26857 () Bool)

(assert (=> b!142315 (= c!26857 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))) lt!73248))))))

(declare-fun b!142316 () Bool)

(assert (=> b!142316 (= e!92737 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))) lt!73248))))

(declare-fun b!142314 () Bool)

(assert (=> b!142314 (= e!92736 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))))

(declare-fun b!142317 () Bool)

(assert (=> b!142317 (= e!92737 None!181)))

(declare-fun d!45227 () Bool)

(declare-fun c!26856 () Bool)

(assert (=> d!45227 (= c!26856 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))) lt!73248)))))

(assert (=> d!45227 (= (getValueByKey!177 (toList!858 (+!173 lt!73253 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!73248) e!92736)))

(assert (= (and d!45227 c!26856) b!142314))

(assert (= (and d!45227 (not c!26856)) b!142315))

(assert (= (and b!142315 c!26857) b!142316))

(assert (= (and b!142315 (not c!26857)) b!142317))

(declare-fun m!171619 () Bool)

(assert (=> b!142316 m!171619))

(assert (=> d!44161 d!45227))

(declare-fun d!45229 () Bool)

(declare-fun res!67901 () Bool)

(declare-fun e!92738 () Bool)

(assert (=> d!45229 (=> res!67901 e!92738)))

(assert (=> d!45229 (= res!67901 (and ((_ is Cons!1715) (toList!858 lt!73460)) (= (_1!1322 (h!2322 (toList!858 lt!73460))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45229 (= (containsKey!180 (toList!858 lt!73460) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92738)))

(declare-fun b!142318 () Bool)

(declare-fun e!92739 () Bool)

(assert (=> b!142318 (= e!92738 e!92739)))

(declare-fun res!67902 () Bool)

(assert (=> b!142318 (=> (not res!67902) (not e!92739))))

(assert (=> b!142318 (= res!67902 (and (or (not ((_ is Cons!1715) (toList!858 lt!73460))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73460))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) (toList!858 lt!73460)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73460))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142319 () Bool)

(assert (=> b!142319 (= e!92739 (containsKey!180 (t!6295 (toList!858 lt!73460)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45229 (not res!67901)) b!142318))

(assert (= (and b!142318 res!67902) b!142319))

(declare-fun m!171621 () Bool)

(assert (=> b!142319 m!171621))

(assert (=> d!44109 d!45229))

(declare-fun d!45231 () Bool)

(assert (=> d!45231 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 #b00000000000000000000000000000000)))

(declare-fun lt!74640 () Unit!4387)

(assert (=> d!45231 (= lt!74640 (choose!13 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 #b00000000000000000000000000000000))))

(assert (=> d!45231 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!45231 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 #b00000000000000000000000000000000) lt!74640)))

(declare-fun bs!6018 () Bool)

(assert (= bs!6018 d!45231))

(assert (=> bs!6018 m!168421))

(declare-fun m!171623 () Bool)

(assert (=> bs!6018 m!171623))

(assert (=> b!140790 d!45231))

(declare-fun d!45233 () Bool)

(declare-fun res!67903 () Bool)

(declare-fun e!92740 () Bool)

(assert (=> d!45233 (=> res!67903 e!92740)))

(assert (=> d!45233 (= res!67903 (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) lt!73835))))

(assert (=> d!45233 (= (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 #b00000000000000000000000000000000) e!92740)))

(declare-fun b!142320 () Bool)

(declare-fun e!92741 () Bool)

(assert (=> b!142320 (= e!92740 e!92741)))

(declare-fun res!67904 () Bool)

(assert (=> b!142320 (=> (not res!67904) (not e!92741))))

(assert (=> b!142320 (= res!67904 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!142321 () Bool)

(assert (=> b!142321 (= e!92741 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!73835 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!45233 (not res!67903)) b!142320))

(assert (= (and b!142320 res!67904) b!142321))

(assert (=> d!45233 m!167903))

(declare-fun m!171625 () Bool)

(assert (=> b!142321 m!171625))

(assert (=> b!140790 d!45233))

(declare-fun b!142322 () Bool)

(declare-fun e!92742 () SeekEntryResult!273)

(declare-fun e!92743 () SeekEntryResult!273)

(assert (=> b!142322 (= e!92742 e!92743)))

(declare-fun lt!74643 () (_ BitVec 64))

(declare-fun lt!74642 () SeekEntryResult!273)

(assert (=> b!142322 (= lt!74643 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (index!3257 lt!74642)))))

(declare-fun c!26859 () Bool)

(assert (=> b!142322 (= c!26859 (= lt!74643 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142323 () Bool)

(declare-fun c!26858 () Bool)

(assert (=> b!142323 (= c!26858 (= lt!74643 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92744 () SeekEntryResult!273)

(assert (=> b!142323 (= e!92743 e!92744)))

(declare-fun b!142324 () Bool)

(assert (=> b!142324 (= e!92742 Undefined!273)))

(declare-fun d!45235 () Bool)

(declare-fun lt!74641 () SeekEntryResult!273)

(assert (=> d!45235 (and (or ((_ is Undefined!273) lt!74641) (not ((_ is Found!273) lt!74641)) (and (bvsge (index!3256 lt!74641) #b00000000000000000000000000000000) (bvslt (index!3256 lt!74641) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))) (or ((_ is Undefined!273) lt!74641) ((_ is Found!273) lt!74641) (not ((_ is MissingZero!273) lt!74641)) (and (bvsge (index!3255 lt!74641) #b00000000000000000000000000000000) (bvslt (index!3255 lt!74641) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))) (or ((_ is Undefined!273) lt!74641) ((_ is Found!273) lt!74641) ((_ is MissingZero!273) lt!74641) (not ((_ is MissingVacant!273) lt!74641)) (and (bvsge (index!3258 lt!74641) #b00000000000000000000000000000000) (bvslt (index!3258 lt!74641) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))) (or ((_ is Undefined!273) lt!74641) (ite ((_ is Found!273) lt!74641) (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (index!3256 lt!74641)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!273) lt!74641) (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (index!3255 lt!74641)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!273) lt!74641) (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (index!3258 lt!74641)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45235 (= lt!74641 e!92742)))

(declare-fun c!26860 () Bool)

(assert (=> d!45235 (= c!26860 (and ((_ is Intermediate!273) lt!74642) (undefined!1085 lt!74642)))))

(assert (=> d!45235 (= lt!74642 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) (mask!7279 (v!3279 (underlying!479 thiss!992)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))))))

(assert (=> d!45235 (validMask!0 (mask!7279 (v!3279 (underlying!479 thiss!992))))))

(assert (=> d!45235 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))) lt!74641)))

(declare-fun b!142325 () Bool)

(assert (=> b!142325 (= e!92744 (MissingZero!273 (index!3257 lt!74642)))))

(declare-fun b!142326 () Bool)

(assert (=> b!142326 (= e!92744 (seekKeyOrZeroReturnVacant!0 (x!16130 lt!74642) (index!3257 lt!74642) (index!3257 lt!74642) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!142327 () Bool)

(assert (=> b!142327 (= e!92743 (Found!273 (index!3257 lt!74642)))))

(assert (= (and d!45235 c!26860) b!142324))

(assert (= (and d!45235 (not c!26860)) b!142322))

(assert (= (and b!142322 c!26859) b!142327))

(assert (= (and b!142322 (not c!26859)) b!142323))

(assert (= (and b!142323 c!26858) b!142325))

(assert (= (and b!142323 (not c!26858)) b!142326))

(declare-fun m!171627 () Bool)

(assert (=> b!142322 m!171627))

(assert (=> d!45235 m!167903))

(declare-fun m!171629 () Bool)

(assert (=> d!45235 m!171629))

(assert (=> d!45235 m!171629))

(assert (=> d!45235 m!167903))

(declare-fun m!171631 () Bool)

(assert (=> d!45235 m!171631))

(assert (=> d!45235 m!166839))

(declare-fun m!171633 () Bool)

(assert (=> d!45235 m!171633))

(declare-fun m!171635 () Bool)

(assert (=> d!45235 m!171635))

(declare-fun m!171637 () Bool)

(assert (=> d!45235 m!171637))

(assert (=> b!142326 m!167903))

(declare-fun m!171639 () Bool)

(assert (=> b!142326 m!171639))

(assert (=> b!140790 d!45235))

(declare-fun d!45237 () Bool)

(declare-fun e!92745 () Bool)

(assert (=> d!45237 e!92745))

(declare-fun res!67905 () Bool)

(assert (=> d!45237 (=> res!67905 e!92745)))

(declare-fun lt!74647 () Bool)

(assert (=> d!45237 (= res!67905 (not lt!74647))))

(declare-fun lt!74644 () Bool)

(assert (=> d!45237 (= lt!74647 lt!74644)))

(declare-fun lt!74646 () Unit!4387)

(declare-fun e!92746 () Unit!4387)

(assert (=> d!45237 (= lt!74646 e!92746)))

(declare-fun c!26861 () Bool)

(assert (=> d!45237 (= c!26861 lt!74644)))

(assert (=> d!45237 (= lt!74644 (containsKey!180 (toList!858 lt!73553) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45237 (= (contains!904 lt!73553 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74647)))

(declare-fun b!142328 () Bool)

(declare-fun lt!74645 () Unit!4387)

(assert (=> b!142328 (= e!92746 lt!74645)))

(assert (=> b!142328 (= lt!74645 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73553) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142328 (isDefined!129 (getValueByKey!177 (toList!858 lt!73553) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142329 () Bool)

(declare-fun Unit!4502 () Unit!4387)

(assert (=> b!142329 (= e!92746 Unit!4502)))

(declare-fun b!142330 () Bool)

(assert (=> b!142330 (= e!92745 (isDefined!129 (getValueByKey!177 (toList!858 lt!73553) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45237 c!26861) b!142328))

(assert (= (and d!45237 (not c!26861)) b!142329))

(assert (= (and d!45237 (not res!67905)) b!142330))

(assert (=> d!45237 m!166927))

(declare-fun m!171641 () Bool)

(assert (=> d!45237 m!171641))

(assert (=> b!142328 m!166927))

(declare-fun m!171643 () Bool)

(assert (=> b!142328 m!171643))

(assert (=> b!142328 m!166927))

(assert (=> b!142328 m!170409))

(assert (=> b!142328 m!170409))

(declare-fun m!171645 () Bool)

(assert (=> b!142328 m!171645))

(assert (=> b!142330 m!166927))

(assert (=> b!142330 m!170409))

(assert (=> b!142330 m!170409))

(assert (=> b!142330 m!171645))

(assert (=> b!140308 d!45237))

(assert (=> d!44139 d!44137))

(declare-fun d!45239 () Bool)

(assert (=> d!45239 (= (getValueByKey!177 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!45239 true))

(declare-fun _$22!498 () Unit!4387)

(assert (=> d!45239 (= (choose!873 lt!73464 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) _$22!498)))

(declare-fun bs!6019 () Bool)

(assert (= bs!6019 d!45239))

(assert (=> bs!6019 m!167357))

(assert (=> d!44139 d!45239))

(declare-fun d!45241 () Bool)

(declare-fun res!67906 () Bool)

(declare-fun e!92747 () Bool)

(assert (=> d!45241 (=> res!67906 e!92747)))

(assert (=> d!45241 (= res!67906 (or ((_ is Nil!1716) lt!73464) ((_ is Nil!1716) (t!6295 lt!73464))))))

(assert (=> d!45241 (= (isStrictlySorted!312 lt!73464) e!92747)))

(declare-fun b!142331 () Bool)

(declare-fun e!92748 () Bool)

(assert (=> b!142331 (= e!92747 e!92748)))

(declare-fun res!67907 () Bool)

(assert (=> b!142331 (=> (not res!67907) (not e!92748))))

(assert (=> b!142331 (= res!67907 (bvslt (_1!1322 (h!2322 lt!73464)) (_1!1322 (h!2322 (t!6295 lt!73464)))))))

(declare-fun b!142332 () Bool)

(assert (=> b!142332 (= e!92748 (isStrictlySorted!312 (t!6295 lt!73464)))))

(assert (= (and d!45241 (not res!67906)) b!142331))

(assert (= (and b!142331 res!67907) b!142332))

(declare-fun m!171647 () Bool)

(assert (=> b!142332 m!171647))

(assert (=> d!44139 d!45241))

(declare-fun b!142334 () Bool)

(declare-fun e!92749 () Option!183)

(declare-fun e!92750 () Option!183)

(assert (=> b!142334 (= e!92749 e!92750)))

(declare-fun c!26863 () Bool)

(assert (=> b!142334 (= c!26863 (and ((_ is Cons!1715) (toList!858 lt!73560)) (not (= (_1!1322 (h!2322 (toList!858 lt!73560))) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142335 () Bool)

(assert (=> b!142335 (= e!92750 (getValueByKey!177 (t!6295 (toList!858 lt!73560)) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142333 () Bool)

(assert (=> b!142333 (= e!92749 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73560)))))))

(declare-fun b!142336 () Bool)

(assert (=> b!142336 (= e!92750 None!181)))

(declare-fun d!45243 () Bool)

(declare-fun c!26862 () Bool)

(assert (=> d!45243 (= c!26862 (and ((_ is Cons!1715) (toList!858 lt!73560)) (= (_1!1322 (h!2322 (toList!858 lt!73560))) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45243 (= (getValueByKey!177 (toList!858 lt!73560) (_1!1322 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92749)))

(assert (= (and d!45243 c!26862) b!142333))

(assert (= (and d!45243 (not c!26862)) b!142334))

(assert (= (and b!142334 c!26863) b!142335))

(assert (= (and b!142334 (not c!26863)) b!142336))

(declare-fun m!171649 () Bool)

(assert (=> b!142335 m!171649))

(assert (=> b!140316 d!45243))

(declare-fun bm!15740 () Bool)

(declare-fun call!15743 () Bool)

(assert (=> bm!15740 (= call!15743 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!142337 () Bool)

(declare-fun e!92753 () Bool)

(declare-fun e!92752 () Bool)

(assert (=> b!142337 (= e!92753 e!92752)))

(declare-fun c!26864 () Bool)

(assert (=> b!142337 (= c!26864 (validKeyInArray!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142338 () Bool)

(declare-fun e!92751 () Bool)

(assert (=> b!142338 (= e!92752 e!92751)))

(declare-fun lt!74650 () (_ BitVec 64))

(assert (=> b!142338 (= lt!74650 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!74648 () Unit!4387)

(assert (=> b!142338 (= lt!74648 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 newMap!16) lt!74650 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!142338 (arrayContainsKey!0 (_keys!4698 newMap!16) lt!74650 #b00000000000000000000000000000000)))

(declare-fun lt!74649 () Unit!4387)

(assert (=> b!142338 (= lt!74649 lt!74648)))

(declare-fun res!67908 () Bool)

(assert (=> b!142338 (= res!67908 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4698 newMap!16) (mask!7279 newMap!16)) (Found!273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!142338 (=> (not res!67908) (not e!92751))))

(declare-fun d!45245 () Bool)

(declare-fun res!67909 () Bool)

(assert (=> d!45245 (=> res!67909 e!92753)))

(assert (=> d!45245 (= res!67909 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> d!45245 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4698 newMap!16) (mask!7279 newMap!16)) e!92753)))

(declare-fun b!142339 () Bool)

(assert (=> b!142339 (= e!92752 call!15743)))

(declare-fun b!142340 () Bool)

(assert (=> b!142340 (= e!92751 call!15743)))

(assert (= (and d!45245 (not res!67909)) b!142337))

(assert (= (and b!142337 c!26864) b!142338))

(assert (= (and b!142337 (not c!26864)) b!142339))

(assert (= (and b!142338 res!67908) b!142340))

(assert (= (or b!142340 b!142339) bm!15740))

(declare-fun m!171651 () Bool)

(assert (=> bm!15740 m!171651))

(assert (=> b!142337 m!169995))

(assert (=> b!142337 m!169995))

(assert (=> b!142337 m!169997))

(assert (=> b!142338 m!169995))

(declare-fun m!171653 () Bool)

(assert (=> b!142338 m!171653))

(declare-fun m!171655 () Bool)

(assert (=> b!142338 m!171655))

(assert (=> b!142338 m!169995))

(declare-fun m!171657 () Bool)

(assert (=> b!142338 m!171657))

(assert (=> bm!15622 d!45245))

(declare-fun lt!74651 () Bool)

(declare-fun d!45247 () Bool)

(assert (=> d!45247 (= lt!74651 (select (content!139 (toList!858 lt!73999)) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92754 () Bool)

(assert (=> d!45247 (= lt!74651 e!92754)))

(declare-fun res!67910 () Bool)

(assert (=> d!45247 (=> (not res!67910) (not e!92754))))

(assert (=> d!45247 (= res!67910 ((_ is Cons!1715) (toList!858 lt!73999)))))

(assert (=> d!45247 (= (contains!907 (toList!858 lt!73999) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74651)))

(declare-fun b!142341 () Bool)

(declare-fun e!92755 () Bool)

(assert (=> b!142341 (= e!92754 e!92755)))

(declare-fun res!67911 () Bool)

(assert (=> b!142341 (=> res!67911 e!92755)))

(assert (=> b!142341 (= res!67911 (= (h!2322 (toList!858 lt!73999)) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!142342 () Bool)

(assert (=> b!142342 (= e!92755 (contains!907 (t!6295 (toList!858 lt!73999)) (ite (or c!26214 c!26215) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45247 res!67910) b!142341))

(assert (= (and b!142341 (not res!67911)) b!142342))

(declare-fun m!171659 () Bool)

(assert (=> d!45247 m!171659))

(declare-fun m!171661 () Bool)

(assert (=> d!45247 m!171661))

(declare-fun m!171663 () Bool)

(assert (=> b!142342 m!171663))

(assert (=> b!141057 d!45247))

(declare-fun d!45249 () Bool)

(assert (=> d!45249 (= (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not (isEmpty!423 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun bs!6020 () Bool)

(assert (= bs!6020 d!45249))

(assert (=> bs!6020 m!167989))

(declare-fun m!171665 () Bool)

(assert (=> bs!6020 m!171665))

(assert (=> b!140547 d!45249))

(declare-fun b!142344 () Bool)

(declare-fun e!92756 () Option!183)

(declare-fun e!92757 () Option!183)

(assert (=> b!142344 (= e!92756 e!92757)))

(declare-fun c!26866 () Bool)

(assert (=> b!142344 (= c!26866 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (not (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!142345 () Bool)

(assert (=> b!142345 (= e!92757 (getValueByKey!177 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!142343 () Bool)

(assert (=> b!142343 (= e!92756 (Some!182 (_2!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))))

(declare-fun b!142346 () Bool)

(assert (=> b!142346 (= e!92757 None!181)))

(declare-fun c!26865 () Bool)

(declare-fun d!45251 () Bool)

(assert (=> d!45251 (= c!26865 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!45251 (= (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92756)))

(assert (= (and d!45251 c!26865) b!142343))

(assert (= (and d!45251 (not c!26865)) b!142344))

(assert (= (and b!142344 c!26866) b!142345))

(assert (= (and b!142344 (not c!26866)) b!142346))

(assert (=> b!142345 m!166633))

(declare-fun m!171667 () Bool)

(assert (=> b!142345 m!171667))

(assert (=> b!140547 d!45251))

(assert (=> bm!15570 d!44235))

(assert (=> bm!15563 d!43607))

(declare-fun d!45253 () Bool)

(assert (=> d!45253 (= (get!1535 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) (v!3285 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44105 d!45253))

(assert (=> d!44105 d!45029))

(declare-fun d!45255 () Bool)

(assert (=> d!45255 (isDefined!129 (getValueByKey!177 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74652 () Unit!4387)

(assert (=> d!45255 (= lt!74652 (choose!864 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92758 () Bool)

(assert (=> d!45255 e!92758))

(declare-fun res!67912 () Bool)

(assert (=> d!45255 (=> (not res!67912) (not e!92758))))

(assert (=> d!45255 (= res!67912 (isStrictlySorted!312 (toList!858 lt!73309)))))

(assert (=> d!45255 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74652)))

(declare-fun b!142347 () Bool)

(assert (=> b!142347 (= e!92758 (containsKey!180 (toList!858 lt!73309) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45255 res!67912) b!142347))

(assert (=> d!45255 m!166927))

(assert (=> d!45255 m!168787))

(assert (=> d!45255 m!168787))

(assert (=> d!45255 m!168899))

(assert (=> d!45255 m!166927))

(declare-fun m!171669 () Bool)

(assert (=> d!45255 m!171669))

(assert (=> d!45255 m!169585))

(assert (=> b!142347 m!166927))

(assert (=> b!142347 m!168895))

(assert (=> b!141027 d!45255))

(assert (=> b!141027 d!45027))

(assert (=> b!141027 d!45029))

(declare-fun d!45257 () Bool)

(declare-fun e!92759 () Bool)

(assert (=> d!45257 e!92759))

(declare-fun res!67913 () Bool)

(assert (=> d!45257 (=> (not res!67913) (not e!92759))))

(declare-fun lt!74655 () ListLongMap!1685)

(assert (=> d!45257 (= res!67913 (contains!904 lt!74655 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74654 () List!1719)

(assert (=> d!45257 (= lt!74655 (ListLongMap!1686 lt!74654))))

(declare-fun lt!74653 () Unit!4387)

(declare-fun lt!74656 () Unit!4387)

(assert (=> d!45257 (= lt!74653 lt!74656)))

(assert (=> d!45257 (= (getValueByKey!177 lt!74654 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45257 (= lt!74656 (lemmaContainsTupThenGetReturnValue!91 lt!74654 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45257 (= lt!74654 (insertStrictlySorted!94 (toList!858 call!15558) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45257 (= (+!173 call!15558 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74655)))

(declare-fun b!142348 () Bool)

(declare-fun res!67914 () Bool)

(assert (=> b!142348 (=> (not res!67914) (not e!92759))))

(assert (=> b!142348 (= res!67914 (= (getValueByKey!177 (toList!858 lt!74655) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142349 () Bool)

(assert (=> b!142349 (= e!92759 (contains!907 (toList!858 lt!74655) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45257 res!67913) b!142348))

(assert (= (and b!142348 res!67914) b!142349))

(declare-fun m!171671 () Bool)

(assert (=> d!45257 m!171671))

(declare-fun m!171673 () Bool)

(assert (=> d!45257 m!171673))

(declare-fun m!171675 () Bool)

(assert (=> d!45257 m!171675))

(declare-fun m!171677 () Bool)

(assert (=> d!45257 m!171677))

(declare-fun m!171679 () Bool)

(assert (=> b!142348 m!171679))

(declare-fun m!171681 () Bool)

(assert (=> b!142349 m!171681))

(assert (=> b!140275 d!45257))

(declare-fun call!15744 () Bool)

(declare-fun bm!15741 () Bool)

(declare-fun c!26867 () Bool)

(assert (=> bm!15741 (= call!15744 (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26867 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26503 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26503 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) Nil!1717) Nil!1717))))))

(declare-fun b!142350 () Bool)

(declare-fun e!92760 () Bool)

(declare-fun e!92761 () Bool)

(assert (=> b!142350 (= e!92760 e!92761)))

(declare-fun res!67917 () Bool)

(assert (=> b!142350 (=> (not res!67917) (not e!92761))))

(declare-fun e!92763 () Bool)

(assert (=> b!142350 (= res!67917 (not e!92763))))

(declare-fun res!67915 () Bool)

(assert (=> b!142350 (=> (not res!67915) (not e!92763))))

(assert (=> b!142350 (= res!67915 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142351 () Bool)

(declare-fun e!92762 () Bool)

(assert (=> b!142351 (= e!92762 call!15744)))

(declare-fun b!142352 () Bool)

(assert (=> b!142352 (= e!92761 e!92762)))

(assert (=> b!142352 (= c!26867 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!45259 () Bool)

(declare-fun res!67916 () Bool)

(assert (=> d!45259 (=> res!67916 e!92760)))

(assert (=> d!45259 (= res!67916 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!45259 (= (arrayNoDuplicates!0 (_keys!4698 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26503 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) e!92760)))

(declare-fun b!142353 () Bool)

(assert (=> b!142353 (= e!92762 call!15744)))

(declare-fun b!142354 () Bool)

(assert (=> b!142354 (= e!92763 (contains!906 (ite c!26503 (Cons!1716 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000) Nil!1717) Nil!1717) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!45259 (not res!67916)) b!142350))

(assert (= (and b!142350 res!67915) b!142354))

(assert (= (and b!142350 res!67917) b!142352))

(assert (= (and b!142352 c!26867) b!142351))

(assert (= (and b!142352 (not c!26867)) b!142353))

(assert (= (or b!142351 b!142353) bm!15741))

(assert (=> bm!15741 m!170545))

(declare-fun m!171683 () Bool)

(assert (=> bm!15741 m!171683))

(assert (=> b!142350 m!170545))

(assert (=> b!142350 m!170545))

(assert (=> b!142350 m!170547))

(assert (=> b!142352 m!170545))

(assert (=> b!142352 m!170545))

(assert (=> b!142352 m!170547))

(assert (=> b!142354 m!170545))

(assert (=> b!142354 m!170545))

(declare-fun m!171685 () Bool)

(assert (=> b!142354 m!171685))

(assert (=> bm!15653 d!45259))

(assert (=> b!140879 d!44755))

(assert (=> d!44121 d!43697))

(assert (=> d!44019 d!44031))

(assert (=> d!44019 d!44023))

(declare-fun d!45261 () Bool)

(assert (=> d!45261 (contains!904 (+!173 lt!73313 (tuple2!2623 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73319)))

(assert (=> d!45261 true))

(declare-fun _$35!393 () Unit!4387)

(assert (=> d!45261 (= (choose!866 lt!73313 lt!73315 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73319) _$35!393)))

(declare-fun bs!6021 () Bool)

(assert (= bs!6021 d!45261))

(assert (=> bs!6021 m!167141))

(assert (=> bs!6021 m!167141))

(assert (=> bs!6021 m!167143))

(assert (=> d!44019 d!45261))

(declare-fun d!45263 () Bool)

(declare-fun e!92764 () Bool)

(assert (=> d!45263 e!92764))

(declare-fun res!67918 () Bool)

(assert (=> d!45263 (=> res!67918 e!92764)))

(declare-fun lt!74660 () Bool)

(assert (=> d!45263 (= res!67918 (not lt!74660))))

(declare-fun lt!74657 () Bool)

(assert (=> d!45263 (= lt!74660 lt!74657)))

(declare-fun lt!74659 () Unit!4387)

(declare-fun e!92765 () Unit!4387)

(assert (=> d!45263 (= lt!74659 e!92765)))

(declare-fun c!26868 () Bool)

(assert (=> d!45263 (= c!26868 lt!74657)))

(assert (=> d!45263 (= lt!74657 (containsKey!180 (toList!858 lt!73313) lt!73319))))

(assert (=> d!45263 (= (contains!904 lt!73313 lt!73319) lt!74660)))

(declare-fun b!142355 () Bool)

(declare-fun lt!74658 () Unit!4387)

(assert (=> b!142355 (= e!92765 lt!74658)))

(assert (=> b!142355 (= lt!74658 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73313) lt!73319))))

(assert (=> b!142355 (isDefined!129 (getValueByKey!177 (toList!858 lt!73313) lt!73319))))

(declare-fun b!142356 () Bool)

(declare-fun Unit!4503 () Unit!4387)

(assert (=> b!142356 (= e!92765 Unit!4503)))

(declare-fun b!142357 () Bool)

(assert (=> b!142357 (= e!92764 (isDefined!129 (getValueByKey!177 (toList!858 lt!73313) lt!73319)))))

(assert (= (and d!45263 c!26868) b!142355))

(assert (= (and d!45263 (not c!26868)) b!142356))

(assert (= (and d!45263 (not res!67918)) b!142357))

(declare-fun m!171687 () Bool)

(assert (=> d!45263 m!171687))

(declare-fun m!171689 () Bool)

(assert (=> b!142355 m!171689))

(declare-fun m!171691 () Bool)

(assert (=> b!142355 m!171691))

(assert (=> b!142355 m!171691))

(declare-fun m!171693 () Bool)

(assert (=> b!142355 m!171693))

(assert (=> b!142357 m!171691))

(assert (=> b!142357 m!171691))

(assert (=> b!142357 m!171693))

(assert (=> d!44019 d!45263))

(declare-fun b!142359 () Bool)

(declare-fun e!92766 () Option!183)

(declare-fun e!92767 () Option!183)

(assert (=> b!142359 (= e!92766 e!92767)))

(declare-fun c!26870 () Bool)

(assert (=> b!142359 (= c!26870 (and ((_ is Cons!1715) (t!6295 (toList!858 e!91171))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 e!91171)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!142360 () Bool)

(assert (=> b!142360 (= e!92767 (getValueByKey!177 (t!6295 (t!6295 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!142358 () Bool)

(assert (=> b!142358 (= e!92766 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 e!91171))))))))

(declare-fun b!142361 () Bool)

(assert (=> b!142361 (= e!92767 None!181)))

(declare-fun d!45265 () Bool)

(declare-fun c!26869 () Bool)

(assert (=> d!45265 (= c!26869 (and ((_ is Cons!1715) (t!6295 (toList!858 e!91171))) (= (_1!1322 (h!2322 (t!6295 (toList!858 e!91171)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!45265 (= (getValueByKey!177 (t!6295 (toList!858 e!91171)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92766)))

(assert (= (and d!45265 c!26869) b!142358))

(assert (= (and d!45265 (not c!26869)) b!142359))

(assert (= (and b!142359 c!26870) b!142360))

(assert (= (and b!142359 (not c!26870)) b!142361))

(assert (=> b!142360 m!166633))

(declare-fun m!171695 () Bool)

(assert (=> b!142360 m!171695))

(assert (=> b!140798 d!45265))

(declare-fun d!45267 () Bool)

(assert (=> d!45267 (= (get!1533 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3278 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141054 d!45267))

(declare-fun lt!74661 () Bool)

(declare-fun d!45269 () Bool)

(assert (=> d!45269 (= lt!74661 (select (content!139 lt!73796) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92768 () Bool)

(assert (=> d!45269 (= lt!74661 e!92768)))

(declare-fun res!67919 () Bool)

(assert (=> d!45269 (=> (not res!67919) (not e!92768))))

(assert (=> d!45269 (= res!67919 ((_ is Cons!1715) lt!73796))))

(assert (=> d!45269 (= (contains!907 lt!73796 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74661)))

(declare-fun b!142362 () Bool)

(declare-fun e!92769 () Bool)

(assert (=> b!142362 (= e!92768 e!92769)))

(declare-fun res!67920 () Bool)

(assert (=> b!142362 (=> res!67920 e!92769)))

(assert (=> b!142362 (= res!67920 (= (h!2322 lt!73796) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142363 () Bool)

(assert (=> b!142363 (= e!92769 (contains!907 (t!6295 lt!73796) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45269 res!67919) b!142362))

(assert (= (and b!142362 (not res!67920)) b!142363))

(declare-fun m!171697 () Bool)

(assert (=> d!45269 m!171697))

(declare-fun m!171699 () Bool)

(assert (=> d!45269 m!171699))

(declare-fun m!171701 () Bool)

(assert (=> b!142363 m!171701))

(assert (=> b!140721 d!45269))

(declare-fun d!45271 () Bool)

(declare-fun lt!74662 () Bool)

(assert (=> d!45271 (= lt!74662 (select (content!139 (toList!858 lt!73560)) (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun e!92770 () Bool)

(assert (=> d!45271 (= lt!74662 e!92770)))

(declare-fun res!67921 () Bool)

(assert (=> d!45271 (=> (not res!67921) (not e!92770))))

(assert (=> d!45271 (= res!67921 ((_ is Cons!1715) (toList!858 lt!73560)))))

(assert (=> d!45271 (= (contains!907 (toList!858 lt!73560) (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!74662)))

(declare-fun b!142364 () Bool)

(declare-fun e!92771 () Bool)

(assert (=> b!142364 (= e!92770 e!92771)))

(declare-fun res!67922 () Bool)

(assert (=> b!142364 (=> res!67922 e!92771)))

(assert (=> b!142364 (= res!67922 (= (h!2322 (toList!858 lt!73560)) (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!142365 () Bool)

(assert (=> b!142365 (= e!92771 (contains!907 (t!6295 (toList!858 lt!73560)) (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!45271 res!67921) b!142364))

(assert (= (and b!142364 (not res!67922)) b!142365))

(declare-fun m!171703 () Bool)

(assert (=> d!45271 m!171703))

(declare-fun m!171705 () Bool)

(assert (=> d!45271 m!171705))

(declare-fun m!171707 () Bool)

(assert (=> b!142365 m!171707))

(assert (=> b!140317 d!45271))

(declare-fun d!45273 () Bool)

(assert (=> d!45273 (= (apply!120 lt!73961 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73961) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6022 () Bool)

(assert (= bs!6022 d!45273))

(assert (=> bs!6022 m!166927))

(declare-fun m!171709 () Bool)

(assert (=> bs!6022 m!171709))

(assert (=> bs!6022 m!171709))

(declare-fun m!171711 () Bool)

(assert (=> bs!6022 m!171711))

(assert (=> b!141014 d!45273))

(assert (=> b!141014 d!44145))

(assert (=> b!140400 d!43693))

(assert (=> d!43889 d!43887))

(declare-fun d!45275 () Bool)

(assert (=> d!45275 (= (getValueByKey!177 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!45275 true))

(declare-fun _$22!499 () Unit!4387)

(assert (=> d!45275 (= (choose!873 lt!73424 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) _$22!499)))

(declare-fun bs!6023 () Bool)

(assert (= bs!6023 d!45275))

(assert (=> bs!6023 m!167273))

(assert (=> d!43889 d!45275))

(declare-fun d!45277 () Bool)

(declare-fun res!67923 () Bool)

(declare-fun e!92772 () Bool)

(assert (=> d!45277 (=> res!67923 e!92772)))

(assert (=> d!45277 (= res!67923 (or ((_ is Nil!1716) lt!73424) ((_ is Nil!1716) (t!6295 lt!73424))))))

(assert (=> d!45277 (= (isStrictlySorted!312 lt!73424) e!92772)))

(declare-fun b!142366 () Bool)

(declare-fun e!92773 () Bool)

(assert (=> b!142366 (= e!92772 e!92773)))

(declare-fun res!67924 () Bool)

(assert (=> b!142366 (=> (not res!67924) (not e!92773))))

(assert (=> b!142366 (= res!67924 (bvslt (_1!1322 (h!2322 lt!73424)) (_1!1322 (h!2322 (t!6295 lt!73424)))))))

(declare-fun b!142367 () Bool)

(assert (=> b!142367 (= e!92773 (isStrictlySorted!312 (t!6295 lt!73424)))))

(assert (= (and d!45277 (not res!67923)) b!142366))

(assert (= (and b!142366 res!67924) b!142367))

(declare-fun m!171713 () Bool)

(assert (=> b!142367 m!171713))

(assert (=> d!43889 d!45277))

(assert (=> d!43695 d!43689))

(assert (=> d!43695 d!43565))

(assert (=> d!43695 d!43691))

(declare-fun d!45279 () Bool)

(declare-fun e!92774 () Bool)

(assert (=> d!45279 e!92774))

(declare-fun res!67925 () Bool)

(assert (=> d!45279 (=> res!67925 e!92774)))

(declare-fun lt!74666 () Bool)

(assert (=> d!45279 (= res!67925 (not lt!74666))))

(declare-fun lt!74663 () Bool)

(assert (=> d!45279 (= lt!74666 lt!74663)))

(declare-fun lt!74665 () Unit!4387)

(declare-fun e!92775 () Unit!4387)

(assert (=> d!45279 (= lt!74665 e!92775)))

(declare-fun c!26871 () Bool)

(assert (=> d!45279 (= c!26871 lt!74663)))

(assert (=> d!45279 (= lt!74663 (containsKey!180 (toList!858 lt!73767) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45279 (= (contains!904 lt!73767 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74666)))

(declare-fun b!142368 () Bool)

(declare-fun lt!74664 () Unit!4387)

(assert (=> b!142368 (= e!92775 lt!74664)))

(assert (=> b!142368 (= lt!74664 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73767) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142368 (isDefined!129 (getValueByKey!177 (toList!858 lt!73767) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142369 () Bool)

(declare-fun Unit!4504 () Unit!4387)

(assert (=> b!142369 (= e!92775 Unit!4504)))

(declare-fun b!142370 () Bool)

(assert (=> b!142370 (= e!92774 (isDefined!129 (getValueByKey!177 (toList!858 lt!73767) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45279 c!26871) b!142368))

(assert (= (and d!45279 (not c!26871)) b!142369))

(assert (= (and d!45279 (not res!67925)) b!142370))

(declare-fun m!171715 () Bool)

(assert (=> d!45279 m!171715))

(declare-fun m!171717 () Bool)

(assert (=> b!142368 m!171717))

(assert (=> b!142368 m!168213))

(assert (=> b!142368 m!168213))

(declare-fun m!171719 () Bool)

(assert (=> b!142368 m!171719))

(assert (=> b!142370 m!168213))

(assert (=> b!142370 m!168213))

(assert (=> b!142370 m!171719))

(assert (=> d!43903 d!45279))

(declare-fun b!142372 () Bool)

(declare-fun e!92776 () Option!183)

(declare-fun e!92777 () Option!183)

(assert (=> b!142372 (= e!92776 e!92777)))

(declare-fun c!26873 () Bool)

(assert (=> b!142372 (= c!26873 (and ((_ is Cons!1715) lt!73766) (not (= (_1!1322 (h!2322 lt!73766)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142373 () Bool)

(assert (=> b!142373 (= e!92777 (getValueByKey!177 (t!6295 lt!73766) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142371 () Bool)

(assert (=> b!142371 (= e!92776 (Some!182 (_2!1322 (h!2322 lt!73766))))))

(declare-fun b!142374 () Bool)

(assert (=> b!142374 (= e!92777 None!181)))

(declare-fun d!45281 () Bool)

(declare-fun c!26872 () Bool)

(assert (=> d!45281 (= c!26872 (and ((_ is Cons!1715) lt!73766) (= (_1!1322 (h!2322 lt!73766)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45281 (= (getValueByKey!177 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92776)))

(assert (= (and d!45281 c!26872) b!142371))

(assert (= (and d!45281 (not c!26872)) b!142372))

(assert (= (and b!142372 c!26873) b!142373))

(assert (= (and b!142372 (not c!26873)) b!142374))

(declare-fun m!171721 () Bool)

(assert (=> b!142373 m!171721))

(assert (=> d!43903 d!45281))

(declare-fun d!45283 () Bool)

(assert (=> d!45283 (= (getValueByKey!177 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74667 () Unit!4387)

(assert (=> d!45283 (= lt!74667 (choose!873 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92778 () Bool)

(assert (=> d!45283 e!92778))

(declare-fun res!67926 () Bool)

(assert (=> d!45283 (=> (not res!67926) (not e!92778))))

(assert (=> d!45283 (= res!67926 (isStrictlySorted!312 lt!73766))))

(assert (=> d!45283 (= (lemmaContainsTupThenGetReturnValue!91 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74667)))

(declare-fun b!142375 () Bool)

(declare-fun res!67927 () Bool)

(assert (=> b!142375 (=> (not res!67927) (not e!92778))))

(assert (=> b!142375 (= res!67927 (containsKey!180 lt!73766 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142376 () Bool)

(assert (=> b!142376 (= e!92778 (contains!907 lt!73766 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45283 res!67926) b!142375))

(assert (= (and b!142375 res!67927) b!142376))

(assert (=> d!45283 m!168207))

(declare-fun m!171723 () Bool)

(assert (=> d!45283 m!171723))

(declare-fun m!171725 () Bool)

(assert (=> d!45283 m!171725))

(declare-fun m!171727 () Bool)

(assert (=> b!142375 m!171727))

(declare-fun m!171729 () Bool)

(assert (=> b!142376 m!171729))

(assert (=> d!43903 d!45283))

(declare-fun bm!15742 () Bool)

(declare-fun call!15747 () List!1719)

(declare-fun call!15746 () List!1719)

(assert (=> bm!15742 (= call!15747 call!15746)))

(declare-fun b!142378 () Bool)

(declare-fun e!92780 () List!1719)

(declare-fun e!92782 () List!1719)

(assert (=> b!142378 (= e!92780 e!92782)))

(declare-fun c!26877 () Bool)

(assert (=> b!142378 (= c!26877 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142379 () Bool)

(declare-fun res!67929 () Bool)

(declare-fun e!92779 () Bool)

(assert (=> b!142379 (=> (not res!67929) (not e!92779))))

(declare-fun lt!74668 () List!1719)

(assert (=> b!142379 (= res!67929 (containsKey!180 lt!74668 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26875 () Bool)

(declare-fun b!142380 () Bool)

(assert (=> b!142380 (= c!26875 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvsgt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92781 () List!1719)

(assert (=> b!142380 (= e!92782 e!92781)))

(declare-fun bm!15743 () Bool)

(declare-fun call!15745 () List!1719)

(assert (=> bm!15743 (= call!15746 call!15745)))

(declare-fun b!142381 () Bool)

(assert (=> b!142381 (= e!92782 call!15746)))

(declare-fun b!142382 () Bool)

(assert (=> b!142382 (= e!92780 call!15745)))

(declare-fun b!142383 () Bool)

(assert (=> b!142383 (= e!92779 (contains!907 lt!74668 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92783 () List!1719)

(declare-fun b!142377 () Bool)

(assert (=> b!142377 (= e!92783 (ite c!26877 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (ite c!26875 (Cons!1715 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) Nil!1716)))))

(declare-fun d!45285 () Bool)

(assert (=> d!45285 e!92779))

(declare-fun res!67928 () Bool)

(assert (=> d!45285 (=> (not res!67928) (not e!92779))))

(assert (=> d!45285 (= res!67928 (isStrictlySorted!312 lt!74668))))

(assert (=> d!45285 (= lt!74668 e!92780)))

(declare-fun c!26876 () Bool)

(assert (=> d!45285 (= c!26876 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45285 (isStrictlySorted!312 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (=> d!45285 (= (insertStrictlySorted!94 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74668)))

(declare-fun b!142384 () Bool)

(assert (=> b!142384 (= e!92781 call!15747)))

(declare-fun b!142385 () Bool)

(assert (=> b!142385 (= e!92781 call!15747)))

(declare-fun bm!15744 () Bool)

(assert (=> bm!15744 (= call!15745 ($colon$colon!93 e!92783 (ite c!26876 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26874 () Bool)

(assert (=> bm!15744 (= c!26874 c!26876)))

(declare-fun b!142386 () Bool)

(assert (=> b!142386 (= e!92783 (insertStrictlySorted!94 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45285 c!26876) b!142382))

(assert (= (and d!45285 (not c!26876)) b!142378))

(assert (= (and b!142378 c!26877) b!142381))

(assert (= (and b!142378 (not c!26877)) b!142380))

(assert (= (and b!142380 c!26875) b!142384))

(assert (= (and b!142380 (not c!26875)) b!142385))

(assert (= (or b!142384 b!142385) bm!15742))

(assert (= (or b!142381 bm!15742) bm!15743))

(assert (= (or b!142382 bm!15743) bm!15744))

(assert (= (and bm!15744 c!26874) b!142386))

(assert (= (and bm!15744 (not c!26874)) b!142377))

(assert (= (and d!45285 res!67928) b!142379))

(assert (= (and b!142379 res!67929) b!142383))

(declare-fun m!171731 () Bool)

(assert (=> bm!15744 m!171731))

(declare-fun m!171733 () Bool)

(assert (=> d!45285 m!171733))

(declare-fun m!171735 () Bool)

(assert (=> d!45285 m!171735))

(declare-fun m!171737 () Bool)

(assert (=> b!142379 m!171737))

(declare-fun m!171739 () Bool)

(assert (=> b!142386 m!171739))

(declare-fun m!171741 () Bool)

(assert (=> b!142383 m!171741))

(assert (=> d!43903 d!45285))

(declare-fun b!142388 () Bool)

(declare-fun e!92784 () Option!183)

(declare-fun e!92785 () Option!183)

(assert (=> b!142388 (= e!92784 e!92785)))

(declare-fun c!26879 () Bool)

(assert (=> b!142388 (= c!26879 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73202))))))

(declare-fun b!142389 () Bool)

(assert (=> b!142389 (= e!92785 (getValueByKey!177 (t!6295 (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73202))))

(declare-fun b!142387 () Bool)

(assert (=> b!142387 (= e!92784 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))))

(declare-fun b!142390 () Bool)

(assert (=> b!142390 (= e!92785 None!181)))

(declare-fun d!45287 () Bool)

(declare-fun c!26878 () Bool)

(assert (=> d!45287 (= c!26878 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73202)))))

(assert (=> d!45287 (= (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73203 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73202) e!92784)))

(assert (= (and d!45287 c!26878) b!142387))

(assert (= (and d!45287 (not c!26878)) b!142388))

(assert (= (and b!142388 c!26879) b!142389))

(assert (= (and b!142388 (not c!26879)) b!142390))

(declare-fun m!171743 () Bool)

(assert (=> b!142389 m!171743))

(assert (=> b!140733 d!45287))

(declare-fun d!45289 () Bool)

(declare-fun e!92786 () Bool)

(assert (=> d!45289 e!92786))

(declare-fun res!67930 () Bool)

(assert (=> d!45289 (=> res!67930 e!92786)))

(declare-fun lt!74672 () Bool)

(assert (=> d!45289 (= res!67930 (not lt!74672))))

(declare-fun lt!74669 () Bool)

(assert (=> d!45289 (= lt!74672 lt!74669)))

(declare-fun lt!74671 () Unit!4387)

(declare-fun e!92787 () Unit!4387)

(assert (=> d!45289 (= lt!74671 e!92787)))

(declare-fun c!26880 () Bool)

(assert (=> d!45289 (= c!26880 lt!74669)))

(assert (=> d!45289 (= lt!74669 (containsKey!180 (toList!858 lt!73514) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45289 (= (contains!904 lt!73514 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74672)))

(declare-fun b!142391 () Bool)

(declare-fun lt!74670 () Unit!4387)

(assert (=> b!142391 (= e!92787 lt!74670)))

(assert (=> b!142391 (= lt!74670 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73514) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142391 (isDefined!129 (getValueByKey!177 (toList!858 lt!73514) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142392 () Bool)

(declare-fun Unit!4505 () Unit!4387)

(assert (=> b!142392 (= e!92787 Unit!4505)))

(declare-fun b!142393 () Bool)

(assert (=> b!142393 (= e!92786 (isDefined!129 (getValueByKey!177 (toList!858 lt!73514) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45289 c!26880) b!142391))

(assert (= (and d!45289 (not c!26880)) b!142392))

(assert (= (and d!45289 (not res!67930)) b!142393))

(assert (=> d!45289 m!166927))

(declare-fun m!171745 () Bool)

(assert (=> d!45289 m!171745))

(assert (=> b!142391 m!166927))

(declare-fun m!171747 () Bool)

(assert (=> b!142391 m!171747))

(assert (=> b!142391 m!166927))

(assert (=> b!142391 m!170733))

(assert (=> b!142391 m!170733))

(declare-fun m!171749 () Bool)

(assert (=> b!142391 m!171749))

(assert (=> b!142393 m!166927))

(assert (=> b!142393 m!170733))

(assert (=> b!142393 m!170733))

(assert (=> b!142393 m!171749))

(assert (=> b!140262 d!45289))

(declare-fun d!45291 () Bool)

(declare-fun e!92788 () Bool)

(assert (=> d!45291 e!92788))

(declare-fun res!67931 () Bool)

(assert (=> d!45291 (=> res!67931 e!92788)))

(declare-fun lt!74676 () Bool)

(assert (=> d!45291 (= res!67931 (not lt!74676))))

(declare-fun lt!74673 () Bool)

(assert (=> d!45291 (= lt!74676 lt!74673)))

(declare-fun lt!74675 () Unit!4387)

(declare-fun e!92789 () Unit!4387)

(assert (=> d!45291 (= lt!74675 e!92789)))

(declare-fun c!26881 () Bool)

(assert (=> d!45291 (= c!26881 lt!74673)))

(assert (=> d!45291 (= lt!74673 (containsKey!180 (toList!858 lt!73770) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45291 (= (contains!904 lt!73770 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74676)))

(declare-fun b!142394 () Bool)

(declare-fun lt!74674 () Unit!4387)

(assert (=> b!142394 (= e!92789 lt!74674)))

(assert (=> b!142394 (= lt!74674 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73770) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142394 (isDefined!129 (getValueByKey!177 (toList!858 lt!73770) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142395 () Bool)

(declare-fun Unit!4506 () Unit!4387)

(assert (=> b!142395 (= e!92789 Unit!4506)))

(declare-fun b!142396 () Bool)

(assert (=> b!142396 (= e!92788 (isDefined!129 (getValueByKey!177 (toList!858 lt!73770) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45291 c!26881) b!142394))

(assert (= (and d!45291 (not c!26881)) b!142395))

(assert (= (and d!45291 (not res!67931)) b!142396))

(declare-fun m!171751 () Bool)

(assert (=> d!45291 m!171751))

(declare-fun m!171753 () Bool)

(assert (=> b!142394 m!171753))

(assert (=> b!142394 m!170727))

(assert (=> b!142394 m!170727))

(declare-fun m!171755 () Bool)

(assert (=> b!142394 m!171755))

(assert (=> b!142396 m!170727))

(assert (=> b!142396 m!170727))

(assert (=> b!142396 m!171755))

(assert (=> bm!15607 d!45291))

(declare-fun b!142398 () Bool)

(declare-fun e!92790 () Option!183)

(declare-fun e!92791 () Option!183)

(assert (=> b!142398 (= e!92790 e!92791)))

(declare-fun c!26883 () Bool)

(assert (=> b!142398 (= c!26883 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73185))))))

(declare-fun b!142399 () Bool)

(assert (=> b!142399 (= e!92791 (getValueByKey!177 (t!6295 (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73185))))

(declare-fun b!142397 () Bool)

(assert (=> b!142397 (= e!92790 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))))

(declare-fun b!142400 () Bool)

(assert (=> b!142400 (= e!92791 None!181)))

(declare-fun d!45293 () Bool)

(declare-fun c!26882 () Bool)

(assert (=> d!45293 (= c!26882 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73185)))))

(assert (=> d!45293 (= (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73187 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73185) e!92790)))

(assert (= (and d!45293 c!26882) b!142397))

(assert (= (and d!45293 (not c!26882)) b!142398))

(assert (= (and b!142398 c!26883) b!142399))

(assert (= (and b!142398 (not c!26883)) b!142400))

(declare-fun m!171757 () Bool)

(assert (=> b!142399 m!171757))

(assert (=> b!140828 d!45293))

(declare-fun d!45295 () Bool)

(declare-fun res!67932 () Bool)

(declare-fun e!92792 () Bool)

(assert (=> d!45295 (=> res!67932 e!92792)))

(assert (=> d!45295 (= res!67932 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45295 (= (containsKey!180 (t!6295 (toList!858 lt!73184)) #b0000000000000000000000000000000000000000000000000000000000000000) e!92792)))

(declare-fun b!142401 () Bool)

(declare-fun e!92793 () Bool)

(assert (=> b!142401 (= e!92792 e!92793)))

(declare-fun res!67933 () Bool)

(assert (=> b!142401 (=> (not res!67933) (not e!92793))))

(assert (=> b!142401 (= res!67933 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 lt!73184)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142402 () Bool)

(assert (=> b!142402 (= e!92793 (containsKey!180 (t!6295 (t!6295 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45295 (not res!67932)) b!142401))

(assert (= (and b!142401 res!67933) b!142402))

(declare-fun m!171759 () Bool)

(assert (=> b!142402 m!171759))

(assert (=> b!140957 d!45295))

(declare-fun d!45297 () Bool)

(declare-fun res!67934 () Bool)

(declare-fun e!92794 () Bool)

(assert (=> d!45297 (=> res!67934 e!92794)))

(assert (=> d!45297 (= res!67934 (or ((_ is Nil!1716) (t!6295 (toList!858 lt!73005))) ((_ is Nil!1716) (t!6295 (t!6295 (toList!858 lt!73005))))))))

(assert (=> d!45297 (= (isStrictlySorted!312 (t!6295 (toList!858 lt!73005))) e!92794)))

(declare-fun b!142403 () Bool)

(declare-fun e!92795 () Bool)

(assert (=> b!142403 (= e!92794 e!92795)))

(declare-fun res!67935 () Bool)

(assert (=> b!142403 (=> (not res!67935) (not e!92795))))

(assert (=> b!142403 (= res!67935 (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73005)))) (_1!1322 (h!2322 (t!6295 (t!6295 (toList!858 lt!73005)))))))))

(declare-fun b!142404 () Bool)

(assert (=> b!142404 (= e!92795 (isStrictlySorted!312 (t!6295 (t!6295 (toList!858 lt!73005)))))))

(assert (= (and d!45297 (not res!67934)) b!142403))

(assert (= (and b!142403 res!67935) b!142404))

(declare-fun m!171761 () Bool)

(assert (=> b!142404 m!171761))

(assert (=> b!140751 d!45297))

(assert (=> d!44101 d!43631))

(assert (=> d!44101 d!43639))

(declare-fun d!45299 () Bool)

(declare-fun lt!74677 () Bool)

(assert (=> d!45299 (= lt!74677 (select (content!139 lt!73278) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92796 () Bool)

(assert (=> d!45299 (= lt!74677 e!92796)))

(declare-fun res!67936 () Bool)

(assert (=> d!45299 (=> (not res!67936) (not e!92796))))

(assert (=> d!45299 (= res!67936 ((_ is Cons!1715) lt!73278))))

(assert (=> d!45299 (= (contains!907 lt!73278 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74677)))

(declare-fun b!142405 () Bool)

(declare-fun e!92797 () Bool)

(assert (=> b!142405 (= e!92796 e!92797)))

(declare-fun res!67937 () Bool)

(assert (=> b!142405 (=> res!67937 e!92797)))

(assert (=> b!142405 (= res!67937 (= (h!2322 lt!73278) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142406 () Bool)

(assert (=> b!142406 (= e!92797 (contains!907 (t!6295 lt!73278) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45299 res!67936) b!142405))

(assert (= (and b!142405 (not res!67937)) b!142406))

(declare-fun m!171763 () Bool)

(assert (=> d!45299 m!171763))

(declare-fun m!171765 () Bool)

(assert (=> d!45299 m!171765))

(declare-fun m!171767 () Bool)

(assert (=> b!142406 m!171767))

(assert (=> b!140714 d!45299))

(declare-fun d!45301 () Bool)

(assert (=> d!45301 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!6024 () Bool)

(assert (= bs!6024 d!45301))

(assert (=> bs!6024 m!167035))

(declare-fun m!171769 () Bool)

(assert (=> bs!6024 m!171769))

(assert (=> b!140855 d!45301))

(assert (=> b!140855 d!44079))

(declare-fun d!45303 () Bool)

(assert (=> d!45303 (= (apply!120 lt!73691 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73691) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6025 () Bool)

(assert (= bs!6025 d!45303))

(assert (=> bs!6025 m!170259))

(assert (=> bs!6025 m!170259))

(declare-fun m!171771 () Bool)

(assert (=> bs!6025 m!171771))

(assert (=> b!140550 d!45303))

(assert (=> b!141030 d!44081))

(declare-fun d!45305 () Bool)

(declare-fun res!67938 () Bool)

(declare-fun e!92798 () Bool)

(assert (=> d!45305 (=> res!67938 e!92798)))

(assert (=> d!45305 (= res!67938 (and ((_ is Cons!1715) (toList!858 lt!73279)) (= (_1!1322 (h!2322 (toList!858 lt!73279))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45305 (= (containsKey!180 (toList!858 lt!73279) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92798)))

(declare-fun b!142407 () Bool)

(declare-fun e!92799 () Bool)

(assert (=> b!142407 (= e!92798 e!92799)))

(declare-fun res!67939 () Bool)

(assert (=> b!142407 (=> (not res!67939) (not e!92799))))

(assert (=> b!142407 (= res!67939 (and (or (not ((_ is Cons!1715) (toList!858 lt!73279))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73279))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1715) (toList!858 lt!73279)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73279))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142408 () Bool)

(assert (=> b!142408 (= e!92799 (containsKey!180 (t!6295 (toList!858 lt!73279)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45305 (not res!67938)) b!142407))

(assert (= (and b!142407 res!67939) b!142408))

(declare-fun m!171773 () Bool)

(assert (=> b!142408 m!171773))

(assert (=> d!43909 d!45305))

(declare-fun d!45307 () Bool)

(declare-fun res!67940 () Bool)

(declare-fun e!92800 () Bool)

(assert (=> d!45307 (=> res!67940 e!92800)))

(assert (=> d!45307 (= res!67940 (and ((_ is Cons!1715) (toList!858 lt!73215)) (= (_1!1322 (h!2322 (toList!858 lt!73215))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45307 (= (containsKey!180 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000) e!92800)))

(declare-fun b!142409 () Bool)

(declare-fun e!92801 () Bool)

(assert (=> b!142409 (= e!92800 e!92801)))

(declare-fun res!67941 () Bool)

(assert (=> b!142409 (=> (not res!67941) (not e!92801))))

(assert (=> b!142409 (= res!67941 (and (or (not ((_ is Cons!1715) (toList!858 lt!73215))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73215))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73215)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73215))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142410 () Bool)

(assert (=> b!142410 (= e!92801 (containsKey!180 (t!6295 (toList!858 lt!73215)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45307 (not res!67940)) b!142409))

(assert (= (and b!142409 res!67941) b!142410))

(declare-fun m!171775 () Bool)

(assert (=> b!142410 m!171775))

(assert (=> d!44077 d!45307))

(declare-fun b!142412 () Bool)

(declare-fun e!92802 () Option!183)

(declare-fun e!92803 () Option!183)

(assert (=> b!142412 (= e!92802 e!92803)))

(declare-fun c!26885 () Bool)

(assert (=> b!142412 (= c!26885 (and ((_ is Cons!1715) (t!6295 lt!73274)) (not (= (_1!1322 (h!2322 (t!6295 lt!73274))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!142413 () Bool)

(assert (=> b!142413 (= e!92803 (getValueByKey!177 (t!6295 (t!6295 lt!73274)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142411 () Bool)

(assert (=> b!142411 (= e!92802 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73274)))))))

(declare-fun b!142414 () Bool)

(assert (=> b!142414 (= e!92803 None!181)))

(declare-fun c!26884 () Bool)

(declare-fun d!45309 () Bool)

(assert (=> d!45309 (= c!26884 (and ((_ is Cons!1715) (t!6295 lt!73274)) (= (_1!1322 (h!2322 (t!6295 lt!73274))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!45309 (= (getValueByKey!177 (t!6295 lt!73274) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!92802)))

(assert (= (and d!45309 c!26884) b!142411))

(assert (= (and d!45309 (not c!26884)) b!142412))

(assert (= (and b!142412 c!26885) b!142413))

(assert (= (and b!142412 (not c!26885)) b!142414))

(declare-fun m!171777 () Bool)

(assert (=> b!142413 m!171777))

(assert (=> b!140920 d!45309))

(declare-fun d!45311 () Bool)

(assert (=> d!45311 (= (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140411 d!45311))

(declare-fun d!45313 () Bool)

(assert (=> d!45313 (= (apply!120 lt!73713 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73713) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6026 () Bool)

(assert (= bs!6026 d!45313))

(declare-fun m!171779 () Bool)

(assert (=> bs!6026 m!171779))

(assert (=> bs!6026 m!171779))

(declare-fun m!171781 () Bool)

(assert (=> bs!6026 m!171781))

(assert (=> b!140576 d!45313))

(declare-fun b!142416 () Bool)

(declare-fun e!92804 () Option!183)

(declare-fun e!92805 () Option!183)

(assert (=> b!142416 (= e!92804 e!92805)))

(declare-fun c!26887 () Bool)

(assert (=> b!142416 (= c!26887 (and ((_ is Cons!1715) (t!6295 lt!73469)) (not (= (_1!1322 (h!2322 (t!6295 lt!73469))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142417 () Bool)

(assert (=> b!142417 (= e!92805 (getValueByKey!177 (t!6295 (t!6295 lt!73469)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142415 () Bool)

(assert (=> b!142415 (= e!92804 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73469)))))))

(declare-fun b!142418 () Bool)

(assert (=> b!142418 (= e!92805 None!181)))

(declare-fun d!45315 () Bool)

(declare-fun c!26886 () Bool)

(assert (=> d!45315 (= c!26886 (and ((_ is Cons!1715) (t!6295 lt!73469)) (= (_1!1322 (h!2322 (t!6295 lt!73469))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45315 (= (getValueByKey!177 (t!6295 lt!73469) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92804)))

(assert (= (and d!45315 c!26886) b!142415))

(assert (= (and d!45315 (not c!26886)) b!142416))

(assert (= (and b!142416 c!26887) b!142417))

(assert (= (and b!142416 (not c!26887)) b!142418))

(declare-fun m!171783 () Bool)

(assert (=> b!142417 m!171783))

(assert (=> b!140757 d!45315))

(assert (=> bm!15647 d!44887))

(assert (=> b!140964 d!44043))

(declare-fun d!45317 () Bool)

(assert (=> d!45317 (= (size!2584 (_2!1323 lt!73124)) (bvadd (_size!624 (_2!1323 lt!73124)) (bvsdiv (bvadd (extraKeys!2694 (_2!1323 lt!73124)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140416 d!45317))

(declare-fun d!45319 () Bool)

(assert (=> d!45319 (= (apply!120 lt!73514 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73514) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6027 () Bool)

(assert (= bs!6027 d!45319))

(assert (=> bs!6027 m!170077))

(assert (=> bs!6027 m!170077))

(declare-fun m!171785 () Bool)

(assert (=> bs!6027 m!171785))

(assert (=> b!140259 d!45319))

(declare-fun d!45321 () Bool)

(assert (=> d!45321 (isDefined!129 (getValueByKey!177 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun lt!74678 () Unit!4387)

(assert (=> d!45321 (= lt!74678 (choose!864 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92806 () Bool)

(assert (=> d!45321 e!92806))

(declare-fun res!67942 () Bool)

(assert (=> d!45321 (=> (not res!67942) (not e!92806))))

(assert (=> d!45321 (= res!67942 (isStrictlySorted!312 (toList!858 lt!73275)))))

(assert (=> d!45321 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74678)))

(declare-fun b!142419 () Bool)

(assert (=> b!142419 (= e!92806 (containsKey!180 (toList!858 lt!73275) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!45321 res!67942) b!142419))

(assert (=> d!45321 m!167053))

(assert (=> d!45321 m!167053))

(assert (=> d!45321 m!168703))

(declare-fun m!171787 () Bool)

(assert (=> d!45321 m!171787))

(declare-fun m!171789 () Bool)

(assert (=> d!45321 m!171789))

(assert (=> b!142419 m!168699))

(assert (=> b!140915 d!45321))

(assert (=> b!140915 d!45123))

(assert (=> b!140915 d!44073))

(declare-fun d!45323 () Bool)

(assert (=> d!45323 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73233)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73233)))))

(assert (=> d!43721 d!45323))

(declare-fun b!142421 () Bool)

(declare-fun e!92807 () Option!183)

(declare-fun e!92808 () Option!183)

(assert (=> b!142421 (= e!92807 e!92808)))

(declare-fun c!26889 () Bool)

(assert (=> b!142421 (= c!26889 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73233))))))

(declare-fun b!142422 () Bool)

(assert (=> b!142422 (= e!92808 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!73233))))

(declare-fun b!142420 () Bool)

(assert (=> b!142420 (= e!92807 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun b!142423 () Bool)

(assert (=> b!142423 (= e!92808 None!181)))

(declare-fun d!45325 () Bool)

(declare-fun c!26888 () Bool)

(assert (=> d!45325 (= c!26888 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73233)))))

(assert (=> d!45325 (= (getValueByKey!177 (toList!858 (+!173 lt!73234 (tuple2!2623 lt!73230 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73233) e!92807)))

(assert (= (and d!45325 c!26888) b!142420))

(assert (= (and d!45325 (not c!26888)) b!142421))

(assert (= (and b!142421 c!26889) b!142422))

(assert (= (and b!142421 (not c!26889)) b!142423))

(declare-fun m!171791 () Bool)

(assert (=> b!142422 m!171791))

(assert (=> d!43721 d!45325))

(declare-fun d!45327 () Bool)

(declare-fun res!67943 () Bool)

(declare-fun e!92809 () Bool)

(assert (=> d!45327 (=> res!67943 e!92809)))

(assert (=> d!45327 (= res!67943 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45327 (= (containsKey!180 (t!6295 (toList!858 lt!73184)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92809)))

(declare-fun b!142424 () Bool)

(declare-fun e!92810 () Bool)

(assert (=> b!142424 (= e!92809 e!92810)))

(declare-fun res!67944 () Bool)

(assert (=> b!142424 (=> (not res!67944) (not e!92810))))

(assert (=> b!142424 (= res!67944 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 lt!73184)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!142425 () Bool)

(assert (=> b!142425 (= e!92810 (containsKey!180 (t!6295 (t!6295 (toList!858 lt!73184))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45327 (not res!67943)) b!142424))

(assert (= (and b!142424 res!67944) b!142425))

(assert (=> b!142425 m!166833))

(declare-fun m!171793 () Bool)

(assert (=> b!142425 m!171793))

(assert (=> b!141068 d!45327))

(declare-fun d!45329 () Bool)

(assert (=> d!45329 (= (apply!120 lt!73587 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73587) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6028 () Bool)

(assert (= bs!6028 d!45329))

(assert (=> bs!6028 m!166927))

(declare-fun m!171795 () Bool)

(assert (=> bs!6028 m!171795))

(assert (=> bs!6028 m!171795))

(declare-fun m!171797 () Bool)

(assert (=> bs!6028 m!171797))

(assert (=> b!140369 d!45329))

(assert (=> b!140369 d!44145))

(declare-fun d!45331 () Bool)

(declare-fun res!67945 () Bool)

(declare-fun e!92811 () Bool)

(assert (=> d!45331 (=> res!67945 e!92811)))

(assert (=> d!45331 (= res!67945 (or ((_ is Nil!1716) lt!73951) ((_ is Nil!1716) (t!6295 lt!73951))))))

(assert (=> d!45331 (= (isStrictlySorted!312 lt!73951) e!92811)))

(declare-fun b!142426 () Bool)

(declare-fun e!92812 () Bool)

(assert (=> b!142426 (= e!92811 e!92812)))

(declare-fun res!67946 () Bool)

(assert (=> b!142426 (=> (not res!67946) (not e!92812))))

(assert (=> b!142426 (= res!67946 (bvslt (_1!1322 (h!2322 lt!73951)) (_1!1322 (h!2322 (t!6295 lt!73951)))))))

(declare-fun b!142427 () Bool)

(assert (=> b!142427 (= e!92812 (isStrictlySorted!312 (t!6295 lt!73951)))))

(assert (= (and d!45331 (not res!67945)) b!142426))

(assert (= (and b!142426 res!67946) b!142427))

(declare-fun m!171799 () Bool)

(assert (=> b!142427 m!171799))

(assert (=> d!44115 d!45331))

(declare-fun d!45333 () Bool)

(declare-fun res!67947 () Bool)

(declare-fun e!92813 () Bool)

(assert (=> d!45333 (=> res!67947 e!92813)))

(assert (=> d!45333 (= res!67947 (or ((_ is Nil!1716) (toList!858 lt!73188)) ((_ is Nil!1716) (t!6295 (toList!858 lt!73188)))))))

(assert (=> d!45333 (= (isStrictlySorted!312 (toList!858 lt!73188)) e!92813)))

(declare-fun b!142428 () Bool)

(declare-fun e!92814 () Bool)

(assert (=> b!142428 (= e!92813 e!92814)))

(declare-fun res!67948 () Bool)

(assert (=> b!142428 (=> (not res!67948) (not e!92814))))

(assert (=> b!142428 (= res!67948 (bvslt (_1!1322 (h!2322 (toList!858 lt!73188))) (_1!1322 (h!2322 (t!6295 (toList!858 lt!73188))))))))

(declare-fun b!142429 () Bool)

(assert (=> b!142429 (= e!92814 (isStrictlySorted!312 (t!6295 (toList!858 lt!73188))))))

(assert (= (and d!45333 (not res!67947)) b!142428))

(assert (= (and b!142428 res!67948) b!142429))

(assert (=> b!142429 m!169333))

(assert (=> d!44115 d!45333))

(declare-fun b!142431 () Bool)

(declare-fun e!92815 () Option!183)

(declare-fun e!92816 () Option!183)

(assert (=> b!142431 (= e!92815 e!92816)))

(declare-fun c!26891 () Bool)

(assert (=> b!142431 (= c!26891 (and ((_ is Cons!1715) (toList!858 lt!73852)) (not (= (_1!1322 (h!2322 (toList!858 lt!73852))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142432 () Bool)

(assert (=> b!142432 (= e!92816 (getValueByKey!177 (t!6295 (toList!858 lt!73852)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!142430 () Bool)

(assert (=> b!142430 (= e!92815 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73852)))))))

(declare-fun b!142433 () Bool)

(assert (=> b!142433 (= e!92816 None!181)))

(declare-fun d!45335 () Bool)

(declare-fun c!26890 () Bool)

(assert (=> d!45335 (= c!26890 (and ((_ is Cons!1715) (toList!858 lt!73852)) (= (_1!1322 (h!2322 (toList!858 lt!73852))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45335 (= (getValueByKey!177 (toList!858 lt!73852) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!92815)))

(assert (= (and d!45335 c!26890) b!142430))

(assert (= (and d!45335 (not c!26890)) b!142431))

(assert (= (and b!142431 c!26891) b!142432))

(assert (= (and b!142431 (not c!26891)) b!142433))

(declare-fun m!171801 () Bool)

(assert (=> b!142432 m!171801))

(assert (=> b!140830 d!45335))

(declare-fun d!45337 () Bool)

(assert (=> d!45337 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun bs!6029 () Bool)

(assert (= bs!6029 d!45337))

(assert (=> bs!6029 m!167363))

(declare-fun m!171803 () Bool)

(assert (=> bs!6029 m!171803))

(assert (=> b!141037 d!45337))

(assert (=> b!141037 d!44093))

(assert (=> d!43907 d!43903))

(assert (=> d!43907 d!43565))

(assert (=> d!43907 d!43905))

(declare-fun d!45339 () Bool)

(declare-fun c!26892 () Bool)

(assert (=> d!45339 (= c!26892 ((_ is Nil!1716) (toList!858 lt!73268)))))

(declare-fun e!92817 () (InoxSet tuple2!2622))

(assert (=> d!45339 (= (content!139 (toList!858 lt!73268)) e!92817)))

(declare-fun b!142434 () Bool)

(assert (=> b!142434 (= e!92817 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!142435 () Bool)

(assert (=> b!142435 (= e!92817 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73268)) true) (content!139 (t!6295 (toList!858 lt!73268)))))))

(assert (= (and d!45339 c!26892) b!142434))

(assert (= (and d!45339 (not c!26892)) b!142435))

(declare-fun m!171805 () Bool)

(assert (=> b!142435 m!171805))

(assert (=> b!142435 m!170597))

(assert (=> d!44203 d!45339))

(declare-fun d!45341 () Bool)

(assert (=> d!45341 (= (isEmpty!423 (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not ((_ is Some!182) (getValueByKey!177 (toList!858 call!15458) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(assert (=> d!43825 d!45341))

(assert (=> b!140685 d!43693))

(assert (=> d!44113 d!44111))

(declare-fun d!45343 () Bool)

(assert (=> d!45343 (= (getValueByKey!177 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) (Some!182 (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (=> d!45343 true))

(declare-fun _$22!500 () Unit!4387)

(assert (=> d!45343 (= (choose!873 lt!73459 (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) _$22!500)))

(declare-fun bs!6030 () Bool)

(assert (= bs!6030 d!45343))

(assert (=> bs!6030 m!167333))

(assert (=> d!44113 d!45343))

(declare-fun d!45345 () Bool)

(declare-fun res!67949 () Bool)

(declare-fun e!92818 () Bool)

(assert (=> d!45345 (=> res!67949 e!92818)))

(assert (=> d!45345 (= res!67949 (or ((_ is Nil!1716) lt!73459) ((_ is Nil!1716) (t!6295 lt!73459))))))

(assert (=> d!45345 (= (isStrictlySorted!312 lt!73459) e!92818)))

(declare-fun b!142436 () Bool)

(declare-fun e!92819 () Bool)

(assert (=> b!142436 (= e!92818 e!92819)))

(declare-fun res!67950 () Bool)

(assert (=> b!142436 (=> (not res!67950) (not e!92819))))

(assert (=> b!142436 (= res!67950 (bvslt (_1!1322 (h!2322 lt!73459)) (_1!1322 (h!2322 (t!6295 lt!73459)))))))

(declare-fun b!142437 () Bool)

(assert (=> b!142437 (= e!92819 (isStrictlySorted!312 (t!6295 lt!73459)))))

(assert (= (and d!45345 (not res!67949)) b!142436))

(assert (= (and b!142436 res!67950) b!142437))

(declare-fun m!171807 () Bool)

(assert (=> b!142437 m!171807))

(assert (=> d!44113 d!45345))

(declare-fun d!45347 () Bool)

(assert (=> d!45347 (= (isEmpty!424 lt!73587) (isEmpty!425 (toList!858 lt!73587)))))

(declare-fun bs!6031 () Bool)

(assert (= bs!6031 d!45347))

(declare-fun m!171809 () Bool)

(assert (=> bs!6031 m!171809))

(assert (=> b!140370 d!45347))

(declare-fun d!45349 () Bool)

(declare-fun e!92820 () Bool)

(assert (=> d!45349 e!92820))

(declare-fun res!67951 () Bool)

(assert (=> d!45349 (=> res!67951 e!92820)))

(declare-fun lt!74682 () Bool)

(assert (=> d!45349 (= res!67951 (not lt!74682))))

(declare-fun lt!74679 () Bool)

(assert (=> d!45349 (= lt!74682 lt!74679)))

(declare-fun lt!74681 () Unit!4387)

(declare-fun e!92821 () Unit!4387)

(assert (=> d!45349 (= lt!74681 e!92821)))

(declare-fun c!26893 () Bool)

(assert (=> d!45349 (= c!26893 lt!74679)))

(assert (=> d!45349 (= lt!74679 (containsKey!180 (toList!858 lt!73624) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45349 (= (contains!904 lt!73624 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74682)))

(declare-fun b!142438 () Bool)

(declare-fun lt!74680 () Unit!4387)

(assert (=> b!142438 (= e!92821 lt!74680)))

(assert (=> b!142438 (= lt!74680 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73624) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142438 (isDefined!129 (getValueByKey!177 (toList!858 lt!73624) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142439 () Bool)

(declare-fun Unit!4507 () Unit!4387)

(assert (=> b!142439 (= e!92821 Unit!4507)))

(declare-fun b!142440 () Bool)

(assert (=> b!142440 (= e!92820 (isDefined!129 (getValueByKey!177 (toList!858 lt!73624) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45349 c!26893) b!142438))

(assert (= (and d!45349 (not c!26893)) b!142439))

(assert (= (and d!45349 (not res!67951)) b!142440))

(declare-fun m!171811 () Bool)

(assert (=> d!45349 m!171811))

(declare-fun m!171813 () Bool)

(assert (=> b!142438 m!171813))

(declare-fun m!171815 () Bool)

(assert (=> b!142438 m!171815))

(assert (=> b!142438 m!171815))

(declare-fun m!171817 () Bool)

(assert (=> b!142438 m!171817))

(assert (=> b!142440 m!171815))

(assert (=> b!142440 m!171815))

(assert (=> b!142440 m!171817))

(assert (=> d!43779 d!45349))

(assert (=> d!43779 d!43665))

(declare-fun b!142442 () Bool)

(declare-fun e!92822 () Option!183)

(declare-fun e!92823 () Option!183)

(assert (=> b!142442 (= e!92822 e!92823)))

(declare-fun c!26895 () Bool)

(assert (=> b!142442 (= c!26895 (and ((_ is Cons!1715) (toList!858 lt!73811)) (not (= (_1!1322 (h!2322 (toList!858 lt!73811))) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))))

(declare-fun b!142443 () Bool)

(assert (=> b!142443 (= e!92823 (getValueByKey!177 (t!6295 (toList!858 lt!73811)) (_1!1322 (tuple2!2623 lt!73445 lt!73449))))))

(declare-fun b!142441 () Bool)

(assert (=> b!142441 (= e!92822 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73811)))))))

(declare-fun b!142444 () Bool)

(assert (=> b!142444 (= e!92823 None!181)))

(declare-fun d!45351 () Bool)

(declare-fun c!26894 () Bool)

(assert (=> d!45351 (= c!26894 (and ((_ is Cons!1715) (toList!858 lt!73811)) (= (_1!1322 (h!2322 (toList!858 lt!73811))) (_1!1322 (tuple2!2623 lt!73445 lt!73449)))))))

(assert (=> d!45351 (= (getValueByKey!177 (toList!858 lt!73811) (_1!1322 (tuple2!2623 lt!73445 lt!73449))) e!92822)))

(assert (= (and d!45351 c!26894) b!142441))

(assert (= (and d!45351 (not c!26894)) b!142442))

(assert (= (and b!142442 c!26895) b!142443))

(assert (= (and b!142442 (not c!26895)) b!142444))

(declare-fun m!171819 () Bool)

(assert (=> b!142443 m!171819))

(assert (=> b!140740 d!45351))

(declare-fun d!45353 () Bool)

(declare-fun e!92824 () Bool)

(assert (=> d!45353 e!92824))

(declare-fun res!67952 () Bool)

(assert (=> d!45353 (=> res!67952 e!92824)))

(declare-fun lt!74686 () Bool)

(assert (=> d!45353 (= res!67952 (not lt!74686))))

(declare-fun lt!74683 () Bool)

(assert (=> d!45353 (= lt!74686 lt!74683)))

(declare-fun lt!74685 () Unit!4387)

(declare-fun e!92825 () Unit!4387)

(assert (=> d!45353 (= lt!74685 e!92825)))

(declare-fun c!26896 () Bool)

(assert (=> d!45353 (= c!26896 lt!74683)))

(assert (=> d!45353 (= lt!74683 (containsKey!180 (toList!858 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45353 (= (contains!904 lt!73601 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74686)))

(declare-fun b!142445 () Bool)

(declare-fun lt!74684 () Unit!4387)

(assert (=> b!142445 (= e!92825 lt!74684)))

(assert (=> b!142445 (= lt!74684 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142445 (isDefined!129 (getValueByKey!177 (toList!858 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142446 () Bool)

(declare-fun Unit!4508 () Unit!4387)

(assert (=> b!142446 (= e!92825 Unit!4508)))

(declare-fun b!142447 () Bool)

(assert (=> b!142447 (= e!92824 (isDefined!129 (getValueByKey!177 (toList!858 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45353 c!26896) b!142445))

(assert (= (and d!45353 (not c!26896)) b!142446))

(assert (= (and d!45353 (not res!67952)) b!142447))

(declare-fun m!171821 () Bool)

(assert (=> d!45353 m!171821))

(declare-fun m!171823 () Bool)

(assert (=> b!142445 m!171823))

(assert (=> b!142445 m!171051))

(assert (=> b!142445 m!171051))

(declare-fun m!171825 () Bool)

(assert (=> b!142445 m!171825))

(assert (=> b!142447 m!171051))

(assert (=> b!142447 m!171051))

(assert (=> b!142447 m!171825))

(assert (=> bm!15566 d!45353))

(declare-fun d!45355 () Bool)

(declare-fun lt!74687 () Bool)

(assert (=> d!45355 (= lt!74687 (select (content!139 (toList!858 lt!73954)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun e!92826 () Bool)

(assert (=> d!45355 (= lt!74687 e!92826)))

(declare-fun res!67953 () Bool)

(assert (=> d!45355 (=> (not res!67953) (not e!92826))))

(assert (=> d!45355 (= res!67953 ((_ is Cons!1715) (toList!858 lt!73954)))))

(assert (=> d!45355 (= (contains!907 (toList!858 lt!73954) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74687)))

(declare-fun b!142448 () Bool)

(declare-fun e!92827 () Bool)

(assert (=> b!142448 (= e!92826 e!92827)))

(declare-fun res!67954 () Bool)

(assert (=> b!142448 (=> res!67954 e!92827)))

(assert (=> b!142448 (= res!67954 (= (h!2322 (toList!858 lt!73954)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!142449 () Bool)

(assert (=> b!142449 (= e!92827 (contains!907 (t!6295 (toList!858 lt!73954)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45355 res!67953) b!142448))

(assert (= (and b!142448 (not res!67954)) b!142449))

(declare-fun m!171827 () Bool)

(assert (=> d!45355 m!171827))

(declare-fun m!171829 () Bool)

(assert (=> d!45355 m!171829))

(declare-fun m!171831 () Bool)

(assert (=> b!142449 m!171831))

(assert (=> b!141003 d!45355))

(declare-fun d!45357 () Bool)

(declare-fun c!26897 () Bool)

(assert (=> d!45357 (= c!26897 ((_ is Nil!1716) (toList!858 lt!73279)))))

(declare-fun e!92828 () (InoxSet tuple2!2622))

(assert (=> d!45357 (= (content!139 (toList!858 lt!73279)) e!92828)))

(declare-fun b!142450 () Bool)

(assert (=> b!142450 (= e!92828 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!142451 () Bool)

(assert (=> b!142451 (= e!92828 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73279)) true) (content!139 (t!6295 (toList!858 lt!73279)))))))

(assert (= (and d!45357 c!26897) b!142450))

(assert (= (and d!45357 (not c!26897)) b!142451))

(declare-fun m!171833 () Bool)

(assert (=> b!142451 m!171833))

(assert (=> b!142451 m!170647))

(assert (=> d!43971 d!45357))

(declare-fun d!45359 () Bool)

(assert (=> d!45359 (= (isEmpty!423 (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122)))) (not ((_ is Some!182) (getValueByKey!177 (toList!858 call!15472) (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!73122))))))))

(assert (=> d!43701 d!45359))

(declare-fun d!45361 () Bool)

(assert (=> d!45361 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun bs!6032 () Bool)

(assert (= bs!6032 d!45361))

(assert (=> bs!6032 m!167279))

(declare-fun m!171835 () Bool)

(assert (=> bs!6032 m!171835))

(assert (=> b!140621 d!45361))

(assert (=> b!140621 d!43807))

(declare-fun d!45363 () Bool)

(declare-fun res!67955 () Bool)

(declare-fun e!92829 () Bool)

(assert (=> d!45363 (=> res!67955 e!92829)))

(assert (=> d!45363 (= res!67955 (and ((_ is Cons!1715) (toList!858 lt!73446)) (= (_1!1322 (h!2322 (toList!858 lt!73446))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45363 (= (containsKey!180 (toList!858 lt!73446) #b1000000000000000000000000000000000000000000000000000000000000000) e!92829)))

(declare-fun b!142452 () Bool)

(declare-fun e!92830 () Bool)

(assert (=> b!142452 (= e!92829 e!92830)))

(declare-fun res!67956 () Bool)

(assert (=> b!142452 (=> (not res!67956) (not e!92830))))

(assert (=> b!142452 (= res!67956 (and (or (not ((_ is Cons!1715) (toList!858 lt!73446))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73446))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73446)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73446))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142453 () Bool)

(assert (=> b!142453 (= e!92830 (containsKey!180 (t!6295 (toList!858 lt!73446)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45363 (not res!67955)) b!142452))

(assert (= (and b!142452 res!67956) b!142453))

(declare-fun m!171837 () Bool)

(assert (=> b!142453 m!171837))

(assert (=> d!44053 d!45363))

(declare-fun d!45365 () Bool)

(declare-fun res!67957 () Bool)

(declare-fun e!92831 () Bool)

(assert (=> d!45365 (=> res!67957 e!92831)))

(assert (=> d!45365 (= res!67957 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))) lt!73247)))))

(assert (=> d!45365 (= (containsKey!180 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) lt!73247) e!92831)))

(declare-fun b!142454 () Bool)

(declare-fun e!92832 () Bool)

(assert (=> b!142454 (= e!92831 e!92832)))

(declare-fun res!67958 () Bool)

(assert (=> b!142454 (=> (not res!67958) (not e!92832))))

(assert (=> b!142454 (= res!67958 (and (or (not ((_ is Cons!1715) (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))) (bvsle (_1!1322 (h!2322 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))) lt!73247)) ((_ is Cons!1715) (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))) (bvslt (_1!1322 (h!2322 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))) lt!73247)))))

(declare-fun b!142455 () Bool)

(assert (=> b!142455 (= e!92832 (containsKey!180 (t!6295 (toList!858 (+!173 lt!73241 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))) lt!73247))))

(assert (= (and d!45365 (not res!67957)) b!142454))

(assert (= (and b!142454 res!67958) b!142455))

(declare-fun m!171839 () Bool)

(assert (=> b!142455 m!171839))

(assert (=> d!44187 d!45365))

(declare-fun d!45367 () Bool)

(declare-fun e!92833 () Bool)

(assert (=> d!45367 e!92833))

(declare-fun res!67959 () Bool)

(assert (=> d!45367 (=> res!67959 e!92833)))

(declare-fun lt!74691 () Bool)

(assert (=> d!45367 (= res!67959 (not lt!74691))))

(declare-fun lt!74688 () Bool)

(assert (=> d!45367 (= lt!74691 lt!74688)))

(declare-fun lt!74690 () Unit!4387)

(declare-fun e!92834 () Unit!4387)

(assert (=> d!45367 (= lt!74690 e!92834)))

(declare-fun c!26898 () Bool)

(assert (=> d!45367 (= c!26898 lt!74688)))

(assert (=> d!45367 (= lt!74688 (containsKey!180 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (=> d!45367 (= (contains!904 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))) lt!74691)))

(declare-fun b!142456 () Bool)

(declare-fun lt!74689 () Unit!4387)

(assert (=> b!142456 (= e!92834 lt!74689)))

(assert (=> b!142456 (= lt!74689 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(assert (=> b!142456 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)))))))

(declare-fun b!142457 () Bool)

(declare-fun Unit!4509 () Unit!4387)

(assert (=> b!142457 (= e!92834 Unit!4509)))

(declare-fun b!142458 () Bool)

(assert (=> b!142458 (= e!92833 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))))

(assert (= (and d!45367 c!26898) b!142456))

(assert (= (and d!45367 (not c!26898)) b!142457))

(assert (= (and d!45367 (not res!67959)) b!142458))

(assert (=> d!45367 m!167995))

(declare-fun m!171841 () Bool)

(assert (=> d!45367 m!171841))

(assert (=> b!142456 m!167995))

(declare-fun m!171843 () Bool)

(assert (=> b!142456 m!171843))

(assert (=> b!142456 m!167995))

(declare-fun m!171845 () Bool)

(assert (=> b!142456 m!171845))

(assert (=> b!142456 m!171845))

(declare-fun m!171847 () Bool)

(assert (=> b!142456 m!171847))

(assert (=> b!142458 m!167995))

(assert (=> b!142458 m!171845))

(assert (=> b!142458 m!171845))

(assert (=> b!142458 m!171847))

(assert (=> b!140548 d!45367))

(assert (=> b!140548 d!43861))

(declare-fun d!45369 () Bool)

(assert (=> d!45369 (= (get!1535 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73309) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43919 d!45369))

(assert (=> d!43919 d!44401))

(assert (=> b!140940 d!45073))

(declare-fun d!45371 () Bool)

(declare-fun res!67960 () Bool)

(declare-fun e!92835 () Bool)

(assert (=> d!45371 (=> res!67960 e!92835)))

(assert (=> d!45371 (= res!67960 (and ((_ is Cons!1715) (toList!858 lt!73215)) (= (_1!1322 (h!2322 (toList!858 lt!73215))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45371 (= (containsKey!180 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) e!92835)))

(declare-fun b!142459 () Bool)

(declare-fun e!92836 () Bool)

(assert (=> b!142459 (= e!92835 e!92836)))

(declare-fun res!67961 () Bool)

(assert (=> b!142459 (=> (not res!67961) (not e!92836))))

(assert (=> b!142459 (= res!67961 (and (or (not ((_ is Cons!1715) (toList!858 lt!73215))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73215))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1715) (toList!858 lt!73215)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73215))) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142460 () Bool)

(assert (=> b!142460 (= e!92836 (containsKey!180 (t!6295 (toList!858 lt!73215)) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45371 (not res!67960)) b!142459))

(assert (= (and b!142459 res!67961) b!142460))

(assert (=> b!142460 m!166927))

(declare-fun m!171849 () Bool)

(assert (=> b!142460 m!171849))

(assert (=> d!43801 d!45371))

(assert (=> b!140412 d!45311))

(declare-fun d!45373 () Bool)

(declare-fun res!67962 () Bool)

(declare-fun e!92837 () Bool)

(assert (=> d!45373 (=> res!67962 e!92837)))

(assert (=> d!45373 (= res!67962 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))) lt!73225)))))

(assert (=> d!45373 (= (containsKey!180 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) lt!73225) e!92837)))

(declare-fun b!142461 () Bool)

(declare-fun e!92838 () Bool)

(assert (=> b!142461 (= e!92837 e!92838)))

(declare-fun res!67963 () Bool)

(assert (=> b!142461 (=> (not res!67963) (not e!92838))))

(assert (=> b!142461 (= res!67963 (and (or (not ((_ is Cons!1715) (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))) (bvsle (_1!1322 (h!2322 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))) lt!73225)) ((_ is Cons!1715) (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))) (bvslt (_1!1322 (h!2322 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))) lt!73225)))))

(declare-fun b!142462 () Bool)

(assert (=> b!142462 (= e!92838 (containsKey!180 (t!6295 (toList!858 (+!173 lt!73219 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))) lt!73225))))

(assert (= (and d!45373 (not res!67962)) b!142461))

(assert (= (and b!142461 res!67963) b!142462))

(declare-fun m!171851 () Bool)

(assert (=> b!142462 m!171851))

(assert (=> d!43745 d!45373))

(declare-fun bm!15745 () Bool)

(declare-fun call!15748 () Bool)

(assert (=> bm!15745 (= call!15748 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))))))

(declare-fun b!142463 () Bool)

(declare-fun e!92841 () Bool)

(declare-fun e!92840 () Bool)

(assert (=> b!142463 (= e!92841 e!92840)))

(declare-fun c!26899 () Bool)

(assert (=> b!142463 (= c!26899 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142464 () Bool)

(declare-fun e!92839 () Bool)

(assert (=> b!142464 (= e!92840 e!92839)))

(declare-fun lt!74694 () (_ BitVec 64))

(assert (=> b!142464 (= lt!74694 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74692 () Unit!4387)

(assert (=> b!142464 (= lt!74692 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!74694 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!142464 (arrayContainsKey!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) lt!74694 #b00000000000000000000000000000000)))

(declare-fun lt!74693 () Unit!4387)

(assert (=> b!142464 (= lt!74693 lt!74692)))

(declare-fun res!67964 () Bool)

(assert (=> b!142464 (= res!67964 (= (seekEntryOrOpen!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))) (Found!273 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142464 (=> (not res!67964) (not e!92839))))

(declare-fun d!45375 () Bool)

(declare-fun res!67965 () Bool)

(assert (=> d!45375 (=> res!67965 e!92841)))

(assert (=> d!45375 (= res!67965 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!45375 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4698 (v!3279 (underlying!479 thiss!992))) (mask!7279 (v!3279 (underlying!479 thiss!992)))) e!92841)))

(declare-fun b!142465 () Bool)

(assert (=> b!142465 (= e!92840 call!15748)))

(declare-fun b!142466 () Bool)

(assert (=> b!142466 (= e!92839 call!15748)))

(assert (= (and d!45375 (not res!67965)) b!142463))

(assert (= (and b!142463 c!26899) b!142464))

(assert (= (and b!142463 (not c!26899)) b!142465))

(assert (= (and b!142464 res!67964) b!142466))

(assert (= (or b!142466 b!142465) bm!15745))

(declare-fun m!171853 () Bool)

(assert (=> bm!15745 m!171853))

(declare-fun m!171855 () Bool)

(assert (=> b!142463 m!171855))

(assert (=> b!142463 m!171855))

(declare-fun m!171857 () Bool)

(assert (=> b!142463 m!171857))

(assert (=> b!142464 m!171855))

(declare-fun m!171859 () Bool)

(assert (=> b!142464 m!171859))

(declare-fun m!171861 () Bool)

(assert (=> b!142464 m!171861))

(assert (=> b!142464 m!171855))

(declare-fun m!171863 () Bool)

(assert (=> b!142464 m!171863))

(assert (=> bm!15621 d!45375))

(declare-fun b!142468 () Bool)

(declare-fun e!92842 () Option!183)

(declare-fun e!92843 () Option!183)

(assert (=> b!142468 (= e!92842 e!92843)))

(declare-fun c!26901 () Bool)

(assert (=> b!142468 (= c!26901 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142469 () Bool)

(assert (=> b!142469 (= e!92843 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73184))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142467 () Bool)

(assert (=> b!142467 (= e!92842 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73184))))))))

(declare-fun b!142470 () Bool)

(assert (=> b!142470 (= e!92843 None!181)))

(declare-fun d!45377 () Bool)

(declare-fun c!26900 () Bool)

(assert (=> d!45377 (= c!26900 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45377 (= (getValueByKey!177 (t!6295 (toList!858 lt!73184)) #b0000000000000000000000000000000000000000000000000000000000000000) e!92842)))

(assert (= (and d!45377 c!26900) b!142467))

(assert (= (and d!45377 (not c!26900)) b!142468))

(assert (= (and b!142468 c!26901) b!142469))

(assert (= (and b!142468 (not c!26901)) b!142470))

(declare-fun m!171865 () Bool)

(assert (=> b!142469 m!171865))

(assert (=> b!140617 d!45377))

(assert (=> b!140306 d!44897))

(declare-fun d!45379 () Bool)

(assert (=> d!45379 (isDefined!129 (getValueByKey!177 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun lt!74695 () Unit!4387)

(assert (=> d!45379 (= lt!74695 (choose!864 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!92844 () Bool)

(assert (=> d!45379 e!92844))

(declare-fun res!67966 () Bool)

(assert (=> d!45379 (=> (not res!67966) (not e!92844))))

(assert (=> d!45379 (= res!67966 (isStrictlySorted!312 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))

(assert (=> d!45379 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!74695)))

(declare-fun b!142471 () Bool)

(assert (=> b!142471 (= e!92844 (containsKey!180 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!45379 res!67966) b!142471))

(assert (=> d!45379 m!166633))

(assert (=> d!45379 m!167989))

(assert (=> d!45379 m!167989))

(assert (=> d!45379 m!167991))

(assert (=> d!45379 m!166633))

(declare-fun m!171867 () Bool)

(assert (=> d!45379 m!171867))

(assert (=> d!45379 m!171735))

(assert (=> b!142471 m!166633))

(assert (=> b!142471 m!167985))

(assert (=> b!140545 d!45379))

(assert (=> b!140545 d!45249))

(assert (=> b!140545 d!45251))

(declare-fun d!45381 () Bool)

(assert (=> d!45381 (= (get!1535 (getValueByKey!177 (toList!858 lt!73231) lt!73226)) (v!3285 (getValueByKey!177 (toList!858 lt!73231) lt!73226)))))

(assert (=> d!43731 d!45381))

(declare-fun b!142473 () Bool)

(declare-fun e!92845 () Option!183)

(declare-fun e!92846 () Option!183)

(assert (=> b!142473 (= e!92845 e!92846)))

(declare-fun c!26903 () Bool)

(assert (=> b!142473 (= c!26903 (and ((_ is Cons!1715) (toList!858 lt!73231)) (not (= (_1!1322 (h!2322 (toList!858 lt!73231))) lt!73226))))))

(declare-fun b!142474 () Bool)

(assert (=> b!142474 (= e!92846 (getValueByKey!177 (t!6295 (toList!858 lt!73231)) lt!73226))))

(declare-fun b!142472 () Bool)

(assert (=> b!142472 (= e!92845 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73231)))))))

(declare-fun b!142475 () Bool)

(assert (=> b!142475 (= e!92846 None!181)))

(declare-fun d!45383 () Bool)

(declare-fun c!26902 () Bool)

(assert (=> d!45383 (= c!26902 (and ((_ is Cons!1715) (toList!858 lt!73231)) (= (_1!1322 (h!2322 (toList!858 lt!73231))) lt!73226)))))

(assert (=> d!45383 (= (getValueByKey!177 (toList!858 lt!73231) lt!73226) e!92845)))

(assert (= (and d!45383 c!26902) b!142472))

(assert (= (and d!45383 (not c!26902)) b!142473))

(assert (= (and b!142473 c!26903) b!142474))

(assert (= (and b!142473 (not c!26903)) b!142475))

(declare-fun m!171869 () Bool)

(assert (=> b!142474 m!171869))

(assert (=> d!43731 d!45383))

(declare-fun d!45385 () Bool)

(assert (=> d!45385 (= (isEmpty!423 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194)) (not ((_ is Some!182) (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))))

(assert (=> d!43829 d!45385))

(assert (=> b!141024 d!43693))

(assert (=> b!140417 d!45317))

(declare-fun b!142477 () Bool)

(declare-fun e!92847 () Option!183)

(declare-fun e!92848 () Option!183)

(assert (=> b!142477 (= e!92847 e!92848)))

(declare-fun c!26905 () Bool)

(assert (=> b!142477 (= c!26905 (and ((_ is Cons!1715) (toList!858 lt!74012)) (not (= (_1!1322 (h!2322 (toList!858 lt!74012))) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142478 () Bool)

(assert (=> b!142478 (= e!92848 (getValueByKey!177 (t!6295 (toList!858 lt!74012)) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142476 () Bool)

(assert (=> b!142476 (= e!92847 (Some!182 (_2!1322 (h!2322 (toList!858 lt!74012)))))))

(declare-fun b!142479 () Bool)

(assert (=> b!142479 (= e!92848 None!181)))

(declare-fun c!26904 () Bool)

(declare-fun d!45387 () Bool)

(assert (=> d!45387 (= c!26904 (and ((_ is Cons!1715) (toList!858 lt!74012)) (= (_1!1322 (h!2322 (toList!858 lt!74012))) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45387 (= (getValueByKey!177 (toList!858 lt!74012) (_1!1322 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16)))) e!92847)))

(assert (= (and d!45387 c!26904) b!142476))

(assert (= (and d!45387 (not c!26904)) b!142477))

(assert (= (and b!142477 c!26905) b!142478))

(assert (= (and b!142477 (not c!26905)) b!142479))

(declare-fun m!171871 () Bool)

(assert (=> b!142478 m!171871))

(assert (=> b!141072 d!45387))

(declare-fun d!45389 () Bool)

(declare-fun lt!74696 () Bool)

(assert (=> d!45389 (= lt!74696 (select (content!139 (toList!858 lt!73852)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun e!92849 () Bool)

(assert (=> d!45389 (= lt!74696 e!92849)))

(declare-fun res!67967 () Bool)

(assert (=> d!45389 (=> (not res!67967) (not e!92849))))

(assert (=> d!45389 (= res!67967 ((_ is Cons!1715) (toList!858 lt!73852)))))

(assert (=> d!45389 (= (contains!907 (toList!858 lt!73852) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74696)))

(declare-fun b!142480 () Bool)

(declare-fun e!92850 () Bool)

(assert (=> b!142480 (= e!92849 e!92850)))

(declare-fun res!67968 () Bool)

(assert (=> b!142480 (=> res!67968 e!92850)))

(assert (=> b!142480 (= res!67968 (= (h!2322 (toList!858 lt!73852)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!142481 () Bool)

(assert (=> b!142481 (= e!92850 (contains!907 (t!6295 (toList!858 lt!73852)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45389 res!67967) b!142480))

(assert (= (and b!142480 (not res!67968)) b!142481))

(declare-fun m!171873 () Bool)

(assert (=> d!45389 m!171873))

(declare-fun m!171875 () Bool)

(assert (=> d!45389 m!171875))

(declare-fun m!171877 () Bool)

(assert (=> b!142481 m!171877))

(assert (=> b!140831 d!45389))

(assert (=> d!43795 d!43697))

(declare-fun d!45391 () Bool)

(declare-fun lt!74697 () Bool)

(assert (=> d!45391 (= lt!74697 (select (content!139 (t!6295 (toList!858 lt!73460))) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!92851 () Bool)

(assert (=> d!45391 (= lt!74697 e!92851)))

(declare-fun res!67969 () Bool)

(assert (=> d!45391 (=> (not res!67969) (not e!92851))))

(assert (=> d!45391 (= res!67969 ((_ is Cons!1715) (t!6295 (toList!858 lt!73460))))))

(assert (=> d!45391 (= (contains!907 (t!6295 (toList!858 lt!73460)) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!74697)))

(declare-fun b!142482 () Bool)

(declare-fun e!92852 () Bool)

(assert (=> b!142482 (= e!92851 e!92852)))

(declare-fun res!67970 () Bool)

(assert (=> b!142482 (=> res!67970 e!92852)))

(assert (=> b!142482 (= res!67970 (= (h!2322 (t!6295 (toList!858 lt!73460))) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!142483 () Bool)

(assert (=> b!142483 (= e!92852 (contains!907 (t!6295 (t!6295 (toList!858 lt!73460))) (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!45391 res!67969) b!142482))

(assert (= (and b!142482 (not res!67970)) b!142483))

(assert (=> d!45391 m!169535))

(declare-fun m!171879 () Bool)

(assert (=> d!45391 m!171879))

(declare-fun m!171881 () Bool)

(assert (=> b!142483 m!171881))

(assert (=> b!141084 d!45391))

(declare-fun d!45393 () Bool)

(assert (=> d!45393 (= (apply!120 lt!73961 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73961) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6033 () Bool)

(assert (= bs!6033 d!45393))

(declare-fun m!171883 () Bool)

(assert (=> bs!6033 m!171883))

(assert (=> bs!6033 m!171883))

(declare-fun m!171885 () Bool)

(assert (=> bs!6033 m!171885))

(assert (=> b!141012 d!45393))

(declare-fun d!45395 () Bool)

(declare-fun c!26906 () Bool)

(assert (=> d!45395 (= c!26906 ((_ is Nil!1716) (toList!858 lt!73470)))))

(declare-fun e!92853 () (InoxSet tuple2!2622))

(assert (=> d!45395 (= (content!139 (toList!858 lt!73470)) e!92853)))

(declare-fun b!142484 () Bool)

(assert (=> b!142484 (= e!92853 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!142485 () Bool)

(assert (=> b!142485 (= e!92853 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73470)) true) (content!139 (t!6295 (toList!858 lt!73470)))))))

(assert (= (and d!45395 c!26906) b!142484))

(assert (= (and d!45395 (not c!26906)) b!142485))

(declare-fun m!171887 () Bool)

(assert (=> b!142485 m!171887))

(assert (=> b!142485 m!170127))

(assert (=> d!44075 d!45395))

(declare-fun lt!74698 () Bool)

(declare-fun d!45397 () Bool)

(assert (=> d!45397 (= lt!74698 (select (content!139 (toList!858 lt!74012)) (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))

(declare-fun e!92854 () Bool)

(assert (=> d!45397 (= lt!74698 e!92854)))

(declare-fun res!67971 () Bool)

(assert (=> d!45397 (=> (not res!67971) (not e!92854))))

(assert (=> d!45397 (= res!67971 ((_ is Cons!1715) (toList!858 lt!74012)))))

(assert (=> d!45397 (= (contains!907 (toList!858 lt!74012) (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) lt!74698)))

(declare-fun b!142486 () Bool)

(declare-fun e!92855 () Bool)

(assert (=> b!142486 (= e!92854 e!92855)))

(declare-fun res!67972 () Bool)

(assert (=> b!142486 (=> res!67972 e!92855)))

(assert (=> b!142486 (= res!67972 (= (h!2322 (toList!858 lt!74012)) (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))

(declare-fun b!142487 () Bool)

(assert (=> b!142487 (= e!92855 (contains!907 (t!6295 (toList!858 lt!74012)) (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45397 res!67971) b!142486))

(assert (= (and b!142486 (not res!67972)) b!142487))

(declare-fun m!171889 () Bool)

(assert (=> d!45397 m!171889))

(declare-fun m!171891 () Bool)

(assert (=> d!45397 m!171891))

(declare-fun m!171893 () Bool)

(assert (=> b!142487 m!171893))

(assert (=> b!141073 d!45397))

(declare-fun d!45399 () Bool)

(assert (=> d!45399 (= (apply!120 lt!73770 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73770) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6034 () Bool)

(assert (= bs!6034 d!45399))

(assert (=> bs!6034 m!169349))

(assert (=> bs!6034 m!169349))

(declare-fun m!171895 () Bool)

(assert (=> bs!6034 m!171895))

(assert (=> b!140686 d!45399))

(declare-fun d!45401 () Bool)

(declare-fun e!92856 () Bool)

(assert (=> d!45401 e!92856))

(declare-fun res!67973 () Bool)

(assert (=> d!45401 (=> res!67973 e!92856)))

(declare-fun lt!74702 () Bool)

(assert (=> d!45401 (= res!67973 (not lt!74702))))

(declare-fun lt!74699 () Bool)

(assert (=> d!45401 (= lt!74702 lt!74699)))

(declare-fun lt!74701 () Unit!4387)

(declare-fun e!92857 () Unit!4387)

(assert (=> d!45401 (= lt!74701 e!92857)))

(declare-fun c!26907 () Bool)

(assert (=> d!45401 (= c!26907 lt!74699)))

(assert (=> d!45401 (= lt!74699 (containsKey!180 (toList!858 lt!73514) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45401 (= (contains!904 lt!73514 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74702)))

(declare-fun b!142488 () Bool)

(declare-fun lt!74700 () Unit!4387)

(assert (=> b!142488 (= e!92857 lt!74700)))

(assert (=> b!142488 (= lt!74700 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73514) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142488 (isDefined!129 (getValueByKey!177 (toList!858 lt!73514) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142489 () Bool)

(declare-fun Unit!4510 () Unit!4387)

(assert (=> b!142489 (= e!92857 Unit!4510)))

(declare-fun b!142490 () Bool)

(assert (=> b!142490 (= e!92856 (isDefined!129 (getValueByKey!177 (toList!858 lt!73514) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45401 c!26907) b!142488))

(assert (= (and d!45401 (not c!26907)) b!142489))

(assert (= (and d!45401 (not res!67973)) b!142490))

(declare-fun m!171897 () Bool)

(assert (=> d!45401 m!171897))

(declare-fun m!171899 () Bool)

(assert (=> b!142488 m!171899))

(assert (=> b!142488 m!171229))

(assert (=> b!142488 m!171229))

(declare-fun m!171901 () Bool)

(assert (=> b!142488 m!171901))

(assert (=> b!142490 m!171229))

(assert (=> b!142490 m!171229))

(assert (=> b!142490 m!171901))

(assert (=> bm!15551 d!45401))

(declare-fun d!45403 () Bool)

(declare-fun lt!74703 () Bool)

(assert (=> d!45403 (= lt!74703 (select (content!139 (toList!858 lt!73811)) (tuple2!2623 lt!73445 lt!73449)))))

(declare-fun e!92858 () Bool)

(assert (=> d!45403 (= lt!74703 e!92858)))

(declare-fun res!67974 () Bool)

(assert (=> d!45403 (=> (not res!67974) (not e!92858))))

(assert (=> d!45403 (= res!67974 ((_ is Cons!1715) (toList!858 lt!73811)))))

(assert (=> d!45403 (= (contains!907 (toList!858 lt!73811) (tuple2!2623 lt!73445 lt!73449)) lt!74703)))

(declare-fun b!142491 () Bool)

(declare-fun e!92859 () Bool)

(assert (=> b!142491 (= e!92858 e!92859)))

(declare-fun res!67975 () Bool)

(assert (=> b!142491 (=> res!67975 e!92859)))

(assert (=> b!142491 (= res!67975 (= (h!2322 (toList!858 lt!73811)) (tuple2!2623 lt!73445 lt!73449)))))

(declare-fun b!142492 () Bool)

(assert (=> b!142492 (= e!92859 (contains!907 (t!6295 (toList!858 lt!73811)) (tuple2!2623 lt!73445 lt!73449)))))

(assert (= (and d!45403 res!67974) b!142491))

(assert (= (and b!142491 (not res!67975)) b!142492))

(declare-fun m!171903 () Bool)

(assert (=> d!45403 m!171903))

(declare-fun m!171905 () Bool)

(assert (=> d!45403 m!171905))

(declare-fun m!171907 () Bool)

(assert (=> b!142492 m!171907))

(assert (=> b!140741 d!45403))

(declare-fun d!45405 () Bool)

(declare-fun e!92860 () Bool)

(assert (=> d!45405 e!92860))

(declare-fun res!67976 () Bool)

(assert (=> d!45405 (=> res!67976 e!92860)))

(declare-fun lt!74707 () Bool)

(assert (=> d!45405 (= res!67976 (not lt!74707))))

(declare-fun lt!74704 () Bool)

(assert (=> d!45405 (= lt!74707 lt!74704)))

(declare-fun lt!74706 () Unit!4387)

(declare-fun e!92861 () Unit!4387)

(assert (=> d!45405 (= lt!74706 e!92861)))

(declare-fun c!26908 () Bool)

(assert (=> d!45405 (= c!26908 lt!74704)))

(assert (=> d!45405 (= lt!74704 (containsKey!180 (toList!858 lt!73511) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45405 (= (contains!904 lt!73511 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74707)))

(declare-fun b!142493 () Bool)

(declare-fun lt!74705 () Unit!4387)

(assert (=> b!142493 (= e!92861 lt!74705)))

(assert (=> b!142493 (= lt!74705 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73511) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142493 (isDefined!129 (getValueByKey!177 (toList!858 lt!73511) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142494 () Bool)

(declare-fun Unit!4511 () Unit!4387)

(assert (=> b!142494 (= e!92861 Unit!4511)))

(declare-fun b!142495 () Bool)

(assert (=> b!142495 (= e!92860 (isDefined!129 (getValueByKey!177 (toList!858 lt!73511) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45405 c!26908) b!142493))

(assert (= (and d!45405 (not c!26908)) b!142494))

(assert (= (and d!45405 (not res!67976)) b!142495))

(declare-fun m!171909 () Bool)

(assert (=> d!45405 m!171909))

(declare-fun m!171911 () Bool)

(assert (=> b!142493 m!171911))

(assert (=> b!142493 m!167471))

(assert (=> b!142493 m!167471))

(declare-fun m!171913 () Bool)

(assert (=> b!142493 m!171913))

(assert (=> b!142495 m!167471))

(assert (=> b!142495 m!167471))

(assert (=> b!142495 m!171913))

(assert (=> d!43689 d!45405))

(declare-fun b!142497 () Bool)

(declare-fun e!92862 () Option!183)

(declare-fun e!92863 () Option!183)

(assert (=> b!142497 (= e!92862 e!92863)))

(declare-fun c!26910 () Bool)

(assert (=> b!142497 (= c!26910 (and ((_ is Cons!1715) lt!73510) (not (= (_1!1322 (h!2322 lt!73510)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142498 () Bool)

(assert (=> b!142498 (= e!92863 (getValueByKey!177 (t!6295 lt!73510) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142496 () Bool)

(assert (=> b!142496 (= e!92862 (Some!182 (_2!1322 (h!2322 lt!73510))))))

(declare-fun b!142499 () Bool)

(assert (=> b!142499 (= e!92863 None!181)))

(declare-fun d!45407 () Bool)

(declare-fun c!26909 () Bool)

(assert (=> d!45407 (= c!26909 (and ((_ is Cons!1715) lt!73510) (= (_1!1322 (h!2322 lt!73510)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45407 (= (getValueByKey!177 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92862)))

(assert (= (and d!45407 c!26909) b!142496))

(assert (= (and d!45407 (not c!26909)) b!142497))

(assert (= (and b!142497 c!26910) b!142498))

(assert (= (and b!142497 (not c!26910)) b!142499))

(declare-fun m!171915 () Bool)

(assert (=> b!142498 m!171915))

(assert (=> d!43689 d!45407))

(declare-fun d!45409 () Bool)

(assert (=> d!45409 (= (getValueByKey!177 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74708 () Unit!4387)

(assert (=> d!45409 (= lt!74708 (choose!873 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92864 () Bool)

(assert (=> d!45409 e!92864))

(declare-fun res!67977 () Bool)

(assert (=> d!45409 (=> (not res!67977) (not e!92864))))

(assert (=> d!45409 (= res!67977 (isStrictlySorted!312 lt!73510))))

(assert (=> d!45409 (= (lemmaContainsTupThenGetReturnValue!91 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74708)))

(declare-fun b!142500 () Bool)

(declare-fun res!67978 () Bool)

(assert (=> b!142500 (=> (not res!67978) (not e!92864))))

(assert (=> b!142500 (= res!67978 (containsKey!180 lt!73510 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142501 () Bool)

(assert (=> b!142501 (= e!92864 (contains!907 lt!73510 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45409 res!67977) b!142500))

(assert (= (and b!142500 res!67978) b!142501))

(assert (=> d!45409 m!167465))

(declare-fun m!171917 () Bool)

(assert (=> d!45409 m!171917))

(declare-fun m!171919 () Bool)

(assert (=> d!45409 m!171919))

(declare-fun m!171921 () Bool)

(assert (=> b!142500 m!171921))

(declare-fun m!171923 () Bool)

(assert (=> b!142501 m!171923))

(assert (=> d!43689 d!45409))

(declare-fun bm!15746 () Bool)

(declare-fun call!15751 () List!1719)

(declare-fun call!15750 () List!1719)

(assert (=> bm!15746 (= call!15751 call!15750)))

(declare-fun b!142503 () Bool)

(declare-fun e!92866 () List!1719)

(declare-fun e!92868 () List!1719)

(assert (=> b!142503 (= e!92866 e!92868)))

(declare-fun c!26914 () Bool)

(assert (=> b!142503 (= c!26914 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142504 () Bool)

(declare-fun res!67980 () Bool)

(declare-fun e!92865 () Bool)

(assert (=> b!142504 (=> (not res!67980) (not e!92865))))

(declare-fun lt!74709 () List!1719)

(assert (=> b!142504 (= res!67980 (containsKey!180 lt!74709 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142505 () Bool)

(declare-fun c!26912 () Bool)

(assert (=> b!142505 (= c!26912 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvsgt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92867 () List!1719)

(assert (=> b!142505 (= e!92868 e!92867)))

(declare-fun bm!15747 () Bool)

(declare-fun call!15749 () List!1719)

(assert (=> bm!15747 (= call!15750 call!15749)))

(declare-fun b!142506 () Bool)

(assert (=> b!142506 (= e!92868 call!15750)))

(declare-fun b!142507 () Bool)

(assert (=> b!142507 (= e!92866 call!15749)))

(declare-fun b!142508 () Bool)

(assert (=> b!142508 (= e!92865 (contains!907 lt!74709 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142502 () Bool)

(declare-fun e!92869 () List!1719)

(assert (=> b!142502 (= e!92869 (ite c!26914 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (ite c!26912 (Cons!1715 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) Nil!1716)))))

(declare-fun d!45411 () Bool)

(assert (=> d!45411 e!92865))

(declare-fun res!67979 () Bool)

(assert (=> d!45411 (=> (not res!67979) (not e!92865))))

(assert (=> d!45411 (= res!67979 (isStrictlySorted!312 lt!74709))))

(assert (=> d!45411 (= lt!74709 e!92866)))

(declare-fun c!26913 () Bool)

(assert (=> d!45411 (= c!26913 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45411 (isStrictlySorted!312 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (=> d!45411 (= (insertStrictlySorted!94 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74709)))

(declare-fun b!142509 () Bool)

(assert (=> b!142509 (= e!92867 call!15751)))

(declare-fun b!142510 () Bool)

(assert (=> b!142510 (= e!92867 call!15751)))

(declare-fun bm!15748 () Bool)

(assert (=> bm!15748 (= call!15749 ($colon$colon!93 e!92869 (ite c!26913 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26911 () Bool)

(assert (=> bm!15748 (= c!26911 c!26913)))

(declare-fun b!142511 () Bool)

(assert (=> b!142511 (= e!92869 (insertStrictlySorted!94 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45411 c!26913) b!142507))

(assert (= (and d!45411 (not c!26913)) b!142503))

(assert (= (and b!142503 c!26914) b!142506))

(assert (= (and b!142503 (not c!26914)) b!142505))

(assert (= (and b!142505 c!26912) b!142509))

(assert (= (and b!142505 (not c!26912)) b!142510))

(assert (= (or b!142509 b!142510) bm!15746))

(assert (= (or b!142506 bm!15746) bm!15747))

(assert (= (or b!142507 bm!15747) bm!15748))

(assert (= (and bm!15748 c!26911) b!142511))

(assert (= (and bm!15748 (not c!26911)) b!142502))

(assert (= (and d!45411 res!67979) b!142504))

(assert (= (and b!142504 res!67980) b!142508))

(declare-fun m!171925 () Bool)

(assert (=> bm!15748 m!171925))

(declare-fun m!171927 () Bool)

(assert (=> d!45411 m!171927))

(assert (=> d!45411 m!171735))

(declare-fun m!171929 () Bool)

(assert (=> b!142504 m!171929))

(declare-fun m!171931 () Bool)

(assert (=> b!142511 m!171931))

(declare-fun m!171933 () Bool)

(assert (=> b!142508 m!171933))

(assert (=> d!43689 d!45411))

(assert (=> b!140371 d!43693))

(declare-fun d!45413 () Bool)

(assert (=> d!45413 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun bs!6035 () Bool)

(assert (= bs!6035 d!45413))

(assert (=> bs!6035 m!167383))

(declare-fun m!171935 () Bool)

(assert (=> bs!6035 m!171935))

(assert (=> b!140754 d!45413))

(assert (=> b!140754 d!43957))

(assert (=> d!43735 d!43747))

(assert (=> d!43735 d!43729))

(declare-fun d!45415 () Bool)

(assert (=> d!45415 (= (apply!120 (+!173 lt!73231 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73226) (apply!120 lt!73231 lt!73226))))

(assert (=> d!45415 true))

(declare-fun _$34!1010 () Unit!4387)

(assert (=> d!45415 (= (choose!867 lt!73231 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73226) _$34!1010)))

(declare-fun bs!6036 () Bool)

(assert (= bs!6036 d!45415))

(assert (=> bs!6036 m!166917))

(assert (=> bs!6036 m!166917))

(assert (=> bs!6036 m!166919))

(assert (=> bs!6036 m!166941))

(assert (=> d!43735 d!45415))

(assert (=> d!43735 d!43731))

(declare-fun d!45417 () Bool)

(declare-fun e!92870 () Bool)

(assert (=> d!45417 e!92870))

(declare-fun res!67981 () Bool)

(assert (=> d!45417 (=> res!67981 e!92870)))

(declare-fun lt!74713 () Bool)

(assert (=> d!45417 (= res!67981 (not lt!74713))))

(declare-fun lt!74710 () Bool)

(assert (=> d!45417 (= lt!74713 lt!74710)))

(declare-fun lt!74712 () Unit!4387)

(declare-fun e!92871 () Unit!4387)

(assert (=> d!45417 (= lt!74712 e!92871)))

(declare-fun c!26915 () Bool)

(assert (=> d!45417 (= c!26915 lt!74710)))

(assert (=> d!45417 (= lt!74710 (containsKey!180 (toList!858 lt!73231) lt!73226))))

(assert (=> d!45417 (= (contains!904 lt!73231 lt!73226) lt!74713)))

(declare-fun b!142512 () Bool)

(declare-fun lt!74711 () Unit!4387)

(assert (=> b!142512 (= e!92871 lt!74711)))

(assert (=> b!142512 (= lt!74711 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73231) lt!73226))))

(assert (=> b!142512 (isDefined!129 (getValueByKey!177 (toList!858 lt!73231) lt!73226))))

(declare-fun b!142513 () Bool)

(declare-fun Unit!4512 () Unit!4387)

(assert (=> b!142513 (= e!92871 Unit!4512)))

(declare-fun b!142514 () Bool)

(assert (=> b!142514 (= e!92870 (isDefined!129 (getValueByKey!177 (toList!858 lt!73231) lt!73226)))))

(assert (= (and d!45417 c!26915) b!142512))

(assert (= (and d!45417 (not c!26915)) b!142513))

(assert (= (and d!45417 (not res!67981)) b!142514))

(declare-fun m!171937 () Bool)

(assert (=> d!45417 m!171937))

(declare-fun m!171939 () Bool)

(assert (=> b!142512 m!171939))

(assert (=> b!142512 m!167585))

(assert (=> b!142512 m!167585))

(declare-fun m!171941 () Bool)

(assert (=> b!142512 m!171941))

(assert (=> b!142514 m!167585))

(assert (=> b!142514 m!167585))

(assert (=> b!142514 m!171941))

(assert (=> d!43735 d!45417))

(assert (=> d!43841 d!43561))

(declare-fun b!142516 () Bool)

(declare-fun e!92872 () Option!183)

(declare-fun e!92873 () Option!183)

(assert (=> b!142516 (= e!92872 e!92873)))

(declare-fun c!26917 () Bool)

(assert (=> b!142516 (= c!26917 (and ((_ is Cons!1715) (toList!858 lt!74007)) (not (= (_1!1322 (h!2322 (toList!858 lt!74007))) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142517 () Bool)

(assert (=> b!142517 (= e!92873 (getValueByKey!177 (t!6295 (toList!858 lt!74007)) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142515 () Bool)

(assert (=> b!142515 (= e!92872 (Some!182 (_2!1322 (h!2322 (toList!858 lt!74007)))))))

(declare-fun b!142518 () Bool)

(assert (=> b!142518 (= e!92873 None!181)))

(declare-fun d!45419 () Bool)

(declare-fun c!26916 () Bool)

(assert (=> d!45419 (= c!26916 (and ((_ is Cons!1715) (toList!858 lt!74007)) (= (_1!1322 (h!2322 (toList!858 lt!74007))) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45419 (= (getValueByKey!177 (toList!858 lt!74007) (_1!1322 (tuple2!2623 lt!73243 (zeroValue!2789 newMap!16)))) e!92872)))

(assert (= (and d!45419 c!26916) b!142515))

(assert (= (and d!45419 (not c!26916)) b!142516))

(assert (= (and b!142516 c!26917) b!142517))

(assert (= (and b!142516 (not c!26917)) b!142518))

(declare-fun m!171943 () Bool)

(assert (=> b!142517 m!171943))

(assert (=> b!141069 d!45419))

(assert (=> d!43785 d!43633))

(assert (=> d!43785 d!43623))

(assert (=> d!43785 d!43651))

(declare-fun b!142520 () Bool)

(declare-fun e!92874 () Option!183)

(declare-fun e!92875 () Option!183)

(assert (=> b!142520 (= e!92874 e!92875)))

(declare-fun c!26919 () Bool)

(assert (=> b!142520 (= c!26919 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73200))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73200)))) lt!73195))))))

(declare-fun b!142521 () Bool)

(assert (=> b!142521 (= e!92875 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73200))) lt!73195))))

(declare-fun b!142519 () Bool)

(assert (=> b!142519 (= e!92874 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73200))))))))

(declare-fun b!142522 () Bool)

(assert (=> b!142522 (= e!92875 None!181)))

(declare-fun d!45421 () Bool)

(declare-fun c!26918 () Bool)

(assert (=> d!45421 (= c!26918 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73200))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73200)))) lt!73195)))))

(assert (=> d!45421 (= (getValueByKey!177 (t!6295 (toList!858 lt!73200)) lt!73195) e!92874)))

(assert (= (and d!45421 c!26918) b!142519))

(assert (= (and d!45421 (not c!26918)) b!142520))

(assert (= (and b!142520 c!26919) b!142521))

(assert (= (and b!142520 (not c!26919)) b!142522))

(declare-fun m!171945 () Bool)

(assert (=> b!142521 m!171945))

(assert (=> b!140967 d!45421))

(declare-fun lt!74714 () Bool)

(declare-fun d!45423 () Bool)

(assert (=> d!45423 (= lt!74714 (select (content!138 (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!92877 () Bool)

(assert (=> d!45423 (= lt!74714 e!92877)))

(declare-fun res!67982 () Bool)

(assert (=> d!45423 (=> (not res!67982) (not e!92877))))

(assert (=> d!45423 (= res!67982 ((_ is Cons!1716) (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))))))

(assert (=> d!45423 (= (contains!906 (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!74714)))

(declare-fun b!142523 () Bool)

(declare-fun e!92876 () Bool)

(assert (=> b!142523 (= e!92877 e!92876)))

(declare-fun res!67983 () Bool)

(assert (=> b!142523 (=> res!67983 e!92876)))

(assert (=> b!142523 (= res!67983 (= (h!2323 (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142524 () Bool)

(assert (=> b!142524 (= e!92876 (contains!906 (t!6296 (ite c!26231 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717)) (ite c!26158 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) Nil!1717) Nil!1717))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!45423 res!67982) b!142523))

(assert (= (and b!142523 (not res!67983)) b!142524))

(declare-fun m!171947 () Bool)

(assert (=> d!45423 m!171947))

(assert (=> d!45423 m!167911))

(declare-fun m!171949 () Bool)

(assert (=> d!45423 m!171949))

(assert (=> b!142524 m!167911))

(declare-fun m!171951 () Bool)

(assert (=> b!142524 m!171951))

(assert (=> b!140484 d!45423))

(declare-fun b!142526 () Bool)

(declare-fun e!92878 () Option!183)

(declare-fun e!92879 () Option!183)

(assert (=> b!142526 (= e!92878 e!92879)))

(declare-fun c!26921 () Bool)

(assert (=> b!142526 (= c!26921 (and ((_ is Cons!1715) (t!6295 lt!73464)) (not (= (_1!1322 (h!2322 (t!6295 lt!73464))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142527 () Bool)

(assert (=> b!142527 (= e!92879 (getValueByKey!177 (t!6295 (t!6295 lt!73464)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142525 () Bool)

(assert (=> b!142525 (= e!92878 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73464)))))))

(declare-fun b!142528 () Bool)

(assert (=> b!142528 (= e!92879 None!181)))

(declare-fun d!45425 () Bool)

(declare-fun c!26920 () Bool)

(assert (=> d!45425 (= c!26920 (and ((_ is Cons!1715) (t!6295 lt!73464)) (= (_1!1322 (h!2322 (t!6295 lt!73464))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45425 (= (getValueByKey!177 (t!6295 lt!73464) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92878)))

(assert (= (and d!45425 c!26920) b!142525))

(assert (= (and d!45425 (not c!26920)) b!142526))

(assert (= (and b!142526 c!26921) b!142527))

(assert (= (and b!142526 (not c!26921)) b!142528))

(declare-fun m!171953 () Bool)

(assert (=> b!142527 m!171953))

(assert (=> b!141040 d!45425))

(declare-fun d!45427 () Bool)

(declare-fun e!92880 () Bool)

(assert (=> d!45427 e!92880))

(declare-fun res!67984 () Bool)

(assert (=> d!45427 (=> res!67984 e!92880)))

(declare-fun lt!74718 () Bool)

(assert (=> d!45427 (= res!67984 (not lt!74718))))

(declare-fun lt!74715 () Bool)

(assert (=> d!45427 (= lt!74718 lt!74715)))

(declare-fun lt!74717 () Unit!4387)

(declare-fun e!92881 () Unit!4387)

(assert (=> d!45427 (= lt!74717 e!92881)))

(declare-fun c!26922 () Bool)

(assert (=> d!45427 (= c!26922 lt!74715)))

(assert (=> d!45427 (= lt!74715 (containsKey!180 (toList!858 lt!73713) (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(assert (=> d!45427 (= (contains!904 lt!73713 (select (arr!2306 lt!73406) #b00000000000000000000000000000000)) lt!74718)))

(declare-fun b!142529 () Bool)

(declare-fun lt!74716 () Unit!4387)

(assert (=> b!142529 (= e!92881 lt!74716)))

(assert (=> b!142529 (= lt!74716 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73713) (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(assert (=> b!142529 (isDefined!129 (getValueByKey!177 (toList!858 lt!73713) (select (arr!2306 lt!73406) #b00000000000000000000000000000000)))))

(declare-fun b!142530 () Bool)

(declare-fun Unit!4513 () Unit!4387)

(assert (=> b!142530 (= e!92881 Unit!4513)))

(declare-fun b!142531 () Bool)

(assert (=> b!142531 (= e!92880 (isDefined!129 (getValueByKey!177 (toList!858 lt!73713) (select (arr!2306 lt!73406) #b00000000000000000000000000000000))))))

(assert (= (and d!45427 c!26922) b!142529))

(assert (= (and d!45427 (not c!26922)) b!142530))

(assert (= (and d!45427 (not res!67984)) b!142531))

(assert (=> d!45427 m!168061))

(declare-fun m!171955 () Bool)

(assert (=> d!45427 m!171955))

(assert (=> b!142529 m!168061))

(declare-fun m!171957 () Bool)

(assert (=> b!142529 m!171957))

(assert (=> b!142529 m!168061))

(assert (=> b!142529 m!171267))

(assert (=> b!142529 m!171267))

(declare-fun m!171959 () Bool)

(assert (=> b!142529 m!171959))

(assert (=> b!142531 m!168061))

(assert (=> b!142531 m!171267))

(assert (=> b!142531 m!171267))

(assert (=> b!142531 m!171959))

(assert (=> b!140574 d!45427))

(declare-fun d!45429 () Bool)

(assert (=> d!45429 (isDefined!129 (getValueByKey!177 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74719 () Unit!4387)

(assert (=> d!45429 (= lt!74719 (choose!864 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92882 () Bool)

(assert (=> d!45429 e!92882))

(declare-fun res!67985 () Bool)

(assert (=> d!45429 (=> (not res!67985) (not e!92882))))

(assert (=> d!45429 (= res!67985 (isStrictlySorted!312 (toList!858 lt!73268)))))

(assert (=> d!45429 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74719)))

(declare-fun b!142532 () Bool)

(assert (=> b!142532 (= e!92882 (containsKey!180 (toList!858 lt!73268) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45429 res!67985) b!142532))

(assert (=> d!45429 m!167035))

(assert (=> d!45429 m!167035))

(assert (=> d!45429 m!168531))

(declare-fun m!171961 () Bool)

(assert (=> d!45429 m!171961))

(declare-fun m!171963 () Bool)

(assert (=> d!45429 m!171963))

(assert (=> b!142532 m!168527))

(assert (=> b!140853 d!45429))

(assert (=> b!140853 d!45301))

(assert (=> b!140853 d!44079))

(declare-fun d!45431 () Bool)

(declare-fun res!67986 () Bool)

(declare-fun e!92883 () Bool)

(assert (=> d!45431 (=> res!67986 e!92883)))

(assert (=> d!45431 (= res!67986 (and ((_ is Cons!1715) (toList!858 lt!73237)) (= (_1!1322 (h!2322 (toList!858 lt!73237))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45431 (= (containsKey!180 (toList!858 lt!73237) #b1000000000000000000000000000000000000000000000000000000000000000) e!92883)))

(declare-fun b!142533 () Bool)

(declare-fun e!92884 () Bool)

(assert (=> b!142533 (= e!92883 e!92884)))

(declare-fun res!67987 () Bool)

(assert (=> b!142533 (=> (not res!67987) (not e!92884))))

(assert (=> b!142533 (= res!67987 (and (or (not ((_ is Cons!1715) (toList!858 lt!73237))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73237))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73237)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73237))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142534 () Bool)

(assert (=> b!142534 (= e!92884 (containsKey!180 (t!6295 (toList!858 lt!73237)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45431 (not res!67986)) b!142533))

(assert (= (and b!142533 res!67987) b!142534))

(declare-fun m!171965 () Bool)

(assert (=> b!142534 m!171965))

(assert (=> d!43799 d!45431))

(declare-fun d!45433 () Bool)

(assert (=> d!45433 (= (get!1535 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3285 (getValueByKey!177 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43951 d!45433))

(assert (=> d!43951 d!44645))

(declare-fun d!45435 () Bool)

(declare-fun e!92885 () Bool)

(assert (=> d!45435 e!92885))

(declare-fun res!67988 () Bool)

(assert (=> d!45435 (=> (not res!67988) (not e!92885))))

(declare-fun lt!74722 () ListLongMap!1685)

(assert (=> d!45435 (= res!67988 (contains!904 lt!74722 (_1!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74721 () List!1719)

(assert (=> d!45435 (= lt!74722 (ListLongMap!1686 lt!74721))))

(declare-fun lt!74720 () Unit!4387)

(declare-fun lt!74723 () Unit!4387)

(assert (=> d!45435 (= lt!74720 lt!74723)))

(assert (=> d!45435 (= (getValueByKey!177 lt!74721 (_1!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!182 (_2!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45435 (= lt!74723 (lemmaContainsTupThenGetReturnValue!91 lt!74721 (_1!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45435 (= lt!74721 (insertStrictlySorted!94 (toList!858 (ite c!26386 call!15612 (ite c!26387 call!15611 call!15613))) (_1!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45435 (= (+!173 (ite c!26386 call!15612 (ite c!26387 call!15611 call!15613)) (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74722)))

(declare-fun b!142535 () Bool)

(declare-fun res!67989 () Bool)

(assert (=> b!142535 (=> (not res!67989) (not e!92885))))

(assert (=> b!142535 (= res!67989 (= (getValueByKey!177 (toList!858 lt!74722) (_1!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!182 (_2!1322 (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142536 () Bool)

(assert (=> b!142536 (= e!92885 (contains!907 (toList!858 lt!74722) (ite (or c!26386 c!26387) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45435 res!67988) b!142535))

(assert (= (and b!142535 res!67989) b!142536))

(declare-fun m!171967 () Bool)

(assert (=> d!45435 m!171967))

(declare-fun m!171969 () Bool)

(assert (=> d!45435 m!171969))

(declare-fun m!171971 () Bool)

(assert (=> d!45435 m!171971))

(declare-fun m!171973 () Bool)

(assert (=> d!45435 m!171973))

(declare-fun m!171975 () Bool)

(assert (=> b!142535 m!171975))

(declare-fun m!171977 () Bool)

(assert (=> b!142536 m!171977))

(assert (=> bm!15610 d!45435))

(assert (=> d!43995 d!44619))

(declare-fun d!45437 () Bool)

(assert (=> d!45437 (= (inRange!0 (index!3256 lt!73674) (mask!7279 newMap!16)) (and (bvsge (index!3256 lt!73674) #b00000000000000000000000000000000) (bvslt (index!3256 lt!73674) (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!140511 d!45437))

(assert (=> bm!15565 d!44339))

(declare-fun b!142538 () Bool)

(declare-fun e!92886 () Option!183)

(declare-fun e!92887 () Option!183)

(assert (=> b!142538 (= e!92886 e!92887)))

(declare-fun c!26924 () Bool)

(assert (=> b!142538 (= c!26924 (and ((_ is Cons!1715) (t!6295 lt!73289)) (not (= (_1!1322 (h!2322 (t!6295 lt!73289))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142539 () Bool)

(assert (=> b!142539 (= e!92887 (getValueByKey!177 (t!6295 (t!6295 lt!73289)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142537 () Bool)

(assert (=> b!142537 (= e!92886 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73289)))))))

(declare-fun b!142540 () Bool)

(assert (=> b!142540 (= e!92887 None!181)))

(declare-fun d!45439 () Bool)

(declare-fun c!26923 () Bool)

(assert (=> d!45439 (= c!26923 (and ((_ is Cons!1715) (t!6295 lt!73289)) (= (_1!1322 (h!2322 (t!6295 lt!73289))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45439 (= (getValueByKey!177 (t!6295 lt!73289) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92886)))

(assert (= (and d!45439 c!26923) b!142537))

(assert (= (and d!45439 (not c!26923)) b!142538))

(assert (= (and b!142538 c!26924) b!142539))

(assert (= (and b!142538 (not c!26924)) b!142540))

(declare-fun m!171979 () Bool)

(assert (=> b!142539 m!171979))

(assert (=> b!140667 d!45439))

(assert (=> b!140382 d!43693))

(declare-fun d!45441 () Bool)

(assert (=> d!45441 (= (apply!120 lt!73855 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000)) (get!1535 (getValueByKey!177 (toList!858 lt!73855) (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) #b00000000000000000000000000000000))))))

(declare-fun bs!6037 () Bool)

(assert (= bs!6037 d!45441))

(assert (=> bs!6037 m!168391))

(assert (=> bs!6037 m!169117))

(assert (=> bs!6037 m!169117))

(declare-fun m!171981 () Bool)

(assert (=> bs!6037 m!171981))

(assert (=> b!140840 d!45441))

(declare-fun d!45443 () Bool)

(declare-fun c!26925 () Bool)

(assert (=> d!45443 (= c!26925 ((_ is ValueCellFull!1121) (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000)))))

(declare-fun e!92888 () V!3553)

(assert (=> d!45443 (= (get!1531 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92888)))

(declare-fun b!142541 () Bool)

(assert (=> b!142541 (= e!92888 (get!1533 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142542 () Bool)

(assert (=> b!142542 (= e!92888 (get!1534 (select (arr!2307 (_values!2922 (_2!1323 lt!73124))) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 (_2!1323 lt!73124)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45443 c!26925) b!142541))

(assert (= (and d!45443 (not c!26925)) b!142542))

(assert (=> b!142541 m!168513))

(assert (=> b!142541 m!168515))

(declare-fun m!171983 () Bool)

(assert (=> b!142541 m!171983))

(assert (=> b!142542 m!168513))

(assert (=> b!142542 m!168515))

(declare-fun m!171985 () Bool)

(assert (=> b!142542 m!171985))

(assert (=> b!140840 d!45443))

(declare-fun d!45445 () Bool)

(assert (=> d!45445 (isDefined!129 (getValueByKey!177 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!74724 () Unit!4387)

(assert (=> d!45445 (= lt!74724 (choose!864 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!92889 () Bool)

(assert (=> d!45445 e!92889))

(declare-fun res!67990 () Bool)

(assert (=> d!45445 (=> (not res!67990) (not e!92889))))

(assert (=> d!45445 (= res!67990 (isStrictlySorted!312 (toList!858 lt!73465)))))

(assert (=> d!45445 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74724)))

(declare-fun b!142543 () Bool)

(assert (=> b!142543 (= e!92889 (containsKey!180 (toList!858 lt!73465) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45445 res!67990) b!142543))

(assert (=> d!45445 m!167363))

(assert (=> d!45445 m!167363))

(assert (=> d!45445 m!168921))

(declare-fun m!171987 () Bool)

(assert (=> d!45445 m!171987))

(declare-fun m!171989 () Bool)

(assert (=> d!45445 m!171989))

(assert (=> b!142543 m!168917))

(assert (=> b!141035 d!45445))

(assert (=> b!141035 d!45337))

(assert (=> b!141035 d!44093))

(declare-fun b!142544 () Bool)

(declare-fun e!92890 () (_ BitVec 32))

(assert (=> b!142544 (= e!92890 #b00000000000000000000000000000000)))

(declare-fun b!142546 () Bool)

(declare-fun e!92891 () (_ BitVec 32))

(declare-fun call!15752 () (_ BitVec 32))

(assert (=> b!142546 (= e!92891 (bvadd #b00000000000000000000000000000001 call!15752))))

(declare-fun d!45447 () Bool)

(declare-fun lt!74725 () (_ BitVec 32))

(assert (=> d!45447 (and (bvsge lt!74725 #b00000000000000000000000000000000) (bvsle lt!74725 (bvsub (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45447 (= lt!74725 e!92890)))

(declare-fun c!26926 () Bool)

(assert (=> d!45447 (= c!26926 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!45447 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!45447 (= (arrayCountValidKeys!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))) lt!74725)))

(declare-fun b!142545 () Bool)

(assert (=> b!142545 (= e!92890 e!92891)))

(declare-fun c!26927 () Bool)

(assert (=> b!142545 (= c!26927 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!15749 () Bool)

(assert (=> bm!15749 (= call!15752 (arrayCountValidKeys!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!142547 () Bool)

(assert (=> b!142547 (= e!92891 call!15752)))

(assert (= (and d!45447 c!26926) b!142544))

(assert (= (and d!45447 (not c!26926)) b!142545))

(assert (= (and b!142545 c!26927) b!142546))

(assert (= (and b!142545 (not c!26927)) b!142547))

(assert (= (or b!142546 b!142547) bm!15749))

(assert (=> b!142545 m!171855))

(assert (=> b!142545 m!171855))

(assert (=> b!142545 m!171857))

(declare-fun m!171991 () Bool)

(assert (=> bm!15749 m!171991))

(assert (=> bm!15574 d!45447))

(declare-fun d!45449 () Bool)

(assert (=> d!45449 (isDefined!129 (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!74726 () Unit!4387)

(assert (=> d!45449 (= lt!74726 (choose!864 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!92892 () Bool)

(assert (=> d!45449 e!92892))

(declare-fun res!67991 () Bool)

(assert (=> d!45449 (=> (not res!67991) (not e!92892))))

(assert (=> d!45449 (= res!67991 (isStrictlySorted!312 (toList!858 lt!73290)))))

(assert (=> d!45449 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74726)))

(declare-fun b!142548 () Bool)

(assert (=> b!142548 (= e!92892 (containsKey!180 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45449 res!67991) b!142548))

(assert (=> d!45449 m!167099))

(assert (=> d!45449 m!167099))

(assert (=> d!45449 m!168179))

(declare-fun m!171993 () Bool)

(assert (=> d!45449 m!171993))

(declare-fun m!171995 () Bool)

(assert (=> d!45449 m!171995))

(assert (=> b!142548 m!168175))

(assert (=> b!140662 d!45449))

(declare-fun d!45451 () Bool)

(assert (=> d!45451 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73290) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun bs!6038 () Bool)

(assert (= bs!6038 d!45451))

(assert (=> bs!6038 m!167099))

(declare-fun m!171997 () Bool)

(assert (=> bs!6038 m!171997))

(assert (=> b!140662 d!45451))

(assert (=> b!140662 d!43809))

(declare-fun d!45453 () Bool)

(declare-fun e!92893 () Bool)

(assert (=> d!45453 e!92893))

(declare-fun res!67992 () Bool)

(assert (=> d!45453 (=> res!67992 e!92893)))

(declare-fun lt!74730 () Bool)

(assert (=> d!45453 (= res!67992 (not lt!74730))))

(declare-fun lt!74727 () Bool)

(assert (=> d!45453 (= lt!74730 lt!74727)))

(declare-fun lt!74729 () Unit!4387)

(declare-fun e!92894 () Unit!4387)

(assert (=> d!45453 (= lt!74729 e!92894)))

(declare-fun c!26928 () Bool)

(assert (=> d!45453 (= c!26928 lt!74727)))

(assert (=> d!45453 (= lt!74727 (containsKey!180 (toList!858 lt!73897) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(assert (=> d!45453 (= (contains!904 lt!73897 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!74730)))

(declare-fun b!142549 () Bool)

(declare-fun lt!74728 () Unit!4387)

(assert (=> b!142549 (= e!92894 lt!74728)))

(assert (=> b!142549 (= lt!74728 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73897) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(assert (=> b!142549 (isDefined!129 (getValueByKey!177 (toList!858 lt!73897) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun b!142550 () Bool)

(declare-fun Unit!4514 () Unit!4387)

(assert (=> b!142550 (= e!92894 Unit!4514)))

(declare-fun b!142551 () Bool)

(assert (=> b!142551 (= e!92893 (isDefined!129 (getValueByKey!177 (toList!858 lt!73897) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(assert (= (and d!45453 c!26928) b!142549))

(assert (= (and d!45453 (not c!26928)) b!142550))

(assert (= (and d!45453 (not res!67992)) b!142551))

(declare-fun m!171999 () Bool)

(assert (=> d!45453 m!171999))

(declare-fun m!172001 () Bool)

(assert (=> b!142549 m!172001))

(assert (=> b!142549 m!168601))

(assert (=> b!142549 m!168601))

(declare-fun m!172003 () Bool)

(assert (=> b!142549 m!172003))

(assert (=> b!142551 m!168601))

(assert (=> b!142551 m!168601))

(assert (=> b!142551 m!172003))

(assert (=> d!44017 d!45453))

(declare-fun b!142553 () Bool)

(declare-fun e!92895 () Option!183)

(declare-fun e!92896 () Option!183)

(assert (=> b!142553 (= e!92895 e!92896)))

(declare-fun c!26930 () Bool)

(assert (=> b!142553 (= c!26930 (and ((_ is Cons!1715) lt!73896) (not (= (_1!1322 (h!2322 lt!73896)) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))))

(declare-fun b!142554 () Bool)

(assert (=> b!142554 (= e!92896 (getValueByKey!177 (t!6295 lt!73896) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun b!142552 () Bool)

(assert (=> b!142552 (= e!92895 (Some!182 (_2!1322 (h!2322 lt!73896))))))

(declare-fun b!142555 () Bool)

(assert (=> b!142555 (= e!92896 None!181)))

(declare-fun c!26929 () Bool)

(declare-fun d!45455 () Bool)

(assert (=> d!45455 (= c!26929 (and ((_ is Cons!1715) lt!73896) (= (_1!1322 (h!2322 lt!73896)) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(assert (=> d!45455 (= (getValueByKey!177 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) e!92895)))

(assert (= (and d!45455 c!26929) b!142552))

(assert (= (and d!45455 (not c!26929)) b!142553))

(assert (= (and b!142553 c!26930) b!142554))

(assert (= (and b!142553 (not c!26930)) b!142555))

(declare-fun m!172005 () Bool)

(assert (=> b!142554 m!172005))

(assert (=> d!44017 d!45455))

(declare-fun d!45457 () Bool)

(assert (=> d!45457 (= (getValueByKey!177 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun lt!74731 () Unit!4387)

(assert (=> d!45457 (= lt!74731 (choose!873 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun e!92897 () Bool)

(assert (=> d!45457 e!92897))

(declare-fun res!67993 () Bool)

(assert (=> d!45457 (=> (not res!67993) (not e!92897))))

(assert (=> d!45457 (= res!67993 (isStrictlySorted!312 lt!73896))))

(assert (=> d!45457 (= (lemmaContainsTupThenGetReturnValue!91 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!74731)))

(declare-fun b!142556 () Bool)

(declare-fun res!67994 () Bool)

(assert (=> b!142556 (=> (not res!67994) (not e!92897))))

(assert (=> b!142556 (= res!67994 (containsKey!180 lt!73896 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun b!142557 () Bool)

(assert (=> b!142557 (= e!92897 (contains!907 lt!73896 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(assert (= (and d!45457 res!67993) b!142556))

(assert (= (and b!142556 res!67994) b!142557))

(assert (=> d!45457 m!168595))

(declare-fun m!172007 () Bool)

(assert (=> d!45457 m!172007))

(declare-fun m!172009 () Bool)

(assert (=> d!45457 m!172009))

(declare-fun m!172011 () Bool)

(assert (=> b!142556 m!172011))

(declare-fun m!172013 () Bool)

(assert (=> b!142557 m!172013))

(assert (=> d!44017 d!45457))

(declare-fun bm!15750 () Bool)

(declare-fun call!15755 () List!1719)

(declare-fun call!15754 () List!1719)

(assert (=> bm!15750 (= call!15755 call!15754)))

(declare-fun b!142559 () Bool)

(declare-fun e!92899 () List!1719)

(declare-fun e!92901 () List!1719)

(assert (=> b!142559 (= e!92899 e!92901)))

(declare-fun c!26934 () Bool)

(assert (=> b!142559 (= c!26934 (and ((_ is Cons!1715) (toList!858 lt!73328)) (= (_1!1322 (h!2322 (toList!858 lt!73328))) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(declare-fun b!142560 () Bool)

(declare-fun res!67996 () Bool)

(declare-fun e!92898 () Bool)

(assert (=> b!142560 (=> (not res!67996) (not e!92898))))

(declare-fun lt!74732 () List!1719)

(assert (=> b!142560 (= res!67996 (containsKey!180 lt!74732 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(declare-fun c!26932 () Bool)

(declare-fun b!142561 () Bool)

(assert (=> b!142561 (= c!26932 (and ((_ is Cons!1715) (toList!858 lt!73328)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73328))) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(declare-fun e!92900 () List!1719)

(assert (=> b!142561 (= e!92901 e!92900)))

(declare-fun bm!15751 () Bool)

(declare-fun call!15753 () List!1719)

(assert (=> bm!15751 (= call!15754 call!15753)))

(declare-fun b!142562 () Bool)

(assert (=> b!142562 (= e!92901 call!15754)))

(declare-fun b!142563 () Bool)

(assert (=> b!142563 (= e!92899 call!15753)))

(declare-fun b!142564 () Bool)

(assert (=> b!142564 (= e!92898 (contains!907 lt!74732 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(declare-fun b!142558 () Bool)

(declare-fun e!92902 () List!1719)

(assert (=> b!142558 (= e!92902 (ite c!26934 (t!6295 (toList!858 lt!73328)) (ite c!26932 (Cons!1715 (h!2322 (toList!858 lt!73328)) (t!6295 (toList!858 lt!73328))) Nil!1716)))))

(declare-fun d!45459 () Bool)

(assert (=> d!45459 e!92898))

(declare-fun res!67995 () Bool)

(assert (=> d!45459 (=> (not res!67995) (not e!92898))))

(assert (=> d!45459 (= res!67995 (isStrictlySorted!312 lt!74732))))

(assert (=> d!45459 (= lt!74732 e!92899)))

(declare-fun c!26933 () Bool)

(assert (=> d!45459 (= c!26933 (and ((_ is Cons!1715) (toList!858 lt!73328)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73328))) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))))))))

(assert (=> d!45459 (isStrictlySorted!312 (toList!858 lt!73328))))

(assert (=> d!45459 (= (insertStrictlySorted!94 (toList!858 lt!73328) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))) lt!74732)))

(declare-fun b!142565 () Bool)

(assert (=> b!142565 (= e!92900 call!15755)))

(declare-fun b!142566 () Bool)

(assert (=> b!142566 (= e!92900 call!15755)))

(declare-fun bm!15752 () Bool)

(assert (=> bm!15752 (= call!15753 ($colon$colon!93 e!92902 (ite c!26933 (h!2322 (toList!858 lt!73328)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))))

(declare-fun c!26931 () Bool)

(assert (=> bm!15752 (= c!26931 c!26933)))

(declare-fun b!142567 () Bool)

(assert (=> b!142567 (= e!92902 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73328)) (_1!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73324 (minValue!2789 newMap!16)))))))

(assert (= (and d!45459 c!26933) b!142563))

(assert (= (and d!45459 (not c!26933)) b!142559))

(assert (= (and b!142559 c!26934) b!142562))

(assert (= (and b!142559 (not c!26934)) b!142561))

(assert (= (and b!142561 c!26932) b!142565))

(assert (= (and b!142561 (not c!26932)) b!142566))

(assert (= (or b!142565 b!142566) bm!15750))

(assert (= (or b!142562 bm!15750) bm!15751))

(assert (= (or b!142563 bm!15751) bm!15752))

(assert (= (and bm!15752 c!26931) b!142567))

(assert (= (and bm!15752 (not c!26931)) b!142558))

(assert (= (and d!45459 res!67995) b!142560))

(assert (= (and b!142560 res!67996) b!142564))

(declare-fun m!172015 () Bool)

(assert (=> bm!15752 m!172015))

(declare-fun m!172017 () Bool)

(assert (=> d!45459 m!172017))

(declare-fun m!172019 () Bool)

(assert (=> d!45459 m!172019))

(declare-fun m!172021 () Bool)

(assert (=> b!142560 m!172021))

(declare-fun m!172023 () Bool)

(assert (=> b!142567 m!172023))

(declare-fun m!172025 () Bool)

(assert (=> b!142564 m!172025))

(assert (=> d!44017 d!45459))

(declare-fun lt!74733 () Bool)

(declare-fun d!45461 () Bool)

(assert (=> d!45461 (= lt!74733 (select (content!139 (toList!858 lt!74021)) (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))

(declare-fun e!92903 () Bool)

(assert (=> d!45461 (= lt!74733 e!92903)))

(declare-fun res!67997 () Bool)

(assert (=> d!45461 (=> (not res!67997) (not e!92903))))

(assert (=> d!45461 (= res!67997 ((_ is Cons!1715) (toList!858 lt!74021)))))

(assert (=> d!45461 (= (contains!907 (toList!858 lt!74021) (tuple2!2623 lt!73252 (minValue!2789 newMap!16))) lt!74733)))

(declare-fun b!142568 () Bool)

(declare-fun e!92904 () Bool)

(assert (=> b!142568 (= e!92903 e!92904)))

(declare-fun res!67998 () Bool)

(assert (=> b!142568 (=> res!67998 e!92904)))

(assert (=> b!142568 (= res!67998 (= (h!2322 (toList!858 lt!74021)) (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))

(declare-fun b!142569 () Bool)

(assert (=> b!142569 (= e!92904 (contains!907 (t!6295 (toList!858 lt!74021)) (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))

(assert (= (and d!45461 res!67997) b!142568))

(assert (= (and b!142568 (not res!67998)) b!142569))

(declare-fun m!172027 () Bool)

(assert (=> d!45461 m!172027))

(declare-fun m!172029 () Bool)

(assert (=> d!45461 m!172029))

(declare-fun m!172031 () Bool)

(assert (=> b!142569 m!172031))

(assert (=> b!141078 d!45461))

(declare-fun b!142571 () Bool)

(declare-fun e!92905 () Option!183)

(declare-fun e!92906 () Option!183)

(assert (=> b!142571 (= e!92905 e!92906)))

(declare-fun c!26936 () Bool)

(assert (=> b!142571 (= c!26936 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73460))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73460)))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142572 () Bool)

(assert (=> b!142572 (= e!92906 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73460))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142570 () Bool)

(assert (=> b!142570 (= e!92905 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73460))))))))

(declare-fun b!142573 () Bool)

(assert (=> b!142573 (= e!92906 None!181)))

(declare-fun c!26935 () Bool)

(declare-fun d!45463 () Bool)

(assert (=> d!45463 (= c!26935 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73460))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73460)))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45463 (= (getValueByKey!177 (t!6295 (toList!858 lt!73460)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92905)))

(assert (= (and d!45463 c!26935) b!142570))

(assert (= (and d!45463 (not c!26935)) b!142571))

(assert (= (and b!142571 c!26936) b!142572))

(assert (= (and b!142571 (not c!26936)) b!142573))

(declare-fun m!172033 () Bool)

(assert (=> b!142572 m!172033))

(assert (=> b!140960 d!45463))

(declare-fun d!45465 () Bool)

(declare-fun e!92907 () Bool)

(assert (=> d!45465 e!92907))

(declare-fun res!67999 () Bool)

(assert (=> d!45465 (=> res!67999 e!92907)))

(declare-fun lt!74737 () Bool)

(assert (=> d!45465 (= res!67999 (not lt!74737))))

(declare-fun lt!74734 () Bool)

(assert (=> d!45465 (= lt!74737 lt!74734)))

(declare-fun lt!74736 () Unit!4387)

(declare-fun e!92908 () Unit!4387)

(assert (=> d!45465 (= lt!74736 e!92908)))

(declare-fun c!26937 () Bool)

(assert (=> d!45465 (= c!26937 lt!74734)))

(assert (=> d!45465 (= lt!74734 (containsKey!180 (toList!858 lt!73958) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45465 (= (contains!904 lt!73958 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74737)))

(declare-fun b!142574 () Bool)

(declare-fun lt!74735 () Unit!4387)

(assert (=> b!142574 (= e!92908 lt!74735)))

(assert (=> b!142574 (= lt!74735 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73958) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142574 (isDefined!129 (getValueByKey!177 (toList!858 lt!73958) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142575 () Bool)

(declare-fun Unit!4515 () Unit!4387)

(assert (=> b!142575 (= e!92908 Unit!4515)))

(declare-fun b!142576 () Bool)

(assert (=> b!142576 (= e!92907 (isDefined!129 (getValueByKey!177 (toList!858 lt!73958) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45465 c!26937) b!142574))

(assert (= (and d!45465 (not c!26937)) b!142575))

(assert (= (and d!45465 (not res!67999)) b!142576))

(declare-fun m!172035 () Bool)

(assert (=> d!45465 m!172035))

(declare-fun m!172037 () Bool)

(assert (=> b!142574 m!172037))

(assert (=> b!142574 m!168843))

(assert (=> b!142574 m!168843))

(declare-fun m!172039 () Bool)

(assert (=> b!142574 m!172039))

(assert (=> b!142576 m!168843))

(assert (=> b!142576 m!168843))

(assert (=> b!142576 m!172039))

(assert (=> d!44119 d!45465))

(declare-fun b!142578 () Bool)

(declare-fun e!92909 () Option!183)

(declare-fun e!92910 () Option!183)

(assert (=> b!142578 (= e!92909 e!92910)))

(declare-fun c!26939 () Bool)

(assert (=> b!142578 (= c!26939 (and ((_ is Cons!1715) lt!73957) (not (= (_1!1322 (h!2322 lt!73957)) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142579 () Bool)

(assert (=> b!142579 (= e!92910 (getValueByKey!177 (t!6295 lt!73957) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142577 () Bool)

(assert (=> b!142577 (= e!92909 (Some!182 (_2!1322 (h!2322 lt!73957))))))

(declare-fun b!142580 () Bool)

(assert (=> b!142580 (= e!92910 None!181)))

(declare-fun d!45467 () Bool)

(declare-fun c!26938 () Bool)

(assert (=> d!45467 (= c!26938 (and ((_ is Cons!1715) lt!73957) (= (_1!1322 (h!2322 lt!73957)) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45467 (= (getValueByKey!177 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92909)))

(assert (= (and d!45467 c!26938) b!142577))

(assert (= (and d!45467 (not c!26938)) b!142578))

(assert (= (and b!142578 c!26939) b!142579))

(assert (= (and b!142578 (not c!26939)) b!142580))

(declare-fun m!172041 () Bool)

(assert (=> b!142579 m!172041))

(assert (=> d!44119 d!45467))

(declare-fun d!45469 () Bool)

(assert (=> d!45469 (= (getValueByKey!177 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74738 () Unit!4387)

(assert (=> d!45469 (= lt!74738 (choose!873 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92911 () Bool)

(assert (=> d!45469 e!92911))

(declare-fun res!68000 () Bool)

(assert (=> d!45469 (=> (not res!68000) (not e!92911))))

(assert (=> d!45469 (= res!68000 (isStrictlySorted!312 lt!73957))))

(assert (=> d!45469 (= (lemmaContainsTupThenGetReturnValue!91 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74738)))

(declare-fun b!142581 () Bool)

(declare-fun res!68001 () Bool)

(assert (=> b!142581 (=> (not res!68001) (not e!92911))))

(assert (=> b!142581 (= res!68001 (containsKey!180 lt!73957 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142582 () Bool)

(assert (=> b!142582 (= e!92911 (contains!907 lt!73957 (tuple2!2623 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45469 res!68000) b!142581))

(assert (= (and b!142581 res!68001) b!142582))

(assert (=> d!45469 m!168837))

(declare-fun m!172043 () Bool)

(assert (=> d!45469 m!172043))

(declare-fun m!172045 () Bool)

(assert (=> d!45469 m!172045))

(declare-fun m!172047 () Bool)

(assert (=> b!142581 m!172047))

(declare-fun m!172049 () Bool)

(assert (=> b!142582 m!172049))

(assert (=> d!44119 d!45469))

(declare-fun bm!15753 () Bool)

(declare-fun call!15758 () List!1719)

(declare-fun call!15757 () List!1719)

(assert (=> bm!15753 (= call!15758 call!15757)))

(declare-fun b!142584 () Bool)

(declare-fun e!92913 () List!1719)

(declare-fun e!92915 () List!1719)

(assert (=> b!142584 (= e!92913 e!92915)))

(declare-fun c!26943 () Bool)

(assert (=> b!142584 (= c!26943 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142585 () Bool)

(declare-fun res!68003 () Bool)

(declare-fun e!92912 () Bool)

(assert (=> b!142585 (=> (not res!68003) (not e!92912))))

(declare-fun lt!74739 () List!1719)

(assert (=> b!142585 (= res!68003 (containsKey!180 lt!74739 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142586 () Bool)

(declare-fun c!26941 () Bool)

(assert (=> b!142586 (= c!26941 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvsgt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92914 () List!1719)

(assert (=> b!142586 (= e!92915 e!92914)))

(declare-fun bm!15754 () Bool)

(declare-fun call!15756 () List!1719)

(assert (=> bm!15754 (= call!15757 call!15756)))

(declare-fun b!142587 () Bool)

(assert (=> b!142587 (= e!92915 call!15757)))

(declare-fun b!142588 () Bool)

(assert (=> b!142588 (= e!92913 call!15756)))

(declare-fun b!142589 () Bool)

(assert (=> b!142589 (= e!92912 (contains!907 lt!74739 (tuple2!2623 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92916 () List!1719)

(declare-fun b!142583 () Bool)

(assert (=> b!142583 (= e!92916 (ite c!26943 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (ite c!26941 (Cons!1715 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) Nil!1716)))))

(declare-fun d!45471 () Bool)

(assert (=> d!45471 e!92912))

(declare-fun res!68002 () Bool)

(assert (=> d!45471 (=> (not res!68002) (not e!92912))))

(assert (=> d!45471 (= res!68002 (isStrictlySorted!312 lt!74739))))

(assert (=> d!45471 (= lt!74739 e!92913)))

(declare-fun c!26942 () Bool)

(assert (=> d!45471 (= c!26942 (and ((_ is Cons!1715) (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1322 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45471 (isStrictlySorted!312 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (=> d!45471 (= (insertStrictlySorted!94 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74739)))

(declare-fun b!142590 () Bool)

(assert (=> b!142590 (= e!92914 call!15758)))

(declare-fun b!142591 () Bool)

(assert (=> b!142591 (= e!92914 call!15758)))

(declare-fun bm!15755 () Bool)

(assert (=> bm!15755 (= call!15756 ($colon$colon!93 e!92916 (ite c!26942 (h!2322 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (tuple2!2623 (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26940 () Bool)

(assert (=> bm!15755 (= c!26940 c!26942)))

(declare-fun b!142592 () Bool)

(assert (=> b!142592 (= e!92916 (insertStrictlySorted!94 (t!6295 (toList!858 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (_1!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45471 c!26942) b!142588))

(assert (= (and d!45471 (not c!26942)) b!142584))

(assert (= (and b!142584 c!26943) b!142587))

(assert (= (and b!142584 (not c!26943)) b!142586))

(assert (= (and b!142586 c!26941) b!142590))

(assert (= (and b!142586 (not c!26941)) b!142591))

(assert (= (or b!142590 b!142591) bm!15753))

(assert (= (or b!142587 bm!15753) bm!15754))

(assert (= (or b!142588 bm!15754) bm!15755))

(assert (= (and bm!15755 c!26940) b!142592))

(assert (= (and bm!15755 (not c!26940)) b!142583))

(assert (= (and d!45471 res!68002) b!142585))

(assert (= (and b!142585 res!68003) b!142589))

(declare-fun m!172051 () Bool)

(assert (=> bm!15755 m!172051))

(declare-fun m!172053 () Bool)

(assert (=> d!45471 m!172053))

(assert (=> d!45471 m!171735))

(declare-fun m!172055 () Bool)

(assert (=> b!142585 m!172055))

(declare-fun m!172057 () Bool)

(assert (=> b!142592 m!172057))

(declare-fun m!172059 () Bool)

(assert (=> b!142589 m!172059))

(assert (=> d!44119 d!45471))

(declare-fun d!45473 () Bool)

(assert (=> d!45473 (= ($colon$colon!93 e!91858 (ite c!26460 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))) (Cons!1715 (ite c!26460 (h!2322 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) e!91858))))

(assert (=> bm!15636 d!45473))

(declare-fun d!45475 () Bool)

(declare-fun e!92917 () Bool)

(assert (=> d!45475 e!92917))

(declare-fun res!68004 () Bool)

(assert (=> d!45475 (=> res!68004 e!92917)))

(declare-fun lt!74743 () Bool)

(assert (=> d!45475 (= res!68004 (not lt!74743))))

(declare-fun lt!74740 () Bool)

(assert (=> d!45475 (= lt!74743 lt!74740)))

(declare-fun lt!74742 () Unit!4387)

(declare-fun e!92918 () Unit!4387)

(assert (=> d!45475 (= lt!74742 e!92918)))

(declare-fun c!26944 () Bool)

(assert (=> d!45475 (= c!26944 lt!74740)))

(assert (=> d!45475 (= lt!74740 (containsKey!180 (toList!858 lt!73961) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45475 (= (contains!904 lt!73961 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74743)))

(declare-fun b!142593 () Bool)

(declare-fun lt!74741 () Unit!4387)

(assert (=> b!142593 (= e!92918 lt!74741)))

(assert (=> b!142593 (= lt!74741 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73961) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142593 (isDefined!129 (getValueByKey!177 (toList!858 lt!73961) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142594 () Bool)

(declare-fun Unit!4516 () Unit!4387)

(assert (=> b!142594 (= e!92918 Unit!4516)))

(declare-fun b!142595 () Bool)

(assert (=> b!142595 (= e!92917 (isDefined!129 (getValueByKey!177 (toList!858 lt!73961) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45475 c!26944) b!142593))

(assert (= (and d!45475 (not c!26944)) b!142594))

(assert (= (and d!45475 (not res!68004)) b!142595))

(declare-fun m!172061 () Bool)

(assert (=> d!45475 m!172061))

(declare-fun m!172063 () Bool)

(assert (=> b!142593 m!172063))

(assert (=> b!142593 m!171883))

(assert (=> b!142593 m!171883))

(declare-fun m!172065 () Bool)

(assert (=> b!142593 m!172065))

(assert (=> b!142595 m!171883))

(assert (=> b!142595 m!171883))

(assert (=> b!142595 m!172065))

(assert (=> bm!15643 d!45475))

(assert (=> d!43973 d!43975))

(assert (=> d!43973 d!43977))

(declare-fun d!45477 () Bool)

(assert (=> d!45477 (isDefined!129 (getValueByKey!177 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> d!45477 true))

(declare-fun _$12!417 () Unit!4387)

(assert (=> d!45477 (= (choose!864 (toList!858 e!91171) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) _$12!417)))

(declare-fun bs!6039 () Bool)

(assert (= bs!6039 d!45477))

(assert (=> bs!6039 m!166633))

(assert (=> bs!6039 m!167087))

(assert (=> bs!6039 m!167087))

(assert (=> bs!6039 m!167089))

(assert (=> d!43973 d!45477))

(declare-fun d!45479 () Bool)

(declare-fun res!68005 () Bool)

(declare-fun e!92919 () Bool)

(assert (=> d!45479 (=> res!68005 e!92919)))

(assert (=> d!45479 (= res!68005 (or ((_ is Nil!1716) (toList!858 e!91171)) ((_ is Nil!1716) (t!6295 (toList!858 e!91171)))))))

(assert (=> d!45479 (= (isStrictlySorted!312 (toList!858 e!91171)) e!92919)))

(declare-fun b!142596 () Bool)

(declare-fun e!92920 () Bool)

(assert (=> b!142596 (= e!92919 e!92920)))

(declare-fun res!68006 () Bool)

(assert (=> b!142596 (=> (not res!68006) (not e!92920))))

(assert (=> b!142596 (= res!68006 (bvslt (_1!1322 (h!2322 (toList!858 e!91171))) (_1!1322 (h!2322 (t!6295 (toList!858 e!91171))))))))

(declare-fun b!142597 () Bool)

(assert (=> b!142597 (= e!92920 (isStrictlySorted!312 (t!6295 (toList!858 e!91171))))))

(assert (= (and d!45479 (not res!68005)) b!142596))

(assert (= (and b!142596 res!68006) b!142597))

(declare-fun m!172067 () Bool)

(assert (=> b!142597 m!172067))

(assert (=> d!43973 d!45479))

(declare-fun d!45481 () Bool)

(assert (=> d!45481 (= (apply!120 lt!73601 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6040 () Bool)

(assert (= bs!6040 d!45481))

(assert (=> bs!6040 m!170695))

(assert (=> bs!6040 m!170695))

(declare-fun m!172069 () Bool)

(assert (=> bs!6040 m!172069))

(assert (=> b!140383 d!45481))

(declare-fun d!45483 () Bool)

(assert (=> d!45483 (= (isDefined!129 (getValueByKey!177 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) (not (isEmpty!423 (getValueByKey!177 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun bs!6041 () Bool)

(assert (= bs!6041 d!45483))

(assert (=> bs!6041 m!167845))

(declare-fun m!172071 () Bool)

(assert (=> bs!6041 m!172071))

(assert (=> b!140424 d!45483))

(declare-fun b!142599 () Bool)

(declare-fun e!92921 () Option!183)

(declare-fun e!92922 () Option!183)

(assert (=> b!142599 (= e!92921 e!92922)))

(declare-fun c!26946 () Bool)

(assert (=> b!142599 (= c!26946 (and ((_ is Cons!1715) (toList!858 (map!1429 (_2!1323 lt!73410)))) (not (= (_1!1322 (h!2322 (toList!858 (map!1429 (_2!1323 lt!73410))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!142600 () Bool)

(assert (=> b!142600 (= e!92922 (getValueByKey!177 (t!6295 (toList!858 (map!1429 (_2!1323 lt!73410)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!142598 () Bool)

(assert (=> b!142598 (= e!92921 (Some!182 (_2!1322 (h!2322 (toList!858 (map!1429 (_2!1323 lt!73410)))))))))

(declare-fun b!142601 () Bool)

(assert (=> b!142601 (= e!92922 None!181)))

(declare-fun c!26945 () Bool)

(declare-fun d!45485 () Bool)

(assert (=> d!45485 (= c!26945 (and ((_ is Cons!1715) (toList!858 (map!1429 (_2!1323 lt!73410)))) (= (_1!1322 (h!2322 (toList!858 (map!1429 (_2!1323 lt!73410))))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!45485 (= (getValueByKey!177 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92921)))

(assert (= (and d!45485 c!26945) b!142598))

(assert (= (and d!45485 (not c!26945)) b!142599))

(assert (= (and b!142599 c!26946) b!142600))

(assert (= (and b!142599 (not c!26946)) b!142601))

(assert (=> b!142600 m!166633))

(declare-fun m!172073 () Bool)

(assert (=> b!142600 m!172073))

(assert (=> b!140424 d!45485))

(declare-fun d!45487 () Bool)

(assert (=> d!45487 (isDefined!129 (getValueByKey!177 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!74744 () Unit!4387)

(assert (=> d!45487 (= lt!74744 (choose!864 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!92923 () Bool)

(assert (=> d!45487 e!92923))

(declare-fun res!68007 () Bool)

(assert (=> d!45487 (=> (not res!68007) (not e!92923))))

(assert (=> d!45487 (= res!68007 (isStrictlySorted!312 (toList!858 lt!73425)))))

(assert (=> d!45487 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74744)))

(declare-fun b!142602 () Bool)

(assert (=> b!142602 (= e!92923 (containsKey!180 (toList!858 lt!73425) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45487 res!68007) b!142602))

(assert (=> d!45487 m!167279))

(assert (=> d!45487 m!167279))

(assert (=> d!45487 m!168151))

(declare-fun m!172075 () Bool)

(assert (=> d!45487 m!172075))

(declare-fun m!172077 () Bool)

(assert (=> d!45487 m!172077))

(assert (=> b!142602 m!168147))

(assert (=> b!140619 d!45487))

(assert (=> b!140619 d!45361))

(assert (=> b!140619 d!43807))

(declare-fun d!45489 () Bool)

(declare-fun e!92924 () Bool)

(assert (=> d!45489 e!92924))

(declare-fun res!68008 () Bool)

(assert (=> d!45489 (=> res!68008 e!92924)))

(declare-fun lt!74748 () Bool)

(assert (=> d!45489 (= res!68008 (not lt!74748))))

(declare-fun lt!74745 () Bool)

(assert (=> d!45489 (= lt!74748 lt!74745)))

(declare-fun lt!74747 () Unit!4387)

(declare-fun e!92925 () Unit!4387)

(assert (=> d!45489 (= lt!74747 e!92925)))

(declare-fun c!26947 () Bool)

(assert (=> d!45489 (= c!26947 lt!74745)))

(assert (=> d!45489 (= lt!74745 (containsKey!180 (toList!858 lt!73906) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!45489 (= (contains!904 lt!73906 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74748)))

(declare-fun b!142603 () Bool)

(declare-fun lt!74746 () Unit!4387)

(assert (=> b!142603 (= e!92925 lt!74746)))

(assert (=> b!142603 (= lt!74746 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73906) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> b!142603 (isDefined!129 (getValueByKey!177 (toList!858 lt!73906) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142604 () Bool)

(declare-fun Unit!4517 () Unit!4387)

(assert (=> b!142604 (= e!92925 Unit!4517)))

(declare-fun b!142605 () Bool)

(assert (=> b!142605 (= e!92924 (isDefined!129 (getValueByKey!177 (toList!858 lt!73906) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45489 c!26947) b!142603))

(assert (= (and d!45489 (not c!26947)) b!142604))

(assert (= (and d!45489 (not res!68008)) b!142605))

(declare-fun m!172079 () Bool)

(assert (=> d!45489 m!172079))

(declare-fun m!172081 () Bool)

(assert (=> b!142603 m!172081))

(assert (=> b!142603 m!168637))

(assert (=> b!142603 m!168637))

(declare-fun m!172083 () Bool)

(assert (=> b!142603 m!172083))

(assert (=> b!142605 m!168637))

(assert (=> b!142605 m!168637))

(assert (=> b!142605 m!172083))

(assert (=> d!44027 d!45489))

(declare-fun b!142607 () Bool)

(declare-fun e!92926 () Option!183)

(declare-fun e!92927 () Option!183)

(assert (=> b!142607 (= e!92926 e!92927)))

(declare-fun c!26949 () Bool)

(assert (=> b!142607 (= c!26949 (and ((_ is Cons!1715) lt!73905) (not (= (_1!1322 (h!2322 lt!73905)) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!142608 () Bool)

(assert (=> b!142608 (= e!92927 (getValueByKey!177 (t!6295 lt!73905) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142606 () Bool)

(assert (=> b!142606 (= e!92926 (Some!182 (_2!1322 (h!2322 lt!73905))))))

(declare-fun b!142609 () Bool)

(assert (=> b!142609 (= e!92927 None!181)))

(declare-fun c!26948 () Bool)

(declare-fun d!45491 () Bool)

(assert (=> d!45491 (= c!26948 (and ((_ is Cons!1715) lt!73905) (= (_1!1322 (h!2322 lt!73905)) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45491 (= (getValueByKey!177 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92926)))

(assert (= (and d!45491 c!26948) b!142606))

(assert (= (and d!45491 (not c!26948)) b!142607))

(assert (= (and b!142607 c!26949) b!142608))

(assert (= (and b!142607 (not c!26949)) b!142609))

(declare-fun m!172085 () Bool)

(assert (=> b!142608 m!172085))

(assert (=> d!44027 d!45491))

(declare-fun d!45493 () Bool)

(assert (=> d!45493 (= (getValueByKey!177 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!74749 () Unit!4387)

(assert (=> d!45493 (= lt!74749 (choose!873 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun e!92928 () Bool)

(assert (=> d!45493 e!92928))

(declare-fun res!68009 () Bool)

(assert (=> d!45493 (=> (not res!68009) (not e!92928))))

(assert (=> d!45493 (= res!68009 (isStrictlySorted!312 lt!73905))))

(assert (=> d!45493 (= (lemmaContainsTupThenGetReturnValue!91 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74749)))

(declare-fun b!142610 () Bool)

(declare-fun res!68010 () Bool)

(assert (=> b!142610 (=> (not res!68010) (not e!92928))))

(assert (=> b!142610 (= res!68010 (containsKey!180 lt!73905 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142611 () Bool)

(assert (=> b!142611 (= e!92928 (contains!907 lt!73905 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45493 res!68009) b!142610))

(assert (= (and b!142610 res!68010) b!142611))

(assert (=> d!45493 m!168631))

(declare-fun m!172087 () Bool)

(assert (=> d!45493 m!172087))

(declare-fun m!172089 () Bool)

(assert (=> d!45493 m!172089))

(declare-fun m!172091 () Bool)

(assert (=> b!142610 m!172091))

(declare-fun m!172093 () Bool)

(assert (=> b!142611 m!172093))

(assert (=> d!44027 d!45493))

(declare-fun bm!15756 () Bool)

(declare-fun call!15761 () List!1719)

(declare-fun call!15760 () List!1719)

(assert (=> bm!15756 (= call!15761 call!15760)))

(declare-fun b!142613 () Bool)

(declare-fun e!92930 () List!1719)

(declare-fun e!92932 () List!1719)

(assert (=> b!142613 (= e!92930 e!92932)))

(declare-fun c!26953 () Bool)

(assert (=> b!142613 (= c!26953 (and ((_ is Cons!1715) (toList!858 lt!73312)) (= (_1!1322 (h!2322 (toList!858 lt!73312))) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142614 () Bool)

(declare-fun res!68012 () Bool)

(declare-fun e!92929 () Bool)

(assert (=> b!142614 (=> (not res!68012) (not e!92929))))

(declare-fun lt!74750 () List!1719)

(assert (=> b!142614 (= res!68012 (containsKey!180 lt!74750 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun c!26951 () Bool)

(declare-fun b!142615 () Bool)

(assert (=> b!142615 (= c!26951 (and ((_ is Cons!1715) (toList!858 lt!73312)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73312))) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun e!92931 () List!1719)

(assert (=> b!142615 (= e!92932 e!92931)))

(declare-fun bm!15757 () Bool)

(declare-fun call!15759 () List!1719)

(assert (=> bm!15757 (= call!15760 call!15759)))

(declare-fun b!142616 () Bool)

(assert (=> b!142616 (= e!92932 call!15760)))

(declare-fun b!142617 () Bool)

(assert (=> b!142617 (= e!92930 call!15759)))

(declare-fun b!142618 () Bool)

(assert (=> b!142618 (= e!92929 (contains!907 lt!74750 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun e!92933 () List!1719)

(declare-fun b!142612 () Bool)

(assert (=> b!142612 (= e!92933 (ite c!26953 (t!6295 (toList!858 lt!73312)) (ite c!26951 (Cons!1715 (h!2322 (toList!858 lt!73312)) (t!6295 (toList!858 lt!73312))) Nil!1716)))))

(declare-fun d!45495 () Bool)

(assert (=> d!45495 e!92929))

(declare-fun res!68011 () Bool)

(assert (=> d!45495 (=> (not res!68011) (not e!92929))))

(assert (=> d!45495 (= res!68011 (isStrictlySorted!312 lt!74750))))

(assert (=> d!45495 (= lt!74750 e!92930)))

(declare-fun c!26952 () Bool)

(assert (=> d!45495 (= c!26952 (and ((_ is Cons!1715) (toList!858 lt!73312)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73312))) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45495 (isStrictlySorted!312 (toList!858 lt!73312))))

(assert (=> d!45495 (= (insertStrictlySorted!94 (toList!858 lt!73312) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74750)))

(declare-fun b!142619 () Bool)

(assert (=> b!142619 (= e!92931 call!15761)))

(declare-fun b!142620 () Bool)

(assert (=> b!142620 (= e!92931 call!15761)))

(declare-fun bm!15758 () Bool)

(assert (=> bm!15758 (= call!15759 ($colon$colon!93 e!92933 (ite c!26952 (h!2322 (toList!858 lt!73312)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun c!26950 () Bool)

(assert (=> bm!15758 (= c!26950 c!26952)))

(declare-fun b!142621 () Bool)

(assert (=> b!142621 (= e!92933 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73312)) (_1!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45495 c!26952) b!142617))

(assert (= (and d!45495 (not c!26952)) b!142613))

(assert (= (and b!142613 c!26953) b!142616))

(assert (= (and b!142613 (not c!26953)) b!142615))

(assert (= (and b!142615 c!26951) b!142619))

(assert (= (and b!142615 (not c!26951)) b!142620))

(assert (= (or b!142619 b!142620) bm!15756))

(assert (= (or b!142616 bm!15756) bm!15757))

(assert (= (or b!142617 bm!15757) bm!15758))

(assert (= (and bm!15758 c!26950) b!142621))

(assert (= (and bm!15758 (not c!26950)) b!142612))

(assert (= (and d!45495 res!68011) b!142614))

(assert (= (and b!142614 res!68012) b!142618))

(declare-fun m!172095 () Bool)

(assert (=> bm!15758 m!172095))

(declare-fun m!172097 () Bool)

(assert (=> d!45495 m!172097))

(declare-fun m!172099 () Bool)

(assert (=> d!45495 m!172099))

(declare-fun m!172101 () Bool)

(assert (=> b!142614 m!172101))

(declare-fun m!172103 () Bool)

(assert (=> b!142621 m!172103))

(declare-fun m!172105 () Bool)

(assert (=> b!142618 m!172105))

(assert (=> d!44027 d!45495))

(declare-fun bm!15759 () Bool)

(declare-fun call!15764 () List!1719)

(declare-fun call!15763 () List!1719)

(assert (=> bm!15759 (= call!15764 call!15763)))

(declare-fun b!142623 () Bool)

(declare-fun e!92935 () List!1719)

(declare-fun e!92937 () List!1719)

(assert (=> b!142623 (= e!92935 e!92937)))

(declare-fun c!26957 () Bool)

(assert (=> b!142623 (= c!26957 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73203))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73203)))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142624 () Bool)

(declare-fun res!68014 () Bool)

(declare-fun e!92934 () Bool)

(assert (=> b!142624 (=> (not res!68014) (not e!92934))))

(declare-fun lt!74751 () List!1719)

(assert (=> b!142624 (= res!68014 (containsKey!180 lt!74751 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun c!26955 () Bool)

(declare-fun b!142625 () Bool)

(assert (=> b!142625 (= c!26955 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73203))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73203)))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92936 () List!1719)

(assert (=> b!142625 (= e!92937 e!92936)))

(declare-fun bm!15760 () Bool)

(declare-fun call!15762 () List!1719)

(assert (=> bm!15760 (= call!15763 call!15762)))

(declare-fun b!142626 () Bool)

(assert (=> b!142626 (= e!92937 call!15763)))

(declare-fun b!142627 () Bool)

(assert (=> b!142627 (= e!92935 call!15762)))

(declare-fun b!142628 () Bool)

(assert (=> b!142628 (= e!92934 (contains!907 lt!74751 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!92938 () List!1719)

(declare-fun b!142622 () Bool)

(assert (=> b!142622 (= e!92938 (ite c!26957 (t!6295 (t!6295 (toList!858 lt!73203))) (ite c!26955 (Cons!1715 (h!2322 (t!6295 (toList!858 lt!73203))) (t!6295 (t!6295 (toList!858 lt!73203)))) Nil!1716)))))

(declare-fun d!45497 () Bool)

(assert (=> d!45497 e!92934))

(declare-fun res!68013 () Bool)

(assert (=> d!45497 (=> (not res!68013) (not e!92934))))

(assert (=> d!45497 (= res!68013 (isStrictlySorted!312 lt!74751))))

(assert (=> d!45497 (= lt!74751 e!92935)))

(declare-fun c!26956 () Bool)

(assert (=> d!45497 (= c!26956 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73203))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73203)))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45497 (isStrictlySorted!312 (t!6295 (toList!858 lt!73203)))))

(assert (=> d!45497 (= (insertStrictlySorted!94 (t!6295 (toList!858 lt!73203)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74751)))

(declare-fun b!142629 () Bool)

(assert (=> b!142629 (= e!92936 call!15764)))

(declare-fun b!142630 () Bool)

(assert (=> b!142630 (= e!92936 call!15764)))

(declare-fun bm!15761 () Bool)

(assert (=> bm!15761 (= call!15762 ($colon$colon!93 e!92938 (ite c!26956 (h!2322 (t!6295 (toList!858 lt!73203))) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!26954 () Bool)

(assert (=> bm!15761 (= c!26954 c!26956)))

(declare-fun b!142631 () Bool)

(assert (=> b!142631 (= e!92938 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 lt!73203))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45497 c!26956) b!142627))

(assert (= (and d!45497 (not c!26956)) b!142623))

(assert (= (and b!142623 c!26957) b!142626))

(assert (= (and b!142623 (not c!26957)) b!142625))

(assert (= (and b!142625 c!26955) b!142629))

(assert (= (and b!142625 (not c!26955)) b!142630))

(assert (= (or b!142629 b!142630) bm!15759))

(assert (= (or b!142626 bm!15759) bm!15760))

(assert (= (or b!142627 bm!15760) bm!15761))

(assert (= (and bm!15761 c!26954) b!142631))

(assert (= (and bm!15761 (not c!26954)) b!142622))

(assert (= (and d!45497 res!68013) b!142624))

(assert (= (and b!142624 res!68014) b!142628))

(declare-fun m!172107 () Bool)

(assert (=> bm!15761 m!172107))

(declare-fun m!172109 () Bool)

(assert (=> d!45497 m!172109))

(assert (=> d!45497 m!170921))

(declare-fun m!172111 () Bool)

(assert (=> b!142624 m!172111))

(declare-fun m!172113 () Bool)

(assert (=> b!142631 m!172113))

(declare-fun m!172115 () Bool)

(assert (=> b!142628 m!172115))

(assert (=> b!140770 d!45497))

(assert (=> bm!15589 d!44717))

(declare-fun b!142633 () Bool)

(declare-fun e!92939 () Option!183)

(declare-fun e!92940 () Option!183)

(assert (=> b!142633 (= e!92939 e!92940)))

(declare-fun c!26959 () Bool)

(assert (=> b!142633 (= c!26959 (and ((_ is Cons!1715) (t!6295 lt!73267)) (not (= (_1!1322 (h!2322 (t!6295 lt!73267))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!142634 () Bool)

(assert (=> b!142634 (= e!92940 (getValueByKey!177 (t!6295 (t!6295 lt!73267)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142632 () Bool)

(assert (=> b!142632 (= e!92939 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73267)))))))

(declare-fun b!142635 () Bool)

(assert (=> b!142635 (= e!92940 None!181)))

(declare-fun d!45499 () Bool)

(declare-fun c!26958 () Bool)

(assert (=> d!45499 (= c!26958 (and ((_ is Cons!1715) (t!6295 lt!73267)) (= (_1!1322 (h!2322 (t!6295 lt!73267))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45499 (= (getValueByKey!177 (t!6295 lt!73267) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92939)))

(assert (= (and d!45499 c!26958) b!142632))

(assert (= (and d!45499 (not c!26958)) b!142633))

(assert (= (and b!142633 c!26959) b!142634))

(assert (= (and b!142633 (not c!26959)) b!142635))

(declare-fun m!172117 () Bool)

(assert (=> b!142634 m!172117))

(assert (=> b!140858 d!45499))

(declare-fun b!142637 () Bool)

(declare-fun e!92941 () Option!183)

(declare-fun e!92942 () Option!183)

(assert (=> b!142637 (= e!92941 e!92942)))

(declare-fun c!26961 () Bool)

(assert (=> b!142637 (= c!26961 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73187))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73187)))) lt!73185))))))

(declare-fun b!142638 () Bool)

(assert (=> b!142638 (= e!92942 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73187))) lt!73185))))

(declare-fun b!142636 () Bool)

(assert (=> b!142636 (= e!92941 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73187))))))))

(declare-fun b!142639 () Bool)

(assert (=> b!142639 (= e!92942 None!181)))

(declare-fun d!45501 () Bool)

(declare-fun c!26960 () Bool)

(assert (=> d!45501 (= c!26960 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73187))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73187)))) lt!73185)))))

(assert (=> d!45501 (= (getValueByKey!177 (t!6295 (toList!858 lt!73187)) lt!73185) e!92941)))

(assert (= (and d!45501 c!26960) b!142636))

(assert (= (and d!45501 (not c!26960)) b!142637))

(assert (= (and b!142637 c!26961) b!142638))

(assert (= (and b!142637 (not c!26961)) b!142639))

(declare-fun m!172119 () Bool)

(assert (=> b!142638 m!172119))

(assert (=> b!140503 d!45501))

(declare-fun d!45503 () Bool)

(assert (=> d!45503 (= (get!1535 (getValueByKey!177 (toList!858 lt!73328) lt!73327)) (v!3285 (getValueByKey!177 (toList!858 lt!73328) lt!73327)))))

(assert (=> d!44033 d!45503))

(declare-fun b!142641 () Bool)

(declare-fun e!92943 () Option!183)

(declare-fun e!92944 () Option!183)

(assert (=> b!142641 (= e!92943 e!92944)))

(declare-fun c!26963 () Bool)

(assert (=> b!142641 (= c!26963 (and ((_ is Cons!1715) (toList!858 lt!73328)) (not (= (_1!1322 (h!2322 (toList!858 lt!73328))) lt!73327))))))

(declare-fun b!142642 () Bool)

(assert (=> b!142642 (= e!92944 (getValueByKey!177 (t!6295 (toList!858 lt!73328)) lt!73327))))

(declare-fun b!142640 () Bool)

(assert (=> b!142640 (= e!92943 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73328)))))))

(declare-fun b!142643 () Bool)

(assert (=> b!142643 (= e!92944 None!181)))

(declare-fun d!45505 () Bool)

(declare-fun c!26962 () Bool)

(assert (=> d!45505 (= c!26962 (and ((_ is Cons!1715) (toList!858 lt!73328)) (= (_1!1322 (h!2322 (toList!858 lt!73328))) lt!73327)))))

(assert (=> d!45505 (= (getValueByKey!177 (toList!858 lt!73328) lt!73327) e!92943)))

(assert (= (and d!45505 c!26962) b!142640))

(assert (= (and d!45505 (not c!26962)) b!142641))

(assert (= (and b!142641 c!26963) b!142642))

(assert (= (and b!142641 (not c!26963)) b!142643))

(declare-fun m!172121 () Bool)

(assert (=> b!142642 m!172121))

(assert (=> d!44033 d!45505))

(assert (=> b!140326 d!44201))

(assert (=> d!44009 d!44055))

(declare-fun d!45507 () Bool)

(assert (=> d!45507 (= (apply!120 lt!73624 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1535 (getValueByKey!177 (toList!858 lt!73624) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!6042 () Bool)

(assert (= bs!6042 d!45507))

(assert (=> bs!6042 m!167405))

(assert (=> bs!6042 m!169871))

(assert (=> bs!6042 m!169871))

(declare-fun m!172123 () Bool)

(assert (=> bs!6042 m!172123))

(assert (=> b!140409 d!45507))

(assert (=> b!140409 d!44311))

(declare-fun d!45509 () Bool)

(declare-fun lt!74752 () Bool)

(assert (=> d!45509 (= lt!74752 (select (content!138 lt!73396) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)))))

(declare-fun e!92946 () Bool)

(assert (=> d!45509 (= lt!74752 e!92946)))

(declare-fun res!68015 () Bool)

(assert (=> d!45509 (=> (not res!68015) (not e!92946))))

(assert (=> d!45509 (= res!68015 ((_ is Cons!1716) lt!73396))))

(assert (=> d!45509 (= (contains!906 lt!73396 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)) lt!74752)))

(declare-fun b!142644 () Bool)

(declare-fun e!92945 () Bool)

(assert (=> b!142644 (= e!92946 e!92945)))

(declare-fun res!68016 () Bool)

(assert (=> b!142644 (=> res!68016 e!92945)))

(assert (=> b!142644 (= res!68016 (= (h!2323 lt!73396) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)))))

(declare-fun b!142645 () Bool)

(assert (=> b!142645 (= e!92945 (contains!906 (t!6296 lt!73396) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) lt!73399)))))

(assert (= (and d!45509 res!68015) b!142644))

(assert (= (and b!142644 (not res!68016)) b!142645))

(declare-fun m!172125 () Bool)

(assert (=> d!45509 m!172125))

(assert (=> d!45509 m!167957))

(declare-fun m!172127 () Bool)

(assert (=> d!45509 m!172127))

(assert (=> b!142645 m!167957))

(declare-fun m!172129 () Bool)

(assert (=> b!142645 m!172129))

(assert (=> b!140519 d!45509))

(assert (=> b!140938 d!45073))

(declare-fun b!142646 () Bool)

(declare-fun e!92947 () (_ BitVec 32))

(assert (=> b!142646 (= e!92947 #b00000000000000000000000000000000)))

(declare-fun b!142648 () Bool)

(declare-fun e!92948 () (_ BitVec 32))

(declare-fun call!15765 () (_ BitVec 32))

(assert (=> b!142648 (= e!92948 (bvadd #b00000000000000000000000000000001 call!15765))))

(declare-fun d!45511 () Bool)

(declare-fun lt!74753 () (_ BitVec 32))

(assert (=> d!45511 (and (bvsge lt!74753 #b00000000000000000000000000000000) (bvsle lt!74753 (bvsub (size!2578 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45511 (= lt!74753 e!92947)))

(declare-fun c!26964 () Bool)

(assert (=> d!45511 (= c!26964 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!45511 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2578 (_keys!4698 (_2!1323 lt!73124))) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(assert (=> d!45511 (= (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))) lt!74753)))

(declare-fun b!142647 () Bool)

(assert (=> b!142647 (= e!92947 e!92948)))

(declare-fun c!26965 () Bool)

(assert (=> b!142647 (= c!26965 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (_2!1323 lt!73124))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!15762 () Bool)

(assert (=> bm!15762 (= call!15765 (arrayCountValidKeys!0 (_keys!4698 (_2!1323 lt!73124)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (_2!1323 lt!73124)))))))

(declare-fun b!142649 () Bool)

(assert (=> b!142649 (= e!92948 call!15765)))

(assert (= (and d!45511 c!26964) b!142646))

(assert (= (and d!45511 (not c!26964)) b!142647))

(assert (= (and b!142647 c!26965) b!142648))

(assert (= (and b!142647 (not c!26965)) b!142649))

(assert (= (or b!142648 b!142649) bm!15762))

(assert (=> b!142647 m!170545))

(assert (=> b!142647 m!170545))

(assert (=> b!142647 m!170547))

(declare-fun m!172131 () Bool)

(assert (=> bm!15762 m!172131))

(assert (=> bm!15620 d!45511))

(declare-fun b!142651 () Bool)

(declare-fun e!92949 () Option!183)

(declare-fun e!92950 () Option!183)

(assert (=> b!142651 (= e!92949 e!92950)))

(declare-fun c!26967 () Bool)

(assert (=> b!142651 (= c!26967 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73279))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73279)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142652 () Bool)

(assert (=> b!142652 (= e!92950 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73279))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142650 () Bool)

(assert (=> b!142650 (= e!92949 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73279))))))))

(declare-fun b!142653 () Bool)

(assert (=> b!142653 (= e!92950 None!181)))

(declare-fun d!45513 () Bool)

(declare-fun c!26966 () Bool)

(assert (=> d!45513 (= c!26966 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73279))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73279)))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45513 (= (getValueByKey!177 (t!6295 (toList!858 lt!73279)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92949)))

(assert (= (and d!45513 c!26966) b!142650))

(assert (= (and d!45513 (not c!26966)) b!142651))

(assert (= (and b!142651 c!26967) b!142652))

(assert (= (and b!142651 (not c!26967)) b!142653))

(declare-fun m!172133 () Bool)

(assert (=> b!142652 m!172133))

(assert (=> b!140487 d!45513))

(declare-fun d!45515 () Bool)

(declare-fun res!68017 () Bool)

(declare-fun e!92951 () Bool)

(assert (=> d!45515 (=> res!68017 e!92951)))

(assert (=> d!45515 (= res!68017 (and ((_ is Cons!1715) (toList!858 lt!73446)) (= (_1!1322 (h!2322 (toList!858 lt!73446))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45515 (= (containsKey!180 (toList!858 lt!73446) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92951)))

(declare-fun b!142654 () Bool)

(declare-fun e!92952 () Bool)

(assert (=> b!142654 (= e!92951 e!92952)))

(declare-fun res!68018 () Bool)

(assert (=> b!142654 (=> (not res!68018) (not e!92952))))

(assert (=> b!142654 (= res!68018 (and (or (not ((_ is Cons!1715) (toList!858 lt!73446))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73446))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1715) (toList!858 lt!73446)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73446))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!142655 () Bool)

(assert (=> b!142655 (= e!92952 (containsKey!180 (t!6295 (toList!858 lt!73446)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45515 (not res!68017)) b!142654))

(assert (= (and b!142654 res!68018) b!142655))

(assert (=> b!142655 m!166833))

(declare-fun m!172135 () Bool)

(assert (=> b!142655 m!172135))

(assert (=> d!44051 d!45515))

(assert (=> b!140549 d!44415))

(declare-fun d!45517 () Bool)

(declare-fun e!92953 () Bool)

(assert (=> d!45517 e!92953))

(declare-fun res!68019 () Bool)

(assert (=> d!45517 (=> res!68019 e!92953)))

(declare-fun lt!74757 () Bool)

(assert (=> d!45517 (= res!68019 (not lt!74757))))

(declare-fun lt!74754 () Bool)

(assert (=> d!45517 (= lt!74757 lt!74754)))

(declare-fun lt!74756 () Unit!4387)

(declare-fun e!92954 () Unit!4387)

(assert (=> d!45517 (= lt!74756 e!92954)))

(declare-fun c!26968 () Bool)

(assert (=> d!45517 (= c!26968 lt!74754)))

(assert (=> d!45517 (= lt!74754 (containsKey!180 (toList!858 lt!73803) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45517 (= (contains!904 lt!73803 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74757)))

(declare-fun b!142656 () Bool)

(declare-fun lt!74755 () Unit!4387)

(assert (=> b!142656 (= e!92954 lt!74755)))

(assert (=> b!142656 (= lt!74755 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73803) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142656 (isDefined!129 (getValueByKey!177 (toList!858 lt!73803) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142657 () Bool)

(declare-fun Unit!4518 () Unit!4387)

(assert (=> b!142657 (= e!92954 Unit!4518)))

(declare-fun b!142658 () Bool)

(assert (=> b!142658 (= e!92953 (isDefined!129 (getValueByKey!177 (toList!858 lt!73803) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45517 c!26968) b!142656))

(assert (= (and d!45517 (not c!26968)) b!142657))

(assert (= (and d!45517 (not res!68019)) b!142658))

(declare-fun m!172137 () Bool)

(assert (=> d!45517 m!172137))

(declare-fun m!172139 () Bool)

(assert (=> b!142656 m!172139))

(assert (=> b!142656 m!168323))

(assert (=> b!142656 m!168323))

(declare-fun m!172141 () Bool)

(assert (=> b!142656 m!172141))

(assert (=> b!142658 m!168323))

(assert (=> b!142658 m!168323))

(assert (=> b!142658 m!172141))

(assert (=> d!43929 d!45517))

(declare-fun b!142660 () Bool)

(declare-fun e!92955 () Option!183)

(declare-fun e!92956 () Option!183)

(assert (=> b!142660 (= e!92955 e!92956)))

(declare-fun c!26970 () Bool)

(assert (=> b!142660 (= c!26970 (and ((_ is Cons!1715) lt!73802) (not (= (_1!1322 (h!2322 lt!73802)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142661 () Bool)

(assert (=> b!142661 (= e!92956 (getValueByKey!177 (t!6295 lt!73802) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142659 () Bool)

(assert (=> b!142659 (= e!92955 (Some!182 (_2!1322 (h!2322 lt!73802))))))

(declare-fun b!142662 () Bool)

(assert (=> b!142662 (= e!92956 None!181)))

(declare-fun d!45519 () Bool)

(declare-fun c!26969 () Bool)

(assert (=> d!45519 (= c!26969 (and ((_ is Cons!1715) lt!73802) (= (_1!1322 (h!2322 lt!73802)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45519 (= (getValueByKey!177 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92955)))

(assert (= (and d!45519 c!26969) b!142659))

(assert (= (and d!45519 (not c!26969)) b!142660))

(assert (= (and b!142660 c!26970) b!142661))

(assert (= (and b!142660 (not c!26970)) b!142662))

(declare-fun m!172143 () Bool)

(assert (=> b!142661 m!172143))

(assert (=> d!43929 d!45519))

(declare-fun d!45521 () Bool)

(assert (=> d!45521 (= (getValueByKey!177 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74758 () Unit!4387)

(assert (=> d!45521 (= lt!74758 (choose!873 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92957 () Bool)

(assert (=> d!45521 e!92957))

(declare-fun res!68020 () Bool)

(assert (=> d!45521 (=> (not res!68020) (not e!92957))))

(assert (=> d!45521 (= res!68020 (isStrictlySorted!312 lt!73802))))

(assert (=> d!45521 (= (lemmaContainsTupThenGetReturnValue!91 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74758)))

(declare-fun b!142663 () Bool)

(declare-fun res!68021 () Bool)

(assert (=> b!142663 (=> (not res!68021) (not e!92957))))

(assert (=> b!142663 (= res!68021 (containsKey!180 lt!73802 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142664 () Bool)

(assert (=> b!142664 (= e!92957 (contains!907 lt!73802 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45521 res!68020) b!142663))

(assert (= (and b!142663 res!68021) b!142664))

(assert (=> d!45521 m!168317))

(declare-fun m!172145 () Bool)

(assert (=> d!45521 m!172145))

(declare-fun m!172147 () Bool)

(assert (=> d!45521 m!172147))

(declare-fun m!172149 () Bool)

(assert (=> b!142663 m!172149))

(declare-fun m!172151 () Bool)

(assert (=> b!142664 m!172151))

(assert (=> d!43929 d!45521))

(declare-fun bm!15763 () Bool)

(declare-fun call!15768 () List!1719)

(declare-fun call!15767 () List!1719)

(assert (=> bm!15763 (= call!15768 call!15767)))

(declare-fun b!142666 () Bool)

(declare-fun e!92959 () List!1719)

(declare-fun e!92961 () List!1719)

(assert (=> b!142666 (= e!92959 e!92961)))

(declare-fun c!26974 () Bool)

(assert (=> b!142666 (= c!26974 (and ((_ is Cons!1715) (toList!858 call!15543)) (= (_1!1322 (h!2322 (toList!858 call!15543))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142667 () Bool)

(declare-fun res!68023 () Bool)

(declare-fun e!92958 () Bool)

(assert (=> b!142667 (=> (not res!68023) (not e!92958))))

(declare-fun lt!74759 () List!1719)

(assert (=> b!142667 (= res!68023 (containsKey!180 lt!74759 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26972 () Bool)

(declare-fun b!142668 () Bool)

(assert (=> b!142668 (= c!26972 (and ((_ is Cons!1715) (toList!858 call!15543)) (bvsgt (_1!1322 (h!2322 (toList!858 call!15543))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92960 () List!1719)

(assert (=> b!142668 (= e!92961 e!92960)))

(declare-fun bm!15764 () Bool)

(declare-fun call!15766 () List!1719)

(assert (=> bm!15764 (= call!15767 call!15766)))

(declare-fun b!142669 () Bool)

(assert (=> b!142669 (= e!92961 call!15767)))

(declare-fun b!142670 () Bool)

(assert (=> b!142670 (= e!92959 call!15766)))

(declare-fun b!142671 () Bool)

(assert (=> b!142671 (= e!92958 (contains!907 lt!74759 (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92962 () List!1719)

(declare-fun b!142665 () Bool)

(assert (=> b!142665 (= e!92962 (ite c!26974 (t!6295 (toList!858 call!15543)) (ite c!26972 (Cons!1715 (h!2322 (toList!858 call!15543)) (t!6295 (toList!858 call!15543))) Nil!1716)))))

(declare-fun d!45523 () Bool)

(assert (=> d!45523 e!92958))

(declare-fun res!68022 () Bool)

(assert (=> d!45523 (=> (not res!68022) (not e!92958))))

(assert (=> d!45523 (= res!68022 (isStrictlySorted!312 lt!74759))))

(assert (=> d!45523 (= lt!74759 e!92959)))

(declare-fun c!26973 () Bool)

(assert (=> d!45523 (= c!26973 (and ((_ is Cons!1715) (toList!858 call!15543)) (bvslt (_1!1322 (h!2322 (toList!858 call!15543))) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45523 (isStrictlySorted!312 (toList!858 call!15543))))

(assert (=> d!45523 (= (insertStrictlySorted!94 (toList!858 call!15543) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74759)))

(declare-fun b!142672 () Bool)

(assert (=> b!142672 (= e!92960 call!15768)))

(declare-fun b!142673 () Bool)

(assert (=> b!142673 (= e!92960 call!15768)))

(declare-fun bm!15765 () Bool)

(assert (=> bm!15765 (= call!15766 ($colon$colon!93 e!92962 (ite c!26973 (h!2322 (toList!858 call!15543)) (tuple2!2623 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26971 () Bool)

(assert (=> bm!15765 (= c!26971 c!26973)))

(declare-fun b!142674 () Bool)

(assert (=> b!142674 (= e!92962 (insertStrictlySorted!94 (t!6295 (toList!858 call!15543)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45523 c!26973) b!142670))

(assert (= (and d!45523 (not c!26973)) b!142666))

(assert (= (and b!142666 c!26974) b!142669))

(assert (= (and b!142666 (not c!26974)) b!142668))

(assert (= (and b!142668 c!26972) b!142672))

(assert (= (and b!142668 (not c!26972)) b!142673))

(assert (= (or b!142672 b!142673) bm!15763))

(assert (= (or b!142669 bm!15763) bm!15764))

(assert (= (or b!142670 bm!15764) bm!15765))

(assert (= (and bm!15765 c!26971) b!142674))

(assert (= (and bm!15765 (not c!26971)) b!142665))

(assert (= (and d!45523 res!68022) b!142667))

(assert (= (and b!142667 res!68023) b!142671))

(declare-fun m!172153 () Bool)

(assert (=> bm!15765 m!172153))

(declare-fun m!172155 () Bool)

(assert (=> d!45523 m!172155))

(declare-fun m!172157 () Bool)

(assert (=> d!45523 m!172157))

(declare-fun m!172159 () Bool)

(assert (=> b!142667 m!172159))

(declare-fun m!172161 () Bool)

(assert (=> b!142674 m!172161))

(declare-fun m!172163 () Bool)

(assert (=> b!142671 m!172163))

(assert (=> d!43929 d!45523))

(declare-fun d!45525 () Bool)

(assert (=> d!45525 (= (isEmpty!424 lt!73624) (isEmpty!425 (toList!858 lt!73624)))))

(declare-fun bs!6043 () Bool)

(assert (= bs!6043 d!45525))

(declare-fun m!172165 () Bool)

(assert (=> bs!6043 m!172165))

(assert (=> b!140410 d!45525))

(declare-fun d!45527 () Bool)

(declare-fun lt!74760 () Bool)

(assert (=> d!45527 (= lt!74760 (select (content!139 (t!6295 (toList!858 lt!73425))) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun e!92963 () Bool)

(assert (=> d!45527 (= lt!74760 e!92963)))

(declare-fun res!68024 () Bool)

(assert (=> d!45527 (=> (not res!68024) (not e!92963))))

(assert (=> d!45527 (= res!68024 ((_ is Cons!1715) (t!6295 (toList!858 lt!73425))))))

(assert (=> d!45527 (= (contains!907 (t!6295 (toList!858 lt!73425)) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) lt!74760)))

(declare-fun b!142675 () Bool)

(declare-fun e!92964 () Bool)

(assert (=> b!142675 (= e!92963 e!92964)))

(declare-fun res!68025 () Bool)

(assert (=> b!142675 (=> res!68025 e!92964)))

(assert (=> b!142675 (= res!68025 (= (h!2322 (t!6295 (toList!858 lt!73425))) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(declare-fun b!142676 () Bool)

(assert (=> b!142676 (= e!92964 (contains!907 (t!6295 (t!6295 (toList!858 lt!73425))) (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))

(assert (= (and d!45527 res!68024) b!142675))

(assert (= (and b!142675 (not res!68025)) b!142676))

(assert (=> d!45527 m!170121))

(declare-fun m!172167 () Bool)

(assert (=> d!45527 m!172167))

(declare-fun m!172169 () Bool)

(assert (=> b!142676 m!172169))

(assert (=> b!140788 d!45527))

(declare-fun d!45529 () Bool)

(declare-fun e!92965 () Bool)

(assert (=> d!45529 e!92965))

(declare-fun res!68026 () Bool)

(assert (=> d!45529 (=> res!68026 e!92965)))

(declare-fun lt!74764 () Bool)

(assert (=> d!45529 (= res!68026 (not lt!74764))))

(declare-fun lt!74761 () Bool)

(assert (=> d!45529 (= lt!74764 lt!74761)))

(declare-fun lt!74763 () Unit!4387)

(declare-fun e!92966 () Unit!4387)

(assert (=> d!45529 (= lt!74763 e!92966)))

(declare-fun c!26975 () Bool)

(assert (=> d!45529 (= c!26975 lt!74761)))

(assert (=> d!45529 (= lt!74761 (containsKey!180 (toList!858 lt!73855) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45529 (= (contains!904 lt!73855 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74764)))

(declare-fun b!142677 () Bool)

(declare-fun lt!74762 () Unit!4387)

(assert (=> b!142677 (= e!92966 lt!74762)))

(assert (=> b!142677 (= lt!74762 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73855) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142677 (isDefined!129 (getValueByKey!177 (toList!858 lt!73855) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142678 () Bool)

(declare-fun Unit!4519 () Unit!4387)

(assert (=> b!142678 (= e!92966 Unit!4519)))

(declare-fun b!142679 () Bool)

(assert (=> b!142679 (= e!92965 (isDefined!129 (getValueByKey!177 (toList!858 lt!73855) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45529 c!26975) b!142677))

(assert (= (and d!45529 (not c!26975)) b!142678))

(assert (= (and d!45529 (not res!68026)) b!142679))

(declare-fun m!172171 () Bool)

(assert (=> d!45529 m!172171))

(declare-fun m!172173 () Bool)

(assert (=> b!142677 m!172173))

(assert (=> b!142677 m!170629))

(assert (=> b!142677 m!170629))

(declare-fun m!172175 () Bool)

(assert (=> b!142677 m!172175))

(assert (=> b!142679 m!170629))

(assert (=> b!142679 m!170629))

(assert (=> b!142679 m!172175))

(assert (=> bm!15629 d!45529))

(declare-fun d!45531 () Bool)

(assert (=> d!45531 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!73255)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!73255)))))

(assert (=> d!44169 d!45531))

(declare-fun b!142681 () Bool)

(declare-fun e!92967 () Option!183)

(declare-fun e!92968 () Option!183)

(assert (=> b!142681 (= e!92967 e!92968)))

(declare-fun c!26977 () Bool)

(assert (=> b!142681 (= c!26977 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))) lt!73255))))))

(declare-fun b!142682 () Bool)

(assert (=> b!142682 (= e!92968 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))) lt!73255))))

(declare-fun b!142680 () Bool)

(assert (=> b!142680 (= e!92967 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))))

(declare-fun b!142683 () Bool)

(assert (=> b!142683 (= e!92968 None!181)))

(declare-fun c!26976 () Bool)

(declare-fun d!45533 () Bool)

(assert (=> d!45533 (= c!26976 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))) lt!73255)))))

(assert (=> d!45533 (= (getValueByKey!177 (toList!858 (+!173 lt!73256 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) lt!73255) e!92967)))

(assert (= (and d!45533 c!26976) b!142680))

(assert (= (and d!45533 (not c!26976)) b!142681))

(assert (= (and b!142681 c!26977) b!142682))

(assert (= (and b!142681 (not c!26977)) b!142683))

(declare-fun m!172177 () Bool)

(assert (=> b!142682 m!172177))

(assert (=> d!44169 d!45533))

(assert (=> b!140258 d!43693))

(assert (=> d!43935 d!43931))

(assert (=> d!43935 d!43933))

(declare-fun d!45535 () Bool)

(assert (=> d!45535 (not (contains!904 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)) lt!73450))))

(assert (=> d!45535 true))

(declare-fun _$36!336 () Unit!4387)

(assert (=> d!45535 (= (choose!874 lt!73447 lt!73445 lt!73449 lt!73450) _$36!336)))

(declare-fun bs!6044 () Bool)

(assert (= bs!6044 d!45535))

(assert (=> bs!6044 m!167291))

(assert (=> bs!6044 m!167291))

(assert (=> bs!6044 m!167293))

(assert (=> d!43935 d!45535))

(declare-fun d!45537 () Bool)

(declare-fun e!92969 () Bool)

(assert (=> d!45537 e!92969))

(declare-fun res!68027 () Bool)

(assert (=> d!45537 (=> res!68027 e!92969)))

(declare-fun lt!74768 () Bool)

(assert (=> d!45537 (= res!68027 (not lt!74768))))

(declare-fun lt!74765 () Bool)

(assert (=> d!45537 (= lt!74768 lt!74765)))

(declare-fun lt!74767 () Unit!4387)

(declare-fun e!92970 () Unit!4387)

(assert (=> d!45537 (= lt!74767 e!92970)))

(declare-fun c!26978 () Bool)

(assert (=> d!45537 (= c!26978 lt!74765)))

(assert (=> d!45537 (= lt!74765 (containsKey!180 (toList!858 lt!73447) lt!73450))))

(assert (=> d!45537 (= (contains!904 lt!73447 lt!73450) lt!74768)))

(declare-fun b!142685 () Bool)

(declare-fun lt!74766 () Unit!4387)

(assert (=> b!142685 (= e!92970 lt!74766)))

(assert (=> b!142685 (= lt!74766 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73447) lt!73450))))

(assert (=> b!142685 (isDefined!129 (getValueByKey!177 (toList!858 lt!73447) lt!73450))))

(declare-fun b!142686 () Bool)

(declare-fun Unit!4520 () Unit!4387)

(assert (=> b!142686 (= e!92970 Unit!4520)))

(declare-fun b!142687 () Bool)

(assert (=> b!142687 (= e!92969 (isDefined!129 (getValueByKey!177 (toList!858 lt!73447) lt!73450)))))

(assert (= (and d!45537 c!26978) b!142685))

(assert (= (and d!45537 (not c!26978)) b!142686))

(assert (= (and d!45537 (not res!68027)) b!142687))

(declare-fun m!172179 () Bool)

(assert (=> d!45537 m!172179))

(declare-fun m!172181 () Bool)

(assert (=> b!142685 m!172181))

(declare-fun m!172183 () Bool)

(assert (=> b!142685 m!172183))

(assert (=> b!142685 m!172183))

(declare-fun m!172185 () Bool)

(assert (=> b!142685 m!172185))

(assert (=> b!142687 m!172183))

(assert (=> b!142687 m!172183))

(assert (=> b!142687 m!172185))

(assert (=> d!43935 d!45537))

(declare-fun d!45539 () Bool)

(assert (=> d!45539 (= (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73310)) (v!3285 (getValueByKey!177 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73310)))))

(assert (=> d!44041 d!45539))

(declare-fun b!142689 () Bool)

(declare-fun e!92971 () Option!183)

(declare-fun e!92972 () Option!183)

(assert (=> b!142689 (= e!92971 e!92972)))

(declare-fun c!26980 () Bool)

(assert (=> b!142689 (= c!26980 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73310))))))

(declare-fun b!142690 () Bool)

(assert (=> b!142690 (= e!92972 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) lt!73310))))

(declare-fun b!142688 () Bool)

(assert (=> b!142688 (= e!92971 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))))

(declare-fun b!142691 () Bool)

(assert (=> b!142691 (= e!92972 None!181)))

(declare-fun d!45541 () Bool)

(declare-fun c!26979 () Bool)

(assert (=> d!45541 (= c!26979 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73310)))))

(assert (=> d!45541 (= (getValueByKey!177 (toList!858 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73310) e!92971)))

(assert (= (and d!45541 c!26979) b!142688))

(assert (= (and d!45541 (not c!26979)) b!142689))

(assert (= (and b!142689 c!26980) b!142690))

(assert (= (and b!142689 (not c!26980)) b!142691))

(declare-fun m!172187 () Bool)

(assert (=> b!142690 m!172187))

(assert (=> d!44041 d!45541))

(declare-fun d!45543 () Bool)

(declare-fun res!68028 () Bool)

(declare-fun e!92973 () Bool)

(assert (=> d!45543 (=> res!68028 e!92973)))

(assert (=> d!45543 (= res!68028 (and ((_ is Cons!1715) lt!73796) (= (_1!1322 (h!2322 lt!73796)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45543 (= (containsKey!180 lt!73796 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92973)))

(declare-fun b!142692 () Bool)

(declare-fun e!92974 () Bool)

(assert (=> b!142692 (= e!92973 e!92974)))

(declare-fun res!68029 () Bool)

(assert (=> b!142692 (=> (not res!68029) (not e!92974))))

(assert (=> b!142692 (= res!68029 (and (or (not ((_ is Cons!1715) lt!73796)) (bvsle (_1!1322 (h!2322 lt!73796)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1715) lt!73796) (bvslt (_1!1322 (h!2322 lt!73796)) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142693 () Bool)

(assert (=> b!142693 (= e!92974 (containsKey!180 (t!6295 lt!73796) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45543 (not res!68028)) b!142692))

(assert (= (and b!142692 res!68029) b!142693))

(declare-fun m!172189 () Bool)

(assert (=> b!142693 m!172189))

(assert (=> b!140717 d!45543))

(declare-fun d!45545 () Bool)

(declare-fun e!92975 () Bool)

(assert (=> d!45545 e!92975))

(declare-fun res!68030 () Bool)

(assert (=> d!45545 (=> (not res!68030) (not e!92975))))

(declare-fun lt!74771 () ListLongMap!1685)

(assert (=> d!45545 (= res!68030 (contains!904 lt!74771 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74770 () List!1719)

(assert (=> d!45545 (= lt!74771 (ListLongMap!1686 lt!74770))))

(declare-fun lt!74769 () Unit!4387)

(declare-fun lt!74772 () Unit!4387)

(assert (=> d!45545 (= lt!74769 lt!74772)))

(assert (=> d!45545 (= (getValueByKey!177 lt!74770 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45545 (= lt!74772 (lemmaContainsTupThenGetReturnValue!91 lt!74770 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45545 (= lt!74770 (insertStrictlySorted!94 (toList!858 call!15650) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45545 (= (+!173 call!15650 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74771)))

(declare-fun b!142694 () Bool)

(declare-fun res!68031 () Bool)

(assert (=> b!142694 (=> (not res!68031) (not e!92975))))

(assert (=> b!142694 (= res!68031 (= (getValueByKey!177 (toList!858 lt!74771) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142695 () Bool)

(assert (=> b!142695 (= e!92975 (contains!907 (toList!858 lt!74771) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45545 res!68030) b!142694))

(assert (= (and b!142694 res!68031) b!142695))

(declare-fun m!172191 () Bool)

(assert (=> d!45545 m!172191))

(declare-fun m!172193 () Bool)

(assert (=> d!45545 m!172193))

(declare-fun m!172195 () Bool)

(assert (=> d!45545 m!172195))

(declare-fun m!172197 () Bool)

(assert (=> d!45545 m!172197))

(declare-fun m!172199 () Bool)

(assert (=> b!142694 m!172199))

(declare-fun m!172201 () Bool)

(assert (=> b!142695 m!172201))

(assert (=> b!141023 d!45545))

(declare-fun d!45547 () Bool)

(declare-fun res!68032 () Bool)

(declare-fun e!92976 () Bool)

(assert (=> d!45547 (=> res!68032 e!92976)))

(assert (=> d!45547 (= res!68032 (and ((_ is Cons!1715) (toList!858 lt!73188)) (= (_1!1322 (h!2322 (toList!858 lt!73188))) lt!73194)))))

(assert (=> d!45547 (= (containsKey!180 (toList!858 lt!73188) lt!73194) e!92976)))

(declare-fun b!142696 () Bool)

(declare-fun e!92977 () Bool)

(assert (=> b!142696 (= e!92976 e!92977)))

(declare-fun res!68033 () Bool)

(assert (=> b!142696 (=> (not res!68033) (not e!92977))))

(assert (=> b!142696 (= res!68033 (and (or (not ((_ is Cons!1715) (toList!858 lt!73188))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73188))) lt!73194)) ((_ is Cons!1715) (toList!858 lt!73188)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73188))) lt!73194)))))

(declare-fun b!142697 () Bool)

(assert (=> b!142697 (= e!92977 (containsKey!180 (t!6295 (toList!858 lt!73188)) lt!73194))))

(assert (= (and d!45547 (not res!68032)) b!142696))

(assert (= (and b!142696 res!68033) b!142697))

(declare-fun m!172203 () Bool)

(assert (=> b!142697 m!172203))

(assert (=> d!44103 d!45547))

(declare-fun bm!15766 () Bool)

(declare-fun call!15771 () List!1719)

(declare-fun call!15770 () List!1719)

(assert (=> bm!15766 (= call!15771 call!15770)))

(declare-fun b!142699 () Bool)

(declare-fun e!92979 () List!1719)

(declare-fun e!92981 () List!1719)

(assert (=> b!142699 (= e!92979 e!92981)))

(declare-fun c!26984 () Bool)

(assert (=> b!142699 (= c!26984 (and ((_ is Cons!1715) (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (= (_1!1322 (h!2322 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142700 () Bool)

(declare-fun res!68035 () Bool)

(declare-fun e!92978 () Bool)

(assert (=> b!142700 (=> (not res!68035) (not e!92978))))

(declare-fun lt!74773 () List!1719)

(assert (=> b!142700 (= res!68035 (containsKey!180 lt!74773 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun c!26982 () Bool)

(declare-fun b!142701 () Bool)

(assert (=> b!142701 (= c!26982 (and ((_ is Cons!1715) (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun e!92980 () List!1719)

(assert (=> b!142701 (= e!92981 e!92980)))

(declare-fun bm!15767 () Bool)

(declare-fun call!15769 () List!1719)

(assert (=> bm!15767 (= call!15770 call!15769)))

(declare-fun b!142702 () Bool)

(assert (=> b!142702 (= e!92981 call!15770)))

(declare-fun b!142703 () Bool)

(assert (=> b!142703 (= e!92979 call!15769)))

(declare-fun b!142704 () Bool)

(assert (=> b!142704 (= e!92978 (contains!907 lt!74773 (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun e!92982 () List!1719)

(declare-fun b!142698 () Bool)

(assert (=> b!142698 (= e!92982 (ite c!26984 (t!6295 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (ite c!26982 (Cons!1715 (h!2322 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (t!6295 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))))) Nil!1716)))))

(declare-fun d!45549 () Bool)

(assert (=> d!45549 e!92978))

(declare-fun res!68034 () Bool)

(assert (=> d!45549 (=> (not res!68034) (not e!92978))))

(assert (=> d!45549 (= res!68034 (isStrictlySorted!312 lt!74773))))

(assert (=> d!45549 (= lt!74773 e!92979)))

(declare-fun c!26983 () Bool)

(assert (=> d!45549 (= c!26983 (and ((_ is Cons!1715) (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!45549 (isStrictlySorted!312 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))))))

(assert (=> d!45549 (= (insertStrictlySorted!94 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500)))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!74773)))

(declare-fun b!142705 () Bool)

(assert (=> b!142705 (= e!92980 call!15771)))

(declare-fun b!142706 () Bool)

(assert (=> b!142706 (= e!92980 call!15771)))

(declare-fun bm!15768 () Bool)

(assert (=> bm!15768 (= call!15769 ($colon$colon!93 e!92982 (ite c!26983 (h!2322 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (tuple2!2623 (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun c!26981 () Bool)

(assert (=> bm!15768 (= c!26981 c!26983)))

(declare-fun b!142707 () Bool)

(assert (=> b!142707 (= e!92982 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 (ite c!26176 call!15499 (ite c!26177 call!15498 call!15500))))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) (_2!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (= (and d!45549 c!26983) b!142703))

(assert (= (and d!45549 (not c!26983)) b!142699))

(assert (= (and b!142699 c!26984) b!142702))

(assert (= (and b!142699 (not c!26984)) b!142701))

(assert (= (and b!142701 c!26982) b!142705))

(assert (= (and b!142701 (not c!26982)) b!142706))

(assert (= (or b!142705 b!142706) bm!15766))

(assert (= (or b!142702 bm!15766) bm!15767))

(assert (= (or b!142703 bm!15767) bm!15768))

(assert (= (and bm!15768 c!26981) b!142707))

(assert (= (and bm!15768 (not c!26981)) b!142698))

(assert (= (and d!45549 res!68034) b!142700))

(assert (= (and b!142700 res!68035) b!142704))

(declare-fun m!172205 () Bool)

(assert (=> bm!15768 m!172205))

(declare-fun m!172207 () Bool)

(assert (=> d!45549 m!172207))

(assert (=> d!45549 m!170915))

(declare-fun m!172209 () Bool)

(assert (=> b!142700 m!172209))

(declare-fun m!172211 () Bool)

(assert (=> b!142707 m!172211))

(declare-fun m!172213 () Bool)

(assert (=> b!142704 m!172213))

(assert (=> b!140933 d!45549))

(declare-fun b!142709 () Bool)

(declare-fun e!92983 () Option!183)

(declare-fun e!92984 () Option!183)

(assert (=> b!142709 (= e!92983 e!92984)))

(declare-fun c!26986 () Bool)

(assert (=> b!142709 (= c!26986 (and ((_ is Cons!1715) (t!6295 lt!73424)) (not (= (_1!1322 (h!2322 (t!6295 lt!73424))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142710 () Bool)

(assert (=> b!142710 (= e!92984 (getValueByKey!177 (t!6295 (t!6295 lt!73424)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142708 () Bool)

(assert (=> b!142708 (= e!92983 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73424)))))))

(declare-fun b!142711 () Bool)

(assert (=> b!142711 (= e!92984 None!181)))

(declare-fun d!45551 () Bool)

(declare-fun c!26985 () Bool)

(assert (=> d!45551 (= c!26985 (and ((_ is Cons!1715) (t!6295 lt!73424)) (= (_1!1322 (h!2322 (t!6295 lt!73424))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45551 (= (getValueByKey!177 (t!6295 lt!73424) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!92983)))

(assert (= (and d!45551 c!26985) b!142708))

(assert (= (and d!45551 (not c!26985)) b!142709))

(assert (= (and b!142709 c!26986) b!142710))

(assert (= (and b!142709 (not c!26986)) b!142711))

(declare-fun m!172215 () Bool)

(assert (=> b!142710 m!172215))

(assert (=> b!140624 d!45551))

(assert (=> b!140664 d!45451))

(assert (=> b!140664 d!43809))

(assert (=> d!44165 d!44167))

(declare-fun d!45553 () Bool)

(declare-fun e!92985 () Bool)

(assert (=> d!45553 e!92985))

(declare-fun res!68036 () Bool)

(assert (=> d!45553 (=> res!68036 e!92985)))

(declare-fun lt!74777 () Bool)

(assert (=> d!45553 (= res!68036 (not lt!74777))))

(declare-fun lt!74774 () Bool)

(assert (=> d!45553 (= lt!74777 lt!74774)))

(declare-fun lt!74776 () Unit!4387)

(declare-fun e!92986 () Unit!4387)

(assert (=> d!45553 (= lt!74776 e!92986)))

(declare-fun c!26987 () Bool)

(assert (=> d!45553 (= c!26987 lt!74774)))

(assert (=> d!45553 (= lt!74774 (containsKey!180 (toList!858 lt!73240) lt!73238))))

(assert (=> d!45553 (= (contains!904 lt!73240 lt!73238) lt!74777)))

(declare-fun b!142712 () Bool)

(declare-fun lt!74775 () Unit!4387)

(assert (=> b!142712 (= e!92986 lt!74775)))

(assert (=> b!142712 (= lt!74775 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73240) lt!73238))))

(assert (=> b!142712 (isDefined!129 (getValueByKey!177 (toList!858 lt!73240) lt!73238))))

(declare-fun b!142713 () Bool)

(declare-fun Unit!4521 () Unit!4387)

(assert (=> b!142713 (= e!92986 Unit!4521)))

(declare-fun b!142714 () Bool)

(assert (=> b!142714 (= e!92985 (isDefined!129 (getValueByKey!177 (toList!858 lt!73240) lt!73238)))))

(assert (= (and d!45553 c!26987) b!142712))

(assert (= (and d!45553 (not c!26987)) b!142713))

(assert (= (and d!45553 (not res!68036)) b!142714))

(declare-fun m!172217 () Bool)

(assert (=> d!45553 m!172217))

(declare-fun m!172219 () Bool)

(assert (=> b!142712 m!172219))

(assert (=> b!142712 m!169041))

(assert (=> b!142712 m!169041))

(declare-fun m!172221 () Bool)

(assert (=> b!142712 m!172221))

(assert (=> b!142714 m!169041))

(assert (=> b!142714 m!169041))

(assert (=> b!142714 m!172221))

(assert (=> d!44165 d!45553))

(assert (=> d!44165 d!44177))

(assert (=> d!44165 d!44189))

(declare-fun d!45555 () Bool)

(assert (=> d!45555 (= (apply!120 (+!173 lt!73240 (tuple2!2623 lt!73250 (zeroValue!2789 newMap!16))) lt!73238) (apply!120 lt!73240 lt!73238))))

(assert (=> d!45555 true))

(declare-fun _$34!1011 () Unit!4387)

(assert (=> d!45555 (= (choose!867 lt!73240 lt!73250 (zeroValue!2789 newMap!16) lt!73238) _$34!1011)))

(declare-fun bs!6045 () Bool)

(assert (= bs!6045 d!45555))

(assert (=> bs!6045 m!166981))

(assert (=> bs!6045 m!166981))

(assert (=> bs!6045 m!167003))

(assert (=> bs!6045 m!167001))

(assert (=> d!44165 d!45555))

(declare-fun d!45557 () Bool)

(assert (=> d!45557 (isDefined!129 (getValueByKey!177 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun lt!74778 () Unit!4387)

(assert (=> d!45557 (= lt!74778 (choose!864 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun e!92987 () Bool)

(assert (=> d!45557 e!92987))

(declare-fun res!68037 () Bool)

(assert (=> d!45557 (=> (not res!68037) (not e!92987))))

(assert (=> d!45557 (= res!68037 (isStrictlySorted!312 (toList!858 lt!73470)))))

(assert (=> d!45557 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74778)))

(declare-fun b!142715 () Bool)

(assert (=> b!142715 (= e!92987 (containsKey!180 (toList!858 lt!73470) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45557 res!68037) b!142715))

(assert (=> d!45557 m!167383))

(assert (=> d!45557 m!167383))

(assert (=> d!45557 m!168357))

(declare-fun m!172223 () Bool)

(assert (=> d!45557 m!172223))

(declare-fun m!172225 () Bool)

(assert (=> d!45557 m!172225))

(assert (=> b!142715 m!168353))

(assert (=> b!140752 d!45557))

(assert (=> b!140752 d!45413))

(assert (=> b!140752 d!43957))

(assert (=> d!43987 d!43697))

(declare-fun d!45559 () Bool)

(declare-fun e!92988 () Bool)

(assert (=> d!45559 e!92988))

(declare-fun res!68038 () Bool)

(assert (=> d!45559 (=> res!68038 e!92988)))

(declare-fun lt!74782 () Bool)

(assert (=> d!45559 (= res!68038 (not lt!74782))))

(declare-fun lt!74779 () Bool)

(assert (=> d!45559 (= lt!74782 lt!74779)))

(declare-fun lt!74781 () Unit!4387)

(declare-fun e!92989 () Unit!4387)

(assert (=> d!45559 (= lt!74781 e!92989)))

(declare-fun c!26988 () Bool)

(assert (=> d!45559 (= c!26988 lt!74779)))

(assert (=> d!45559 (= lt!74779 (containsKey!180 (toList!858 lt!73961) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45559 (= (contains!904 lt!73961 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74782)))

(declare-fun b!142716 () Bool)

(declare-fun lt!74780 () Unit!4387)

(assert (=> b!142716 (= e!92989 lt!74780)))

(assert (=> b!142716 (= lt!74780 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73961) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142716 (isDefined!129 (getValueByKey!177 (toList!858 lt!73961) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142717 () Bool)

(declare-fun Unit!4522 () Unit!4387)

(assert (=> b!142717 (= e!92989 Unit!4522)))

(declare-fun b!142718 () Bool)

(assert (=> b!142718 (= e!92988 (isDefined!129 (getValueByKey!177 (toList!858 lt!73961) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45559 c!26988) b!142716))

(assert (= (and d!45559 (not c!26988)) b!142717))

(assert (= (and d!45559 (not res!68038)) b!142718))

(assert (=> d!45559 m!166927))

(declare-fun m!172227 () Bool)

(assert (=> d!45559 m!172227))

(assert (=> b!142716 m!166927))

(declare-fun m!172229 () Bool)

(assert (=> b!142716 m!172229))

(assert (=> b!142716 m!166927))

(assert (=> b!142716 m!171709))

(assert (=> b!142716 m!171709))

(declare-fun m!172231 () Bool)

(assert (=> b!142716 m!172231))

(assert (=> b!142718 m!166927))

(assert (=> b!142718 m!171709))

(assert (=> b!142718 m!171709))

(assert (=> b!142718 m!172231))

(assert (=> b!141010 d!45559))

(declare-fun b!142719 () Bool)

(declare-fun e!92991 () Bool)

(declare-fun lt!74784 () SeekEntryResult!273)

(assert (=> b!142719 (= e!92991 (bvsge (x!16130 lt!74784) #b01111111111111111111111111111110))))

(declare-fun e!92990 () SeekEntryResult!273)

(declare-fun b!142720 () Bool)

(assert (=> b!142720 (= e!92990 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!142721 () Bool)

(declare-fun e!92994 () SeekEntryResult!273)

(assert (=> b!142721 (= e!92994 e!92990)))

(declare-fun c!26990 () Bool)

(declare-fun lt!74783 () (_ BitVec 64))

(assert (=> b!142721 (= c!26990 (or (= lt!74783 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (= (bvadd lt!74783 lt!74783) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142722 () Bool)

(assert (=> b!142722 (= e!92994 (Intermediate!273 true (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!142724 () Bool)

(assert (=> b!142724 (and (bvsge (index!3257 lt!74784) #b00000000000000000000000000000000) (bvslt (index!3257 lt!74784) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!68040 () Bool)

(assert (=> b!142724 (= res!68040 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74784)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92992 () Bool)

(assert (=> b!142724 (=> res!68040 e!92992)))

(declare-fun b!142725 () Bool)

(assert (=> b!142725 (and (bvsge (index!3257 lt!74784) #b00000000000000000000000000000000) (bvslt (index!3257 lt!74784) (size!2578 (_keys!4698 newMap!16))))))

(assert (=> b!142725 (= e!92992 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74784)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142726 () Bool)

(assert (=> b!142726 (= e!92990 (Intermediate!273 false (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!142727 () Bool)

(declare-fun e!92993 () Bool)

(assert (=> b!142727 (= e!92991 e!92993)))

(declare-fun res!68039 () Bool)

(assert (=> b!142727 (= res!68039 (and ((_ is Intermediate!273) lt!74784) (not (undefined!1085 lt!74784)) (bvslt (x!16130 lt!74784) #b01111111111111111111111111111110) (bvsge (x!16130 lt!74784) #b00000000000000000000000000000000) (bvsge (x!16130 lt!74784) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142727 (=> (not res!68039) (not e!92993))))

(declare-fun d!45561 () Bool)

(assert (=> d!45561 e!92991))

(declare-fun c!26989 () Bool)

(assert (=> d!45561 (= c!26989 (and ((_ is Intermediate!273) lt!74784) (undefined!1085 lt!74784)))))

(assert (=> d!45561 (= lt!74784 e!92994)))

(declare-fun c!26991 () Bool)

(assert (=> d!45561 (= c!26991 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!45561 (= lt!74783 (select (arr!2306 (_keys!4698 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16))))))

(assert (=> d!45561 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45561 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!74784)))

(declare-fun b!142723 () Bool)

(assert (=> b!142723 (and (bvsge (index!3257 lt!74784) #b00000000000000000000000000000000) (bvslt (index!3257 lt!74784) (size!2578 (_keys!4698 newMap!16))))))

(declare-fun res!68041 () Bool)

(assert (=> b!142723 (= res!68041 (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3257 lt!74784)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (=> b!142723 (=> res!68041 e!92992)))

(assert (=> b!142723 (= e!92993 e!92992)))

(assert (= (and d!45561 c!26991) b!142722))

(assert (= (and d!45561 (not c!26991)) b!142721))

(assert (= (and b!142721 c!26990) b!142726))

(assert (= (and b!142721 (not c!26990)) b!142720))

(assert (= (and d!45561 c!26989) b!142719))

(assert (= (and d!45561 (not c!26989)) b!142727))

(assert (= (and b!142727 res!68039) b!142723))

(assert (= (and b!142723 (not res!68041)) b!142724))

(assert (= (and b!142724 (not res!68040)) b!142725))

(declare-fun m!172233 () Bool)

(assert (=> b!142724 m!172233))

(assert (=> d!45561 m!167863))

(declare-fun m!172235 () Bool)

(assert (=> d!45561 m!172235))

(assert (=> d!45561 m!166907))

(assert (=> b!142723 m!172233))

(assert (=> b!142725 m!172233))

(assert (=> b!142720 m!167863))

(declare-fun m!172237 () Bool)

(assert (=> b!142720 m!172237))

(assert (=> b!142720 m!172237))

(assert (=> b!142720 m!166633))

(declare-fun m!172239 () Bool)

(assert (=> b!142720 m!172239))

(assert (=> b!140447 d!45561))

(declare-fun d!45563 () Bool)

(declare-fun lt!74787 () (_ BitVec 32))

(assert (=> d!45563 (and (bvsge lt!74787 #b00000000000000000000000000000000) (bvslt lt!74787 (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!45563 (= lt!74787 (choose!52 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)))))

(assert (=> d!45563 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45563 (= (nextIndex!0 (toIndex!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (mask!7279 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7279 newMap!16)) lt!74787)))

(declare-fun bs!6046 () Bool)

(assert (= bs!6046 d!45563))

(assert (=> bs!6046 m!166903))

(declare-fun m!172241 () Bool)

(assert (=> bs!6046 m!172241))

(assert (=> bs!6046 m!166907))

(assert (=> b!140447 d!45563))

(declare-fun d!45565 () Bool)

(declare-fun res!68042 () Bool)

(declare-fun e!92995 () Bool)

(assert (=> d!45565 (=> res!68042 e!92995)))

(assert (=> d!45565 (= res!68042 (and ((_ is Cons!1715) (t!6295 (toList!858 e!91171))) (= (_1!1322 (h!2322 (t!6295 (toList!858 e!91171)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!45565 (= (containsKey!180 (t!6295 (toList!858 e!91171)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!92995)))

(declare-fun b!142728 () Bool)

(declare-fun e!92996 () Bool)

(assert (=> b!142728 (= e!92995 e!92996)))

(declare-fun res!68043 () Bool)

(assert (=> b!142728 (=> (not res!68043) (not e!92996))))

(assert (=> b!142728 (= res!68043 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 e!91171)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 e!91171)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (t!6295 (toList!858 e!91171))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 e!91171)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!142729 () Bool)

(assert (=> b!142729 (= e!92996 (containsKey!180 (t!6295 (t!6295 (toList!858 e!91171))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!45565 (not res!68042)) b!142728))

(assert (= (and b!142728 res!68043) b!142729))

(assert (=> b!142729 m!166633))

(declare-fun m!172243 () Bool)

(assert (=> b!142729 m!172243))

(assert (=> b!140682 d!45565))

(declare-fun d!45567 () Bool)

(assert (=> d!45567 (= (get!1535 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73215) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44071 d!45567))

(assert (=> d!44071 d!44265))

(declare-fun d!45569 () Bool)

(assert (=> d!45569 (= (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450)) (not (isEmpty!423 (getValueByKey!177 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))))

(declare-fun bs!6047 () Bool)

(assert (= bs!6047 d!45569))

(assert (=> bs!6047 m!168331))

(declare-fun m!172245 () Bool)

(assert (=> bs!6047 m!172245))

(assert (=> b!140739 d!45569))

(declare-fun b!142731 () Bool)

(declare-fun e!92997 () Option!183)

(declare-fun e!92998 () Option!183)

(assert (=> b!142731 (= e!92997 e!92998)))

(declare-fun c!26993 () Bool)

(assert (=> b!142731 (= c!26993 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))) (not (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))))) lt!73450))))))

(declare-fun b!142732 () Bool)

(assert (=> b!142732 (= e!92998 (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))) lt!73450))))

(declare-fun b!142730 () Bool)

(assert (=> b!142730 (= e!92997 (Some!182 (_2!1322 (h!2322 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))))))))

(declare-fun b!142733 () Bool)

(assert (=> b!142733 (= e!92998 None!181)))

(declare-fun c!26992 () Bool)

(declare-fun d!45571 () Bool)

(assert (=> d!45571 (= c!26992 (and ((_ is Cons!1715) (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))) (= (_1!1322 (h!2322 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))))) lt!73450)))))

(assert (=> d!45571 (= (getValueByKey!177 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450) e!92997)))

(assert (= (and d!45571 c!26992) b!142730))

(assert (= (and d!45571 (not c!26992)) b!142731))

(assert (= (and b!142731 c!26993) b!142732))

(assert (= (and b!142731 (not c!26993)) b!142733))

(declare-fun m!172247 () Bool)

(assert (=> b!142732 m!172247))

(assert (=> b!140739 d!45571))

(declare-fun d!45573 () Bool)

(declare-fun e!92999 () Bool)

(assert (=> d!45573 e!92999))

(declare-fun res!68044 () Bool)

(assert (=> d!45573 (=> res!68044 e!92999)))

(declare-fun lt!74791 () Bool)

(assert (=> d!45573 (= res!68044 (not lt!74791))))

(declare-fun lt!74788 () Bool)

(assert (=> d!45573 (= lt!74791 lt!74788)))

(declare-fun lt!74790 () Unit!4387)

(declare-fun e!93000 () Unit!4387)

(assert (=> d!45573 (= lt!74790 e!93000)))

(declare-fun c!26994 () Bool)

(assert (=> d!45573 (= c!26994 lt!74788)))

(assert (=> d!45573 (= lt!74788 (containsKey!180 (toList!858 lt!73553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45573 (= (contains!904 lt!73553 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74791)))

(declare-fun b!142734 () Bool)

(declare-fun lt!74789 () Unit!4387)

(assert (=> b!142734 (= e!93000 lt!74789)))

(assert (=> b!142734 (= lt!74789 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142734 (isDefined!129 (getValueByKey!177 (toList!858 lt!73553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142735 () Bool)

(declare-fun Unit!4523 () Unit!4387)

(assert (=> b!142735 (= e!93000 Unit!4523)))

(declare-fun b!142736 () Bool)

(assert (=> b!142736 (= e!92999 (isDefined!129 (getValueByKey!177 (toList!858 lt!73553) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45573 c!26994) b!142734))

(assert (= (and d!45573 (not c!26994)) b!142735))

(assert (= (and d!45573 (not res!68044)) b!142736))

(declare-fun m!172249 () Bool)

(assert (=> d!45573 m!172249))

(declare-fun m!172251 () Bool)

(assert (=> b!142734 m!172251))

(declare-fun m!172253 () Bool)

(assert (=> b!142734 m!172253))

(assert (=> b!142734 m!172253))

(declare-fun m!172255 () Bool)

(assert (=> b!142734 m!172255))

(assert (=> b!142736 m!172253))

(assert (=> b!142736 m!172253))

(assert (=> b!142736 m!172255))

(assert (=> b!140304 d!45573))

(declare-fun b!142738 () Bool)

(declare-fun e!93001 () Option!183)

(declare-fun e!93002 () Option!183)

(assert (=> b!142738 (= e!93001 e!93002)))

(declare-fun c!26996 () Bool)

(assert (=> b!142738 (= c!26996 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73470))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73470)))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142739 () Bool)

(assert (=> b!142739 (= e!93002 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73470))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142737 () Bool)

(assert (=> b!142737 (= e!93001 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73470))))))))

(declare-fun b!142740 () Bool)

(assert (=> b!142740 (= e!93002 None!181)))

(declare-fun c!26995 () Bool)

(declare-fun d!45575 () Bool)

(assert (=> d!45575 (= c!26995 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73470))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73470)))) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45575 (= (getValueByKey!177 (t!6295 (toList!858 lt!73470)) (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!93001)))

(assert (= (and d!45575 c!26995) b!142737))

(assert (= (and d!45575 (not c!26995)) b!142738))

(assert (= (and b!142738 c!26996) b!142739))

(assert (= (and b!142738 (not c!26996)) b!142740))

(declare-fun m!172257 () Bool)

(assert (=> b!142739 m!172257))

(assert (=> b!140780 d!45575))

(declare-fun b!142742 () Bool)

(declare-fun e!93003 () Option!183)

(declare-fun e!93004 () Option!183)

(assert (=> b!142742 (= e!93003 e!93004)))

(declare-fun c!26998 () Bool)

(assert (=> b!142742 (= c!26998 (and ((_ is Cons!1715) (toList!858 lt!73954)) (not (= (_1!1322 (h!2322 (toList!858 lt!73954))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142743 () Bool)

(assert (=> b!142743 (= e!93004 (getValueByKey!177 (t!6295 (toList!858 lt!73954)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!142741 () Bool)

(assert (=> b!142741 (= e!93003 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73954)))))))

(declare-fun b!142744 () Bool)

(assert (=> b!142744 (= e!93004 None!181)))

(declare-fun d!45577 () Bool)

(declare-fun c!26997 () Bool)

(assert (=> d!45577 (= c!26997 (and ((_ is Cons!1715) (toList!858 lt!73954)) (= (_1!1322 (h!2322 (toList!858 lt!73954))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45577 (= (getValueByKey!177 (toList!858 lt!73954) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!93003)))

(assert (= (and d!45577 c!26997) b!142741))

(assert (= (and d!45577 (not c!26997)) b!142742))

(assert (= (and b!142742 c!26998) b!142743))

(assert (= (and b!142742 (not c!26998)) b!142744))

(declare-fun m!172259 () Bool)

(assert (=> b!142743 m!172259))

(assert (=> b!141002 d!45577))

(declare-fun d!45579 () Bool)

(declare-fun e!93005 () Bool)

(assert (=> d!45579 e!93005))

(declare-fun res!68045 () Bool)

(assert (=> d!45579 (=> res!68045 e!93005)))

(declare-fun lt!74795 () Bool)

(assert (=> d!45579 (= res!68045 (not lt!74795))))

(declare-fun lt!74792 () Bool)

(assert (=> d!45579 (= lt!74795 lt!74792)))

(declare-fun lt!74794 () Unit!4387)

(declare-fun e!93006 () Unit!4387)

(assert (=> d!45579 (= lt!74794 e!93006)))

(declare-fun c!26999 () Bool)

(assert (=> d!45579 (= c!26999 lt!74792)))

(assert (=> d!45579 (= lt!74792 (containsKey!180 (toList!858 lt!73989) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!45579 (= (contains!904 lt!73989 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74795)))

(declare-fun b!142745 () Bool)

(declare-fun lt!74793 () Unit!4387)

(assert (=> b!142745 (= e!93006 lt!74793)))

(assert (=> b!142745 (= lt!74793 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73989) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> b!142745 (isDefined!129 (getValueByKey!177 (toList!858 lt!73989) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142746 () Bool)

(declare-fun Unit!4524 () Unit!4387)

(assert (=> b!142746 (= e!93006 Unit!4524)))

(declare-fun b!142747 () Bool)

(assert (=> b!142747 (= e!93005 (isDefined!129 (getValueByKey!177 (toList!858 lt!73989) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45579 c!26999) b!142745))

(assert (= (and d!45579 (not c!26999)) b!142746))

(assert (= (and d!45579 (not res!68045)) b!142747))

(declare-fun m!172261 () Bool)

(assert (=> d!45579 m!172261))

(declare-fun m!172263 () Bool)

(assert (=> b!142745 m!172263))

(assert (=> b!142745 m!168913))

(assert (=> b!142745 m!168913))

(declare-fun m!172265 () Bool)

(assert (=> b!142745 m!172265))

(assert (=> b!142747 m!168913))

(assert (=> b!142747 m!168913))

(assert (=> b!142747 m!172265))

(assert (=> d!44133 d!45579))

(declare-fun b!142749 () Bool)

(declare-fun e!93007 () Option!183)

(declare-fun e!93008 () Option!183)

(assert (=> b!142749 (= e!93007 e!93008)))

(declare-fun c!27001 () Bool)

(assert (=> b!142749 (= c!27001 (and ((_ is Cons!1715) lt!73988) (not (= (_1!1322 (h!2322 lt!73988)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142750 () Bool)

(assert (=> b!142750 (= e!93008 (getValueByKey!177 (t!6295 lt!73988) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142748 () Bool)

(assert (=> b!142748 (= e!93007 (Some!182 (_2!1322 (h!2322 lt!73988))))))

(declare-fun b!142751 () Bool)

(assert (=> b!142751 (= e!93008 None!181)))

(declare-fun c!27000 () Bool)

(declare-fun d!45581 () Bool)

(assert (=> d!45581 (= c!27000 (and ((_ is Cons!1715) lt!73988) (= (_1!1322 (h!2322 lt!73988)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45581 (= (getValueByKey!177 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!93007)))

(assert (= (and d!45581 c!27000) b!142748))

(assert (= (and d!45581 (not c!27000)) b!142749))

(assert (= (and b!142749 c!27001) b!142750))

(assert (= (and b!142749 (not c!27001)) b!142751))

(declare-fun m!172267 () Bool)

(assert (=> b!142750 m!172267))

(assert (=> d!44133 d!45581))

(declare-fun d!45583 () Bool)

(assert (=> d!45583 (= (getValueByKey!177 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!74796 () Unit!4387)

(assert (=> d!45583 (= lt!74796 (choose!873 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!93009 () Bool)

(assert (=> d!45583 e!93009))

(declare-fun res!68046 () Bool)

(assert (=> d!45583 (=> (not res!68046) (not e!93009))))

(assert (=> d!45583 (= res!68046 (isStrictlySorted!312 lt!73988))))

(assert (=> d!45583 (= (lemmaContainsTupThenGetReturnValue!91 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74796)))

(declare-fun b!142752 () Bool)

(declare-fun res!68047 () Bool)

(assert (=> b!142752 (=> (not res!68047) (not e!93009))))

(assert (=> b!142752 (= res!68047 (containsKey!180 lt!73988 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142753 () Bool)

(assert (=> b!142753 (= e!93009 (contains!907 lt!73988 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45583 res!68046) b!142752))

(assert (= (and b!142752 res!68047) b!142753))

(assert (=> d!45583 m!168907))

(declare-fun m!172269 () Bool)

(assert (=> d!45583 m!172269))

(declare-fun m!172271 () Bool)

(assert (=> d!45583 m!172271))

(declare-fun m!172273 () Bool)

(assert (=> b!142752 m!172273))

(declare-fun m!172275 () Bool)

(assert (=> b!142753 m!172275))

(assert (=> d!44133 d!45583))

(declare-fun bm!15769 () Bool)

(declare-fun call!15774 () List!1719)

(declare-fun call!15773 () List!1719)

(assert (=> bm!15769 (= call!15774 call!15773)))

(declare-fun b!142755 () Bool)

(declare-fun e!93011 () List!1719)

(declare-fun e!93013 () List!1719)

(assert (=> b!142755 (= e!93011 e!93013)))

(declare-fun c!27005 () Bool)

(assert (=> b!142755 (= c!27005 (and ((_ is Cons!1715) (toList!858 call!15508)) (= (_1!1322 (h!2322 (toList!858 call!15508))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142756 () Bool)

(declare-fun res!68049 () Bool)

(declare-fun e!93010 () Bool)

(assert (=> b!142756 (=> (not res!68049) (not e!93010))))

(declare-fun lt!74797 () List!1719)

(assert (=> b!142756 (= res!68049 (containsKey!180 lt!74797 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142757 () Bool)

(declare-fun c!27003 () Bool)

(assert (=> b!142757 (= c!27003 (and ((_ is Cons!1715) (toList!858 call!15508)) (bvsgt (_1!1322 (h!2322 (toList!858 call!15508))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!93012 () List!1719)

(assert (=> b!142757 (= e!93013 e!93012)))

(declare-fun bm!15770 () Bool)

(declare-fun call!15772 () List!1719)

(assert (=> bm!15770 (= call!15773 call!15772)))

(declare-fun b!142758 () Bool)

(assert (=> b!142758 (= e!93013 call!15773)))

(declare-fun b!142759 () Bool)

(assert (=> b!142759 (= e!93011 call!15772)))

(declare-fun b!142760 () Bool)

(assert (=> b!142760 (= e!93010 (contains!907 lt!74797 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142754 () Bool)

(declare-fun e!93014 () List!1719)

(assert (=> b!142754 (= e!93014 (ite c!27005 (t!6295 (toList!858 call!15508)) (ite c!27003 (Cons!1715 (h!2322 (toList!858 call!15508)) (t!6295 (toList!858 call!15508))) Nil!1716)))))

(declare-fun d!45585 () Bool)

(assert (=> d!45585 e!93010))

(declare-fun res!68048 () Bool)

(assert (=> d!45585 (=> (not res!68048) (not e!93010))))

(assert (=> d!45585 (= res!68048 (isStrictlySorted!312 lt!74797))))

(assert (=> d!45585 (= lt!74797 e!93011)))

(declare-fun c!27004 () Bool)

(assert (=> d!45585 (= c!27004 (and ((_ is Cons!1715) (toList!858 call!15508)) (bvslt (_1!1322 (h!2322 (toList!858 call!15508))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45585 (isStrictlySorted!312 (toList!858 call!15508))))

(assert (=> d!45585 (= (insertStrictlySorted!94 (toList!858 call!15508) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74797)))

(declare-fun b!142761 () Bool)

(assert (=> b!142761 (= e!93012 call!15774)))

(declare-fun b!142762 () Bool)

(assert (=> b!142762 (= e!93012 call!15774)))

(declare-fun bm!15771 () Bool)

(assert (=> bm!15771 (= call!15772 ($colon$colon!93 e!93014 (ite c!27004 (h!2322 (toList!858 call!15508)) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!27002 () Bool)

(assert (=> bm!15771 (= c!27002 c!27004)))

(declare-fun b!142763 () Bool)

(assert (=> b!142763 (= e!93014 (insertStrictlySorted!94 (t!6295 (toList!858 call!15508)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!45585 c!27004) b!142759))

(assert (= (and d!45585 (not c!27004)) b!142755))

(assert (= (and b!142755 c!27005) b!142758))

(assert (= (and b!142755 (not c!27005)) b!142757))

(assert (= (and b!142757 c!27003) b!142761))

(assert (= (and b!142757 (not c!27003)) b!142762))

(assert (= (or b!142761 b!142762) bm!15769))

(assert (= (or b!142758 bm!15769) bm!15770))

(assert (= (or b!142759 bm!15770) bm!15771))

(assert (= (and bm!15771 c!27002) b!142763))

(assert (= (and bm!15771 (not c!27002)) b!142754))

(assert (= (and d!45585 res!68048) b!142756))

(assert (= (and b!142756 res!68049) b!142760))

(declare-fun m!172277 () Bool)

(assert (=> bm!15771 m!172277))

(declare-fun m!172279 () Bool)

(assert (=> d!45585 m!172279))

(declare-fun m!172281 () Bool)

(assert (=> d!45585 m!172281))

(declare-fun m!172283 () Bool)

(assert (=> b!142756 m!172283))

(declare-fun m!172285 () Bool)

(assert (=> b!142763 m!172285))

(declare-fun m!172287 () Bool)

(assert (=> b!142760 m!172287))

(assert (=> d!44133 d!45585))

(declare-fun b!142765 () Bool)

(declare-fun e!93015 () Option!183)

(declare-fun e!93016 () Option!183)

(assert (=> b!142765 (= e!93015 e!93016)))

(declare-fun c!27007 () Bool)

(assert (=> b!142765 (= c!27007 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73425))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73425)))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142766 () Bool)

(assert (=> b!142766 (= e!93016 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73425))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142764 () Bool)

(assert (=> b!142764 (= e!93015 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73425))))))))

(declare-fun b!142767 () Bool)

(assert (=> b!142767 (= e!93016 None!181)))

(declare-fun c!27006 () Bool)

(declare-fun d!45587 () Bool)

(assert (=> d!45587 (= c!27006 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73425))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73425)))) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45587 (= (getValueByKey!177 (t!6295 (toList!858 lt!73425)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!93015)))

(assert (= (and d!45587 c!27006) b!142764))

(assert (= (and d!45587 (not c!27006)) b!142765))

(assert (= (and b!142765 c!27007) b!142766))

(assert (= (and b!142765 (not c!27007)) b!142767))

(declare-fun m!172289 () Bool)

(assert (=> b!142766 m!172289))

(assert (=> b!140468 d!45587))

(declare-fun d!45589 () Bool)

(declare-fun res!68050 () Bool)

(declare-fun e!93017 () Bool)

(assert (=> d!45589 (=> res!68050 e!93017)))

(assert (=> d!45589 (= res!68050 (and ((_ is Cons!1715) lt!73758) (= (_1!1322 (h!2322 lt!73758)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45589 (= (containsKey!180 lt!73758 (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!93017)))

(declare-fun b!142768 () Bool)

(declare-fun e!93018 () Bool)

(assert (=> b!142768 (= e!93017 e!93018)))

(declare-fun res!68051 () Bool)

(assert (=> b!142768 (=> (not res!68051) (not e!93018))))

(assert (=> b!142768 (= res!68051 (and (or (not ((_ is Cons!1715) lt!73758)) (bvsle (_1!1322 (h!2322 lt!73758)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Cons!1715) lt!73758) (bvslt (_1!1322 (h!2322 lt!73758)) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142769 () Bool)

(assert (=> b!142769 (= e!93018 (containsKey!180 (t!6295 lt!73758) (_1!1322 (tuple2!2623 lt!73189 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45589 (not res!68050)) b!142768))

(assert (= (and b!142768 res!68051) b!142769))

(declare-fun m!172291 () Bool)

(assert (=> b!142769 m!172291))

(assert (=> b!140654 d!45589))

(declare-fun d!45591 () Bool)

(declare-fun e!93019 () Bool)

(assert (=> d!45591 e!93019))

(declare-fun res!68052 () Bool)

(assert (=> d!45591 (=> res!68052 e!93019)))

(declare-fun lt!74801 () Bool)

(assert (=> d!45591 (= res!68052 (not lt!74801))))

(declare-fun lt!74798 () Bool)

(assert (=> d!45591 (= lt!74801 lt!74798)))

(declare-fun lt!74800 () Unit!4387)

(declare-fun e!93020 () Unit!4387)

(assert (=> d!45591 (= lt!74800 e!93020)))

(declare-fun c!27008 () Bool)

(assert (=> d!45591 (= c!27008 lt!74798)))

(assert (=> d!45591 (= lt!74798 (containsKey!180 (toList!858 lt!74017) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(assert (=> d!45591 (= (contains!904 lt!74017 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!74801)))

(declare-fun b!142770 () Bool)

(declare-fun lt!74799 () Unit!4387)

(assert (=> b!142770 (= e!93020 lt!74799)))

(assert (=> b!142770 (= lt!74799 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!74017) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(assert (=> b!142770 (isDefined!129 (getValueByKey!177 (toList!858 lt!74017) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun b!142771 () Bool)

(declare-fun Unit!4525 () Unit!4387)

(assert (=> b!142771 (= e!93020 Unit!4525)))

(declare-fun b!142772 () Bool)

(assert (=> b!142772 (= e!93019 (isDefined!129 (getValueByKey!177 (toList!858 lt!74017) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(assert (= (and d!45591 c!27008) b!142770))

(assert (= (and d!45591 (not c!27008)) b!142771))

(assert (= (and d!45591 (not res!68052)) b!142772))

(declare-fun m!172293 () Bool)

(assert (=> d!45591 m!172293))

(declare-fun m!172295 () Bool)

(assert (=> b!142770 m!172295))

(assert (=> b!142770 m!169025))

(assert (=> b!142770 m!169025))

(declare-fun m!172297 () Bool)

(assert (=> b!142770 m!172297))

(assert (=> b!142772 m!169025))

(assert (=> b!142772 m!169025))

(assert (=> b!142772 m!172297))

(assert (=> d!44173 d!45591))

(declare-fun b!142774 () Bool)

(declare-fun e!93021 () Option!183)

(declare-fun e!93022 () Option!183)

(assert (=> b!142774 (= e!93021 e!93022)))

(declare-fun c!27010 () Bool)

(assert (=> b!142774 (= c!27010 (and ((_ is Cons!1715) lt!74016) (not (= (_1!1322 (h!2322 lt!74016)) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))))

(declare-fun b!142775 () Bool)

(assert (=> b!142775 (= e!93022 (getValueByKey!177 (t!6295 lt!74016) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun b!142773 () Bool)

(assert (=> b!142773 (= e!93021 (Some!182 (_2!1322 (h!2322 lt!74016))))))

(declare-fun b!142776 () Bool)

(assert (=> b!142776 (= e!93022 None!181)))

(declare-fun c!27009 () Bool)

(declare-fun d!45593 () Bool)

(assert (=> d!45593 (= c!27009 (and ((_ is Cons!1715) lt!74016) (= (_1!1322 (h!2322 lt!74016)) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(assert (=> d!45593 (= (getValueByKey!177 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) e!93021)))

(assert (= (and d!45593 c!27009) b!142773))

(assert (= (and d!45593 (not c!27009)) b!142774))

(assert (= (and b!142774 c!27010) b!142775))

(assert (= (and b!142774 (not c!27010)) b!142776))

(declare-fun m!172299 () Bool)

(assert (=> b!142775 m!172299))

(assert (=> d!44173 d!45593))

(declare-fun d!45595 () Bool)

(assert (=> d!45595 (= (getValueByKey!177 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun lt!74802 () Unit!4387)

(assert (=> d!45595 (= lt!74802 (choose!873 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun e!93023 () Bool)

(assert (=> d!45595 e!93023))

(declare-fun res!68053 () Bool)

(assert (=> d!45595 (=> (not res!68053) (not e!93023))))

(assert (=> d!45595 (= res!68053 (isStrictlySorted!312 lt!74016))))

(assert (=> d!45595 (= (lemmaContainsTupThenGetReturnValue!91 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!74802)))

(declare-fun b!142777 () Bool)

(declare-fun res!68054 () Bool)

(assert (=> b!142777 (=> (not res!68054) (not e!93023))))

(assert (=> b!142777 (= res!68054 (containsKey!180 lt!74016 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun b!142778 () Bool)

(assert (=> b!142778 (= e!93023 (contains!907 lt!74016 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(assert (= (and d!45595 res!68053) b!142777))

(assert (= (and b!142777 res!68054) b!142778))

(assert (=> d!45595 m!169019))

(declare-fun m!172301 () Bool)

(assert (=> d!45595 m!172301))

(declare-fun m!172303 () Bool)

(assert (=> d!45595 m!172303))

(declare-fun m!172305 () Bool)

(assert (=> b!142777 m!172305))

(declare-fun m!172307 () Bool)

(assert (=> b!142778 m!172307))

(assert (=> d!44173 d!45595))

(declare-fun bm!15772 () Bool)

(declare-fun call!15777 () List!1719)

(declare-fun call!15776 () List!1719)

(assert (=> bm!15772 (= call!15777 call!15776)))

(declare-fun b!142780 () Bool)

(declare-fun e!93025 () List!1719)

(declare-fun e!93027 () List!1719)

(assert (=> b!142780 (= e!93025 e!93027)))

(declare-fun c!27014 () Bool)

(assert (=> b!142780 (= c!27014 (and ((_ is Cons!1715) (toList!858 lt!73253)) (= (_1!1322 (h!2322 (toList!858 lt!73253))) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(declare-fun b!142781 () Bool)

(declare-fun res!68056 () Bool)

(declare-fun e!93024 () Bool)

(assert (=> b!142781 (=> (not res!68056) (not e!93024))))

(declare-fun lt!74803 () List!1719)

(assert (=> b!142781 (= res!68056 (containsKey!180 lt!74803 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(declare-fun b!142782 () Bool)

(declare-fun c!27012 () Bool)

(assert (=> b!142782 (= c!27012 (and ((_ is Cons!1715) (toList!858 lt!73253)) (bvsgt (_1!1322 (h!2322 (toList!858 lt!73253))) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(declare-fun e!93026 () List!1719)

(assert (=> b!142782 (= e!93027 e!93026)))

(declare-fun bm!15773 () Bool)

(declare-fun call!15775 () List!1719)

(assert (=> bm!15773 (= call!15776 call!15775)))

(declare-fun b!142783 () Bool)

(assert (=> b!142783 (= e!93027 call!15776)))

(declare-fun b!142784 () Bool)

(assert (=> b!142784 (= e!93025 call!15775)))

(declare-fun b!142785 () Bool)

(assert (=> b!142785 (= e!93024 (contains!907 lt!74803 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(declare-fun e!93028 () List!1719)

(declare-fun b!142779 () Bool)

(assert (=> b!142779 (= e!93028 (ite c!27014 (t!6295 (toList!858 lt!73253)) (ite c!27012 (Cons!1715 (h!2322 (toList!858 lt!73253)) (t!6295 (toList!858 lt!73253))) Nil!1716)))))

(declare-fun d!45597 () Bool)

(assert (=> d!45597 e!93024))

(declare-fun res!68055 () Bool)

(assert (=> d!45597 (=> (not res!68055) (not e!93024))))

(assert (=> d!45597 (= res!68055 (isStrictlySorted!312 lt!74803))))

(assert (=> d!45597 (= lt!74803 e!93025)))

(declare-fun c!27013 () Bool)

(assert (=> d!45597 (= c!27013 (and ((_ is Cons!1715) (toList!858 lt!73253)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73253))) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))))))))

(assert (=> d!45597 (isStrictlySorted!312 (toList!858 lt!73253))))

(assert (=> d!45597 (= (insertStrictlySorted!94 (toList!858 lt!73253) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))) lt!74803)))

(declare-fun b!142786 () Bool)

(assert (=> b!142786 (= e!93026 call!15777)))

(declare-fun b!142787 () Bool)

(assert (=> b!142787 (= e!93026 call!15777)))

(declare-fun bm!15774 () Bool)

(assert (=> bm!15774 (= call!15775 ($colon$colon!93 e!93028 (ite c!27013 (h!2322 (toList!858 lt!73253)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))))

(declare-fun c!27011 () Bool)

(assert (=> bm!15774 (= c!27011 c!27013)))

(declare-fun b!142788 () Bool)

(assert (=> b!142788 (= e!93028 (insertStrictlySorted!94 (t!6295 (toList!858 lt!73253)) (_1!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73242 (minValue!2789 newMap!16)))))))

(assert (= (and d!45597 c!27013) b!142784))

(assert (= (and d!45597 (not c!27013)) b!142780))

(assert (= (and b!142780 c!27014) b!142783))

(assert (= (and b!142780 (not c!27014)) b!142782))

(assert (= (and b!142782 c!27012) b!142786))

(assert (= (and b!142782 (not c!27012)) b!142787))

(assert (= (or b!142786 b!142787) bm!15772))

(assert (= (or b!142783 bm!15772) bm!15773))

(assert (= (or b!142784 bm!15773) bm!15774))

(assert (= (and bm!15774 c!27011) b!142788))

(assert (= (and bm!15774 (not c!27011)) b!142779))

(assert (= (and d!45597 res!68055) b!142781))

(assert (= (and b!142781 res!68056) b!142785))

(declare-fun m!172309 () Bool)

(assert (=> bm!15774 m!172309))

(declare-fun m!172311 () Bool)

(assert (=> d!45597 m!172311))

(declare-fun m!172313 () Bool)

(assert (=> d!45597 m!172313))

(declare-fun m!172315 () Bool)

(assert (=> b!142781 m!172315))

(declare-fun m!172317 () Bool)

(assert (=> b!142788 m!172317))

(declare-fun m!172319 () Bool)

(assert (=> b!142785 m!172319))

(assert (=> d!44173 d!45597))

(declare-fun d!45599 () Bool)

(assert (=> d!45599 (= (isDefined!129 (getValueByKey!177 (toList!858 lt!73203) lt!73202)) (not (isEmpty!423 (getValueByKey!177 (toList!858 lt!73203) lt!73202))))))

(declare-fun bs!6048 () Bool)

(assert (= bs!6048 d!45599))

(assert (=> bs!6048 m!167287))

(declare-fun m!172321 () Bool)

(assert (=> bs!6048 m!172321))

(assert (=> b!140377 d!45599))

(assert (=> b!140377 d!43983))

(assert (=> b!140588 d!44677))

(declare-fun b!142790 () Bool)

(declare-fun e!93029 () Option!183)

(declare-fun e!93030 () Option!183)

(assert (=> b!142790 (= e!93029 e!93030)))

(declare-fun c!27016 () Bool)

(assert (=> b!142790 (= c!27016 (and ((_ is Cons!1715) (toList!858 lt!73910)) (not (= (_1!1322 (h!2322 (toList!858 lt!73910))) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))))

(declare-fun b!142791 () Bool)

(assert (=> b!142791 (= e!93030 (getValueByKey!177 (t!6295 (toList!858 lt!73910)) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))))))

(declare-fun b!142789 () Bool)

(assert (=> b!142789 (= e!93029 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73910)))))))

(declare-fun b!142792 () Bool)

(assert (=> b!142792 (= e!93030 None!181)))

(declare-fun c!27015 () Bool)

(declare-fun d!45601 () Bool)

(assert (=> d!45601 (= c!27015 (and ((_ is Cons!1715) (toList!858 lt!73910)) (= (_1!1322 (h!2322 (toList!858 lt!73910))) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))))

(assert (=> d!45601 (= (getValueByKey!177 (toList!858 lt!73910) (_1!1322 (tuple2!2623 lt!73314 (minValue!2789 newMap!16)))) e!93029)))

(assert (= (and d!45601 c!27015) b!142789))

(assert (= (and d!45601 (not c!27015)) b!142790))

(assert (= (and b!142790 c!27016) b!142791))

(assert (= (and b!142790 (not c!27016)) b!142792))

(declare-fun m!172323 () Bool)

(assert (=> b!142791 m!172323))

(assert (=> b!140896 d!45601))

(declare-fun d!45603 () Bool)

(assert (=> d!45603 (= ($colon$colon!93 e!91820 (ite c!26443 (h!2322 (toList!858 e!91166)) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1715 (ite c!26443 (h!2322 (toList!858 e!91166)) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!91820))))

(assert (=> bm!15632 d!45603))

(assert (=> b!140531 d!43851))

(assert (=> b!140531 d!43669))

(declare-fun d!45605 () Bool)

(assert (=> d!45605 (= (apply!120 lt!73855 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73855) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6049 () Bool)

(assert (= bs!6049 d!45605))

(assert (=> bs!6049 m!169921))

(assert (=> bs!6049 m!169921))

(declare-fun m!172325 () Bool)

(assert (=> bs!6049 m!172325))

(assert (=> b!140838 d!45605))

(declare-fun d!45607 () Bool)

(declare-fun e!93031 () Bool)

(assert (=> d!45607 e!93031))

(declare-fun res!68057 () Bool)

(assert (=> d!45607 (=> (not res!68057) (not e!93031))))

(declare-fun lt!74806 () ListLongMap!1685)

(assert (=> d!45607 (= res!68057 (contains!904 lt!74806 (_1!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74805 () List!1719)

(assert (=> d!45607 (= lt!74806 (ListLongMap!1686 lt!74805))))

(declare-fun lt!74804 () Unit!4387)

(declare-fun lt!74807 () Unit!4387)

(assert (=> d!45607 (= lt!74804 lt!74807)))

(assert (=> d!45607 (= (getValueByKey!177 lt!74805 (_1!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45607 (= lt!74807 (lemmaContainsTupThenGetReturnValue!91 lt!74805 (_1!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45607 (= lt!74805 (insertStrictlySorted!94 (toList!858 (ite c!26267 call!15556 (ite c!26268 call!15555 call!15557))) (_1!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45607 (= (+!173 (ite c!26267 call!15556 (ite c!26268 call!15555 call!15557)) (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74806)))

(declare-fun b!142793 () Bool)

(declare-fun res!68058 () Bool)

(assert (=> b!142793 (=> (not res!68058) (not e!93031))))

(assert (=> b!142793 (= res!68058 (= (getValueByKey!177 (toList!858 lt!74806) (_1!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142794 () Bool)

(assert (=> b!142794 (= e!93031 (contains!907 (toList!858 lt!74806) (ite (or c!26267 c!26268) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45607 res!68057) b!142793))

(assert (= (and b!142793 res!68058) b!142794))

(declare-fun m!172327 () Bool)

(assert (=> d!45607 m!172327))

(declare-fun m!172329 () Bool)

(assert (=> d!45607 m!172329))

(declare-fun m!172331 () Bool)

(assert (=> d!45607 m!172331))

(declare-fun m!172333 () Bool)

(assert (=> d!45607 m!172333))

(declare-fun m!172335 () Bool)

(assert (=> b!142793 m!172335))

(declare-fun m!172337 () Bool)

(assert (=> b!142794 m!172337))

(assert (=> bm!15554 d!45607))

(declare-fun d!45609 () Bool)

(declare-fun res!68059 () Bool)

(declare-fun e!93032 () Bool)

(assert (=> d!45609 (=> res!68059 e!93032)))

(assert (=> d!45609 (= res!68059 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15458))) (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15458)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!45609 (= (containsKey!180 (t!6295 (toList!858 call!15458)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!93032)))

(declare-fun b!142795 () Bool)

(declare-fun e!93033 () Bool)

(assert (=> b!142795 (= e!93032 e!93033)))

(declare-fun res!68060 () Bool)

(assert (=> b!142795 (=> (not res!68060) (not e!93033))))

(assert (=> b!142795 (= res!68060 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 call!15458)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 call!15458)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))) ((_ is Cons!1715) (t!6295 (toList!858 call!15458))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 call!15458)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(declare-fun b!142796 () Bool)

(assert (=> b!142796 (= e!93033 (containsKey!180 (t!6295 (t!6295 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!45609 (not res!68059)) b!142795))

(assert (= (and b!142795 res!68060) b!142796))

(assert (=> b!142796 m!166633))

(declare-fun m!172339 () Bool)

(assert (=> b!142796 m!172339))

(assert (=> b!140479 d!45609))

(declare-fun d!45611 () Bool)

(declare-fun res!68061 () Bool)

(declare-fun e!93034 () Bool)

(assert (=> d!45611 (=> res!68061 e!93034)))

(assert (=> d!45611 (= res!68061 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45611 (= (containsKey!180 (t!6295 (toList!858 lt!73184)) #b1000000000000000000000000000000000000000000000000000000000000000) e!93034)))

(declare-fun b!142797 () Bool)

(declare-fun e!93035 () Bool)

(assert (=> b!142797 (= e!93034 e!93035)))

(declare-fun res!68062 () Bool)

(assert (=> b!142797 (=> (not res!68062) (not e!93035))))

(assert (=> b!142797 (= res!68062 (and (or (not ((_ is Cons!1715) (t!6295 (toList!858 lt!73184)))) (bvsle (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142798 () Bool)

(assert (=> b!142798 (= e!93035 (containsKey!180 (t!6295 (t!6295 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45611 (not res!68061)) b!142797))

(assert (= (and b!142797 res!68062) b!142798))

(declare-fun m!172341 () Bool)

(assert (=> b!142798 m!172341))

(assert (=> b!141095 d!45611))

(declare-fun b!142800 () Bool)

(declare-fun e!93036 () Option!183)

(declare-fun e!93037 () Option!183)

(assert (=> b!142800 (= e!93036 e!93037)))

(declare-fun c!27018 () Bool)

(assert (=> b!142800 (= c!27018 (and ((_ is Cons!1715) (toList!858 lt!73573)) (not (= (_1!1322 (h!2322 (toList!858 lt!73573))) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142801 () Bool)

(assert (=> b!142801 (= e!93037 (getValueByKey!177 (t!6295 (toList!858 lt!73573)) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142799 () Bool)

(assert (=> b!142799 (= e!93036 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73573)))))))

(declare-fun b!142802 () Bool)

(assert (=> b!142802 (= e!93037 None!181)))

(declare-fun d!45613 () Bool)

(declare-fun c!27017 () Bool)

(assert (=> d!45613 (= c!27017 (and ((_ is Cons!1715) (toList!858 lt!73573)) (= (_1!1322 (h!2322 (toList!858 lt!73573))) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45613 (= (getValueByKey!177 (toList!858 lt!73573) (_1!1322 (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16)))) e!93036)))

(assert (= (and d!45613 c!27017) b!142799))

(assert (= (and d!45613 (not c!27017)) b!142800))

(assert (= (and b!142800 c!27018) b!142801))

(assert (= (and b!142800 (not c!27018)) b!142802))

(declare-fun m!172343 () Bool)

(assert (=> b!142801 m!172343))

(assert (=> b!140324 d!45613))

(declare-fun lt!74808 () Bool)

(declare-fun d!45615 () Bool)

(assert (=> d!45615 (= lt!74808 (select (content!139 (toList!858 lt!73767)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!93038 () Bool)

(assert (=> d!45615 (= lt!74808 e!93038)))

(declare-fun res!68063 () Bool)

(assert (=> d!45615 (=> (not res!68063) (not e!93038))))

(assert (=> d!45615 (= res!68063 ((_ is Cons!1715) (toList!858 lt!73767)))))

(assert (=> d!45615 (= (contains!907 (toList!858 lt!73767) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74808)))

(declare-fun b!142803 () Bool)

(declare-fun e!93039 () Bool)

(assert (=> b!142803 (= e!93038 e!93039)))

(declare-fun res!68064 () Bool)

(assert (=> b!142803 (=> res!68064 e!93039)))

(assert (=> b!142803 (= res!68064 (= (h!2322 (toList!858 lt!73767)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142804 () Bool)

(assert (=> b!142804 (= e!93039 (contains!907 (t!6295 (toList!858 lt!73767)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45615 res!68063) b!142803))

(assert (= (and b!142803 (not res!68064)) b!142804))

(declare-fun m!172345 () Bool)

(assert (=> d!45615 m!172345))

(declare-fun m!172347 () Bool)

(assert (=> d!45615 m!172347))

(declare-fun m!172349 () Bool)

(assert (=> b!142804 m!172349))

(assert (=> b!140684 d!45615))

(assert (=> d!44087 d!43829))

(assert (=> d!44087 d!43831))

(declare-fun d!45617 () Bool)

(assert (=> d!45617 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194))))

(assert (=> d!45617 true))

(declare-fun _$12!418 () Unit!4387)

(assert (=> d!45617 (= (choose!864 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!73194) _$12!418)))

(declare-fun bs!6050 () Bool)

(assert (= bs!6050 d!45617))

(assert (=> bs!6050 m!167315))

(assert (=> bs!6050 m!167315))

(assert (=> bs!6050 m!167317))

(assert (=> d!44087 d!45617))

(declare-fun d!45619 () Bool)

(declare-fun res!68065 () Bool)

(declare-fun e!93040 () Bool)

(assert (=> d!45619 (=> res!68065 e!93040)))

(assert (=> d!45619 (= res!68065 (or ((_ is Nil!1716) (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) ((_ is Nil!1716) (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(assert (=> d!45619 (= (isStrictlySorted!312 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!93040)))

(declare-fun b!142805 () Bool)

(declare-fun e!93041 () Bool)

(assert (=> b!142805 (= e!93040 e!93041)))

(declare-fun res!68066 () Bool)

(assert (=> b!142805 (=> (not res!68066) (not e!93041))))

(assert (=> b!142805 (= res!68066 (bvslt (_1!1322 (h!2322 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))))

(declare-fun b!142806 () Bool)

(assert (=> b!142806 (= e!93041 (isStrictlySorted!312 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (= (and d!45619 (not res!68065)) b!142805))

(assert (= (and b!142805 res!68066) b!142806))

(declare-fun m!172351 () Bool)

(assert (=> b!142806 m!172351))

(assert (=> d!44087 d!45619))

(declare-fun d!45621 () Bool)

(assert (=> d!45621 (= (get!1535 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))) (v!3285 (getValueByKey!177 (toList!858 lt!73215) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43713 d!45621))

(assert (=> d!43713 d!44381))

(declare-fun b!142808 () Bool)

(declare-fun e!93042 () Option!183)

(declare-fun e!93043 () Option!183)

(assert (=> b!142808 (= e!93042 e!93043)))

(declare-fun c!27020 () Bool)

(assert (=> b!142808 (= c!27020 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15458))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15458)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))))

(declare-fun b!142809 () Bool)

(assert (=> b!142809 (= e!93043 (getValueByKey!177 (t!6295 (t!6295 (toList!858 call!15458))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun b!142807 () Bool)

(assert (=> b!142807 (= e!93042 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 call!15458))))))))

(declare-fun b!142810 () Bool)

(assert (=> b!142810 (= e!93043 None!181)))

(declare-fun c!27019 () Bool)

(declare-fun d!45623 () Bool)

(assert (=> d!45623 (= c!27019 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15458))) (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15458)))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))))

(assert (=> d!45623 (= (getValueByKey!177 (t!6295 (toList!858 call!15458)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) e!93042)))

(assert (= (and d!45623 c!27019) b!142807))

(assert (= (and d!45623 (not c!27019)) b!142808))

(assert (= (and b!142808 c!27020) b!142809))

(assert (= (and b!142808 (not c!27020)) b!142810))

(assert (=> b!142809 m!166633))

(declare-fun m!172353 () Bool)

(assert (=> b!142809 m!172353))

(assert (=> b!140495 d!45623))

(declare-fun d!45625 () Bool)

(assert (=> d!45625 (= (apply!120 lt!73961 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (getValueByKey!177 (toList!858 lt!73961) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6051 () Bool)

(assert (= bs!6051 d!45625))

(assert (=> bs!6051 m!170977))

(assert (=> bs!6051 m!170977))

(declare-fun m!172355 () Bool)

(assert (=> bs!6051 m!172355))

(assert (=> b!141007 d!45625))

(declare-fun d!45627 () Bool)

(assert (=> d!45627 (= ($colon$colon!93 e!91930 (ite c!26498 (h!2322 (toList!858 lt!73187)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (Cons!1715 (ite c!26498 (h!2322 (toList!858 lt!73187)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91930))))

(assert (=> bm!15652 d!45627))

(declare-fun d!45629 () Bool)

(declare-fun res!68067 () Bool)

(declare-fun e!93044 () Bool)

(assert (=> d!45629 (=> res!68067 e!93044)))

(assert (=> d!45629 (= res!68067 (and ((_ is Cons!1715) (toList!858 lt!73309)) (= (_1!1322 (h!2322 (toList!858 lt!73309))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45629 (= (containsKey!180 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000) e!93044)))

(declare-fun b!142811 () Bool)

(declare-fun e!93045 () Bool)

(assert (=> b!142811 (= e!93044 e!93045)))

(declare-fun res!68068 () Bool)

(assert (=> b!142811 (=> (not res!68068) (not e!93045))))

(assert (=> b!142811 (= res!68068 (and (or (not ((_ is Cons!1715) (toList!858 lt!73309))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73309))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73309)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73309))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142812 () Bool)

(assert (=> b!142812 (= e!93045 (containsKey!180 (t!6295 (toList!858 lt!73309)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45629 (not res!68067)) b!142811))

(assert (= (and b!142811 res!68068) b!142812))

(declare-fun m!172357 () Bool)

(assert (=> b!142812 m!172357))

(assert (=> d!43719 d!45629))

(declare-fun d!45631 () Bool)

(declare-fun res!68069 () Bool)

(declare-fun e!93046 () Bool)

(assert (=> d!45631 (=> res!68069 e!93046)))

(assert (=> d!45631 (= res!68069 (and ((_ is Cons!1715) (toList!858 lt!73215)) (= (_1!1322 (h!2322 (toList!858 lt!73215))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45631 (= (containsKey!180 (toList!858 lt!73215) #b1000000000000000000000000000000000000000000000000000000000000000) e!93046)))

(declare-fun b!142813 () Bool)

(declare-fun e!93047 () Bool)

(assert (=> b!142813 (= e!93046 e!93047)))

(declare-fun res!68070 () Bool)

(assert (=> b!142813 (=> (not res!68070) (not e!93047))))

(assert (=> b!142813 (= res!68070 (and (or (not ((_ is Cons!1715) (toList!858 lt!73215))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73215))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73215)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73215))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142814 () Bool)

(assert (=> b!142814 (= e!93047 (containsKey!180 (t!6295 (toList!858 lt!73215)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45631 (not res!68069)) b!142813))

(assert (= (and b!142813 res!68070) b!142814))

(declare-fun m!172359 () Bool)

(assert (=> b!142814 m!172359))

(assert (=> d!43949 d!45631))

(assert (=> b!141063 d!44347))

(declare-fun b!142816 () Bool)

(declare-fun e!93048 () Option!183)

(declare-fun e!93049 () Option!183)

(assert (=> b!142816 (= e!93048 e!93049)))

(declare-fun c!27022 () Bool)

(assert (=> b!142816 (= c!27022 (and ((_ is Cons!1715) (t!6295 lt!73459)) (not (= (_1!1322 (h!2322 (t!6295 lt!73459))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun b!142817 () Bool)

(assert (=> b!142817 (= e!93049 (getValueByKey!177 (t!6295 (t!6295 lt!73459)) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142815 () Bool)

(assert (=> b!142815 (= e!93048 (Some!182 (_2!1322 (h!2322 (t!6295 lt!73459)))))))

(declare-fun b!142818 () Bool)

(assert (=> b!142818 (= e!93049 None!181)))

(declare-fun d!45633 () Bool)

(declare-fun c!27021 () Bool)

(assert (=> d!45633 (= c!27021 (and ((_ is Cons!1715) (t!6295 lt!73459)) (= (_1!1322 (h!2322 (t!6295 lt!73459))) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45633 (= (getValueByKey!177 (t!6295 lt!73459) (_1!1322 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) e!93048)))

(assert (= (and d!45633 c!27021) b!142815))

(assert (= (and d!45633 (not c!27021)) b!142816))

(assert (= (and b!142816 c!27022) b!142817))

(assert (= (and b!142816 (not c!27022)) b!142818))

(declare-fun m!172361 () Bool)

(assert (=> b!142817 m!172361))

(assert (=> b!140988 d!45633))

(declare-fun d!45635 () Bool)

(assert (=> d!45635 (not (contains!904 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590)) lt!73591))))

(declare-fun lt!74809 () Unit!4387)

(assert (=> d!45635 (= lt!74809 (choose!874 lt!73588 lt!73586 lt!73590 lt!73591))))

(declare-fun e!93050 () Bool)

(assert (=> d!45635 e!93050))

(declare-fun res!68071 () Bool)

(assert (=> d!45635 (=> (not res!68071) (not e!93050))))

(assert (=> d!45635 (= res!68071 (not (contains!904 lt!73588 lt!73591)))))

(assert (=> d!45635 (= (addStillNotContains!66 lt!73588 lt!73586 lt!73590 lt!73591) lt!74809)))

(declare-fun b!142819 () Bool)

(assert (=> b!142819 (= e!93050 (not (= lt!73586 lt!73591)))))

(assert (= (and d!45635 res!68071) b!142819))

(assert (=> d!45635 m!167715))

(assert (=> d!45635 m!167715))

(assert (=> d!45635 m!167717))

(declare-fun m!172363 () Bool)

(assert (=> d!45635 m!172363))

(declare-fun m!172365 () Bool)

(assert (=> d!45635 m!172365))

(assert (=> b!140366 d!45635))

(declare-fun d!45637 () Bool)

(declare-fun e!93051 () Bool)

(assert (=> d!45637 e!93051))

(declare-fun res!68072 () Bool)

(assert (=> d!45637 (=> res!68072 e!93051)))

(declare-fun lt!74813 () Bool)

(assert (=> d!45637 (= res!68072 (not lt!74813))))

(declare-fun lt!74810 () Bool)

(assert (=> d!45637 (= lt!74813 lt!74810)))

(declare-fun lt!74812 () Unit!4387)

(declare-fun e!93052 () Unit!4387)

(assert (=> d!45637 (= lt!74812 e!93052)))

(declare-fun c!27023 () Bool)

(assert (=> d!45637 (= c!27023 lt!74810)))

(assert (=> d!45637 (= lt!74810 (containsKey!180 (toList!858 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590))) lt!73591))))

(assert (=> d!45637 (= (contains!904 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590)) lt!73591) lt!74813)))

(declare-fun b!142820 () Bool)

(declare-fun lt!74811 () Unit!4387)

(assert (=> b!142820 (= e!93052 lt!74811)))

(assert (=> b!142820 (= lt!74811 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590))) lt!73591))))

(assert (=> b!142820 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590))) lt!73591))))

(declare-fun b!142821 () Bool)

(declare-fun Unit!4526 () Unit!4387)

(assert (=> b!142821 (= e!93052 Unit!4526)))

(declare-fun b!142822 () Bool)

(assert (=> b!142822 (= e!93051 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590))) lt!73591)))))

(assert (= (and d!45637 c!27023) b!142820))

(assert (= (and d!45637 (not c!27023)) b!142821))

(assert (= (and d!45637 (not res!68072)) b!142822))

(declare-fun m!172367 () Bool)

(assert (=> d!45637 m!172367))

(declare-fun m!172369 () Bool)

(assert (=> b!142820 m!172369))

(declare-fun m!172371 () Bool)

(assert (=> b!142820 m!172371))

(assert (=> b!142820 m!172371))

(declare-fun m!172373 () Bool)

(assert (=> b!142820 m!172373))

(assert (=> b!142822 m!172371))

(assert (=> b!142822 m!172371))

(assert (=> b!142822 m!172373))

(assert (=> b!140366 d!45637))

(declare-fun d!45639 () Bool)

(declare-fun e!93053 () Bool)

(assert (=> d!45639 e!93053))

(declare-fun res!68073 () Bool)

(assert (=> d!45639 (=> (not res!68073) (not e!93053))))

(declare-fun lt!74816 () ListLongMap!1685)

(assert (=> d!45639 (= res!68073 (contains!904 lt!74816 (_1!1322 (tuple2!2623 lt!73586 lt!73590))))))

(declare-fun lt!74815 () List!1719)

(assert (=> d!45639 (= lt!74816 (ListLongMap!1686 lt!74815))))

(declare-fun lt!74814 () Unit!4387)

(declare-fun lt!74817 () Unit!4387)

(assert (=> d!45639 (= lt!74814 lt!74817)))

(assert (=> d!45639 (= (getValueByKey!177 lt!74815 (_1!1322 (tuple2!2623 lt!73586 lt!73590))) (Some!182 (_2!1322 (tuple2!2623 lt!73586 lt!73590))))))

(assert (=> d!45639 (= lt!74817 (lemmaContainsTupThenGetReturnValue!91 lt!74815 (_1!1322 (tuple2!2623 lt!73586 lt!73590)) (_2!1322 (tuple2!2623 lt!73586 lt!73590))))))

(assert (=> d!45639 (= lt!74815 (insertStrictlySorted!94 (toList!858 lt!73588) (_1!1322 (tuple2!2623 lt!73586 lt!73590)) (_2!1322 (tuple2!2623 lt!73586 lt!73590))))))

(assert (=> d!45639 (= (+!173 lt!73588 (tuple2!2623 lt!73586 lt!73590)) lt!74816)))

(declare-fun b!142823 () Bool)

(declare-fun res!68074 () Bool)

(assert (=> b!142823 (=> (not res!68074) (not e!93053))))

(assert (=> b!142823 (= res!68074 (= (getValueByKey!177 (toList!858 lt!74816) (_1!1322 (tuple2!2623 lt!73586 lt!73590))) (Some!182 (_2!1322 (tuple2!2623 lt!73586 lt!73590)))))))

(declare-fun b!142824 () Bool)

(assert (=> b!142824 (= e!93053 (contains!907 (toList!858 lt!74816) (tuple2!2623 lt!73586 lt!73590)))))

(assert (= (and d!45639 res!68073) b!142823))

(assert (= (and b!142823 res!68074) b!142824))

(declare-fun m!172375 () Bool)

(assert (=> d!45639 m!172375))

(declare-fun m!172377 () Bool)

(assert (=> d!45639 m!172377))

(declare-fun m!172379 () Bool)

(assert (=> d!45639 m!172379))

(declare-fun m!172381 () Bool)

(assert (=> d!45639 m!172381))

(declare-fun m!172383 () Bool)

(assert (=> b!142823 m!172383))

(declare-fun m!172385 () Bool)

(assert (=> b!142824 m!172385))

(assert (=> b!140366 d!45639))

(assert (=> b!140366 d!44145))

(declare-fun d!45641 () Bool)

(declare-fun e!93054 () Bool)

(assert (=> d!45641 e!93054))

(declare-fun res!68075 () Bool)

(assert (=> d!45641 (=> (not res!68075) (not e!93054))))

(declare-fun lt!74820 () ListLongMap!1685)

(assert (=> d!45641 (= res!68075 (contains!904 lt!74820 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74819 () List!1719)

(assert (=> d!45641 (= lt!74820 (ListLongMap!1686 lt!74819))))

(declare-fun lt!74818 () Unit!4387)

(declare-fun lt!74821 () Unit!4387)

(assert (=> d!45641 (= lt!74818 lt!74821)))

(assert (=> d!45641 (= (getValueByKey!177 lt!74819 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45641 (= lt!74821 (lemmaContainsTupThenGetReturnValue!91 lt!74819 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45641 (= lt!74819 (insertStrictlySorted!94 (toList!858 call!15568) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45641 (= (+!173 call!15568 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74820)))

(declare-fun b!142825 () Bool)

(declare-fun res!68076 () Bool)

(assert (=> b!142825 (=> (not res!68076) (not e!93054))))

(assert (=> b!142825 (= res!68076 (= (getValueByKey!177 (toList!858 lt!74820) (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142826 () Bool)

(assert (=> b!142826 (= e!93054 (contains!907 (toList!858 lt!74820) (tuple2!2623 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) (get!1531 (select (arr!2307 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45641 res!68075) b!142825))

(assert (= (and b!142825 res!68076) b!142826))

(declare-fun m!172387 () Bool)

(assert (=> d!45641 m!172387))

(declare-fun m!172389 () Bool)

(assert (=> d!45641 m!172389))

(declare-fun m!172391 () Bool)

(assert (=> d!45641 m!172391))

(declare-fun m!172393 () Bool)

(assert (=> d!45641 m!172393))

(declare-fun m!172395 () Bool)

(assert (=> b!142825 m!172395))

(declare-fun m!172397 () Bool)

(assert (=> b!142826 m!172397))

(assert (=> b!140366 d!45641))

(declare-fun d!45643 () Bool)

(assert (=> d!45643 (= (isEmpty!423 (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!182) (getValueByKey!177 (toList!858 lt!73184) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!43709 d!45643))

(assert (=> b!140475 d!45073))

(assert (=> d!44037 d!44017))

(declare-fun d!45645 () Bool)

(declare-fun e!93055 () Bool)

(assert (=> d!45645 e!93055))

(declare-fun res!68077 () Bool)

(assert (=> d!45645 (=> res!68077 e!93055)))

(declare-fun lt!74825 () Bool)

(assert (=> d!45645 (= res!68077 (not lt!74825))))

(declare-fun lt!74822 () Bool)

(assert (=> d!45645 (= lt!74825 lt!74822)))

(declare-fun lt!74824 () Unit!4387)

(declare-fun e!93056 () Unit!4387)

(assert (=> d!45645 (= lt!74824 e!93056)))

(declare-fun c!27024 () Bool)

(assert (=> d!45645 (= c!27024 lt!74822)))

(assert (=> d!45645 (= lt!74822 (containsKey!180 (toList!858 lt!73328) lt!73327))))

(assert (=> d!45645 (= (contains!904 lt!73328 lt!73327) lt!74825)))

(declare-fun b!142827 () Bool)

(declare-fun lt!74823 () Unit!4387)

(assert (=> b!142827 (= e!93056 lt!74823)))

(assert (=> b!142827 (= lt!74823 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73328) lt!73327))))

(assert (=> b!142827 (isDefined!129 (getValueByKey!177 (toList!858 lt!73328) lt!73327))))

(declare-fun b!142828 () Bool)

(declare-fun Unit!4527 () Unit!4387)

(assert (=> b!142828 (= e!93056 Unit!4527)))

(declare-fun b!142829 () Bool)

(assert (=> b!142829 (= e!93055 (isDefined!129 (getValueByKey!177 (toList!858 lt!73328) lt!73327)))))

(assert (= (and d!45645 c!27024) b!142827))

(assert (= (and d!45645 (not c!27024)) b!142828))

(assert (= (and d!45645 (not res!68077)) b!142829))

(declare-fun m!172399 () Bool)

(assert (=> d!45645 m!172399))

(declare-fun m!172401 () Bool)

(assert (=> b!142827 m!172401))

(assert (=> b!142827 m!168661))

(assert (=> b!142827 m!168661))

(declare-fun m!172403 () Bool)

(assert (=> b!142827 m!172403))

(assert (=> b!142829 m!168661))

(assert (=> b!142829 m!168661))

(assert (=> b!142829 m!172403))

(assert (=> d!44037 d!45645))

(declare-fun d!45647 () Bool)

(assert (=> d!45647 (= (apply!120 (+!173 lt!73328 (tuple2!2623 lt!73324 (minValue!2789 newMap!16))) lt!73327) (apply!120 lt!73328 lt!73327))))

(assert (=> d!45647 true))

(declare-fun _$34!1012 () Unit!4387)

(assert (=> d!45647 (= (choose!867 lt!73328 lt!73324 (minValue!2789 newMap!16) lt!73327) _$34!1012)))

(declare-fun bs!6052 () Bool)

(assert (= bs!6052 d!45647))

(assert (=> bs!6052 m!167147))

(assert (=> bs!6052 m!167147))

(assert (=> bs!6052 m!167149))

(assert (=> bs!6052 m!167145))

(assert (=> d!44037 d!45647))

(assert (=> d!44037 d!44033))

(assert (=> d!44037 d!44035))

(declare-fun d!45649 () Bool)

(assert (=> d!45649 (= (get!1535 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3285 (getValueByKey!177 (toList!858 lt!73309) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44097 d!45649))

(assert (=> d!44097 d!44773))

(declare-fun bm!15775 () Bool)

(declare-fun call!15780 () List!1719)

(declare-fun call!15779 () List!1719)

(assert (=> bm!15775 (= call!15780 call!15779)))

(declare-fun b!142831 () Bool)

(declare-fun e!93058 () List!1719)

(declare-fun e!93060 () List!1719)

(assert (=> b!142831 (= e!93058 e!93060)))

(declare-fun c!27028 () Bool)

(assert (=> b!142831 (= c!27028 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15501))) (= (_1!1322 (h!2322 (t!6295 (toList!858 call!15501)))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142832 () Bool)

(declare-fun res!68079 () Bool)

(declare-fun e!93057 () Bool)

(assert (=> b!142832 (=> (not res!68079) (not e!93057))))

(declare-fun lt!74826 () List!1719)

(assert (=> b!142832 (= res!68079 (containsKey!180 lt!74826 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142833 () Bool)

(declare-fun c!27026 () Bool)

(assert (=> b!142833 (= c!27026 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15501))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 call!15501)))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!93059 () List!1719)

(assert (=> b!142833 (= e!93060 e!93059)))

(declare-fun bm!15776 () Bool)

(declare-fun call!15778 () List!1719)

(assert (=> bm!15776 (= call!15779 call!15778)))

(declare-fun b!142834 () Bool)

(assert (=> b!142834 (= e!93060 call!15779)))

(declare-fun b!142835 () Bool)

(assert (=> b!142835 (= e!93058 call!15778)))

(declare-fun b!142836 () Bool)

(assert (=> b!142836 (= e!93057 (contains!907 lt!74826 (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142830 () Bool)

(declare-fun e!93061 () List!1719)

(assert (=> b!142830 (= e!93061 (ite c!27028 (t!6295 (t!6295 (toList!858 call!15501))) (ite c!27026 (Cons!1715 (h!2322 (t!6295 (toList!858 call!15501))) (t!6295 (t!6295 (toList!858 call!15501)))) Nil!1716)))))

(declare-fun d!45651 () Bool)

(assert (=> d!45651 e!93057))

(declare-fun res!68078 () Bool)

(assert (=> d!45651 (=> (not res!68078) (not e!93057))))

(assert (=> d!45651 (= res!68078 (isStrictlySorted!312 lt!74826))))

(assert (=> d!45651 (= lt!74826 e!93058)))

(declare-fun c!27027 () Bool)

(assert (=> d!45651 (= c!27027 (and ((_ is Cons!1715) (t!6295 (toList!858 call!15501))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 call!15501)))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45651 (isStrictlySorted!312 (t!6295 (toList!858 call!15501)))))

(assert (=> d!45651 (= (insertStrictlySorted!94 (t!6295 (toList!858 call!15501)) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74826)))

(declare-fun b!142837 () Bool)

(assert (=> b!142837 (= e!93059 call!15780)))

(declare-fun b!142838 () Bool)

(assert (=> b!142838 (= e!93059 call!15780)))

(declare-fun bm!15777 () Bool)

(assert (=> bm!15777 (= call!15778 ($colon$colon!93 e!93061 (ite c!27027 (h!2322 (t!6295 (toList!858 call!15501))) (tuple2!2623 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!27025 () Bool)

(assert (=> bm!15777 (= c!27025 c!27027)))

(declare-fun b!142839 () Bool)

(assert (=> b!142839 (= e!93061 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 call!15501))) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45651 c!27027) b!142835))

(assert (= (and d!45651 (not c!27027)) b!142831))

(assert (= (and b!142831 c!27028) b!142834))

(assert (= (and b!142831 (not c!27028)) b!142833))

(assert (= (and b!142833 c!27026) b!142837))

(assert (= (and b!142833 (not c!27026)) b!142838))

(assert (= (or b!142837 b!142838) bm!15775))

(assert (= (or b!142834 bm!15775) bm!15776))

(assert (= (or b!142835 bm!15776) bm!15777))

(assert (= (and bm!15777 c!27025) b!142839))

(assert (= (and bm!15777 (not c!27025)) b!142830))

(assert (= (and d!45651 res!68078) b!142832))

(assert (= (and b!142832 res!68079) b!142836))

(declare-fun m!172405 () Bool)

(assert (=> bm!15777 m!172405))

(declare-fun m!172407 () Bool)

(assert (=> d!45651 m!172407))

(assert (=> d!45651 m!171373))

(declare-fun m!172409 () Bool)

(assert (=> b!142832 m!172409))

(declare-fun m!172411 () Bool)

(assert (=> b!142839 m!172411))

(declare-fun m!172413 () Bool)

(assert (=> b!142836 m!172413))

(assert (=> b!140680 d!45651))

(declare-fun b!142841 () Bool)

(declare-fun e!93062 () Option!183)

(declare-fun e!93063 () Option!183)

(assert (=> b!142841 (= e!93062 e!93063)))

(declare-fun c!27030 () Bool)

(assert (=> b!142841 (= c!27030 (and ((_ is Cons!1715) (toList!858 lt!73799)) (not (= (_1!1322 (h!2322 (toList!858 lt!73799))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun b!142842 () Bool)

(assert (=> b!142842 (= e!93063 (getValueByKey!177 (t!6295 (toList!858 lt!73799)) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142840 () Bool)

(assert (=> b!142840 (= e!93062 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73799)))))))

(declare-fun b!142843 () Bool)

(assert (=> b!142843 (= e!93063 None!181)))

(declare-fun c!27029 () Bool)

(declare-fun d!45653 () Bool)

(assert (=> d!45653 (= c!27029 (and ((_ is Cons!1715) (toList!858 lt!73799)) (= (_1!1322 (h!2322 (toList!858 lt!73799))) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (=> d!45653 (= (getValueByKey!177 (toList!858 lt!73799) (_1!1322 (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) e!93062)))

(assert (= (and d!45653 c!27029) b!142840))

(assert (= (and d!45653 (not c!27029)) b!142841))

(assert (= (and b!142841 c!27030) b!142842))

(assert (= (and b!142841 (not c!27030)) b!142843))

(declare-fun m!172415 () Bool)

(assert (=> b!142842 m!172415))

(assert (=> b!140729 d!45653))

(assert (=> b!141060 d!44371))

(assert (=> b!141060 d!44209))

(declare-fun d!45655 () Bool)

(assert (=> d!45655 (contains!904 (getCurrentListMap!531 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 lt!73406) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122))))))

(assert (=> d!45655 true))

(declare-fun _$16!159 () Unit!4387)

(assert (=> d!45655 (= (choose!868 lt!73406 lt!73413 (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (defaultEntry!2939 newMap!16)) _$16!159)))

(declare-fun bs!6053 () Bool)

(assert (= bs!6053 d!45655))

(assert (=> bs!6053 m!167189))

(assert (=> bs!6053 m!167995))

(assert (=> bs!6053 m!167189))

(assert (=> bs!6053 m!167995))

(assert (=> bs!6053 m!167997))

(assert (=> d!43857 d!45655))

(assert (=> d!43857 d!43697))

(declare-fun b!142845 () Bool)

(declare-fun e!93064 () Option!183)

(declare-fun e!93065 () Option!183)

(assert (=> b!142845 (= e!93064 e!93065)))

(declare-fun c!27032 () Bool)

(assert (=> b!142845 (= c!27032 (and ((_ is Cons!1715) (toList!858 lt!73568)) (not (= (_1!1322 (h!2322 (toList!858 lt!73568))) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142846 () Bool)

(assert (=> b!142846 (= e!93065 (getValueByKey!177 (t!6295 (toList!858 lt!73568)) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142844 () Bool)

(assert (=> b!142844 (= e!93064 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73568)))))))

(declare-fun b!142847 () Bool)

(assert (=> b!142847 (= e!93065 None!181)))

(declare-fun c!27031 () Bool)

(declare-fun d!45657 () Bool)

(assert (=> d!45657 (= c!27031 (and ((_ is Cons!1715) (toList!858 lt!73568)) (= (_1!1322 (h!2322 (toList!858 lt!73568))) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45657 (= (getValueByKey!177 (toList!858 lt!73568) (_1!1322 (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!93064)))

(assert (= (and d!45657 c!27031) b!142844))

(assert (= (and d!45657 (not c!27031)) b!142845))

(assert (= (and b!142845 c!27032) b!142846))

(assert (= (and b!142845 (not c!27032)) b!142847))

(declare-fun m!172417 () Bool)

(assert (=> b!142846 m!172417))

(assert (=> b!140321 d!45657))

(declare-fun d!45659 () Bool)

(assert (=> d!45659 (arrayContainsKey!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 #b00000000000000000000000000000000)))

(declare-fun lt!74827 () Unit!4387)

(assert (=> d!45659 (= lt!74827 (choose!13 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 #b00000000000000000000000000000000))))

(assert (=> d!45659 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!45659 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 #b00000000000000000000000000000000) lt!74827)))

(declare-fun bs!6054 () Bool)

(assert (= bs!6054 d!45659))

(assert (=> bs!6054 m!168111))

(declare-fun m!172419 () Bool)

(assert (=> bs!6054 m!172419))

(assert (=> b!140592 d!45659))

(declare-fun d!45661 () Bool)

(declare-fun res!68080 () Bool)

(declare-fun e!93066 () Bool)

(assert (=> d!45661 (=> res!68080 e!93066)))

(assert (=> d!45661 (= res!68080 (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) lt!73736))))

(assert (=> d!45661 (= (arrayContainsKey!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 #b00000000000000000000000000000000) e!93066)))

(declare-fun b!142848 () Bool)

(declare-fun e!93067 () Bool)

(assert (=> b!142848 (= e!93066 e!93067)))

(declare-fun res!68081 () Bool)

(assert (=> b!142848 (=> (not res!68081) (not e!93067))))

(assert (=> b!142848 (= res!68081 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))))

(declare-fun b!142849 () Bool)

(assert (=> b!142849 (= e!93067 (arrayContainsKey!0 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) lt!73736 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!45661 (not res!68080)) b!142848))

(assert (= (and b!142848 res!68081) b!142849))

(assert (=> d!45661 m!167977))

(declare-fun m!172421 () Bool)

(assert (=> b!142849 m!172421))

(assert (=> b!140592 d!45661))

(declare-fun b!142850 () Bool)

(declare-fun e!93068 () SeekEntryResult!273)

(declare-fun e!93069 () SeekEntryResult!273)

(assert (=> b!142850 (= e!93068 e!93069)))

(declare-fun lt!74829 () SeekEntryResult!273)

(declare-fun lt!74830 () (_ BitVec 64))

(assert (=> b!142850 (= lt!74830 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (index!3257 lt!74829)))))

(declare-fun c!27034 () Bool)

(assert (=> b!142850 (= c!27034 (= lt!74830 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!142851 () Bool)

(declare-fun c!27033 () Bool)

(assert (=> b!142851 (= c!27033 (= lt!74830 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!93070 () SeekEntryResult!273)

(assert (=> b!142851 (= e!93069 e!93070)))

(declare-fun b!142852 () Bool)

(assert (=> b!142852 (= e!93068 Undefined!273)))

(declare-fun d!45663 () Bool)

(declare-fun lt!74828 () SeekEntryResult!273)

(assert (=> d!45663 (and (or ((_ is Undefined!273) lt!74828) (not ((_ is Found!273) lt!74828)) (and (bvsge (index!3256 lt!74828) #b00000000000000000000000000000000) (bvslt (index!3256 lt!74828) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))) (or ((_ is Undefined!273) lt!74828) ((_ is Found!273) lt!74828) (not ((_ is MissingZero!273) lt!74828)) (and (bvsge (index!3255 lt!74828) #b00000000000000000000000000000000) (bvslt (index!3255 lt!74828) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))) (or ((_ is Undefined!273) lt!74828) ((_ is Found!273) lt!74828) ((_ is MissingZero!273) lt!74828) (not ((_ is MissingVacant!273) lt!74828)) (and (bvsge (index!3258 lt!74828) #b00000000000000000000000000000000) (bvslt (index!3258 lt!74828) (size!2578 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))))))) (or ((_ is Undefined!273) lt!74828) (ite ((_ is Found!273) lt!74828) (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (index!3256 lt!74828)) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!273) lt!74828) (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (index!3255 lt!74828)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!273) lt!74828) (= (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) (index!3258 lt!74828)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45663 (= lt!74828 e!93068)))

(declare-fun c!27035 () Bool)

(assert (=> d!45663 (= c!27035 (and ((_ is Intermediate!273) lt!74829) (undefined!1085 lt!74829)))))

(assert (=> d!45663 (= lt!74829 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) (mask!7279 newMap!16)) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)))))

(assert (=> d!45663 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45663 (= (seekEntryOrOpen!0 (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)) lt!74828)))

(declare-fun b!142853 () Bool)

(assert (=> b!142853 (= e!93070 (MissingZero!273 (index!3257 lt!74829)))))

(declare-fun b!142854 () Bool)

(assert (=> b!142854 (= e!93070 (seekKeyOrZeroReturnVacant!0 (x!16130 lt!74829) (index!3257 lt!74829) (index!3257 lt!74829) (select (arr!2306 (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16)))) #b00000000000000000000000000000000) (array!4880 (store (arr!2306 (_keys!4698 newMap!16)) (ite c!26141 (index!3258 lt!73122) (index!3255 lt!73122)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (size!2578 (_keys!4698 newMap!16))) (mask!7279 newMap!16)))))

(declare-fun b!142855 () Bool)

(assert (=> b!142855 (= e!93069 (Found!273 (index!3257 lt!74829)))))

(assert (= (and d!45663 c!27035) b!142852))

(assert (= (and d!45663 (not c!27035)) b!142850))

(assert (= (and b!142850 c!27034) b!142855))

(assert (= (and b!142850 (not c!27034)) b!142851))

(assert (= (and b!142851 c!27033) b!142853))

(assert (= (and b!142851 (not c!27033)) b!142854))

(declare-fun m!172423 () Bool)

(assert (=> b!142850 m!172423))

(assert (=> d!45663 m!167977))

(declare-fun m!172425 () Bool)

(assert (=> d!45663 m!172425))

(assert (=> d!45663 m!172425))

(assert (=> d!45663 m!167977))

(declare-fun m!172427 () Bool)

(assert (=> d!45663 m!172427))

(assert (=> d!45663 m!166907))

(declare-fun m!172429 () Bool)

(assert (=> d!45663 m!172429))

(declare-fun m!172431 () Bool)

(assert (=> d!45663 m!172431))

(declare-fun m!172433 () Bool)

(assert (=> d!45663 m!172433))

(assert (=> b!142854 m!167977))

(declare-fun m!172435 () Bool)

(assert (=> b!142854 m!172435))

(assert (=> b!140592 d!45663))

(declare-fun d!45665 () Bool)

(declare-fun e!93071 () Bool)

(assert (=> d!45665 e!93071))

(declare-fun res!68082 () Bool)

(assert (=> d!45665 (=> (not res!68082) (not e!93071))))

(declare-fun lt!74833 () ListLongMap!1685)

(assert (=> d!45665 (= res!68082 (contains!904 lt!74833 (_1!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74832 () List!1719)

(assert (=> d!45665 (= lt!74833 (ListLongMap!1686 lt!74832))))

(declare-fun lt!74831 () Unit!4387)

(declare-fun lt!74834 () Unit!4387)

(assert (=> d!45665 (= lt!74831 lt!74834)))

(assert (=> d!45665 (= (getValueByKey!177 lt!74832 (_1!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45665 (= lt!74834 (lemmaContainsTupThenGetReturnValue!91 lt!74832 (_1!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45665 (= lt!74832 (insertStrictlySorted!94 (toList!858 (ite c!26345 call!15583 (ite c!26346 call!15582 call!15584))) (_1!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45665 (= (+!173 (ite c!26345 call!15583 (ite c!26346 call!15582 call!15584)) (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74833)))

(declare-fun b!142856 () Bool)

(declare-fun res!68083 () Bool)

(assert (=> b!142856 (=> (not res!68083) (not e!93071))))

(assert (=> b!142856 (= res!68083 (= (getValueByKey!177 (toList!858 lt!74833) (_1!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!182 (_2!1322 (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142857 () Bool)

(assert (=> b!142857 (= e!93071 (contains!907 (toList!858 lt!74833) (ite (or c!26345 c!26346) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45665 res!68082) b!142856))

(assert (= (and b!142856 res!68083) b!142857))

(declare-fun m!172437 () Bool)

(assert (=> d!45665 m!172437))

(declare-fun m!172439 () Bool)

(assert (=> d!45665 m!172439))

(declare-fun m!172441 () Bool)

(assert (=> d!45665 m!172441))

(declare-fun m!172443 () Bool)

(assert (=> d!45665 m!172443))

(declare-fun m!172445 () Bool)

(assert (=> b!142856 m!172445))

(declare-fun m!172447 () Bool)

(assert (=> b!142857 m!172447))

(assert (=> bm!15581 d!45665))

(assert (=> b!140517 d!44253))

(declare-fun d!45667 () Bool)

(assert (=> d!45667 (isDefined!129 (getValueByKey!177 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun lt!74835 () Unit!4387)

(assert (=> d!45667 (= lt!74835 (choose!864 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(declare-fun e!93072 () Bool)

(assert (=> d!45667 e!93072))

(declare-fun res!68084 () Bool)

(assert (=> d!45667 (=> (not res!68084) (not e!93072))))

(assert (=> d!45667 (= res!68084 (isStrictlySorted!312 (toList!858 (map!1429 (_2!1323 lt!73410)))))))

(assert (=> d!45667 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) lt!74835)))

(declare-fun b!142858 () Bool)

(assert (=> b!142858 (= e!93072 (containsKey!180 (toList!858 (map!1429 (_2!1323 lt!73410))) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!45667 res!68084) b!142858))

(assert (=> d!45667 m!166633))

(assert (=> d!45667 m!167845))

(assert (=> d!45667 m!167845))

(assert (=> d!45667 m!167847))

(assert (=> d!45667 m!166633))

(declare-fun m!172449 () Bool)

(assert (=> d!45667 m!172449))

(declare-fun m!172451 () Bool)

(assert (=> d!45667 m!172451))

(assert (=> b!142858 m!166633))

(assert (=> b!142858 m!167841))

(assert (=> b!140422 d!45667))

(assert (=> b!140422 d!45483))

(assert (=> b!140422 d!45485))

(assert (=> bm!15573 d!44685))

(declare-fun d!45669 () Bool)

(declare-fun c!27036 () Bool)

(assert (=> d!45669 (= c!27036 ((_ is Nil!1716) (toList!858 lt!73465)))))

(declare-fun e!93073 () (InoxSet tuple2!2622))

(assert (=> d!45669 (= (content!139 (toList!858 lt!73465)) e!93073)))

(declare-fun b!142859 () Bool)

(assert (=> b!142859 (= e!93073 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!142860 () Bool)

(assert (=> b!142860 (= e!93073 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73465)) true) (content!139 (t!6295 (toList!858 lt!73465)))))))

(assert (= (and d!45669 c!27036) b!142859))

(assert (= (and d!45669 (not c!27036)) b!142860))

(declare-fun m!172453 () Bool)

(assert (=> b!142860 m!172453))

(assert (=> b!142860 m!170907))

(assert (=> d!43717 d!45669))

(declare-fun d!45671 () Bool)

(declare-fun res!68085 () Bool)

(declare-fun e!93074 () Bool)

(assert (=> d!45671 (=> res!68085 e!93074)))

(assert (=> d!45671 (= res!68085 (and ((_ is Cons!1715) (toList!858 lt!73237)) (= (_1!1322 (h!2322 (toList!858 lt!73237))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45671 (= (containsKey!180 (toList!858 lt!73237) #b0000000000000000000000000000000000000000000000000000000000000000) e!93074)))

(declare-fun b!142861 () Bool)

(declare-fun e!93075 () Bool)

(assert (=> b!142861 (= e!93074 e!93075)))

(declare-fun res!68086 () Bool)

(assert (=> b!142861 (=> (not res!68086) (not e!93075))))

(assert (=> b!142861 (= res!68086 (and (or (not ((_ is Cons!1715) (toList!858 lt!73237))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73237))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73237)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73237))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142862 () Bool)

(assert (=> b!142862 (= e!93075 (containsKey!180 (t!6295 (toList!858 lt!73237)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45671 (not res!68085)) b!142861))

(assert (= (and b!142861 res!68086) b!142862))

(declare-fun m!172455 () Bool)

(assert (=> b!142862 m!172455))

(assert (=> d!44007 d!45671))

(assert (=> d!44127 d!43881))

(assert (=> d!44127 d!43883))

(declare-fun d!45673 () Bool)

(assert (=> d!45673 (isDefined!129 (getValueByKey!177 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45673 true))

(declare-fun _$12!419 () Unit!4387)

(assert (=> d!45673 (= (choose!864 (toList!858 lt!73184) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!419)))

(declare-fun bs!6055 () Bool)

(assert (= bs!6055 d!45673))

(assert (=> bs!6055 m!167259))

(assert (=> bs!6055 m!167259))

(assert (=> bs!6055 m!167457))

(assert (=> d!44127 d!45673))

(assert (=> d!44127 d!44299))

(assert (=> b!140482 d!44317))

(declare-fun d!45675 () Bool)

(declare-fun lt!74836 () Bool)

(assert (=> d!45675 (= lt!74836 (select (content!138 (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!93077 () Bool)

(assert (=> d!45675 (= lt!74836 e!93077)))

(declare-fun res!68087 () Bool)

(assert (=> d!45675 (=> (not res!68087) (not e!93077))))

(assert (=> d!45675 (= res!68087 ((_ is Cons!1716) (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(assert (=> d!45675 (= (contains!906 (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!74836)))

(declare-fun b!142863 () Bool)

(declare-fun e!93076 () Bool)

(assert (=> b!142863 (= e!93077 e!93076)))

(declare-fun res!68088 () Bool)

(assert (=> b!142863 (=> res!68088 e!93076)))

(assert (=> b!142863 (= res!68088 (= (h!2323 (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142864 () Bool)

(assert (=> b!142864 (= e!93076 (contains!906 (t!6296 (ite c!26258 (Cons!1716 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (select (arr!2306 (_keys!4698 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!45675 res!68087) b!142863))

(assert (= (and b!142863 (not res!68088)) b!142864))

(declare-fun m!172457 () Bool)

(assert (=> d!45675 m!172457))

(assert (=> d!45675 m!168135))

(declare-fun m!172459 () Bool)

(assert (=> d!45675 m!172459))

(assert (=> b!142864 m!168135))

(declare-fun m!172461 () Bool)

(assert (=> b!142864 m!172461))

(assert (=> b!140614 d!45675))

(declare-fun d!45677 () Bool)

(declare-fun e!93078 () Bool)

(assert (=> d!45677 e!93078))

(declare-fun res!68089 () Bool)

(assert (=> d!45677 (=> res!68089 e!93078)))

(declare-fun lt!74840 () Bool)

(assert (=> d!45677 (= res!68089 (not lt!74840))))

(declare-fun lt!74837 () Bool)

(assert (=> d!45677 (= lt!74840 lt!74837)))

(declare-fun lt!74839 () Unit!4387)

(declare-fun e!93079 () Unit!4387)

(assert (=> d!45677 (= lt!74839 e!93079)))

(declare-fun c!27037 () Bool)

(assert (=> d!45677 (= c!27037 lt!74837)))

(assert (=> d!45677 (= lt!74837 (containsKey!180 (toList!858 lt!73713) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45677 (= (contains!904 lt!73713 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74840)))

(declare-fun b!142865 () Bool)

(declare-fun lt!74838 () Unit!4387)

(assert (=> b!142865 (= e!93079 lt!74838)))

(assert (=> b!142865 (= lt!74838 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73713) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142865 (isDefined!129 (getValueByKey!177 (toList!858 lt!73713) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142866 () Bool)

(declare-fun Unit!4528 () Unit!4387)

(assert (=> b!142866 (= e!93079 Unit!4528)))

(declare-fun b!142867 () Bool)

(assert (=> b!142867 (= e!93078 (isDefined!129 (getValueByKey!177 (toList!858 lt!73713) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45677 c!27037) b!142865))

(assert (= (and d!45677 (not c!27037)) b!142866))

(assert (= (and d!45677 (not res!68089)) b!142867))

(declare-fun m!172463 () Bool)

(assert (=> d!45677 m!172463))

(declare-fun m!172465 () Bool)

(assert (=> b!142865 m!172465))

(assert (=> b!142865 m!171779))

(assert (=> b!142865 m!171779))

(declare-fun m!172467 () Bool)

(assert (=> b!142865 m!172467))

(assert (=> b!142867 m!171779))

(assert (=> b!142867 m!171779))

(assert (=> b!142867 m!172467))

(assert (=> bm!15585 d!45677))

(assert (=> d!43767 d!43561))

(declare-fun b!142869 () Bool)

(declare-fun e!93080 () Option!183)

(declare-fun e!93081 () Option!183)

(assert (=> b!142869 (= e!93080 e!93081)))

(declare-fun c!27039 () Bool)

(assert (=> b!142869 (= c!27039 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73194))))))

(declare-fun b!142870 () Bool)

(assert (=> b!142870 (= e!93081 (getValueByKey!177 (t!6295 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) lt!73194))))

(declare-fun b!142868 () Bool)

(assert (=> b!142868 (= e!93080 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))))

(declare-fun b!142871 () Bool)

(assert (=> b!142871 (= e!93081 None!181)))

(declare-fun c!27038 () Bool)

(declare-fun d!45679 () Bool)

(assert (=> d!45679 (= c!27038 (and ((_ is Cons!1715) (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (= (_1!1322 (h!2322 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))) lt!73194)))))

(assert (=> d!45679 (= (getValueByKey!177 (t!6295 (toList!858 (+!173 lt!73188 (tuple2!2623 lt!73190 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))) lt!73194) e!93080)))

(assert (= (and d!45679 c!27038) b!142868))

(assert (= (and d!45679 (not c!27038)) b!142869))

(assert (= (and b!142869 c!27039) b!142870))

(assert (= (and b!142869 (not c!27039)) b!142871))

(declare-fun m!172469 () Bool)

(assert (=> b!142870 m!172469))

(assert (=> b!140499 d!45679))

(assert (=> b!140421 d!44261))

(assert (=> b!140421 d!44091))

(assert (=> b!140775 d!44487))

(declare-fun d!45681 () Bool)

(assert (=> d!45681 (= (get!1533 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3278 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000)))))

(assert (=> b!140981 d!45681))

(declare-fun d!45683 () Bool)

(assert (=> d!45683 (= (apply!120 (+!173 lt!73786 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73781) (apply!120 lt!73786 lt!73781))))

(declare-fun lt!74841 () Unit!4387)

(assert (=> d!45683 (= lt!74841 (choose!867 lt!73786 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73781))))

(declare-fun e!93082 () Bool)

(assert (=> d!45683 e!93082))

(declare-fun res!68090 () Bool)

(assert (=> d!45683 (=> (not res!68090) (not e!93082))))

(assert (=> d!45683 (= res!68090 (contains!904 lt!73786 lt!73781))))

(assert (=> d!45683 (= (addApplyDifferent!96 lt!73786 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73781) lt!74841)))

(declare-fun b!142872 () Bool)

(assert (=> b!142872 (= e!93082 (not (= lt!73781 lt!73775)))))

(assert (= (and d!45683 res!68090) b!142872))

(assert (=> d!45683 m!168239))

(assert (=> d!45683 m!166663))

(declare-fun m!172471 () Bool)

(assert (=> d!45683 m!172471))

(assert (=> d!45683 m!168217))

(assert (=> d!45683 m!168219))

(declare-fun m!172473 () Bool)

(assert (=> d!45683 m!172473))

(assert (=> d!45683 m!168217))

(assert (=> b!140695 d!45683))

(declare-fun d!45685 () Bool)

(assert (=> d!45685 (= (apply!120 lt!73773 lt!73771) (get!1535 (getValueByKey!177 (toList!858 lt!73773) lt!73771)))))

(declare-fun bs!6056 () Bool)

(assert (= bs!6056 d!45685))

(declare-fun m!172475 () Bool)

(assert (=> bs!6056 m!172475))

(assert (=> bs!6056 m!172475))

(declare-fun m!172477 () Bool)

(assert (=> bs!6056 m!172477))

(assert (=> b!140695 d!45685))

(declare-fun d!45687 () Bool)

(assert (=> d!45687 (= (apply!120 lt!73786 lt!73781) (get!1535 (getValueByKey!177 (toList!858 lt!73786) lt!73781)))))

(declare-fun bs!6057 () Bool)

(assert (= bs!6057 d!45687))

(declare-fun m!172479 () Bool)

(assert (=> bs!6057 m!172479))

(assert (=> bs!6057 m!172479))

(declare-fun m!172481 () Bool)

(assert (=> bs!6057 m!172481))

(assert (=> b!140695 d!45687))

(declare-fun d!45689 () Bool)

(assert (=> d!45689 (= (apply!120 (+!173 lt!73789 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73788) (apply!120 lt!73789 lt!73788))))

(declare-fun lt!74842 () Unit!4387)

(assert (=> d!45689 (= lt!74842 (choose!867 lt!73789 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73788))))

(declare-fun e!93083 () Bool)

(assert (=> d!45689 e!93083))

(declare-fun res!68091 () Bool)

(assert (=> d!45689 (=> (not res!68091) (not e!93083))))

(assert (=> d!45689 (= res!68091 (contains!904 lt!73789 lt!73788))))

(assert (=> d!45689 (= (addApplyDifferent!96 lt!73789 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73788) lt!74842)))

(declare-fun b!142873 () Bool)

(assert (=> b!142873 (= e!93083 (not (= lt!73788 lt!73785)))))

(assert (= (and d!45689 res!68091) b!142873))

(assert (=> d!45689 m!168233))

(assert (=> d!45689 m!166663))

(declare-fun m!172483 () Bool)

(assert (=> d!45689 m!172483))

(assert (=> d!45689 m!168235))

(assert (=> d!45689 m!168237))

(declare-fun m!172485 () Bool)

(assert (=> d!45689 m!172485))

(assert (=> d!45689 m!168235))

(assert (=> b!140695 d!45689))

(declare-fun d!45691 () Bool)

(declare-fun e!93084 () Bool)

(assert (=> d!45691 e!93084))

(declare-fun res!68092 () Bool)

(assert (=> d!45691 (=> (not res!68092) (not e!93084))))

(declare-fun lt!74845 () ListLongMap!1685)

(assert (=> d!45691 (= res!68092 (contains!904 lt!74845 (_1!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74844 () List!1719)

(assert (=> d!45691 (= lt!74845 (ListLongMap!1686 lt!74844))))

(declare-fun lt!74843 () Unit!4387)

(declare-fun lt!74846 () Unit!4387)

(assert (=> d!45691 (= lt!74843 lt!74846)))

(assert (=> d!45691 (= (getValueByKey!177 lt!74844 (_1!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45691 (= lt!74846 (lemmaContainsTupThenGetReturnValue!91 lt!74844 (_1!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45691 (= lt!74844 (insertStrictlySorted!94 (toList!858 lt!73774) (_1!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45691 (= (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))) lt!74845)))

(declare-fun b!142874 () Bool)

(declare-fun res!68093 () Bool)

(assert (=> b!142874 (=> (not res!68093) (not e!93084))))

(assert (=> b!142874 (= res!68093 (= (getValueByKey!177 (toList!858 lt!74845) (_1!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142875 () Bool)

(assert (=> b!142875 (= e!93084 (contains!907 (toList!858 lt!74845) (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45691 res!68092) b!142874))

(assert (= (and b!142874 res!68093) b!142875))

(declare-fun m!172487 () Bool)

(assert (=> d!45691 m!172487))

(declare-fun m!172489 () Bool)

(assert (=> d!45691 m!172489))

(declare-fun m!172491 () Bool)

(assert (=> d!45691 m!172491))

(declare-fun m!172493 () Bool)

(assert (=> d!45691 m!172493))

(declare-fun m!172495 () Bool)

(assert (=> b!142874 m!172495))

(declare-fun m!172497 () Bool)

(assert (=> b!142875 m!172497))

(assert (=> b!140695 d!45691))

(declare-fun d!45693 () Bool)

(declare-fun e!93085 () Bool)

(assert (=> d!45693 e!93085))

(declare-fun res!68094 () Bool)

(assert (=> d!45693 (=> (not res!68094) (not e!93085))))

(declare-fun lt!74849 () ListLongMap!1685)

(assert (=> d!45693 (= res!68094 (contains!904 lt!74849 (_1!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74848 () List!1719)

(assert (=> d!45693 (= lt!74849 (ListLongMap!1686 lt!74848))))

(declare-fun lt!74847 () Unit!4387)

(declare-fun lt!74850 () Unit!4387)

(assert (=> d!45693 (= lt!74847 lt!74850)))

(assert (=> d!45693 (= (getValueByKey!177 lt!74848 (_1!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45693 (= lt!74850 (lemmaContainsTupThenGetReturnValue!91 lt!74848 (_1!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45693 (= lt!74848 (insertStrictlySorted!94 (toList!858 lt!73789) (_1!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45693 (= (+!173 lt!73789 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74849)))

(declare-fun b!142876 () Bool)

(declare-fun res!68095 () Bool)

(assert (=> b!142876 (=> (not res!68095) (not e!93085))))

(assert (=> b!142876 (= res!68095 (= (getValueByKey!177 (toList!858 lt!74849) (_1!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142877 () Bool)

(assert (=> b!142877 (= e!93085 (contains!907 (toList!858 lt!74849) (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45693 res!68094) b!142876))

(assert (= (and b!142876 res!68095) b!142877))

(declare-fun m!172499 () Bool)

(assert (=> d!45693 m!172499))

(declare-fun m!172501 () Bool)

(assert (=> d!45693 m!172501))

(declare-fun m!172503 () Bool)

(assert (=> d!45693 m!172503))

(declare-fun m!172505 () Bool)

(assert (=> d!45693 m!172505))

(declare-fun m!172507 () Bool)

(assert (=> b!142876 m!172507))

(declare-fun m!172509 () Bool)

(assert (=> b!142877 m!172509))

(assert (=> b!140695 d!45693))

(declare-fun d!45695 () Bool)

(declare-fun e!93086 () Bool)

(assert (=> d!45695 e!93086))

(declare-fun res!68096 () Bool)

(assert (=> d!45695 (=> res!68096 e!93086)))

(declare-fun lt!74854 () Bool)

(assert (=> d!45695 (= res!68096 (not lt!74854))))

(declare-fun lt!74851 () Bool)

(assert (=> d!45695 (= lt!74854 lt!74851)))

(declare-fun lt!74853 () Unit!4387)

(declare-fun e!93087 () Unit!4387)

(assert (=> d!45695 (= lt!74853 e!93087)))

(declare-fun c!27040 () Bool)

(assert (=> d!45695 (= c!27040 lt!74851)))

(assert (=> d!45695 (= lt!74851 (containsKey!180 (toList!858 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))) lt!73780))))

(assert (=> d!45695 (= (contains!904 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))) lt!73780) lt!74854)))

(declare-fun b!142878 () Bool)

(declare-fun lt!74852 () Unit!4387)

(assert (=> b!142878 (= e!93087 lt!74852)))

(assert (=> b!142878 (= lt!74852 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))) lt!73780))))

(assert (=> b!142878 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))) lt!73780))))

(declare-fun b!142879 () Bool)

(declare-fun Unit!4529 () Unit!4387)

(assert (=> b!142879 (= e!93087 Unit!4529)))

(declare-fun b!142880 () Bool)

(assert (=> b!142880 (= e!93086 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16)))) lt!73780)))))

(assert (= (and d!45695 c!27040) b!142878))

(assert (= (and d!45695 (not c!27040)) b!142879))

(assert (= (and d!45695 (not res!68096)) b!142880))

(declare-fun m!172511 () Bool)

(assert (=> d!45695 m!172511))

(declare-fun m!172513 () Bool)

(assert (=> b!142878 m!172513))

(declare-fun m!172515 () Bool)

(assert (=> b!142878 m!172515))

(assert (=> b!142878 m!172515))

(declare-fun m!172517 () Bool)

(assert (=> b!142878 m!172517))

(assert (=> b!142880 m!172515))

(assert (=> b!142880 m!172515))

(assert (=> b!142880 m!172517))

(assert (=> b!140695 d!45695))

(declare-fun d!45697 () Bool)

(assert (=> d!45697 (= (apply!120 (+!173 lt!73789 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73788) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73789 (tuple2!2623 lt!73785 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73788)))))

(declare-fun bs!6058 () Bool)

(assert (= bs!6058 d!45697))

(declare-fun m!172519 () Bool)

(assert (=> bs!6058 m!172519))

(assert (=> bs!6058 m!172519))

(declare-fun m!172521 () Bool)

(assert (=> bs!6058 m!172521))

(assert (=> b!140695 d!45697))

(declare-fun d!45699 () Bool)

(declare-fun e!93088 () Bool)

(assert (=> d!45699 e!93088))

(declare-fun res!68097 () Bool)

(assert (=> d!45699 (=> (not res!68097) (not e!93088))))

(declare-fun lt!74857 () ListLongMap!1685)

(assert (=> d!45699 (= res!68097 (contains!904 lt!74857 (_1!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74856 () List!1719)

(assert (=> d!45699 (= lt!74857 (ListLongMap!1686 lt!74856))))

(declare-fun lt!74855 () Unit!4387)

(declare-fun lt!74858 () Unit!4387)

(assert (=> d!45699 (= lt!74855 lt!74858)))

(assert (=> d!45699 (= (getValueByKey!177 lt!74856 (_1!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45699 (= lt!74858 (lemmaContainsTupThenGetReturnValue!91 lt!74856 (_1!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45699 (= lt!74856 (insertStrictlySorted!94 (toList!858 lt!73786) (_1!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45699 (= (+!173 lt!73786 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74857)))

(declare-fun b!142881 () Bool)

(declare-fun res!68098 () Bool)

(assert (=> b!142881 (=> (not res!68098) (not e!93088))))

(assert (=> b!142881 (= res!68098 (= (getValueByKey!177 (toList!858 lt!74857) (_1!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142882 () Bool)

(assert (=> b!142882 (= e!93088 (contains!907 (toList!858 lt!74857) (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45699 res!68097) b!142881))

(assert (= (and b!142881 res!68098) b!142882))

(declare-fun m!172523 () Bool)

(assert (=> d!45699 m!172523))

(declare-fun m!172525 () Bool)

(assert (=> d!45699 m!172525))

(declare-fun m!172527 () Bool)

(assert (=> d!45699 m!172527))

(declare-fun m!172529 () Bool)

(assert (=> d!45699 m!172529))

(declare-fun m!172531 () Bool)

(assert (=> b!142881 m!172531))

(declare-fun m!172533 () Bool)

(assert (=> b!142882 m!172533))

(assert (=> b!140695 d!45699))

(declare-fun d!45701 () Bool)

(declare-fun e!93089 () Bool)

(assert (=> d!45701 e!93089))

(declare-fun res!68099 () Bool)

(assert (=> d!45701 (=> (not res!68099) (not e!93089))))

(declare-fun lt!74861 () ListLongMap!1685)

(assert (=> d!45701 (= res!68099 (contains!904 lt!74861 (_1!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74860 () List!1719)

(assert (=> d!45701 (= lt!74861 (ListLongMap!1686 lt!74860))))

(declare-fun lt!74859 () Unit!4387)

(declare-fun lt!74862 () Unit!4387)

(assert (=> d!45701 (= lt!74859 lt!74862)))

(assert (=> d!45701 (= (getValueByKey!177 lt!74860 (_1!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45701 (= lt!74862 (lemmaContainsTupThenGetReturnValue!91 lt!74860 (_1!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45701 (= lt!74860 (insertStrictlySorted!94 (toList!858 lt!73773) (_1!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))) (_2!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45701 (= (+!173 lt!73773 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))) lt!74861)))

(declare-fun b!142883 () Bool)

(declare-fun res!68100 () Bool)

(assert (=> b!142883 (=> (not res!68100) (not e!93089))))

(assert (=> b!142883 (= res!68100 (= (getValueByKey!177 (toList!858 lt!74861) (_1!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142884 () Bool)

(assert (=> b!142884 (= e!93089 (contains!907 (toList!858 lt!74861) (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45701 res!68099) b!142883))

(assert (= (and b!142883 res!68100) b!142884))

(declare-fun m!172535 () Bool)

(assert (=> d!45701 m!172535))

(declare-fun m!172537 () Bool)

(assert (=> d!45701 m!172537))

(declare-fun m!172539 () Bool)

(assert (=> d!45701 m!172539))

(declare-fun m!172541 () Bool)

(assert (=> d!45701 m!172541))

(declare-fun m!172543 () Bool)

(assert (=> b!142883 m!172543))

(declare-fun m!172545 () Bool)

(assert (=> b!142884 m!172545))

(assert (=> b!140695 d!45701))

(assert (=> b!140695 d!45047))

(declare-fun d!45703 () Bool)

(assert (=> d!45703 (= (apply!120 (+!173 lt!73773 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))) lt!73771) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73773 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16)))) lt!73771)))))

(declare-fun bs!6059 () Bool)

(assert (= bs!6059 d!45703))

(declare-fun m!172547 () Bool)

(assert (=> bs!6059 m!172547))

(assert (=> bs!6059 m!172547))

(declare-fun m!172549 () Bool)

(assert (=> bs!6059 m!172549))

(assert (=> b!140695 d!45703))

(declare-fun d!45705 () Bool)

(assert (=> d!45705 (contains!904 (+!173 lt!73774 (tuple2!2623 lt!73776 (zeroValue!2789 newMap!16))) lt!73780)))

(declare-fun lt!74863 () Unit!4387)

(assert (=> d!45705 (= lt!74863 (choose!866 lt!73774 lt!73776 (zeroValue!2789 newMap!16) lt!73780))))

(assert (=> d!45705 (contains!904 lt!73774 lt!73780)))

(assert (=> d!45705 (= (addStillContains!96 lt!73774 lt!73776 (zeroValue!2789 newMap!16) lt!73780) lt!74863)))

(declare-fun bs!6060 () Bool)

(assert (= bs!6060 d!45705))

(assert (=> bs!6060 m!168229))

(assert (=> bs!6060 m!168229))

(assert (=> bs!6060 m!168231))

(declare-fun m!172551 () Bool)

(assert (=> bs!6060 m!172551))

(declare-fun m!172553 () Bool)

(assert (=> bs!6060 m!172553))

(assert (=> b!140695 d!45705))

(declare-fun d!45707 () Bool)

(assert (=> d!45707 (= (apply!120 lt!73789 lt!73788) (get!1535 (getValueByKey!177 (toList!858 lt!73789) lt!73788)))))

(declare-fun bs!6061 () Bool)

(assert (= bs!6061 d!45707))

(declare-fun m!172555 () Bool)

(assert (=> bs!6061 m!172555))

(assert (=> bs!6061 m!172555))

(declare-fun m!172557 () Bool)

(assert (=> bs!6061 m!172557))

(assert (=> b!140695 d!45707))

(declare-fun d!45709 () Bool)

(assert (=> d!45709 (= (apply!120 (+!173 lt!73773 (tuple2!2623 lt!73783 (zeroValue!2789 newMap!16))) lt!73771) (apply!120 lt!73773 lt!73771))))

(declare-fun lt!74864 () Unit!4387)

(assert (=> d!45709 (= lt!74864 (choose!867 lt!73773 lt!73783 (zeroValue!2789 newMap!16) lt!73771))))

(declare-fun e!93090 () Bool)

(assert (=> d!45709 e!93090))

(declare-fun res!68101 () Bool)

(assert (=> d!45709 (=> (not res!68101) (not e!93090))))

(assert (=> d!45709 (= res!68101 (contains!904 lt!73773 lt!73771))))

(assert (=> d!45709 (= (addApplyDifferent!96 lt!73773 lt!73783 (zeroValue!2789 newMap!16) lt!73771) lt!74864)))

(declare-fun b!142885 () Bool)

(assert (=> b!142885 (= e!93090 (not (= lt!73771 lt!73783)))))

(assert (= (and d!45709 res!68101) b!142885))

(assert (=> d!45709 m!168243))

(declare-fun m!172559 () Bool)

(assert (=> d!45709 m!172559))

(assert (=> d!45709 m!168223))

(assert (=> d!45709 m!168245))

(declare-fun m!172561 () Bool)

(assert (=> d!45709 m!172561))

(assert (=> d!45709 m!168223))

(assert (=> b!140695 d!45709))

(declare-fun d!45711 () Bool)

(assert (=> d!45711 (= (apply!120 (+!173 lt!73786 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73781) (get!1535 (getValueByKey!177 (toList!858 (+!173 lt!73786 (tuple2!2623 lt!73775 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73781)))))

(declare-fun bs!6062 () Bool)

(assert (= bs!6062 d!45711))

(declare-fun m!172563 () Bool)

(assert (=> bs!6062 m!172563))

(assert (=> bs!6062 m!172563))

(declare-fun m!172565 () Bool)

(assert (=> bs!6062 m!172565))

(assert (=> b!140695 d!45711))

(declare-fun bm!15778 () Bool)

(declare-fun call!15783 () List!1719)

(declare-fun call!15782 () List!1719)

(assert (=> bm!15778 (= call!15783 call!15782)))

(declare-fun b!142887 () Bool)

(declare-fun e!93092 () List!1719)

(declare-fun e!93094 () List!1719)

(assert (=> b!142887 (= e!93092 e!93094)))

(declare-fun c!27044 () Bool)

(assert (=> b!142887 (= c!27044 (and ((_ is Cons!1715) (t!6295 (toList!858 e!91166))) (= (_1!1322 (h!2322 (t!6295 (toList!858 e!91166)))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142888 () Bool)

(declare-fun res!68103 () Bool)

(declare-fun e!93091 () Bool)

(assert (=> b!142888 (=> (not res!68103) (not e!93091))))

(declare-fun lt!74865 () List!1719)

(assert (=> b!142888 (= res!68103 (containsKey!180 lt!74865 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!27042 () Bool)

(declare-fun b!142889 () Bool)

(assert (=> b!142889 (= c!27042 (and ((_ is Cons!1715) (t!6295 (toList!858 e!91166))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 e!91166)))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!93093 () List!1719)

(assert (=> b!142889 (= e!93094 e!93093)))

(declare-fun bm!15779 () Bool)

(declare-fun call!15781 () List!1719)

(assert (=> bm!15779 (= call!15782 call!15781)))

(declare-fun b!142890 () Bool)

(assert (=> b!142890 (= e!93094 call!15782)))

(declare-fun b!142891 () Bool)

(assert (=> b!142891 (= e!93092 call!15781)))

(declare-fun b!142892 () Bool)

(assert (=> b!142892 (= e!93091 (contains!907 lt!74865 (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142886 () Bool)

(declare-fun e!93095 () List!1719)

(assert (=> b!142886 (= e!93095 (ite c!27044 (t!6295 (t!6295 (toList!858 e!91166))) (ite c!27042 (Cons!1715 (h!2322 (t!6295 (toList!858 e!91166))) (t!6295 (t!6295 (toList!858 e!91166)))) Nil!1716)))))

(declare-fun d!45713 () Bool)

(assert (=> d!45713 e!93091))

(declare-fun res!68102 () Bool)

(assert (=> d!45713 (=> (not res!68102) (not e!93091))))

(assert (=> d!45713 (= res!68102 (isStrictlySorted!312 lt!74865))))

(assert (=> d!45713 (= lt!74865 e!93092)))

(declare-fun c!27043 () Bool)

(assert (=> d!45713 (= c!27043 (and ((_ is Cons!1715) (t!6295 (toList!858 e!91166))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 e!91166)))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45713 (isStrictlySorted!312 (t!6295 (toList!858 e!91166)))))

(assert (=> d!45713 (= (insertStrictlySorted!94 (t!6295 (toList!858 e!91166)) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74865)))

(declare-fun b!142893 () Bool)

(assert (=> b!142893 (= e!93093 call!15783)))

(declare-fun b!142894 () Bool)

(assert (=> b!142894 (= e!93093 call!15783)))

(declare-fun bm!15780 () Bool)

(assert (=> bm!15780 (= call!15781 ($colon$colon!93 e!93095 (ite c!27043 (h!2322 (t!6295 (toList!858 e!91166))) (tuple2!2623 (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!27041 () Bool)

(assert (=> bm!15780 (= c!27041 c!27043)))

(declare-fun b!142895 () Bool)

(assert (=> b!142895 (= e!93095 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 e!91166))) (_1!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1322 (ite c!26142 (ite c!26144 (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45713 c!27043) b!142891))

(assert (= (and d!45713 (not c!27043)) b!142887))

(assert (= (and b!142887 c!27044) b!142890))

(assert (= (and b!142887 (not c!27044)) b!142889))

(assert (= (and b!142889 c!27042) b!142893))

(assert (= (and b!142889 (not c!27042)) b!142894))

(assert (= (or b!142893 b!142894) bm!15778))

(assert (= (or b!142890 bm!15778) bm!15779))

(assert (= (or b!142891 bm!15779) bm!15780))

(assert (= (and bm!15780 c!27041) b!142895))

(assert (= (and bm!15780 (not c!27041)) b!142886))

(assert (= (and d!45713 res!68102) b!142888))

(assert (= (and b!142888 res!68103) b!142892))

(declare-fun m!172567 () Bool)

(assert (=> bm!15780 m!172567))

(declare-fun m!172569 () Bool)

(assert (=> d!45713 m!172569))

(assert (=> d!45713 m!171569))

(declare-fun m!172571 () Bool)

(assert (=> b!142888 m!172571))

(declare-fun m!172573 () Bool)

(assert (=> b!142895 m!172573))

(declare-fun m!172575 () Bool)

(assert (=> b!142892 m!172575))

(assert (=> b!140871 d!45713))

(declare-fun d!45715 () Bool)

(declare-fun lt!74866 () Bool)

(assert (=> d!45715 (= lt!74866 (select (content!139 (toList!858 lt!73910)) (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))

(declare-fun e!93096 () Bool)

(assert (=> d!45715 (= lt!74866 e!93096)))

(declare-fun res!68104 () Bool)

(assert (=> d!45715 (=> (not res!68104) (not e!93096))))

(assert (=> d!45715 (= res!68104 ((_ is Cons!1715) (toList!858 lt!73910)))))

(assert (=> d!45715 (= (contains!907 (toList!858 lt!73910) (tuple2!2623 lt!73314 (minValue!2789 newMap!16))) lt!74866)))

(declare-fun b!142896 () Bool)

(declare-fun e!93097 () Bool)

(assert (=> b!142896 (= e!93096 e!93097)))

(declare-fun res!68105 () Bool)

(assert (=> b!142896 (=> res!68105 e!93097)))

(assert (=> b!142896 (= res!68105 (= (h!2322 (toList!858 lt!73910)) (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))

(declare-fun b!142897 () Bool)

(assert (=> b!142897 (= e!93097 (contains!907 (t!6295 (toList!858 lt!73910)) (tuple2!2623 lt!73314 (minValue!2789 newMap!16))))))

(assert (= (and d!45715 res!68104) b!142896))

(assert (= (and b!142896 (not res!68105)) b!142897))

(declare-fun m!172577 () Bool)

(assert (=> d!45715 m!172577))

(declare-fun m!172579 () Bool)

(assert (=> d!45715 m!172579))

(declare-fun m!172581 () Bool)

(assert (=> b!142897 m!172581))

(assert (=> b!140897 d!45715))

(declare-fun d!45717 () Bool)

(assert (=> d!45717 (= (get!1535 (getValueByKey!177 (toList!858 lt!73234) lt!73233)) (v!3285 (getValueByKey!177 (toList!858 lt!73234) lt!73233)))))

(assert (=> d!43725 d!45717))

(declare-fun b!142899 () Bool)

(declare-fun e!93098 () Option!183)

(declare-fun e!93099 () Option!183)

(assert (=> b!142899 (= e!93098 e!93099)))

(declare-fun c!27046 () Bool)

(assert (=> b!142899 (= c!27046 (and ((_ is Cons!1715) (toList!858 lt!73234)) (not (= (_1!1322 (h!2322 (toList!858 lt!73234))) lt!73233))))))

(declare-fun b!142900 () Bool)

(assert (=> b!142900 (= e!93099 (getValueByKey!177 (t!6295 (toList!858 lt!73234)) lt!73233))))

(declare-fun b!142898 () Bool)

(assert (=> b!142898 (= e!93098 (Some!182 (_2!1322 (h!2322 (toList!858 lt!73234)))))))

(declare-fun b!142901 () Bool)

(assert (=> b!142901 (= e!93099 None!181)))

(declare-fun d!45719 () Bool)

(declare-fun c!27045 () Bool)

(assert (=> d!45719 (= c!27045 (and ((_ is Cons!1715) (toList!858 lt!73234)) (= (_1!1322 (h!2322 (toList!858 lt!73234))) lt!73233)))))

(assert (=> d!45719 (= (getValueByKey!177 (toList!858 lt!73234) lt!73233) e!93098)))

(assert (= (and d!45719 c!27045) b!142898))

(assert (= (and d!45719 (not c!27045)) b!142899))

(assert (= (and b!142899 c!27046) b!142900))

(assert (= (and b!142899 (not c!27046)) b!142901))

(declare-fun m!172583 () Bool)

(assert (=> b!142900 m!172583))

(assert (=> d!43725 d!45719))

(declare-fun lt!74867 () Bool)

(declare-fun d!45721 () Bool)

(assert (=> d!45721 (= lt!74867 (select (content!139 (toList!858 lt!73573)) (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))

(declare-fun e!93100 () Bool)

(assert (=> d!45721 (= lt!74867 e!93100)))

(declare-fun res!68106 () Bool)

(assert (=> d!45721 (=> (not res!68106) (not e!93100))))

(assert (=> d!45721 (= res!68106 ((_ is Cons!1715) (toList!858 lt!73573)))))

(assert (=> d!45721 (= (contains!907 (toList!858 lt!73573) (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))) lt!74867)))

(declare-fun b!142902 () Bool)

(declare-fun e!93101 () Bool)

(assert (=> b!142902 (= e!93100 e!93101)))

(declare-fun res!68107 () Bool)

(assert (=> b!142902 (=> res!68107 e!93101)))

(assert (=> b!142902 (= res!68107 (= (h!2322 (toList!858 lt!73573)) (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))

(declare-fun b!142903 () Bool)

(assert (=> b!142903 (= e!93101 (contains!907 (t!6295 (toList!858 lt!73573)) (tuple2!2623 lt!73221 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45721 res!68106) b!142902))

(assert (= (and b!142902 (not res!68107)) b!142903))

(declare-fun m!172585 () Bool)

(assert (=> d!45721 m!172585))

(declare-fun m!172587 () Bool)

(assert (=> d!45721 m!172587))

(declare-fun m!172589 () Bool)

(assert (=> b!142903 m!172589))

(assert (=> b!140325 d!45721))

(assert (=> b!140786 d!44345))

(assert (=> b!140786 d!43837))

(declare-fun b!142905 () Bool)

(declare-fun e!93102 () Option!183)

(declare-fun e!93103 () Option!183)

(assert (=> b!142905 (= e!93102 e!93103)))

(declare-fun c!27048 () Bool)

(assert (=> b!142905 (= c!27048 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73275))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73275)))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))))

(declare-fun b!142906 () Bool)

(assert (=> b!142906 (= e!93103 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73275))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142904 () Bool)

(assert (=> b!142904 (= e!93102 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73275))))))))

(declare-fun b!142907 () Bool)

(assert (=> b!142907 (= e!93103 None!181)))

(declare-fun c!27047 () Bool)

(declare-fun d!45723 () Bool)

(assert (=> d!45723 (= c!27047 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73275))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73275)))) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(assert (=> d!45723 (= (getValueByKey!177 (t!6295 (toList!858 lt!73275)) (_1!1322 (ite (or c!26176 c!26177) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!93102)))

(assert (= (and d!45723 c!27047) b!142904))

(assert (= (and d!45723 (not c!27047)) b!142905))

(assert (= (and b!142905 c!27048) b!142906))

(assert (= (and b!142905 (not c!27048)) b!142907))

(declare-fun m!172591 () Bool)

(assert (=> b!142906 m!172591))

(assert (=> b!140945 d!45723))

(assert (=> b!140381 d!44325))

(assert (=> b!140381 d!44327))

(declare-fun d!45725 () Bool)

(declare-fun res!68108 () Bool)

(declare-fun e!93104 () Bool)

(assert (=> d!45725 (=> res!68108 e!93104)))

(assert (=> d!45725 (= res!68108 (and ((_ is Cons!1715) (toList!858 lt!73446)) (= (_1!1322 (h!2322 (toList!858 lt!73446))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45725 (= (containsKey!180 (toList!858 lt!73446) #b0000000000000000000000000000000000000000000000000000000000000000) e!93104)))

(declare-fun b!142908 () Bool)

(declare-fun e!93105 () Bool)

(assert (=> b!142908 (= e!93104 e!93105)))

(declare-fun res!68109 () Bool)

(assert (=> b!142908 (=> (not res!68109) (not e!93105))))

(assert (=> b!142908 (= res!68109 (and (or (not ((_ is Cons!1715) (toList!858 lt!73446))) (bvsle (_1!1322 (h!2322 (toList!858 lt!73446))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!73446)) (bvslt (_1!1322 (h!2322 (toList!858 lt!73446))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142909 () Bool)

(assert (=> b!142909 (= e!93105 (containsKey!180 (t!6295 (toList!858 lt!73446)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45725 (not res!68108)) b!142908))

(assert (= (and b!142908 res!68109) b!142909))

(declare-fun m!172593 () Bool)

(assert (=> b!142909 m!172593))

(assert (=> d!43793 d!45725))

(declare-fun d!45727 () Bool)

(declare-fun e!93106 () Bool)

(assert (=> d!45727 e!93106))

(declare-fun res!68110 () Bool)

(assert (=> d!45727 (=> res!68110 e!93106)))

(declare-fun lt!74871 () Bool)

(assert (=> d!45727 (= res!68110 (not lt!74871))))

(declare-fun lt!74868 () Bool)

(assert (=> d!45727 (= lt!74871 lt!74868)))

(declare-fun lt!74870 () Unit!4387)

(declare-fun e!93107 () Unit!4387)

(assert (=> d!45727 (= lt!74870 e!93107)))

(declare-fun c!27049 () Bool)

(assert (=> d!45727 (= c!27049 lt!74868)))

(assert (=> d!45727 (= lt!74868 (containsKey!180 (toList!858 lt!73587) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45727 (= (contains!904 lt!73587 (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)) lt!74871)))

(declare-fun b!142910 () Bool)

(declare-fun lt!74869 () Unit!4387)

(assert (=> b!142910 (= e!93107 lt!74869)))

(assert (=> b!142910 (= lt!74869 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73587) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142910 (isDefined!129 (getValueByKey!177 (toList!858 lt!73587) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142911 () Bool)

(declare-fun Unit!4530 () Unit!4387)

(assert (=> b!142911 (= e!93107 Unit!4530)))

(declare-fun b!142912 () Bool)

(assert (=> b!142912 (= e!93106 (isDefined!129 (getValueByKey!177 (toList!858 lt!73587) (select (arr!2306 (_keys!4698 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45727 c!27049) b!142910))

(assert (= (and d!45727 (not c!27049)) b!142911))

(assert (= (and d!45727 (not res!68110)) b!142912))

(assert (=> d!45727 m!166927))

(declare-fun m!172595 () Bool)

(assert (=> d!45727 m!172595))

(assert (=> b!142910 m!166927))

(declare-fun m!172597 () Bool)

(assert (=> b!142910 m!172597))

(assert (=> b!142910 m!166927))

(assert (=> b!142910 m!171795))

(assert (=> b!142910 m!171795))

(declare-fun m!172599 () Bool)

(assert (=> b!142910 m!172599))

(assert (=> b!142912 m!166927))

(assert (=> b!142912 m!171795))

(assert (=> b!142912 m!171795))

(assert (=> b!142912 m!172599))

(assert (=> b!140367 d!45727))

(declare-fun bm!15781 () Bool)

(declare-fun call!15786 () List!1719)

(declare-fun call!15785 () List!1719)

(assert (=> bm!15781 (= call!15786 call!15785)))

(declare-fun b!142914 () Bool)

(declare-fun e!93109 () List!1719)

(declare-fun e!93111 () List!1719)

(assert (=> b!142914 (= e!93109 e!93111)))

(declare-fun c!27053 () Bool)

(assert (=> b!142914 (= c!27053 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73187))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73187)))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun b!142915 () Bool)

(declare-fun res!68112 () Bool)

(declare-fun e!93108 () Bool)

(assert (=> b!142915 (=> (not res!68112) (not e!93108))))

(declare-fun lt!74872 () List!1719)

(assert (=> b!142915 (= res!68112 (containsKey!180 lt!74872 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(declare-fun b!142916 () Bool)

(declare-fun c!27051 () Bool)

(assert (=> b!142916 (= c!27051 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73187))) (bvsgt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73187)))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!93110 () List!1719)

(assert (=> b!142916 (= e!93111 e!93110)))

(declare-fun bm!15782 () Bool)

(declare-fun call!15784 () List!1719)

(assert (=> bm!15782 (= call!15785 call!15784)))

(declare-fun b!142917 () Bool)

(assert (=> b!142917 (= e!93111 call!15785)))

(declare-fun b!142918 () Bool)

(assert (=> b!142918 (= e!93109 call!15784)))

(declare-fun b!142919 () Bool)

(assert (=> b!142919 (= e!93108 (contains!907 lt!74872 (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(declare-fun e!93112 () List!1719)

(declare-fun b!142913 () Bool)

(assert (=> b!142913 (= e!93112 (ite c!27053 (t!6295 (t!6295 (toList!858 lt!73187))) (ite c!27051 (Cons!1715 (h!2322 (t!6295 (toList!858 lt!73187))) (t!6295 (t!6295 (toList!858 lt!73187)))) Nil!1716)))))

(declare-fun d!45729 () Bool)

(assert (=> d!45729 e!93108))

(declare-fun res!68111 () Bool)

(assert (=> d!45729 (=> (not res!68111) (not e!93108))))

(assert (=> d!45729 (= res!68111 (isStrictlySorted!312 lt!74872))))

(assert (=> d!45729 (= lt!74872 e!93109)))

(declare-fun c!27052 () Bool)

(assert (=> d!45729 (= c!27052 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73187))) (bvslt (_1!1322 (h!2322 (t!6295 (toList!858 lt!73187)))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))))))))

(assert (=> d!45729 (isStrictlySorted!312 (t!6295 (toList!858 lt!73187)))))

(assert (=> d!45729 (= (insertStrictlySorted!94 (t!6295 (toList!858 lt!73187)) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))) lt!74872)))

(declare-fun b!142920 () Bool)

(assert (=> b!142920 (= e!93110 call!15786)))

(declare-fun b!142921 () Bool)

(assert (=> b!142921 (= e!93110 call!15786)))

(declare-fun bm!15783 () Bool)

(assert (=> bm!15783 (= call!15784 ($colon$colon!93 e!93112 (ite c!27052 (h!2322 (t!6295 (toList!858 lt!73187))) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))))

(declare-fun c!27050 () Bool)

(assert (=> bm!15783 (= c!27050 c!27052)))

(declare-fun b!142922 () Bool)

(assert (=> b!142922 (= e!93112 (insertStrictlySorted!94 (t!6295 (t!6295 (toList!858 lt!73187))) (_1!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73197 (zeroValue!2789 (v!3279 (underlying!479 thiss!992)))))))))

(assert (= (and d!45729 c!27052) b!142918))

(assert (= (and d!45729 (not c!27052)) b!142914))

(assert (= (and b!142914 c!27053) b!142917))

(assert (= (and b!142914 (not c!27053)) b!142916))

(assert (= (and b!142916 c!27051) b!142920))

(assert (= (and b!142916 (not c!27051)) b!142921))

(assert (= (or b!142920 b!142921) bm!15781))

(assert (= (or b!142917 bm!15781) bm!15782))

(assert (= (or b!142918 bm!15782) bm!15783))

(assert (= (and bm!15783 c!27050) b!142922))

(assert (= (and bm!15783 (not c!27050)) b!142913))

(assert (= (and d!45729 res!68111) b!142915))

(assert (= (and b!142915 res!68112) b!142919))

(declare-fun m!172601 () Bool)

(assert (=> bm!15783 m!172601))

(declare-fun m!172603 () Bool)

(assert (=> d!45729 m!172603))

(assert (=> d!45729 m!171263))

(declare-fun m!172605 () Bool)

(assert (=> b!142915 m!172605))

(declare-fun m!172607 () Bool)

(assert (=> b!142922 m!172607))

(declare-fun m!172609 () Bool)

(assert (=> b!142919 m!172609))

(assert (=> b!141053 d!45729))

(declare-fun b!142924 () Bool)

(declare-fun e!93113 () Option!183)

(declare-fun e!93114 () Option!183)

(assert (=> b!142924 (= e!93113 e!93114)))

(declare-fun c!27055 () Bool)

(assert (=> b!142924 (= c!27055 (and ((_ is Cons!1715) (toList!858 lt!74021)) (not (= (_1!1322 (h!2322 (toList!858 lt!74021))) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))))

(declare-fun b!142925 () Bool)

(assert (=> b!142925 (= e!93114 (getValueByKey!177 (t!6295 (toList!858 lt!74021)) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))))))

(declare-fun b!142923 () Bool)

(assert (=> b!142923 (= e!93113 (Some!182 (_2!1322 (h!2322 (toList!858 lt!74021)))))))

(declare-fun b!142926 () Bool)

(assert (=> b!142926 (= e!93114 None!181)))

(declare-fun c!27054 () Bool)

(declare-fun d!45731 () Bool)

(assert (=> d!45731 (= c!27054 (and ((_ is Cons!1715) (toList!858 lt!74021)) (= (_1!1322 (h!2322 (toList!858 lt!74021))) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16))))))))

(assert (=> d!45731 (= (getValueByKey!177 (toList!858 lt!74021) (_1!1322 (tuple2!2623 lt!73252 (minValue!2789 newMap!16)))) e!93113)))

(assert (= (and d!45731 c!27054) b!142923))

(assert (= (and d!45731 (not c!27054)) b!142924))

(assert (= (and b!142924 c!27055) b!142925))

(assert (= (and b!142924 (not c!27055)) b!142926))

(declare-fun m!172611 () Bool)

(assert (=> b!142925 m!172611))

(assert (=> b!141077 d!45731))

(declare-fun d!45733 () Bool)

(declare-fun res!68113 () Bool)

(declare-fun e!93115 () Bool)

(assert (=> d!45733 (=> res!68113 e!93115)))

(assert (=> d!45733 (= res!68113 (or ((_ is Nil!1716) lt!73796) ((_ is Nil!1716) (t!6295 lt!73796))))))

(assert (=> d!45733 (= (isStrictlySorted!312 lt!73796) e!93115)))

(declare-fun b!142927 () Bool)

(declare-fun e!93116 () Bool)

(assert (=> b!142927 (= e!93115 e!93116)))

(declare-fun res!68114 () Bool)

(assert (=> b!142927 (=> (not res!68114) (not e!93116))))

(assert (=> b!142927 (= res!68114 (bvslt (_1!1322 (h!2322 lt!73796)) (_1!1322 (h!2322 (t!6295 lt!73796)))))))

(declare-fun b!142928 () Bool)

(assert (=> b!142928 (= e!93116 (isStrictlySorted!312 (t!6295 lt!73796)))))

(assert (= (and d!45733 (not res!68113)) b!142927))

(assert (= (and b!142927 res!68114) b!142928))

(declare-fun m!172613 () Bool)

(assert (=> b!142928 m!172613))

(assert (=> d!43915 d!45733))

(declare-fun d!45735 () Bool)

(declare-fun res!68115 () Bool)

(declare-fun e!93117 () Bool)

(assert (=> d!45735 (=> res!68115 e!93117)))

(assert (=> d!45735 (= res!68115 (or ((_ is Nil!1716) (toList!858 call!15471)) ((_ is Nil!1716) (t!6295 (toList!858 call!15471)))))))

(assert (=> d!45735 (= (isStrictlySorted!312 (toList!858 call!15471)) e!93117)))

(declare-fun b!142929 () Bool)

(declare-fun e!93118 () Bool)

(assert (=> b!142929 (= e!93117 e!93118)))

(declare-fun res!68116 () Bool)

(assert (=> b!142929 (=> (not res!68116) (not e!93118))))

(assert (=> b!142929 (= res!68116 (bvslt (_1!1322 (h!2322 (toList!858 call!15471))) (_1!1322 (h!2322 (t!6295 (toList!858 call!15471))))))))

(declare-fun b!142930 () Bool)

(assert (=> b!142930 (= e!93118 (isStrictlySorted!312 (t!6295 (toList!858 call!15471))))))

(assert (= (and d!45735 (not res!68115)) b!142929))

(assert (= (and b!142929 res!68116) b!142930))

(assert (=> b!142930 m!170707))

(assert (=> d!43915 d!45735))

(declare-fun d!45737 () Bool)

(assert (=> d!45737 (= ($colon$colon!93 e!91760 (ite c!26407 (h!2322 (toList!858 lt!73203)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992)))))))) (Cons!1715 (ite c!26407 (h!2322 (toList!858 lt!73203)) (tuple2!2623 (_1!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))) (_2!1322 (tuple2!2623 lt!73199 (minValue!2789 (v!3279 (underlying!479 thiss!992))))))) e!91760))))

(assert (=> bm!15619 d!45737))

(assert (=> d!43985 d!43855))

(assert (=> d!43985 d!43565))

(declare-fun d!45739 () Bool)

(assert (=> d!45739 (contains!904 (getCurrentListMap!531 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355))))

(assert (=> d!45739 true))

(declare-fun _$17!59 () Unit!4387)

(assert (=> d!45739 (= (choose!875 (_keys!4698 newMap!16) (_values!2922 newMap!16) (mask!7279 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) _$17!59)))

(declare-fun bs!6063 () Bool)

(assert (= bs!6063 d!45739))

(assert (=> bs!6063 m!166773))

(assert (=> bs!6063 m!166773))

(assert (=> bs!6063 m!166633))

(assert (=> bs!6063 m!167183))

(assert (=> d!43985 d!45739))

(assert (=> d!43985 d!43697))

(declare-fun d!45741 () Bool)

(declare-fun lt!74873 () Bool)

(assert (=> d!45741 (= lt!74873 (select (content!139 (toList!858 lt!73799)) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!93119 () Bool)

(assert (=> d!45741 (= lt!74873 e!93119)))

(declare-fun res!68117 () Bool)

(assert (=> d!45741 (=> (not res!68117) (not e!93119))))

(assert (=> d!45741 (= res!68117 ((_ is Cons!1715) (toList!858 lt!73799)))))

(assert (=> d!45741 (= (contains!907 (toList!858 lt!73799) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74873)))

(declare-fun b!142931 () Bool)

(declare-fun e!93120 () Bool)

(assert (=> b!142931 (= e!93119 e!93120)))

(declare-fun res!68118 () Bool)

(assert (=> b!142931 (=> res!68118 e!93120)))

(assert (=> b!142931 (= res!68118 (= (h!2322 (toList!858 lt!73799)) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142932 () Bool)

(assert (=> b!142932 (= e!93120 (contains!907 (t!6295 (toList!858 lt!73799)) (ite (or c!26191 c!26192) (tuple2!2623 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!45741 res!68117) b!142931))

(assert (= (and b!142931 (not res!68118)) b!142932))

(declare-fun m!172615 () Bool)

(assert (=> d!45741 m!172615))

(declare-fun m!172617 () Bool)

(assert (=> d!45741 m!172617))

(declare-fun m!172619 () Bool)

(assert (=> b!142932 m!172619))

(assert (=> b!140730 d!45741))

(declare-fun b!142934 () Bool)

(declare-fun e!93121 () Option!183)

(declare-fun e!93122 () Option!183)

(assert (=> b!142934 (= e!93121 e!93122)))

(declare-fun c!27057 () Bool)

(assert (=> b!142934 (= c!27057 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (not (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142935 () Bool)

(assert (=> b!142935 (= e!93122 (getValueByKey!177 (t!6295 (t!6295 (toList!858 lt!73184))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142933 () Bool)

(assert (=> b!142933 (= e!93121 (Some!182 (_2!1322 (h!2322 (t!6295 (toList!858 lt!73184))))))))

(declare-fun b!142936 () Bool)

(assert (=> b!142936 (= e!93122 None!181)))

(declare-fun d!45743 () Bool)

(declare-fun c!27056 () Bool)

(assert (=> d!45743 (= c!27056 (and ((_ is Cons!1715) (t!6295 (toList!858 lt!73184))) (= (_1!1322 (h!2322 (t!6295 (toList!858 lt!73184)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45743 (= (getValueByKey!177 (t!6295 (toList!858 lt!73184)) #b1000000000000000000000000000000000000000000000000000000000000000) e!93121)))

(assert (= (and d!45743 c!27056) b!142933))

(assert (= (and d!45743 (not c!27056)) b!142934))

(assert (= (and b!142934 c!27057) b!142935))

(assert (= (and b!142934 (not c!27057)) b!142936))

(declare-fun m!172621 () Bool)

(assert (=> b!142935 m!172621))

(assert (=> b!140329 d!45743))

(declare-fun d!45745 () Bool)

(assert (=> d!45745 (isDefined!129 (getValueByKey!177 (toList!858 lt!73203) lt!73202))))

(declare-fun lt!74874 () Unit!4387)

(assert (=> d!45745 (= lt!74874 (choose!864 (toList!858 lt!73203) lt!73202))))

(declare-fun e!93123 () Bool)

(assert (=> d!45745 e!93123))

(declare-fun res!68119 () Bool)

(assert (=> d!45745 (=> (not res!68119) (not e!93123))))

(assert (=> d!45745 (= res!68119 (isStrictlySorted!312 (toList!858 lt!73203)))))

(assert (=> d!45745 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73203) lt!73202) lt!74874)))

(declare-fun b!142937 () Bool)

(assert (=> b!142937 (= e!93123 (containsKey!180 (toList!858 lt!73203) lt!73202))))

(assert (= (and d!45745 res!68119) b!142937))

(assert (=> d!45745 m!167287))

(assert (=> d!45745 m!167287))

(assert (=> d!45745 m!167739))

(declare-fun m!172623 () Bool)

(assert (=> d!45745 m!172623))

(assert (=> d!45745 m!168373))

(assert (=> b!142937 m!167735))

(assert (=> b!140375 d!45745))

(assert (=> b!140375 d!45599))

(assert (=> b!140375 d!43983))

(declare-fun d!45747 () Bool)

(assert (=> d!45747 (isDefined!129 (getValueByKey!177 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))

(declare-fun lt!74875 () Unit!4387)

(assert (=> d!45747 (= lt!74875 (choose!864 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))

(declare-fun e!93124 () Bool)

(assert (=> d!45747 e!93124))

(declare-fun res!68120 () Bool)

(assert (=> d!45747 (=> (not res!68120) (not e!93124))))

(assert (=> d!45747 (= res!68120 (isStrictlySorted!312 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449)))))))

(assert (=> d!45747 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450) lt!74875)))

(declare-fun b!142938 () Bool)

(assert (=> b!142938 (= e!93124 (containsKey!180 (toList!858 (+!173 lt!73447 (tuple2!2623 lt!73445 lt!73449))) lt!73450))))

(assert (= (and d!45747 res!68120) b!142938))

(assert (=> d!45747 m!168331))

(assert (=> d!45747 m!168331))

(assert (=> d!45747 m!168333))

(declare-fun m!172625 () Bool)

(assert (=> d!45747 m!172625))

(declare-fun m!172627 () Bool)

(assert (=> d!45747 m!172627))

(assert (=> b!142938 m!168327))

(assert (=> b!140737 d!45747))

(assert (=> b!140737 d!45569))

(assert (=> b!140737 d!45571))

(declare-fun bm!15784 () Bool)

(declare-fun c!27058 () Bool)

(declare-fun call!15787 () Bool)

(assert (=> bm!15784 (= call!15787 (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!27058 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26463 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!26463 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) Nil!1717) Nil!1717))))))

(declare-fun b!142939 () Bool)

(declare-fun e!93125 () Bool)

(declare-fun e!93126 () Bool)

(assert (=> b!142939 (= e!93125 e!93126)))

(declare-fun res!68123 () Bool)

(assert (=> b!142939 (=> (not res!68123) (not e!93126))))

(declare-fun e!93128 () Bool)

(assert (=> b!142939 (= res!68123 (not e!93128))))

(declare-fun res!68121 () Bool)

(assert (=> b!142939 (=> (not res!68121) (not e!93128))))

(assert (=> b!142939 (= res!68121 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142940 () Bool)

(declare-fun e!93127 () Bool)

(assert (=> b!142940 (= e!93127 call!15787)))

(declare-fun b!142941 () Bool)

(assert (=> b!142941 (= e!93126 e!93127)))

(assert (=> b!142941 (= c!27058 (validKeyInArray!0 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!45749 () Bool)

(declare-fun res!68122 () Bool)

(assert (=> d!45749 (=> res!68122 e!93125)))

(assert (=> d!45749 (= res!68122 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2578 (_keys!4698 (v!3279 (underlying!479 thiss!992))))))))

(assert (=> d!45749 (= (arrayNoDuplicates!0 (_keys!4698 (v!3279 (underlying!479 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26463 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) e!93125)))

(declare-fun b!142942 () Bool)

(assert (=> b!142942 (= e!93127 call!15787)))

(declare-fun b!142943 () Bool)

(assert (=> b!142943 (= e!93128 (contains!906 (ite c!26463 (Cons!1716 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) #b00000000000000000000000000000000) Nil!1717) Nil!1717) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!45749 (not res!68122)) b!142939))

(assert (= (and b!142939 res!68121) b!142943))

(assert (= (and b!142939 res!68123) b!142941))

(assert (= (and b!142941 c!27058) b!142940))

(assert (= (and b!142941 (not c!27058)) b!142942))

(assert (= (or b!142940 b!142942) bm!15784))

(assert (=> bm!15784 m!171855))

(declare-fun m!172629 () Bool)

(assert (=> bm!15784 m!172629))

(assert (=> b!142939 m!171855))

(assert (=> b!142939 m!171855))

(assert (=> b!142939 m!171857))

(assert (=> b!142941 m!171855))

(assert (=> b!142941 m!171855))

(assert (=> b!142941 m!171857))

(assert (=> b!142943 m!171855))

(assert (=> b!142943 m!171855))

(declare-fun m!172631 () Bool)

(assert (=> b!142943 m!172631))

(assert (=> bm!15638 d!45749))

(declare-fun lt!74876 () Bool)

(declare-fun d!45751 () Bool)

(assert (=> d!45751 (= lt!74876 (select (content!139 (toList!858 lt!73568)) (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun e!93129 () Bool)

(assert (=> d!45751 (= lt!74876 e!93129)))

(declare-fun res!68124 () Bool)

(assert (=> d!45751 (=> (not res!68124) (not e!93129))))

(assert (=> d!45751 (= res!68124 ((_ is Cons!1715) (toList!858 lt!73568)))))

(assert (=> d!45751 (= (contains!907 (toList!858 lt!73568) (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!74876)))

(declare-fun b!142944 () Bool)

(declare-fun e!93130 () Bool)

(assert (=> b!142944 (= e!93129 e!93130)))

(declare-fun res!68125 () Bool)

(assert (=> b!142944 (=> res!68125 e!93130)))

(assert (=> b!142944 (= res!68125 (= (h!2322 (toList!858 lt!73568)) (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!142945 () Bool)

(assert (=> b!142945 (= e!93130 (contains!907 (t!6295 (toList!858 lt!73568)) (tuple2!2623 lt!73220 (ite c!26142 (ite c!26144 (minValue!2789 newMap!16) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!45751 res!68124) b!142944))

(assert (= (and b!142944 (not res!68125)) b!142945))

(declare-fun m!172633 () Bool)

(assert (=> d!45751 m!172633))

(declare-fun m!172635 () Bool)

(assert (=> d!45751 m!172635))

(declare-fun m!172637 () Bool)

(assert (=> b!142945 m!172637))

(assert (=> b!140322 d!45751))

(declare-fun d!45753 () Bool)

(assert (=> d!45753 (= (apply!120 (+!173 lt!73312 (tuple2!2623 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73310) (apply!120 lt!73312 lt!73310))))

(assert (=> d!45753 true))

(declare-fun _$34!1013 () Unit!4387)

(assert (=> d!45753 (= (choose!867 lt!73312 lt!73322 (ite (and c!26142 c!26144) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73310) _$34!1013)))

(declare-fun bs!6064 () Bool)

(assert (= bs!6064 d!45753))

(assert (=> bs!6064 m!167135))

(assert (=> bs!6064 m!167135))

(assert (=> bs!6064 m!167157))

(assert (=> bs!6064 m!167155))

(assert (=> d!44013 d!45753))

(declare-fun d!45755 () Bool)

(declare-fun e!93131 () Bool)

(assert (=> d!45755 e!93131))

(declare-fun res!68126 () Bool)

(assert (=> d!45755 (=> res!68126 e!93131)))

(declare-fun lt!74880 () Bool)

(assert (=> d!45755 (= res!68126 (not lt!74880))))

(declare-fun lt!74877 () Bool)

(assert (=> d!45755 (= lt!74880 lt!74877)))

(declare-fun lt!74879 () Unit!4387)

(declare-fun e!93132 () Unit!4387)

(assert (=> d!45755 (= lt!74879 e!93132)))

(declare-fun c!27059 () Bool)

(assert (=> d!45755 (= c!27059 lt!74877)))

(assert (=> d!45755 (= lt!74877 (containsKey!180 (toList!858 lt!73312) lt!73310))))

(assert (=> d!45755 (= (contains!904 lt!73312 lt!73310) lt!74880)))

(declare-fun b!142946 () Bool)

(declare-fun lt!74878 () Unit!4387)

(assert (=> b!142946 (= e!93132 lt!74878)))

(assert (=> b!142946 (= lt!74878 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!858 lt!73312) lt!73310))))

(assert (=> b!142946 (isDefined!129 (getValueByKey!177 (toList!858 lt!73312) lt!73310))))

(declare-fun b!142947 () Bool)

(declare-fun Unit!4531 () Unit!4387)

(assert (=> b!142947 (= e!93132 Unit!4531)))

(declare-fun b!142948 () Bool)

(assert (=> b!142948 (= e!93131 (isDefined!129 (getValueByKey!177 (toList!858 lt!73312) lt!73310)))))

(assert (= (and d!45755 c!27059) b!142946))

(assert (= (and d!45755 (not c!27059)) b!142947))

(assert (= (and d!45755 (not res!68126)) b!142948))

(declare-fun m!172639 () Bool)

(assert (=> d!45755 m!172639))

(declare-fun m!172641 () Bool)

(assert (=> b!142946 m!172641))

(assert (=> b!142946 m!168609))

(assert (=> b!142946 m!168609))

(declare-fun m!172643 () Bool)

(assert (=> b!142946 m!172643))

(assert (=> b!142948 m!168609))

(assert (=> b!142948 m!168609))

(assert (=> b!142948 m!172643))

(assert (=> d!44013 d!45755))

(assert (=> d!44013 d!44041))

(assert (=> d!44013 d!44021))

(assert (=> d!44013 d!44027))

(assert (=> b!140491 d!44399))

(assert (=> b!140491 d!44401))

(assert (=> d!43913 d!43911))

(declare-fun d!45757 () Bool)

(assert (=> d!45757 (= (getValueByKey!177 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!182 (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45757 true))

(declare-fun _$22!501 () Unit!4387)

(assert (=> d!45757 (= (choose!873 lt!73278 (_1!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1322 (tuple2!2623 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (get!1531 (select (arr!2307 (_values!2922 (v!3279 (underlying!479 thiss!992)))) from!355) (dynLambda!439 (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!501)))

(declare-fun bs!6065 () Bool)

(assert (= bs!6065 d!45757))

(assert (=> bs!6065 m!167067))

(assert (=> d!43913 d!45757))

(declare-fun d!45759 () Bool)

(declare-fun res!68127 () Bool)

(declare-fun e!93133 () Bool)

(assert (=> d!45759 (=> res!68127 e!93133)))

(assert (=> d!45759 (= res!68127 (or ((_ is Nil!1716) lt!73278) ((_ is Nil!1716) (t!6295 lt!73278))))))

(assert (=> d!45759 (= (isStrictlySorted!312 lt!73278) e!93133)))

(declare-fun b!142949 () Bool)

(declare-fun e!93134 () Bool)

(assert (=> b!142949 (= e!93133 e!93134)))

(declare-fun res!68128 () Bool)

(assert (=> b!142949 (=> (not res!68128) (not e!93134))))

(assert (=> b!142949 (= res!68128 (bvslt (_1!1322 (h!2322 lt!73278)) (_1!1322 (h!2322 (t!6295 lt!73278)))))))

(declare-fun b!142950 () Bool)

(assert (=> b!142950 (= e!93134 (isStrictlySorted!312 (t!6295 lt!73278)))))

(assert (= (and d!45759 (not res!68127)) b!142949))

(assert (= (and b!142949 res!68128) b!142950))

(declare-fun m!172645 () Bool)

(assert (=> b!142950 m!172645))

(assert (=> d!43913 d!45759))

(declare-fun d!45761 () Bool)

(declare-fun e!93135 () Bool)

(assert (=> d!45761 e!93135))

(declare-fun res!68129 () Bool)

(assert (=> d!45761 (=> (not res!68129) (not e!93135))))

(declare-fun lt!74883 () ListLongMap!1685)

(assert (=> d!45761 (= res!68129 (contains!904 lt!74883 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74882 () List!1719)

(assert (=> d!45761 (= lt!74883 (ListLongMap!1686 lt!74882))))

(declare-fun lt!74881 () Unit!4387)

(declare-fun lt!74884 () Unit!4387)

(assert (=> d!45761 (= lt!74881 lt!74884)))

(assert (=> d!45761 (= (getValueByKey!177 lt!74882 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45761 (= lt!74884 (lemmaContainsTupThenGetReturnValue!91 lt!74882 (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45761 (= lt!74882 (insertStrictlySorted!94 (toList!858 call!15592) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45761 (= (+!173 call!15592 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74883)))

(declare-fun b!142951 () Bool)

(declare-fun res!68130 () Bool)

(assert (=> b!142951 (=> (not res!68130) (not e!93135))))

(assert (=> b!142951 (= res!68130 (= (getValueByKey!177 (toList!858 lt!74883) (_1!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!182 (_2!1322 (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142952 () Bool)

(assert (=> b!142952 (= e!93135 (contains!907 (toList!858 lt!74883) (tuple2!2623 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45761 res!68129) b!142951))

(assert (= (and b!142951 res!68130) b!142952))

(declare-fun m!172647 () Bool)

(assert (=> d!45761 m!172647))

(declare-fun m!172649 () Bool)

(assert (=> d!45761 m!172649))

(declare-fun m!172651 () Bool)

(assert (=> d!45761 m!172651))

(declare-fun m!172653 () Bool)

(assert (=> d!45761 m!172653))

(declare-fun m!172655 () Bool)

(assert (=> b!142951 m!172655))

(declare-fun m!172657 () Bool)

(assert (=> b!142952 m!172657))

(assert (=> b!140587 d!45761))

(assert (=> b!140985 d!44451))

(assert (=> b!140985 d!44083))

(declare-fun b!142953 () Bool)

(declare-fun e!93138 () SeekEntryResult!273)

(assert (=> b!142953 (= e!93138 (MissingVacant!273 (index!3257 lt!73212)))))

(declare-fun b!142954 () Bool)

(assert (=> b!142954 (= e!93138 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16)) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (mask!7279 newMap!16)) (index!3257 lt!73212) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)))))

(declare-fun b!142955 () Bool)

(declare-fun e!93136 () SeekEntryResult!273)

(assert (=> b!142955 (= e!93136 Undefined!273)))

(declare-fun b!142956 () Bool)

(declare-fun e!93137 () SeekEntryResult!273)

(assert (=> b!142956 (= e!93137 (Found!273 (nextIndex!0 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16))))))

(declare-fun d!45763 () Bool)

(declare-fun lt!74885 () SeekEntryResult!273)

(assert (=> d!45763 (and (or ((_ is Undefined!273) lt!74885) (not ((_ is Found!273) lt!74885)) (and (bvsge (index!3256 lt!74885) #b00000000000000000000000000000000) (bvslt (index!3256 lt!74885) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74885) ((_ is Found!273) lt!74885) (not ((_ is MissingVacant!273) lt!74885)) (not (= (index!3258 lt!74885) (index!3257 lt!73212))) (and (bvsge (index!3258 lt!74885) #b00000000000000000000000000000000) (bvslt (index!3258 lt!74885) (size!2578 (_keys!4698 newMap!16))))) (or ((_ is Undefined!273) lt!74885) (ite ((_ is Found!273) lt!74885) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3256 lt!74885)) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)) (and ((_ is MissingVacant!273) lt!74885) (= (index!3258 lt!74885) (index!3257 lt!73212)) (= (select (arr!2306 (_keys!4698 newMap!16)) (index!3258 lt!74885)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!45763 (= lt!74885 e!93136)))

(declare-fun c!27060 () Bool)

(assert (=> d!45763 (= c!27060 (bvsge (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!74886 () (_ BitVec 64))

(assert (=> d!45763 (= lt!74886 (select (arr!2306 (_keys!4698 newMap!16)) (nextIndex!0 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16))))))

(assert (=> d!45763 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45763 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (nextIndex!0 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16)) (index!3257 lt!73212) (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355) (_keys!4698 newMap!16) (mask!7279 newMap!16)) lt!74885)))

(declare-fun b!142957 () Bool)

(declare-fun c!27061 () Bool)

(assert (=> b!142957 (= c!27061 (= lt!74886 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142957 (= e!93137 e!93138)))

(declare-fun b!142958 () Bool)

(assert (=> b!142958 (= e!93136 e!93137)))

(declare-fun c!27062 () Bool)

(assert (=> b!142958 (= c!27062 (= lt!74886 (select (arr!2306 (_keys!4698 (v!3279 (underlying!479 thiss!992)))) from!355)))))

(assert (= (and d!45763 c!27060) b!142955))

(assert (= (and d!45763 (not c!27060)) b!142958))

(assert (= (and b!142958 c!27062) b!142956))

(assert (= (and b!142958 (not c!27062)) b!142957))

(assert (= (and b!142957 c!27061) b!142953))

(assert (= (and b!142957 (not c!27061)) b!142954))

(assert (=> b!142954 m!168451))

(declare-fun m!172659 () Bool)

(assert (=> b!142954 m!172659))

(assert (=> b!142954 m!172659))

(assert (=> b!142954 m!166633))

(declare-fun m!172661 () Bool)

(assert (=> b!142954 m!172661))

(declare-fun m!172663 () Bool)

(assert (=> d!45763 m!172663))

(declare-fun m!172665 () Bool)

(assert (=> d!45763 m!172665))

(assert (=> d!45763 m!168451))

(declare-fun m!172667 () Bool)

(assert (=> d!45763 m!172667))

(assert (=> d!45763 m!166907))

(assert (=> b!140821 d!45763))

(declare-fun d!45765 () Bool)

(declare-fun lt!74887 () (_ BitVec 32))

(assert (=> d!45765 (and (bvsge lt!74887 #b00000000000000000000000000000000) (bvslt lt!74887 (bvadd (mask!7279 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!45765 (= lt!74887 (choose!52 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16)))))

(assert (=> d!45765 (validMask!0 (mask!7279 newMap!16))))

(assert (=> d!45765 (= (nextIndex!0 (index!3257 lt!73212) (bvadd (x!16130 lt!73212) #b00000000000000000000000000000001) (mask!7279 newMap!16)) lt!74887)))

(declare-fun bs!6066 () Bool)

(assert (= bs!6066 d!45765))

(declare-fun m!172669 () Bool)

(assert (=> bs!6066 m!172669))

(assert (=> bs!6066 m!166907))

(assert (=> b!140821 d!45765))

(declare-fun d!45767 () Bool)

(assert (=> d!45767 (= (get!1534 (select (arr!2307 (ite c!26142 (_values!2922 newMap!16) lt!73112)) #b00000000000000000000000000000000) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!439 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140982 d!45767))

(declare-fun d!45769 () Bool)

(declare-fun c!27063 () Bool)

(assert (=> d!45769 (= c!27063 ((_ is Nil!1716) (toList!858 lt!73275)))))

(declare-fun e!93139 () (InoxSet tuple2!2622))

(assert (=> d!45769 (= (content!139 (toList!858 lt!73275)) e!93139)))

(declare-fun b!142959 () Bool)

(assert (=> b!142959 (= e!93139 ((as const (Array tuple2!2622 Bool)) false))))

(declare-fun b!142960 () Bool)

(assert (=> b!142960 (= e!93139 ((_ map or) (store ((as const (Array tuple2!2622 Bool)) false) (h!2322 (toList!858 lt!73275)) true) (content!139 (t!6295 (toList!858 lt!73275)))))))

(assert (= (and d!45769 c!27063) b!142959))

(assert (= (and d!45769 (not c!27063)) b!142960))

(declare-fun m!172671 () Bool)

(assert (=> b!142960 m!172671))

(assert (=> b!142960 m!170923))

(assert (=> d!44195 d!45769))

(declare-fun b!142962 () Bool)

(declare-fun e!93141 () Bool)

(assert (=> b!142962 (= e!93141 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4849 () Bool)

(declare-fun mapRes!4849 () Bool)

(declare-fun tp!11581 () Bool)

(declare-fun e!93140 () Bool)

(assert (=> mapNonEmpty!4849 (= mapRes!4849 (and tp!11581 e!93140))))

(declare-fun mapKey!4849 () (_ BitVec 32))

(declare-fun mapRest!4849 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4849 () ValueCell!1121)

(assert (=> mapNonEmpty!4849 (= mapRest!4848 (store mapRest!4849 mapKey!4849 mapValue!4849))))

(declare-fun condMapEmpty!4849 () Bool)

(declare-fun mapDefault!4849 () ValueCell!1121)

(assert (=> mapNonEmpty!4848 (= condMapEmpty!4849 (= mapRest!4848 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4849)))))

(assert (=> mapNonEmpty!4848 (= tp!11580 (and e!93141 mapRes!4849))))

(declare-fun mapIsEmpty!4849 () Bool)

(assert (=> mapIsEmpty!4849 mapRes!4849))

(declare-fun b!142961 () Bool)

(assert (=> b!142961 (= e!93140 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4848 condMapEmpty!4849) mapIsEmpty!4849))

(assert (= (and mapNonEmpty!4848 (not condMapEmpty!4849)) mapNonEmpty!4849))

(assert (= (and mapNonEmpty!4849 ((_ is ValueCellFull!1121) mapValue!4849)) b!142961))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1121) mapDefault!4849)) b!142962))

(declare-fun m!172673 () Bool)

(assert (=> mapNonEmpty!4849 m!172673))

(declare-fun b!142964 () Bool)

(declare-fun e!93143 () Bool)

(assert (=> b!142964 (= e!93143 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4850 () Bool)

(declare-fun mapRes!4850 () Bool)

(declare-fun tp!11582 () Bool)

(declare-fun e!93142 () Bool)

(assert (=> mapNonEmpty!4850 (= mapRes!4850 (and tp!11582 e!93142))))

(declare-fun mapValue!4850 () ValueCell!1121)

(declare-fun mapKey!4850 () (_ BitVec 32))

(declare-fun mapRest!4850 () (Array (_ BitVec 32) ValueCell!1121))

(assert (=> mapNonEmpty!4850 (= mapRest!4847 (store mapRest!4850 mapKey!4850 mapValue!4850))))

(declare-fun condMapEmpty!4850 () Bool)

(declare-fun mapDefault!4850 () ValueCell!1121)

(assert (=> mapNonEmpty!4847 (= condMapEmpty!4850 (= mapRest!4847 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4850)))))

(assert (=> mapNonEmpty!4847 (= tp!11579 (and e!93143 mapRes!4850))))

(declare-fun mapIsEmpty!4850 () Bool)

(assert (=> mapIsEmpty!4850 mapRes!4850))

(declare-fun b!142963 () Bool)

(assert (=> b!142963 (= e!93142 tp_is_empty!2929)))

(assert (= (and mapNonEmpty!4847 condMapEmpty!4850) mapIsEmpty!4850))

(assert (= (and mapNonEmpty!4847 (not condMapEmpty!4850)) mapNonEmpty!4850))

(assert (= (and mapNonEmpty!4850 ((_ is ValueCellFull!1121) mapValue!4850)) b!142963))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1121) mapDefault!4850)) b!142964))

(declare-fun m!172675 () Bool)

(assert (=> mapNonEmpty!4850 m!172675))

(declare-fun b_lambda!6395 () Bool)

(assert (= b_lambda!6363 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6395)))

(declare-fun b_lambda!6397 () Bool)

(assert (= b_lambda!6373 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6397)))

(declare-fun b_lambda!6399 () Bool)

(assert (= b_lambda!6377 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6399)))

(declare-fun b_lambda!6401 () Bool)

(assert (= b_lambda!6391 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6401)))

(declare-fun b_lambda!6403 () Bool)

(assert (= b_lambda!6359 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6403)))

(declare-fun b_lambda!6405 () Bool)

(assert (= b_lambda!6367 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6405)))

(declare-fun b_lambda!6407 () Bool)

(assert (= b_lambda!6361 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6407)))

(declare-fun b_lambda!6409 () Bool)

(assert (= b_lambda!6379 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6409)))

(declare-fun b_lambda!6411 () Bool)

(assert (= b_lambda!6389 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6411)))

(declare-fun b_lambda!6413 () Bool)

(assert (= b_lambda!6365 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6413)))

(declare-fun b_lambda!6415 () Bool)

(assert (= b_lambda!6387 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6415)))

(declare-fun b_lambda!6417 () Bool)

(assert (= b_lambda!6381 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6417)))

(declare-fun b_lambda!6419 () Bool)

(assert (= b_lambda!6375 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6419)))

(declare-fun b_lambda!6421 () Bool)

(assert (= b_lambda!6313 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 (_2!1323 lt!73124)))) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (_2!1323 lt!73124)))) b_lambda!6421)))

(declare-fun b_lambda!6423 () Bool)

(assert (= b_lambda!6371 (or (and b!139542 b_free!3025) (and b!139556 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))))) b_lambda!6423)))

(declare-fun b_lambda!6425 () Bool)

(assert (= b_lambda!6393 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6425)))

(declare-fun b_lambda!6427 () Bool)

(assert (= b_lambda!6351 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6427)))

(declare-fun b_lambda!6429 () Bool)

(assert (= b_lambda!6349 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6429)))

(declare-fun b_lambda!6431 () Bool)

(assert (= b_lambda!6385 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6431)))

(declare-fun b_lambda!6433 () Bool)

(assert (= b_lambda!6383 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6433)))

(declare-fun b_lambda!6435 () Bool)

(assert (= b_lambda!6357 (or (and b!139542 b_free!3025 (= (defaultEntry!2939 (v!3279 (underlying!479 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139556 b_free!3027) b_lambda!6435)))

(check-sat (not b_lambda!6413) (not b!141131) (not b!142141) (not b_lambda!6425) (not b!141251) (not b_lambda!6339) (not bm!15771) (not d!44907) (not b!141784) (not d!45615) (not b!142210) (not b!141147) (not d!44887) (not b!142645) (not b!141661) (not b!141567) (not bm!15670) (not d!45701) (not d!45401) (not b!141365) (not d!45037) (not d!44821) (not b!142308) (not b!142710) (not d!44785) (not b!141962) (not d!45703) (not d!45237) (not b!142747) (not b!141623) (not d!45361) (not b!142943) (not b!142794) (not d!45179) (not d!45051) (not b!142383) (not b!141865) (not b!142018) (not b_next!3027) (not bm!15708) (not b!141796) (not b!141232) (not b!141563) (not b!141678) (not b!142198) (not d!44687) (not b!141380) (not b!142490) (not b!141133) (not d!45605) (not b!141608) (not b!141847) (not b!141970) (not d!44473) (not b!141986) (not bm!15784) (not d!44875) (not d!45123) (not b!141917) (not b!141420) (not b!141363) (not b!142216) (not b!141429) (not b!142269) b_and!8913 (not b!142501) (not d!45397) (not b_lambda!6335) (not d!44483) (not d!44513) (not b_lambda!6347) (not d!44397) (not b!142335) (not b!141574) (not b!141361) (not d!45517) (not b!142049) (not b!142676) (not b!142462) (not d!44457) (not b!141603) (not b!141376) (not d!44517) (not d!45121) (not b!141408) (not b!142634) (not b!141619) (not b!142417) (not mapNonEmpty!4850) (not b!142796) (not d!44261) (not d!44271) (not d!44861) (not d!45597) (not d!45569) (not b!142440) (not b!141196) (not d!45469) (not b!141762) (not d!44711) (not b!141517) (not b!141261) (not b!142915) (not b!141372) (not b!142822) (not d!45507) (not b!141989) (not b!142014) (not b!141566) (not d!45537) (not d!44605) (not d!45471) (not d!44769) (not b!142200) (not b!142474) (not b!142303) (not b!142089) (not b!142732) (not b!141937) (not d!45429) (not d!45257) (not b!142135) (not b!142068) (not bm!15777) (not d!45249) (not b!142087) (not b!142368) (not b!141537) (not b!142829) (not b!141494) (not d!45135) (not bm!15768) (not d!44859) (not b!142524) (not d!44877) (not b!141146) (not b!142005) (not b!141379) (not b!141694) (not b!141728) (not d!45105) (not d!45523) (not b!141754) (not b!141533) (not b!142002) (not b!142307) (not b!141418) (not d!45003) (not d!44529) (not b!142238) (not b!142677) (not d!45011) (not d!44693) (not d!45727) (not d!44723) (not b!141304) (not d!44445) (not d!44787) (not b!141276) (not b!141626) (not b!142798) (not bm!15707) (not b!142413) (not b!141395) (not d!45093) (not d!45739) (not d!45697) (not b!142036) (not b!142858) (not d!44879) (not b!141640) (not b!142919) (not d!44623) (not b!141985) (not d!44867) (not b!142389) (not d!44419) (not d!44955) (not b_lambda!6399) (not d!45487) (not d!44643) (not bm!15697) (not d!44767) (not b!142567) (not b!142618) (not b!141792) (not b_next!3025) (not d!44631) (not b!141404) (not b!142168) (not b!142360) (not b!142806) (not b!142285) (not b!141287) (not d!44423) (not d!44615) (not bm!15729) (not b!142078) (not d!45695) (not b!141748) (not b!142332) (not b!141381) (not b!142745) (not b!142337) (not b!142529) (not b!142551) (not b!141771) (not d!45477) (not b!142514) (not b!141415) (not b!142642) (not b!142456) (not d!45457) (not b!141432) (not d!44505) (not d!45459) (not d!45689) (not b!141902) (not b!141407) (not b!141879) (not d!44889) (not b!142483) (not d!44211) (not d!45145) (not d!44297) (not b!141371) (not d!44945) (not b!142820) (not d!44373) (not b!141320) (not b!142375) (not d!45021) (not d!45063) (not b!142277) (not b!141442) (not d!44545) (not d!45755) (not b!142498) (not bm!15655) (not b!142682) (not b!141123) (not b!142752) (not d!44983) (not d!45109) (not b!142867) (not b!142188) (not b!142906) (not d!45057) (not d!45753) (not b!142204) (not bm!15676) (not b!142592) (not b!142266) (not b!142534) (not b!141851) (not bm!15755) (not d!44559) (not b!142865) (not d!44481) (not b_lambda!6419) (not d!44555) (not b!141215) (not b!141499) (not b!141647) (not b!142521) (not b!142839) (not b!142960) (not b!141734) (not d!45183) (not b_lambda!6337) (not d!44413) (not b!141118) (not d!44873) (not b!142832) (not b!141314) (not b!142760) (not b!142581) (not b!141707) (not b!142715) (not d!44283) (not b!141519) (not d!45027) (not b!141966) (not b!142485) (not d!44833) (not b!142950) (not b!141913) (not b!141980) (not d!45187) (not b_lambda!6329) (not b!141222) (not b!142262) (not d!44343) (not d!44891) (not b!141799) (not d!44771) (not d!45119) (not d!44763) (not bm!15752) (not d!44349) (not d!44467) (not b!142248) (not b!141996) (not b!142161) (not b!141752) (not d!45081) (not b!142535) (not b!141267) (not d!44443) (not d!44353) (not b!142215) (not d!45747) (not d!45411) (not d!45607) (not b!142226) (not b!142772) (not bm!15681) (not b!142952) (not bm!15703) (not b_lambda!6409) (not b!141520) (not b!141930) (not b!142357) (not b!141881) (not d!44527) (not d!44461) (not b!141841) (not b!141844) (not b!142379) (not d!45261) (not bm!15717) (not b!141119) (not d!45169) (not d!45663) (not b!142328) (not d!45497) (not b!141649) (not b!142191) (not d!44719) (not bm!15675) (not b!142614) (not b_lambda!6283) (not d!44783) (not b_lambda!6427) (not d!44421) (not b!141403) (not b!142438) (not b!141177) (not b!142846) (not b!142041) (not b!141210) (not d!44447) (not d!45303) (not b!141128) (not d!44743) (not d!45343) (not b!141765) (not b!142712) (not d!45715) (not b!142283) (not d!45573) (not b!142545) (not b!141367) (not d!44691) (not b!141348) (not b!141482) (not d!44883) (not b!142097) (not b!142208) (not d!45591) (not b!141174) (not b!142882) (not b!141219) (not d!44871) (not b!141104) (not d!44219) (not bm!15714) (not b!141702) (not d!45763) (not b!142793) (not b!142593) (not b!141613) (not b!142600) (not d!45711) (not b!142824) (not b!141942) (not b!142554) (not bm!15740) (not b!141607) (not d!44433) (not b!141511) (not b!141812) (not b!141512) (not b!141698) (not d!45557) (not b!142912) (not b!142464) (not b!142099) (not b!142281) (not b!141231) (not b!142842) (not d!44429) (not b!142249) (not b!142750) (not b!141502) (not b!141590) (not b!141974) (not b_lambda!6321) (not b!141406) (not d!44431) (not bm!15659) (not b!142658) (not b!141161) (not d!44417) (not b!142350) (not b!142656) (not b!141256) (not d!45685) (not b!141602) (not b!142221) (not b!141542) (not b!141610) (not bm!15723) (not b!141576) (not b!141134) (not b!141556) (not d!44703) (not b!142425) (not d!45065) (not b!141768) (not b!141872) (not b!141447) (not d!45163) (not b!142610) (not b!141885) (not b!141926) (not b!142679) (not b!141690) (not d!44617) (not bm!15765) (not bm!15704) (not b!141840) (not d!44495) (not bm!15761) (not b!141733) (not b!141739) (not d!45031) (not d!44745) (not b_lambda!6395) (not d!44383) (not b!141531) (not b!141928) (not b!141593) (not b!141674) (not d!44903) (not b!142729) (not d!44357) (not b!141237) (not b!141245) (not b!141181) (not d!45301) (not b!141355) (not b!142181) (not d!45321) (not d!45635) (not d!45285) (not b_lambda!6421) (not b!141627) (not d!45705) (not d!44243) (not d!45103) (not b!142704) (not b!142396) (not b!142557) (not d!45475) (not b!141802) (not b!142766) (not d!45495) (not b!142113) (not b!141578) (not b!141413) (not b!142694) (not d!44369) (not b!141564) (not d!45219) (not d!44455) (not d!45453) (not b!141854) (not b!141562) (not b!141387) (not b!141481) (not b!142451) (not d!44235) (not b!141498) (not d!44733) (not b!142938) (not b!142048) (not b!141129) (not b!142009) (not b!141373) (not d!45465) (not b!141726) (not b!142941) (not b!142785) (not bm!15662) (not b!142500) (not b!142836) (not b!141220) (not d!45563) (not b!142274) (not d!44961) (not b!142190) (not b!142207) (not d!45449) (not b!141983) (not d!45713) (not b!141761) (not d!45199) (not bm!15671) (not d!45009) (not b!142734) (not b!141740) (not d!45137) (not b!141187) (not b_lambda!6411) (not b!142720) (not d!45129) (not b!141166) (not b!142585) (not d!44731) (not d!45665) (not d!44427) (not b!141932) (not b!141683) (not b!142624) (not b!142817) (not b_lambda!6355) (not d!45493) (not b!142178) (not b!142259) (not b!142121) (not b!141998) (not b!141697) (not b!141945) (not d!45175) (not d!45559) (not b!141377) (not b!141948) (not d!44425) (not b!142067) (not d!44921) (not b!142928) (not b!141158) (not b!142258) (not b!142154) (not d!44855) (not b!142697) (not bm!15720) (not d!44869) (not b!142218) (not b!141804) (not b!142410) (not d!44573) (not b!142091) (not d!44715) (not b!142827) (not b!142611) (not b!141173) (not d!45313) (not b!142129) (not b!141922) (not d!45143) (not b!141124) (not b!141422) (not d!45673) (not d!44259) (not b!141115) (not b!142348) (not d!44325) (not d!44971) (not bm!15672) (not b!142937) (not d!44477) (not b!142342) (not b!141731) (not d!44249) (not d!45329) (not d!44379) (not d!45393) (not b!142199) (not b!142437) (not d!44269) (not b_lambda!6265) (not b!141427) (not b!141712) (not b!142043) (not d!44521) (not b!141659) (not b!142862) (not b!142027) (not b!142897) (not d!45751) (not b!141547) (not b!142016) (not b!142572) (not b!142347) (not d!44411) (not b!142435) (not b!142205) (not d!44661) (not b!141296) (not b!142404) (not b!142391) (not b!141122) (not b!141330) (not d!45445) (not d!44951) (not b!141898) (not b!142171) (not b!141207) (not b!141632) (not d!45667) (not d!45255) (not d!44233) (not d!44273) (not b!142463) (not b!141165) (not b!142857) (not b!141534) (not d!45683) (not b!142354) (not d!44553) (not b!142386) (not d!44549) (not b!141616) (not d!44585) (not b!141720) (not b!141464) (not b!142151) (not d!44665) (not bm!15663) (not b!141889) (not b!142685) (not b!141148) (not b!141828) (not b!141292) (not d!44275) (not b!142187) (not b!142935) (not b!141834) (not b!142120) (not b!142196) (not b!142884) (not b!142608) (not b!141978) (not b!142874) (not b!142024) (not d!44655) (not b!142011) (not b!142777) (not b!141260) (not b!141311) (not d!45765) (not b!142932) (not b_lambda!6333) (not b!141897) (not b!142756) (not b!142031) (not b!141241) (not b!142541) (not b!141191) (not b!141560) (not b!142116) (not d!44507) (not d!45155) (not b!142213) (not b!141774) (not b!141446) (not d!44221) (not b!141572) (not d!45151) (not d!45367) (not b!141340) (not b!142294) (not d!44263) (not b!141366) (not b!141389) (not b!141730) (not b!142826) (not b!141323) (not d!44469) (not b!142883) (not b!141700) (not d!45167) (not d!44407) (not b!141884) (not b!141217) (not b!141687) (not d!44633) (not b!142900) (not d!44323) (not b!142273) (not b!142003) (not d!44935) (not d!44225) (not b!141362) (not b!142394) (not d!45645) (not d!44965) (not b!141584) (not b!142582) (not b!142223) (not b!141268) (not b!141238) (not b!142542) (not b!141820) (not b!142892) (not d!44563) (not b!142652) (not bm!15656) (not b!141904) (not b!141347) (not b!141472) (not b!142687) (not b!142781) (not b!142543) (not b!142854) (not b!141960) (not d!44511) (not d!44205) (not b!141116) (not d!44591) (not d!45101) (not d!45535) (not b!141530) (not d!44281) (not b!141940) (not b!141139) (not d!45127) (not b!142878) (not d!44997) (not b!142605) (not b!142131) (not b!142763) (not b!142638) (not d!45687) (not b!141833) (not d!45289) (not b!142876) (not b!141723) (not b!142149) (not d!44371) (not b!142126) (not b!142693) (not b!141895) (not d!44987) (not b!141691) (not b!142311) (not b!142163) (not b!142539) (not b!142532) (not b!141254) (not b!141849) (not d!44579) (not d!45721) (not b!141781) (not b!141216) (not d!44567) (not d!45757) (not d!45427) (not b!142052) (not b!142864) (not d!44565) (not b!142046) (not b!142232) (not d!44387) (not b!142271) (not b!142189) (not b!141579) (not b!141582) (not b!141918) (not bm!15744) (not b!142948) (not d!45655) (not b!142104) (not d!45399) (not b!142881) (not d!45693) (not b!141539) (not b!142951) (not b!142493) (not b!141760) (not b!141454) (not b!142246) (not d!44931) (not d!44399) (not b_lambda!6417) (not b!142039) (not b!141226) (not d!45159) (not b!141102) (not b!142661) b_and!8915 (not b!141213) (not b!141963) (not d!45273) (not b!142224) (not d!45391) (not bm!15702) (not d!45165) (not d!44307) (not bm!15687) (not b!141351) (not b!141670) (not d!44339) (not b!141955) (not b!142242) (not b!142628) (not b!142460) (not d!44229) (not b!142449) (not d!45133) (not d!45269) (not d!44831) (not b!141772) (not d!44819) (not b!142289) (not d!44335) (not b!142086) (not b!141658) (not mapNonEmpty!4849) (not b!141194) (not b_lambda!6403) (not bm!15733) (not d!44717) (not b!142925) (not b!142560) (not b!141767) (not d!44607) (not b!141201) (not b!141704) (not b!141677) (not d!44679) (not b!142801) (not d!44337) (not b!141843) (not b!141269) (not b!141445) (not b!141896) (not b!141725) (not d!45141) (not d!44613) (not b!141400) (not b!141652) (not b!142300) (not d!44823) (not bm!15749) (not b_lambda!6405) (not b!142065) (not d!45691) (not b!141342) (not d!44627) (not b!142399) (not b!142471) (not d!44939) (not b!141746) (not b!142060) (not b!141906) (not b!142143) (not b!142455) (not b!142775) (not b!142287) (not d!45545) (not b!141224) (not d!44557) (not b!142603) (not b_lambda!6325) (not d!44727) (not b!141318) (not bm!15705) (not d!45637) (not b!142153) (not b!141393) (not d!45639) (not bm!15730) (not d!45005) (not d!45089) (not b!142778) (not b_lambda!6285) (not b!141125) (not b!141823) (not d!45423) (not d!44755) (not b!141468) (not d!44741) (not b!142814) (not b!141747) (not d!44923) (not d!44241) (not b!141587) (not b!141263) (not b!142445) (not b!141846) (not b!142214) (not b!141294) (not d!44355) (not d!44541) (not bm!15736) (not b!141221) (not b!142860) (not b!141302) (not d!45041) (not b!141705) (not bm!15762) (not d!45023) (not d!44739) (not bm!15701) (not b!142316) (not b!142469) (not b!142922) (not d!44227) (not b!142621) (not b!142495) (not b!142700) (not b!141681) (not b!142145) (not b!142574) (not b!142667) (not b!141497) (not d!44441) (not b!142512) (not b!141385) (not d!44437) (not b!141199) (not b_lambda!6407) (not b!142352) (not b!142123) (not d!45675) (not d!44963) (not d!44801) (not b!141977) (not b!141113) (not b!141338) (not d!45279) (not b!141878) (not bm!15758) (not b!141689) (not b!141715) (not d!45147) (not d!44759) (not b!142718) (not b!141656) (not b!141911) (not b!141284) (not b!142156) (not b!141832) (not d!44267) (not d!45113) (not d!44465) (not b!141402) (not b!142251) (not d!45579) (not d!44345) (not b!141871) (not b!141110) (not b_lambda!6345) (not b!141257) (not b!141773) (not d!45197) (not bm!15745) (not d!45349) (not d!44577) (not d!44825) (not d!44837) (not d!45561) (not d!44751) (not b!141392) (not b!141358) (not b!142769) (not b!141465) (not b!142107) (not b!141654) (not b!142256) (not d!44881) (not d!45483) (not b!141861) (not bm!15654) (not b!141197) (not b!141581) (not b!141368) (not d!45709) (not b!142812) (not b!142376) (not d!44289) (not d!44471) (not d!45417) (not b!142707) (not d!44501) (not d!45149) (not b!142393) (not b!141223) (not d!44313) (not d!44451) (not b!142309) (not b!141892) (not d!45525) (not b!141233) (not b!142880) (not d!45213) (not d!45729) (not d!44989) (not b!142946) (not b!142114) (not bm!15680) (not b!141258) (not b_lambda!6397) (not b!142875) (not d!45409) (not b_lambda!6401) (not b!142330) (not b_lambda!6281) (not b!141375) (not b!142909) (not b_lambda!6323) (not b!142569) (not b!141818) (not bm!15706) (not d!45055) (not d!45239) (not b!141666) (not b!141435) (not b!141777) (not b!142877) (not b!141326) (not b!141463) (not b!141886) (not b!141589) (not d!44459) (not b!141486) (not b!141121) (not b!142071) (not b!141934) (not b!142349) (not b!141434) (not d!44305) (not b!142326) (not b!141107) (not b!141396) (not b!141685) (not b!142227) (not bm!15690) (not d!44389) (not b!141887) (not d!44789) (not b!141701) (not b!141345) (not b!142234) (not b!142365) (not b!141717) (not b!141825) (not b!141597) (not b!141806) (not b!141489) (not bm!15774) (not d!44927) (not d!44285) (not d!44925) (not b!142695) (not b!142556) (not b!141386) (not b!142664) (not d!45207) (not d!44841) (not d!45549) (not bm!15780) (not b!142453) (not b!142945) (not b!141769) (not b!141249) (not b!142370) (not b_lambda!6353) (not b!141506) (not d!45489) (not d!44791) (not d!44735) (not b!141753) (not b!141127) (not b!142856) (not b!142321) (not b!141227) (not b!141452) (not d!45283) (not b!142229) (not d!44625) (not b_lambda!6327) (not d!45659) (not d!45403) (not d!44713) (not b!141369) (not d!44865) (not b!142427) (not b!142406) (not b!142367) (not d!44237) (not d!45617) (not b!141558) (not b!142447) (not b!141228) (not b!141554) (not b!142007) (not b!141947) (not b!141569) (not b!141873) (not d!45405) (not d!45389) (not b!141908) (not bm!15667) (not b!142549) (not b!141394) (not bm!15748) (not d!44385) (not d!44597) (not d!44675) (not bm!15709) (not b!142939) (not b!142080) (not b!141262) (not b!142671) (not b!141957) (not d!45275) (not b!141816) (not b_lambda!6343) (not b!141737) (not d!44729) (not d!44967) (not d!45049) (not b!142345) (not b!142034) (not b!141944) (not b!141976) (not b!141615) (not b!142739) (not d!45555) (not b!141863) (not d!44363) (not d!45247) (not b!141280) (not b!141470) (not d!44809) (not d!45461) (not b!142250) (not bm!15664) (not b!142147) (not d!45435) (not b!141664) (not d!44257) (not b!142602) (not d!44547) (not b!142716) (not d!45707) (not d!44359) (not d!45001) (not b!142402) (not b!141153) (not b!141334) (not b!141831) (not d!45319) (not d!44453) (not b!141552) (not d!44815) (not d!45353) (not d!45235) (not b!141809) (not b!141253) (not d!45139) (not b!142631) (not d!45171) (not b!142139) (not b!141388) (not b!142823) (not b!142408) (not d!45085) (not b!142170) (not d!45509) (not d!44737) (not d!44561) (not b!141909) (not b!142487) (not b!142548) (not bm!15684) (not b!142083) (not d!44969) (not d!45153) (not b!141230) (not b!142338) (not b!142663) (not b!141891) (not d!44377) (not b!142291) (not d!45299) (not d!44621) (not b!141316) (not b!142753) (not d!44367) (not b!141786) (not d!45599) (not b!142158) (not b!142165) (not b!142458) (not bm!15677) (not b!142888) (not b!142004) (not b_lambda!6269) (not b!142736) (not d!44215) (not b!141168) (not bm!15694) (not b!142373) (not d!44685) (not bm!15712) (not b!142235) (not b!142313) (not b!142222) (not d!45355) (not b!142517) (not b!141382) (not b_lambda!6287) (not d!45271) (not b!142743) (not d!44321) (not b_lambda!6341) (not b!142021) (not b!142220) (not b!141876) (not d!45413) (not d!45741) (not b!141398) (not d!44635) (not d!44217) (not d!44683) (not b!142481) (not b!141600) (not d!45527) (not b!141738) (not d!44895) (not d!45131) (not d!45291) (not b_lambda!6431) (not d!44449) (not b!141545) (not d!45595) (not b!141163) (not bm!15741) (not b!141893) (not b!142319) (not d!44897) (not b!141327) (not b!142184) (not b!142804) (not b!141789) (not b!142075) (not d!44519) (not b!141111) (not b!142791) (not d!44949) (not b!142306) (not b!142245) (not d!45337) (not d!44239) (not b!142132) (not d!45015) (not b!142193) (not b!142595) (not d!44863) (not b!141277) (not b!142579) (not b!141729) (not b!141132) (not d!45553) (not d!44647) (not d!45677) (not b!141606) (not b!141409) (not b!141527) (not b!142355) (not b!142194) (not d!44851) (not b!141954) (not d!44611) (not bm!15726) (not b!142363) (not b!142292) (not b!142674) (not b!141523) (not b_lambda!6415) (not bm!15739) (not d!44839) (not b!141274) (not b!142511) (not d!44439) (not b!142174) (not d!44277) (not b!142903) (not d!45529) (not b!142000) (not d!45441) (not b!141745) (not b!142536) (not b!142279) (not d!44463) (not b!141514) (not b!141667) (not d!44943) (not b!142432) (not b!142478) (not b!141837) (not b!141735) (not b!141308) (not b!141305) (not d!45641) (not d!45043) (not d!44725) (not b!141778) (not b!141155) (not d!44341) (not d!45177) (not b!142597) (not b!142128) (not bm!15691) (not b!142809) (not b!141536) (not b!142714) (not b!141171) (not d!45761) (not b!142954) (not b!142508) (not d!44587) (not b!141993) (not b!141605) (not d!44223) (not b!142059) (not b!142202) (not d!45095) (not b!142118) (not b!141912) (not b!142429) (not b!141491) (not b!142849) (not b!141750) (not b!141425) (not d!45625) (not b_lambda!6423) (not b!142155) (not d!45347) (not b!142910) (not b!142122) (not b!142527) (not d!45217) (not b!141924) (not b!142576) (not d!45651) (not b!141706) (not d!45583) (not b!142088) (not b!141271) (not d!44475) (not d!44947) (not b!142094) (not d!44721) (not b!142056) (not d!45451) (not d!44309) (not b!142564) (not bm!15713) (not d!45047) (not b!142930) (not d!45201) (not b!141901) (not b!141757) (not b_lambda!6289) (not b!142647) (not b!141858) (not b!142788) (not b!142253) (not b!142492) (not b!141474) (not b!142006) (not d!45521) (not d!44231) (not d!44479) (not b!142422) (not b!141644) (not b_lambda!6429) (not d!45647) (not d!45379) (not b!142062) (not b!142488) (not b!142870) (not b!142023) (not b_lambda!6433) (not d!44805) (not b_lambda!6331) (not bm!15698) (not b!142655) (not d!44213) (not d!44435) (not b!142443) (not d!45585) (not b!142770) (not d!45107) (not d!45231) (not d!45481) (not b!141288) (not b!141915) (not d!45263) (not d!44659) (not d!44707) (not d!44583) tp_is_empty!2929 (not b!142504) (not d!44537) (not b!141204) (not b!141450) (not b!142895) (not d!45185) (not b!142531) (not b!141636) (not b!141142) (not d!44885) (not b!141184) (not b!142825) (not bm!15783) (not b!142419) (not b!141916) (not d!45415) (not b!141509) (not b_lambda!6369) (not d!45125) (not b!141629) (not b!141868) (not b!141289) (not bm!15683) (not b_lambda!6435) (not d!44845) (not d!45699) (not b!141973) (not b!141951) (not b!142690) (not d!45745) (not d!44957) (not b!141903) (not d!44315) (not b!142117) (not b!141438) (not b!142589))
(check-sat b_and!8913 b_and!8915 (not b_next!3025) (not b_next!3027))
