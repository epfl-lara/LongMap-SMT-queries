; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14712 () Bool)

(assert start!14712)

(declare-fun b!139651 () Bool)

(declare-fun b_free!3025 () Bool)

(declare-fun b_next!3025 () Bool)

(assert (=> b!139651 (= b_free!3025 (not b_next!3025))))

(declare-fun tp!11546 () Bool)

(declare-fun b_and!8693 () Bool)

(assert (=> b!139651 (= tp!11546 b_and!8693)))

(declare-fun b!139639 () Bool)

(declare-fun b_free!3027 () Bool)

(declare-fun b_next!3027 () Bool)

(assert (=> b!139639 (= b_free!3027 (not b_next!3027))))

(declare-fun tp!11548 () Bool)

(declare-fun b_and!8695 () Bool)

(assert (=> b!139639 (= tp!11548 b_and!8695)))

(declare-fun e!91056 () Bool)

(declare-fun e!91049 () Bool)

(declare-datatypes ((V!3553 0))(
  ( (V!3554 (val!1509 Int)) )
))
(declare-datatypes ((array!4873 0))(
  ( (array!4874 (arr!2302 (Array (_ BitVec 32) (_ BitVec 64))) (size!2575 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1121 0))(
  ( (ValueCellFull!1121 (v!3272 V!3553)) (EmptyCell!1121) )
))
(declare-datatypes ((array!4875 0))(
  ( (array!4876 (arr!2303 (Array (_ BitVec 32) ValueCell!1121)) (size!2576 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1150 0))(
  ( (LongMapFixedSize!1151 (defaultEntry!2939 Int) (mask!7278 (_ BitVec 32)) (extraKeys!2694 (_ BitVec 32)) (zeroValue!2789 V!3553) (minValue!2789 V!3553) (_size!624 (_ BitVec 32)) (_keys!4697 array!4873) (_values!2922 array!4875) (_vacant!624 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!1150)

(declare-fun tp_is_empty!2929 () Bool)

(declare-fun array_inv!1469 (array!4873) Bool)

(declare-fun array_inv!1470 (array!4875) Bool)

(assert (=> b!139639 (= e!91056 (and tp!11548 tp_is_empty!2929 (array_inv!1469 (_keys!4697 newMap!16)) (array_inv!1470 (_values!2922 newMap!16)) e!91049))))

(declare-fun mapIsEmpty!4827 () Bool)

(declare-fun mapRes!4828 () Bool)

(assert (=> mapIsEmpty!4827 mapRes!4828))

(declare-fun b!139640 () Bool)

(declare-fun res!66704 () Bool)

(declare-fun e!91050 () Bool)

(assert (=> b!139640 (=> (not res!66704) (not e!91050))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((Cell!930 0))(
  ( (Cell!931 (v!3273 LongMapFixedSize!1150)) )
))
(declare-datatypes ((LongMap!930 0))(
  ( (LongMap!931 (underlying!476 Cell!930)) )
))
(declare-fun thiss!992 () LongMap!930)

(assert (=> b!139640 (= res!66704 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!139641 () Bool)

(declare-fun e!91059 () Bool)

(assert (=> b!139641 (= e!91049 (and e!91059 mapRes!4828))))

(declare-fun condMapEmpty!4827 () Bool)

(declare-fun mapDefault!4828 () ValueCell!1121)

(assert (=> b!139641 (= condMapEmpty!4827 (= (arr!2303 (_values!2922 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4828)))))

(declare-fun b!139642 () Bool)

(assert (=> b!139642 (= e!91059 tp_is_empty!2929)))

(declare-fun b!139643 () Bool)

(declare-fun e!91052 () Bool)

(assert (=> b!139643 (= e!91052 tp_is_empty!2929)))

(declare-fun b!139644 () Bool)

(declare-fun e!91058 () Bool)

(declare-fun e!91047 () Bool)

(assert (=> b!139644 (= e!91058 e!91047)))

(declare-fun b!139645 () Bool)

(declare-fun e!91051 () Bool)

(declare-fun e!91048 () Bool)

(assert (=> b!139645 (= e!91051 e!91048)))

(declare-fun res!66705 () Bool)

(assert (=> b!139645 (=> (not res!66705) (not e!91048))))

(declare-datatypes ((tuple2!2656 0))(
  ( (tuple2!2657 (_1!1339 (_ BitVec 64)) (_2!1339 V!3553)) )
))
(declare-datatypes ((List!1739 0))(
  ( (Nil!1736) (Cons!1735 (h!2342 tuple2!2656) (t!6314 List!1739)) )
))
(declare-datatypes ((ListLongMap!1711 0))(
  ( (ListLongMap!1712 (toList!871 List!1739)) )
))
(declare-fun lt!72917 () ListLongMap!1711)

(declare-fun contains!910 (ListLongMap!1711 (_ BitVec 64)) Bool)

(assert (=> b!139645 (= res!66705 (contains!910 lt!72917 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2658 0))(
  ( (tuple2!2659 (_1!1340 Bool) (_2!1340 LongMapFixedSize!1150)) )
))
(declare-fun lt!72918 () tuple2!2658)

(declare-fun update!208 (LongMapFixedSize!1150 (_ BitVec 64) V!3553) tuple2!2658)

(declare-fun get!1523 (ValueCell!1121 V!3553) V!3553)

(declare-fun dynLambda!434 (Int (_ BitVec 64)) V!3553)

(assert (=> b!139645 (= lt!72918 (update!208 newMap!16 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!139646 () Bool)

(declare-fun e!91055 () Bool)

(assert (=> b!139646 (= e!91055 tp_is_empty!2929)))

(declare-fun b!139647 () Bool)

(assert (=> b!139647 (= e!91048 (not (or (bvsge (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b01111111111111111111111111111111) (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))))

(declare-datatypes ((List!1740 0))(
  ( (Nil!1737) (Cons!1736 (h!2343 (_ BitVec 64)) (t!6315 List!1740)) )
))
(declare-fun arrayNoDuplicates!0 (array!4873 (_ BitVec 32) List!1740) Bool)

(assert (=> b!139647 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) from!355 Nil!1737)))

(declare-datatypes ((Unit!4393 0))(
  ( (Unit!4394) )
))
(declare-fun lt!72916 () Unit!4393)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4873 (_ BitVec 32) (_ BitVec 32)) Unit!4393)

(assert (=> b!139647 (= lt!72916 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-fun arrayContainsKey!0 (array!4873 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!139647 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!72915 () Unit!4393)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!144 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4393)

(assert (=> b!139647 (= lt!72915 (lemmaListMapContainsThenArrayContainsFrom!144 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun res!66708 () Bool)

(assert (=> start!14712 (=> (not res!66708) (not e!91050))))

(declare-fun valid!560 (LongMap!930) Bool)

(assert (=> start!14712 (= res!66708 (valid!560 thiss!992))))

(assert (=> start!14712 e!91050))

(declare-fun e!91046 () Bool)

(assert (=> start!14712 e!91046))

(assert (=> start!14712 true))

(assert (=> start!14712 e!91056))

(declare-fun mapNonEmpty!4827 () Bool)

(declare-fun mapRes!4827 () Bool)

(declare-fun tp!11545 () Bool)

(assert (=> mapNonEmpty!4827 (= mapRes!4827 (and tp!11545 e!91055))))

(declare-fun mapValue!4828 () ValueCell!1121)

(declare-fun mapKey!4828 () (_ BitVec 32))

(declare-fun mapRest!4827 () (Array (_ BitVec 32) ValueCell!1121))

(assert (=> mapNonEmpty!4827 (= (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (store mapRest!4827 mapKey!4828 mapValue!4828))))

(declare-fun b!139648 () Bool)

(declare-fun e!91057 () Bool)

(assert (=> b!139648 (= e!91057 (and e!91052 mapRes!4827))))

(declare-fun condMapEmpty!4828 () Bool)

(declare-fun mapDefault!4827 () ValueCell!1121)

(assert (=> b!139648 (= condMapEmpty!4828 (= (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4827)))))

(declare-fun mapNonEmpty!4828 () Bool)

(declare-fun tp!11547 () Bool)

(declare-fun e!91054 () Bool)

(assert (=> mapNonEmpty!4828 (= mapRes!4828 (and tp!11547 e!91054))))

(declare-fun mapRest!4828 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4827 () (_ BitVec 32))

(declare-fun mapValue!4827 () ValueCell!1121)

(assert (=> mapNonEmpty!4828 (= (arr!2303 (_values!2922 newMap!16)) (store mapRest!4828 mapKey!4827 mapValue!4827))))

(declare-fun b!139649 () Bool)

(assert (=> b!139649 (= e!91050 e!91051)))

(declare-fun res!66706 () Bool)

(assert (=> b!139649 (=> (not res!66706) (not e!91051))))

(declare-fun lt!72919 () ListLongMap!1711)

(assert (=> b!139649 (= res!66706 (and (= lt!72919 lt!72917) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1424 (LongMapFixedSize!1150) ListLongMap!1711)

(assert (=> b!139649 (= lt!72917 (map!1424 newMap!16))))

(declare-fun getCurrentListMap!534 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) ListLongMap!1711)

(assert (=> b!139649 (= lt!72919 (getCurrentListMap!534 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!139650 () Bool)

(assert (=> b!139650 (= e!91046 e!91058)))

(declare-fun mapIsEmpty!4828 () Bool)

(assert (=> mapIsEmpty!4828 mapRes!4827))

(assert (=> b!139651 (= e!91047 (and tp!11546 tp_is_empty!2929 (array_inv!1469 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (array_inv!1470 (_values!2922 (v!3273 (underlying!476 thiss!992)))) e!91057))))

(declare-fun b!139652 () Bool)

(declare-fun res!66707 () Bool)

(assert (=> b!139652 (=> (not res!66707) (not e!91050))))

(assert (=> b!139652 (= res!66707 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7278 newMap!16)) (_size!624 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!139653 () Bool)

(declare-fun res!66709 () Bool)

(assert (=> b!139653 (=> (not res!66709) (not e!91050))))

(declare-fun valid!561 (LongMapFixedSize!1150) Bool)

(assert (=> b!139653 (= res!66709 (valid!561 newMap!16))))

(declare-fun b!139654 () Bool)

(assert (=> b!139654 (= e!91054 tp_is_empty!2929)))

(assert (= (and start!14712 res!66708) b!139640))

(assert (= (and b!139640 res!66704) b!139653))

(assert (= (and b!139653 res!66709) b!139652))

(assert (= (and b!139652 res!66707) b!139649))

(assert (= (and b!139649 res!66706) b!139645))

(assert (= (and b!139645 res!66705) b!139647))

(assert (= (and b!139648 condMapEmpty!4828) mapIsEmpty!4828))

(assert (= (and b!139648 (not condMapEmpty!4828)) mapNonEmpty!4827))

(get-info :version)

(assert (= (and mapNonEmpty!4827 ((_ is ValueCellFull!1121) mapValue!4828)) b!139646))

(assert (= (and b!139648 ((_ is ValueCellFull!1121) mapDefault!4827)) b!139643))

(assert (= b!139651 b!139648))

(assert (= b!139644 b!139651))

(assert (= b!139650 b!139644))

(assert (= start!14712 b!139650))

(assert (= (and b!139641 condMapEmpty!4827) mapIsEmpty!4827))

(assert (= (and b!139641 (not condMapEmpty!4827)) mapNonEmpty!4828))

(assert (= (and mapNonEmpty!4828 ((_ is ValueCellFull!1121) mapValue!4827)) b!139654))

(assert (= (and b!139641 ((_ is ValueCellFull!1121) mapDefault!4828)) b!139642))

(assert (= b!139639 b!139641))

(assert (= start!14712 b!139639))

(declare-fun b_lambda!6235 () Bool)

(assert (=> (not b_lambda!6235) (not b!139645)))

(declare-fun t!6311 () Bool)

(declare-fun tb!2537 () Bool)

(assert (=> (and b!139651 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) t!6311) tb!2537))

(declare-fun result!4167 () Bool)

(assert (=> tb!2537 (= result!4167 tp_is_empty!2929)))

(assert (=> b!139645 t!6311))

(declare-fun b_and!8697 () Bool)

(assert (= b_and!8693 (and (=> t!6311 result!4167) b_and!8697)))

(declare-fun tb!2539 () Bool)

(declare-fun t!6313 () Bool)

(assert (=> (and b!139639 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) t!6313) tb!2539))

(declare-fun result!4171 () Bool)

(assert (= result!4171 result!4167))

(assert (=> b!139645 t!6313))

(declare-fun b_and!8699 () Bool)

(assert (= b_and!8695 (and (=> t!6313 result!4171) b_and!8699)))

(declare-fun m!166403 () Bool)

(assert (=> b!139639 m!166403))

(declare-fun m!166405 () Bool)

(assert (=> b!139639 m!166405))

(declare-fun m!166407 () Bool)

(assert (=> b!139649 m!166407))

(declare-fun m!166409 () Bool)

(assert (=> b!139649 m!166409))

(declare-fun m!166411 () Bool)

(assert (=> b!139649 m!166411))

(declare-fun m!166413 () Bool)

(assert (=> mapNonEmpty!4827 m!166413))

(declare-fun m!166415 () Bool)

(assert (=> b!139651 m!166415))

(declare-fun m!166417 () Bool)

(assert (=> b!139651 m!166417))

(declare-fun m!166419 () Bool)

(assert (=> b!139653 m!166419))

(assert (=> b!139645 m!166407))

(declare-fun m!166421 () Bool)

(assert (=> b!139645 m!166421))

(declare-fun m!166423 () Bool)

(assert (=> b!139645 m!166423))

(declare-fun m!166425 () Bool)

(assert (=> b!139645 m!166425))

(declare-fun m!166427 () Bool)

(assert (=> b!139645 m!166427))

(assert (=> b!139645 m!166407))

(assert (=> b!139645 m!166425))

(assert (=> b!139645 m!166407))

(assert (=> b!139645 m!166427))

(declare-fun m!166429 () Bool)

(assert (=> b!139645 m!166429))

(assert (=> b!139645 m!166423))

(declare-fun m!166431 () Bool)

(assert (=> b!139647 m!166431))

(declare-fun m!166433 () Bool)

(assert (=> b!139647 m!166433))

(assert (=> b!139647 m!166407))

(declare-fun m!166435 () Bool)

(assert (=> b!139647 m!166435))

(assert (=> b!139647 m!166407))

(assert (=> b!139647 m!166407))

(declare-fun m!166437 () Bool)

(assert (=> b!139647 m!166437))

(declare-fun m!166439 () Bool)

(assert (=> mapNonEmpty!4828 m!166439))

(declare-fun m!166441 () Bool)

(assert (=> start!14712 m!166441))

(check-sat (not b!139653) (not start!14712) (not b_next!3027) b_and!8699 (not b!139645) (not mapNonEmpty!4828) (not mapNonEmpty!4827) (not b!139651) (not b_next!3025) tp_is_empty!2929 (not b!139649) (not b!139639) (not b!139647) b_and!8697 (not b_lambda!6235))
(check-sat b_and!8697 b_and!8699 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun b_lambda!6241 () Bool)

(assert (= b_lambda!6235 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6241)))

(check-sat (not b!139653) (not start!14712) b_and!8699 (not b!139645) (not mapNonEmpty!4828) (not mapNonEmpty!4827) (not b!139651) (not b_next!3025) tp_is_empty!2929 (not b!139649) (not b!139639) (not b!139647) b_and!8697 (not b_lambda!6241) (not b_next!3027))
(check-sat b_and!8697 b_and!8699 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun d!43539 () Bool)

(assert (=> d!43539 (= (valid!560 thiss!992) (valid!561 (v!3273 (underlying!476 thiss!992))))))

(declare-fun bs!5822 () Bool)

(assert (= bs!5822 d!43539))

(declare-fun m!166523 () Bool)

(assert (=> bs!5822 m!166523))

(assert (=> start!14712 d!43539))

(declare-fun b!139767 () Bool)

(declare-fun e!91159 () Bool)

(declare-fun e!91161 () Bool)

(assert (=> b!139767 (= e!91159 e!91161)))

(declare-fun c!26168 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!139767 (= c!26168 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!139768 () Bool)

(declare-fun e!91162 () Bool)

(assert (=> b!139768 (= e!91162 e!91159)))

(declare-fun res!66752 () Bool)

(assert (=> b!139768 (=> (not res!66752) (not e!91159))))

(declare-fun e!91160 () Bool)

(assert (=> b!139768 (= res!66752 (not e!91160))))

(declare-fun res!66753 () Bool)

(assert (=> b!139768 (=> (not res!66753) (not e!91160))))

(assert (=> b!139768 (= res!66753 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!139769 () Bool)

(declare-fun call!15418 () Bool)

(assert (=> b!139769 (= e!91161 call!15418)))

(declare-fun d!43541 () Bool)

(declare-fun res!66754 () Bool)

(assert (=> d!43541 (=> res!66754 e!91162)))

(assert (=> d!43541 (= res!66754 (bvsge from!355 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43541 (= (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) from!355 Nil!1737) e!91162)))

(declare-fun b!139770 () Bool)

(declare-fun contains!913 (List!1740 (_ BitVec 64)) Bool)

(assert (=> b!139770 (= e!91160 (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!139771 () Bool)

(assert (=> b!139771 (= e!91161 call!15418)))

(declare-fun bm!15415 () Bool)

(assert (=> bm!15415 (= call!15418 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))))

(assert (= (and d!43541 (not res!66754)) b!139768))

(assert (= (and b!139768 res!66753) b!139770))

(assert (= (and b!139768 res!66752) b!139767))

(assert (= (and b!139767 c!26168) b!139769))

(assert (= (and b!139767 (not c!26168)) b!139771))

(assert (= (or b!139769 b!139771) bm!15415))

(assert (=> b!139767 m!166407))

(assert (=> b!139767 m!166407))

(declare-fun m!166525 () Bool)

(assert (=> b!139767 m!166525))

(assert (=> b!139768 m!166407))

(assert (=> b!139768 m!166407))

(assert (=> b!139768 m!166525))

(assert (=> b!139770 m!166407))

(assert (=> b!139770 m!166407))

(declare-fun m!166527 () Bool)

(assert (=> b!139770 m!166527))

(assert (=> bm!15415 m!166407))

(declare-fun m!166529 () Bool)

(assert (=> bm!15415 m!166529))

(assert (=> b!139647 d!43541))

(declare-fun d!43543 () Bool)

(assert (=> d!43543 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) from!355 Nil!1737)))

(declare-fun lt!72952 () Unit!4393)

(declare-fun choose!39 (array!4873 (_ BitVec 32) (_ BitVec 32)) Unit!4393)

(assert (=> d!43543 (= lt!72952 (choose!39 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!43543 (bvslt (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!43543 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 from!355) lt!72952)))

(declare-fun bs!5823 () Bool)

(assert (= bs!5823 d!43543))

(assert (=> bs!5823 m!166433))

(declare-fun m!166531 () Bool)

(assert (=> bs!5823 m!166531))

(assert (=> b!139647 d!43543))

(declare-fun d!43545 () Bool)

(declare-fun res!66759 () Bool)

(declare-fun e!91167 () Bool)

(assert (=> d!43545 (=> res!66759 e!91167)))

(assert (=> d!43545 (= res!66759 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43545 (= (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!91167)))

(declare-fun b!139776 () Bool)

(declare-fun e!91168 () Bool)

(assert (=> b!139776 (= e!91167 e!91168)))

(declare-fun res!66760 () Bool)

(assert (=> b!139776 (=> (not res!66760) (not e!91168))))

(assert (=> b!139776 (= res!66760 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!139777 () Bool)

(assert (=> b!139777 (= e!91168 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!43545 (not res!66759)) b!139776))

(assert (= (and b!139776 res!66760) b!139777))

(declare-fun m!166533 () Bool)

(assert (=> d!43545 m!166533))

(assert (=> b!139777 m!166407))

(declare-fun m!166535 () Bool)

(assert (=> b!139777 m!166535))

(assert (=> b!139647 d!43545))

(declare-fun d!43547 () Bool)

(declare-fun e!91171 () Bool)

(assert (=> d!43547 e!91171))

(declare-fun c!26171 () Bool)

(assert (=> d!43547 (= c!26171 (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!72955 () Unit!4393)

(declare-fun choose!862 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4393)

(assert (=> d!43547 (= lt!72955 (choose!862 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> d!43547 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!43547 (= (lemmaListMapContainsThenArrayContainsFrom!144 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) lt!72955)))

(declare-fun b!139782 () Bool)

(assert (=> b!139782 (= e!91171 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!139783 () Bool)

(assert (=> b!139783 (= e!91171 (ite (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43547 c!26171) b!139782))

(assert (= (and d!43547 (not c!26171)) b!139783))

(assert (=> d!43547 m!166407))

(declare-fun m!166537 () Bool)

(assert (=> d!43547 m!166537))

(declare-fun m!166539 () Bool)

(assert (=> d!43547 m!166539))

(assert (=> b!139782 m!166407))

(assert (=> b!139782 m!166437))

(assert (=> b!139647 d!43547))

(declare-fun d!43549 () Bool)

(assert (=> d!43549 (= (array_inv!1469 (_keys!4697 newMap!16)) (bvsge (size!2575 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139639 d!43549))

(declare-fun d!43551 () Bool)

(assert (=> d!43551 (= (array_inv!1470 (_values!2922 newMap!16)) (bvsge (size!2576 (_values!2922 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139639 d!43551))

(declare-fun d!43553 () Bool)

(assert (=> d!43553 (= (array_inv!1469 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvsge (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139651 d!43553))

(declare-fun d!43555 () Bool)

(assert (=> d!43555 (= (array_inv!1470 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvsge (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139651 d!43555))

(declare-fun d!43557 () Bool)

(assert (=> d!43557 (= (map!1424 newMap!16) (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun bs!5824 () Bool)

(assert (= bs!5824 d!43557))

(declare-fun m!166541 () Bool)

(assert (=> bs!5824 m!166541))

(assert (=> b!139649 d!43557))

(declare-fun bm!15430 () Bool)

(declare-fun call!15433 () ListLongMap!1711)

(declare-fun call!15435 () ListLongMap!1711)

(assert (=> bm!15430 (= call!15433 call!15435)))

(declare-fun bm!15431 () Bool)

(declare-fun call!15438 () Bool)

(declare-fun lt!73003 () ListLongMap!1711)

(assert (=> bm!15431 (= call!15438 (contains!910 lt!73003 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139827 () Bool)

(declare-fun e!91205 () Bool)

(assert (=> b!139827 (= e!91205 (not call!15438))))

(declare-fun b!139828 () Bool)

(declare-fun e!91203 () ListLongMap!1711)

(assert (=> b!139828 (= e!91203 call!15433)))

(declare-fun b!139829 () Bool)

(declare-fun e!91202 () Bool)

(declare-fun apply!120 (ListLongMap!1711 (_ BitVec 64)) V!3553)

(assert (=> b!139829 (= e!91202 (= (apply!120 lt!73003 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!139830 () Bool)

(declare-fun e!91207 () Bool)

(assert (=> b!139830 (= e!91207 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139831 () Bool)

(declare-fun e!91208 () Bool)

(declare-fun e!91201 () Bool)

(assert (=> b!139831 (= e!91208 e!91201)))

(declare-fun c!26186 () Bool)

(assert (=> b!139831 (= c!26186 (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139832 () Bool)

(declare-fun res!66780 () Bool)

(assert (=> b!139832 (=> (not res!66780) (not e!91208))))

(declare-fun e!91204 () Bool)

(assert (=> b!139832 (= res!66780 e!91204)))

(declare-fun res!66783 () Bool)

(assert (=> b!139832 (=> res!66783 e!91204)))

(assert (=> b!139832 (= res!66783 (not e!91207))))

(declare-fun res!66786 () Bool)

(assert (=> b!139832 (=> (not res!66786) (not e!91207))))

(assert (=> b!139832 (= res!66786 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun bm!15432 () Bool)

(declare-fun call!15439 () ListLongMap!1711)

(declare-fun call!15436 () ListLongMap!1711)

(assert (=> bm!15432 (= call!15439 call!15436)))

(declare-fun b!139833 () Bool)

(declare-fun e!91199 () Bool)

(assert (=> b!139833 (= e!91199 (= (apply!120 lt!73003 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!139834 () Bool)

(declare-fun e!91200 () Bool)

(assert (=> b!139834 (= e!91200 (= (apply!120 lt!73003 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139834 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> b!139834 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!139835 () Bool)

(declare-fun e!91210 () ListLongMap!1711)

(assert (=> b!139835 (= e!91210 e!91203)))

(declare-fun c!26188 () Bool)

(assert (=> b!139835 (= c!26188 (and (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139836 () Bool)

(declare-fun e!91198 () Unit!4393)

(declare-fun lt!73019 () Unit!4393)

(assert (=> b!139836 (= e!91198 lt!73019)))

(declare-fun lt!73015 () ListLongMap!1711)

(declare-fun getCurrentListMapNoExtraKeys!132 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) ListLongMap!1711)

(assert (=> b!139836 (= lt!73015 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun lt!73004 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73004 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73021 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73021 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73000 () Unit!4393)

(declare-fun addStillContains!96 (ListLongMap!1711 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4393)

(assert (=> b!139836 (= lt!73000 (addStillContains!96 lt!73015 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73021))))

(declare-fun +!167 (ListLongMap!1711 tuple2!2656) ListLongMap!1711)

(assert (=> b!139836 (contains!910 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73021)))

(declare-fun lt!73002 () Unit!4393)

(assert (=> b!139836 (= lt!73002 lt!73000)))

(declare-fun lt!73005 () ListLongMap!1711)

(assert (=> b!139836 (= lt!73005 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun lt!73017 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73017 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73012 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73012 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73013 () Unit!4393)

(declare-fun addApplyDifferent!96 (ListLongMap!1711 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4393)

(assert (=> b!139836 (= lt!73013 (addApplyDifferent!96 lt!73005 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73012))))

(assert (=> b!139836 (= (apply!120 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73012) (apply!120 lt!73005 lt!73012))))

(declare-fun lt!73018 () Unit!4393)

(assert (=> b!139836 (= lt!73018 lt!73013)))

(declare-fun lt!73001 () ListLongMap!1711)

(assert (=> b!139836 (= lt!73001 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun lt!73010 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73010 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73020 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73020 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73009 () Unit!4393)

(assert (=> b!139836 (= lt!73009 (addApplyDifferent!96 lt!73001 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73020))))

(assert (=> b!139836 (= (apply!120 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73020) (apply!120 lt!73001 lt!73020))))

(declare-fun lt!73006 () Unit!4393)

(assert (=> b!139836 (= lt!73006 lt!73009)))

(declare-fun lt!73016 () ListLongMap!1711)

(assert (=> b!139836 (= lt!73016 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun lt!73014 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73014 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73011 () (_ BitVec 64))

(assert (=> b!139836 (= lt!73011 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!139836 (= lt!73019 (addApplyDifferent!96 lt!73016 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73011))))

(assert (=> b!139836 (= (apply!120 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73011) (apply!120 lt!73016 lt!73011))))

(declare-fun d!43559 () Bool)

(assert (=> d!43559 e!91208))

(declare-fun res!66785 () Bool)

(assert (=> d!43559 (=> (not res!66785) (not e!91208))))

(assert (=> d!43559 (= res!66785 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun lt!73007 () ListLongMap!1711)

(assert (=> d!43559 (= lt!73003 lt!73007)))

(declare-fun lt!73008 () Unit!4393)

(assert (=> d!43559 (= lt!73008 e!91198)))

(declare-fun c!26184 () Bool)

(declare-fun e!91209 () Bool)

(assert (=> d!43559 (= c!26184 e!91209)))

(declare-fun res!66782 () Bool)

(assert (=> d!43559 (=> (not res!66782) (not e!91209))))

(assert (=> d!43559 (= res!66782 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43559 (= lt!73007 e!91210)))

(declare-fun c!26185 () Bool)

(assert (=> d!43559 (= c!26185 (and (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43559 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!43559 (= (getCurrentListMap!534 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) lt!73003)))

(declare-fun b!139826 () Bool)

(declare-fun e!91206 () ListLongMap!1711)

(declare-fun call!15434 () ListLongMap!1711)

(assert (=> b!139826 (= e!91206 call!15434)))

(declare-fun b!139837 () Bool)

(assert (=> b!139837 (= e!91210 (+!167 call!15435 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!139838 () Bool)

(assert (=> b!139838 (= e!91205 e!91199)))

(declare-fun res!66781 () Bool)

(assert (=> b!139838 (= res!66781 call!15438)))

(assert (=> b!139838 (=> (not res!66781) (not e!91199))))

(declare-fun bm!15433 () Bool)

(assert (=> bm!15433 (= call!15434 call!15439)))

(declare-fun b!139839 () Bool)

(declare-fun res!66779 () Bool)

(assert (=> b!139839 (=> (not res!66779) (not e!91208))))

(assert (=> b!139839 (= res!66779 e!91205)))

(declare-fun c!26189 () Bool)

(assert (=> b!139839 (= c!26189 (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!139840 () Bool)

(declare-fun c!26187 () Bool)

(assert (=> b!139840 (= c!26187 (and (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139840 (= e!91203 e!91206)))

(declare-fun b!139841 () Bool)

(assert (=> b!139841 (= e!91209 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!15434 () Bool)

(declare-fun call!15437 () Bool)

(assert (=> bm!15434 (= call!15437 (contains!910 lt!73003 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139842 () Bool)

(assert (=> b!139842 (= e!91206 call!15433)))

(declare-fun b!139843 () Bool)

(assert (=> b!139843 (= e!91201 (not call!15437))))

(declare-fun bm!15435 () Bool)

(assert (=> bm!15435 (= call!15436 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!139844 () Bool)

(assert (=> b!139844 (= e!91201 e!91202)))

(declare-fun res!66784 () Bool)

(assert (=> b!139844 (= res!66784 call!15437)))

(assert (=> b!139844 (=> (not res!66784) (not e!91202))))

(declare-fun b!139845 () Bool)

(assert (=> b!139845 (= e!91204 e!91200)))

(declare-fun res!66787 () Bool)

(assert (=> b!139845 (=> (not res!66787) (not e!91200))))

(assert (=> b!139845 (= res!66787 (contains!910 lt!73003 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139845 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!139846 () Bool)

(declare-fun Unit!4397 () Unit!4393)

(assert (=> b!139846 (= e!91198 Unit!4397)))

(declare-fun bm!15436 () Bool)

(assert (=> bm!15436 (= call!15435 (+!167 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!43559 c!26185) b!139837))

(assert (= (and d!43559 (not c!26185)) b!139835))

(assert (= (and b!139835 c!26188) b!139828))

(assert (= (and b!139835 (not c!26188)) b!139840))

(assert (= (and b!139840 c!26187) b!139842))

(assert (= (and b!139840 (not c!26187)) b!139826))

(assert (= (or b!139842 b!139826) bm!15433))

(assert (= (or b!139828 bm!15433) bm!15432))

(assert (= (or b!139828 b!139842) bm!15430))

(assert (= (or b!139837 bm!15432) bm!15435))

(assert (= (or b!139837 bm!15430) bm!15436))

(assert (= (and d!43559 res!66782) b!139841))

(assert (= (and d!43559 c!26184) b!139836))

(assert (= (and d!43559 (not c!26184)) b!139846))

(assert (= (and d!43559 res!66785) b!139832))

(assert (= (and b!139832 res!66786) b!139830))

(assert (= (and b!139832 (not res!66783)) b!139845))

(assert (= (and b!139845 res!66787) b!139834))

(assert (= (and b!139832 res!66780) b!139839))

(assert (= (and b!139839 c!26189) b!139838))

(assert (= (and b!139839 (not c!26189)) b!139827))

(assert (= (and b!139838 res!66781) b!139833))

(assert (= (or b!139838 b!139827) bm!15431))

(assert (= (and b!139839 res!66779) b!139831))

(assert (= (and b!139831 c!26186) b!139844))

(assert (= (and b!139831 (not c!26186)) b!139843))

(assert (= (and b!139844 res!66784) b!139829))

(assert (= (or b!139844 b!139843) bm!15434))

(declare-fun b_lambda!6243 () Bool)

(assert (=> (not b_lambda!6243) (not b!139834)))

(assert (=> b!139834 t!6311))

(declare-fun b_and!8717 () Bool)

(assert (= b_and!8697 (and (=> t!6311 result!4167) b_and!8717)))

(assert (=> b!139834 t!6313))

(declare-fun b_and!8719 () Bool)

(assert (= b_and!8699 (and (=> t!6313 result!4171) b_and!8719)))

(assert (=> b!139841 m!166533))

(assert (=> b!139841 m!166533))

(declare-fun m!166543 () Bool)

(assert (=> b!139841 m!166543))

(assert (=> b!139834 m!166425))

(declare-fun m!166545 () Bool)

(assert (=> b!139834 m!166545))

(assert (=> b!139834 m!166425))

(declare-fun m!166547 () Bool)

(assert (=> b!139834 m!166547))

(assert (=> b!139834 m!166533))

(assert (=> b!139834 m!166533))

(declare-fun m!166549 () Bool)

(assert (=> b!139834 m!166549))

(assert (=> b!139834 m!166545))

(declare-fun m!166551 () Bool)

(assert (=> bm!15431 m!166551))

(assert (=> b!139845 m!166533))

(assert (=> b!139845 m!166533))

(declare-fun m!166553 () Bool)

(assert (=> b!139845 m!166553))

(declare-fun m!166555 () Bool)

(assert (=> b!139829 m!166555))

(assert (=> d!43559 m!166539))

(declare-fun m!166557 () Bool)

(assert (=> bm!15434 m!166557))

(declare-fun m!166559 () Bool)

(assert (=> bm!15436 m!166559))

(declare-fun m!166561 () Bool)

(assert (=> bm!15435 m!166561))

(declare-fun m!166563 () Bool)

(assert (=> b!139833 m!166563))

(declare-fun m!166565 () Bool)

(assert (=> b!139836 m!166565))

(declare-fun m!166567 () Bool)

(assert (=> b!139836 m!166567))

(declare-fun m!166569 () Bool)

(assert (=> b!139836 m!166569))

(declare-fun m!166571 () Bool)

(assert (=> b!139836 m!166571))

(declare-fun m!166573 () Bool)

(assert (=> b!139836 m!166573))

(declare-fun m!166575 () Bool)

(assert (=> b!139836 m!166575))

(assert (=> b!139836 m!166571))

(declare-fun m!166577 () Bool)

(assert (=> b!139836 m!166577))

(declare-fun m!166579 () Bool)

(assert (=> b!139836 m!166579))

(declare-fun m!166581 () Bool)

(assert (=> b!139836 m!166581))

(declare-fun m!166583 () Bool)

(assert (=> b!139836 m!166583))

(declare-fun m!166585 () Bool)

(assert (=> b!139836 m!166585))

(assert (=> b!139836 m!166575))

(declare-fun m!166587 () Bool)

(assert (=> b!139836 m!166587))

(declare-fun m!166589 () Bool)

(assert (=> b!139836 m!166589))

(assert (=> b!139836 m!166579))

(assert (=> b!139836 m!166583))

(assert (=> b!139836 m!166533))

(declare-fun m!166591 () Bool)

(assert (=> b!139836 m!166591))

(assert (=> b!139836 m!166561))

(declare-fun m!166593 () Bool)

(assert (=> b!139836 m!166593))

(assert (=> b!139830 m!166533))

(assert (=> b!139830 m!166533))

(assert (=> b!139830 m!166543))

(declare-fun m!166595 () Bool)

(assert (=> b!139837 m!166595))

(assert (=> b!139649 d!43559))

(declare-fun d!43561 () Bool)

(declare-fun res!66794 () Bool)

(declare-fun e!91213 () Bool)

(assert (=> d!43561 (=> (not res!66794) (not e!91213))))

(declare-fun simpleValid!96 (LongMapFixedSize!1150) Bool)

(assert (=> d!43561 (= res!66794 (simpleValid!96 newMap!16))))

(assert (=> d!43561 (= (valid!561 newMap!16) e!91213)))

(declare-fun b!139853 () Bool)

(declare-fun res!66795 () Bool)

(assert (=> b!139853 (=> (not res!66795) (not e!91213))))

(declare-fun arrayCountValidKeys!0 (array!4873 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!139853 (= res!66795 (= (arrayCountValidKeys!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (_size!624 newMap!16)))))

(declare-fun b!139854 () Bool)

(declare-fun res!66796 () Bool)

(assert (=> b!139854 (=> (not res!66796) (not e!91213))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4873 (_ BitVec 32)) Bool)

(assert (=> b!139854 (= res!66796 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!139855 () Bool)

(assert (=> b!139855 (= e!91213 (arrayNoDuplicates!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 Nil!1737))))

(assert (= (and d!43561 res!66794) b!139853))

(assert (= (and b!139853 res!66795) b!139854))

(assert (= (and b!139854 res!66796) b!139855))

(declare-fun m!166597 () Bool)

(assert (=> d!43561 m!166597))

(declare-fun m!166599 () Bool)

(assert (=> b!139853 m!166599))

(declare-fun m!166601 () Bool)

(assert (=> b!139854 m!166601))

(declare-fun m!166603 () Bool)

(assert (=> b!139855 m!166603))

(assert (=> b!139653 d!43561))

(declare-fun d!43563 () Bool)

(declare-fun e!91219 () Bool)

(assert (=> d!43563 e!91219))

(declare-fun res!66799 () Bool)

(assert (=> d!43563 (=> res!66799 e!91219)))

(declare-fun lt!73033 () Bool)

(assert (=> d!43563 (= res!66799 (not lt!73033))))

(declare-fun lt!73032 () Bool)

(assert (=> d!43563 (= lt!73033 lt!73032)))

(declare-fun lt!73031 () Unit!4393)

(declare-fun e!91218 () Unit!4393)

(assert (=> d!43563 (= lt!73031 e!91218)))

(declare-fun c!26192 () Bool)

(assert (=> d!43563 (= c!26192 lt!73032)))

(declare-fun containsKey!178 (List!1739 (_ BitVec 64)) Bool)

(assert (=> d!43563 (= lt!73032 (containsKey!178 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43563 (= (contains!910 lt!72917 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73033)))

(declare-fun b!139862 () Bool)

(declare-fun lt!73030 () Unit!4393)

(assert (=> b!139862 (= e!91218 lt!73030)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!127 (List!1739 (_ BitVec 64)) Unit!4393)

(assert (=> b!139862 (= lt!73030 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-datatypes ((Option!180 0))(
  ( (Some!179 (v!3279 V!3553)) (None!178) )
))
(declare-fun isDefined!128 (Option!180) Bool)

(declare-fun getValueByKey!174 (List!1739 (_ BitVec 64)) Option!180)

(assert (=> b!139862 (isDefined!128 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!139863 () Bool)

(declare-fun Unit!4398 () Unit!4393)

(assert (=> b!139863 (= e!91218 Unit!4398)))

(declare-fun b!139864 () Bool)

(assert (=> b!139864 (= e!91219 (isDefined!128 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (= (and d!43563 c!26192) b!139862))

(assert (= (and d!43563 (not c!26192)) b!139863))

(assert (= (and d!43563 (not res!66799)) b!139864))

(assert (=> d!43563 m!166407))

(declare-fun m!166605 () Bool)

(assert (=> d!43563 m!166605))

(assert (=> b!139862 m!166407))

(declare-fun m!166607 () Bool)

(assert (=> b!139862 m!166607))

(assert (=> b!139862 m!166407))

(declare-fun m!166609 () Bool)

(assert (=> b!139862 m!166609))

(assert (=> b!139862 m!166609))

(declare-fun m!166611 () Bool)

(assert (=> b!139862 m!166611))

(assert (=> b!139864 m!166407))

(assert (=> b!139864 m!166609))

(assert (=> b!139864 m!166609))

(assert (=> b!139864 m!166611))

(assert (=> b!139645 d!43563))

(declare-fun bm!15485 () Bool)

(declare-fun call!15497 () ListLongMap!1711)

(declare-fun call!15491 () ListLongMap!1711)

(assert (=> bm!15485 (= call!15497 call!15491)))

(declare-fun bm!15486 () Bool)

(declare-datatypes ((SeekEntryResult!282 0))(
  ( (MissingZero!282 (index!3291 (_ BitVec 32))) (Found!282 (index!3292 (_ BitVec 32))) (Intermediate!282 (undefined!1094 Bool) (index!3293 (_ BitVec 32)) (x!16138 (_ BitVec 32))) (Undefined!282) (MissingVacant!282 (index!3294 (_ BitVec 32))) )
))
(declare-fun call!15505 () SeekEntryResult!282)

(declare-fun call!15508 () SeekEntryResult!282)

(assert (=> bm!15486 (= call!15505 call!15508)))

(declare-fun b!139949 () Bool)

(declare-fun e!91274 () ListLongMap!1711)

(assert (=> b!139949 (= e!91274 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139950 () Bool)

(declare-fun res!66839 () Bool)

(declare-fun e!91266 () Bool)

(assert (=> b!139950 (=> (not res!66839) (not e!91266))))

(declare-fun call!15510 () Bool)

(assert (=> b!139950 (= res!66839 call!15510)))

(declare-fun e!91267 () Bool)

(assert (=> b!139950 (= e!91267 e!91266)))

(declare-fun bm!15487 () Bool)

(declare-fun call!15488 () Bool)

(declare-fun call!15502 () Bool)

(assert (=> bm!15487 (= call!15488 call!15502)))

(declare-fun bm!15488 () Bool)

(declare-fun call!15490 () ListLongMap!1711)

(declare-fun lt!73099 () tuple2!2658)

(assert (=> bm!15488 (= call!15490 (map!1424 (_2!1340 lt!73099)))))

(declare-fun call!15501 () ListLongMap!1711)

(declare-fun b!139951 () Bool)

(declare-fun e!91271 () Bool)

(assert (=> b!139951 (= e!91271 (= call!15490 (+!167 call!15501 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15489 () Bool)

(declare-fun call!15493 () Bool)

(declare-fun call!15509 () Bool)

(assert (=> bm!15489 (= call!15493 call!15509)))

(declare-fun d!43565 () Bool)

(declare-fun e!91277 () Bool)

(assert (=> d!43565 e!91277))

(declare-fun res!66833 () Bool)

(assert (=> d!43565 (=> (not res!66833) (not e!91277))))

(assert (=> d!43565 (= res!66833 (valid!561 (_2!1340 lt!73099)))))

(declare-fun e!91279 () tuple2!2658)

(assert (=> d!43565 (= lt!73099 e!91279)))

(declare-fun c!26231 () Bool)

(assert (=> d!43565 (= c!26231 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvneg (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43565 (valid!561 newMap!16)))

(assert (=> d!43565 (= (update!208 newMap!16 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!73099)))

(declare-fun b!139952 () Bool)

(declare-fun e!91282 () tuple2!2658)

(assert (=> b!139952 (= e!91279 e!91282)))

(declare-fun c!26232 () Bool)

(assert (=> b!139952 (= c!26232 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15490 () Bool)

(declare-fun call!15492 () ListLongMap!1711)

(declare-fun call!15495 () ListLongMap!1711)

(assert (=> bm!15490 (= call!15492 call!15495)))

(declare-fun b!139953 () Bool)

(declare-fun e!91285 () Bool)

(assert (=> b!139953 (= e!91285 (= call!15490 call!15501))))

(declare-fun b!139954 () Bool)

(declare-fun e!91284 () Bool)

(declare-fun lt!73092 () SeekEntryResult!282)

(assert (=> b!139954 (= e!91284 ((_ is Undefined!282) lt!73092))))

(declare-fun b!139955 () Bool)

(declare-fun e!91272 () Unit!4393)

(declare-fun lt!73113 () Unit!4393)

(assert (=> b!139955 (= e!91272 lt!73113)))

(declare-fun call!15489 () Unit!4393)

(assert (=> b!139955 (= lt!73113 call!15489)))

(declare-fun call!15503 () SeekEntryResult!282)

(assert (=> b!139955 (= lt!73092 call!15503)))

(declare-fun c!26234 () Bool)

(assert (=> b!139955 (= c!26234 ((_ is MissingZero!282) lt!73092))))

(declare-fun e!91268 () Bool)

(assert (=> b!139955 e!91268))

(declare-fun bm!15491 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4873 (_ BitVec 32)) SeekEntryResult!282)

(assert (=> bm!15491 (= call!15508 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!139956 () Bool)

(declare-fun e!91278 () Bool)

(assert (=> b!139956 (= e!91278 (not call!15493))))

(declare-fun bm!15492 () Bool)

(assert (=> bm!15492 (= call!15509 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!139957 () Bool)

(declare-fun res!66837 () Bool)

(assert (=> b!139957 (= res!66837 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73092)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91283 () Bool)

(assert (=> b!139957 (=> (not res!66837) (not e!91283))))

(declare-fun b!139958 () Bool)

(declare-fun e!91280 () tuple2!2658)

(declare-fun lt!73094 () tuple2!2658)

(assert (=> b!139958 (= e!91280 (tuple2!2659 (_1!1340 lt!73094) (_2!1340 lt!73094)))))

(declare-fun call!15496 () tuple2!2658)

(assert (=> b!139958 (= lt!73094 call!15496)))

(declare-fun bm!15493 () Bool)

(declare-fun call!15498 () Bool)

(assert (=> bm!15493 (= call!15498 call!15488)))

(declare-fun b!139959 () Bool)

(declare-fun c!26223 () Bool)

(declare-fun lt!73091 () SeekEntryResult!282)

(assert (=> b!139959 (= c!26223 ((_ is MissingVacant!282) lt!73091))))

(declare-fun e!91269 () Bool)

(assert (=> b!139959 (= e!91267 e!91269)))

(declare-fun bm!15494 () Bool)

(declare-fun call!15499 () Unit!4393)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4393)

(assert (=> bm!15494 (= call!15499 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(declare-fun b!139960 () Bool)

(declare-fun e!91281 () tuple2!2658)

(assert (=> b!139960 (= e!91280 e!91281)))

(declare-fun c!26230 () Bool)

(declare-fun lt!73103 () SeekEntryResult!282)

(assert (=> b!139960 (= c!26230 ((_ is MissingZero!282) lt!73103))))

(declare-fun b!139961 () Bool)

(assert (=> b!139961 (= e!91274 call!15492)))

(declare-fun bm!15495 () Bool)

(assert (=> bm!15495 (= call!15501 (map!1424 newMap!16))))

(declare-fun lt!73105 () SeekEntryResult!282)

(declare-fun e!91275 () Bool)

(declare-fun b!139962 () Bool)

(assert (=> b!139962 (= e!91275 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73105)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun bm!15496 () Bool)

(declare-fun call!15494 () ListLongMap!1711)

(declare-fun call!15504 () ListLongMap!1711)

(assert (=> bm!15496 (= call!15494 call!15504)))

(declare-fun b!139963 () Bool)

(declare-fun lt!73114 () Unit!4393)

(declare-fun lt!73088 () Unit!4393)

(assert (=> b!139963 (= lt!73114 lt!73088)))

(assert (=> b!139963 (contains!910 call!15492 (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))

(declare-fun lt!73089 () array!4875)

(declare-fun lemmaValidKeyInArrayIsInListMap!124 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) Unit!4393)

(assert (=> b!139963 (= lt!73088 (lemmaValidKeyInArrayIsInListMap!124 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (defaultEntry!2939 newMap!16)))))

(assert (=> b!139963 (= lt!73089 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))))

(declare-fun lt!73107 () Unit!4393)

(declare-fun lt!73102 () Unit!4393)

(assert (=> b!139963 (= lt!73107 lt!73102)))

(assert (=> b!139963 (= call!15491 call!15504)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4393)

(assert (=> b!139963 (= lt!73102 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73090 () Unit!4393)

(declare-fun e!91265 () Unit!4393)

(assert (=> b!139963 (= lt!73090 e!91265)))

(declare-fun c!26227 () Bool)

(declare-fun call!15506 () Bool)

(assert (=> b!139963 (= c!26227 call!15506)))

(assert (=> b!139963 (= e!91281 (tuple2!2659 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (_size!624 newMap!16) (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (_vacant!624 newMap!16))))))

(declare-fun b!139964 () Bool)

(declare-fun Unit!4399 () Unit!4393)

(assert (=> b!139964 (= e!91265 Unit!4399)))

(declare-fun lt!73112 () Unit!4393)

(assert (=> b!139964 (= lt!73112 call!15489)))

(assert (=> b!139964 (= lt!73091 call!15505)))

(declare-fun c!26221 () Bool)

(assert (=> b!139964 (= c!26221 ((_ is MissingZero!282) lt!73091))))

(assert (=> b!139964 e!91267))

(declare-fun lt!73095 () Unit!4393)

(assert (=> b!139964 (= lt!73095 lt!73112)))

(assert (=> b!139964 false))

(declare-fun bm!15497 () Bool)

(declare-fun call!15500 () Bool)

(assert (=> bm!15497 (= call!15500 call!15509)))

(declare-fun b!139965 () Bool)

(declare-fun lt!73101 () tuple2!2658)

(assert (=> b!139965 (= lt!73101 call!15496)))

(assert (=> b!139965 (= e!91281 (tuple2!2659 (_1!1340 lt!73101) (_2!1340 lt!73101)))))

(declare-fun b!139966 () Bool)

(declare-fun lt!73096 () Unit!4393)

(declare-fun lt!73093 () Unit!4393)

(assert (=> b!139966 (= lt!73096 lt!73093)))

(declare-fun call!15511 () ListLongMap!1711)

(assert (=> b!139966 (= call!15497 call!15511)))

(declare-fun lt!73111 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4393)

(assert (=> b!139966 (= lt!73093 (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> b!139966 (= lt!73111 (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!139966 (= e!91282 (tuple2!2659 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7278 newMap!16) (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!624 newMap!16) (_keys!4697 newMap!16) (_values!2922 newMap!16) (_vacant!624 newMap!16))))))

(declare-fun bm!15498 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4393)

(assert (=> bm!15498 (= call!15489 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(declare-fun b!139967 () Bool)

(assert (=> b!139967 (= e!91269 e!91278)))

(declare-fun res!66840 () Bool)

(assert (=> b!139967 (= res!66840 call!15510)))

(assert (=> b!139967 (=> (not res!66840) (not e!91278))))

(declare-fun b!139968 () Bool)

(assert (=> b!139968 (= e!91284 e!91283)))

(declare-fun res!66831 () Bool)

(assert (=> b!139968 (= res!66831 call!15498)))

(assert (=> b!139968 (=> (not res!66831) (not e!91283))))

(declare-fun b!139969 () Bool)

(assert (=> b!139969 (= e!91285 e!91271)))

(declare-fun res!66841 () Bool)

(assert (=> b!139969 (= res!66841 (contains!910 call!15490 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!139969 (=> (not res!66841) (not e!91271))))

(declare-fun b!139970 () Bool)

(assert (=> b!139970 (= e!91277 e!91285)))

(declare-fun c!26233 () Bool)

(assert (=> b!139970 (= c!26233 (_1!1340 lt!73099))))

(declare-fun b!139971 () Bool)

(declare-fun res!66836 () Bool)

(declare-fun e!91276 () Bool)

(assert (=> b!139971 (=> (not res!66836) (not e!91276))))

(assert (=> b!139971 (= res!66836 call!15498)))

(assert (=> b!139971 (= e!91268 e!91276)))

(declare-fun b!139972 () Bool)

(declare-fun e!91273 () ListLongMap!1711)

(assert (=> b!139972 (= e!91273 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139973 () Bool)

(declare-fun lt!73097 () Unit!4393)

(assert (=> b!139973 (= e!91265 lt!73097)))

(assert (=> b!139973 (= lt!73097 call!15499)))

(declare-fun lt!73098 () SeekEntryResult!282)

(assert (=> b!139973 (= lt!73098 call!15505)))

(declare-fun res!66832 () Bool)

(assert (=> b!139973 (= res!66832 ((_ is Found!282) lt!73098))))

(declare-fun e!91270 () Bool)

(assert (=> b!139973 (=> (not res!66832) (not e!91270))))

(assert (=> b!139973 e!91270))

(declare-fun b!139974 () Bool)

(assert (=> b!139974 (= e!91270 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73098)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun bm!15499 () Bool)

(assert (=> bm!15499 (= call!15503 call!15508)))

(declare-fun b!139975 () Bool)

(assert (=> b!139975 (= e!91273 call!15494)))

(declare-fun bm!15500 () Bool)

(assert (=> bm!15500 (= call!15491 (+!167 e!91273 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!26225 () Bool)

(assert (=> bm!15500 (= c!26225 c!26231)))

(declare-fun lt!73106 () (_ BitVec 32))

(declare-fun bm!15501 () Bool)

(declare-fun c!26229 () Bool)

(assert (=> bm!15501 (= call!15495 (getCurrentListMap!534 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139976 () Bool)

(declare-fun res!66838 () Bool)

(assert (=> b!139976 (= res!66838 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73091)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139976 (=> (not res!66838) (not e!91278))))

(declare-fun bm!15502 () Bool)

(assert (=> bm!15502 (= call!15511 call!15495)))

(declare-fun b!139977 () Bool)

(assert (=> b!139977 (= e!91269 ((_ is Undefined!282) lt!73091))))

(declare-fun b!139978 () Bool)

(declare-fun c!26226 () Bool)

(assert (=> b!139978 (= c!26226 ((_ is MissingVacant!282) lt!73103))))

(declare-fun e!91264 () tuple2!2658)

(assert (=> b!139978 (= e!91264 e!91280)))

(declare-fun b!139979 () Bool)

(declare-fun c!26228 () Bool)

(assert (=> b!139979 (= c!26228 ((_ is MissingVacant!282) lt!73092))))

(assert (=> b!139979 (= e!91268 e!91284)))

(declare-fun b!139980 () Bool)

(declare-fun Unit!4400 () Unit!4393)

(assert (=> b!139980 (= e!91272 Unit!4400)))

(declare-fun lt!73104 () Unit!4393)

(assert (=> b!139980 (= lt!73104 call!15499)))

(assert (=> b!139980 (= lt!73105 call!15503)))

(declare-fun res!66828 () Bool)

(assert (=> b!139980 (= res!66828 ((_ is Found!282) lt!73105))))

(assert (=> b!139980 (=> (not res!66828) (not e!91275))))

(assert (=> b!139980 e!91275))

(declare-fun lt!73100 () Unit!4393)

(assert (=> b!139980 (= lt!73100 lt!73104)))

(assert (=> b!139980 false))

(declare-fun b!139981 () Bool)

(declare-fun res!66829 () Bool)

(declare-fun call!15507 () Bool)

(assert (=> b!139981 (= res!66829 call!15507)))

(assert (=> b!139981 (=> (not res!66829) (not e!91270))))

(declare-fun b!139982 () Bool)

(declare-fun lt!73108 () Unit!4393)

(declare-fun lt!73110 () Unit!4393)

(assert (=> b!139982 (= lt!73108 lt!73110)))

(assert (=> b!139982 (= call!15497 call!15511)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!65 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4393)

(assert (=> b!139982 (= lt!73110 (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73106 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)))))

(assert (=> b!139982 (= lt!73106 (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!139982 (= e!91282 (tuple2!2659 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7278 newMap!16) (bvor (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (_size!624 newMap!16) (_keys!4697 newMap!16) (_values!2922 newMap!16) (_vacant!624 newMap!16))))))

(declare-fun b!139983 () Bool)

(assert (=> b!139983 (= e!91283 (not call!15500))))

(declare-fun bm!15503 () Bool)

(assert (=> bm!15503 (= call!15510 call!15507)))

(declare-fun bm!15504 () Bool)

(assert (=> bm!15504 (= call!15504 (getCurrentListMap!534 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!139984 () Bool)

(declare-fun res!66834 () Bool)

(assert (=> b!139984 (=> (not res!66834) (not e!91276))))

(assert (=> b!139984 (= res!66834 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73092)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139985 () Bool)

(assert (=> b!139985 (= e!91279 e!91264)))

(assert (=> b!139985 (= lt!73103 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(assert (=> b!139985 (= c!26229 ((_ is Undefined!282) lt!73103))))

(declare-fun bm!15505 () Bool)

(declare-fun updateHelperNewKey!65 (LongMapFixedSize!1150 (_ BitVec 64) V!3553 (_ BitVec 32)) tuple2!2658)

(assert (=> bm!15505 (= call!15496 (updateHelperNewKey!65 newMap!16 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(declare-fun b!139986 () Bool)

(assert (=> b!139986 (= e!91266 (not call!15493))))

(declare-fun b!139987 () Bool)

(declare-fun res!66835 () Bool)

(assert (=> b!139987 (= res!66835 call!15488)))

(assert (=> b!139987 (=> (not res!66835) (not e!91275))))

(declare-fun c!26224 () Bool)

(declare-fun bm!15506 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!15506 (= call!15502 (inRange!0 (ite c!26229 (ite c!26224 (index!3292 lt!73105) (ite c!26234 (index!3291 lt!73092) (index!3294 lt!73092))) (ite c!26227 (index!3292 lt!73098) (ite c!26221 (index!3291 lt!73091) (index!3294 lt!73091)))) (mask!7278 newMap!16)))))

(declare-fun bm!15507 () Bool)

(assert (=> bm!15507 (= call!15507 call!15502)))

(declare-fun b!139988 () Bool)

(assert (=> b!139988 (= e!91276 (not call!15500))))

(declare-fun b!139989 () Bool)

(declare-fun lt!73109 () Unit!4393)

(assert (=> b!139989 (= lt!73109 e!91272)))

(assert (=> b!139989 (= c!26224 call!15506)))

(assert (=> b!139989 (= e!91264 (tuple2!2659 false newMap!16))))

(declare-fun b!139990 () Bool)

(declare-fun res!66830 () Bool)

(assert (=> b!139990 (=> (not res!66830) (not e!91266))))

(assert (=> b!139990 (= res!66830 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73091)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15508 () Bool)

(declare-fun c!26222 () Bool)

(assert (=> bm!15508 (= c!26222 c!26229)))

(assert (=> bm!15508 (= call!15506 (contains!910 e!91274 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43565 c!26231) b!139952))

(assert (= (and d!43565 (not c!26231)) b!139985))

(assert (= (and b!139952 c!26232) b!139982))

(assert (= (and b!139952 (not c!26232)) b!139966))

(assert (= (or b!139982 b!139966) bm!15502))

(assert (= (or b!139982 b!139966) bm!15496))

(assert (= (or b!139982 b!139966) bm!15485))

(assert (= (and b!139985 c!26229) b!139989))

(assert (= (and b!139985 (not c!26229)) b!139978))

(assert (= (and b!139989 c!26224) b!139980))

(assert (= (and b!139989 (not c!26224)) b!139955))

(assert (= (and b!139980 res!66828) b!139987))

(assert (= (and b!139987 res!66835) b!139962))

(assert (= (and b!139955 c!26234) b!139971))

(assert (= (and b!139955 (not c!26234)) b!139979))

(assert (= (and b!139971 res!66836) b!139984))

(assert (= (and b!139984 res!66834) b!139988))

(assert (= (and b!139979 c!26228) b!139968))

(assert (= (and b!139979 (not c!26228)) b!139954))

(assert (= (and b!139968 res!66831) b!139957))

(assert (= (and b!139957 res!66837) b!139983))

(assert (= (or b!139971 b!139968) bm!15493))

(assert (= (or b!139988 b!139983) bm!15497))

(assert (= (or b!139987 bm!15493) bm!15487))

(assert (= (or b!139980 b!139955) bm!15499))

(assert (= (and b!139978 c!26226) b!139958))

(assert (= (and b!139978 (not c!26226)) b!139960))

(assert (= (and b!139960 c!26230) b!139965))

(assert (= (and b!139960 (not c!26230)) b!139963))

(assert (= (and b!139963 c!26227) b!139973))

(assert (= (and b!139963 (not c!26227)) b!139964))

(assert (= (and b!139973 res!66832) b!139981))

(assert (= (and b!139981 res!66829) b!139974))

(assert (= (and b!139964 c!26221) b!139950))

(assert (= (and b!139964 (not c!26221)) b!139959))

(assert (= (and b!139950 res!66839) b!139990))

(assert (= (and b!139990 res!66830) b!139986))

(assert (= (and b!139959 c!26223) b!139967))

(assert (= (and b!139959 (not c!26223)) b!139977))

(assert (= (and b!139967 res!66840) b!139976))

(assert (= (and b!139976 res!66838) b!139956))

(assert (= (or b!139950 b!139967) bm!15503))

(assert (= (or b!139986 b!139956) bm!15489))

(assert (= (or b!139981 bm!15503) bm!15507))

(assert (= (or b!139973 b!139964) bm!15486))

(assert (= (or b!139958 b!139965) bm!15505))

(assert (= (or bm!15487 bm!15507) bm!15506))

(assert (= (or b!139989 b!139963) bm!15490))

(assert (= (or bm!15499 bm!15486) bm!15491))

(assert (= (or b!139955 b!139964) bm!15498))

(assert (= (or bm!15497 bm!15489) bm!15492))

(assert (= (or b!139980 b!139973) bm!15494))

(assert (= (or b!139989 b!139963) bm!15508))

(assert (= (and bm!15508 c!26222) b!139961))

(assert (= (and bm!15508 (not c!26222)) b!139949))

(assert (= (or bm!15496 b!139963) bm!15504))

(assert (= (or bm!15502 bm!15490) bm!15501))

(assert (= (or bm!15485 b!139963) bm!15500))

(assert (= (and bm!15500 c!26225) b!139975))

(assert (= (and bm!15500 (not c!26225)) b!139972))

(assert (= (and d!43565 res!66833) b!139970))

(assert (= (and b!139970 c!26233) b!139969))

(assert (= (and b!139970 (not c!26233)) b!139953))

(assert (= (and b!139969 res!66841) b!139951))

(assert (= (or b!139969 b!139951 b!139953) bm!15488))

(assert (= (or b!139951 b!139953) bm!15495))

(declare-fun m!166613 () Bool)

(assert (=> b!139974 m!166613))

(assert (=> b!139985 m!166407))

(declare-fun m!166615 () Bool)

(assert (=> b!139985 m!166615))

(assert (=> b!139969 m!166407))

(declare-fun m!166617 () Bool)

(assert (=> b!139969 m!166617))

(assert (=> bm!15505 m!166407))

(assert (=> bm!15505 m!166427))

(declare-fun m!166619 () Bool)

(assert (=> bm!15505 m!166619))

(declare-fun m!166621 () Bool)

(assert (=> b!139984 m!166621))

(declare-fun m!166623 () Bool)

(assert (=> b!139976 m!166623))

(declare-fun m!166625 () Bool)

(assert (=> bm!15506 m!166625))

(declare-fun m!166627 () Bool)

(assert (=> bm!15500 m!166627))

(declare-fun m!166629 () Bool)

(assert (=> b!139963 m!166629))

(assert (=> b!139963 m!166407))

(assert (=> b!139963 m!166427))

(declare-fun m!166631 () Bool)

(assert (=> b!139963 m!166631))

(declare-fun m!166633 () Bool)

(assert (=> b!139963 m!166633))

(declare-fun m!166635 () Bool)

(assert (=> b!139963 m!166635))

(assert (=> b!139963 m!166633))

(declare-fun m!166637 () Bool)

(assert (=> b!139963 m!166637))

(assert (=> b!139949 m!166541))

(declare-fun m!166639 () Bool)

(assert (=> b!139957 m!166639))

(declare-fun m!166641 () Bool)

(assert (=> bm!15488 m!166641))

(assert (=> bm!15494 m!166407))

(declare-fun m!166643 () Bool)

(assert (=> bm!15494 m!166643))

(assert (=> bm!15495 m!166409))

(assert (=> bm!15498 m!166407))

(declare-fun m!166645 () Bool)

(assert (=> bm!15498 m!166645))

(assert (=> bm!15508 m!166407))

(declare-fun m!166647 () Bool)

(assert (=> bm!15508 m!166647))

(declare-fun m!166649 () Bool)

(assert (=> bm!15501 m!166649))

(assert (=> b!139972 m!166541))

(declare-fun m!166651 () Bool)

(assert (=> b!139951 m!166651))

(assert (=> bm!15492 m!166407))

(declare-fun m!166653 () Bool)

(assert (=> bm!15492 m!166653))

(assert (=> bm!15504 m!166629))

(declare-fun m!166655 () Bool)

(assert (=> bm!15504 m!166655))

(declare-fun m!166657 () Bool)

(assert (=> b!139962 m!166657))

(assert (=> bm!15491 m!166407))

(assert (=> bm!15491 m!166615))

(assert (=> b!139966 m!166427))

(declare-fun m!166659 () Bool)

(assert (=> b!139966 m!166659))

(declare-fun m!166661 () Bool)

(assert (=> b!139990 m!166661))

(declare-fun m!166663 () Bool)

(assert (=> d!43565 m!166663))

(assert (=> d!43565 m!166419))

(assert (=> b!139982 m!166427))

(declare-fun m!166665 () Bool)

(assert (=> b!139982 m!166665))

(assert (=> b!139645 d!43565))

(declare-fun d!43567 () Bool)

(declare-fun c!26237 () Bool)

(assert (=> d!43567 (= c!26237 ((_ is ValueCellFull!1121) (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!91288 () V!3553)

(assert (=> d!43567 (= (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91288)))

(declare-fun b!139995 () Bool)

(declare-fun get!1526 (ValueCell!1121 V!3553) V!3553)

(assert (=> b!139995 (= e!91288 (get!1526 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139996 () Bool)

(declare-fun get!1527 (ValueCell!1121 V!3553) V!3553)

(assert (=> b!139996 (= e!91288 (get!1527 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43567 c!26237) b!139995))

(assert (= (and d!43567 (not c!26237)) b!139996))

(assert (=> b!139995 m!166423))

(assert (=> b!139995 m!166425))

(declare-fun m!166667 () Bool)

(assert (=> b!139995 m!166667))

(assert (=> b!139996 m!166423))

(assert (=> b!139996 m!166425))

(declare-fun m!166669 () Bool)

(assert (=> b!139996 m!166669))

(assert (=> b!139645 d!43567))

(declare-fun b!140003 () Bool)

(declare-fun e!91294 () Bool)

(assert (=> b!140003 (= e!91294 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4843 () Bool)

(declare-fun mapRes!4843 () Bool)

(declare-fun tp!11575 () Bool)

(assert (=> mapNonEmpty!4843 (= mapRes!4843 (and tp!11575 e!91294))))

(declare-fun mapRest!4843 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4843 () ValueCell!1121)

(declare-fun mapKey!4843 () (_ BitVec 32))

(assert (=> mapNonEmpty!4843 (= mapRest!4828 (store mapRest!4843 mapKey!4843 mapValue!4843))))

(declare-fun b!140004 () Bool)

(declare-fun e!91293 () Bool)

(assert (=> b!140004 (= e!91293 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4843 () Bool)

(assert (=> mapIsEmpty!4843 mapRes!4843))

(declare-fun condMapEmpty!4843 () Bool)

(declare-fun mapDefault!4843 () ValueCell!1121)

(assert (=> mapNonEmpty!4828 (= condMapEmpty!4843 (= mapRest!4828 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4843)))))

(assert (=> mapNonEmpty!4828 (= tp!11547 (and e!91293 mapRes!4843))))

(assert (= (and mapNonEmpty!4828 condMapEmpty!4843) mapIsEmpty!4843))

(assert (= (and mapNonEmpty!4828 (not condMapEmpty!4843)) mapNonEmpty!4843))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1121) mapValue!4843)) b!140003))

(assert (= (and mapNonEmpty!4828 ((_ is ValueCellFull!1121) mapDefault!4843)) b!140004))

(declare-fun m!166671 () Bool)

(assert (=> mapNonEmpty!4843 m!166671))

(declare-fun b!140005 () Bool)

(declare-fun e!91296 () Bool)

(assert (=> b!140005 (= e!91296 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4844 () Bool)

(declare-fun mapRes!4844 () Bool)

(declare-fun tp!11576 () Bool)

(assert (=> mapNonEmpty!4844 (= mapRes!4844 (and tp!11576 e!91296))))

(declare-fun mapKey!4844 () (_ BitVec 32))

(declare-fun mapRest!4844 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapValue!4844 () ValueCell!1121)

(assert (=> mapNonEmpty!4844 (= mapRest!4827 (store mapRest!4844 mapKey!4844 mapValue!4844))))

(declare-fun b!140006 () Bool)

(declare-fun e!91295 () Bool)

(assert (=> b!140006 (= e!91295 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4844 () Bool)

(assert (=> mapIsEmpty!4844 mapRes!4844))

(declare-fun condMapEmpty!4844 () Bool)

(declare-fun mapDefault!4844 () ValueCell!1121)

(assert (=> mapNonEmpty!4827 (= condMapEmpty!4844 (= mapRest!4827 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4844)))))

(assert (=> mapNonEmpty!4827 (= tp!11545 (and e!91295 mapRes!4844))))

(assert (= (and mapNonEmpty!4827 condMapEmpty!4844) mapIsEmpty!4844))

(assert (= (and mapNonEmpty!4827 (not condMapEmpty!4844)) mapNonEmpty!4844))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1121) mapValue!4844)) b!140005))

(assert (= (and mapNonEmpty!4827 ((_ is ValueCellFull!1121) mapDefault!4844)) b!140006))

(declare-fun m!166673 () Bool)

(assert (=> mapNonEmpty!4844 m!166673))

(declare-fun b_lambda!6245 () Bool)

(assert (= b_lambda!6243 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6245)))

(check-sat (not b!139845) (not b!139829) (not bm!15431) (not mapNonEmpty!4843) (not bm!15488) (not b!139982) (not b!139836) (not b!139995) (not b!139996) (not d!43563) (not bm!15415) (not d!43565) (not b!139833) (not b!139834) (not b!139985) (not d!43559) (not bm!15505) (not bm!15501) (not b_lambda!6241) (not b_next!3027) (not bm!15498) (not d!43547) (not b!139862) (not d!43561) (not b!139972) (not b!139777) (not b!139864) (not bm!15434) (not bm!15500) (not b!139949) (not b!139830) (not d!43543) (not b_lambda!6245) (not b!139767) (not b_next!3025) (not bm!15436) (not b!139969) (not bm!15494) (not b!139854) (not bm!15506) (not mapNonEmpty!4844) (not b!139768) (not bm!15492) tp_is_empty!2929 (not b!139963) (not b!139966) (not b!139855) (not b!139770) (not d!43557) (not b!139853) (not bm!15504) (not bm!15508) (not bm!15495) (not d!43539) (not b!139782) (not bm!15491) b_and!8717 (not b!139837) (not bm!15435) b_and!8719 (not b!139841) (not b!139951))
(check-sat b_and!8717 b_and!8719 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun d!43569 () Bool)

(assert (=> d!43569 (= (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992)))) (and (or (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000001111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000011111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000001111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000011111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000001111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000011111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000001111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000011111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000001111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000011111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000001111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000011111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000001111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000011111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000111111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000001111111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000011111111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000111111111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00001111111111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00011111111111111111111111111111) (= (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> d!43559 d!43569))

(declare-fun d!43571 () Bool)

(assert (=> d!43571 (= (map!1424 (_2!1340 lt!73099)) (getCurrentListMap!534 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun bs!5825 () Bool)

(assert (= bs!5825 d!43571))

(declare-fun m!166675 () Bool)

(assert (=> bs!5825 m!166675))

(assert (=> bm!15488 d!43571))

(declare-fun d!43573 () Bool)

(declare-fun e!91298 () Bool)

(assert (=> d!43573 e!91298))

(declare-fun res!66842 () Bool)

(assert (=> d!43573 (=> res!66842 e!91298)))

(declare-fun lt!73118 () Bool)

(assert (=> d!43573 (= res!66842 (not lt!73118))))

(declare-fun lt!73117 () Bool)

(assert (=> d!43573 (= lt!73118 lt!73117)))

(declare-fun lt!73116 () Unit!4393)

(declare-fun e!91297 () Unit!4393)

(assert (=> d!43573 (= lt!73116 e!91297)))

(declare-fun c!26238 () Bool)

(assert (=> d!43573 (= c!26238 lt!73117)))

(assert (=> d!43573 (= lt!73117 (containsKey!178 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (=> d!43573 (= (contains!910 call!15492 (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) lt!73118)))

(declare-fun b!140007 () Bool)

(declare-fun lt!73115 () Unit!4393)

(assert (=> b!140007 (= e!91297 lt!73115)))

(assert (=> b!140007 (= lt!73115 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (=> b!140007 (isDefined!128 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(declare-fun b!140008 () Bool)

(declare-fun Unit!4401 () Unit!4393)

(assert (=> b!140008 (= e!91297 Unit!4401)))

(declare-fun b!140009 () Bool)

(assert (=> b!140009 (= e!91298 (isDefined!128 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (= (and d!43573 c!26238) b!140007))

(assert (= (and d!43573 (not c!26238)) b!140008))

(assert (= (and d!43573 (not res!66842)) b!140009))

(assert (=> d!43573 m!166633))

(declare-fun m!166677 () Bool)

(assert (=> d!43573 m!166677))

(assert (=> b!140007 m!166633))

(declare-fun m!166679 () Bool)

(assert (=> b!140007 m!166679))

(assert (=> b!140007 m!166633))

(declare-fun m!166681 () Bool)

(assert (=> b!140007 m!166681))

(assert (=> b!140007 m!166681))

(declare-fun m!166683 () Bool)

(assert (=> b!140007 m!166683))

(assert (=> b!140009 m!166633))

(assert (=> b!140009 m!166681))

(assert (=> b!140009 m!166681))

(assert (=> b!140009 m!166683))

(assert (=> b!139963 d!43573))

(declare-fun d!43575 () Bool)

(declare-fun e!91301 () Bool)

(assert (=> d!43575 e!91301))

(declare-fun res!66845 () Bool)

(assert (=> d!43575 (=> (not res!66845) (not e!91301))))

(assert (=> d!43575 (= res!66845 (and (bvsge (index!3292 lt!73103) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73103) (size!2575 (_keys!4697 newMap!16)))))))

(declare-fun lt!73121 () Unit!4393)

(declare-fun choose!863 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) Int) Unit!4393)

(assert (=> d!43575 (= lt!73121 (choose!863 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43575 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43575 (= (lemmaValidKeyInArrayIsInListMap!124 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (defaultEntry!2939 newMap!16)) lt!73121)))

(declare-fun b!140012 () Bool)

(assert (=> b!140012 (= e!91301 (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!43575 res!66845) b!140012))

(declare-fun m!166685 () Bool)

(assert (=> d!43575 m!166685))

(declare-fun m!166687 () Bool)

(assert (=> d!43575 m!166687))

(declare-fun m!166689 () Bool)

(assert (=> b!140012 m!166689))

(assert (=> b!140012 m!166633))

(assert (=> b!140012 m!166689))

(assert (=> b!140012 m!166633))

(declare-fun m!166691 () Bool)

(assert (=> b!140012 m!166691))

(assert (=> b!139963 d!43575))

(declare-fun d!43577 () Bool)

(declare-fun e!91304 () Bool)

(assert (=> d!43577 e!91304))

(declare-fun res!66848 () Bool)

(assert (=> d!43577 (=> (not res!66848) (not e!91304))))

(assert (=> d!43577 (= res!66848 (and (bvsge (index!3292 lt!73103) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73103) (size!2576 (_values!2922 newMap!16)))))))

(declare-fun lt!73124 () Unit!4393)

(declare-fun choose!864 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4393)

(assert (=> d!43577 (= lt!73124 (choose!864 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43577 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43577 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) lt!73124)))

(declare-fun b!140015 () Bool)

(assert (=> b!140015 (= e!91304 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (= (and d!43577 res!66848) b!140015))

(assert (=> d!43577 m!166407))

(assert (=> d!43577 m!166427))

(declare-fun m!166693 () Bool)

(assert (=> d!43577 m!166693))

(assert (=> d!43577 m!166687))

(assert (=> b!140015 m!166541))

(assert (=> b!140015 m!166541))

(declare-fun m!166695 () Bool)

(assert (=> b!140015 m!166695))

(assert (=> b!140015 m!166629))

(declare-fun m!166697 () Bool)

(assert (=> b!140015 m!166697))

(assert (=> b!139963 d!43577))

(declare-fun d!43579 () Bool)

(assert (=> d!43579 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139767 d!43579))

(declare-fun bm!15509 () Bool)

(declare-fun call!15512 () ListLongMap!1711)

(declare-fun call!15514 () ListLongMap!1711)

(assert (=> bm!15509 (= call!15512 call!15514)))

(declare-fun bm!15510 () Bool)

(declare-fun call!15517 () Bool)

(declare-fun lt!73128 () ListLongMap!1711)

(assert (=> bm!15510 (= call!15517 (contains!910 lt!73128 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140017 () Bool)

(declare-fun e!91312 () Bool)

(assert (=> b!140017 (= e!91312 (not call!15517))))

(declare-fun b!140018 () Bool)

(declare-fun e!91310 () ListLongMap!1711)

(assert (=> b!140018 (= e!91310 call!15512)))

(declare-fun b!140019 () Bool)

(declare-fun e!91309 () Bool)

(assert (=> b!140019 (= e!91309 (= (apply!120 lt!73128 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))

(declare-fun b!140020 () Bool)

(declare-fun e!91314 () Bool)

(assert (=> b!140020 (= e!91314 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140021 () Bool)

(declare-fun e!91315 () Bool)

(declare-fun e!91308 () Bool)

(assert (=> b!140021 (= e!91315 e!91308)))

(declare-fun c!26241 () Bool)

(assert (=> b!140021 (= c!26241 (not (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140022 () Bool)

(declare-fun res!66850 () Bool)

(assert (=> b!140022 (=> (not res!66850) (not e!91315))))

(declare-fun e!91311 () Bool)

(assert (=> b!140022 (= res!66850 e!91311)))

(declare-fun res!66853 () Bool)

(assert (=> b!140022 (=> res!66853 e!91311)))

(assert (=> b!140022 (= res!66853 (not e!91314))))

(declare-fun res!66856 () Bool)

(assert (=> b!140022 (=> (not res!66856) (not e!91314))))

(assert (=> b!140022 (= res!66856 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15511 () Bool)

(declare-fun call!15518 () ListLongMap!1711)

(declare-fun call!15515 () ListLongMap!1711)

(assert (=> bm!15511 (= call!15518 call!15515)))

(declare-fun b!140023 () Bool)

(declare-fun e!91306 () Bool)

(assert (=> b!140023 (= e!91306 (= (apply!120 lt!73128 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))

(declare-fun e!91307 () Bool)

(declare-fun b!140024 () Bool)

(assert (=> b!140024 (= e!91307 (= (apply!120 lt!73128 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140024 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089))))))

(assert (=> b!140024 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140025 () Bool)

(declare-fun e!91317 () ListLongMap!1711)

(assert (=> b!140025 (= e!91317 e!91310)))

(declare-fun c!26243 () Bool)

(assert (=> b!140025 (= c!26243 (and (not (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140026 () Bool)

(declare-fun e!91305 () Unit!4393)

(declare-fun lt!73144 () Unit!4393)

(assert (=> b!140026 (= e!91305 lt!73144)))

(declare-fun lt!73140 () ListLongMap!1711)

(assert (=> b!140026 (= lt!73140 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73129 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73146 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73146 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73125 () Unit!4393)

(assert (=> b!140026 (= lt!73125 (addStillContains!96 lt!73140 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73146))))

(assert (=> b!140026 (contains!910 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73146)))

(declare-fun lt!73127 () Unit!4393)

(assert (=> b!140026 (= lt!73127 lt!73125)))

(declare-fun lt!73130 () ListLongMap!1711)

(assert (=> b!140026 (= lt!73130 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73142 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73142 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73137 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73137 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73138 () Unit!4393)

(assert (=> b!140026 (= lt!73138 (addApplyDifferent!96 lt!73130 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73137))))

(assert (=> b!140026 (= (apply!120 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73137) (apply!120 lt!73130 lt!73137))))

(declare-fun lt!73143 () Unit!4393)

(assert (=> b!140026 (= lt!73143 lt!73138)))

(declare-fun lt!73126 () ListLongMap!1711)

(assert (=> b!140026 (= lt!73126 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73135 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73135 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73145 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73145 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73134 () Unit!4393)

(assert (=> b!140026 (= lt!73134 (addApplyDifferent!96 lt!73126 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73145))))

(assert (=> b!140026 (= (apply!120 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73145) (apply!120 lt!73126 lt!73145))))

(declare-fun lt!73131 () Unit!4393)

(assert (=> b!140026 (= lt!73131 lt!73134)))

(declare-fun lt!73141 () ListLongMap!1711)

(assert (=> b!140026 (= lt!73141 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73139 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73139 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73136 () (_ BitVec 64))

(assert (=> b!140026 (= lt!73136 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140026 (= lt!73144 (addApplyDifferent!96 lt!73141 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73136))))

(assert (=> b!140026 (= (apply!120 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73136) (apply!120 lt!73141 lt!73136))))

(declare-fun d!43581 () Bool)

(assert (=> d!43581 e!91315))

(declare-fun res!66855 () Bool)

(assert (=> d!43581 (=> (not res!66855) (not e!91315))))

(assert (=> d!43581 (= res!66855 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73132 () ListLongMap!1711)

(assert (=> d!43581 (= lt!73128 lt!73132)))

(declare-fun lt!73133 () Unit!4393)

(assert (=> d!43581 (= lt!73133 e!91305)))

(declare-fun c!26239 () Bool)

(declare-fun e!91316 () Bool)

(assert (=> d!43581 (= c!26239 e!91316)))

(declare-fun res!66852 () Bool)

(assert (=> d!43581 (=> (not res!66852) (not e!91316))))

(assert (=> d!43581 (= res!66852 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43581 (= lt!73132 e!91317)))

(declare-fun c!26240 () Bool)

(assert (=> d!43581 (= c!26240 (and (not (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43581 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43581 (= (getCurrentListMap!534 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73128)))

(declare-fun b!140016 () Bool)

(declare-fun e!91313 () ListLongMap!1711)

(declare-fun call!15513 () ListLongMap!1711)

(assert (=> b!140016 (= e!91313 call!15513)))

(declare-fun b!140027 () Bool)

(assert (=> b!140027 (= e!91317 (+!167 call!15514 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!140028 () Bool)

(assert (=> b!140028 (= e!91312 e!91306)))

(declare-fun res!66851 () Bool)

(assert (=> b!140028 (= res!66851 call!15517)))

(assert (=> b!140028 (=> (not res!66851) (not e!91306))))

(declare-fun bm!15512 () Bool)

(assert (=> bm!15512 (= call!15513 call!15518)))

(declare-fun b!140029 () Bool)

(declare-fun res!66849 () Bool)

(assert (=> b!140029 (=> (not res!66849) (not e!91315))))

(assert (=> b!140029 (= res!66849 e!91312)))

(declare-fun c!26244 () Bool)

(assert (=> b!140029 (= c!26244 (not (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!26242 () Bool)

(declare-fun b!140030 () Bool)

(assert (=> b!140030 (= c!26242 (and (not (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140030 (= e!91310 e!91313)))

(declare-fun b!140031 () Bool)

(assert (=> b!140031 (= e!91316 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15513 () Bool)

(declare-fun call!15516 () Bool)

(assert (=> bm!15513 (= call!15516 (contains!910 lt!73128 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140032 () Bool)

(assert (=> b!140032 (= e!91313 call!15512)))

(declare-fun b!140033 () Bool)

(assert (=> b!140033 (= e!91308 (not call!15516))))

(declare-fun bm!15514 () Bool)

(assert (=> bm!15514 (= call!15515 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140034 () Bool)

(assert (=> b!140034 (= e!91308 e!91309)))

(declare-fun res!66854 () Bool)

(assert (=> b!140034 (= res!66854 call!15516)))

(assert (=> b!140034 (=> (not res!66854) (not e!91309))))

(declare-fun b!140035 () Bool)

(assert (=> b!140035 (= e!91311 e!91307)))

(declare-fun res!66857 () Bool)

(assert (=> b!140035 (=> (not res!66857) (not e!91307))))

(assert (=> b!140035 (= res!66857 (contains!910 lt!73128 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140035 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140036 () Bool)

(declare-fun Unit!4402 () Unit!4393)

(assert (=> b!140036 (= e!91305 Unit!4402)))

(declare-fun bm!15515 () Bool)

(assert (=> bm!15515 (= call!15514 (+!167 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!43581 c!26240) b!140027))

(assert (= (and d!43581 (not c!26240)) b!140025))

(assert (= (and b!140025 c!26243) b!140018))

(assert (= (and b!140025 (not c!26243)) b!140030))

(assert (= (and b!140030 c!26242) b!140032))

(assert (= (and b!140030 (not c!26242)) b!140016))

(assert (= (or b!140032 b!140016) bm!15512))

(assert (= (or b!140018 bm!15512) bm!15511))

(assert (= (or b!140018 b!140032) bm!15509))

(assert (= (or b!140027 bm!15511) bm!15514))

(assert (= (or b!140027 bm!15509) bm!15515))

(assert (= (and d!43581 res!66852) b!140031))

(assert (= (and d!43581 c!26239) b!140026))

(assert (= (and d!43581 (not c!26239)) b!140036))

(assert (= (and d!43581 res!66855) b!140022))

(assert (= (and b!140022 res!66856) b!140020))

(assert (= (and b!140022 (not res!66853)) b!140035))

(assert (= (and b!140035 res!66857) b!140024))

(assert (= (and b!140022 res!66850) b!140029))

(assert (= (and b!140029 c!26244) b!140028))

(assert (= (and b!140029 (not c!26244)) b!140017))

(assert (= (and b!140028 res!66851) b!140023))

(assert (= (or b!140028 b!140017) bm!15510))

(assert (= (and b!140029 res!66849) b!140021))

(assert (= (and b!140021 c!26241) b!140034))

(assert (= (and b!140021 (not c!26241)) b!140033))

(assert (= (and b!140034 res!66854) b!140019))

(assert (= (or b!140034 b!140033) bm!15513))

(declare-fun b_lambda!6247 () Bool)

(assert (=> (not b_lambda!6247) (not b!140024)))

(declare-fun tb!2549 () Bool)

(declare-fun t!6328 () Bool)

(assert (=> (and b!139651 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16)) t!6328) tb!2549))

(declare-fun result!4187 () Bool)

(assert (=> tb!2549 (= result!4187 tp_is_empty!2929)))

(assert (=> b!140024 t!6328))

(declare-fun b_and!8721 () Bool)

(assert (= b_and!8717 (and (=> t!6328 result!4187) b_and!8721)))

(declare-fun t!6330 () Bool)

(declare-fun tb!2551 () Bool)

(assert (=> (and b!139639 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 newMap!16)) t!6330) tb!2551))

(declare-fun result!4189 () Bool)

(assert (= result!4189 result!4187))

(assert (=> b!140024 t!6330))

(declare-fun b_and!8723 () Bool)

(assert (= b_and!8719 (and (=> t!6330 result!4189) b_and!8723)))

(declare-fun m!166699 () Bool)

(assert (=> b!140031 m!166699))

(assert (=> b!140031 m!166699))

(declare-fun m!166701 () Bool)

(assert (=> b!140031 m!166701))

(declare-fun m!166703 () Bool)

(assert (=> b!140024 m!166703))

(declare-fun m!166705 () Bool)

(assert (=> b!140024 m!166705))

(assert (=> b!140024 m!166703))

(declare-fun m!166707 () Bool)

(assert (=> b!140024 m!166707))

(assert (=> b!140024 m!166699))

(assert (=> b!140024 m!166699))

(declare-fun m!166709 () Bool)

(assert (=> b!140024 m!166709))

(assert (=> b!140024 m!166705))

(declare-fun m!166711 () Bool)

(assert (=> bm!15510 m!166711))

(assert (=> b!140035 m!166699))

(assert (=> b!140035 m!166699))

(declare-fun m!166713 () Bool)

(assert (=> b!140035 m!166713))

(declare-fun m!166715 () Bool)

(assert (=> b!140019 m!166715))

(assert (=> d!43581 m!166687))

(declare-fun m!166717 () Bool)

(assert (=> bm!15513 m!166717))

(declare-fun m!166719 () Bool)

(assert (=> bm!15515 m!166719))

(declare-fun m!166721 () Bool)

(assert (=> bm!15514 m!166721))

(declare-fun m!166723 () Bool)

(assert (=> b!140023 m!166723))

(declare-fun m!166725 () Bool)

(assert (=> b!140026 m!166725))

(declare-fun m!166727 () Bool)

(assert (=> b!140026 m!166727))

(declare-fun m!166729 () Bool)

(assert (=> b!140026 m!166729))

(declare-fun m!166731 () Bool)

(assert (=> b!140026 m!166731))

(declare-fun m!166733 () Bool)

(assert (=> b!140026 m!166733))

(declare-fun m!166735 () Bool)

(assert (=> b!140026 m!166735))

(assert (=> b!140026 m!166731))

(declare-fun m!166737 () Bool)

(assert (=> b!140026 m!166737))

(declare-fun m!166739 () Bool)

(assert (=> b!140026 m!166739))

(declare-fun m!166741 () Bool)

(assert (=> b!140026 m!166741))

(declare-fun m!166743 () Bool)

(assert (=> b!140026 m!166743))

(declare-fun m!166745 () Bool)

(assert (=> b!140026 m!166745))

(assert (=> b!140026 m!166735))

(declare-fun m!166747 () Bool)

(assert (=> b!140026 m!166747))

(declare-fun m!166749 () Bool)

(assert (=> b!140026 m!166749))

(assert (=> b!140026 m!166739))

(assert (=> b!140026 m!166743))

(assert (=> b!140026 m!166699))

(declare-fun m!166751 () Bool)

(assert (=> b!140026 m!166751))

(assert (=> b!140026 m!166721))

(declare-fun m!166753 () Bool)

(assert (=> b!140026 m!166753))

(assert (=> b!140020 m!166699))

(assert (=> b!140020 m!166699))

(assert (=> b!140020 m!166701))

(declare-fun m!166755 () Bool)

(assert (=> b!140027 m!166755))

(assert (=> bm!15501 d!43581))

(declare-fun d!43583 () Bool)

(declare-fun e!91320 () Bool)

(assert (=> d!43583 e!91320))

(declare-fun res!66863 () Bool)

(assert (=> d!43583 (=> (not res!66863) (not e!91320))))

(declare-fun lt!73157 () ListLongMap!1711)

(assert (=> d!43583 (= res!66863 (contains!910 lt!73157 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73158 () List!1739)

(assert (=> d!43583 (= lt!73157 (ListLongMap!1712 lt!73158))))

(declare-fun lt!73155 () Unit!4393)

(declare-fun lt!73156 () Unit!4393)

(assert (=> d!43583 (= lt!73155 lt!73156)))

(assert (=> d!43583 (= (getValueByKey!174 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!91 (List!1739 (_ BitVec 64) V!3553) Unit!4393)

(assert (=> d!43583 (= lt!73156 (lemmaContainsTupThenGetReturnValue!91 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun insertStrictlySorted!94 (List!1739 (_ BitVec 64) V!3553) List!1739)

(assert (=> d!43583 (= lt!73158 (insertStrictlySorted!94 (toList!871 call!15435) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43583 (= (+!167 call!15435 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73157)))

(declare-fun b!140041 () Bool)

(declare-fun res!66862 () Bool)

(assert (=> b!140041 (=> (not res!66862) (not e!91320))))

(assert (=> b!140041 (= res!66862 (= (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140042 () Bool)

(declare-fun contains!914 (List!1739 tuple2!2656) Bool)

(assert (=> b!140042 (= e!91320 (contains!914 (toList!871 lt!73157) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43583 res!66863) b!140041))

(assert (= (and b!140041 res!66862) b!140042))

(declare-fun m!166757 () Bool)

(assert (=> d!43583 m!166757))

(declare-fun m!166759 () Bool)

(assert (=> d!43583 m!166759))

(declare-fun m!166761 () Bool)

(assert (=> d!43583 m!166761))

(declare-fun m!166763 () Bool)

(assert (=> d!43583 m!166763))

(declare-fun m!166765 () Bool)

(assert (=> b!140041 m!166765))

(declare-fun m!166767 () Bool)

(assert (=> b!140042 m!166767))

(assert (=> b!139837 d!43583))

(declare-fun d!43585 () Bool)

(declare-fun res!66868 () Bool)

(declare-fun e!91325 () Bool)

(assert (=> d!43585 (=> res!66868 e!91325)))

(assert (=> d!43585 (= res!66868 (and ((_ is Cons!1735) (toList!871 lt!72917)) (= (_1!1339 (h!2342 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43585 (= (containsKey!178 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91325)))

(declare-fun b!140047 () Bool)

(declare-fun e!91326 () Bool)

(assert (=> b!140047 (= e!91325 e!91326)))

(declare-fun res!66869 () Bool)

(assert (=> b!140047 (=> (not res!66869) (not e!91326))))

(assert (=> b!140047 (= res!66869 (and (or (not ((_ is Cons!1735) (toList!871 lt!72917))) (bvsle (_1!1339 (h!2342 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (toList!871 lt!72917)) (bvslt (_1!1339 (h!2342 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!140048 () Bool)

(assert (=> b!140048 (= e!91326 (containsKey!178 (t!6314 (toList!871 lt!72917)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43585 (not res!66868)) b!140047))

(assert (= (and b!140047 res!66869) b!140048))

(assert (=> b!140048 m!166407))

(declare-fun m!166769 () Bool)

(assert (=> b!140048 m!166769))

(assert (=> d!43563 d!43585))

(declare-fun d!43587 () Bool)

(assert (=> d!43587 (= (get!1527 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139996 d!43587))

(declare-fun d!43589 () Bool)

(assert (=> d!43589 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73161 () Unit!4393)

(declare-fun choose!865 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4393)

(assert (=> d!43589 (= lt!73161 (choose!865 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43589 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43589 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) lt!73161)))

(declare-fun bs!5826 () Bool)

(assert (= bs!5826 d!43589))

(assert (=> bs!5826 m!166427))

(declare-fun m!166771 () Bool)

(assert (=> bs!5826 m!166771))

(assert (=> bs!5826 m!166541))

(declare-fun m!166773 () Bool)

(assert (=> bs!5826 m!166773))

(assert (=> bs!5826 m!166427))

(declare-fun m!166775 () Bool)

(assert (=> bs!5826 m!166775))

(assert (=> bs!5826 m!166541))

(assert (=> bs!5826 m!166687))

(assert (=> b!139966 d!43589))

(declare-fun d!43591 () Bool)

(assert (=> d!43591 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73164 () Unit!4393)

(declare-fun choose!866 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 V!3553 Int) Unit!4393)

(assert (=> d!43591 (= lt!73164 (choose!866 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73106 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43591 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43591 (= (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73106 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)) lt!73164)))

(declare-fun bs!5827 () Bool)

(assert (= bs!5827 d!43591))

(assert (=> bs!5827 m!166687))

(assert (=> bs!5827 m!166541))

(declare-fun m!166777 () Bool)

(assert (=> bs!5827 m!166777))

(assert (=> bs!5827 m!166427))

(declare-fun m!166779 () Bool)

(assert (=> bs!5827 m!166779))

(assert (=> bs!5827 m!166541))

(assert (=> bs!5827 m!166427))

(declare-fun m!166781 () Bool)

(assert (=> bs!5827 m!166781))

(assert (=> b!139982 d!43591))

(declare-fun d!43593 () Bool)

(declare-fun e!91328 () Bool)

(assert (=> d!43593 e!91328))

(declare-fun res!66870 () Bool)

(assert (=> d!43593 (=> res!66870 e!91328)))

(declare-fun lt!73168 () Bool)

(assert (=> d!43593 (= res!66870 (not lt!73168))))

(declare-fun lt!73167 () Bool)

(assert (=> d!43593 (= lt!73168 lt!73167)))

(declare-fun lt!73166 () Unit!4393)

(declare-fun e!91327 () Unit!4393)

(assert (=> d!43593 (= lt!73166 e!91327)))

(declare-fun c!26245 () Bool)

(assert (=> d!43593 (= c!26245 lt!73167)))

(assert (=> d!43593 (= lt!73167 (containsKey!178 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43593 (= (contains!910 lt!73003 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73168)))

(declare-fun b!140049 () Bool)

(declare-fun lt!73165 () Unit!4393)

(assert (=> b!140049 (= e!91327 lt!73165)))

(assert (=> b!140049 (= lt!73165 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140049 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140050 () Bool)

(declare-fun Unit!4403 () Unit!4393)

(assert (=> b!140050 (= e!91327 Unit!4403)))

(declare-fun b!140051 () Bool)

(assert (=> b!140051 (= e!91328 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43593 c!26245) b!140049))

(assert (= (and d!43593 (not c!26245)) b!140050))

(assert (= (and d!43593 (not res!66870)) b!140051))

(declare-fun m!166783 () Bool)

(assert (=> d!43593 m!166783))

(declare-fun m!166785 () Bool)

(assert (=> b!140049 m!166785))

(declare-fun m!166787 () Bool)

(assert (=> b!140049 m!166787))

(assert (=> b!140049 m!166787))

(declare-fun m!166789 () Bool)

(assert (=> b!140049 m!166789))

(assert (=> b!140051 m!166787))

(assert (=> b!140051 m!166787))

(assert (=> b!140051 m!166789))

(assert (=> bm!15434 d!43593))

(assert (=> d!43543 d!43541))

(declare-fun d!43595 () Bool)

(assert (=> d!43595 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) from!355 Nil!1737)))

(assert (=> d!43595 true))

(declare-fun _$71!165 () Unit!4393)

(assert (=> d!43595 (= (choose!39 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!165)))

(declare-fun bs!5828 () Bool)

(assert (= bs!5828 d!43595))

(assert (=> bs!5828 m!166433))

(assert (=> d!43543 d!43595))

(declare-fun b!140052 () Bool)

(declare-fun e!91329 () Bool)

(declare-fun e!91331 () Bool)

(assert (=> b!140052 (= e!91329 e!91331)))

(declare-fun c!26246 () Bool)

(assert (=> b!140052 (= c!26246 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140053 () Bool)

(declare-fun e!91332 () Bool)

(assert (=> b!140053 (= e!91332 e!91329)))

(declare-fun res!66871 () Bool)

(assert (=> b!140053 (=> (not res!66871) (not e!91329))))

(declare-fun e!91330 () Bool)

(assert (=> b!140053 (= res!66871 (not e!91330))))

(declare-fun res!66872 () Bool)

(assert (=> b!140053 (=> (not res!66872) (not e!91330))))

(assert (=> b!140053 (= res!66872 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140054 () Bool)

(declare-fun call!15519 () Bool)

(assert (=> b!140054 (= e!91331 call!15519)))

(declare-fun d!43597 () Bool)

(declare-fun res!66873 () Bool)

(assert (=> d!43597 (=> res!66873 e!91332)))

(assert (=> d!43597 (= res!66873 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43597 (= (arrayNoDuplicates!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 Nil!1737) e!91332)))

(declare-fun b!140055 () Bool)

(assert (=> b!140055 (= e!91330 (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140056 () Bool)

(assert (=> b!140056 (= e!91331 call!15519)))

(declare-fun bm!15516 () Bool)

(assert (=> bm!15516 (= call!15519 (arrayNoDuplicates!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)))))

(assert (= (and d!43597 (not res!66873)) b!140053))

(assert (= (and b!140053 res!66872) b!140055))

(assert (= (and b!140053 res!66871) b!140052))

(assert (= (and b!140052 c!26246) b!140054))

(assert (= (and b!140052 (not c!26246)) b!140056))

(assert (= (or b!140054 b!140056) bm!15516))

(assert (=> b!140052 m!166699))

(assert (=> b!140052 m!166699))

(assert (=> b!140052 m!166701))

(assert (=> b!140053 m!166699))

(assert (=> b!140053 m!166699))

(assert (=> b!140053 m!166701))

(assert (=> b!140055 m!166699))

(assert (=> b!140055 m!166699))

(declare-fun m!166791 () Bool)

(assert (=> b!140055 m!166791))

(assert (=> bm!15516 m!166699))

(declare-fun m!166793 () Bool)

(assert (=> bm!15516 m!166793))

(assert (=> b!139855 d!43597))

(declare-fun d!43599 () Bool)

(assert (=> d!43599 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139830 d!43599))

(declare-fun bm!15517 () Bool)

(declare-fun call!15520 () ListLongMap!1711)

(declare-fun call!15522 () ListLongMap!1711)

(assert (=> bm!15517 (= call!15520 call!15522)))

(declare-fun bm!15518 () Bool)

(declare-fun call!15525 () Bool)

(declare-fun lt!73172 () ListLongMap!1711)

(assert (=> bm!15518 (= call!15525 (contains!910 lt!73172 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140058 () Bool)

(declare-fun e!91340 () Bool)

(assert (=> b!140058 (= e!91340 (not call!15525))))

(declare-fun b!140059 () Bool)

(declare-fun e!91338 () ListLongMap!1711)

(assert (=> b!140059 (= e!91338 call!15520)))

(declare-fun b!140060 () Bool)

(declare-fun e!91337 () Bool)

(assert (=> b!140060 (= e!91337 (= (apply!120 lt!73172 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140061 () Bool)

(declare-fun e!91342 () Bool)

(assert (=> b!140061 (= e!91342 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140062 () Bool)

(declare-fun e!91343 () Bool)

(declare-fun e!91336 () Bool)

(assert (=> b!140062 (= e!91343 e!91336)))

(declare-fun c!26249 () Bool)

(assert (=> b!140062 (= c!26249 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140063 () Bool)

(declare-fun res!66875 () Bool)

(assert (=> b!140063 (=> (not res!66875) (not e!91343))))

(declare-fun e!91339 () Bool)

(assert (=> b!140063 (= res!66875 e!91339)))

(declare-fun res!66878 () Bool)

(assert (=> b!140063 (=> res!66878 e!91339)))

(assert (=> b!140063 (= res!66878 (not e!91342))))

(declare-fun res!66881 () Bool)

(assert (=> b!140063 (=> (not res!66881) (not e!91342))))

(assert (=> b!140063 (= res!66881 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15519 () Bool)

(declare-fun call!15526 () ListLongMap!1711)

(declare-fun call!15523 () ListLongMap!1711)

(assert (=> bm!15519 (= call!15526 call!15523)))

(declare-fun b!140064 () Bool)

(declare-fun e!91334 () Bool)

(assert (=> b!140064 (= e!91334 (= (apply!120 lt!73172 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140065 () Bool)

(declare-fun e!91335 () Bool)

(assert (=> b!140065 (= e!91335 (= (apply!120 lt!73172 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140065 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 newMap!16))))))

(assert (=> b!140065 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140066 () Bool)

(declare-fun e!91345 () ListLongMap!1711)

(assert (=> b!140066 (= e!91345 e!91338)))

(declare-fun c!26251 () Bool)

(assert (=> b!140066 (= c!26251 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140067 () Bool)

(declare-fun e!91333 () Unit!4393)

(declare-fun lt!73188 () Unit!4393)

(assert (=> b!140067 (= e!91333 lt!73188)))

(declare-fun lt!73184 () ListLongMap!1711)

(assert (=> b!140067 (= lt!73184 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73173 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73173 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73190 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73190 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73169 () Unit!4393)

(assert (=> b!140067 (= lt!73169 (addStillContains!96 lt!73184 lt!73173 (zeroValue!2789 newMap!16) lt!73190))))

(assert (=> b!140067 (contains!910 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) lt!73190)))

(declare-fun lt!73171 () Unit!4393)

(assert (=> b!140067 (= lt!73171 lt!73169)))

(declare-fun lt!73174 () ListLongMap!1711)

(assert (=> b!140067 (= lt!73174 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73186 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73186 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73181 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73181 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73182 () Unit!4393)

(assert (=> b!140067 (= lt!73182 (addApplyDifferent!96 lt!73174 lt!73186 (minValue!2789 newMap!16) lt!73181))))

(assert (=> b!140067 (= (apply!120 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) lt!73181) (apply!120 lt!73174 lt!73181))))

(declare-fun lt!73187 () Unit!4393)

(assert (=> b!140067 (= lt!73187 lt!73182)))

(declare-fun lt!73170 () ListLongMap!1711)

(assert (=> b!140067 (= lt!73170 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73179 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73179 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73189 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73189 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73178 () Unit!4393)

(assert (=> b!140067 (= lt!73178 (addApplyDifferent!96 lt!73170 lt!73179 (zeroValue!2789 newMap!16) lt!73189))))

(assert (=> b!140067 (= (apply!120 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) lt!73189) (apply!120 lt!73170 lt!73189))))

(declare-fun lt!73175 () Unit!4393)

(assert (=> b!140067 (= lt!73175 lt!73178)))

(declare-fun lt!73185 () ListLongMap!1711)

(assert (=> b!140067 (= lt!73185 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73183 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73183 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73180 () (_ BitVec 64))

(assert (=> b!140067 (= lt!73180 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140067 (= lt!73188 (addApplyDifferent!96 lt!73185 lt!73183 (minValue!2789 newMap!16) lt!73180))))

(assert (=> b!140067 (= (apply!120 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) lt!73180) (apply!120 lt!73185 lt!73180))))

(declare-fun d!43601 () Bool)

(assert (=> d!43601 e!91343))

(declare-fun res!66880 () Bool)

(assert (=> d!43601 (=> (not res!66880) (not e!91343))))

(assert (=> d!43601 (= res!66880 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73176 () ListLongMap!1711)

(assert (=> d!43601 (= lt!73172 lt!73176)))

(declare-fun lt!73177 () Unit!4393)

(assert (=> d!43601 (= lt!73177 e!91333)))

(declare-fun c!26247 () Bool)

(declare-fun e!91344 () Bool)

(assert (=> d!43601 (= c!26247 e!91344)))

(declare-fun res!66877 () Bool)

(assert (=> d!43601 (=> (not res!66877) (not e!91344))))

(assert (=> d!43601 (= res!66877 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43601 (= lt!73176 e!91345)))

(declare-fun c!26248 () Bool)

(assert (=> d!43601 (= c!26248 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43601 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43601 (= (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73172)))

(declare-fun b!140057 () Bool)

(declare-fun e!91341 () ListLongMap!1711)

(declare-fun call!15521 () ListLongMap!1711)

(assert (=> b!140057 (= e!91341 call!15521)))

(declare-fun b!140068 () Bool)

(assert (=> b!140068 (= e!91345 (+!167 call!15522 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!140069 () Bool)

(assert (=> b!140069 (= e!91340 e!91334)))

(declare-fun res!66876 () Bool)

(assert (=> b!140069 (= res!66876 call!15525)))

(assert (=> b!140069 (=> (not res!66876) (not e!91334))))

(declare-fun bm!15520 () Bool)

(assert (=> bm!15520 (= call!15521 call!15526)))

(declare-fun b!140070 () Bool)

(declare-fun res!66874 () Bool)

(assert (=> b!140070 (=> (not res!66874) (not e!91343))))

(assert (=> b!140070 (= res!66874 e!91340)))

(declare-fun c!26252 () Bool)

(assert (=> b!140070 (= c!26252 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140071 () Bool)

(declare-fun c!26250 () Bool)

(assert (=> b!140071 (= c!26250 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140071 (= e!91338 e!91341)))

(declare-fun b!140072 () Bool)

(assert (=> b!140072 (= e!91344 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15521 () Bool)

(declare-fun call!15524 () Bool)

(assert (=> bm!15521 (= call!15524 (contains!910 lt!73172 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140073 () Bool)

(assert (=> b!140073 (= e!91341 call!15520)))

(declare-fun b!140074 () Bool)

(assert (=> b!140074 (= e!91336 (not call!15524))))

(declare-fun bm!15522 () Bool)

(assert (=> bm!15522 (= call!15523 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140075 () Bool)

(assert (=> b!140075 (= e!91336 e!91337)))

(declare-fun res!66879 () Bool)

(assert (=> b!140075 (= res!66879 call!15524)))

(assert (=> b!140075 (=> (not res!66879) (not e!91337))))

(declare-fun b!140076 () Bool)

(assert (=> b!140076 (= e!91339 e!91335)))

(declare-fun res!66882 () Bool)

(assert (=> b!140076 (=> (not res!66882) (not e!91335))))

(assert (=> b!140076 (= res!66882 (contains!910 lt!73172 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140077 () Bool)

(declare-fun Unit!4404 () Unit!4393)

(assert (=> b!140077 (= e!91333 Unit!4404)))

(declare-fun bm!15523 () Bool)

(assert (=> bm!15523 (= call!15522 (+!167 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!43601 c!26248) b!140068))

(assert (= (and d!43601 (not c!26248)) b!140066))

(assert (= (and b!140066 c!26251) b!140059))

(assert (= (and b!140066 (not c!26251)) b!140071))

(assert (= (and b!140071 c!26250) b!140073))

(assert (= (and b!140071 (not c!26250)) b!140057))

(assert (= (or b!140073 b!140057) bm!15520))

(assert (= (or b!140059 bm!15520) bm!15519))

(assert (= (or b!140059 b!140073) bm!15517))

(assert (= (or b!140068 bm!15519) bm!15522))

(assert (= (or b!140068 bm!15517) bm!15523))

(assert (= (and d!43601 res!66877) b!140072))

(assert (= (and d!43601 c!26247) b!140067))

(assert (= (and d!43601 (not c!26247)) b!140077))

(assert (= (and d!43601 res!66880) b!140063))

(assert (= (and b!140063 res!66881) b!140061))

(assert (= (and b!140063 (not res!66878)) b!140076))

(assert (= (and b!140076 res!66882) b!140065))

(assert (= (and b!140063 res!66875) b!140070))

(assert (= (and b!140070 c!26252) b!140069))

(assert (= (and b!140070 (not c!26252)) b!140058))

(assert (= (and b!140069 res!66876) b!140064))

(assert (= (or b!140069 b!140058) bm!15518))

(assert (= (and b!140070 res!66874) b!140062))

(assert (= (and b!140062 c!26249) b!140075))

(assert (= (and b!140062 (not c!26249)) b!140074))

(assert (= (and b!140075 res!66879) b!140060))

(assert (= (or b!140075 b!140074) bm!15521))

(declare-fun b_lambda!6249 () Bool)

(assert (=> (not b_lambda!6249) (not b!140065)))

(assert (=> b!140065 t!6328))

(declare-fun b_and!8725 () Bool)

(assert (= b_and!8721 (and (=> t!6328 result!4187) b_and!8725)))

(assert (=> b!140065 t!6330))

(declare-fun b_and!8727 () Bool)

(assert (= b_and!8723 (and (=> t!6330 result!4189) b_and!8727)))

(assert (=> b!140072 m!166699))

(assert (=> b!140072 m!166699))

(assert (=> b!140072 m!166701))

(assert (=> b!140065 m!166703))

(declare-fun m!166795 () Bool)

(assert (=> b!140065 m!166795))

(assert (=> b!140065 m!166703))

(declare-fun m!166797 () Bool)

(assert (=> b!140065 m!166797))

(assert (=> b!140065 m!166699))

(assert (=> b!140065 m!166699))

(declare-fun m!166799 () Bool)

(assert (=> b!140065 m!166799))

(assert (=> b!140065 m!166795))

(declare-fun m!166801 () Bool)

(assert (=> bm!15518 m!166801))

(assert (=> b!140076 m!166699))

(assert (=> b!140076 m!166699))

(declare-fun m!166803 () Bool)

(assert (=> b!140076 m!166803))

(declare-fun m!166805 () Bool)

(assert (=> b!140060 m!166805))

(assert (=> d!43601 m!166687))

(declare-fun m!166807 () Bool)

(assert (=> bm!15521 m!166807))

(declare-fun m!166809 () Bool)

(assert (=> bm!15523 m!166809))

(declare-fun m!166811 () Bool)

(assert (=> bm!15522 m!166811))

(declare-fun m!166813 () Bool)

(assert (=> b!140064 m!166813))

(declare-fun m!166815 () Bool)

(assert (=> b!140067 m!166815))

(declare-fun m!166817 () Bool)

(assert (=> b!140067 m!166817))

(declare-fun m!166819 () Bool)

(assert (=> b!140067 m!166819))

(declare-fun m!166821 () Bool)

(assert (=> b!140067 m!166821))

(declare-fun m!166823 () Bool)

(assert (=> b!140067 m!166823))

(declare-fun m!166825 () Bool)

(assert (=> b!140067 m!166825))

(assert (=> b!140067 m!166821))

(declare-fun m!166827 () Bool)

(assert (=> b!140067 m!166827))

(declare-fun m!166829 () Bool)

(assert (=> b!140067 m!166829))

(declare-fun m!166831 () Bool)

(assert (=> b!140067 m!166831))

(declare-fun m!166833 () Bool)

(assert (=> b!140067 m!166833))

(declare-fun m!166835 () Bool)

(assert (=> b!140067 m!166835))

(assert (=> b!140067 m!166825))

(declare-fun m!166837 () Bool)

(assert (=> b!140067 m!166837))

(declare-fun m!166839 () Bool)

(assert (=> b!140067 m!166839))

(assert (=> b!140067 m!166829))

(assert (=> b!140067 m!166833))

(assert (=> b!140067 m!166699))

(declare-fun m!166841 () Bool)

(assert (=> b!140067 m!166841))

(assert (=> b!140067 m!166811))

(declare-fun m!166843 () Bool)

(assert (=> b!140067 m!166843))

(assert (=> b!140061 m!166699))

(assert (=> b!140061 m!166699))

(assert (=> b!140061 m!166701))

(declare-fun m!166845 () Bool)

(assert (=> b!140068 m!166845))

(assert (=> b!139972 d!43601))

(declare-fun d!43603 () Bool)

(declare-fun e!91348 () Bool)

(assert (=> d!43603 e!91348))

(declare-fun c!26255 () Bool)

(assert (=> d!43603 (= c!26255 (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43603 true))

(declare-fun _$29!165 () Unit!4393)

(assert (=> d!43603 (= (choose!862 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) _$29!165)))

(declare-fun b!140082 () Bool)

(assert (=> b!140082 (= e!91348 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!140083 () Bool)

(assert (=> b!140083 (= e!91348 (ite (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43603 c!26255) b!140082))

(assert (= (and d!43603 (not c!26255)) b!140083))

(assert (=> b!140082 m!166407))

(assert (=> b!140082 m!166437))

(assert (=> d!43547 d!43603))

(assert (=> d!43547 d!43569))

(declare-fun b!140092 () Bool)

(declare-fun e!91354 () (_ BitVec 32))

(declare-fun e!91353 () (_ BitVec 32))

(assert (=> b!140092 (= e!91354 e!91353)))

(declare-fun c!26261 () Bool)

(assert (=> b!140092 (= c!26261 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140093 () Bool)

(declare-fun call!15529 () (_ BitVec 32))

(assert (=> b!140093 (= e!91353 (bvadd #b00000000000000000000000000000001 call!15529))))

(declare-fun d!43605 () Bool)

(declare-fun lt!73193 () (_ BitVec 32))

(assert (=> d!43605 (and (bvsge lt!73193 #b00000000000000000000000000000000) (bvsle lt!73193 (bvsub (size!2575 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43605 (= lt!73193 e!91354)))

(declare-fun c!26260 () Bool)

(assert (=> d!43605 (= c!26260 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43605 (and (bvsle #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 newMap!16)) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43605 (= (arrayCountValidKeys!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) lt!73193)))

(declare-fun b!140094 () Bool)

(assert (=> b!140094 (= e!91354 #b00000000000000000000000000000000)))

(declare-fun b!140095 () Bool)

(assert (=> b!140095 (= e!91353 call!15529)))

(declare-fun bm!15526 () Bool)

(assert (=> bm!15526 (= call!15529 (arrayCountValidKeys!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (= (and d!43605 c!26260) b!140094))

(assert (= (and d!43605 (not c!26260)) b!140092))

(assert (= (and b!140092 c!26261) b!140093))

(assert (= (and b!140092 (not c!26261)) b!140095))

(assert (= (or b!140093 b!140095) bm!15526))

(assert (=> b!140092 m!166699))

(assert (=> b!140092 m!166699))

(assert (=> b!140092 m!166701))

(declare-fun m!166847 () Bool)

(assert (=> bm!15526 m!166847))

(assert (=> b!139853 d!43605))

(declare-fun bm!15527 () Bool)

(declare-fun call!15530 () ListLongMap!1711)

(declare-fun call!15532 () ListLongMap!1711)

(assert (=> bm!15527 (= call!15530 call!15532)))

(declare-fun bm!15528 () Bool)

(declare-fun call!15535 () Bool)

(declare-fun lt!73197 () ListLongMap!1711)

(assert (=> bm!15528 (= call!15535 (contains!910 lt!73197 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140097 () Bool)

(declare-fun e!91362 () Bool)

(assert (=> b!140097 (= e!91362 (not call!15535))))

(declare-fun b!140098 () Bool)

(declare-fun e!91360 () ListLongMap!1711)

(assert (=> b!140098 (= e!91360 call!15530)))

(declare-fun b!140099 () Bool)

(declare-fun e!91359 () Bool)

(assert (=> b!140099 (= e!91359 (= (apply!120 lt!73197 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140100 () Bool)

(declare-fun e!91364 () Bool)

(assert (=> b!140100 (= e!91364 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140101 () Bool)

(declare-fun e!91365 () Bool)

(declare-fun e!91358 () Bool)

(assert (=> b!140101 (= e!91365 e!91358)))

(declare-fun c!26264 () Bool)

(assert (=> b!140101 (= c!26264 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140102 () Bool)

(declare-fun res!66884 () Bool)

(assert (=> b!140102 (=> (not res!66884) (not e!91365))))

(declare-fun e!91361 () Bool)

(assert (=> b!140102 (= res!66884 e!91361)))

(declare-fun res!66887 () Bool)

(assert (=> b!140102 (=> res!66887 e!91361)))

(assert (=> b!140102 (= res!66887 (not e!91364))))

(declare-fun res!66890 () Bool)

(assert (=> b!140102 (=> (not res!66890) (not e!91364))))

(assert (=> b!140102 (= res!66890 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15529 () Bool)

(declare-fun call!15536 () ListLongMap!1711)

(declare-fun call!15533 () ListLongMap!1711)

(assert (=> bm!15529 (= call!15536 call!15533)))

(declare-fun b!140103 () Bool)

(declare-fun e!91356 () Bool)

(assert (=> b!140103 (= e!91356 (= (apply!120 lt!73197 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140104 () Bool)

(declare-fun e!91357 () Bool)

(assert (=> b!140104 (= e!91357 (= (apply!120 lt!73197 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140104 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))))))))

(assert (=> b!140104 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140105 () Bool)

(declare-fun e!91367 () ListLongMap!1711)

(assert (=> b!140105 (= e!91367 e!91360)))

(declare-fun c!26266 () Bool)

(assert (=> b!140105 (= c!26266 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140106 () Bool)

(declare-fun e!91355 () Unit!4393)

(declare-fun lt!73213 () Unit!4393)

(assert (=> b!140106 (= e!91355 lt!73213)))

(declare-fun lt!73209 () ListLongMap!1711)

(assert (=> b!140106 (= lt!73209 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73198 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73198 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73215 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73215 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73194 () Unit!4393)

(assert (=> b!140106 (= lt!73194 (addStillContains!96 lt!73209 lt!73198 (zeroValue!2789 newMap!16) lt!73215))))

(assert (=> b!140106 (contains!910 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) lt!73215)))

(declare-fun lt!73196 () Unit!4393)

(assert (=> b!140106 (= lt!73196 lt!73194)))

(declare-fun lt!73199 () ListLongMap!1711)

(assert (=> b!140106 (= lt!73199 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73211 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73211 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73206 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73206 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73207 () Unit!4393)

(assert (=> b!140106 (= lt!73207 (addApplyDifferent!96 lt!73199 lt!73211 (minValue!2789 newMap!16) lt!73206))))

(assert (=> b!140106 (= (apply!120 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) lt!73206) (apply!120 lt!73199 lt!73206))))

(declare-fun lt!73212 () Unit!4393)

(assert (=> b!140106 (= lt!73212 lt!73207)))

(declare-fun lt!73195 () ListLongMap!1711)

(assert (=> b!140106 (= lt!73195 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73204 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73204 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73214 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73214 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73203 () Unit!4393)

(assert (=> b!140106 (= lt!73203 (addApplyDifferent!96 lt!73195 lt!73204 (zeroValue!2789 newMap!16) lt!73214))))

(assert (=> b!140106 (= (apply!120 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) lt!73214) (apply!120 lt!73195 lt!73214))))

(declare-fun lt!73200 () Unit!4393)

(assert (=> b!140106 (= lt!73200 lt!73203)))

(declare-fun lt!73210 () ListLongMap!1711)

(assert (=> b!140106 (= lt!73210 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73208 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73208 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73205 () (_ BitVec 64))

(assert (=> b!140106 (= lt!73205 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140106 (= lt!73213 (addApplyDifferent!96 lt!73210 lt!73208 (minValue!2789 newMap!16) lt!73205))))

(assert (=> b!140106 (= (apply!120 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) lt!73205) (apply!120 lt!73210 lt!73205))))

(declare-fun d!43607 () Bool)

(assert (=> d!43607 e!91365))

(declare-fun res!66889 () Bool)

(assert (=> d!43607 (=> (not res!66889) (not e!91365))))

(assert (=> d!43607 (= res!66889 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73201 () ListLongMap!1711)

(assert (=> d!43607 (= lt!73197 lt!73201)))

(declare-fun lt!73202 () Unit!4393)

(assert (=> d!43607 (= lt!73202 e!91355)))

(declare-fun c!26262 () Bool)

(declare-fun e!91366 () Bool)

(assert (=> d!43607 (= c!26262 e!91366)))

(declare-fun res!66886 () Bool)

(assert (=> d!43607 (=> (not res!66886) (not e!91366))))

(assert (=> d!43607 (= res!66886 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43607 (= lt!73201 e!91367)))

(declare-fun c!26263 () Bool)

(assert (=> d!43607 (= c!26263 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43607 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43607 (= (getCurrentListMap!534 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73197)))

(declare-fun b!140096 () Bool)

(declare-fun e!91363 () ListLongMap!1711)

(declare-fun call!15531 () ListLongMap!1711)

(assert (=> b!140096 (= e!91363 call!15531)))

(declare-fun b!140107 () Bool)

(assert (=> b!140107 (= e!91367 (+!167 call!15532 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!140108 () Bool)

(assert (=> b!140108 (= e!91362 e!91356)))

(declare-fun res!66885 () Bool)

(assert (=> b!140108 (= res!66885 call!15535)))

(assert (=> b!140108 (=> (not res!66885) (not e!91356))))

(declare-fun bm!15530 () Bool)

(assert (=> bm!15530 (= call!15531 call!15536)))

(declare-fun b!140109 () Bool)

(declare-fun res!66883 () Bool)

(assert (=> b!140109 (=> (not res!66883) (not e!91365))))

(assert (=> b!140109 (= res!66883 e!91362)))

(declare-fun c!26267 () Bool)

(assert (=> b!140109 (= c!26267 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140110 () Bool)

(declare-fun c!26265 () Bool)

(assert (=> b!140110 (= c!26265 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140110 (= e!91360 e!91363)))

(declare-fun b!140111 () Bool)

(assert (=> b!140111 (= e!91366 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15531 () Bool)

(declare-fun call!15534 () Bool)

(assert (=> bm!15531 (= call!15534 (contains!910 lt!73197 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140112 () Bool)

(assert (=> b!140112 (= e!91363 call!15530)))

(declare-fun b!140113 () Bool)

(assert (=> b!140113 (= e!91358 (not call!15534))))

(declare-fun bm!15532 () Bool)

(assert (=> bm!15532 (= call!15533 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140114 () Bool)

(assert (=> b!140114 (= e!91358 e!91359)))

(declare-fun res!66888 () Bool)

(assert (=> b!140114 (= res!66888 call!15534)))

(assert (=> b!140114 (=> (not res!66888) (not e!91359))))

(declare-fun b!140115 () Bool)

(assert (=> b!140115 (= e!91361 e!91357)))

(declare-fun res!66891 () Bool)

(assert (=> b!140115 (=> (not res!66891) (not e!91357))))

(assert (=> b!140115 (= res!66891 (contains!910 lt!73197 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140115 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140116 () Bool)

(declare-fun Unit!4405 () Unit!4393)

(assert (=> b!140116 (= e!91355 Unit!4405)))

(declare-fun bm!15533 () Bool)

(assert (=> bm!15533 (= call!15532 (+!167 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!43607 c!26263) b!140107))

(assert (= (and d!43607 (not c!26263)) b!140105))

(assert (= (and b!140105 c!26266) b!140098))

(assert (= (and b!140105 (not c!26266)) b!140110))

(assert (= (and b!140110 c!26265) b!140112))

(assert (= (and b!140110 (not c!26265)) b!140096))

(assert (= (or b!140112 b!140096) bm!15530))

(assert (= (or b!140098 bm!15530) bm!15529))

(assert (= (or b!140098 b!140112) bm!15527))

(assert (= (or b!140107 bm!15529) bm!15532))

(assert (= (or b!140107 bm!15527) bm!15533))

(assert (= (and d!43607 res!66886) b!140111))

(assert (= (and d!43607 c!26262) b!140106))

(assert (= (and d!43607 (not c!26262)) b!140116))

(assert (= (and d!43607 res!66889) b!140102))

(assert (= (and b!140102 res!66890) b!140100))

(assert (= (and b!140102 (not res!66887)) b!140115))

(assert (= (and b!140115 res!66891) b!140104))

(assert (= (and b!140102 res!66884) b!140109))

(assert (= (and b!140109 c!26267) b!140108))

(assert (= (and b!140109 (not c!26267)) b!140097))

(assert (= (and b!140108 res!66885) b!140103))

(assert (= (or b!140108 b!140097) bm!15528))

(assert (= (and b!140109 res!66883) b!140101))

(assert (= (and b!140101 c!26264) b!140114))

(assert (= (and b!140101 (not c!26264)) b!140113))

(assert (= (and b!140114 res!66888) b!140099))

(assert (= (or b!140114 b!140113) bm!15531))

(declare-fun b_lambda!6251 () Bool)

(assert (=> (not b_lambda!6251) (not b!140104)))

(assert (=> b!140104 t!6328))

(declare-fun b_and!8729 () Bool)

(assert (= b_and!8725 (and (=> t!6328 result!4187) b_and!8729)))

(assert (=> b!140104 t!6330))

(declare-fun b_and!8731 () Bool)

(assert (= b_and!8727 (and (=> t!6330 result!4189) b_and!8731)))

(assert (=> b!140111 m!166699))

(assert (=> b!140111 m!166699))

(assert (=> b!140111 m!166701))

(assert (=> b!140104 m!166703))

(declare-fun m!166849 () Bool)

(assert (=> b!140104 m!166849))

(assert (=> b!140104 m!166703))

(declare-fun m!166851 () Bool)

(assert (=> b!140104 m!166851))

(assert (=> b!140104 m!166699))

(assert (=> b!140104 m!166699))

(declare-fun m!166853 () Bool)

(assert (=> b!140104 m!166853))

(assert (=> b!140104 m!166849))

(declare-fun m!166855 () Bool)

(assert (=> bm!15528 m!166855))

(assert (=> b!140115 m!166699))

(assert (=> b!140115 m!166699))

(declare-fun m!166857 () Bool)

(assert (=> b!140115 m!166857))

(declare-fun m!166859 () Bool)

(assert (=> b!140099 m!166859))

(assert (=> d!43607 m!166687))

(declare-fun m!166861 () Bool)

(assert (=> bm!15531 m!166861))

(declare-fun m!166863 () Bool)

(assert (=> bm!15533 m!166863))

(declare-fun m!166865 () Bool)

(assert (=> bm!15532 m!166865))

(declare-fun m!166867 () Bool)

(assert (=> b!140103 m!166867))

(declare-fun m!166869 () Bool)

(assert (=> b!140106 m!166869))

(declare-fun m!166871 () Bool)

(assert (=> b!140106 m!166871))

(declare-fun m!166873 () Bool)

(assert (=> b!140106 m!166873))

(declare-fun m!166875 () Bool)

(assert (=> b!140106 m!166875))

(declare-fun m!166877 () Bool)

(assert (=> b!140106 m!166877))

(declare-fun m!166879 () Bool)

(assert (=> b!140106 m!166879))

(assert (=> b!140106 m!166875))

(declare-fun m!166881 () Bool)

(assert (=> b!140106 m!166881))

(declare-fun m!166883 () Bool)

(assert (=> b!140106 m!166883))

(declare-fun m!166885 () Bool)

(assert (=> b!140106 m!166885))

(declare-fun m!166887 () Bool)

(assert (=> b!140106 m!166887))

(declare-fun m!166889 () Bool)

(assert (=> b!140106 m!166889))

(assert (=> b!140106 m!166879))

(declare-fun m!166891 () Bool)

(assert (=> b!140106 m!166891))

(declare-fun m!166893 () Bool)

(assert (=> b!140106 m!166893))

(assert (=> b!140106 m!166883))

(assert (=> b!140106 m!166887))

(assert (=> b!140106 m!166699))

(declare-fun m!166895 () Bool)

(assert (=> b!140106 m!166895))

(assert (=> b!140106 m!166865))

(declare-fun m!166897 () Bool)

(assert (=> b!140106 m!166897))

(assert (=> b!140100 m!166699))

(assert (=> b!140100 m!166699))

(assert (=> b!140100 m!166701))

(declare-fun m!166899 () Bool)

(assert (=> b!140107 m!166899))

(assert (=> bm!15504 d!43607))

(declare-fun d!43609 () Bool)

(declare-fun e!91369 () Bool)

(assert (=> d!43609 e!91369))

(declare-fun res!66892 () Bool)

(assert (=> d!43609 (=> res!66892 e!91369)))

(declare-fun lt!73219 () Bool)

(assert (=> d!43609 (= res!66892 (not lt!73219))))

(declare-fun lt!73218 () Bool)

(assert (=> d!43609 (= lt!73219 lt!73218)))

(declare-fun lt!73217 () Unit!4393)

(declare-fun e!91368 () Unit!4393)

(assert (=> d!43609 (= lt!73217 e!91368)))

(declare-fun c!26268 () Bool)

(assert (=> d!43609 (= c!26268 lt!73218)))

(assert (=> d!43609 (= lt!73218 (containsKey!178 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43609 (= (contains!910 lt!73003 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73219)))

(declare-fun b!140117 () Bool)

(declare-fun lt!73216 () Unit!4393)

(assert (=> b!140117 (= e!91368 lt!73216)))

(assert (=> b!140117 (= lt!73216 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140117 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140118 () Bool)

(declare-fun Unit!4406 () Unit!4393)

(assert (=> b!140118 (= e!91368 Unit!4406)))

(declare-fun b!140119 () Bool)

(assert (=> b!140119 (= e!91369 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43609 c!26268) b!140117))

(assert (= (and d!43609 (not c!26268)) b!140118))

(assert (= (and d!43609 (not res!66892)) b!140119))

(assert (=> d!43609 m!166533))

(declare-fun m!166901 () Bool)

(assert (=> d!43609 m!166901))

(assert (=> b!140117 m!166533))

(declare-fun m!166903 () Bool)

(assert (=> b!140117 m!166903))

(assert (=> b!140117 m!166533))

(declare-fun m!166905 () Bool)

(assert (=> b!140117 m!166905))

(assert (=> b!140117 m!166905))

(declare-fun m!166907 () Bool)

(assert (=> b!140117 m!166907))

(assert (=> b!140119 m!166533))

(assert (=> b!140119 m!166905))

(assert (=> b!140119 m!166905))

(assert (=> b!140119 m!166907))

(assert (=> b!139845 d!43609))

(declare-fun b!140132 () Bool)

(declare-fun c!26277 () Bool)

(declare-fun lt!73227 () (_ BitVec 64))

(assert (=> b!140132 (= c!26277 (= lt!73227 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91378 () SeekEntryResult!282)

(declare-fun e!91377 () SeekEntryResult!282)

(assert (=> b!140132 (= e!91378 e!91377)))

(declare-fun b!140133 () Bool)

(declare-fun e!91376 () SeekEntryResult!282)

(assert (=> b!140133 (= e!91376 Undefined!282)))

(declare-fun b!140134 () Bool)

(declare-fun lt!73228 () SeekEntryResult!282)

(assert (=> b!140134 (= e!91378 (Found!282 (index!3293 lt!73228)))))

(declare-fun b!140135 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4873 (_ BitVec 32)) SeekEntryResult!282)

(assert (=> b!140135 (= e!91377 (seekKeyOrZeroReturnVacant!0 (x!16138 lt!73228) (index!3293 lt!73228) (index!3293 lt!73228) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun d!43611 () Bool)

(declare-fun lt!73226 () SeekEntryResult!282)

(assert (=> d!43611 (and (or ((_ is Undefined!282) lt!73226) (not ((_ is Found!282) lt!73226)) (and (bvsge (index!3292 lt!73226) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73226) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73226) ((_ is Found!282) lt!73226) (not ((_ is MissingZero!282) lt!73226)) (and (bvsge (index!3291 lt!73226) #b00000000000000000000000000000000) (bvslt (index!3291 lt!73226) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73226) ((_ is Found!282) lt!73226) ((_ is MissingZero!282) lt!73226) (not ((_ is MissingVacant!282) lt!73226)) (and (bvsge (index!3294 lt!73226) #b00000000000000000000000000000000) (bvslt (index!3294 lt!73226) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73226) (ite ((_ is Found!282) lt!73226) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73226)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite ((_ is MissingZero!282) lt!73226) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73226)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!282) lt!73226) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73226)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43611 (= lt!73226 e!91376)))

(declare-fun c!26275 () Bool)

(assert (=> d!43611 (= c!26275 (and ((_ is Intermediate!282) lt!73228) (undefined!1094 lt!73228)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4873 (_ BitVec 32)) SeekEntryResult!282)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!43611 (= lt!73228 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(assert (=> d!43611 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43611 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!73226)))

(declare-fun b!140136 () Bool)

(assert (=> b!140136 (= e!91377 (MissingZero!282 (index!3293 lt!73228)))))

(declare-fun b!140137 () Bool)

(assert (=> b!140137 (= e!91376 e!91378)))

(assert (=> b!140137 (= lt!73227 (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73228)))))

(declare-fun c!26276 () Bool)

(assert (=> b!140137 (= c!26276 (= lt!73227 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43611 c!26275) b!140133))

(assert (= (and d!43611 (not c!26275)) b!140137))

(assert (= (and b!140137 c!26276) b!140134))

(assert (= (and b!140137 (not c!26276)) b!140132))

(assert (= (and b!140132 c!26277) b!140136))

(assert (= (and b!140132 (not c!26277)) b!140135))

(assert (=> b!140135 m!166407))

(declare-fun m!166909 () Bool)

(assert (=> b!140135 m!166909))

(assert (=> d!43611 m!166407))

(declare-fun m!166911 () Bool)

(assert (=> d!43611 m!166911))

(declare-fun m!166913 () Bool)

(assert (=> d!43611 m!166913))

(assert (=> d!43611 m!166911))

(assert (=> d!43611 m!166407))

(declare-fun m!166915 () Bool)

(assert (=> d!43611 m!166915))

(declare-fun m!166917 () Bool)

(assert (=> d!43611 m!166917))

(assert (=> d!43611 m!166687))

(declare-fun m!166919 () Bool)

(assert (=> d!43611 m!166919))

(declare-fun m!166921 () Bool)

(assert (=> b!140137 m!166921))

(assert (=> b!139985 d!43611))

(declare-fun d!43613 () Bool)

(declare-fun e!91379 () Bool)

(assert (=> d!43613 e!91379))

(declare-fun res!66894 () Bool)

(assert (=> d!43613 (=> (not res!66894) (not e!91379))))

(declare-fun lt!73231 () ListLongMap!1711)

(assert (=> d!43613 (= res!66894 (contains!910 lt!73231 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun lt!73232 () List!1739)

(assert (=> d!43613 (= lt!73231 (ListLongMap!1712 lt!73232))))

(declare-fun lt!73229 () Unit!4393)

(declare-fun lt!73230 () Unit!4393)

(assert (=> d!43613 (= lt!73229 lt!73230)))

(assert (=> d!43613 (= (getValueByKey!174 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (Some!179 (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43613 (= lt!73230 (lemmaContainsTupThenGetReturnValue!91 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43613 (= lt!73232 (insertStrictlySorted!94 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43613 (= (+!167 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73231)))

(declare-fun b!140138 () Bool)

(declare-fun res!66893 () Bool)

(assert (=> b!140138 (=> (not res!66893) (not e!91379))))

(assert (=> b!140138 (= res!66893 (= (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (Some!179 (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140139 () Bool)

(assert (=> b!140139 (= e!91379 (contains!914 (toList!871 lt!73231) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!43613 res!66894) b!140138))

(assert (= (and b!140138 res!66893) b!140139))

(declare-fun m!166923 () Bool)

(assert (=> d!43613 m!166923))

(declare-fun m!166925 () Bool)

(assert (=> d!43613 m!166925))

(declare-fun m!166927 () Bool)

(assert (=> d!43613 m!166927))

(declare-fun m!166929 () Bool)

(assert (=> d!43613 m!166929))

(declare-fun m!166931 () Bool)

(assert (=> b!140138 m!166931))

(declare-fun m!166933 () Bool)

(assert (=> b!140139 m!166933))

(assert (=> bm!15436 d!43613))

(declare-fun d!43615 () Bool)

(declare-fun e!91382 () Bool)

(assert (=> d!43615 e!91382))

(declare-fun res!66899 () Bool)

(assert (=> d!43615 (=> (not res!66899) (not e!91382))))

(declare-fun lt!73237 () SeekEntryResult!282)

(assert (=> d!43615 (= res!66899 ((_ is Found!282) lt!73237))))

(assert (=> d!43615 (= lt!73237 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun lt!73238 () Unit!4393)

(declare-fun choose!867 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4393)

(assert (=> d!43615 (= lt!73238 (choose!867 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43615 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43615 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) lt!73238)))

(declare-fun b!140144 () Bool)

(declare-fun res!66900 () Bool)

(assert (=> b!140144 (=> (not res!66900) (not e!91382))))

(assert (=> b!140144 (= res!66900 (inRange!0 (index!3292 lt!73237) (mask!7278 newMap!16)))))

(declare-fun b!140145 () Bool)

(assert (=> b!140145 (= e!91382 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73237)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!140145 (and (bvsge (index!3292 lt!73237) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73237) (size!2575 (_keys!4697 newMap!16))))))

(assert (= (and d!43615 res!66899) b!140144))

(assert (= (and b!140144 res!66900) b!140145))

(assert (=> d!43615 m!166407))

(assert (=> d!43615 m!166615))

(assert (=> d!43615 m!166407))

(declare-fun m!166935 () Bool)

(assert (=> d!43615 m!166935))

(assert (=> d!43615 m!166687))

(declare-fun m!166937 () Bool)

(assert (=> b!140144 m!166937))

(declare-fun m!166939 () Bool)

(assert (=> b!140145 m!166939))

(assert (=> bm!15494 d!43615))

(assert (=> d!43557 d!43601))

(declare-fun d!43617 () Bool)

(assert (=> d!43617 (= (inRange!0 (ite c!26229 (ite c!26224 (index!3292 lt!73105) (ite c!26234 (index!3291 lt!73092) (index!3294 lt!73092))) (ite c!26227 (index!3292 lt!73098) (ite c!26221 (index!3291 lt!73091) (index!3294 lt!73091)))) (mask!7278 newMap!16)) (and (bvsge (ite c!26229 (ite c!26224 (index!3292 lt!73105) (ite c!26234 (index!3291 lt!73092) (index!3294 lt!73092))) (ite c!26227 (index!3292 lt!73098) (ite c!26221 (index!3291 lt!73091) (index!3294 lt!73091)))) #b00000000000000000000000000000000) (bvslt (ite c!26229 (ite c!26224 (index!3292 lt!73105) (ite c!26234 (index!3291 lt!73092) (index!3294 lt!73092))) (ite c!26227 (index!3292 lt!73098) (ite c!26221 (index!3291 lt!73091) (index!3294 lt!73091)))) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15506 d!43617))

(assert (=> b!139782 d!43545))

(declare-fun d!43619 () Bool)

(declare-fun get!1528 (Option!180) V!3553)

(assert (=> d!43619 (= (apply!120 lt!73003 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5829 () Bool)

(assert (= bs!5829 d!43619))

(declare-fun m!166941 () Bool)

(assert (=> bs!5829 m!166941))

(assert (=> bs!5829 m!166941))

(declare-fun m!166943 () Bool)

(assert (=> bs!5829 m!166943))

(assert (=> b!139833 d!43619))

(declare-fun d!43621 () Bool)

(declare-fun lt!73241 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!137 (List!1740) (InoxSet (_ BitVec 64)))

(assert (=> d!43621 (= lt!73241 (select (content!137 Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!91387 () Bool)

(assert (=> d!43621 (= lt!73241 e!91387)))

(declare-fun res!66906 () Bool)

(assert (=> d!43621 (=> (not res!66906) (not e!91387))))

(assert (=> d!43621 (= res!66906 ((_ is Cons!1736) Nil!1737))))

(assert (=> d!43621 (= (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73241)))

(declare-fun b!140150 () Bool)

(declare-fun e!91388 () Bool)

(assert (=> b!140150 (= e!91387 e!91388)))

(declare-fun res!66905 () Bool)

(assert (=> b!140150 (=> res!66905 e!91388)))

(assert (=> b!140150 (= res!66905 (= (h!2343 Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140151 () Bool)

(assert (=> b!140151 (= e!91388 (contains!913 (t!6315 Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43621 res!66906) b!140150))

(assert (= (and b!140150 (not res!66905)) b!140151))

(declare-fun m!166945 () Bool)

(assert (=> d!43621 m!166945))

(assert (=> d!43621 m!166407))

(declare-fun m!166947 () Bool)

(assert (=> d!43621 m!166947))

(assert (=> b!140151 m!166407))

(declare-fun m!166949 () Bool)

(assert (=> b!140151 m!166949))

(assert (=> b!139770 d!43621))

(assert (=> b!139768 d!43579))

(assert (=> b!139841 d!43599))

(declare-fun d!43623 () Bool)

(declare-fun e!91390 () Bool)

(assert (=> d!43623 e!91390))

(declare-fun res!66907 () Bool)

(assert (=> d!43623 (=> res!66907 e!91390)))

(declare-fun lt!73245 () Bool)

(assert (=> d!43623 (= res!66907 (not lt!73245))))

(declare-fun lt!73244 () Bool)

(assert (=> d!43623 (= lt!73245 lt!73244)))

(declare-fun lt!73243 () Unit!4393)

(declare-fun e!91389 () Unit!4393)

(assert (=> d!43623 (= lt!73243 e!91389)))

(declare-fun c!26278 () Bool)

(assert (=> d!43623 (= c!26278 lt!73244)))

(assert (=> d!43623 (= lt!73244 (containsKey!178 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43623 (= (contains!910 e!91274 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73245)))

(declare-fun b!140152 () Bool)

(declare-fun lt!73242 () Unit!4393)

(assert (=> b!140152 (= e!91389 lt!73242)))

(assert (=> b!140152 (= lt!73242 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!140152 (isDefined!128 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140153 () Bool)

(declare-fun Unit!4407 () Unit!4393)

(assert (=> b!140153 (= e!91389 Unit!4407)))

(declare-fun b!140154 () Bool)

(assert (=> b!140154 (= e!91390 (isDefined!128 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (= (and d!43623 c!26278) b!140152))

(assert (= (and d!43623 (not c!26278)) b!140153))

(assert (= (and d!43623 (not res!66907)) b!140154))

(assert (=> d!43623 m!166407))

(declare-fun m!166951 () Bool)

(assert (=> d!43623 m!166951))

(assert (=> b!140152 m!166407))

(declare-fun m!166953 () Bool)

(assert (=> b!140152 m!166953))

(assert (=> b!140152 m!166407))

(declare-fun m!166955 () Bool)

(assert (=> b!140152 m!166955))

(assert (=> b!140152 m!166955))

(declare-fun m!166957 () Bool)

(assert (=> b!140152 m!166957))

(assert (=> b!140154 m!166407))

(assert (=> b!140154 m!166955))

(assert (=> b!140154 m!166955))

(assert (=> b!140154 m!166957))

(assert (=> bm!15508 d!43623))

(assert (=> b!139949 d!43601))

(assert (=> bm!15495 d!43557))

(declare-fun b!140179 () Bool)

(assert (=> b!140179 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> b!140179 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91405 () Bool)

(declare-fun lt!73266 () ListLongMap!1711)

(assert (=> b!140179 (= e!91405 (= (apply!120 lt!73266 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140180 () Bool)

(declare-fun e!91407 () Bool)

(assert (=> b!140180 (= e!91407 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140180 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!140181 () Bool)

(declare-fun res!66917 () Bool)

(declare-fun e!91408 () Bool)

(assert (=> b!140181 (=> (not res!66917) (not e!91408))))

(assert (=> b!140181 (= res!66917 (not (contains!910 lt!73266 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140182 () Bool)

(declare-fun e!91411 () Bool)

(assert (=> b!140182 (= e!91411 e!91405)))

(assert (=> b!140182 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun res!66919 () Bool)

(assert (=> b!140182 (= res!66919 (contains!910 lt!73266 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140182 (=> (not res!66919) (not e!91405))))

(declare-fun b!140183 () Bool)

(declare-fun lt!73262 () Unit!4393)

(declare-fun lt!73260 () Unit!4393)

(assert (=> b!140183 (= lt!73262 lt!73260)))

(declare-fun lt!73264 () V!3553)

(declare-fun lt!73265 () (_ BitVec 64))

(declare-fun lt!73261 () (_ BitVec 64))

(declare-fun lt!73263 () ListLongMap!1711)

(assert (=> b!140183 (not (contains!910 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)) lt!73261))))

(declare-fun addStillNotContains!65 (ListLongMap!1711 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4393)

(assert (=> b!140183 (= lt!73260 (addStillNotContains!65 lt!73263 lt!73265 lt!73264 lt!73261))))

(assert (=> b!140183 (= lt!73261 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140183 (= lt!73264 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140183 (= lt!73265 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!15539 () ListLongMap!1711)

(assert (=> b!140183 (= lt!73263 call!15539)))

(declare-fun e!91409 () ListLongMap!1711)

(assert (=> b!140183 (= e!91409 (+!167 call!15539 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140184 () Bool)

(assert (=> b!140184 (= e!91408 e!91411)))

(declare-fun c!26290 () Bool)

(assert (=> b!140184 (= c!26290 e!91407)))

(declare-fun res!66916 () Bool)

(assert (=> b!140184 (=> (not res!66916) (not e!91407))))

(assert (=> b!140184 (= res!66916 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun bm!15536 () Bool)

(assert (=> bm!15536 (= call!15539 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!140185 () Bool)

(assert (=> b!140185 (= e!91409 call!15539)))

(declare-fun b!140186 () Bool)

(declare-fun e!91406 () Bool)

(assert (=> b!140186 (= e!91411 e!91406)))

(declare-fun c!26288 () Bool)

(assert (=> b!140186 (= c!26288 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun d!43625 () Bool)

(assert (=> d!43625 e!91408))

(declare-fun res!66918 () Bool)

(assert (=> d!43625 (=> (not res!66918) (not e!91408))))

(assert (=> d!43625 (= res!66918 (not (contains!910 lt!73266 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91410 () ListLongMap!1711)

(assert (=> d!43625 (= lt!73266 e!91410)))

(declare-fun c!26289 () Bool)

(assert (=> d!43625 (= c!26289 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43625 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!43625 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) lt!73266)))

(declare-fun b!140187 () Bool)

(assert (=> b!140187 (= e!91410 (ListLongMap!1712 Nil!1736))))

(declare-fun b!140188 () Bool)

(declare-fun isEmpty!421 (ListLongMap!1711) Bool)

(assert (=> b!140188 (= e!91406 (isEmpty!421 lt!73266))))

(declare-fun b!140189 () Bool)

(assert (=> b!140189 (= e!91410 e!91409)))

(declare-fun c!26287 () Bool)

(assert (=> b!140189 (= c!26287 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140190 () Bool)

(assert (=> b!140190 (= e!91406 (= lt!73266 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43625 c!26289) b!140187))

(assert (= (and d!43625 (not c!26289)) b!140189))

(assert (= (and b!140189 c!26287) b!140183))

(assert (= (and b!140189 (not c!26287)) b!140185))

(assert (= (or b!140183 b!140185) bm!15536))

(assert (= (and d!43625 res!66918) b!140181))

(assert (= (and b!140181 res!66917) b!140184))

(assert (= (and b!140184 res!66916) b!140180))

(assert (= (and b!140184 c!26290) b!140182))

(assert (= (and b!140184 (not c!26290)) b!140186))

(assert (= (and b!140182 res!66919) b!140179))

(assert (= (and b!140186 c!26288) b!140190))

(assert (= (and b!140186 (not c!26288)) b!140188))

(declare-fun b_lambda!6253 () Bool)

(assert (=> (not b_lambda!6253) (not b!140179)))

(assert (=> b!140179 t!6311))

(declare-fun b_and!8733 () Bool)

(assert (= b_and!8729 (and (=> t!6311 result!4167) b_and!8733)))

(assert (=> b!140179 t!6313))

(declare-fun b_and!8735 () Bool)

(assert (= b_and!8731 (and (=> t!6313 result!4171) b_and!8735)))

(declare-fun b_lambda!6255 () Bool)

(assert (=> (not b_lambda!6255) (not b!140183)))

(assert (=> b!140183 t!6311))

(declare-fun b_and!8737 () Bool)

(assert (= b_and!8733 (and (=> t!6311 result!4167) b_and!8737)))

(assert (=> b!140183 t!6313))

(declare-fun b_and!8739 () Bool)

(assert (= b_and!8735 (and (=> t!6313 result!4171) b_and!8739)))

(declare-fun m!166959 () Bool)

(assert (=> d!43625 m!166959))

(assert (=> d!43625 m!166539))

(declare-fun m!166961 () Bool)

(assert (=> bm!15536 m!166961))

(declare-fun m!166963 () Bool)

(assert (=> b!140181 m!166963))

(assert (=> b!140180 m!166533))

(assert (=> b!140180 m!166533))

(assert (=> b!140180 m!166543))

(assert (=> b!140179 m!166545))

(assert (=> b!140179 m!166425))

(assert (=> b!140179 m!166547))

(assert (=> b!140179 m!166533))

(assert (=> b!140179 m!166425))

(assert (=> b!140179 m!166545))

(assert (=> b!140179 m!166533))

(declare-fun m!166965 () Bool)

(assert (=> b!140179 m!166965))

(assert (=> b!140182 m!166533))

(assert (=> b!140182 m!166533))

(declare-fun m!166967 () Bool)

(assert (=> b!140182 m!166967))

(declare-fun m!166969 () Bool)

(assert (=> b!140188 m!166969))

(assert (=> b!140189 m!166533))

(assert (=> b!140189 m!166533))

(assert (=> b!140189 m!166543))

(assert (=> b!140183 m!166545))

(assert (=> b!140183 m!166425))

(assert (=> b!140183 m!166547))

(declare-fun m!166971 () Bool)

(assert (=> b!140183 m!166971))

(assert (=> b!140183 m!166425))

(declare-fun m!166973 () Bool)

(assert (=> b!140183 m!166973))

(assert (=> b!140183 m!166545))

(declare-fun m!166975 () Bool)

(assert (=> b!140183 m!166975))

(assert (=> b!140183 m!166533))

(assert (=> b!140183 m!166971))

(declare-fun m!166977 () Bool)

(assert (=> b!140183 m!166977))

(assert (=> b!140190 m!166961))

(assert (=> bm!15435 d!43625))

(declare-fun d!43627 () Bool)

(declare-fun res!66920 () Bool)

(declare-fun e!91412 () Bool)

(assert (=> d!43627 (=> res!66920 e!91412)))

(assert (=> d!43627 (= res!66920 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43627 (= (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!91412)))

(declare-fun b!140191 () Bool)

(declare-fun e!91413 () Bool)

(assert (=> b!140191 (= e!91412 e!91413)))

(declare-fun res!66921 () Bool)

(assert (=> b!140191 (=> (not res!66921) (not e!91413))))

(assert (=> b!140191 (= res!66921 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!140192 () Bool)

(assert (=> b!140192 (= e!91413 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43627 (not res!66920)) b!140191))

(assert (= (and b!140191 res!66921) b!140192))

(declare-fun m!166979 () Bool)

(assert (=> d!43627 m!166979))

(assert (=> b!140192 m!166407))

(declare-fun m!166981 () Bool)

(assert (=> b!140192 m!166981))

(assert (=> b!139777 d!43627))

(declare-fun b!140209 () Bool)

(declare-fun res!66930 () Bool)

(declare-fun e!91422 () Bool)

(assert (=> b!140209 (=> (not res!66930) (not e!91422))))

(declare-fun lt!73271 () SeekEntryResult!282)

(assert (=> b!140209 (= res!66930 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73271)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140209 (and (bvsge (index!3294 lt!73271) #b00000000000000000000000000000000) (bvslt (index!3294 lt!73271) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140210 () Bool)

(assert (=> b!140210 (and (bvsge (index!3291 lt!73271) #b00000000000000000000000000000000) (bvslt (index!3291 lt!73271) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!66932 () Bool)

(assert (=> b!140210 (= res!66932 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73271)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91425 () Bool)

(assert (=> b!140210 (=> (not res!66932) (not e!91425))))

(declare-fun b!140211 () Bool)

(declare-fun call!15544 () Bool)

(assert (=> b!140211 (= e!91425 (not call!15544))))

(declare-fun call!15545 () Bool)

(declare-fun c!26295 () Bool)

(declare-fun bm!15541 () Bool)

(assert (=> bm!15541 (= call!15545 (inRange!0 (ite c!26295 (index!3291 lt!73271) (index!3294 lt!73271)) (mask!7278 newMap!16)))))

(declare-fun b!140212 () Bool)

(declare-fun e!91423 () Bool)

(assert (=> b!140212 (= e!91423 e!91425)))

(declare-fun res!66931 () Bool)

(assert (=> b!140212 (= res!66931 call!15545)))

(assert (=> b!140212 (=> (not res!66931) (not e!91425))))

(declare-fun d!43629 () Bool)

(assert (=> d!43629 e!91423))

(assert (=> d!43629 (= c!26295 ((_ is MissingZero!282) lt!73271))))

(assert (=> d!43629 (= lt!73271 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun lt!73272 () Unit!4393)

(declare-fun choose!868 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) Int) Unit!4393)

(assert (=> d!43629 (= lt!73272 (choose!868 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43629 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43629 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) lt!73272)))

(declare-fun b!140213 () Bool)

(declare-fun res!66933 () Bool)

(assert (=> b!140213 (=> (not res!66933) (not e!91422))))

(assert (=> b!140213 (= res!66933 call!15545)))

(declare-fun e!91424 () Bool)

(assert (=> b!140213 (= e!91424 e!91422)))

(declare-fun b!140214 () Bool)

(assert (=> b!140214 (= e!91423 e!91424)))

(declare-fun c!26296 () Bool)

(assert (=> b!140214 (= c!26296 ((_ is MissingVacant!282) lt!73271))))

(declare-fun bm!15542 () Bool)

(assert (=> bm!15542 (= call!15544 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140215 () Bool)

(assert (=> b!140215 (= e!91424 ((_ is Undefined!282) lt!73271))))

(declare-fun b!140216 () Bool)

(assert (=> b!140216 (= e!91422 (not call!15544))))

(assert (= (and d!43629 c!26295) b!140212))

(assert (= (and d!43629 (not c!26295)) b!140214))

(assert (= (and b!140212 res!66931) b!140210))

(assert (= (and b!140210 res!66932) b!140211))

(assert (= (and b!140214 c!26296) b!140213))

(assert (= (and b!140214 (not c!26296)) b!140215))

(assert (= (and b!140213 res!66933) b!140209))

(assert (= (and b!140209 res!66930) b!140216))

(assert (= (or b!140212 b!140213) bm!15541))

(assert (= (or b!140211 b!140216) bm!15542))

(declare-fun m!166983 () Bool)

(assert (=> bm!15541 m!166983))

(declare-fun m!166985 () Bool)

(assert (=> b!140210 m!166985))

(assert (=> d!43629 m!166407))

(assert (=> d!43629 m!166615))

(assert (=> d!43629 m!166407))

(declare-fun m!166987 () Bool)

(assert (=> d!43629 m!166987))

(assert (=> d!43629 m!166687))

(declare-fun m!166989 () Bool)

(assert (=> b!140209 m!166989))

(assert (=> bm!15542 m!166407))

(assert (=> bm!15542 m!166653))

(assert (=> bm!15498 d!43629))

(declare-fun d!43631 () Bool)

(declare-fun e!91427 () Bool)

(assert (=> d!43631 e!91427))

(declare-fun res!66934 () Bool)

(assert (=> d!43631 (=> res!66934 e!91427)))

(declare-fun lt!73276 () Bool)

(assert (=> d!43631 (= res!66934 (not lt!73276))))

(declare-fun lt!73275 () Bool)

(assert (=> d!43631 (= lt!73276 lt!73275)))

(declare-fun lt!73274 () Unit!4393)

(declare-fun e!91426 () Unit!4393)

(assert (=> d!43631 (= lt!73274 e!91426)))

(declare-fun c!26297 () Bool)

(assert (=> d!43631 (= c!26297 lt!73275)))

(assert (=> d!43631 (= lt!73275 (containsKey!178 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43631 (= (contains!910 lt!73003 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73276)))

(declare-fun b!140217 () Bool)

(declare-fun lt!73273 () Unit!4393)

(assert (=> b!140217 (= e!91426 lt!73273)))

(assert (=> b!140217 (= lt!73273 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140217 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140218 () Bool)

(declare-fun Unit!4408 () Unit!4393)

(assert (=> b!140218 (= e!91426 Unit!4408)))

(declare-fun b!140219 () Bool)

(assert (=> b!140219 (= e!91427 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43631 c!26297) b!140217))

(assert (= (and d!43631 (not c!26297)) b!140218))

(assert (= (and d!43631 (not res!66934)) b!140219))

(declare-fun m!166991 () Bool)

(assert (=> d!43631 m!166991))

(declare-fun m!166993 () Bool)

(assert (=> b!140217 m!166993))

(assert (=> b!140217 m!166941))

(assert (=> b!140217 m!166941))

(declare-fun m!166995 () Bool)

(assert (=> b!140217 m!166995))

(assert (=> b!140219 m!166941))

(assert (=> b!140219 m!166941))

(assert (=> b!140219 m!166995))

(assert (=> bm!15431 d!43631))

(declare-fun b!140220 () Bool)

(declare-fun e!91428 () Bool)

(declare-fun e!91430 () Bool)

(assert (=> b!140220 (= e!91428 e!91430)))

(declare-fun c!26298 () Bool)

(assert (=> b!140220 (= c!26298 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140221 () Bool)

(declare-fun e!91431 () Bool)

(assert (=> b!140221 (= e!91431 e!91428)))

(declare-fun res!66935 () Bool)

(assert (=> b!140221 (=> (not res!66935) (not e!91428))))

(declare-fun e!91429 () Bool)

(assert (=> b!140221 (= res!66935 (not e!91429))))

(declare-fun res!66936 () Bool)

(assert (=> b!140221 (=> (not res!66936) (not e!91429))))

(assert (=> b!140221 (= res!66936 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140222 () Bool)

(declare-fun call!15546 () Bool)

(assert (=> b!140222 (= e!91430 call!15546)))

(declare-fun d!43633 () Bool)

(declare-fun res!66937 () Bool)

(assert (=> d!43633 (=> res!66937 e!91431)))

(assert (=> d!43633 (= res!66937 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43633 (= (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) e!91431)))

(declare-fun b!140223 () Bool)

(assert (=> b!140223 (= e!91429 (contains!913 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140224 () Bool)

(assert (=> b!140224 (= e!91430 call!15546)))

(declare-fun bm!15543 () Bool)

(assert (=> bm!15543 (= call!15546 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))))))

(assert (= (and d!43633 (not res!66937)) b!140221))

(assert (= (and b!140221 res!66936) b!140223))

(assert (= (and b!140221 res!66935) b!140220))

(assert (= (and b!140220 c!26298) b!140222))

(assert (= (and b!140220 (not c!26298)) b!140224))

(assert (= (or b!140222 b!140224) bm!15543))

(declare-fun m!166997 () Bool)

(assert (=> b!140220 m!166997))

(assert (=> b!140220 m!166997))

(declare-fun m!166999 () Bool)

(assert (=> b!140220 m!166999))

(assert (=> b!140221 m!166997))

(assert (=> b!140221 m!166997))

(assert (=> b!140221 m!166999))

(assert (=> b!140223 m!166997))

(assert (=> b!140223 m!166997))

(declare-fun m!167001 () Bool)

(assert (=> b!140223 m!167001))

(assert (=> bm!15543 m!166997))

(declare-fun m!167003 () Bool)

(assert (=> bm!15543 m!167003))

(assert (=> bm!15415 d!43633))

(declare-fun d!43635 () Bool)

(declare-fun e!91432 () Bool)

(assert (=> d!43635 e!91432))

(declare-fun res!66939 () Bool)

(assert (=> d!43635 (=> (not res!66939) (not e!91432))))

(declare-fun lt!73279 () ListLongMap!1711)

(assert (=> d!43635 (= res!66939 (contains!910 lt!73279 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73280 () List!1739)

(assert (=> d!43635 (= lt!73279 (ListLongMap!1712 lt!73280))))

(declare-fun lt!73277 () Unit!4393)

(declare-fun lt!73278 () Unit!4393)

(assert (=> d!43635 (= lt!73277 lt!73278)))

(assert (=> d!43635 (= (getValueByKey!174 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43635 (= lt!73278 (lemmaContainsTupThenGetReturnValue!91 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43635 (= lt!73280 (insertStrictlySorted!94 (toList!871 call!15501) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43635 (= (+!167 call!15501 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73279)))

(declare-fun b!140225 () Bool)

(declare-fun res!66938 () Bool)

(assert (=> b!140225 (=> (not res!66938) (not e!91432))))

(assert (=> b!140225 (= res!66938 (= (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140226 () Bool)

(assert (=> b!140226 (= e!91432 (contains!914 (toList!871 lt!73279) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43635 res!66939) b!140225))

(assert (= (and b!140225 res!66938) b!140226))

(declare-fun m!167005 () Bool)

(assert (=> d!43635 m!167005))

(declare-fun m!167007 () Bool)

(assert (=> d!43635 m!167007))

(declare-fun m!167009 () Bool)

(assert (=> d!43635 m!167009))

(declare-fun m!167011 () Bool)

(assert (=> d!43635 m!167011))

(declare-fun m!167013 () Bool)

(assert (=> b!140225 m!167013))

(declare-fun m!167015 () Bool)

(assert (=> b!140226 m!167015))

(assert (=> b!139951 d!43635))

(declare-fun d!43637 () Bool)

(assert (=> d!43637 (= (get!1526 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3272 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!139995 d!43637))

(declare-fun d!43639 () Bool)

(declare-fun res!66940 () Bool)

(declare-fun e!91433 () Bool)

(assert (=> d!43639 (=> (not res!66940) (not e!91433))))

(assert (=> d!43639 (= res!66940 (simpleValid!96 (_2!1340 lt!73099)))))

(assert (=> d!43639 (= (valid!561 (_2!1340 lt!73099)) e!91433)))

(declare-fun b!140227 () Bool)

(declare-fun res!66941 () Bool)

(assert (=> b!140227 (=> (not res!66941) (not e!91433))))

(assert (=> b!140227 (= res!66941 (= (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))) (_size!624 (_2!1340 lt!73099))))))

(declare-fun b!140228 () Bool)

(declare-fun res!66942 () Bool)

(assert (=> b!140228 (=> (not res!66942) (not e!91433))))

(assert (=> b!140228 (= res!66942 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))))))

(declare-fun b!140229 () Bool)

(assert (=> b!140229 (= e!91433 (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73099)) #b00000000000000000000000000000000 Nil!1737))))

(assert (= (and d!43639 res!66940) b!140227))

(assert (= (and b!140227 res!66941) b!140228))

(assert (= (and b!140228 res!66942) b!140229))

(declare-fun m!167017 () Bool)

(assert (=> d!43639 m!167017))

(declare-fun m!167019 () Bool)

(assert (=> b!140227 m!167019))

(declare-fun m!167021 () Bool)

(assert (=> b!140228 m!167021))

(declare-fun m!167023 () Bool)

(assert (=> b!140229 m!167023))

(assert (=> d!43565 d!43639))

(assert (=> d!43565 d!43561))

(declare-fun b!140264 () Bool)

(declare-fun res!66965 () Bool)

(declare-fun e!91455 () Bool)

(assert (=> b!140264 (=> (not res!66965) (not e!91455))))

(declare-fun call!15557 () Bool)

(assert (=> b!140264 (= res!66965 call!15557)))

(declare-fun e!91452 () Bool)

(assert (=> b!140264 (= e!91452 e!91455)))

(declare-fun b!140265 () Bool)

(declare-fun e!91450 () Bool)

(declare-fun e!91451 () Bool)

(assert (=> b!140265 (= e!91450 e!91451)))

(declare-fun res!66963 () Bool)

(assert (=> b!140265 (= res!66963 call!15557)))

(assert (=> b!140265 (=> (not res!66963) (not e!91451))))

(declare-fun b!140266 () Bool)

(declare-fun c!26309 () Bool)

(declare-fun lt!73353 () SeekEntryResult!282)

(assert (=> b!140266 (= c!26309 ((_ is MissingVacant!282) lt!73353))))

(assert (=> b!140266 (= e!91452 e!91450)))

(declare-fun call!15558 () Bool)

(declare-fun bm!15552 () Bool)

(assert (=> bm!15552 (= call!15558 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140267 () Bool)

(declare-fun e!91456 () Unit!4393)

(declare-fun lt!73364 () Unit!4393)

(assert (=> b!140267 (= e!91456 lt!73364)))

(assert (=> b!140267 (= lt!73364 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(declare-fun call!15555 () SeekEntryResult!282)

(assert (=> b!140267 (= lt!73353 call!15555)))

(declare-fun c!26310 () Bool)

(assert (=> b!140267 (= c!26310 ((_ is MissingZero!282) lt!73353))))

(assert (=> b!140267 e!91452))

(declare-fun lt!73347 () SeekEntryResult!282)

(declare-fun bm!15553 () Bool)

(declare-fun call!15556 () Bool)

(declare-fun c!26307 () Bool)

(assert (=> bm!15553 (= call!15556 (inRange!0 (ite c!26307 (index!3292 lt!73347) (ite c!26310 (index!3291 lt!73353) (index!3294 lt!73353))) (mask!7278 newMap!16)))))

(declare-fun bm!15554 () Bool)

(assert (=> bm!15554 (= call!15555 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun d!43641 () Bool)

(declare-fun e!91453 () Bool)

(assert (=> d!43641 e!91453))

(declare-fun res!66966 () Bool)

(assert (=> d!43641 (=> (not res!66966) (not e!91453))))

(declare-fun lt!73342 () tuple2!2658)

(assert (=> d!43641 (= res!66966 (_1!1340 lt!73342))))

(assert (=> d!43641 (= lt!73342 (tuple2!2659 true (LongMapFixedSize!1151 (defaultEntry!2939 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd (_size!624 newMap!16) #b00000000000000000000000000000001) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (_vacant!624 newMap!16))))))

(declare-fun lt!73369 () Unit!4393)

(declare-fun lt!73361 () Unit!4393)

(assert (=> d!43641 (= lt!73369 lt!73361)))

(declare-fun lt!73348 () array!4873)

(declare-fun lt!73365 () array!4875)

(assert (=> d!43641 (contains!910 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(assert (=> d!43641 (= lt!73361 (lemmaValidKeyInArrayIsInListMap!124 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!43641 (= lt!73365 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))))

(assert (=> d!43641 (= lt!73348 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun lt!73356 () Unit!4393)

(declare-fun lt!73363 () Unit!4393)

(assert (=> d!43641 (= lt!73356 lt!73363)))

(declare-fun lt!73355 () array!4873)

(assert (=> d!43641 (= (arrayCountValidKeys!0 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4873 (_ BitVec 32)) Unit!4393)

(assert (=> d!43641 (= lt!73363 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(assert (=> d!43641 (= lt!73355 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun lt!73370 () Unit!4393)

(declare-fun lt!73367 () Unit!4393)

(assert (=> d!43641 (= lt!73370 lt!73367)))

(declare-fun lt!73345 () array!4873)

(assert (=> d!43641 (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4873 (_ BitVec 64) (_ BitVec 32)) Unit!4393)

(assert (=> d!43641 (= lt!73367 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(assert (=> d!43641 (= lt!73345 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun lt!73346 () Unit!4393)

(declare-fun lt!73358 () Unit!4393)

(assert (=> d!43641 (= lt!73346 lt!73358)))

(assert (=> d!43641 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!45 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4393)

(assert (=> d!43641 (= lt!73358 (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73343 () Unit!4393)

(declare-fun lt!73362 () Unit!4393)

(assert (=> d!43641 (= lt!73343 lt!73362)))

(assert (=> d!43641 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4873 (_ BitVec 32) (_ BitVec 32)) Unit!4393)

(assert (=> d!43641 (= lt!73362 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (mask!7278 newMap!16)))))

(declare-fun lt!73368 () Unit!4393)

(declare-fun lt!73359 () Unit!4393)

(assert (=> d!43641 (= lt!73368 lt!73359)))

(assert (=> d!43641 (= (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4873 (_ BitVec 32) (_ BitVec 64)) Unit!4393)

(assert (=> d!43641 (= lt!73359 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun lt!73354 () Unit!4393)

(declare-fun lt!73357 () Unit!4393)

(assert (=> d!43641 (= lt!73354 lt!73357)))

(declare-fun lt!73349 () List!1740)

(declare-fun lt!73352 () (_ BitVec 32))

(assert (=> d!43641 (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73352 lt!73349)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4873 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1740) Unit!4393)

(assert (=> d!43641 (= lt!73357 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) lt!73352 lt!73349))))

(assert (=> d!43641 (= lt!73349 Nil!1737)))

(assert (=> d!43641 (= lt!73352 #b00000000000000000000000000000000)))

(declare-fun lt!73350 () Unit!4393)

(declare-fun e!91457 () Unit!4393)

(assert (=> d!43641 (= lt!73350 e!91457)))

(declare-fun c!26308 () Bool)

(assert (=> d!43641 (= c!26308 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!73341 () Unit!4393)

(assert (=> d!43641 (= lt!73341 e!91456)))

(assert (=> d!43641 (= c!26307 (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43641 (valid!561 newMap!16)))

(assert (=> d!43641 (= (updateHelperNewKey!65 newMap!16 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) lt!73342)))

(declare-fun b!140268 () Bool)

(assert (=> b!140268 (= e!91451 (not call!15558))))

(declare-fun b!140269 () Bool)

(declare-fun e!91454 () Bool)

(assert (=> b!140269 (= e!91454 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73347)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140270 () Bool)

(declare-fun res!66969 () Bool)

(assert (=> b!140270 (=> (not res!66969) (not e!91453))))

(assert (=> b!140270 (= res!66969 (contains!910 (map!1424 (_2!1340 lt!73342)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140271 () Bool)

(declare-fun Unit!4409 () Unit!4393)

(assert (=> b!140271 (= e!91457 Unit!4409)))

(declare-fun lt!73366 () Unit!4393)

(declare-fun lemmaArrayContainsKeyThenInListMap!45 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4393)

(assert (=> b!140271 (= lt!73366 (lemmaArrayContainsKeyThenInListMap!45 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> b!140271 (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))

(declare-fun lt!73344 () Unit!4393)

(assert (=> b!140271 (= lt!73344 lt!73366)))

(assert (=> b!140271 false))

(declare-fun b!140272 () Bool)

(declare-fun res!66961 () Bool)

(assert (=> b!140272 (=> (not res!66961) (not e!91453))))

(assert (=> b!140272 (= res!66961 (valid!561 (_2!1340 lt!73342)))))

(declare-fun b!140273 () Bool)

(declare-fun res!66967 () Bool)

(assert (=> b!140273 (=> (not res!66967) (not e!91455))))

(assert (=> b!140273 (= res!66967 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73353)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140274 () Bool)

(declare-fun Unit!4410 () Unit!4393)

(assert (=> b!140274 (= e!91456 Unit!4410)))

(declare-fun lt!73360 () Unit!4393)

(assert (=> b!140274 (= lt!73360 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)))))

(assert (=> b!140274 (= lt!73347 call!15555)))

(declare-fun res!66962 () Bool)

(assert (=> b!140274 (= res!66962 ((_ is Found!282) lt!73347))))

(assert (=> b!140274 (=> (not res!66962) (not e!91454))))

(assert (=> b!140274 e!91454))

(declare-fun lt!73351 () Unit!4393)

(assert (=> b!140274 (= lt!73351 lt!73360)))

(assert (=> b!140274 false))

(declare-fun b!140275 () Bool)

(assert (=> b!140275 (= e!91453 (= (map!1424 (_2!1340 lt!73342)) (+!167 (map!1424 newMap!16) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140276 () Bool)

(declare-fun res!66964 () Bool)

(assert (=> b!140276 (= res!66964 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73353)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140276 (=> (not res!66964) (not e!91451))))

(declare-fun bm!15555 () Bool)

(assert (=> bm!15555 (= call!15557 call!15556)))

(declare-fun b!140277 () Bool)

(declare-fun Unit!4411 () Unit!4393)

(assert (=> b!140277 (= e!91457 Unit!4411)))

(declare-fun b!140278 () Bool)

(assert (=> b!140278 (= e!91450 ((_ is Undefined!282) lt!73353))))

(declare-fun b!140279 () Bool)

(declare-fun res!66968 () Bool)

(assert (=> b!140279 (= res!66968 call!15556)))

(assert (=> b!140279 (=> (not res!66968) (not e!91454))))

(declare-fun b!140280 () Bool)

(assert (=> b!140280 (= e!91455 (not call!15558))))

(assert (= (and d!43641 c!26307) b!140274))

(assert (= (and d!43641 (not c!26307)) b!140267))

(assert (= (and b!140274 res!66962) b!140279))

(assert (= (and b!140279 res!66968) b!140269))

(assert (= (and b!140267 c!26310) b!140264))

(assert (= (and b!140267 (not c!26310)) b!140266))

(assert (= (and b!140264 res!66965) b!140273))

(assert (= (and b!140273 res!66967) b!140280))

(assert (= (and b!140266 c!26309) b!140265))

(assert (= (and b!140266 (not c!26309)) b!140278))

(assert (= (and b!140265 res!66963) b!140276))

(assert (= (and b!140276 res!66964) b!140268))

(assert (= (or b!140264 b!140265) bm!15555))

(assert (= (or b!140280 b!140268) bm!15552))

(assert (= (or b!140279 bm!15555) bm!15553))

(assert (= (or b!140274 b!140267) bm!15554))

(assert (= (and d!43641 c!26308) b!140271))

(assert (= (and d!43641 (not c!26308)) b!140277))

(assert (= (and d!43641 res!66966) b!140272))

(assert (= (and b!140272 res!66961) b!140270))

(assert (= (and b!140270 res!66969) b!140275))

(declare-fun m!167025 () Bool)

(assert (=> b!140273 m!167025))

(assert (=> b!140271 m!166407))

(declare-fun m!167027 () Bool)

(assert (=> b!140271 m!167027))

(assert (=> b!140271 m!166541))

(assert (=> b!140271 m!166541))

(assert (=> b!140271 m!166407))

(declare-fun m!167029 () Bool)

(assert (=> b!140271 m!167029))

(declare-fun m!167031 () Bool)

(assert (=> d!43641 m!167031))

(declare-fun m!167033 () Bool)

(assert (=> d!43641 m!167033))

(declare-fun m!167035 () Bool)

(assert (=> d!43641 m!167035))

(declare-fun m!167037 () Bool)

(assert (=> d!43641 m!167037))

(declare-fun m!167039 () Bool)

(assert (=> d!43641 m!167039))

(assert (=> d!43641 m!167031))

(declare-fun m!167041 () Bool)

(assert (=> d!43641 m!167041))

(assert (=> d!43641 m!166541))

(assert (=> d!43641 m!166407))

(assert (=> d!43641 m!166427))

(declare-fun m!167043 () Bool)

(assert (=> d!43641 m!167043))

(declare-fun m!167045 () Bool)

(assert (=> d!43641 m!167045))

(declare-fun m!167047 () Bool)

(assert (=> d!43641 m!167047))

(assert (=> d!43641 m!166407))

(declare-fun m!167049 () Bool)

(assert (=> d!43641 m!167049))

(declare-fun m!167051 () Bool)

(assert (=> d!43641 m!167051))

(declare-fun m!167053 () Bool)

(assert (=> d!43641 m!167053))

(assert (=> d!43641 m!166541))

(assert (=> d!43641 m!166407))

(assert (=> d!43641 m!167029))

(assert (=> d!43641 m!166407))

(assert (=> d!43641 m!166653))

(declare-fun m!167055 () Bool)

(assert (=> d!43641 m!167055))

(assert (=> d!43641 m!166407))

(declare-fun m!167057 () Bool)

(assert (=> d!43641 m!167057))

(assert (=> d!43641 m!166407))

(declare-fun m!167059 () Bool)

(assert (=> d!43641 m!167059))

(declare-fun m!167061 () Bool)

(assert (=> d!43641 m!167061))

(assert (=> d!43641 m!166599))

(assert (=> d!43641 m!166407))

(declare-fun m!167063 () Bool)

(assert (=> d!43641 m!167063))

(assert (=> d!43641 m!166407))

(declare-fun m!167065 () Bool)

(assert (=> d!43641 m!167065))

(assert (=> d!43641 m!167039))

(assert (=> d!43641 m!166541))

(assert (=> d!43641 m!166695))

(assert (=> d!43641 m!166419))

(declare-fun m!167067 () Bool)

(assert (=> b!140269 m!167067))

(assert (=> bm!15552 m!166407))

(assert (=> bm!15552 m!166653))

(declare-fun m!167069 () Bool)

(assert (=> b!140270 m!167069))

(assert (=> b!140270 m!167069))

(assert (=> b!140270 m!166407))

(declare-fun m!167071 () Bool)

(assert (=> b!140270 m!167071))

(assert (=> b!140267 m!166407))

(assert (=> b!140267 m!166645))

(assert (=> bm!15554 m!166407))

(assert (=> bm!15554 m!166615))

(declare-fun m!167073 () Bool)

(assert (=> b!140276 m!167073))

(declare-fun m!167075 () Bool)

(assert (=> bm!15553 m!167075))

(assert (=> b!140275 m!167069))

(assert (=> b!140275 m!166409))

(assert (=> b!140275 m!166409))

(declare-fun m!167077 () Bool)

(assert (=> b!140275 m!167077))

(assert (=> b!140274 m!166407))

(assert (=> b!140274 m!166643))

(declare-fun m!167079 () Bool)

(assert (=> b!140272 m!167079))

(assert (=> bm!15505 d!43641))

(declare-fun d!43643 () Bool)

(declare-fun res!66970 () Bool)

(declare-fun e!91458 () Bool)

(assert (=> d!43643 (=> res!66970 e!91458)))

(assert (=> d!43643 (= res!66970 (= (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43643 (= (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91458)))

(declare-fun b!140281 () Bool)

(declare-fun e!91459 () Bool)

(assert (=> b!140281 (= e!91458 e!91459)))

(declare-fun res!66971 () Bool)

(assert (=> b!140281 (=> (not res!66971) (not e!91459))))

(assert (=> b!140281 (= res!66971 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140282 () Bool)

(assert (=> b!140282 (= e!91459 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43643 (not res!66970)) b!140281))

(assert (= (and b!140281 res!66971) b!140282))

(assert (=> d!43643 m!166699))

(assert (=> b!140282 m!166407))

(declare-fun m!167081 () Bool)

(assert (=> b!140282 m!167081))

(assert (=> bm!15492 d!43643))

(declare-fun d!43645 () Bool)

(declare-fun res!66972 () Bool)

(declare-fun e!91460 () Bool)

(assert (=> d!43645 (=> (not res!66972) (not e!91460))))

(assert (=> d!43645 (= res!66972 (simpleValid!96 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!43645 (= (valid!561 (v!3273 (underlying!476 thiss!992))) e!91460)))

(declare-fun b!140283 () Bool)

(declare-fun res!66973 () Bool)

(assert (=> b!140283 (=> (not res!66973) (not e!91460))))

(assert (=> b!140283 (= res!66973 (= (arrayCountValidKeys!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))) (_size!624 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!140284 () Bool)

(declare-fun res!66974 () Bool)

(assert (=> b!140284 (=> (not res!66974) (not e!91460))))

(assert (=> b!140284 (= res!66974 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!140285 () Bool)

(assert (=> b!140285 (= e!91460 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 Nil!1737))))

(assert (= (and d!43645 res!66972) b!140283))

(assert (= (and b!140283 res!66973) b!140284))

(assert (= (and b!140284 res!66974) b!140285))

(declare-fun m!167083 () Bool)

(assert (=> d!43645 m!167083))

(declare-fun m!167085 () Bool)

(assert (=> b!140283 m!167085))

(declare-fun m!167087 () Bool)

(assert (=> b!140284 m!167087))

(declare-fun m!167089 () Bool)

(assert (=> b!140285 m!167089))

(assert (=> d!43539 d!43645))

(declare-fun b!140296 () Bool)

(declare-fun res!66983 () Bool)

(declare-fun e!91463 () Bool)

(assert (=> b!140296 (=> (not res!66983) (not e!91463))))

(declare-fun size!2581 (LongMapFixedSize!1150) (_ BitVec 32))

(assert (=> b!140296 (= res!66983 (= (size!2581 newMap!16) (bvadd (_size!624 newMap!16) (bvsdiv (bvadd (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140295 () Bool)

(declare-fun res!66986 () Bool)

(assert (=> b!140295 (=> (not res!66986) (not e!91463))))

(assert (=> b!140295 (= res!66986 (bvsge (size!2581 newMap!16) (_size!624 newMap!16)))))

(declare-fun d!43647 () Bool)

(declare-fun res!66984 () Bool)

(assert (=> d!43647 (=> (not res!66984) (not e!91463))))

(assert (=> d!43647 (= res!66984 (validMask!0 (mask!7278 newMap!16)))))

(assert (=> d!43647 (= (simpleValid!96 newMap!16) e!91463)))

(declare-fun b!140297 () Bool)

(assert (=> b!140297 (= e!91463 (and (bvsge (extraKeys!2694 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!624 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!140294 () Bool)

(declare-fun res!66985 () Bool)

(assert (=> b!140294 (=> (not res!66985) (not e!91463))))

(assert (=> b!140294 (= res!66985 (and (= (size!2576 (_values!2922 newMap!16)) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001)) (= (size!2575 (_keys!4697 newMap!16)) (size!2576 (_values!2922 newMap!16))) (bvsge (_size!624 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!624 newMap!16) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!43647 res!66984) b!140294))

(assert (= (and b!140294 res!66985) b!140295))

(assert (= (and b!140295 res!66986) b!140296))

(assert (= (and b!140296 res!66983) b!140297))

(declare-fun m!167091 () Bool)

(assert (=> b!140296 m!167091))

(assert (=> b!140295 m!167091))

(assert (=> d!43647 m!166687))

(assert (=> d!43561 d!43647))

(assert (=> bm!15491 d!43611))

(declare-fun b!140307 () Bool)

(declare-fun e!91471 () Bool)

(declare-fun call!15561 () Bool)

(assert (=> b!140307 (= e!91471 call!15561)))

(declare-fun b!140308 () Bool)

(declare-fun e!91472 () Bool)

(assert (=> b!140308 (= e!91472 e!91471)))

(declare-fun c!26313 () Bool)

(assert (=> b!140308 (= c!26313 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140309 () Bool)

(declare-fun e!91470 () Bool)

(assert (=> b!140309 (= e!91470 call!15561)))

(declare-fun bm!15558 () Bool)

(assert (=> bm!15558 (= call!15561 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!140306 () Bool)

(assert (=> b!140306 (= e!91471 e!91470)))

(declare-fun lt!73378 () (_ BitVec 64))

(assert (=> b!140306 (= lt!73378 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73377 () Unit!4393)

(assert (=> b!140306 (= lt!73377 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000))))

(assert (=> b!140306 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000)))

(declare-fun lt!73379 () Unit!4393)

(assert (=> b!140306 (= lt!73379 lt!73377)))

(declare-fun res!66992 () Bool)

(assert (=> b!140306 (= res!66992 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)) (Found!282 #b00000000000000000000000000000000)))))

(assert (=> b!140306 (=> (not res!66992) (not e!91470))))

(declare-fun d!43649 () Bool)

(declare-fun res!66991 () Bool)

(assert (=> d!43649 (=> res!66991 e!91472)))

(assert (=> d!43649 (= res!66991 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43649 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 newMap!16) (mask!7278 newMap!16)) e!91472)))

(assert (= (and d!43649 (not res!66991)) b!140308))

(assert (= (and b!140308 c!26313) b!140306))

(assert (= (and b!140308 (not c!26313)) b!140307))

(assert (= (and b!140306 res!66992) b!140309))

(assert (= (or b!140309 b!140307) bm!15558))

(assert (=> b!140308 m!166699))

(assert (=> b!140308 m!166699))

(assert (=> b!140308 m!166701))

(declare-fun m!167093 () Bool)

(assert (=> bm!15558 m!167093))

(assert (=> b!140306 m!166699))

(declare-fun m!167095 () Bool)

(assert (=> b!140306 m!167095))

(declare-fun m!167097 () Bool)

(assert (=> b!140306 m!167097))

(assert (=> b!140306 m!166699))

(declare-fun m!167099 () Bool)

(assert (=> b!140306 m!167099))

(assert (=> b!139854 d!43649))

(declare-fun d!43651 () Bool)

(declare-fun e!91474 () Bool)

(assert (=> d!43651 e!91474))

(declare-fun res!66993 () Bool)

(assert (=> d!43651 (=> res!66993 e!91474)))

(declare-fun lt!73383 () Bool)

(assert (=> d!43651 (= res!66993 (not lt!73383))))

(declare-fun lt!73382 () Bool)

(assert (=> d!43651 (= lt!73383 lt!73382)))

(declare-fun lt!73381 () Unit!4393)

(declare-fun e!91473 () Unit!4393)

(assert (=> d!43651 (= lt!73381 e!91473)))

(declare-fun c!26314 () Bool)

(assert (=> d!43651 (= c!26314 lt!73382)))

(assert (=> d!43651 (= lt!73382 (containsKey!178 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43651 (= (contains!910 call!15490 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73383)))

(declare-fun b!140310 () Bool)

(declare-fun lt!73380 () Unit!4393)

(assert (=> b!140310 (= e!91473 lt!73380)))

(assert (=> b!140310 (= lt!73380 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!140310 (isDefined!128 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140311 () Bool)

(declare-fun Unit!4412 () Unit!4393)

(assert (=> b!140311 (= e!91473 Unit!4412)))

(declare-fun b!140312 () Bool)

(assert (=> b!140312 (= e!91474 (isDefined!128 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (= (and d!43651 c!26314) b!140310))

(assert (= (and d!43651 (not c!26314)) b!140311))

(assert (= (and d!43651 (not res!66993)) b!140312))

(assert (=> d!43651 m!166407))

(declare-fun m!167101 () Bool)

(assert (=> d!43651 m!167101))

(assert (=> b!140310 m!166407))

(declare-fun m!167103 () Bool)

(assert (=> b!140310 m!167103))

(assert (=> b!140310 m!166407))

(declare-fun m!167105 () Bool)

(assert (=> b!140310 m!167105))

(assert (=> b!140310 m!167105))

(declare-fun m!167107 () Bool)

(assert (=> b!140310 m!167107))

(assert (=> b!140312 m!166407))

(assert (=> b!140312 m!167105))

(assert (=> b!140312 m!167105))

(assert (=> b!140312 m!167107))

(assert (=> b!139969 d!43651))

(declare-fun d!43653 () Bool)

(assert (=> d!43653 (= (apply!120 lt!73003 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5830 () Bool)

(assert (= bs!5830 d!43653))

(assert (=> bs!5830 m!166787))

(assert (=> bs!5830 m!166787))

(declare-fun m!167109 () Bool)

(assert (=> bs!5830 m!167109))

(assert (=> b!139829 d!43653))

(declare-fun d!43655 () Bool)

(declare-fun e!91475 () Bool)

(assert (=> d!43655 e!91475))

(declare-fun res!66995 () Bool)

(assert (=> d!43655 (=> (not res!66995) (not e!91475))))

(declare-fun lt!73386 () ListLongMap!1711)

(assert (=> d!43655 (= res!66995 (contains!910 lt!73386 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73387 () List!1739)

(assert (=> d!43655 (= lt!73386 (ListLongMap!1712 lt!73387))))

(declare-fun lt!73384 () Unit!4393)

(declare-fun lt!73385 () Unit!4393)

(assert (=> d!43655 (= lt!73384 lt!73385)))

(assert (=> d!43655 (= (getValueByKey!174 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!179 (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43655 (= lt!73385 (lemmaContainsTupThenGetReturnValue!91 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43655 (= lt!73387 (insertStrictlySorted!94 (toList!871 e!91273) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43655 (= (+!167 e!91273 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73386)))

(declare-fun b!140313 () Bool)

(declare-fun res!66994 () Bool)

(assert (=> b!140313 (=> (not res!66994) (not e!91475))))

(assert (=> b!140313 (= res!66994 (= (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!179 (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140314 () Bool)

(assert (=> b!140314 (= e!91475 (contains!914 (toList!871 lt!73386) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43655 res!66995) b!140313))

(assert (= (and b!140313 res!66994) b!140314))

(declare-fun m!167111 () Bool)

(assert (=> d!43655 m!167111))

(declare-fun m!167113 () Bool)

(assert (=> d!43655 m!167113))

(declare-fun m!167115 () Bool)

(assert (=> d!43655 m!167115))

(declare-fun m!167117 () Bool)

(assert (=> d!43655 m!167117))

(declare-fun m!167119 () Bool)

(assert (=> b!140313 m!167119))

(declare-fun m!167121 () Bool)

(assert (=> b!140314 m!167121))

(assert (=> bm!15500 d!43655))

(declare-fun d!43657 () Bool)

(declare-fun e!91476 () Bool)

(assert (=> d!43657 e!91476))

(declare-fun res!66997 () Bool)

(assert (=> d!43657 (=> (not res!66997) (not e!91476))))

(declare-fun lt!73390 () ListLongMap!1711)

(assert (=> d!43657 (= res!66997 (contains!910 lt!73390 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73391 () List!1739)

(assert (=> d!43657 (= lt!73390 (ListLongMap!1712 lt!73391))))

(declare-fun lt!73388 () Unit!4393)

(declare-fun lt!73389 () Unit!4393)

(assert (=> d!43657 (= lt!73388 lt!73389)))

(assert (=> d!43657 (= (getValueByKey!174 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43657 (= lt!73389 (lemmaContainsTupThenGetReturnValue!91 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43657 (= lt!73391 (insertStrictlySorted!94 (toList!871 lt!73016) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43657 (= (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73390)))

(declare-fun b!140315 () Bool)

(declare-fun res!66996 () Bool)

(assert (=> b!140315 (=> (not res!66996) (not e!91476))))

(assert (=> b!140315 (= res!66996 (= (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140316 () Bool)

(assert (=> b!140316 (= e!91476 (contains!914 (toList!871 lt!73390) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43657 res!66997) b!140315))

(assert (= (and b!140315 res!66996) b!140316))

(declare-fun m!167123 () Bool)

(assert (=> d!43657 m!167123))

(declare-fun m!167125 () Bool)

(assert (=> d!43657 m!167125))

(declare-fun m!167127 () Bool)

(assert (=> d!43657 m!167127))

(declare-fun m!167129 () Bool)

(assert (=> d!43657 m!167129))

(declare-fun m!167131 () Bool)

(assert (=> b!140315 m!167131))

(declare-fun m!167133 () Bool)

(assert (=> b!140316 m!167133))

(assert (=> b!139836 d!43657))

(declare-fun d!43659 () Bool)

(declare-fun e!91477 () Bool)

(assert (=> d!43659 e!91477))

(declare-fun res!66999 () Bool)

(assert (=> d!43659 (=> (not res!66999) (not e!91477))))

(declare-fun lt!73394 () ListLongMap!1711)

(assert (=> d!43659 (= res!66999 (contains!910 lt!73394 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73395 () List!1739)

(assert (=> d!43659 (= lt!73394 (ListLongMap!1712 lt!73395))))

(declare-fun lt!73392 () Unit!4393)

(declare-fun lt!73393 () Unit!4393)

(assert (=> d!43659 (= lt!73392 lt!73393)))

(assert (=> d!43659 (= (getValueByKey!174 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43659 (= lt!73393 (lemmaContainsTupThenGetReturnValue!91 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43659 (= lt!73395 (insertStrictlySorted!94 (toList!871 lt!73005) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43659 (= (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73394)))

(declare-fun b!140317 () Bool)

(declare-fun res!66998 () Bool)

(assert (=> b!140317 (=> (not res!66998) (not e!91477))))

(assert (=> b!140317 (= res!66998 (= (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140318 () Bool)

(assert (=> b!140318 (= e!91477 (contains!914 (toList!871 lt!73394) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43659 res!66999) b!140317))

(assert (= (and b!140317 res!66998) b!140318))

(declare-fun m!167135 () Bool)

(assert (=> d!43659 m!167135))

(declare-fun m!167137 () Bool)

(assert (=> d!43659 m!167137))

(declare-fun m!167139 () Bool)

(assert (=> d!43659 m!167139))

(declare-fun m!167141 () Bool)

(assert (=> d!43659 m!167141))

(declare-fun m!167143 () Bool)

(assert (=> b!140317 m!167143))

(declare-fun m!167145 () Bool)

(assert (=> b!140318 m!167145))

(assert (=> b!139836 d!43659))

(declare-fun d!43661 () Bool)

(assert (=> d!43661 (= (apply!120 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73020) (apply!120 lt!73001 lt!73020))))

(declare-fun lt!73398 () Unit!4393)

(declare-fun choose!869 (ListLongMap!1711 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4393)

(assert (=> d!43661 (= lt!73398 (choose!869 lt!73001 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73020))))

(declare-fun e!91480 () Bool)

(assert (=> d!43661 e!91480))

(declare-fun res!67002 () Bool)

(assert (=> d!43661 (=> (not res!67002) (not e!91480))))

(assert (=> d!43661 (= res!67002 (contains!910 lt!73001 lt!73020))))

(assert (=> d!43661 (= (addApplyDifferent!96 lt!73001 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73020) lt!73398)))

(declare-fun b!140322 () Bool)

(assert (=> b!140322 (= e!91480 (not (= lt!73020 lt!73010)))))

(assert (= (and d!43661 res!67002) b!140322))

(assert (=> d!43661 m!166583))

(assert (=> d!43661 m!166583))

(assert (=> d!43661 m!166585))

(declare-fun m!167147 () Bool)

(assert (=> d!43661 m!167147))

(assert (=> d!43661 m!166589))

(declare-fun m!167149 () Bool)

(assert (=> d!43661 m!167149))

(assert (=> b!139836 d!43661))

(declare-fun d!43663 () Bool)

(assert (=> d!43663 (= (apply!120 lt!73016 lt!73011) (get!1528 (getValueByKey!174 (toList!871 lt!73016) lt!73011)))))

(declare-fun bs!5831 () Bool)

(assert (= bs!5831 d!43663))

(declare-fun m!167151 () Bool)

(assert (=> bs!5831 m!167151))

(assert (=> bs!5831 m!167151))

(declare-fun m!167153 () Bool)

(assert (=> bs!5831 m!167153))

(assert (=> b!139836 d!43663))

(declare-fun d!43665 () Bool)

(declare-fun e!91481 () Bool)

(assert (=> d!43665 e!91481))

(declare-fun res!67004 () Bool)

(assert (=> d!43665 (=> (not res!67004) (not e!91481))))

(declare-fun lt!73401 () ListLongMap!1711)

(assert (=> d!43665 (= res!67004 (contains!910 lt!73401 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73402 () List!1739)

(assert (=> d!43665 (= lt!73401 (ListLongMap!1712 lt!73402))))

(declare-fun lt!73399 () Unit!4393)

(declare-fun lt!73400 () Unit!4393)

(assert (=> d!43665 (= lt!73399 lt!73400)))

(assert (=> d!43665 (= (getValueByKey!174 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43665 (= lt!73400 (lemmaContainsTupThenGetReturnValue!91 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43665 (= lt!73402 (insertStrictlySorted!94 (toList!871 lt!73001) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43665 (= (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73401)))

(declare-fun b!140323 () Bool)

(declare-fun res!67003 () Bool)

(assert (=> b!140323 (=> (not res!67003) (not e!91481))))

(assert (=> b!140323 (= res!67003 (= (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140324 () Bool)

(assert (=> b!140324 (= e!91481 (contains!914 (toList!871 lt!73401) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43665 res!67004) b!140323))

(assert (= (and b!140323 res!67003) b!140324))

(declare-fun m!167155 () Bool)

(assert (=> d!43665 m!167155))

(declare-fun m!167157 () Bool)

(assert (=> d!43665 m!167157))

(declare-fun m!167159 () Bool)

(assert (=> d!43665 m!167159))

(declare-fun m!167161 () Bool)

(assert (=> d!43665 m!167161))

(declare-fun m!167163 () Bool)

(assert (=> b!140323 m!167163))

(declare-fun m!167165 () Bool)

(assert (=> b!140324 m!167165))

(assert (=> b!139836 d!43665))

(declare-fun d!43667 () Bool)

(assert (=> d!43667 (= (apply!120 lt!73001 lt!73020) (get!1528 (getValueByKey!174 (toList!871 lt!73001) lt!73020)))))

(declare-fun bs!5832 () Bool)

(assert (= bs!5832 d!43667))

(declare-fun m!167167 () Bool)

(assert (=> bs!5832 m!167167))

(assert (=> bs!5832 m!167167))

(declare-fun m!167169 () Bool)

(assert (=> bs!5832 m!167169))

(assert (=> b!139836 d!43667))

(declare-fun d!43669 () Bool)

(assert (=> d!43669 (contains!910 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73021)))

(declare-fun lt!73405 () Unit!4393)

(declare-fun choose!870 (ListLongMap!1711 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4393)

(assert (=> d!43669 (= lt!73405 (choose!870 lt!73015 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73021))))

(assert (=> d!43669 (contains!910 lt!73015 lt!73021)))

(assert (=> d!43669 (= (addStillContains!96 lt!73015 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73021) lt!73405)))

(declare-fun bs!5833 () Bool)

(assert (= bs!5833 d!43669))

(assert (=> bs!5833 m!166571))

(assert (=> bs!5833 m!166571))

(assert (=> bs!5833 m!166577))

(declare-fun m!167171 () Bool)

(assert (=> bs!5833 m!167171))

(declare-fun m!167173 () Bool)

(assert (=> bs!5833 m!167173))

(assert (=> b!139836 d!43669))

(declare-fun d!43671 () Bool)

(assert (=> d!43671 (= (apply!120 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73011) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73011)))))

(declare-fun bs!5834 () Bool)

(assert (= bs!5834 d!43671))

(declare-fun m!167175 () Bool)

(assert (=> bs!5834 m!167175))

(assert (=> bs!5834 m!167175))

(declare-fun m!167177 () Bool)

(assert (=> bs!5834 m!167177))

(assert (=> b!139836 d!43671))

(declare-fun d!43673 () Bool)

(assert (=> d!43673 (= (apply!120 lt!73005 lt!73012) (get!1528 (getValueByKey!174 (toList!871 lt!73005) lt!73012)))))

(declare-fun bs!5835 () Bool)

(assert (= bs!5835 d!43673))

(declare-fun m!167179 () Bool)

(assert (=> bs!5835 m!167179))

(assert (=> bs!5835 m!167179))

(declare-fun m!167181 () Bool)

(assert (=> bs!5835 m!167181))

(assert (=> b!139836 d!43673))

(declare-fun d!43675 () Bool)

(assert (=> d!43675 (= (apply!120 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73011) (apply!120 lt!73016 lt!73011))))

(declare-fun lt!73406 () Unit!4393)

(assert (=> d!43675 (= lt!73406 (choose!869 lt!73016 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73011))))

(declare-fun e!91482 () Bool)

(assert (=> d!43675 e!91482))

(declare-fun res!67005 () Bool)

(assert (=> d!43675 (=> (not res!67005) (not e!91482))))

(assert (=> d!43675 (= res!67005 (contains!910 lt!73016 lt!73011))))

(assert (=> d!43675 (= (addApplyDifferent!96 lt!73016 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73011) lt!73406)))

(declare-fun b!140326 () Bool)

(assert (=> b!140326 (= e!91482 (not (= lt!73011 lt!73014)))))

(assert (= (and d!43675 res!67005) b!140326))

(assert (=> d!43675 m!166575))

(assert (=> d!43675 m!166575))

(assert (=> d!43675 m!166587))

(declare-fun m!167183 () Bool)

(assert (=> d!43675 m!167183))

(assert (=> d!43675 m!166567))

(declare-fun m!167185 () Bool)

(assert (=> d!43675 m!167185))

(assert (=> b!139836 d!43675))

(assert (=> b!139836 d!43625))

(declare-fun d!43677 () Bool)

(assert (=> d!43677 (= (apply!120 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73020) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73020)))))

(declare-fun bs!5836 () Bool)

(assert (= bs!5836 d!43677))

(declare-fun m!167187 () Bool)

(assert (=> bs!5836 m!167187))

(assert (=> bs!5836 m!167187))

(declare-fun m!167189 () Bool)

(assert (=> bs!5836 m!167189))

(assert (=> b!139836 d!43677))

(declare-fun d!43679 () Bool)

(assert (=> d!43679 (= (apply!120 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73012) (apply!120 lt!73005 lt!73012))))

(declare-fun lt!73407 () Unit!4393)

(assert (=> d!43679 (= lt!73407 (choose!869 lt!73005 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73012))))

(declare-fun e!91483 () Bool)

(assert (=> d!43679 e!91483))

(declare-fun res!67006 () Bool)

(assert (=> d!43679 (=> (not res!67006) (not e!91483))))

(assert (=> d!43679 (= res!67006 (contains!910 lt!73005 lt!73012))))

(assert (=> d!43679 (= (addApplyDifferent!96 lt!73005 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73012) lt!73407)))

(declare-fun b!140327 () Bool)

(assert (=> b!140327 (= e!91483 (not (= lt!73012 lt!73017)))))

(assert (= (and d!43679 res!67006) b!140327))

(assert (=> d!43679 m!166579))

(assert (=> d!43679 m!166579))

(assert (=> d!43679 m!166581))

(declare-fun m!167191 () Bool)

(assert (=> d!43679 m!167191))

(assert (=> d!43679 m!166565))

(declare-fun m!167193 () Bool)

(assert (=> d!43679 m!167193))

(assert (=> b!139836 d!43679))

(declare-fun d!43681 () Bool)

(declare-fun e!91484 () Bool)

(assert (=> d!43681 e!91484))

(declare-fun res!67008 () Bool)

(assert (=> d!43681 (=> (not res!67008) (not e!91484))))

(declare-fun lt!73410 () ListLongMap!1711)

(assert (=> d!43681 (= res!67008 (contains!910 lt!73410 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73411 () List!1739)

(assert (=> d!43681 (= lt!73410 (ListLongMap!1712 lt!73411))))

(declare-fun lt!73408 () Unit!4393)

(declare-fun lt!73409 () Unit!4393)

(assert (=> d!43681 (= lt!73408 lt!73409)))

(assert (=> d!43681 (= (getValueByKey!174 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43681 (= lt!73409 (lemmaContainsTupThenGetReturnValue!91 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43681 (= lt!73411 (insertStrictlySorted!94 (toList!871 lt!73015) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43681 (= (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73410)))

(declare-fun b!140328 () Bool)

(declare-fun res!67007 () Bool)

(assert (=> b!140328 (=> (not res!67007) (not e!91484))))

(assert (=> b!140328 (= res!67007 (= (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140329 () Bool)

(assert (=> b!140329 (= e!91484 (contains!914 (toList!871 lt!73410) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43681 res!67008) b!140328))

(assert (= (and b!140328 res!67007) b!140329))

(declare-fun m!167195 () Bool)

(assert (=> d!43681 m!167195))

(declare-fun m!167197 () Bool)

(assert (=> d!43681 m!167197))

(declare-fun m!167199 () Bool)

(assert (=> d!43681 m!167199))

(declare-fun m!167201 () Bool)

(assert (=> d!43681 m!167201))

(declare-fun m!167203 () Bool)

(assert (=> b!140328 m!167203))

(declare-fun m!167205 () Bool)

(assert (=> b!140329 m!167205))

(assert (=> b!139836 d!43681))

(declare-fun d!43683 () Bool)

(declare-fun e!91486 () Bool)

(assert (=> d!43683 e!91486))

(declare-fun res!67009 () Bool)

(assert (=> d!43683 (=> res!67009 e!91486)))

(declare-fun lt!73415 () Bool)

(assert (=> d!43683 (= res!67009 (not lt!73415))))

(declare-fun lt!73414 () Bool)

(assert (=> d!43683 (= lt!73415 lt!73414)))

(declare-fun lt!73413 () Unit!4393)

(declare-fun e!91485 () Unit!4393)

(assert (=> d!43683 (= lt!73413 e!91485)))

(declare-fun c!26315 () Bool)

(assert (=> d!43683 (= c!26315 lt!73414)))

(assert (=> d!43683 (= lt!73414 (containsKey!178 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(assert (=> d!43683 (= (contains!910 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73021) lt!73415)))

(declare-fun b!140330 () Bool)

(declare-fun lt!73412 () Unit!4393)

(assert (=> b!140330 (= e!91485 lt!73412)))

(assert (=> b!140330 (= lt!73412 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(assert (=> b!140330 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(declare-fun b!140331 () Bool)

(declare-fun Unit!4413 () Unit!4393)

(assert (=> b!140331 (= e!91485 Unit!4413)))

(declare-fun b!140332 () Bool)

(assert (=> b!140332 (= e!91486 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021)))))

(assert (= (and d!43683 c!26315) b!140330))

(assert (= (and d!43683 (not c!26315)) b!140331))

(assert (= (and d!43683 (not res!67009)) b!140332))

(declare-fun m!167207 () Bool)

(assert (=> d!43683 m!167207))

(declare-fun m!167209 () Bool)

(assert (=> b!140330 m!167209))

(declare-fun m!167211 () Bool)

(assert (=> b!140330 m!167211))

(assert (=> b!140330 m!167211))

(declare-fun m!167213 () Bool)

(assert (=> b!140330 m!167213))

(assert (=> b!140332 m!167211))

(assert (=> b!140332 m!167211))

(assert (=> b!140332 m!167213))

(assert (=> b!139836 d!43683))

(declare-fun d!43685 () Bool)

(assert (=> d!43685 (= (apply!120 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73012) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73012)))))

(declare-fun bs!5837 () Bool)

(assert (= bs!5837 d!43685))

(declare-fun m!167215 () Bool)

(assert (=> bs!5837 m!167215))

(assert (=> bs!5837 m!167215))

(declare-fun m!167217 () Bool)

(assert (=> bs!5837 m!167217))

(assert (=> b!139836 d!43685))

(declare-fun d!43687 () Bool)

(assert (=> d!43687 (isDefined!128 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun lt!73418 () Unit!4393)

(declare-fun choose!871 (List!1739 (_ BitVec 64)) Unit!4393)

(assert (=> d!43687 (= lt!73418 (choose!871 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!91489 () Bool)

(assert (=> d!43687 e!91489))

(declare-fun res!67012 () Bool)

(assert (=> d!43687 (=> (not res!67012) (not e!91489))))

(declare-fun isStrictlySorted!320 (List!1739) Bool)

(assert (=> d!43687 (= res!67012 (isStrictlySorted!320 (toList!871 lt!72917)))))

(assert (=> d!43687 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73418)))

(declare-fun b!140335 () Bool)

(assert (=> b!140335 (= e!91489 (containsKey!178 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43687 res!67012) b!140335))

(assert (=> d!43687 m!166407))

(assert (=> d!43687 m!166609))

(assert (=> d!43687 m!166609))

(assert (=> d!43687 m!166611))

(assert (=> d!43687 m!166407))

(declare-fun m!167219 () Bool)

(assert (=> d!43687 m!167219))

(declare-fun m!167221 () Bool)

(assert (=> d!43687 m!167221))

(assert (=> b!140335 m!166407))

(assert (=> b!140335 m!166605))

(assert (=> b!139862 d!43687))

(declare-fun d!43689 () Bool)

(declare-fun isEmpty!422 (Option!180) Bool)

(assert (=> d!43689 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun bs!5838 () Bool)

(assert (= bs!5838 d!43689))

(assert (=> bs!5838 m!166609))

(declare-fun m!167223 () Bool)

(assert (=> bs!5838 m!167223))

(assert (=> b!139862 d!43689))

(declare-fun b!140347 () Bool)

(declare-fun e!91495 () Option!180)

(assert (=> b!140347 (= e!91495 None!178)))

(declare-fun b!140345 () Bool)

(declare-fun e!91494 () Option!180)

(assert (=> b!140345 (= e!91494 e!91495)))

(declare-fun c!26321 () Bool)

(assert (=> b!140345 (= c!26321 (and ((_ is Cons!1735) (toList!871 lt!72917)) (not (= (_1!1339 (h!2342 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!140344 () Bool)

(assert (=> b!140344 (= e!91494 (Some!179 (_2!1339 (h!2342 (toList!871 lt!72917)))))))

(declare-fun d!43691 () Bool)

(declare-fun c!26320 () Bool)

(assert (=> d!43691 (= c!26320 (and ((_ is Cons!1735) (toList!871 lt!72917)) (= (_1!1339 (h!2342 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43691 (= (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91494)))

(declare-fun b!140346 () Bool)

(assert (=> b!140346 (= e!91495 (getValueByKey!174 (t!6314 (toList!871 lt!72917)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43691 c!26320) b!140344))

(assert (= (and d!43691 (not c!26320)) b!140345))

(assert (= (and b!140345 c!26321) b!140346))

(assert (= (and b!140345 (not c!26321)) b!140347))

(assert (=> b!140346 m!166407))

(declare-fun m!167225 () Bool)

(assert (=> b!140346 m!167225))

(assert (=> b!139862 d!43691))

(declare-fun d!43693 () Bool)

(assert (=> d!43693 (= (apply!120 lt!73003 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1528 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5839 () Bool)

(assert (= bs!5839 d!43693))

(assert (=> bs!5839 m!166533))

(assert (=> bs!5839 m!166905))

(assert (=> bs!5839 m!166905))

(declare-fun m!167227 () Bool)

(assert (=> bs!5839 m!167227))

(assert (=> b!139834 d!43693))

(declare-fun d!43695 () Bool)

(declare-fun c!26322 () Bool)

(assert (=> d!43695 (= c!26322 ((_ is ValueCellFull!1121) (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91496 () V!3553)

(assert (=> d!43695 (= (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91496)))

(declare-fun b!140348 () Bool)

(assert (=> b!140348 (= e!91496 (get!1526 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140349 () Bool)

(assert (=> b!140349 (= e!91496 (get!1527 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43695 c!26322) b!140348))

(assert (= (and d!43695 (not c!26322)) b!140349))

(assert (=> b!140348 m!166545))

(assert (=> b!140348 m!166425))

(declare-fun m!167229 () Bool)

(assert (=> b!140348 m!167229))

(assert (=> b!140349 m!166545))

(assert (=> b!140349 m!166425))

(declare-fun m!167231 () Bool)

(assert (=> b!140349 m!167231))

(assert (=> b!139834 d!43695))

(assert (=> b!139864 d!43689))

(assert (=> b!139864 d!43691))

(declare-fun b!140350 () Bool)

(declare-fun e!91498 () Bool)

(assert (=> b!140350 (= e!91498 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4845 () Bool)

(declare-fun mapRes!4845 () Bool)

(declare-fun tp!11577 () Bool)

(assert (=> mapNonEmpty!4845 (= mapRes!4845 (and tp!11577 e!91498))))

(declare-fun mapValue!4845 () ValueCell!1121)

(declare-fun mapRest!4845 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4845 () (_ BitVec 32))

(assert (=> mapNonEmpty!4845 (= mapRest!4843 (store mapRest!4845 mapKey!4845 mapValue!4845))))

(declare-fun b!140351 () Bool)

(declare-fun e!91497 () Bool)

(assert (=> b!140351 (= e!91497 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4845 () Bool)

(assert (=> mapIsEmpty!4845 mapRes!4845))

(declare-fun condMapEmpty!4845 () Bool)

(declare-fun mapDefault!4845 () ValueCell!1121)

(assert (=> mapNonEmpty!4843 (= condMapEmpty!4845 (= mapRest!4843 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4845)))))

(assert (=> mapNonEmpty!4843 (= tp!11575 (and e!91497 mapRes!4845))))

(assert (= (and mapNonEmpty!4843 condMapEmpty!4845) mapIsEmpty!4845))

(assert (= (and mapNonEmpty!4843 (not condMapEmpty!4845)) mapNonEmpty!4845))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1121) mapValue!4845)) b!140350))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1121) mapDefault!4845)) b!140351))

(declare-fun m!167233 () Bool)

(assert (=> mapNonEmpty!4845 m!167233))

(declare-fun b!140352 () Bool)

(declare-fun e!91500 () Bool)

(assert (=> b!140352 (= e!91500 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4846 () Bool)

(declare-fun mapRes!4846 () Bool)

(declare-fun tp!11578 () Bool)

(assert (=> mapNonEmpty!4846 (= mapRes!4846 (and tp!11578 e!91500))))

(declare-fun mapRest!4846 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4846 () (_ BitVec 32))

(declare-fun mapValue!4846 () ValueCell!1121)

(assert (=> mapNonEmpty!4846 (= mapRest!4844 (store mapRest!4846 mapKey!4846 mapValue!4846))))

(declare-fun b!140353 () Bool)

(declare-fun e!91499 () Bool)

(assert (=> b!140353 (= e!91499 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4846 () Bool)

(assert (=> mapIsEmpty!4846 mapRes!4846))

(declare-fun condMapEmpty!4846 () Bool)

(declare-fun mapDefault!4846 () ValueCell!1121)

(assert (=> mapNonEmpty!4844 (= condMapEmpty!4846 (= mapRest!4844 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4846)))))

(assert (=> mapNonEmpty!4844 (= tp!11576 (and e!91499 mapRes!4846))))

(assert (= (and mapNonEmpty!4844 condMapEmpty!4846) mapIsEmpty!4846))

(assert (= (and mapNonEmpty!4844 (not condMapEmpty!4846)) mapNonEmpty!4846))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1121) mapValue!4846)) b!140352))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1121) mapDefault!4846)) b!140353))

(declare-fun m!167235 () Bool)

(assert (=> mapNonEmpty!4846 m!167235))

(declare-fun b_lambda!6257 () Bool)

(assert (= b_lambda!6255 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6257)))

(declare-fun b_lambda!6259 () Bool)

(assert (= b_lambda!6253 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6259)))

(declare-fun b_lambda!6261 () Bool)

(assert (= b_lambda!6249 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6261)))

(declare-fun b_lambda!6263 () Bool)

(assert (= b_lambda!6251 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6263)))

(declare-fun b_lambda!6265 () Bool)

(assert (= b_lambda!6247 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6265)))

(check-sat (not b!140314) (not b!140285) (not d!43635) (not d!43641) (not d!43673) (not b!140103) (not d!43613) (not b!140220) (not bm!15552) (not bm!15543) (not b!140152) (not b!140012) (not b!140332) (not b!140308) (not bm!15541) (not b!140189) (not b!140284) (not b!140151) (not d!43571) (not b!140035) (not b!140221) (not d!43653) (not b!140076) (not d!43645) (not bm!15533) (not b!140068) (not b!140323) (not d!43625) (not bm!15518) (not b!140310) (not b!140275) (not bm!15532) (not b!140181) (not b!140027) (not d!43621) (not d!43679) (not bm!15510) (not bm!15526) (not b!140111) (not b!140225) (not b!140270) (not mapNonEmpty!4845) (not d!43601) (not b!140009) (not d!43665) (not d!43681) (not b_lambda!6263) (not bm!15514) (not bm!15558) (not bm!15553) (not b!140192) (not d!43639) (not b_lambda!6241) (not b!140227) (not b!140330) (not d!43623) (not b!140188) (not b!140104) (not b!140283) (not bm!15522) b_and!8739 (not d!43683) (not b!140061) (not b_next!3027) (not b!140306) (not d!43629) (not b!140024) (not b!140318) (not d!43647) (not bm!15516) (not bm!15523) (not b!140282) (not b!140031) (not b!140119) (not b!140315) (not b!140154) (not b!140267) (not b!140007) (not d!43593) (not b!140183) (not b!140296) (not b!140052) (not d!43685) (not b!140317) (not b!140067) (not d!43595) (not b_lambda!6257) (not mapNonEmpty!4846) (not d!43573) (not b!140313) (not b!140329) (not d!43619) (not b!140019) (not d!43583) (not b!140107) (not b!140041) (not b!140135) (not b!140042) (not d!43591) (not b!140217) (not b!140312) (not b!140272) (not d!43661) (not bm!15554) (not d!43671) (not b!140139) (not bm!15528) (not b!140092) (not b!140346) (not d!43615) (not bm!15513) (not d!43575) (not b!140049) (not b_next!3025) (not d!43581) (not b!140053) (not b!140026) (not b_lambda!6245) (not b!140324) (not b!140100) (not b!140335) (not d!43611) (not b!140048) (not bm!15542) (not b!140015) (not d!43669) (not b!140115) (not d!43651) (not b!140219) (not d!43657) (not b!140348) b_and!8737 (not b!140228) (not bm!15536) (not d!43693) (not b!140082) (not b!140271) (not b!140179) (not d!43687) (not b!140190) (not b!140274) tp_is_empty!2929 (not b!140316) (not d!43589) (not b!140051) (not b!140226) (not d!43655) (not b!140060) (not bm!15521) (not b!140099) (not b!140223) (not bm!15531) (not b!140328) (not b!140064) (not d!43663) (not b!140144) (not bm!15515) (not d!43689) (not b!140138) (not d!43607) (not b!140065) (not b!140055) (not b!140023) (not d!43609) (not b!140295) (not b_lambda!6265) (not b!140117) (not d!43675) (not b!140229) (not d!43577) (not d!43659) (not d!43677) (not d!43667) (not b!140180) (not b_lambda!6261) (not b!140020) (not b!140106) (not b!140072) (not b!140349) (not b!140182) (not b_lambda!6259) (not d!43631))
(check-sat b_and!8737 b_and!8739 (not b_next!3025) (not b_next!3027))
(get-model)

(assert (=> d!43595 d!43541))

(declare-fun d!43697 () Bool)

(declare-fun res!67013 () Bool)

(declare-fun e!91501 () Bool)

(assert (=> d!43697 (=> res!67013 e!91501)))

(assert (=> d!43697 (= res!67013 (and ((_ is Cons!1735) (toList!871 lt!73003)) (= (_1!1339 (h!2342 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43697 (= (containsKey!178 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000) e!91501)))

(declare-fun b!140354 () Bool)

(declare-fun e!91502 () Bool)

(assert (=> b!140354 (= e!91501 e!91502)))

(declare-fun res!67014 () Bool)

(assert (=> b!140354 (=> (not res!67014) (not e!91502))))

(assert (=> b!140354 (= res!67014 (and (or (not ((_ is Cons!1735) (toList!871 lt!73003))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73003)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140355 () Bool)

(assert (=> b!140355 (= e!91502 (containsKey!178 (t!6314 (toList!871 lt!73003)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43697 (not res!67013)) b!140354))

(assert (= (and b!140354 res!67014) b!140355))

(declare-fun m!167237 () Bool)

(assert (=> b!140355 m!167237))

(assert (=> d!43593 d!43697))

(declare-fun d!43699 () Bool)

(assert (=> d!43699 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140052 d!43699))

(declare-fun d!43701 () Bool)

(declare-fun e!91503 () Bool)

(assert (=> d!43701 e!91503))

(declare-fun res!67016 () Bool)

(assert (=> d!43701 (=> (not res!67016) (not e!91503))))

(declare-fun lt!73421 () ListLongMap!1711)

(assert (=> d!43701 (= res!67016 (contains!910 lt!73421 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!73422 () List!1739)

(assert (=> d!43701 (= lt!73421 (ListLongMap!1712 lt!73422))))

(declare-fun lt!73419 () Unit!4393)

(declare-fun lt!73420 () Unit!4393)

(assert (=> d!43701 (= lt!73419 lt!73420)))

(assert (=> d!43701 (= (getValueByKey!174 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43701 (= lt!73420 (lemmaContainsTupThenGetReturnValue!91 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43701 (= lt!73422 (insertStrictlySorted!94 (toList!871 call!15514) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!43701 (= (+!167 call!15514 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73421)))

(declare-fun b!140356 () Bool)

(declare-fun res!67015 () Bool)

(assert (=> b!140356 (=> (not res!67015) (not e!91503))))

(assert (=> b!140356 (= res!67015 (= (getValueByKey!174 (toList!871 lt!73421) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!140357 () Bool)

(assert (=> b!140357 (= e!91503 (contains!914 (toList!871 lt!73421) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!43701 res!67016) b!140356))

(assert (= (and b!140356 res!67015) b!140357))

(declare-fun m!167239 () Bool)

(assert (=> d!43701 m!167239))

(declare-fun m!167241 () Bool)

(assert (=> d!43701 m!167241))

(declare-fun m!167243 () Bool)

(assert (=> d!43701 m!167243))

(declare-fun m!167245 () Bool)

(assert (=> d!43701 m!167245))

(declare-fun m!167247 () Bool)

(assert (=> b!140356 m!167247))

(declare-fun m!167249 () Bool)

(assert (=> b!140357 m!167249))

(assert (=> b!140027 d!43701))

(declare-fun d!43703 () Bool)

(declare-fun e!91505 () Bool)

(assert (=> d!43703 e!91505))

(declare-fun res!67017 () Bool)

(assert (=> d!43703 (=> res!67017 e!91505)))

(declare-fun lt!73426 () Bool)

(assert (=> d!43703 (= res!67017 (not lt!73426))))

(declare-fun lt!73425 () Bool)

(assert (=> d!43703 (= lt!73426 lt!73425)))

(declare-fun lt!73424 () Unit!4393)

(declare-fun e!91504 () Unit!4393)

(assert (=> d!43703 (= lt!73424 e!91504)))

(declare-fun c!26323 () Bool)

(assert (=> d!43703 (= c!26323 lt!73425)))

(assert (=> d!43703 (= lt!73425 (containsKey!178 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43703 (= (contains!910 lt!73266 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73426)))

(declare-fun b!140358 () Bool)

(declare-fun lt!73423 () Unit!4393)

(assert (=> b!140358 (= e!91504 lt!73423)))

(assert (=> b!140358 (= lt!73423 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140358 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140359 () Bool)

(declare-fun Unit!4414 () Unit!4393)

(assert (=> b!140359 (= e!91504 Unit!4414)))

(declare-fun b!140360 () Bool)

(assert (=> b!140360 (= e!91505 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43703 c!26323) b!140358))

(assert (= (and d!43703 (not c!26323)) b!140359))

(assert (= (and d!43703 (not res!67017)) b!140360))

(declare-fun m!167251 () Bool)

(assert (=> d!43703 m!167251))

(declare-fun m!167253 () Bool)

(assert (=> b!140358 m!167253))

(declare-fun m!167255 () Bool)

(assert (=> b!140358 m!167255))

(assert (=> b!140358 m!167255))

(declare-fun m!167257 () Bool)

(assert (=> b!140358 m!167257))

(assert (=> b!140360 m!167255))

(assert (=> b!140360 m!167255))

(assert (=> b!140360 m!167257))

(assert (=> b!140181 d!43703))

(declare-fun d!43705 () Bool)

(assert (=> d!43705 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!73427 () Unit!4393)

(assert (=> d!43705 (= lt!73427 (choose!871 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91506 () Bool)

(assert (=> d!43705 e!91506))

(declare-fun res!67018 () Bool)

(assert (=> d!43705 (=> (not res!67018) (not e!91506))))

(assert (=> d!43705 (= res!67018 (isStrictlySorted!320 (toList!871 lt!73003)))))

(assert (=> d!43705 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73427)))

(declare-fun b!140361 () Bool)

(assert (=> b!140361 (= e!91506 (containsKey!178 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43705 res!67018) b!140361))

(assert (=> d!43705 m!166533))

(assert (=> d!43705 m!166905))

(assert (=> d!43705 m!166905))

(assert (=> d!43705 m!166907))

(assert (=> d!43705 m!166533))

(declare-fun m!167259 () Bool)

(assert (=> d!43705 m!167259))

(declare-fun m!167261 () Bool)

(assert (=> d!43705 m!167261))

(assert (=> b!140361 m!166533))

(assert (=> b!140361 m!166901))

(assert (=> b!140117 d!43705))

(declare-fun d!43707 () Bool)

(assert (=> d!43707 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5840 () Bool)

(assert (= bs!5840 d!43707))

(assert (=> bs!5840 m!166905))

(declare-fun m!167263 () Bool)

(assert (=> bs!5840 m!167263))

(assert (=> b!140117 d!43707))

(declare-fun b!140365 () Bool)

(declare-fun e!91508 () Option!180)

(assert (=> b!140365 (= e!91508 None!178)))

(declare-fun b!140363 () Bool)

(declare-fun e!91507 () Option!180)

(assert (=> b!140363 (= e!91507 e!91508)))

(declare-fun c!26325 () Bool)

(assert (=> b!140363 (= c!26325 (and ((_ is Cons!1735) (toList!871 lt!73003)) (not (= (_1!1339 (h!2342 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!140362 () Bool)

(assert (=> b!140362 (= e!91507 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73003)))))))

(declare-fun d!43709 () Bool)

(declare-fun c!26324 () Bool)

(assert (=> d!43709 (= c!26324 (and ((_ is Cons!1735) (toList!871 lt!73003)) (= (_1!1339 (h!2342 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43709 (= (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91507)))

(declare-fun b!140364 () Bool)

(assert (=> b!140364 (= e!91508 (getValueByKey!174 (t!6314 (toList!871 lt!73003)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43709 c!26324) b!140362))

(assert (= (and d!43709 (not c!26324)) b!140363))

(assert (= (and b!140363 c!26325) b!140364))

(assert (= (and b!140363 (not c!26325)) b!140365))

(assert (=> b!140364 m!166533))

(declare-fun m!167265 () Bool)

(assert (=> b!140364 m!167265))

(assert (=> b!140117 d!43709))

(declare-fun b!140378 () Bool)

(declare-fun e!91516 () SeekEntryResult!282)

(assert (=> b!140378 (= e!91516 Undefined!282)))

(declare-fun b!140379 () Bool)

(declare-fun c!26332 () Bool)

(declare-fun lt!73432 () (_ BitVec 64))

(assert (=> b!140379 (= c!26332 (= lt!73432 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91517 () SeekEntryResult!282)

(declare-fun e!91515 () SeekEntryResult!282)

(assert (=> b!140379 (= e!91517 e!91515)))

(declare-fun b!140380 () Bool)

(assert (=> b!140380 (= e!91516 e!91517)))

(declare-fun c!26334 () Bool)

(assert (=> b!140380 (= c!26334 (= lt!73432 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140381 () Bool)

(assert (=> b!140381 (= e!91517 (Found!282 (index!3293 lt!73228)))))

(declare-fun d!43711 () Bool)

(declare-fun lt!73433 () SeekEntryResult!282)

(assert (=> d!43711 (and (or ((_ is Undefined!282) lt!73433) (not ((_ is Found!282) lt!73433)) (and (bvsge (index!3292 lt!73433) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73433) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73433) ((_ is Found!282) lt!73433) (not ((_ is MissingVacant!282) lt!73433)) (not (= (index!3294 lt!73433) (index!3293 lt!73228))) (and (bvsge (index!3294 lt!73433) #b00000000000000000000000000000000) (bvslt (index!3294 lt!73433) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73433) (ite ((_ is Found!282) lt!73433) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73433)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (and ((_ is MissingVacant!282) lt!73433) (= (index!3294 lt!73433) (index!3293 lt!73228)) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73433)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!43711 (= lt!73433 e!91516)))

(declare-fun c!26333 () Bool)

(assert (=> d!43711 (= c!26333 (bvsge (x!16138 lt!73228) #b01111111111111111111111111111110))))

(assert (=> d!43711 (= lt!73432 (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73228)))))

(assert (=> d!43711 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43711 (= (seekKeyOrZeroReturnVacant!0 (x!16138 lt!73228) (index!3293 lt!73228) (index!3293 lt!73228) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!73433)))

(declare-fun b!140382 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!140382 (= e!91515 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16138 lt!73228) #b00000000000000000000000000000001) (nextIndex!0 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16)) (index!3293 lt!73228) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!140383 () Bool)

(assert (=> b!140383 (= e!91515 (MissingVacant!282 (index!3293 lt!73228)))))

(assert (= (and d!43711 c!26333) b!140378))

(assert (= (and d!43711 (not c!26333)) b!140380))

(assert (= (and b!140380 c!26334) b!140381))

(assert (= (and b!140380 (not c!26334)) b!140379))

(assert (= (and b!140379 c!26332) b!140383))

(assert (= (and b!140379 (not c!26332)) b!140382))

(declare-fun m!167267 () Bool)

(assert (=> d!43711 m!167267))

(declare-fun m!167269 () Bool)

(assert (=> d!43711 m!167269))

(assert (=> d!43711 m!166921))

(assert (=> d!43711 m!166687))

(declare-fun m!167271 () Bool)

(assert (=> b!140382 m!167271))

(assert (=> b!140382 m!167271))

(assert (=> b!140382 m!166407))

(declare-fun m!167273 () Bool)

(assert (=> b!140382 m!167273))

(assert (=> b!140135 d!43711))

(declare-fun d!43713 () Bool)

(declare-fun e!91518 () Bool)

(assert (=> d!43713 e!91518))

(declare-fun res!67020 () Bool)

(assert (=> d!43713 (=> (not res!67020) (not e!91518))))

(declare-fun lt!73436 () ListLongMap!1711)

(assert (=> d!43713 (= res!67020 (contains!910 lt!73436 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73437 () List!1739)

(assert (=> d!43713 (= lt!73436 (ListLongMap!1712 lt!73437))))

(declare-fun lt!73434 () Unit!4393)

(declare-fun lt!73435 () Unit!4393)

(assert (=> d!43713 (= lt!73434 lt!73435)))

(assert (=> d!43713 (= (getValueByKey!174 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43713 (= lt!73435 (lemmaContainsTupThenGetReturnValue!91 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43713 (= lt!73437 (insertStrictlySorted!94 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43713 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73436)))

(declare-fun b!140384 () Bool)

(declare-fun res!67019 () Bool)

(assert (=> b!140384 (=> (not res!67019) (not e!91518))))

(assert (=> b!140384 (= res!67019 (= (getValueByKey!174 (toList!871 lt!73436) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140385 () Bool)

(assert (=> b!140385 (= e!91518 (contains!914 (toList!871 lt!73436) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43713 res!67020) b!140384))

(assert (= (and b!140384 res!67019) b!140385))

(declare-fun m!167275 () Bool)

(assert (=> d!43713 m!167275))

(declare-fun m!167277 () Bool)

(assert (=> d!43713 m!167277))

(declare-fun m!167279 () Bool)

(assert (=> d!43713 m!167279))

(declare-fun m!167281 () Bool)

(assert (=> d!43713 m!167281))

(declare-fun m!167283 () Bool)

(assert (=> b!140384 m!167283))

(declare-fun m!167285 () Bool)

(assert (=> b!140385 m!167285))

(assert (=> d!43589 d!43713))

(declare-fun d!43715 () Bool)

(assert (=> d!43715 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!43715 true))

(declare-fun _$8!124 () Unit!4393)

(assert (=> d!43715 (= (choose!865 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) _$8!124)))

(declare-fun bs!5841 () Bool)

(assert (= bs!5841 d!43715))

(assert (=> bs!5841 m!166541))

(assert (=> bs!5841 m!166541))

(assert (=> bs!5841 m!166773))

(assert (=> bs!5841 m!166427))

(assert (=> bs!5841 m!166775))

(assert (=> d!43589 d!43715))

(assert (=> d!43589 d!43601))

(declare-fun bm!15559 () Bool)

(declare-fun call!15562 () ListLongMap!1711)

(declare-fun call!15564 () ListLongMap!1711)

(assert (=> bm!15559 (= call!15562 call!15564)))

(declare-fun bm!15560 () Bool)

(declare-fun call!15567 () Bool)

(declare-fun lt!73441 () ListLongMap!1711)

(assert (=> bm!15560 (= call!15567 (contains!910 lt!73441 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140387 () Bool)

(declare-fun e!91526 () Bool)

(assert (=> b!140387 (= e!91526 (not call!15567))))

(declare-fun b!140388 () Bool)

(declare-fun e!91524 () ListLongMap!1711)

(assert (=> b!140388 (= e!91524 call!15562)))

(declare-fun e!91523 () Bool)

(declare-fun b!140389 () Bool)

(assert (=> b!140389 (= e!91523 (= (apply!120 lt!73441 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140390 () Bool)

(declare-fun e!91528 () Bool)

(assert (=> b!140390 (= e!91528 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140391 () Bool)

(declare-fun e!91529 () Bool)

(declare-fun e!91522 () Bool)

(assert (=> b!140391 (= e!91529 e!91522)))

(declare-fun c!26337 () Bool)

(assert (=> b!140391 (= c!26337 (not (= (bvand lt!73111 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140392 () Bool)

(declare-fun res!67022 () Bool)

(assert (=> b!140392 (=> (not res!67022) (not e!91529))))

(declare-fun e!91525 () Bool)

(assert (=> b!140392 (= res!67022 e!91525)))

(declare-fun res!67025 () Bool)

(assert (=> b!140392 (=> res!67025 e!91525)))

(assert (=> b!140392 (= res!67025 (not e!91528))))

(declare-fun res!67028 () Bool)

(assert (=> b!140392 (=> (not res!67028) (not e!91528))))

(assert (=> b!140392 (= res!67028 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15561 () Bool)

(declare-fun call!15568 () ListLongMap!1711)

(declare-fun call!15565 () ListLongMap!1711)

(assert (=> bm!15561 (= call!15568 call!15565)))

(declare-fun b!140393 () Bool)

(declare-fun e!91520 () Bool)

(assert (=> b!140393 (= e!91520 (= (apply!120 lt!73441 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140394 () Bool)

(declare-fun e!91521 () Bool)

(assert (=> b!140394 (= e!91521 (= (apply!120 lt!73441 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140394 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 newMap!16))))))

(assert (=> b!140394 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140395 () Bool)

(declare-fun e!91531 () ListLongMap!1711)

(assert (=> b!140395 (= e!91531 e!91524)))

(declare-fun c!26339 () Bool)

(assert (=> b!140395 (= c!26339 (and (not (= (bvand lt!73111 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!73111 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140396 () Bool)

(declare-fun e!91519 () Unit!4393)

(declare-fun lt!73457 () Unit!4393)

(assert (=> b!140396 (= e!91519 lt!73457)))

(declare-fun lt!73453 () ListLongMap!1711)

(assert (=> b!140396 (= lt!73453 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73442 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73442 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73459 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73459 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73438 () Unit!4393)

(assert (=> b!140396 (= lt!73438 (addStillContains!96 lt!73453 lt!73442 (zeroValue!2789 newMap!16) lt!73459))))

(assert (=> b!140396 (contains!910 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))) lt!73459)))

(declare-fun lt!73440 () Unit!4393)

(assert (=> b!140396 (= lt!73440 lt!73438)))

(declare-fun lt!73443 () ListLongMap!1711)

(assert (=> b!140396 (= lt!73443 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73455 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73455 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73450 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73450 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73451 () Unit!4393)

(assert (=> b!140396 (= lt!73451 (addApplyDifferent!96 lt!73443 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73450))))

(assert (=> b!140396 (= (apply!120 (+!167 lt!73443 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73450) (apply!120 lt!73443 lt!73450))))

(declare-fun lt!73456 () Unit!4393)

(assert (=> b!140396 (= lt!73456 lt!73451)))

(declare-fun lt!73439 () ListLongMap!1711)

(assert (=> b!140396 (= lt!73439 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73448 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73448 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73458 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73458 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73447 () Unit!4393)

(assert (=> b!140396 (= lt!73447 (addApplyDifferent!96 lt!73439 lt!73448 (zeroValue!2789 newMap!16) lt!73458))))

(assert (=> b!140396 (= (apply!120 (+!167 lt!73439 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))) lt!73458) (apply!120 lt!73439 lt!73458))))

(declare-fun lt!73444 () Unit!4393)

(assert (=> b!140396 (= lt!73444 lt!73447)))

(declare-fun lt!73454 () ListLongMap!1711)

(assert (=> b!140396 (= lt!73454 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73452 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73452 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73449 () (_ BitVec 64))

(assert (=> b!140396 (= lt!73449 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140396 (= lt!73457 (addApplyDifferent!96 lt!73454 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73449))))

(assert (=> b!140396 (= (apply!120 (+!167 lt!73454 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73449) (apply!120 lt!73454 lt!73449))))

(declare-fun d!43717 () Bool)

(assert (=> d!43717 e!91529))

(declare-fun res!67027 () Bool)

(assert (=> d!43717 (=> (not res!67027) (not e!91529))))

(assert (=> d!43717 (= res!67027 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73445 () ListLongMap!1711)

(assert (=> d!43717 (= lt!73441 lt!73445)))

(declare-fun lt!73446 () Unit!4393)

(assert (=> d!43717 (= lt!73446 e!91519)))

(declare-fun c!26335 () Bool)

(declare-fun e!91530 () Bool)

(assert (=> d!43717 (= c!26335 e!91530)))

(declare-fun res!67024 () Bool)

(assert (=> d!43717 (=> (not res!67024) (not e!91530))))

(assert (=> d!43717 (= res!67024 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43717 (= lt!73445 e!91531)))

(declare-fun c!26336 () Bool)

(assert (=> d!43717 (= c!26336 (and (not (= (bvand lt!73111 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!73111 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43717 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43717 (= (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73441)))

(declare-fun b!140386 () Bool)

(declare-fun e!91527 () ListLongMap!1711)

(declare-fun call!15563 () ListLongMap!1711)

(assert (=> b!140386 (= e!91527 call!15563)))

(declare-fun b!140397 () Bool)

(assert (=> b!140397 (= e!91531 (+!167 call!15564 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140398 () Bool)

(assert (=> b!140398 (= e!91526 e!91520)))

(declare-fun res!67023 () Bool)

(assert (=> b!140398 (= res!67023 call!15567)))

(assert (=> b!140398 (=> (not res!67023) (not e!91520))))

(declare-fun bm!15562 () Bool)

(assert (=> bm!15562 (= call!15563 call!15568)))

(declare-fun b!140399 () Bool)

(declare-fun res!67021 () Bool)

(assert (=> b!140399 (=> (not res!67021) (not e!91529))))

(assert (=> b!140399 (= res!67021 e!91526)))

(declare-fun c!26340 () Bool)

(assert (=> b!140399 (= c!26340 (not (= (bvand lt!73111 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140400 () Bool)

(declare-fun c!26338 () Bool)

(assert (=> b!140400 (= c!26338 (and (not (= (bvand lt!73111 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!73111 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140400 (= e!91524 e!91527)))

(declare-fun b!140401 () Bool)

(assert (=> b!140401 (= e!91530 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15563 () Bool)

(declare-fun call!15566 () Bool)

(assert (=> bm!15563 (= call!15566 (contains!910 lt!73441 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140402 () Bool)

(assert (=> b!140402 (= e!91527 call!15562)))

(declare-fun b!140403 () Bool)

(assert (=> b!140403 (= e!91522 (not call!15566))))

(declare-fun bm!15564 () Bool)

(assert (=> bm!15564 (= call!15565 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140404 () Bool)

(assert (=> b!140404 (= e!91522 e!91523)))

(declare-fun res!67026 () Bool)

(assert (=> b!140404 (= res!67026 call!15566)))

(assert (=> b!140404 (=> (not res!67026) (not e!91523))))

(declare-fun b!140405 () Bool)

(assert (=> b!140405 (= e!91525 e!91521)))

(declare-fun res!67029 () Bool)

(assert (=> b!140405 (=> (not res!67029) (not e!91521))))

(assert (=> b!140405 (= res!67029 (contains!910 lt!73441 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140405 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140406 () Bool)

(declare-fun Unit!4415 () Unit!4393)

(assert (=> b!140406 (= e!91519 Unit!4415)))

(declare-fun bm!15565 () Bool)

(assert (=> bm!15565 (= call!15564 (+!167 (ite c!26336 call!15565 (ite c!26339 call!15568 call!15563)) (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43717 c!26336) b!140397))

(assert (= (and d!43717 (not c!26336)) b!140395))

(assert (= (and b!140395 c!26339) b!140388))

(assert (= (and b!140395 (not c!26339)) b!140400))

(assert (= (and b!140400 c!26338) b!140402))

(assert (= (and b!140400 (not c!26338)) b!140386))

(assert (= (or b!140402 b!140386) bm!15562))

(assert (= (or b!140388 bm!15562) bm!15561))

(assert (= (or b!140388 b!140402) bm!15559))

(assert (= (or b!140397 bm!15561) bm!15564))

(assert (= (or b!140397 bm!15559) bm!15565))

(assert (= (and d!43717 res!67024) b!140401))

(assert (= (and d!43717 c!26335) b!140396))

(assert (= (and d!43717 (not c!26335)) b!140406))

(assert (= (and d!43717 res!67027) b!140392))

(assert (= (and b!140392 res!67028) b!140390))

(assert (= (and b!140392 (not res!67025)) b!140405))

(assert (= (and b!140405 res!67029) b!140394))

(assert (= (and b!140392 res!67022) b!140399))

(assert (= (and b!140399 c!26340) b!140398))

(assert (= (and b!140399 (not c!26340)) b!140387))

(assert (= (and b!140398 res!67023) b!140393))

(assert (= (or b!140398 b!140387) bm!15560))

(assert (= (and b!140399 res!67021) b!140391))

(assert (= (and b!140391 c!26337) b!140404))

(assert (= (and b!140391 (not c!26337)) b!140403))

(assert (= (and b!140404 res!67026) b!140389))

(assert (= (or b!140404 b!140403) bm!15563))

(declare-fun b_lambda!6267 () Bool)

(assert (=> (not b_lambda!6267) (not b!140394)))

(assert (=> b!140394 t!6328))

(declare-fun b_and!8741 () Bool)

(assert (= b_and!8737 (and (=> t!6328 result!4187) b_and!8741)))

(assert (=> b!140394 t!6330))

(declare-fun b_and!8743 () Bool)

(assert (= b_and!8739 (and (=> t!6330 result!4189) b_and!8743)))

(assert (=> b!140401 m!166699))

(assert (=> b!140401 m!166699))

(assert (=> b!140401 m!166701))

(assert (=> b!140394 m!166703))

(assert (=> b!140394 m!166795))

(assert (=> b!140394 m!166703))

(assert (=> b!140394 m!166797))

(assert (=> b!140394 m!166699))

(assert (=> b!140394 m!166699))

(declare-fun m!167287 () Bool)

(assert (=> b!140394 m!167287))

(assert (=> b!140394 m!166795))

(declare-fun m!167289 () Bool)

(assert (=> bm!15560 m!167289))

(assert (=> b!140405 m!166699))

(assert (=> b!140405 m!166699))

(declare-fun m!167291 () Bool)

(assert (=> b!140405 m!167291))

(declare-fun m!167293 () Bool)

(assert (=> b!140389 m!167293))

(assert (=> d!43717 m!166687))

(declare-fun m!167295 () Bool)

(assert (=> bm!15563 m!167295))

(declare-fun m!167297 () Bool)

(assert (=> bm!15565 m!167297))

(assert (=> bm!15564 m!166427))

(declare-fun m!167299 () Bool)

(assert (=> bm!15564 m!167299))

(declare-fun m!167301 () Bool)

(assert (=> b!140393 m!167301))

(declare-fun m!167303 () Bool)

(assert (=> b!140396 m!167303))

(declare-fun m!167305 () Bool)

(assert (=> b!140396 m!167305))

(declare-fun m!167307 () Bool)

(assert (=> b!140396 m!167307))

(declare-fun m!167309 () Bool)

(assert (=> b!140396 m!167309))

(assert (=> b!140396 m!166427))

(declare-fun m!167311 () Bool)

(assert (=> b!140396 m!167311))

(declare-fun m!167313 () Bool)

(assert (=> b!140396 m!167313))

(assert (=> b!140396 m!167309))

(declare-fun m!167315 () Bool)

(assert (=> b!140396 m!167315))

(declare-fun m!167317 () Bool)

(assert (=> b!140396 m!167317))

(declare-fun m!167319 () Bool)

(assert (=> b!140396 m!167319))

(declare-fun m!167321 () Bool)

(assert (=> b!140396 m!167321))

(declare-fun m!167323 () Bool)

(assert (=> b!140396 m!167323))

(assert (=> b!140396 m!167313))

(declare-fun m!167325 () Bool)

(assert (=> b!140396 m!167325))

(declare-fun m!167327 () Bool)

(assert (=> b!140396 m!167327))

(assert (=> b!140396 m!167317))

(assert (=> b!140396 m!167321))

(assert (=> b!140396 m!166699))

(declare-fun m!167329 () Bool)

(assert (=> b!140396 m!167329))

(assert (=> b!140396 m!166427))

(assert (=> b!140396 m!167299))

(assert (=> b!140396 m!166427))

(declare-fun m!167331 () Bool)

(assert (=> b!140396 m!167331))

(assert (=> b!140390 m!166699))

(assert (=> b!140390 m!166699))

(assert (=> b!140390 m!166701))

(declare-fun m!167333 () Bool)

(assert (=> b!140397 m!167333))

(assert (=> d!43589 d!43717))

(declare-fun d!43719 () Bool)

(assert (=> d!43719 (= (validMask!0 (mask!7278 newMap!16)) (and (or (= (mask!7278 newMap!16) #b00000000000000000000000000000111) (= (mask!7278 newMap!16) #b00000000000000000000000000001111) (= (mask!7278 newMap!16) #b00000000000000000000000000011111) (= (mask!7278 newMap!16) #b00000000000000000000000000111111) (= (mask!7278 newMap!16) #b00000000000000000000000001111111) (= (mask!7278 newMap!16) #b00000000000000000000000011111111) (= (mask!7278 newMap!16) #b00000000000000000000000111111111) (= (mask!7278 newMap!16) #b00000000000000000000001111111111) (= (mask!7278 newMap!16) #b00000000000000000000011111111111) (= (mask!7278 newMap!16) #b00000000000000000000111111111111) (= (mask!7278 newMap!16) #b00000000000000000001111111111111) (= (mask!7278 newMap!16) #b00000000000000000011111111111111) (= (mask!7278 newMap!16) #b00000000000000000111111111111111) (= (mask!7278 newMap!16) #b00000000000000001111111111111111) (= (mask!7278 newMap!16) #b00000000000000011111111111111111) (= (mask!7278 newMap!16) #b00000000000000111111111111111111) (= (mask!7278 newMap!16) #b00000000000001111111111111111111) (= (mask!7278 newMap!16) #b00000000000011111111111111111111) (= (mask!7278 newMap!16) #b00000000000111111111111111111111) (= (mask!7278 newMap!16) #b00000000001111111111111111111111) (= (mask!7278 newMap!16) #b00000000011111111111111111111111) (= (mask!7278 newMap!16) #b00000000111111111111111111111111) (= (mask!7278 newMap!16) #b00000001111111111111111111111111) (= (mask!7278 newMap!16) #b00000011111111111111111111111111) (= (mask!7278 newMap!16) #b00000111111111111111111111111111) (= (mask!7278 newMap!16) #b00001111111111111111111111111111) (= (mask!7278 newMap!16) #b00011111111111111111111111111111) (= (mask!7278 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7278 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!43589 d!43719))

(declare-fun d!43721 () Bool)

(assert (=> d!43721 (= (map!1424 (_2!1340 lt!73342)) (getCurrentListMap!534 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))))))

(declare-fun bs!5842 () Bool)

(assert (= bs!5842 d!43721))

(declare-fun m!167335 () Bool)

(assert (=> bs!5842 m!167335))

(assert (=> b!140275 d!43721))

(declare-fun d!43723 () Bool)

(declare-fun e!91532 () Bool)

(assert (=> d!43723 e!91532))

(declare-fun res!67031 () Bool)

(assert (=> d!43723 (=> (not res!67031) (not e!91532))))

(declare-fun lt!73462 () ListLongMap!1711)

(assert (=> d!43723 (= res!67031 (contains!910 lt!73462 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73463 () List!1739)

(assert (=> d!43723 (= lt!73462 (ListLongMap!1712 lt!73463))))

(declare-fun lt!73460 () Unit!4393)

(declare-fun lt!73461 () Unit!4393)

(assert (=> d!43723 (= lt!73460 lt!73461)))

(assert (=> d!43723 (= (getValueByKey!174 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43723 (= lt!73461 (lemmaContainsTupThenGetReturnValue!91 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43723 (= lt!73463 (insertStrictlySorted!94 (toList!871 (map!1424 newMap!16)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43723 (= (+!167 (map!1424 newMap!16) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73462)))

(declare-fun b!140407 () Bool)

(declare-fun res!67030 () Bool)

(assert (=> b!140407 (=> (not res!67030) (not e!91532))))

(assert (=> b!140407 (= res!67030 (= (getValueByKey!174 (toList!871 lt!73462) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140408 () Bool)

(assert (=> b!140408 (= e!91532 (contains!914 (toList!871 lt!73462) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43723 res!67031) b!140407))

(assert (= (and b!140407 res!67030) b!140408))

(declare-fun m!167337 () Bool)

(assert (=> d!43723 m!167337))

(declare-fun m!167339 () Bool)

(assert (=> d!43723 m!167339))

(declare-fun m!167341 () Bool)

(assert (=> d!43723 m!167341))

(declare-fun m!167343 () Bool)

(assert (=> d!43723 m!167343))

(declare-fun m!167345 () Bool)

(assert (=> b!140407 m!167345))

(declare-fun m!167347 () Bool)

(assert (=> b!140408 m!167347))

(assert (=> b!140275 d!43723))

(assert (=> b!140275 d!43557))

(declare-fun d!43725 () Bool)

(declare-fun res!67032 () Bool)

(declare-fun e!91533 () Bool)

(assert (=> d!43725 (=> res!67032 e!91533)))

(assert (=> d!43725 (= res!67032 (and ((_ is Cons!1735) (toList!871 e!91274)) (= (_1!1339 (h!2342 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43725 (= (containsKey!178 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91533)))

(declare-fun b!140409 () Bool)

(declare-fun e!91534 () Bool)

(assert (=> b!140409 (= e!91533 e!91534)))

(declare-fun res!67033 () Bool)

(assert (=> b!140409 (=> (not res!67033) (not e!91534))))

(assert (=> b!140409 (= res!67033 (and (or (not ((_ is Cons!1735) (toList!871 e!91274))) (bvsle (_1!1339 (h!2342 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (toList!871 e!91274)) (bvslt (_1!1339 (h!2342 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!140410 () Bool)

(assert (=> b!140410 (= e!91534 (containsKey!178 (t!6314 (toList!871 e!91274)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43725 (not res!67032)) b!140409))

(assert (= (and b!140409 res!67033) b!140410))

(assert (=> b!140410 m!166407))

(declare-fun m!167349 () Bool)

(assert (=> b!140410 m!167349))

(assert (=> d!43623 d!43725))

(assert (=> d!43687 d!43689))

(assert (=> d!43687 d!43691))

(declare-fun d!43727 () Bool)

(assert (=> d!43727 (isDefined!128 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43727 true))

(declare-fun _$12!412 () Unit!4393)

(assert (=> d!43727 (= (choose!871 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) _$12!412)))

(declare-fun bs!5843 () Bool)

(assert (= bs!5843 d!43727))

(assert (=> bs!5843 m!166407))

(assert (=> bs!5843 m!166609))

(assert (=> bs!5843 m!166609))

(assert (=> bs!5843 m!166611))

(assert (=> d!43687 d!43727))

(declare-fun d!43729 () Bool)

(declare-fun res!67038 () Bool)

(declare-fun e!91539 () Bool)

(assert (=> d!43729 (=> res!67038 e!91539)))

(assert (=> d!43729 (= res!67038 (or ((_ is Nil!1736) (toList!871 lt!72917)) ((_ is Nil!1736) (t!6314 (toList!871 lt!72917)))))))

(assert (=> d!43729 (= (isStrictlySorted!320 (toList!871 lt!72917)) e!91539)))

(declare-fun b!140415 () Bool)

(declare-fun e!91540 () Bool)

(assert (=> b!140415 (= e!91539 e!91540)))

(declare-fun res!67039 () Bool)

(assert (=> b!140415 (=> (not res!67039) (not e!91540))))

(assert (=> b!140415 (= res!67039 (bvslt (_1!1339 (h!2342 (toList!871 lt!72917))) (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917))))))))

(declare-fun b!140416 () Bool)

(assert (=> b!140416 (= e!91540 (isStrictlySorted!320 (t!6314 (toList!871 lt!72917))))))

(assert (= (and d!43729 (not res!67038)) b!140415))

(assert (= (and b!140415 res!67039) b!140416))

(declare-fun m!167351 () Bool)

(assert (=> b!140416 m!167351))

(assert (=> d!43687 d!43729))

(declare-fun lt!73466 () Bool)

(declare-fun d!43731 () Bool)

(declare-fun content!138 (List!1739) (InoxSet tuple2!2656))

(assert (=> d!43731 (= lt!73466 (select (content!138 (toList!871 lt!73410)) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91546 () Bool)

(assert (=> d!43731 (= lt!73466 e!91546)))

(declare-fun res!67044 () Bool)

(assert (=> d!43731 (=> (not res!67044) (not e!91546))))

(assert (=> d!43731 (= res!67044 ((_ is Cons!1735) (toList!871 lt!73410)))))

(assert (=> d!43731 (= (contains!914 (toList!871 lt!73410) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73466)))

(declare-fun b!140421 () Bool)

(declare-fun e!91545 () Bool)

(assert (=> b!140421 (= e!91546 e!91545)))

(declare-fun res!67045 () Bool)

(assert (=> b!140421 (=> res!67045 e!91545)))

(assert (=> b!140421 (= res!67045 (= (h!2342 (toList!871 lt!73410)) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!140422 () Bool)

(assert (=> b!140422 (= e!91545 (contains!914 (t!6314 (toList!871 lt!73410)) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43731 res!67044) b!140421))

(assert (= (and b!140421 (not res!67045)) b!140422))

(declare-fun m!167353 () Bool)

(assert (=> d!43731 m!167353))

(declare-fun m!167355 () Bool)

(assert (=> d!43731 m!167355))

(declare-fun m!167357 () Bool)

(assert (=> b!140422 m!167357))

(assert (=> b!140329 d!43731))

(declare-fun d!43733 () Bool)

(declare-fun e!91548 () Bool)

(assert (=> d!43733 e!91548))

(declare-fun res!67046 () Bool)

(assert (=> d!43733 (=> res!67046 e!91548)))

(declare-fun lt!73470 () Bool)

(assert (=> d!43733 (= res!67046 (not lt!73470))))

(declare-fun lt!73469 () Bool)

(assert (=> d!43733 (= lt!73470 lt!73469)))

(declare-fun lt!73468 () Unit!4393)

(declare-fun e!91547 () Unit!4393)

(assert (=> d!43733 (= lt!73468 e!91547)))

(declare-fun c!26341 () Bool)

(assert (=> d!43733 (= c!26341 lt!73469)))

(assert (=> d!43733 (= lt!73469 (containsKey!178 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43733 (= (contains!910 lt!73266 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73470)))

(declare-fun b!140423 () Bool)

(declare-fun lt!73467 () Unit!4393)

(assert (=> b!140423 (= e!91547 lt!73467)))

(assert (=> b!140423 (= lt!73467 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140423 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140424 () Bool)

(declare-fun Unit!4416 () Unit!4393)

(assert (=> b!140424 (= e!91547 Unit!4416)))

(declare-fun b!140425 () Bool)

(assert (=> b!140425 (= e!91548 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43733 c!26341) b!140423))

(assert (= (and d!43733 (not c!26341)) b!140424))

(assert (= (and d!43733 (not res!67046)) b!140425))

(declare-fun m!167359 () Bool)

(assert (=> d!43733 m!167359))

(declare-fun m!167361 () Bool)

(assert (=> b!140423 m!167361))

(declare-fun m!167363 () Bool)

(assert (=> b!140423 m!167363))

(assert (=> b!140423 m!167363))

(declare-fun m!167365 () Bool)

(assert (=> b!140423 m!167365))

(assert (=> b!140425 m!167363))

(assert (=> b!140425 m!167363))

(assert (=> b!140425 m!167365))

(assert (=> d!43625 d!43733))

(assert (=> d!43625 d!43569))

(declare-fun d!43735 () Bool)

(assert (=> d!43735 (= (apply!120 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) lt!73181) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!73181)))))

(declare-fun bs!5844 () Bool)

(assert (= bs!5844 d!43735))

(declare-fun m!167367 () Bool)

(assert (=> bs!5844 m!167367))

(assert (=> bs!5844 m!167367))

(declare-fun m!167369 () Bool)

(assert (=> bs!5844 m!167369))

(assert (=> b!140067 d!43735))

(declare-fun d!43737 () Bool)

(assert (=> d!43737 (= (apply!120 lt!73185 lt!73180) (get!1528 (getValueByKey!174 (toList!871 lt!73185) lt!73180)))))

(declare-fun bs!5845 () Bool)

(assert (= bs!5845 d!43737))

(declare-fun m!167371 () Bool)

(assert (=> bs!5845 m!167371))

(assert (=> bs!5845 m!167371))

(declare-fun m!167373 () Bool)

(assert (=> bs!5845 m!167373))

(assert (=> b!140067 d!43737))

(declare-fun d!43739 () Bool)

(assert (=> d!43739 (= (apply!120 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) lt!73181) (apply!120 lt!73174 lt!73181))))

(declare-fun lt!73471 () Unit!4393)

(assert (=> d!43739 (= lt!73471 (choose!869 lt!73174 lt!73186 (minValue!2789 newMap!16) lt!73181))))

(declare-fun e!91549 () Bool)

(assert (=> d!43739 e!91549))

(declare-fun res!67047 () Bool)

(assert (=> d!43739 (=> (not res!67047) (not e!91549))))

(assert (=> d!43739 (= res!67047 (contains!910 lt!73174 lt!73181))))

(assert (=> d!43739 (= (addApplyDifferent!96 lt!73174 lt!73186 (minValue!2789 newMap!16) lt!73181) lt!73471)))

(declare-fun b!140426 () Bool)

(assert (=> b!140426 (= e!91549 (not (= lt!73181 lt!73186)))))

(assert (= (and d!43739 res!67047) b!140426))

(assert (=> d!43739 m!166829))

(assert (=> d!43739 m!166829))

(assert (=> d!43739 m!166831))

(declare-fun m!167375 () Bool)

(assert (=> d!43739 m!167375))

(assert (=> d!43739 m!166815))

(declare-fun m!167377 () Bool)

(assert (=> d!43739 m!167377))

(assert (=> b!140067 d!43739))

(declare-fun d!43741 () Bool)

(declare-fun e!91551 () Bool)

(assert (=> d!43741 e!91551))

(declare-fun res!67048 () Bool)

(assert (=> d!43741 (=> res!67048 e!91551)))

(declare-fun lt!73475 () Bool)

(assert (=> d!43741 (= res!67048 (not lt!73475))))

(declare-fun lt!73474 () Bool)

(assert (=> d!43741 (= lt!73475 lt!73474)))

(declare-fun lt!73473 () Unit!4393)

(declare-fun e!91550 () Unit!4393)

(assert (=> d!43741 (= lt!73473 e!91550)))

(declare-fun c!26342 () Bool)

(assert (=> d!43741 (= c!26342 lt!73474)))

(assert (=> d!43741 (= lt!73474 (containsKey!178 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))

(assert (=> d!43741 (= (contains!910 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) lt!73190) lt!73475)))

(declare-fun b!140427 () Bool)

(declare-fun lt!73472 () Unit!4393)

(assert (=> b!140427 (= e!91550 lt!73472)))

(assert (=> b!140427 (= lt!73472 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))

(assert (=> b!140427 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))

(declare-fun b!140428 () Bool)

(declare-fun Unit!4417 () Unit!4393)

(assert (=> b!140428 (= e!91550 Unit!4417)))

(declare-fun b!140429 () Bool)

(assert (=> b!140429 (= e!91551 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190)))))

(assert (= (and d!43741 c!26342) b!140427))

(assert (= (and d!43741 (not c!26342)) b!140428))

(assert (= (and d!43741 (not res!67048)) b!140429))

(declare-fun m!167379 () Bool)

(assert (=> d!43741 m!167379))

(declare-fun m!167381 () Bool)

(assert (=> b!140427 m!167381))

(declare-fun m!167383 () Bool)

(assert (=> b!140427 m!167383))

(assert (=> b!140427 m!167383))

(declare-fun m!167385 () Bool)

(assert (=> b!140427 m!167385))

(assert (=> b!140429 m!167383))

(assert (=> b!140429 m!167383))

(assert (=> b!140429 m!167385))

(assert (=> b!140067 d!43741))

(declare-fun d!43743 () Bool)

(assert (=> d!43743 (= (apply!120 lt!73170 lt!73189) (get!1528 (getValueByKey!174 (toList!871 lt!73170) lt!73189)))))

(declare-fun bs!5846 () Bool)

(assert (= bs!5846 d!43743))

(declare-fun m!167387 () Bool)

(assert (=> bs!5846 m!167387))

(assert (=> bs!5846 m!167387))

(declare-fun m!167389 () Bool)

(assert (=> bs!5846 m!167389))

(assert (=> b!140067 d!43743))

(declare-fun d!43745 () Bool)

(assert (=> d!43745 (= (apply!120 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) lt!73180) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!73180)))))

(declare-fun bs!5847 () Bool)

(assert (= bs!5847 d!43745))

(declare-fun m!167391 () Bool)

(assert (=> bs!5847 m!167391))

(assert (=> bs!5847 m!167391))

(declare-fun m!167393 () Bool)

(assert (=> bs!5847 m!167393))

(assert (=> b!140067 d!43745))

(declare-fun d!43747 () Bool)

(declare-fun e!91552 () Bool)

(assert (=> d!43747 e!91552))

(declare-fun res!67050 () Bool)

(assert (=> d!43747 (=> (not res!67050) (not e!91552))))

(declare-fun lt!73478 () ListLongMap!1711)

(assert (=> d!43747 (= res!67050 (contains!910 lt!73478 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!73479 () List!1739)

(assert (=> d!43747 (= lt!73478 (ListLongMap!1712 lt!73479))))

(declare-fun lt!73476 () Unit!4393)

(declare-fun lt!73477 () Unit!4393)

(assert (=> d!43747 (= lt!73476 lt!73477)))

(assert (=> d!43747 (= (getValueByKey!174 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43747 (= lt!73477 (lemmaContainsTupThenGetReturnValue!91 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43747 (= lt!73479 (insertStrictlySorted!94 (toList!871 lt!73170) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43747 (= (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) lt!73478)))

(declare-fun b!140430 () Bool)

(declare-fun res!67049 () Bool)

(assert (=> b!140430 (=> (not res!67049) (not e!91552))))

(assert (=> b!140430 (= res!67049 (= (getValueByKey!174 (toList!871 lt!73478) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(declare-fun b!140431 () Bool)

(assert (=> b!140431 (= e!91552 (contains!914 (toList!871 lt!73478) (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))

(assert (= (and d!43747 res!67050) b!140430))

(assert (= (and b!140430 res!67049) b!140431))

(declare-fun m!167395 () Bool)

(assert (=> d!43747 m!167395))

(declare-fun m!167397 () Bool)

(assert (=> d!43747 m!167397))

(declare-fun m!167399 () Bool)

(assert (=> d!43747 m!167399))

(declare-fun m!167401 () Bool)

(assert (=> d!43747 m!167401))

(declare-fun m!167403 () Bool)

(assert (=> b!140430 m!167403))

(declare-fun m!167405 () Bool)

(assert (=> b!140431 m!167405))

(assert (=> b!140067 d!43747))

(declare-fun d!43749 () Bool)

(declare-fun e!91553 () Bool)

(assert (=> d!43749 e!91553))

(declare-fun res!67052 () Bool)

(assert (=> d!43749 (=> (not res!67052) (not e!91553))))

(declare-fun lt!73482 () ListLongMap!1711)

(assert (=> d!43749 (= res!67052 (contains!910 lt!73482 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun lt!73483 () List!1739)

(assert (=> d!43749 (= lt!73482 (ListLongMap!1712 lt!73483))))

(declare-fun lt!73480 () Unit!4393)

(declare-fun lt!73481 () Unit!4393)

(assert (=> d!43749 (= lt!73480 lt!73481)))

(assert (=> d!43749 (= (getValueByKey!174 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (=> d!43749 (= lt!73481 (lemmaContainsTupThenGetReturnValue!91 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (=> d!43749 (= lt!73483 (insertStrictlySorted!94 (toList!871 lt!73185) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (=> d!43749 (= (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) lt!73482)))

(declare-fun b!140432 () Bool)

(declare-fun res!67051 () Bool)

(assert (=> b!140432 (=> (not res!67051) (not e!91553))))

(assert (=> b!140432 (= res!67051 (= (getValueByKey!174 (toList!871 lt!73482) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(declare-fun b!140433 () Bool)

(assert (=> b!140433 (= e!91553 (contains!914 (toList!871 lt!73482) (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))

(assert (= (and d!43749 res!67052) b!140432))

(assert (= (and b!140432 res!67051) b!140433))

(declare-fun m!167407 () Bool)

(assert (=> d!43749 m!167407))

(declare-fun m!167409 () Bool)

(assert (=> d!43749 m!167409))

(declare-fun m!167411 () Bool)

(assert (=> d!43749 m!167411))

(declare-fun m!167413 () Bool)

(assert (=> d!43749 m!167413))

(declare-fun m!167415 () Bool)

(assert (=> b!140432 m!167415))

(declare-fun m!167417 () Bool)

(assert (=> b!140433 m!167417))

(assert (=> b!140067 d!43749))

(declare-fun d!43751 () Bool)

(assert (=> d!43751 (= (apply!120 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) lt!73189) (apply!120 lt!73170 lt!73189))))

(declare-fun lt!73484 () Unit!4393)

(assert (=> d!43751 (= lt!73484 (choose!869 lt!73170 lt!73179 (zeroValue!2789 newMap!16) lt!73189))))

(declare-fun e!91554 () Bool)

(assert (=> d!43751 e!91554))

(declare-fun res!67053 () Bool)

(assert (=> d!43751 (=> (not res!67053) (not e!91554))))

(assert (=> d!43751 (= res!67053 (contains!910 lt!73170 lt!73189))))

(assert (=> d!43751 (= (addApplyDifferent!96 lt!73170 lt!73179 (zeroValue!2789 newMap!16) lt!73189) lt!73484)))

(declare-fun b!140434 () Bool)

(assert (=> b!140434 (= e!91554 (not (= lt!73189 lt!73179)))))

(assert (= (and d!43751 res!67053) b!140434))

(assert (=> d!43751 m!166833))

(assert (=> d!43751 m!166833))

(assert (=> d!43751 m!166835))

(declare-fun m!167419 () Bool)

(assert (=> d!43751 m!167419))

(assert (=> d!43751 m!166839))

(declare-fun m!167421 () Bool)

(assert (=> d!43751 m!167421))

(assert (=> b!140067 d!43751))

(declare-fun d!43753 () Bool)

(declare-fun e!91555 () Bool)

(assert (=> d!43753 e!91555))

(declare-fun res!67055 () Bool)

(assert (=> d!43753 (=> (not res!67055) (not e!91555))))

(declare-fun lt!73487 () ListLongMap!1711)

(assert (=> d!43753 (= res!67055 (contains!910 lt!73487 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun lt!73488 () List!1739)

(assert (=> d!43753 (= lt!73487 (ListLongMap!1712 lt!73488))))

(declare-fun lt!73485 () Unit!4393)

(declare-fun lt!73486 () Unit!4393)

(assert (=> d!43753 (= lt!73485 lt!73486)))

(assert (=> d!43753 (= (getValueByKey!174 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (=> d!43753 (= lt!73486 (lemmaContainsTupThenGetReturnValue!91 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (=> d!43753 (= lt!73488 (insertStrictlySorted!94 (toList!871 lt!73174) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (=> d!43753 (= (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) lt!73487)))

(declare-fun b!140435 () Bool)

(declare-fun res!67054 () Bool)

(assert (=> b!140435 (=> (not res!67054) (not e!91555))))

(assert (=> b!140435 (= res!67054 (= (getValueByKey!174 (toList!871 lt!73487) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(declare-fun b!140436 () Bool)

(assert (=> b!140436 (= e!91555 (contains!914 (toList!871 lt!73487) (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))

(assert (= (and d!43753 res!67055) b!140435))

(assert (= (and b!140435 res!67054) b!140436))

(declare-fun m!167423 () Bool)

(assert (=> d!43753 m!167423))

(declare-fun m!167425 () Bool)

(assert (=> d!43753 m!167425))

(declare-fun m!167427 () Bool)

(assert (=> d!43753 m!167427))

(declare-fun m!167429 () Bool)

(assert (=> d!43753 m!167429))

(declare-fun m!167431 () Bool)

(assert (=> b!140435 m!167431))

(declare-fun m!167433 () Bool)

(assert (=> b!140436 m!167433))

(assert (=> b!140067 d!43753))

(declare-fun d!43755 () Bool)

(assert (=> d!43755 (= (apply!120 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) lt!73189) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!73189)))))

(declare-fun bs!5848 () Bool)

(assert (= bs!5848 d!43755))

(declare-fun m!167435 () Bool)

(assert (=> bs!5848 m!167435))

(assert (=> bs!5848 m!167435))

(declare-fun m!167437 () Bool)

(assert (=> bs!5848 m!167437))

(assert (=> b!140067 d!43755))

(declare-fun d!43757 () Bool)

(assert (=> d!43757 (contains!910 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) lt!73190)))

(declare-fun lt!73489 () Unit!4393)

(assert (=> d!43757 (= lt!73489 (choose!870 lt!73184 lt!73173 (zeroValue!2789 newMap!16) lt!73190))))

(assert (=> d!43757 (contains!910 lt!73184 lt!73190)))

(assert (=> d!43757 (= (addStillContains!96 lt!73184 lt!73173 (zeroValue!2789 newMap!16) lt!73190) lt!73489)))

(declare-fun bs!5849 () Bool)

(assert (= bs!5849 d!43757))

(assert (=> bs!5849 m!166821))

(assert (=> bs!5849 m!166821))

(assert (=> bs!5849 m!166827))

(declare-fun m!167439 () Bool)

(assert (=> bs!5849 m!167439))

(declare-fun m!167441 () Bool)

(assert (=> bs!5849 m!167441))

(assert (=> b!140067 d!43757))

(declare-fun d!43759 () Bool)

(declare-fun e!91556 () Bool)

(assert (=> d!43759 e!91556))

(declare-fun res!67057 () Bool)

(assert (=> d!43759 (=> (not res!67057) (not e!91556))))

(declare-fun lt!73492 () ListLongMap!1711)

(assert (=> d!43759 (= res!67057 (contains!910 lt!73492 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!73493 () List!1739)

(assert (=> d!43759 (= lt!73492 (ListLongMap!1712 lt!73493))))

(declare-fun lt!73490 () Unit!4393)

(declare-fun lt!73491 () Unit!4393)

(assert (=> d!43759 (= lt!73490 lt!73491)))

(assert (=> d!43759 (= (getValueByKey!174 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43759 (= lt!73491 (lemmaContainsTupThenGetReturnValue!91 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43759 (= lt!73493 (insertStrictlySorted!94 (toList!871 lt!73184) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43759 (= (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) lt!73492)))

(declare-fun b!140437 () Bool)

(declare-fun res!67056 () Bool)

(assert (=> b!140437 (=> (not res!67056) (not e!91556))))

(assert (=> b!140437 (= res!67056 (= (getValueByKey!174 (toList!871 lt!73492) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(declare-fun b!140438 () Bool)

(assert (=> b!140438 (= e!91556 (contains!914 (toList!871 lt!73492) (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))

(assert (= (and d!43759 res!67057) b!140437))

(assert (= (and b!140437 res!67056) b!140438))

(declare-fun m!167443 () Bool)

(assert (=> d!43759 m!167443))

(declare-fun m!167445 () Bool)

(assert (=> d!43759 m!167445))

(declare-fun m!167447 () Bool)

(assert (=> d!43759 m!167447))

(declare-fun m!167449 () Bool)

(assert (=> d!43759 m!167449))

(declare-fun m!167451 () Bool)

(assert (=> b!140437 m!167451))

(declare-fun m!167453 () Bool)

(assert (=> b!140438 m!167453))

(assert (=> b!140067 d!43759))

(declare-fun d!43761 () Bool)

(assert (=> d!43761 (= (apply!120 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) lt!73180) (apply!120 lt!73185 lt!73180))))

(declare-fun lt!73494 () Unit!4393)

(assert (=> d!43761 (= lt!73494 (choose!869 lt!73185 lt!73183 (minValue!2789 newMap!16) lt!73180))))

(declare-fun e!91557 () Bool)

(assert (=> d!43761 e!91557))

(declare-fun res!67058 () Bool)

(assert (=> d!43761 (=> (not res!67058) (not e!91557))))

(assert (=> d!43761 (= res!67058 (contains!910 lt!73185 lt!73180))))

(assert (=> d!43761 (= (addApplyDifferent!96 lt!73185 lt!73183 (minValue!2789 newMap!16) lt!73180) lt!73494)))

(declare-fun b!140439 () Bool)

(assert (=> b!140439 (= e!91557 (not (= lt!73180 lt!73183)))))

(assert (= (and d!43761 res!67058) b!140439))

(assert (=> d!43761 m!166825))

(assert (=> d!43761 m!166825))

(assert (=> d!43761 m!166837))

(declare-fun m!167455 () Bool)

(assert (=> d!43761 m!167455))

(assert (=> d!43761 m!166817))

(declare-fun m!167457 () Bool)

(assert (=> d!43761 m!167457))

(assert (=> b!140067 d!43761))

(declare-fun d!43763 () Bool)

(assert (=> d!43763 (= (apply!120 lt!73174 lt!73181) (get!1528 (getValueByKey!174 (toList!871 lt!73174) lt!73181)))))

(declare-fun bs!5850 () Bool)

(assert (= bs!5850 d!43763))

(declare-fun m!167459 () Bool)

(assert (=> bs!5850 m!167459))

(assert (=> bs!5850 m!167459))

(declare-fun m!167461 () Bool)

(assert (=> bs!5850 m!167461))

(assert (=> b!140067 d!43763))

(declare-fun b!140440 () Bool)

(assert (=> b!140440 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!140440 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 newMap!16))))))

(declare-fun e!91558 () Bool)

(declare-fun lt!73501 () ListLongMap!1711)

(assert (=> b!140440 (= e!91558 (= (apply!120 lt!73501 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140441 () Bool)

(declare-fun e!91560 () Bool)

(assert (=> b!140441 (= e!91560 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140441 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!140442 () Bool)

(declare-fun res!67060 () Bool)

(declare-fun e!91561 () Bool)

(assert (=> b!140442 (=> (not res!67060) (not e!91561))))

(assert (=> b!140442 (= res!67060 (not (contains!910 lt!73501 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140443 () Bool)

(declare-fun e!91564 () Bool)

(assert (=> b!140443 (= e!91564 e!91558)))

(assert (=> b!140443 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67062 () Bool)

(assert (=> b!140443 (= res!67062 (contains!910 lt!73501 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140443 (=> (not res!67062) (not e!91558))))

(declare-fun b!140444 () Bool)

(declare-fun lt!73497 () Unit!4393)

(declare-fun lt!73495 () Unit!4393)

(assert (=> b!140444 (= lt!73497 lt!73495)))

(declare-fun lt!73496 () (_ BitVec 64))

(declare-fun lt!73500 () (_ BitVec 64))

(declare-fun lt!73499 () V!3553)

(declare-fun lt!73498 () ListLongMap!1711)

(assert (=> b!140444 (not (contains!910 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499)) lt!73496))))

(assert (=> b!140444 (= lt!73495 (addStillNotContains!65 lt!73498 lt!73500 lt!73499 lt!73496))))

(assert (=> b!140444 (= lt!73496 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140444 (= lt!73499 (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140444 (= lt!73500 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15569 () ListLongMap!1711)

(assert (=> b!140444 (= lt!73498 call!15569)))

(declare-fun e!91562 () ListLongMap!1711)

(assert (=> b!140444 (= e!91562 (+!167 call!15569 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140445 () Bool)

(assert (=> b!140445 (= e!91561 e!91564)))

(declare-fun c!26346 () Bool)

(assert (=> b!140445 (= c!26346 e!91560)))

(declare-fun res!67059 () Bool)

(assert (=> b!140445 (=> (not res!67059) (not e!91560))))

(assert (=> b!140445 (= res!67059 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15566 () Bool)

(assert (=> bm!15566 (= call!15569 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!140446 () Bool)

(assert (=> b!140446 (= e!91562 call!15569)))

(declare-fun b!140447 () Bool)

(declare-fun e!91559 () Bool)

(assert (=> b!140447 (= e!91564 e!91559)))

(declare-fun c!26344 () Bool)

(assert (=> b!140447 (= c!26344 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!43765 () Bool)

(assert (=> d!43765 e!91561))

(declare-fun res!67061 () Bool)

(assert (=> d!43765 (=> (not res!67061) (not e!91561))))

(assert (=> d!43765 (= res!67061 (not (contains!910 lt!73501 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91563 () ListLongMap!1711)

(assert (=> d!43765 (= lt!73501 e!91563)))

(declare-fun c!26345 () Bool)

(assert (=> d!43765 (= c!26345 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43765 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43765 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73501)))

(declare-fun b!140448 () Bool)

(assert (=> b!140448 (= e!91563 (ListLongMap!1712 Nil!1736))))

(declare-fun b!140449 () Bool)

(assert (=> b!140449 (= e!91559 (isEmpty!421 lt!73501))))

(declare-fun b!140450 () Bool)

(assert (=> b!140450 (= e!91563 e!91562)))

(declare-fun c!26343 () Bool)

(assert (=> b!140450 (= c!26343 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140451 () Bool)

(assert (=> b!140451 (= e!91559 (= lt!73501 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!43765 c!26345) b!140448))

(assert (= (and d!43765 (not c!26345)) b!140450))

(assert (= (and b!140450 c!26343) b!140444))

(assert (= (and b!140450 (not c!26343)) b!140446))

(assert (= (or b!140444 b!140446) bm!15566))

(assert (= (and d!43765 res!67061) b!140442))

(assert (= (and b!140442 res!67060) b!140445))

(assert (= (and b!140445 res!67059) b!140441))

(assert (= (and b!140445 c!26346) b!140443))

(assert (= (and b!140445 (not c!26346)) b!140447))

(assert (= (and b!140443 res!67062) b!140440))

(assert (= (and b!140447 c!26344) b!140451))

(assert (= (and b!140447 (not c!26344)) b!140449))

(declare-fun b_lambda!6269 () Bool)

(assert (=> (not b_lambda!6269) (not b!140440)))

(assert (=> b!140440 t!6328))

(declare-fun b_and!8745 () Bool)

(assert (= b_and!8741 (and (=> t!6328 result!4187) b_and!8745)))

(assert (=> b!140440 t!6330))

(declare-fun b_and!8747 () Bool)

(assert (= b_and!8743 (and (=> t!6330 result!4189) b_and!8747)))

(declare-fun b_lambda!6271 () Bool)

(assert (=> (not b_lambda!6271) (not b!140444)))

(assert (=> b!140444 t!6328))

(declare-fun b_and!8749 () Bool)

(assert (= b_and!8745 (and (=> t!6328 result!4187) b_and!8749)))

(assert (=> b!140444 t!6330))

(declare-fun b_and!8751 () Bool)

(assert (= b_and!8747 (and (=> t!6330 result!4189) b_and!8751)))

(declare-fun m!167463 () Bool)

(assert (=> d!43765 m!167463))

(assert (=> d!43765 m!166687))

(declare-fun m!167465 () Bool)

(assert (=> bm!15566 m!167465))

(declare-fun m!167467 () Bool)

(assert (=> b!140442 m!167467))

(assert (=> b!140441 m!166699))

(assert (=> b!140441 m!166699))

(assert (=> b!140441 m!166701))

(assert (=> b!140440 m!166795))

(assert (=> b!140440 m!166703))

(assert (=> b!140440 m!166797))

(assert (=> b!140440 m!166699))

(assert (=> b!140440 m!166703))

(assert (=> b!140440 m!166795))

(assert (=> b!140440 m!166699))

(declare-fun m!167469 () Bool)

(assert (=> b!140440 m!167469))

(assert (=> b!140443 m!166699))

(assert (=> b!140443 m!166699))

(declare-fun m!167471 () Bool)

(assert (=> b!140443 m!167471))

(declare-fun m!167473 () Bool)

(assert (=> b!140449 m!167473))

(assert (=> b!140450 m!166699))

(assert (=> b!140450 m!166699))

(assert (=> b!140450 m!166701))

(assert (=> b!140444 m!166795))

(assert (=> b!140444 m!166703))

(assert (=> b!140444 m!166797))

(declare-fun m!167475 () Bool)

(assert (=> b!140444 m!167475))

(assert (=> b!140444 m!166703))

(declare-fun m!167477 () Bool)

(assert (=> b!140444 m!167477))

(assert (=> b!140444 m!166795))

(declare-fun m!167479 () Bool)

(assert (=> b!140444 m!167479))

(assert (=> b!140444 m!166699))

(assert (=> b!140444 m!167475))

(declare-fun m!167481 () Bool)

(assert (=> b!140444 m!167481))

(assert (=> b!140451 m!167465))

(assert (=> b!140067 d!43765))

(declare-fun b!140452 () Bool)

(assert (=> b!140452 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> b!140452 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91565 () Bool)

(declare-fun lt!73508 () ListLongMap!1711)

(assert (=> b!140452 (= e!91565 (= (apply!120 lt!73508 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140453 () Bool)

(declare-fun e!91567 () Bool)

(assert (=> b!140453 (= e!91567 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140453 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!140454 () Bool)

(declare-fun res!67064 () Bool)

(declare-fun e!91568 () Bool)

(assert (=> b!140454 (=> (not res!67064) (not e!91568))))

(assert (=> b!140454 (= res!67064 (not (contains!910 lt!73508 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140455 () Bool)

(declare-fun e!91571 () Bool)

(assert (=> b!140455 (= e!91571 e!91565)))

(assert (=> b!140455 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun res!67066 () Bool)

(assert (=> b!140455 (= res!67066 (contains!910 lt!73508 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140455 (=> (not res!67066) (not e!91565))))

(declare-fun b!140456 () Bool)

(declare-fun lt!73504 () Unit!4393)

(declare-fun lt!73502 () Unit!4393)

(assert (=> b!140456 (= lt!73504 lt!73502)))

(declare-fun lt!73506 () V!3553)

(declare-fun lt!73505 () ListLongMap!1711)

(declare-fun lt!73507 () (_ BitVec 64))

(declare-fun lt!73503 () (_ BitVec 64))

(assert (=> b!140456 (not (contains!910 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506)) lt!73503))))

(assert (=> b!140456 (= lt!73502 (addStillNotContains!65 lt!73505 lt!73507 lt!73506 lt!73503))))

(assert (=> b!140456 (= lt!73503 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140456 (= lt!73506 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140456 (= lt!73507 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!15570 () ListLongMap!1711)

(assert (=> b!140456 (= lt!73505 call!15570)))

(declare-fun e!91569 () ListLongMap!1711)

(assert (=> b!140456 (= e!91569 (+!167 call!15570 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140457 () Bool)

(assert (=> b!140457 (= e!91568 e!91571)))

(declare-fun c!26350 () Bool)

(assert (=> b!140457 (= c!26350 e!91567)))

(declare-fun res!67063 () Bool)

(assert (=> b!140457 (=> (not res!67063) (not e!91567))))

(assert (=> b!140457 (= res!67063 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun bm!15567 () Bool)

(assert (=> bm!15567 (= call!15570 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!140458 () Bool)

(assert (=> b!140458 (= e!91569 call!15570)))

(declare-fun b!140459 () Bool)

(declare-fun e!91566 () Bool)

(assert (=> b!140459 (= e!91571 e!91566)))

(declare-fun c!26348 () Bool)

(assert (=> b!140459 (= c!26348 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun d!43767 () Bool)

(assert (=> d!43767 e!91568))

(declare-fun res!67065 () Bool)

(assert (=> d!43767 (=> (not res!67065) (not e!91568))))

(assert (=> d!43767 (= res!67065 (not (contains!910 lt!73508 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91570 () ListLongMap!1711)

(assert (=> d!43767 (= lt!73508 e!91570)))

(declare-fun c!26349 () Bool)

(assert (=> d!43767 (= c!26349 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43767 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!43767 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) lt!73508)))

(declare-fun b!140460 () Bool)

(assert (=> b!140460 (= e!91570 (ListLongMap!1712 Nil!1736))))

(declare-fun b!140461 () Bool)

(assert (=> b!140461 (= e!91566 (isEmpty!421 lt!73508))))

(declare-fun b!140462 () Bool)

(assert (=> b!140462 (= e!91570 e!91569)))

(declare-fun c!26347 () Bool)

(assert (=> b!140462 (= c!26347 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140463 () Bool)

(assert (=> b!140463 (= e!91566 (= lt!73508 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43767 c!26349) b!140460))

(assert (= (and d!43767 (not c!26349)) b!140462))

(assert (= (and b!140462 c!26347) b!140456))

(assert (= (and b!140462 (not c!26347)) b!140458))

(assert (= (or b!140456 b!140458) bm!15567))

(assert (= (and d!43767 res!67065) b!140454))

(assert (= (and b!140454 res!67064) b!140457))

(assert (= (and b!140457 res!67063) b!140453))

(assert (= (and b!140457 c!26350) b!140455))

(assert (= (and b!140457 (not c!26350)) b!140459))

(assert (= (and b!140455 res!67066) b!140452))

(assert (= (and b!140459 c!26348) b!140463))

(assert (= (and b!140459 (not c!26348)) b!140461))

(declare-fun b_lambda!6273 () Bool)

(assert (=> (not b_lambda!6273) (not b!140452)))

(assert (=> b!140452 t!6311))

(declare-fun b_and!8753 () Bool)

(assert (= b_and!8749 (and (=> t!6311 result!4167) b_and!8753)))

(assert (=> b!140452 t!6313))

(declare-fun b_and!8755 () Bool)

(assert (= b_and!8751 (and (=> t!6313 result!4171) b_and!8755)))

(declare-fun b_lambda!6275 () Bool)

(assert (=> (not b_lambda!6275) (not b!140456)))

(assert (=> b!140456 t!6311))

(declare-fun b_and!8757 () Bool)

(assert (= b_and!8753 (and (=> t!6311 result!4167) b_and!8757)))

(assert (=> b!140456 t!6313))

(declare-fun b_and!8759 () Bool)

(assert (= b_and!8755 (and (=> t!6313 result!4171) b_and!8759)))

(declare-fun m!167483 () Bool)

(assert (=> d!43767 m!167483))

(assert (=> d!43767 m!166539))

(declare-fun m!167485 () Bool)

(assert (=> bm!15567 m!167485))

(declare-fun m!167487 () Bool)

(assert (=> b!140454 m!167487))

(assert (=> b!140453 m!166979))

(assert (=> b!140453 m!166979))

(declare-fun m!167489 () Bool)

(assert (=> b!140453 m!167489))

(declare-fun m!167491 () Bool)

(assert (=> b!140452 m!167491))

(assert (=> b!140452 m!166425))

(declare-fun m!167493 () Bool)

(assert (=> b!140452 m!167493))

(assert (=> b!140452 m!166979))

(assert (=> b!140452 m!166425))

(assert (=> b!140452 m!167491))

(assert (=> b!140452 m!166979))

(declare-fun m!167495 () Bool)

(assert (=> b!140452 m!167495))

(assert (=> b!140455 m!166979))

(assert (=> b!140455 m!166979))

(declare-fun m!167497 () Bool)

(assert (=> b!140455 m!167497))

(declare-fun m!167499 () Bool)

(assert (=> b!140461 m!167499))

(assert (=> b!140462 m!166979))

(assert (=> b!140462 m!166979))

(assert (=> b!140462 m!167489))

(assert (=> b!140456 m!167491))

(assert (=> b!140456 m!166425))

(assert (=> b!140456 m!167493))

(declare-fun m!167501 () Bool)

(assert (=> b!140456 m!167501))

(assert (=> b!140456 m!166425))

(declare-fun m!167503 () Bool)

(assert (=> b!140456 m!167503))

(assert (=> b!140456 m!167491))

(declare-fun m!167505 () Bool)

(assert (=> b!140456 m!167505))

(assert (=> b!140456 m!166979))

(assert (=> b!140456 m!167501))

(declare-fun m!167507 () Bool)

(assert (=> b!140456 m!167507))

(assert (=> b!140463 m!167485))

(assert (=> bm!15536 d!43767))

(declare-fun lt!73509 () Bool)

(declare-fun d!43769 () Bool)

(assert (=> d!43769 (= lt!73509 (select (content!138 (toList!871 lt!73390)) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91573 () Bool)

(assert (=> d!43769 (= lt!73509 e!91573)))

(declare-fun res!67067 () Bool)

(assert (=> d!43769 (=> (not res!67067) (not e!91573))))

(assert (=> d!43769 (= res!67067 ((_ is Cons!1735) (toList!871 lt!73390)))))

(assert (=> d!43769 (= (contains!914 (toList!871 lt!73390) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73509)))

(declare-fun b!140464 () Bool)

(declare-fun e!91572 () Bool)

(assert (=> b!140464 (= e!91573 e!91572)))

(declare-fun res!67068 () Bool)

(assert (=> b!140464 (=> res!67068 e!91572)))

(assert (=> b!140464 (= res!67068 (= (h!2342 (toList!871 lt!73390)) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!140465 () Bool)

(assert (=> b!140465 (= e!91572 (contains!914 (t!6314 (toList!871 lt!73390)) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43769 res!67067) b!140464))

(assert (= (and b!140464 (not res!67068)) b!140465))

(declare-fun m!167509 () Bool)

(assert (=> d!43769 m!167509))

(declare-fun m!167511 () Bool)

(assert (=> d!43769 m!167511))

(declare-fun m!167513 () Bool)

(assert (=> b!140465 m!167513))

(assert (=> b!140316 d!43769))

(declare-fun d!43771 () Bool)

(assert (=> d!43771 (= (get!1527 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140349 d!43771))

(declare-fun d!43773 () Bool)

(declare-fun e!91575 () Bool)

(assert (=> d!43773 e!91575))

(declare-fun res!67069 () Bool)

(assert (=> d!43773 (=> res!67069 e!91575)))

(declare-fun lt!73513 () Bool)

(assert (=> d!43773 (= res!67069 (not lt!73513))))

(declare-fun lt!73512 () Bool)

(assert (=> d!43773 (= lt!73513 lt!73512)))

(declare-fun lt!73511 () Unit!4393)

(declare-fun e!91574 () Unit!4393)

(assert (=> d!43773 (= lt!73511 e!91574)))

(declare-fun c!26351 () Bool)

(assert (=> d!43773 (= c!26351 lt!73512)))

(assert (=> d!43773 (= lt!73512 (containsKey!178 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43773 (= (contains!910 lt!73197 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73513)))

(declare-fun b!140466 () Bool)

(declare-fun lt!73510 () Unit!4393)

(assert (=> b!140466 (= e!91574 lt!73510)))

(assert (=> b!140466 (= lt!73510 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140466 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140467 () Bool)

(declare-fun Unit!4418 () Unit!4393)

(assert (=> b!140467 (= e!91574 Unit!4418)))

(declare-fun b!140468 () Bool)

(assert (=> b!140468 (= e!91575 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43773 c!26351) b!140466))

(assert (= (and d!43773 (not c!26351)) b!140467))

(assert (= (and d!43773 (not res!67069)) b!140468))

(declare-fun m!167515 () Bool)

(assert (=> d!43773 m!167515))

(declare-fun m!167517 () Bool)

(assert (=> b!140466 m!167517))

(declare-fun m!167519 () Bool)

(assert (=> b!140466 m!167519))

(assert (=> b!140466 m!167519))

(declare-fun m!167521 () Bool)

(assert (=> b!140466 m!167521))

(assert (=> b!140468 m!167519))

(assert (=> b!140468 m!167519))

(assert (=> b!140468 m!167521))

(assert (=> bm!15531 d!43773))

(declare-fun bm!15568 () Bool)

(declare-fun call!15571 () ListLongMap!1711)

(declare-fun call!15573 () ListLongMap!1711)

(assert (=> bm!15568 (= call!15571 call!15573)))

(declare-fun bm!15569 () Bool)

(declare-fun call!15576 () Bool)

(declare-fun lt!73517 () ListLongMap!1711)

(assert (=> bm!15569 (= call!15576 (contains!910 lt!73517 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140470 () Bool)

(declare-fun e!91583 () Bool)

(assert (=> b!140470 (= e!91583 (not call!15576))))

(declare-fun b!140471 () Bool)

(declare-fun e!91581 () ListLongMap!1711)

(assert (=> b!140471 (= e!91581 call!15571)))

(declare-fun b!140472 () Bool)

(declare-fun e!91580 () Bool)

(assert (=> b!140472 (= e!91580 (= (apply!120 lt!73517 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 (_2!1340 lt!73099))))))

(declare-fun b!140473 () Bool)

(declare-fun e!91585 () Bool)

(assert (=> b!140473 (= e!91585 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!140474 () Bool)

(declare-fun e!91586 () Bool)

(declare-fun e!91579 () Bool)

(assert (=> b!140474 (= e!91586 e!91579)))

(declare-fun c!26354 () Bool)

(assert (=> b!140474 (= c!26354 (not (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140475 () Bool)

(declare-fun res!67071 () Bool)

(assert (=> b!140475 (=> (not res!67071) (not e!91586))))

(declare-fun e!91582 () Bool)

(assert (=> b!140475 (= res!67071 e!91582)))

(declare-fun res!67074 () Bool)

(assert (=> b!140475 (=> res!67074 e!91582)))

(assert (=> b!140475 (= res!67074 (not e!91585))))

(declare-fun res!67077 () Bool)

(assert (=> b!140475 (=> (not res!67077) (not e!91585))))

(assert (=> b!140475 (= res!67077 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun bm!15570 () Bool)

(declare-fun call!15577 () ListLongMap!1711)

(declare-fun call!15574 () ListLongMap!1711)

(assert (=> bm!15570 (= call!15577 call!15574)))

(declare-fun b!140476 () Bool)

(declare-fun e!91577 () Bool)

(assert (=> b!140476 (= e!91577 (= (apply!120 lt!73517 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 (_2!1340 lt!73099))))))

(declare-fun b!140477 () Bool)

(declare-fun e!91578 () Bool)

(assert (=> b!140477 (= e!91578 (= (apply!120 lt!73517 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140477 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 (_2!1340 lt!73099)))))))

(assert (=> b!140477 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun b!140478 () Bool)

(declare-fun e!91588 () ListLongMap!1711)

(assert (=> b!140478 (= e!91588 e!91581)))

(declare-fun c!26356 () Bool)

(assert (=> b!140478 (= c!26356 (and (not (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140479 () Bool)

(declare-fun e!91576 () Unit!4393)

(declare-fun lt!73533 () Unit!4393)

(assert (=> b!140479 (= e!91576 lt!73533)))

(declare-fun lt!73529 () ListLongMap!1711)

(assert (=> b!140479 (= lt!73529 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun lt!73518 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73518 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73535 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73535 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))

(declare-fun lt!73514 () Unit!4393)

(assert (=> b!140479 (= lt!73514 (addStillContains!96 lt!73529 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)) lt!73535))))

(assert (=> b!140479 (contains!910 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))) lt!73535)))

(declare-fun lt!73516 () Unit!4393)

(assert (=> b!140479 (= lt!73516 lt!73514)))

(declare-fun lt!73519 () ListLongMap!1711)

(assert (=> b!140479 (= lt!73519 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun lt!73531 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73531 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73526 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73526 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))

(declare-fun lt!73527 () Unit!4393)

(assert (=> b!140479 (= lt!73527 (addApplyDifferent!96 lt!73519 lt!73531 (minValue!2789 (_2!1340 lt!73099)) lt!73526))))

(assert (=> b!140479 (= (apply!120 (+!167 lt!73519 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))) lt!73526) (apply!120 lt!73519 lt!73526))))

(declare-fun lt!73532 () Unit!4393)

(assert (=> b!140479 (= lt!73532 lt!73527)))

(declare-fun lt!73515 () ListLongMap!1711)

(assert (=> b!140479 (= lt!73515 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun lt!73524 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73524 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73534 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73534 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))

(declare-fun lt!73523 () Unit!4393)

(assert (=> b!140479 (= lt!73523 (addApplyDifferent!96 lt!73515 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)) lt!73534))))

(assert (=> b!140479 (= (apply!120 (+!167 lt!73515 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))) lt!73534) (apply!120 lt!73515 lt!73534))))

(declare-fun lt!73520 () Unit!4393)

(assert (=> b!140479 (= lt!73520 lt!73523)))

(declare-fun lt!73530 () ListLongMap!1711)

(assert (=> b!140479 (= lt!73530 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun lt!73528 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73528 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73525 () (_ BitVec 64))

(assert (=> b!140479 (= lt!73525 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))

(assert (=> b!140479 (= lt!73533 (addApplyDifferent!96 lt!73530 lt!73528 (minValue!2789 (_2!1340 lt!73099)) lt!73525))))

(assert (=> b!140479 (= (apply!120 (+!167 lt!73530 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))) lt!73525) (apply!120 lt!73530 lt!73525))))

(declare-fun d!43775 () Bool)

(assert (=> d!43775 e!91586))

(declare-fun res!67076 () Bool)

(assert (=> d!43775 (=> (not res!67076) (not e!91586))))

(assert (=> d!43775 (= res!67076 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))))

(declare-fun lt!73521 () ListLongMap!1711)

(assert (=> d!43775 (= lt!73517 lt!73521)))

(declare-fun lt!73522 () Unit!4393)

(assert (=> d!43775 (= lt!73522 e!91576)))

(declare-fun c!26352 () Bool)

(declare-fun e!91587 () Bool)

(assert (=> d!43775 (= c!26352 e!91587)))

(declare-fun res!67073 () Bool)

(assert (=> d!43775 (=> (not res!67073) (not e!91587))))

(assert (=> d!43775 (= res!67073 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!43775 (= lt!73521 e!91588)))

(declare-fun c!26353 () Bool)

(assert (=> d!43775 (= c!26353 (and (not (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43775 (validMask!0 (mask!7278 (_2!1340 lt!73099)))))

(assert (=> d!43775 (= (getCurrentListMap!534 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))) lt!73517)))

(declare-fun b!140469 () Bool)

(declare-fun e!91584 () ListLongMap!1711)

(declare-fun call!15572 () ListLongMap!1711)

(assert (=> b!140469 (= e!91584 call!15572)))

(declare-fun b!140480 () Bool)

(assert (=> b!140480 (= e!91588 (+!167 call!15573 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))

(declare-fun b!140481 () Bool)

(assert (=> b!140481 (= e!91583 e!91577)))

(declare-fun res!67072 () Bool)

(assert (=> b!140481 (= res!67072 call!15576)))

(assert (=> b!140481 (=> (not res!67072) (not e!91577))))

(declare-fun bm!15571 () Bool)

(assert (=> bm!15571 (= call!15572 call!15577)))

(declare-fun b!140482 () Bool)

(declare-fun res!67070 () Bool)

(assert (=> b!140482 (=> (not res!67070) (not e!91586))))

(assert (=> b!140482 (= res!67070 e!91583)))

(declare-fun c!26357 () Bool)

(assert (=> b!140482 (= c!26357 (not (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140483 () Bool)

(declare-fun c!26355 () Bool)

(assert (=> b!140483 (= c!26355 (and (not (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140483 (= e!91581 e!91584)))

(declare-fun b!140484 () Bool)

(assert (=> b!140484 (= e!91587 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun bm!15572 () Bool)

(declare-fun call!15575 () Bool)

(assert (=> bm!15572 (= call!15575 (contains!910 lt!73517 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140485 () Bool)

(assert (=> b!140485 (= e!91584 call!15571)))

(declare-fun b!140486 () Bool)

(assert (=> b!140486 (= e!91579 (not call!15575))))

(declare-fun bm!15573 () Bool)

(assert (=> bm!15573 (= call!15574 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun b!140487 () Bool)

(assert (=> b!140487 (= e!91579 e!91580)))

(declare-fun res!67075 () Bool)

(assert (=> b!140487 (= res!67075 call!15575)))

(assert (=> b!140487 (=> (not res!67075) (not e!91580))))

(declare-fun b!140488 () Bool)

(assert (=> b!140488 (= e!91582 e!91578)))

(declare-fun res!67078 () Bool)

(assert (=> b!140488 (=> (not res!67078) (not e!91578))))

(assert (=> b!140488 (= res!67078 (contains!910 lt!73517 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (=> b!140488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun b!140489 () Bool)

(declare-fun Unit!4419 () Unit!4393)

(assert (=> b!140489 (= e!91576 Unit!4419)))

(declare-fun bm!15574 () Bool)

(assert (=> bm!15574 (= call!15573 (+!167 (ite c!26353 call!15574 (ite c!26356 call!15577 call!15572)) (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (= (and d!43775 c!26353) b!140480))

(assert (= (and d!43775 (not c!26353)) b!140478))

(assert (= (and b!140478 c!26356) b!140471))

(assert (= (and b!140478 (not c!26356)) b!140483))

(assert (= (and b!140483 c!26355) b!140485))

(assert (= (and b!140483 (not c!26355)) b!140469))

(assert (= (or b!140485 b!140469) bm!15571))

(assert (= (or b!140471 bm!15571) bm!15570))

(assert (= (or b!140471 b!140485) bm!15568))

(assert (= (or b!140480 bm!15570) bm!15573))

(assert (= (or b!140480 bm!15568) bm!15574))

(assert (= (and d!43775 res!67073) b!140484))

(assert (= (and d!43775 c!26352) b!140479))

(assert (= (and d!43775 (not c!26352)) b!140489))

(assert (= (and d!43775 res!67076) b!140475))

(assert (= (and b!140475 res!67077) b!140473))

(assert (= (and b!140475 (not res!67074)) b!140488))

(assert (= (and b!140488 res!67078) b!140477))

(assert (= (and b!140475 res!67071) b!140482))

(assert (= (and b!140482 c!26357) b!140481))

(assert (= (and b!140482 (not c!26357)) b!140470))

(assert (= (and b!140481 res!67072) b!140476))

(assert (= (or b!140481 b!140470) bm!15569))

(assert (= (and b!140482 res!67070) b!140474))

(assert (= (and b!140474 c!26354) b!140487))

(assert (= (and b!140474 (not c!26354)) b!140486))

(assert (= (and b!140487 res!67075) b!140472))

(assert (= (or b!140487 b!140486) bm!15572))

(declare-fun b_lambda!6277 () Bool)

(assert (=> (not b_lambda!6277) (not b!140477)))

(declare-fun t!6332 () Bool)

(declare-fun tb!2553 () Bool)

(assert (=> (and b!139651 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 (_2!1340 lt!73099))) t!6332) tb!2553))

(declare-fun result!4191 () Bool)

(assert (=> tb!2553 (= result!4191 tp_is_empty!2929)))

(assert (=> b!140477 t!6332))

(declare-fun b_and!8761 () Bool)

(assert (= b_and!8757 (and (=> t!6332 result!4191) b_and!8761)))

(declare-fun t!6334 () Bool)

(declare-fun tb!2555 () Bool)

(assert (=> (and b!139639 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (_2!1340 lt!73099))) t!6334) tb!2555))

(declare-fun result!4193 () Bool)

(assert (= result!4193 result!4191))

(assert (=> b!140477 t!6334))

(declare-fun b_and!8763 () Bool)

(assert (= b_and!8759 (and (=> t!6334 result!4193) b_and!8763)))

(declare-fun m!167523 () Bool)

(assert (=> b!140484 m!167523))

(assert (=> b!140484 m!167523))

(declare-fun m!167525 () Bool)

(assert (=> b!140484 m!167525))

(declare-fun m!167527 () Bool)

(assert (=> b!140477 m!167527))

(declare-fun m!167529 () Bool)

(assert (=> b!140477 m!167529))

(assert (=> b!140477 m!167527))

(declare-fun m!167531 () Bool)

(assert (=> b!140477 m!167531))

(assert (=> b!140477 m!167523))

(assert (=> b!140477 m!167523))

(declare-fun m!167533 () Bool)

(assert (=> b!140477 m!167533))

(assert (=> b!140477 m!167529))

(declare-fun m!167535 () Bool)

(assert (=> bm!15569 m!167535))

(assert (=> b!140488 m!167523))

(assert (=> b!140488 m!167523))

(declare-fun m!167537 () Bool)

(assert (=> b!140488 m!167537))

(declare-fun m!167539 () Bool)

(assert (=> b!140472 m!167539))

(declare-fun m!167541 () Bool)

(assert (=> d!43775 m!167541))

(declare-fun m!167543 () Bool)

(assert (=> bm!15572 m!167543))

(declare-fun m!167545 () Bool)

(assert (=> bm!15574 m!167545))

(declare-fun m!167547 () Bool)

(assert (=> bm!15573 m!167547))

(declare-fun m!167549 () Bool)

(assert (=> b!140476 m!167549))

(declare-fun m!167551 () Bool)

(assert (=> b!140479 m!167551))

(declare-fun m!167553 () Bool)

(assert (=> b!140479 m!167553))

(declare-fun m!167555 () Bool)

(assert (=> b!140479 m!167555))

(declare-fun m!167557 () Bool)

(assert (=> b!140479 m!167557))

(declare-fun m!167559 () Bool)

(assert (=> b!140479 m!167559))

(declare-fun m!167561 () Bool)

(assert (=> b!140479 m!167561))

(assert (=> b!140479 m!167557))

(declare-fun m!167563 () Bool)

(assert (=> b!140479 m!167563))

(declare-fun m!167565 () Bool)

(assert (=> b!140479 m!167565))

(declare-fun m!167567 () Bool)

(assert (=> b!140479 m!167567))

(declare-fun m!167569 () Bool)

(assert (=> b!140479 m!167569))

(declare-fun m!167571 () Bool)

(assert (=> b!140479 m!167571))

(assert (=> b!140479 m!167561))

(declare-fun m!167573 () Bool)

(assert (=> b!140479 m!167573))

(declare-fun m!167575 () Bool)

(assert (=> b!140479 m!167575))

(assert (=> b!140479 m!167565))

(assert (=> b!140479 m!167569))

(assert (=> b!140479 m!167523))

(declare-fun m!167577 () Bool)

(assert (=> b!140479 m!167577))

(assert (=> b!140479 m!167547))

(declare-fun m!167579 () Bool)

(assert (=> b!140479 m!167579))

(assert (=> b!140473 m!167523))

(assert (=> b!140473 m!167523))

(assert (=> b!140473 m!167525))

(declare-fun m!167581 () Bool)

(assert (=> b!140480 m!167581))

(assert (=> d!43571 d!43775))

(declare-fun d!43777 () Bool)

(assert (=> d!43777 (= (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021)) (not (isEmpty!422 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))))

(declare-fun bs!5851 () Bool)

(assert (= bs!5851 d!43777))

(assert (=> bs!5851 m!167211))

(declare-fun m!167583 () Bool)

(assert (=> bs!5851 m!167583))

(assert (=> b!140332 d!43777))

(declare-fun b!140493 () Bool)

(declare-fun e!91590 () Option!180)

(assert (=> b!140493 (= e!91590 None!178)))

(declare-fun b!140491 () Bool)

(declare-fun e!91589 () Option!180)

(assert (=> b!140491 (= e!91589 e!91590)))

(declare-fun c!26359 () Bool)

(assert (=> b!140491 (= c!26359 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021))))))

(declare-fun b!140490 () Bool)

(assert (=> b!140490 (= e!91589 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun c!26358 () Bool)

(declare-fun d!43779 () Bool)

(assert (=> d!43779 (= c!26358 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021)))))

(assert (=> d!43779 (= (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021) e!91589)))

(declare-fun b!140492 () Bool)

(assert (=> b!140492 (= e!91590 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73021))))

(assert (= (and d!43779 c!26358) b!140490))

(assert (= (and d!43779 (not c!26358)) b!140491))

(assert (= (and b!140491 c!26359) b!140492))

(assert (= (and b!140491 (not c!26359)) b!140493))

(declare-fun m!167585 () Bool)

(assert (=> b!140492 m!167585))

(assert (=> b!140332 d!43779))

(declare-fun d!43781 () Bool)

(assert (=> d!43781 (= (inRange!0 (index!3292 lt!73237) (mask!7278 newMap!16)) (and (bvsge (index!3292 lt!73237) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73237) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!140144 d!43781))

(assert (=> bm!15554 d!43611))

(declare-fun d!43783 () Bool)

(assert (not d!43783))

(assert (=> b!140151 d!43783))

(declare-fun d!43785 () Bool)

(declare-fun e!91592 () Bool)

(assert (=> d!43785 e!91592))

(declare-fun res!67079 () Bool)

(assert (=> d!43785 (=> res!67079 e!91592)))

(declare-fun lt!73539 () Bool)

(assert (=> d!43785 (= res!67079 (not lt!73539))))

(declare-fun lt!73538 () Bool)

(assert (=> d!43785 (= lt!73539 lt!73538)))

(declare-fun lt!73537 () Unit!4393)

(declare-fun e!91591 () Unit!4393)

(assert (=> d!43785 (= lt!73537 e!91591)))

(declare-fun c!26360 () Bool)

(assert (=> d!43785 (= c!26360 lt!73538)))

(assert (=> d!43785 (= lt!73538 (containsKey!178 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43785 (= (contains!910 lt!73197 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!73539)))

(declare-fun b!140494 () Bool)

(declare-fun lt!73536 () Unit!4393)

(assert (=> b!140494 (= e!91591 lt!73536)))

(assert (=> b!140494 (= lt!73536 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140494 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140495 () Bool)

(declare-fun Unit!4420 () Unit!4393)

(assert (=> b!140495 (= e!91591 Unit!4420)))

(declare-fun b!140496 () Bool)

(assert (=> b!140496 (= e!91592 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43785 c!26360) b!140494))

(assert (= (and d!43785 (not c!26360)) b!140495))

(assert (= (and d!43785 (not res!67079)) b!140496))

(assert (=> d!43785 m!166699))

(declare-fun m!167587 () Bool)

(assert (=> d!43785 m!167587))

(assert (=> b!140494 m!166699))

(declare-fun m!167589 () Bool)

(assert (=> b!140494 m!167589))

(assert (=> b!140494 m!166699))

(declare-fun m!167591 () Bool)

(assert (=> b!140494 m!167591))

(assert (=> b!140494 m!167591))

(declare-fun m!167593 () Bool)

(assert (=> b!140494 m!167593))

(assert (=> b!140496 m!166699))

(assert (=> b!140496 m!167591))

(assert (=> b!140496 m!167591))

(assert (=> b!140496 m!167593))

(assert (=> b!140115 d!43785))

(declare-fun d!43787 () Bool)

(declare-fun res!67080 () Bool)

(declare-fun e!91593 () Bool)

(assert (=> d!43787 (=> res!67080 e!91593)))

(assert (=> d!43787 (= res!67080 (and ((_ is Cons!1735) (toList!871 call!15490)) (= (_1!1339 (h!2342 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43787 (= (containsKey!178 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91593)))

(declare-fun b!140497 () Bool)

(declare-fun e!91594 () Bool)

(assert (=> b!140497 (= e!91593 e!91594)))

(declare-fun res!67081 () Bool)

(assert (=> b!140497 (=> (not res!67081) (not e!91594))))

(assert (=> b!140497 (= res!67081 (and (or (not ((_ is Cons!1735) (toList!871 call!15490))) (bvsle (_1!1339 (h!2342 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (toList!871 call!15490)) (bvslt (_1!1339 (h!2342 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!140498 () Bool)

(assert (=> b!140498 (= e!91594 (containsKey!178 (t!6314 (toList!871 call!15490)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43787 (not res!67080)) b!140497))

(assert (= (and b!140497 res!67081) b!140498))

(assert (=> b!140498 m!166407))

(declare-fun m!167595 () Bool)

(assert (=> b!140498 m!167595))

(assert (=> d!43651 d!43787))

(declare-fun d!43789 () Bool)

(assert (=> d!43789 (= (get!1528 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43653 d!43789))

(declare-fun b!140502 () Bool)

(declare-fun e!91596 () Option!180)

(assert (=> b!140502 (= e!91596 None!178)))

(declare-fun b!140500 () Bool)

(declare-fun e!91595 () Option!180)

(assert (=> b!140500 (= e!91595 e!91596)))

(declare-fun c!26362 () Bool)

(assert (=> b!140500 (= c!26362 (and ((_ is Cons!1735) (toList!871 lt!73003)) (not (= (_1!1339 (h!2342 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140499 () Bool)

(assert (=> b!140499 (= e!91595 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73003)))))))

(declare-fun d!43791 () Bool)

(declare-fun c!26361 () Bool)

(assert (=> d!43791 (= c!26361 (and ((_ is Cons!1735) (toList!871 lt!73003)) (= (_1!1339 (h!2342 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43791 (= (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000) e!91595)))

(declare-fun b!140501 () Bool)

(assert (=> b!140501 (= e!91596 (getValueByKey!174 (t!6314 (toList!871 lt!73003)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43791 c!26361) b!140499))

(assert (= (and d!43791 (not c!26361)) b!140500))

(assert (= (and b!140500 c!26362) b!140501))

(assert (= (and b!140500 (not c!26362)) b!140502))

(declare-fun m!167597 () Bool)

(assert (=> b!140501 m!167597))

(assert (=> d!43653 d!43791))

(declare-fun d!43793 () Bool)

(assert (=> d!43793 (= (apply!120 lt!73172 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5852 () Bool)

(assert (= bs!5852 d!43793))

(declare-fun m!167599 () Bool)

(assert (=> bs!5852 m!167599))

(assert (=> bs!5852 m!167599))

(declare-fun m!167601 () Bool)

(assert (=> bs!5852 m!167601))

(assert (=> b!140060 d!43793))

(declare-fun d!43795 () Bool)

(assert (=> d!43795 (= (content!137 Nil!1737) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!43621 d!43795))

(declare-fun d!43797 () Bool)

(declare-fun res!67082 () Bool)

(declare-fun e!91597 () Bool)

(assert (=> d!43797 (=> res!67082 e!91597)))

(assert (=> d!43797 (= res!67082 (and ((_ is Cons!1735) (toList!871 call!15492)) (= (_1!1339 (h!2342 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (=> d!43797 (= (containsKey!178 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) e!91597)))

(declare-fun b!140503 () Bool)

(declare-fun e!91598 () Bool)

(assert (=> b!140503 (= e!91597 e!91598)))

(declare-fun res!67083 () Bool)

(assert (=> b!140503 (=> (not res!67083) (not e!91598))))

(assert (=> b!140503 (= res!67083 (and (or (not ((_ is Cons!1735) (toList!871 call!15492))) (bvsle (_1!1339 (h!2342 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))) ((_ is Cons!1735) (toList!871 call!15492)) (bvslt (_1!1339 (h!2342 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(declare-fun b!140504 () Bool)

(assert (=> b!140504 (= e!91598 (containsKey!178 (t!6314 (toList!871 call!15492)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!43797 (not res!67082)) b!140503))

(assert (= (and b!140503 res!67083) b!140504))

(assert (=> b!140504 m!166633))

(declare-fun m!167603 () Bool)

(assert (=> b!140504 m!167603))

(assert (=> d!43573 d!43797))

(declare-fun d!43799 () Bool)

(assert (=> d!43799 (isDefined!128 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun lt!73540 () Unit!4393)

(assert (=> d!43799 (= lt!73540 (choose!871 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!91599 () Bool)

(assert (=> d!43799 e!91599))

(declare-fun res!67084 () Bool)

(assert (=> d!43799 (=> (not res!67084) (not e!91599))))

(assert (=> d!43799 (= res!67084 (isStrictlySorted!320 (toList!871 e!91274)))))

(assert (=> d!43799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73540)))

(declare-fun b!140505 () Bool)

(assert (=> b!140505 (= e!91599 (containsKey!178 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43799 res!67084) b!140505))

(assert (=> d!43799 m!166407))

(assert (=> d!43799 m!166955))

(assert (=> d!43799 m!166955))

(assert (=> d!43799 m!166957))

(assert (=> d!43799 m!166407))

(declare-fun m!167605 () Bool)

(assert (=> d!43799 m!167605))

(declare-fun m!167607 () Bool)

(assert (=> d!43799 m!167607))

(assert (=> b!140505 m!166407))

(assert (=> b!140505 m!166951))

(assert (=> b!140152 d!43799))

(declare-fun d!43801 () Bool)

(assert (=> d!43801 (= (isDefined!128 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun bs!5853 () Bool)

(assert (= bs!5853 d!43801))

(assert (=> bs!5853 m!166955))

(declare-fun m!167609 () Bool)

(assert (=> bs!5853 m!167609))

(assert (=> b!140152 d!43801))

(declare-fun b!140509 () Bool)

(declare-fun e!91601 () Option!180)

(assert (=> b!140509 (= e!91601 None!178)))

(declare-fun b!140507 () Bool)

(declare-fun e!91600 () Option!180)

(assert (=> b!140507 (= e!91600 e!91601)))

(declare-fun c!26364 () Bool)

(assert (=> b!140507 (= c!26364 (and ((_ is Cons!1735) (toList!871 e!91274)) (not (= (_1!1339 (h!2342 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!140506 () Bool)

(assert (=> b!140506 (= e!91600 (Some!179 (_2!1339 (h!2342 (toList!871 e!91274)))))))

(declare-fun d!43803 () Bool)

(declare-fun c!26363 () Bool)

(assert (=> d!43803 (= c!26363 (and ((_ is Cons!1735) (toList!871 e!91274)) (= (_1!1339 (h!2342 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43803 (= (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91600)))

(declare-fun b!140508 () Bool)

(assert (=> b!140508 (= e!91601 (getValueByKey!174 (t!6314 (toList!871 e!91274)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43803 c!26363) b!140506))

(assert (= (and d!43803 (not c!26363)) b!140507))

(assert (= (and b!140507 c!26364) b!140508))

(assert (= (and b!140507 (not c!26364)) b!140509))

(assert (=> b!140508 m!166407))

(declare-fun m!167611 () Bool)

(assert (=> b!140508 m!167611))

(assert (=> b!140152 d!43803))

(declare-fun d!43805 () Bool)

(assert (=> d!43805 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73541 () Unit!4393)

(assert (=> d!43805 (= lt!73541 (choose!871 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91602 () Bool)

(assert (=> d!43805 e!91602))

(declare-fun res!67085 () Bool)

(assert (=> d!43805 (=> (not res!67085) (not e!91602))))

(assert (=> d!43805 (= res!67085 (isStrictlySorted!320 (toList!871 lt!73003)))))

(assert (=> d!43805 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000) lt!73541)))

(declare-fun b!140510 () Bool)

(assert (=> b!140510 (= e!91602 (containsKey!178 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43805 res!67085) b!140510))

(assert (=> d!43805 m!166787))

(assert (=> d!43805 m!166787))

(assert (=> d!43805 m!166789))

(declare-fun m!167613 () Bool)

(assert (=> d!43805 m!167613))

(assert (=> d!43805 m!167261))

(assert (=> b!140510 m!166783))

(assert (=> b!140049 d!43805))

(declare-fun d!43807 () Bool)

(assert (=> d!43807 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5854 () Bool)

(assert (= bs!5854 d!43807))

(assert (=> bs!5854 m!166787))

(declare-fun m!167615 () Bool)

(assert (=> bs!5854 m!167615))

(assert (=> b!140049 d!43807))

(assert (=> b!140049 d!43791))

(assert (=> b!140189 d!43599))

(declare-fun b!140511 () Bool)

(assert (=> b!140511 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!140511 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089))))))

(declare-fun lt!73548 () ListLongMap!1711)

(declare-fun e!91603 () Bool)

(assert (=> b!140511 (= e!91603 (= (apply!120 lt!73548 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140512 () Bool)

(declare-fun e!91605 () Bool)

(assert (=> b!140512 (= e!91605 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140512 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!140513 () Bool)

(declare-fun res!67087 () Bool)

(declare-fun e!91606 () Bool)

(assert (=> b!140513 (=> (not res!67087) (not e!91606))))

(assert (=> b!140513 (= res!67087 (not (contains!910 lt!73548 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140514 () Bool)

(declare-fun e!91609 () Bool)

(assert (=> b!140514 (= e!91609 e!91603)))

(assert (=> b!140514 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67089 () Bool)

(assert (=> b!140514 (= res!67089 (contains!910 lt!73548 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140514 (=> (not res!67089) (not e!91603))))

(declare-fun b!140515 () Bool)

(declare-fun lt!73544 () Unit!4393)

(declare-fun lt!73542 () Unit!4393)

(assert (=> b!140515 (= lt!73544 lt!73542)))

(declare-fun lt!73543 () (_ BitVec 64))

(declare-fun lt!73546 () V!3553)

(declare-fun lt!73545 () ListLongMap!1711)

(declare-fun lt!73547 () (_ BitVec 64))

(assert (=> b!140515 (not (contains!910 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546)) lt!73543))))

(assert (=> b!140515 (= lt!73542 (addStillNotContains!65 lt!73545 lt!73547 lt!73546 lt!73543))))

(assert (=> b!140515 (= lt!73543 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140515 (= lt!73546 (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140515 (= lt!73547 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15578 () ListLongMap!1711)

(assert (=> b!140515 (= lt!73545 call!15578)))

(declare-fun e!91607 () ListLongMap!1711)

(assert (=> b!140515 (= e!91607 (+!167 call!15578 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140516 () Bool)

(assert (=> b!140516 (= e!91606 e!91609)))

(declare-fun c!26368 () Bool)

(assert (=> b!140516 (= c!26368 e!91605)))

(declare-fun res!67086 () Bool)

(assert (=> b!140516 (=> (not res!67086) (not e!91605))))

(assert (=> b!140516 (= res!67086 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15575 () Bool)

(assert (=> bm!15575 (= call!15578 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!140517 () Bool)

(assert (=> b!140517 (= e!91607 call!15578)))

(declare-fun b!140518 () Bool)

(declare-fun e!91604 () Bool)

(assert (=> b!140518 (= e!91609 e!91604)))

(declare-fun c!26366 () Bool)

(assert (=> b!140518 (= c!26366 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!43809 () Bool)

(assert (=> d!43809 e!91606))

(declare-fun res!67088 () Bool)

(assert (=> d!43809 (=> (not res!67088) (not e!91606))))

(assert (=> d!43809 (= res!67088 (not (contains!910 lt!73548 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91608 () ListLongMap!1711)

(assert (=> d!43809 (= lt!73548 e!91608)))

(declare-fun c!26367 () Bool)

(assert (=> d!43809 (= c!26367 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43809 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43809 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73548)))

(declare-fun b!140519 () Bool)

(assert (=> b!140519 (= e!91608 (ListLongMap!1712 Nil!1736))))

(declare-fun b!140520 () Bool)

(assert (=> b!140520 (= e!91604 (isEmpty!421 lt!73548))))

(declare-fun b!140521 () Bool)

(assert (=> b!140521 (= e!91608 e!91607)))

(declare-fun c!26365 () Bool)

(assert (=> b!140521 (= c!26365 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140522 () Bool)

(assert (=> b!140522 (= e!91604 (= lt!73548 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!43809 c!26367) b!140519))

(assert (= (and d!43809 (not c!26367)) b!140521))

(assert (= (and b!140521 c!26365) b!140515))

(assert (= (and b!140521 (not c!26365)) b!140517))

(assert (= (or b!140515 b!140517) bm!15575))

(assert (= (and d!43809 res!67088) b!140513))

(assert (= (and b!140513 res!67087) b!140516))

(assert (= (and b!140516 res!67086) b!140512))

(assert (= (and b!140516 c!26368) b!140514))

(assert (= (and b!140516 (not c!26368)) b!140518))

(assert (= (and b!140514 res!67089) b!140511))

(assert (= (and b!140518 c!26366) b!140522))

(assert (= (and b!140518 (not c!26366)) b!140520))

(declare-fun b_lambda!6279 () Bool)

(assert (=> (not b_lambda!6279) (not b!140511)))

(assert (=> b!140511 t!6328))

(declare-fun b_and!8765 () Bool)

(assert (= b_and!8761 (and (=> t!6328 result!4187) b_and!8765)))

(assert (=> b!140511 t!6330))

(declare-fun b_and!8767 () Bool)

(assert (= b_and!8763 (and (=> t!6330 result!4189) b_and!8767)))

(declare-fun b_lambda!6281 () Bool)

(assert (=> (not b_lambda!6281) (not b!140515)))

(assert (=> b!140515 t!6328))

(declare-fun b_and!8769 () Bool)

(assert (= b_and!8765 (and (=> t!6328 result!4187) b_and!8769)))

(assert (=> b!140515 t!6330))

(declare-fun b_and!8771 () Bool)

(assert (= b_and!8767 (and (=> t!6330 result!4189) b_and!8771)))

(declare-fun m!167617 () Bool)

(assert (=> d!43809 m!167617))

(assert (=> d!43809 m!166687))

(declare-fun m!167619 () Bool)

(assert (=> bm!15575 m!167619))

(declare-fun m!167621 () Bool)

(assert (=> b!140513 m!167621))

(assert (=> b!140512 m!166699))

(assert (=> b!140512 m!166699))

(assert (=> b!140512 m!166701))

(assert (=> b!140511 m!166705))

(assert (=> b!140511 m!166703))

(assert (=> b!140511 m!166707))

(assert (=> b!140511 m!166699))

(assert (=> b!140511 m!166703))

(assert (=> b!140511 m!166705))

(assert (=> b!140511 m!166699))

(declare-fun m!167623 () Bool)

(assert (=> b!140511 m!167623))

(assert (=> b!140514 m!166699))

(assert (=> b!140514 m!166699))

(declare-fun m!167625 () Bool)

(assert (=> b!140514 m!167625))

(declare-fun m!167627 () Bool)

(assert (=> b!140520 m!167627))

(assert (=> b!140521 m!166699))

(assert (=> b!140521 m!166699))

(assert (=> b!140521 m!166701))

(assert (=> b!140515 m!166705))

(assert (=> b!140515 m!166703))

(assert (=> b!140515 m!166707))

(declare-fun m!167629 () Bool)

(assert (=> b!140515 m!167629))

(assert (=> b!140515 m!166703))

(declare-fun m!167631 () Bool)

(assert (=> b!140515 m!167631))

(assert (=> b!140515 m!166705))

(declare-fun m!167633 () Bool)

(assert (=> b!140515 m!167633))

(assert (=> b!140515 m!166699))

(assert (=> b!140515 m!167629))

(declare-fun m!167635 () Bool)

(assert (=> b!140515 m!167635))

(assert (=> b!140522 m!167619))

(assert (=> bm!15514 d!43809))

(declare-fun d!43811 () Bool)

(declare-fun e!91611 () Bool)

(assert (=> d!43811 e!91611))

(declare-fun res!67090 () Bool)

(assert (=> d!43811 (=> res!67090 e!91611)))

(declare-fun lt!73552 () Bool)

(assert (=> d!43811 (= res!67090 (not lt!73552))))

(declare-fun lt!73551 () Bool)

(assert (=> d!43811 (= lt!73552 lt!73551)))

(declare-fun lt!73550 () Unit!4393)

(declare-fun e!91610 () Unit!4393)

(assert (=> d!43811 (= lt!73550 e!91610)))

(declare-fun c!26369 () Bool)

(assert (=> d!43811 (= c!26369 lt!73551)))

(assert (=> d!43811 (= lt!73551 (containsKey!178 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43811 (= (contains!910 lt!73401 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73552)))

(declare-fun b!140523 () Bool)

(declare-fun lt!73549 () Unit!4393)

(assert (=> b!140523 (= e!91610 lt!73549)))

(assert (=> b!140523 (= lt!73549 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> b!140523 (isDefined!128 (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140524 () Bool)

(declare-fun Unit!4421 () Unit!4393)

(assert (=> b!140524 (= e!91610 Unit!4421)))

(declare-fun b!140525 () Bool)

(assert (=> b!140525 (= e!91611 (isDefined!128 (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!43811 c!26369) b!140523))

(assert (= (and d!43811 (not c!26369)) b!140524))

(assert (= (and d!43811 (not res!67090)) b!140525))

(declare-fun m!167637 () Bool)

(assert (=> d!43811 m!167637))

(declare-fun m!167639 () Bool)

(assert (=> b!140523 m!167639))

(assert (=> b!140523 m!167163))

(assert (=> b!140523 m!167163))

(declare-fun m!167641 () Bool)

(assert (=> b!140523 m!167641))

(assert (=> b!140525 m!167163))

(assert (=> b!140525 m!167163))

(assert (=> b!140525 m!167641))

(assert (=> d!43665 d!43811))

(declare-fun b!140529 () Bool)

(declare-fun e!91613 () Option!180)

(assert (=> b!140529 (= e!91613 None!178)))

(declare-fun b!140527 () Bool)

(declare-fun e!91612 () Option!180)

(assert (=> b!140527 (= e!91612 e!91613)))

(declare-fun c!26371 () Bool)

(assert (=> b!140527 (= c!26371 (and ((_ is Cons!1735) lt!73402) (not (= (_1!1339 (h!2342 lt!73402)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140526 () Bool)

(assert (=> b!140526 (= e!91612 (Some!179 (_2!1339 (h!2342 lt!73402))))))

(declare-fun c!26370 () Bool)

(declare-fun d!43813 () Bool)

(assert (=> d!43813 (= c!26370 (and ((_ is Cons!1735) lt!73402) (= (_1!1339 (h!2342 lt!73402)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43813 (= (getValueByKey!174 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91612)))

(declare-fun b!140528 () Bool)

(assert (=> b!140528 (= e!91613 (getValueByKey!174 (t!6314 lt!73402) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!43813 c!26370) b!140526))

(assert (= (and d!43813 (not c!26370)) b!140527))

(assert (= (and b!140527 c!26371) b!140528))

(assert (= (and b!140527 (not c!26371)) b!140529))

(declare-fun m!167643 () Bool)

(assert (=> b!140528 m!167643))

(assert (=> d!43665 d!43813))

(declare-fun d!43815 () Bool)

(assert (=> d!43815 (= (getValueByKey!174 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73555 () Unit!4393)

(declare-fun choose!872 (List!1739 (_ BitVec 64) V!3553) Unit!4393)

(assert (=> d!43815 (= lt!73555 (choose!872 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!91616 () Bool)

(assert (=> d!43815 e!91616))

(declare-fun res!67095 () Bool)

(assert (=> d!43815 (=> (not res!67095) (not e!91616))))

(assert (=> d!43815 (= res!67095 (isStrictlySorted!320 lt!73402))))

(assert (=> d!43815 (= (lemmaContainsTupThenGetReturnValue!91 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73555)))

(declare-fun b!140534 () Bool)

(declare-fun res!67096 () Bool)

(assert (=> b!140534 (=> (not res!67096) (not e!91616))))

(assert (=> b!140534 (= res!67096 (containsKey!178 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140535 () Bool)

(assert (=> b!140535 (= e!91616 (contains!914 lt!73402 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!43815 res!67095) b!140534))

(assert (= (and b!140534 res!67096) b!140535))

(assert (=> d!43815 m!167157))

(declare-fun m!167645 () Bool)

(assert (=> d!43815 m!167645))

(declare-fun m!167647 () Bool)

(assert (=> d!43815 m!167647))

(declare-fun m!167649 () Bool)

(assert (=> b!140534 m!167649))

(declare-fun m!167651 () Bool)

(assert (=> b!140535 m!167651))

(assert (=> d!43665 d!43815))

(declare-fun b!140556 () Bool)

(declare-fun e!91629 () List!1739)

(declare-fun call!15587 () List!1739)

(assert (=> b!140556 (= e!91629 call!15587)))

(declare-fun b!140557 () Bool)

(declare-fun e!91627 () List!1739)

(declare-fun call!15586 () List!1739)

(assert (=> b!140557 (= e!91627 call!15586)))

(declare-fun e!91630 () Bool)

(declare-fun b!140558 () Bool)

(declare-fun lt!73558 () List!1739)

(assert (=> b!140558 (= e!91630 (contains!914 lt!73558 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91628 () List!1739)

(declare-fun c!26383 () Bool)

(declare-fun bm!15582 () Bool)

(declare-fun $colon$colon!93 (List!1739 tuple2!2656) List!1739)

(assert (=> bm!15582 (= call!15587 ($colon$colon!93 e!91628 (ite c!26383 (h!2342 (toList!871 lt!73001)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26380 () Bool)

(assert (=> bm!15582 (= c!26380 c!26383)))

(declare-fun bm!15583 () Bool)

(declare-fun call!15585 () List!1739)

(assert (=> bm!15583 (= call!15586 call!15585)))

(declare-fun b!140559 () Bool)

(declare-fun res!67101 () Bool)

(assert (=> b!140559 (=> (not res!67101) (not e!91630))))

(assert (=> b!140559 (= res!67101 (containsKey!178 lt!73558 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!43817 () Bool)

(assert (=> d!43817 e!91630))

(declare-fun res!67102 () Bool)

(assert (=> d!43817 (=> (not res!67102) (not e!91630))))

(assert (=> d!43817 (= res!67102 (isStrictlySorted!320 lt!73558))))

(assert (=> d!43817 (= lt!73558 e!91629)))

(assert (=> d!43817 (= c!26383 (and ((_ is Cons!1735) (toList!871 lt!73001)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73001))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43817 (isStrictlySorted!320 (toList!871 lt!73001))))

(assert (=> d!43817 (= (insertStrictlySorted!94 (toList!871 lt!73001) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73558)))

(declare-fun c!26382 () Bool)

(declare-fun c!26381 () Bool)

(declare-fun b!140560 () Bool)

(assert (=> b!140560 (= e!91628 (ite c!26382 (t!6314 (toList!871 lt!73001)) (ite c!26381 (Cons!1735 (h!2342 (toList!871 lt!73001)) (t!6314 (toList!871 lt!73001))) Nil!1736)))))

(declare-fun b!140561 () Bool)

(assert (=> b!140561 (= c!26381 (and ((_ is Cons!1735) (toList!871 lt!73001)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73001))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91631 () List!1739)

(assert (=> b!140561 (= e!91631 e!91627)))

(declare-fun b!140562 () Bool)

(assert (=> b!140562 (= e!91627 call!15586)))

(declare-fun b!140563 () Bool)

(assert (=> b!140563 (= e!91628 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73001)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15584 () Bool)

(assert (=> bm!15584 (= call!15585 call!15587)))

(declare-fun b!140564 () Bool)

(assert (=> b!140564 (= e!91629 e!91631)))

(assert (=> b!140564 (= c!26382 (and ((_ is Cons!1735) (toList!871 lt!73001)) (= (_1!1339 (h!2342 (toList!871 lt!73001))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140565 () Bool)

(assert (=> b!140565 (= e!91631 call!15585)))

(assert (= (and d!43817 c!26383) b!140556))

(assert (= (and d!43817 (not c!26383)) b!140564))

(assert (= (and b!140564 c!26382) b!140565))

(assert (= (and b!140564 (not c!26382)) b!140561))

(assert (= (and b!140561 c!26381) b!140557))

(assert (= (and b!140561 (not c!26381)) b!140562))

(assert (= (or b!140557 b!140562) bm!15583))

(assert (= (or b!140565 bm!15583) bm!15584))

(assert (= (or b!140556 bm!15584) bm!15582))

(assert (= (and bm!15582 c!26380) b!140563))

(assert (= (and bm!15582 (not c!26380)) b!140560))

(assert (= (and d!43817 res!67102) b!140559))

(assert (= (and b!140559 res!67101) b!140558))

(declare-fun m!167653 () Bool)

(assert (=> b!140559 m!167653))

(declare-fun m!167655 () Bool)

(assert (=> b!140563 m!167655))

(declare-fun m!167657 () Bool)

(assert (=> bm!15582 m!167657))

(declare-fun m!167659 () Bool)

(assert (=> b!140558 m!167659))

(declare-fun m!167661 () Bool)

(assert (=> d!43817 m!167661))

(declare-fun m!167663 () Bool)

(assert (=> d!43817 m!167663))

(assert (=> d!43665 d!43817))

(declare-fun d!43819 () Bool)

(declare-fun e!91633 () Bool)

(assert (=> d!43819 e!91633))

(declare-fun res!67103 () Bool)

(assert (=> d!43819 (=> res!67103 e!91633)))

(declare-fun lt!73562 () Bool)

(assert (=> d!43819 (= res!67103 (not lt!73562))))

(declare-fun lt!73561 () Bool)

(assert (=> d!43819 (= lt!73562 lt!73561)))

(declare-fun lt!73560 () Unit!4393)

(declare-fun e!91632 () Unit!4393)

(assert (=> d!43819 (= lt!73560 e!91632)))

(declare-fun c!26384 () Bool)

(assert (=> d!43819 (= c!26384 lt!73561)))

(assert (=> d!43819 (= lt!73561 (containsKey!178 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43819 (= (contains!910 lt!73128 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73562)))

(declare-fun b!140566 () Bool)

(declare-fun lt!73559 () Unit!4393)

(assert (=> b!140566 (= e!91632 lt!73559)))

(assert (=> b!140566 (= lt!73559 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140566 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140567 () Bool)

(declare-fun Unit!4422 () Unit!4393)

(assert (=> b!140567 (= e!91632 Unit!4422)))

(declare-fun b!140568 () Bool)

(assert (=> b!140568 (= e!91633 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43819 c!26384) b!140566))

(assert (= (and d!43819 (not c!26384)) b!140567))

(assert (= (and d!43819 (not res!67103)) b!140568))

(declare-fun m!167665 () Bool)

(assert (=> d!43819 m!167665))

(declare-fun m!167667 () Bool)

(assert (=> b!140566 m!167667))

(declare-fun m!167669 () Bool)

(assert (=> b!140566 m!167669))

(assert (=> b!140566 m!167669))

(declare-fun m!167671 () Bool)

(assert (=> b!140566 m!167671))

(assert (=> b!140568 m!167669))

(assert (=> b!140568 m!167669))

(assert (=> b!140568 m!167671))

(assert (=> bm!15510 d!43819))

(declare-fun b!140572 () Bool)

(declare-fun e!91635 () Option!180)

(assert (=> b!140572 (= e!91635 None!178)))

(declare-fun b!140570 () Bool)

(declare-fun e!91634 () Option!180)

(assert (=> b!140570 (= e!91634 e!91635)))

(declare-fun c!26386 () Bool)

(assert (=> b!140570 (= c!26386 (and ((_ is Cons!1735) (toList!871 lt!73401)) (not (= (_1!1339 (h!2342 (toList!871 lt!73401))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140569 () Bool)

(assert (=> b!140569 (= e!91634 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73401)))))))

(declare-fun d!43821 () Bool)

(declare-fun c!26385 () Bool)

(assert (=> d!43821 (= c!26385 (and ((_ is Cons!1735) (toList!871 lt!73401)) (= (_1!1339 (h!2342 (toList!871 lt!73401))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43821 (= (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91634)))

(declare-fun b!140571 () Bool)

(assert (=> b!140571 (= e!91635 (getValueByKey!174 (t!6314 (toList!871 lt!73401)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!43821 c!26385) b!140569))

(assert (= (and d!43821 (not c!26385)) b!140570))

(assert (= (and b!140570 c!26386) b!140571))

(assert (= (and b!140570 (not c!26386)) b!140572))

(declare-fun m!167673 () Bool)

(assert (=> b!140571 m!167673))

(assert (=> b!140323 d!43821))

(declare-fun d!43823 () Bool)

(assert (=> d!43823 (= (apply!120 lt!73128 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5855 () Bool)

(assert (= bs!5855 d!43823))

(assert (=> bs!5855 m!167669))

(assert (=> bs!5855 m!167669))

(declare-fun m!167675 () Bool)

(assert (=> bs!5855 m!167675))

(assert (=> b!140023 d!43823))

(declare-fun d!43825 () Bool)

(assert (=> d!43825 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73011)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73011)))))

(assert (=> d!43671 d!43825))

(declare-fun b!140576 () Bool)

(declare-fun e!91637 () Option!180)

(assert (=> b!140576 (= e!91637 None!178)))

(declare-fun b!140574 () Bool)

(declare-fun e!91636 () Option!180)

(assert (=> b!140574 (= e!91636 e!91637)))

(declare-fun c!26388 () Bool)

(assert (=> b!140574 (= c!26388 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73011))))))

(declare-fun b!140573 () Bool)

(assert (=> b!140573 (= e!91636 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun d!43827 () Bool)

(declare-fun c!26387 () Bool)

(assert (=> d!43827 (= c!26387 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73011)))))

(assert (=> d!43827 (= (getValueByKey!174 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73011) e!91636)))

(declare-fun b!140575 () Bool)

(assert (=> b!140575 (= e!91637 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73011))))

(assert (= (and d!43827 c!26387) b!140573))

(assert (= (and d!43827 (not c!26387)) b!140574))

(assert (= (and b!140574 c!26388) b!140575))

(assert (= (and b!140574 (not c!26388)) b!140576))

(declare-fun m!167677 () Bool)

(assert (=> b!140575 m!167677))

(assert (=> d!43671 d!43827))

(assert (=> d!43601 d!43719))

(declare-fun d!43829 () Bool)

(declare-fun e!91638 () Bool)

(assert (=> d!43829 e!91638))

(declare-fun res!67105 () Bool)

(assert (=> d!43829 (=> (not res!67105) (not e!91638))))

(declare-fun lt!73565 () ListLongMap!1711)

(assert (=> d!43829 (= res!67105 (contains!910 lt!73565 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun lt!73566 () List!1739)

(assert (=> d!43829 (= lt!73565 (ListLongMap!1712 lt!73566))))

(declare-fun lt!73563 () Unit!4393)

(declare-fun lt!73564 () Unit!4393)

(assert (=> d!43829 (= lt!73563 lt!73564)))

(assert (=> d!43829 (= (getValueByKey!174 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (Some!179 (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!43829 (= lt!73564 (lemmaContainsTupThenGetReturnValue!91 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!43829 (= lt!73566 (insertStrictlySorted!94 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!43829 (= (+!167 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73565)))

(declare-fun b!140577 () Bool)

(declare-fun res!67104 () Bool)

(assert (=> b!140577 (=> (not res!67104) (not e!91638))))

(assert (=> b!140577 (= res!67104 (= (getValueByKey!174 (toList!871 lt!73565) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (Some!179 (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!140578 () Bool)

(assert (=> b!140578 (= e!91638 (contains!914 (toList!871 lt!73565) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!43829 res!67105) b!140577))

(assert (= (and b!140577 res!67104) b!140578))

(declare-fun m!167679 () Bool)

(assert (=> d!43829 m!167679))

(declare-fun m!167681 () Bool)

(assert (=> d!43829 m!167681))

(declare-fun m!167683 () Bool)

(assert (=> d!43829 m!167683))

(declare-fun m!167685 () Bool)

(assert (=> d!43829 m!167685))

(declare-fun m!167687 () Bool)

(assert (=> b!140577 m!167687))

(declare-fun m!167689 () Bool)

(assert (=> b!140578 m!167689))

(assert (=> bm!15515 d!43829))

(assert (=> b!140020 d!43699))

(declare-fun b!140580 () Bool)

(declare-fun e!91640 () Bool)

(declare-fun call!15588 () Bool)

(assert (=> b!140580 (= e!91640 call!15588)))

(declare-fun b!140581 () Bool)

(declare-fun e!91641 () Bool)

(assert (=> b!140581 (= e!91641 e!91640)))

(declare-fun c!26389 () Bool)

(assert (=> b!140581 (= c!26389 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140582 () Bool)

(declare-fun e!91639 () Bool)

(assert (=> b!140582 (= e!91639 call!15588)))

(declare-fun bm!15585 () Bool)

(assert (=> bm!15585 (= call!15588 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!140579 () Bool)

(assert (=> b!140579 (= e!91640 e!91639)))

(declare-fun lt!73568 () (_ BitVec 64))

(assert (=> b!140579 (= lt!73568 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!73567 () Unit!4393)

(assert (=> b!140579 (= lt!73567 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 #b00000000000000000000000000000000))))

(assert (=> b!140579 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 #b00000000000000000000000000000000)))

(declare-fun lt!73569 () Unit!4393)

(assert (=> b!140579 (= lt!73569 lt!73567)))

(declare-fun res!67107 () Bool)

(assert (=> b!140579 (= res!67107 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))) (Found!282 #b00000000000000000000000000000000)))))

(assert (=> b!140579 (=> (not res!67107) (not e!91639))))

(declare-fun d!43831 () Bool)

(declare-fun res!67106 () Bool)

(assert (=> d!43831 (=> res!67106 e!91641)))

(assert (=> d!43831 (= res!67106 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43831 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))) e!91641)))

(assert (= (and d!43831 (not res!67106)) b!140581))

(assert (= (and b!140581 c!26389) b!140579))

(assert (= (and b!140581 (not c!26389)) b!140580))

(assert (= (and b!140579 res!67107) b!140582))

(assert (= (or b!140582 b!140580) bm!15585))

(declare-fun m!167691 () Bool)

(assert (=> b!140581 m!167691))

(assert (=> b!140581 m!167691))

(declare-fun m!167693 () Bool)

(assert (=> b!140581 m!167693))

(declare-fun m!167695 () Bool)

(assert (=> bm!15585 m!167695))

(assert (=> b!140579 m!167691))

(declare-fun m!167697 () Bool)

(assert (=> b!140579 m!167697))

(declare-fun m!167699 () Bool)

(assert (=> b!140579 m!167699))

(assert (=> b!140579 m!167691))

(declare-fun m!167701 () Bool)

(assert (=> b!140579 m!167701))

(assert (=> b!140284 d!43831))

(declare-fun b!140584 () Bool)

(declare-fun e!91643 () Bool)

(declare-fun call!15589 () Bool)

(assert (=> b!140584 (= e!91643 call!15589)))

(declare-fun b!140585 () Bool)

(declare-fun e!91644 () Bool)

(assert (=> b!140585 (= e!91644 e!91643)))

(declare-fun c!26390 () Bool)

(assert (=> b!140585 (= c!26390 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!140586 () Bool)

(declare-fun e!91642 () Bool)

(assert (=> b!140586 (= e!91642 call!15589)))

(declare-fun bm!15586 () Bool)

(assert (=> bm!15586 (= call!15589 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))))))

(declare-fun b!140583 () Bool)

(assert (=> b!140583 (= e!91643 e!91642)))

(declare-fun lt!73571 () (_ BitVec 64))

(assert (=> b!140583 (= lt!73571 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))

(declare-fun lt!73570 () Unit!4393)

(assert (=> b!140583 (= lt!73570 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (_2!1340 lt!73099)) lt!73571 #b00000000000000000000000000000000))))

(assert (=> b!140583 (arrayContainsKey!0 (_keys!4697 (_2!1340 lt!73099)) lt!73571 #b00000000000000000000000000000000)))

(declare-fun lt!73572 () Unit!4393)

(assert (=> b!140583 (= lt!73572 lt!73570)))

(declare-fun res!67109 () Bool)

(assert (=> b!140583 (= res!67109 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))) (Found!282 #b00000000000000000000000000000000)))))

(assert (=> b!140583 (=> (not res!67109) (not e!91642))))

(declare-fun d!43833 () Bool)

(declare-fun res!67108 () Bool)

(assert (=> d!43833 (=> res!67108 e!91644)))

(assert (=> d!43833 (= res!67108 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!43833 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))) e!91644)))

(assert (= (and d!43833 (not res!67108)) b!140585))

(assert (= (and b!140585 c!26390) b!140583))

(assert (= (and b!140585 (not c!26390)) b!140584))

(assert (= (and b!140583 res!67109) b!140586))

(assert (= (or b!140586 b!140584) bm!15586))

(assert (=> b!140585 m!167523))

(assert (=> b!140585 m!167523))

(assert (=> b!140585 m!167525))

(declare-fun m!167703 () Bool)

(assert (=> bm!15586 m!167703))

(assert (=> b!140583 m!167523))

(declare-fun m!167705 () Bool)

(assert (=> b!140583 m!167705))

(declare-fun m!167707 () Bool)

(assert (=> b!140583 m!167707))

(assert (=> b!140583 m!167523))

(declare-fun m!167709 () Bool)

(assert (=> b!140583 m!167709))

(assert (=> b!140228 d!43833))

(declare-fun d!43835 () Bool)

(declare-fun lt!73573 () Bool)

(assert (=> d!43835 (= lt!73573 (select (content!138 (toList!871 lt!73157)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91646 () Bool)

(assert (=> d!43835 (= lt!73573 e!91646)))

(declare-fun res!67110 () Bool)

(assert (=> d!43835 (=> (not res!67110) (not e!91646))))

(assert (=> d!43835 (= res!67110 ((_ is Cons!1735) (toList!871 lt!73157)))))

(assert (=> d!43835 (= (contains!914 (toList!871 lt!73157) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73573)))

(declare-fun b!140587 () Bool)

(declare-fun e!91645 () Bool)

(assert (=> b!140587 (= e!91646 e!91645)))

(declare-fun res!67111 () Bool)

(assert (=> b!140587 (=> res!67111 e!91645)))

(assert (=> b!140587 (= res!67111 (= (h!2342 (toList!871 lt!73157)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!140588 () Bool)

(assert (=> b!140588 (= e!91645 (contains!914 (t!6314 (toList!871 lt!73157)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43835 res!67110) b!140587))

(assert (= (and b!140587 (not res!67111)) b!140588))

(declare-fun m!167711 () Bool)

(assert (=> d!43835 m!167711))

(declare-fun m!167713 () Bool)

(assert (=> d!43835 m!167713))

(declare-fun m!167715 () Bool)

(assert (=> b!140588 m!167715))

(assert (=> b!140042 d!43835))

(declare-fun d!43837 () Bool)

(assert (=> d!43837 (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))

(declare-fun lt!73576 () Unit!4393)

(declare-fun choose!873 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 64) (_ BitVec 32) Int) Unit!4393)

(assert (=> d!43837 (= lt!73576 (choose!873 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!43837 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43837 (= (lemmaArrayContainsKeyThenInListMap!45 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73576)))

(declare-fun bs!5856 () Bool)

(assert (= bs!5856 d!43837))

(assert (=> bs!5856 m!166541))

(assert (=> bs!5856 m!166541))

(assert (=> bs!5856 m!166407))

(assert (=> bs!5856 m!167029))

(assert (=> bs!5856 m!166407))

(declare-fun m!167717 () Bool)

(assert (=> bs!5856 m!167717))

(assert (=> bs!5856 m!166687))

(assert (=> b!140271 d!43837))

(declare-fun d!43839 () Bool)

(declare-fun e!91648 () Bool)

(assert (=> d!43839 e!91648))

(declare-fun res!67112 () Bool)

(assert (=> d!43839 (=> res!67112 e!91648)))

(declare-fun lt!73580 () Bool)

(assert (=> d!43839 (= res!67112 (not lt!73580))))

(declare-fun lt!73579 () Bool)

(assert (=> d!43839 (= lt!73580 lt!73579)))

(declare-fun lt!73578 () Unit!4393)

(declare-fun e!91647 () Unit!4393)

(assert (=> d!43839 (= lt!73578 e!91647)))

(declare-fun c!26391 () Bool)

(assert (=> d!43839 (= c!26391 lt!73579)))

(assert (=> d!43839 (= lt!73579 (containsKey!178 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!43839 (= (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73580)))

(declare-fun b!140589 () Bool)

(declare-fun lt!73577 () Unit!4393)

(assert (=> b!140589 (= e!91647 lt!73577)))

(assert (=> b!140589 (= lt!73577 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!140589 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!140590 () Bool)

(declare-fun Unit!4423 () Unit!4393)

(assert (=> b!140590 (= e!91647 Unit!4423)))

(declare-fun b!140591 () Bool)

(assert (=> b!140591 (= e!91648 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (= (and d!43839 c!26391) b!140589))

(assert (= (and d!43839 (not c!26391)) b!140590))

(assert (= (and d!43839 (not res!67112)) b!140591))

(assert (=> d!43839 m!166407))

(declare-fun m!167719 () Bool)

(assert (=> d!43839 m!167719))

(assert (=> b!140589 m!166407))

(declare-fun m!167721 () Bool)

(assert (=> b!140589 m!167721))

(assert (=> b!140589 m!166407))

(declare-fun m!167723 () Bool)

(assert (=> b!140589 m!167723))

(assert (=> b!140589 m!167723))

(declare-fun m!167725 () Bool)

(assert (=> b!140589 m!167725))

(assert (=> b!140591 m!166407))

(assert (=> b!140591 m!167723))

(assert (=> b!140591 m!167723))

(assert (=> b!140591 m!167725))

(assert (=> b!140271 d!43839))

(assert (=> b!140271 d!43601))

(declare-fun d!43841 () Bool)

(assert (=> d!43841 (= (apply!120 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) lt!73214) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!73214)))))

(declare-fun bs!5857 () Bool)

(assert (= bs!5857 d!43841))

(declare-fun m!167727 () Bool)

(assert (=> bs!5857 m!167727))

(assert (=> bs!5857 m!167727))

(declare-fun m!167729 () Bool)

(assert (=> bs!5857 m!167729))

(assert (=> b!140106 d!43841))

(declare-fun d!43843 () Bool)

(declare-fun e!91650 () Bool)

(assert (=> d!43843 e!91650))

(declare-fun res!67113 () Bool)

(assert (=> d!43843 (=> res!67113 e!91650)))

(declare-fun lt!73584 () Bool)

(assert (=> d!43843 (= res!67113 (not lt!73584))))

(declare-fun lt!73583 () Bool)

(assert (=> d!43843 (= lt!73584 lt!73583)))

(declare-fun lt!73582 () Unit!4393)

(declare-fun e!91649 () Unit!4393)

(assert (=> d!43843 (= lt!73582 e!91649)))

(declare-fun c!26392 () Bool)

(assert (=> d!43843 (= c!26392 lt!73583)))

(assert (=> d!43843 (= lt!73583 (containsKey!178 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))

(assert (=> d!43843 (= (contains!910 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) lt!73215) lt!73584)))

(declare-fun b!140592 () Bool)

(declare-fun lt!73581 () Unit!4393)

(assert (=> b!140592 (= e!91649 lt!73581)))

(assert (=> b!140592 (= lt!73581 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))

(assert (=> b!140592 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))

(declare-fun b!140593 () Bool)

(declare-fun Unit!4424 () Unit!4393)

(assert (=> b!140593 (= e!91649 Unit!4424)))

(declare-fun b!140594 () Bool)

(assert (=> b!140594 (= e!91650 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215)))))

(assert (= (and d!43843 c!26392) b!140592))

(assert (= (and d!43843 (not c!26392)) b!140593))

(assert (= (and d!43843 (not res!67113)) b!140594))

(declare-fun m!167731 () Bool)

(assert (=> d!43843 m!167731))

(declare-fun m!167733 () Bool)

(assert (=> b!140592 m!167733))

(declare-fun m!167735 () Bool)

(assert (=> b!140592 m!167735))

(assert (=> b!140592 m!167735))

(declare-fun m!167737 () Bool)

(assert (=> b!140592 m!167737))

(assert (=> b!140594 m!167735))

(assert (=> b!140594 m!167735))

(assert (=> b!140594 m!167737))

(assert (=> b!140106 d!43843))

(declare-fun d!43845 () Bool)

(assert (=> d!43845 (contains!910 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) lt!73215)))

(declare-fun lt!73585 () Unit!4393)

(assert (=> d!43845 (= lt!73585 (choose!870 lt!73209 lt!73198 (zeroValue!2789 newMap!16) lt!73215))))

(assert (=> d!43845 (contains!910 lt!73209 lt!73215)))

(assert (=> d!43845 (= (addStillContains!96 lt!73209 lt!73198 (zeroValue!2789 newMap!16) lt!73215) lt!73585)))

(declare-fun bs!5858 () Bool)

(assert (= bs!5858 d!43845))

(assert (=> bs!5858 m!166875))

(assert (=> bs!5858 m!166875))

(assert (=> bs!5858 m!166881))

(declare-fun m!167739 () Bool)

(assert (=> bs!5858 m!167739))

(declare-fun m!167741 () Bool)

(assert (=> bs!5858 m!167741))

(assert (=> b!140106 d!43845))

(declare-fun d!43847 () Bool)

(assert (=> d!43847 (= (apply!120 lt!73210 lt!73205) (get!1528 (getValueByKey!174 (toList!871 lt!73210) lt!73205)))))

(declare-fun bs!5859 () Bool)

(assert (= bs!5859 d!43847))

(declare-fun m!167743 () Bool)

(assert (=> bs!5859 m!167743))

(assert (=> bs!5859 m!167743))

(declare-fun m!167745 () Bool)

(assert (=> bs!5859 m!167745))

(assert (=> b!140106 d!43847))

(declare-fun d!43849 () Bool)

(declare-fun e!91651 () Bool)

(assert (=> d!43849 e!91651))

(declare-fun res!67115 () Bool)

(assert (=> d!43849 (=> (not res!67115) (not e!91651))))

(declare-fun lt!73588 () ListLongMap!1711)

(assert (=> d!43849 (= res!67115 (contains!910 lt!73588 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun lt!73589 () List!1739)

(assert (=> d!43849 (= lt!73588 (ListLongMap!1712 lt!73589))))

(declare-fun lt!73586 () Unit!4393)

(declare-fun lt!73587 () Unit!4393)

(assert (=> d!43849 (= lt!73586 lt!73587)))

(assert (=> d!43849 (= (getValueByKey!174 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (=> d!43849 (= lt!73587 (lemmaContainsTupThenGetReturnValue!91 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (=> d!43849 (= lt!73589 (insertStrictlySorted!94 (toList!871 lt!73210) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (=> d!43849 (= (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) lt!73588)))

(declare-fun b!140595 () Bool)

(declare-fun res!67114 () Bool)

(assert (=> b!140595 (=> (not res!67114) (not e!91651))))

(assert (=> b!140595 (= res!67114 (= (getValueByKey!174 (toList!871 lt!73588) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(declare-fun b!140596 () Bool)

(assert (=> b!140596 (= e!91651 (contains!914 (toList!871 lt!73588) (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))

(assert (= (and d!43849 res!67115) b!140595))

(assert (= (and b!140595 res!67114) b!140596))

(declare-fun m!167747 () Bool)

(assert (=> d!43849 m!167747))

(declare-fun m!167749 () Bool)

(assert (=> d!43849 m!167749))

(declare-fun m!167751 () Bool)

(assert (=> d!43849 m!167751))

(declare-fun m!167753 () Bool)

(assert (=> d!43849 m!167753))

(declare-fun m!167755 () Bool)

(assert (=> b!140595 m!167755))

(declare-fun m!167757 () Bool)

(assert (=> b!140596 m!167757))

(assert (=> b!140106 d!43849))

(declare-fun d!43851 () Bool)

(assert (=> d!43851 (= (apply!120 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) lt!73214) (apply!120 lt!73195 lt!73214))))

(declare-fun lt!73590 () Unit!4393)

(assert (=> d!43851 (= lt!73590 (choose!869 lt!73195 lt!73204 (zeroValue!2789 newMap!16) lt!73214))))

(declare-fun e!91652 () Bool)

(assert (=> d!43851 e!91652))

(declare-fun res!67116 () Bool)

(assert (=> d!43851 (=> (not res!67116) (not e!91652))))

(assert (=> d!43851 (= res!67116 (contains!910 lt!73195 lt!73214))))

(assert (=> d!43851 (= (addApplyDifferent!96 lt!73195 lt!73204 (zeroValue!2789 newMap!16) lt!73214) lt!73590)))

(declare-fun b!140597 () Bool)

(assert (=> b!140597 (= e!91652 (not (= lt!73214 lt!73204)))))

(assert (= (and d!43851 res!67116) b!140597))

(assert (=> d!43851 m!166887))

(assert (=> d!43851 m!166887))

(assert (=> d!43851 m!166889))

(declare-fun m!167759 () Bool)

(assert (=> d!43851 m!167759))

(assert (=> d!43851 m!166893))

(declare-fun m!167761 () Bool)

(assert (=> d!43851 m!167761))

(assert (=> b!140106 d!43851))

(declare-fun d!43853 () Bool)

(declare-fun e!91653 () Bool)

(assert (=> d!43853 e!91653))

(declare-fun res!67118 () Bool)

(assert (=> d!43853 (=> (not res!67118) (not e!91653))))

(declare-fun lt!73593 () ListLongMap!1711)

(assert (=> d!43853 (= res!67118 (contains!910 lt!73593 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!73594 () List!1739)

(assert (=> d!43853 (= lt!73593 (ListLongMap!1712 lt!73594))))

(declare-fun lt!73591 () Unit!4393)

(declare-fun lt!73592 () Unit!4393)

(assert (=> d!43853 (= lt!73591 lt!73592)))

(assert (=> d!43853 (= (getValueByKey!174 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43853 (= lt!73592 (lemmaContainsTupThenGetReturnValue!91 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43853 (= lt!73594 (insertStrictlySorted!94 (toList!871 lt!73209) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43853 (= (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) lt!73593)))

(declare-fun b!140598 () Bool)

(declare-fun res!67117 () Bool)

(assert (=> b!140598 (=> (not res!67117) (not e!91653))))

(assert (=> b!140598 (= res!67117 (= (getValueByKey!174 (toList!871 lt!73593) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(declare-fun b!140599 () Bool)

(assert (=> b!140599 (= e!91653 (contains!914 (toList!871 lt!73593) (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))

(assert (= (and d!43853 res!67118) b!140598))

(assert (= (and b!140598 res!67117) b!140599))

(declare-fun m!167763 () Bool)

(assert (=> d!43853 m!167763))

(declare-fun m!167765 () Bool)

(assert (=> d!43853 m!167765))

(declare-fun m!167767 () Bool)

(assert (=> d!43853 m!167767))

(declare-fun m!167769 () Bool)

(assert (=> d!43853 m!167769))

(declare-fun m!167771 () Bool)

(assert (=> b!140598 m!167771))

(declare-fun m!167773 () Bool)

(assert (=> b!140599 m!167773))

(assert (=> b!140106 d!43853))

(declare-fun b!140600 () Bool)

(assert (=> b!140600 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!140600 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))))))))

(declare-fun e!91654 () Bool)

(declare-fun lt!73601 () ListLongMap!1711)

(assert (=> b!140600 (= e!91654 (= (apply!120 lt!73601 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140601 () Bool)

(declare-fun e!91656 () Bool)

(assert (=> b!140601 (= e!91656 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140601 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!140602 () Bool)

(declare-fun res!67120 () Bool)

(declare-fun e!91657 () Bool)

(assert (=> b!140602 (=> (not res!67120) (not e!91657))))

(assert (=> b!140602 (= res!67120 (not (contains!910 lt!73601 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140603 () Bool)

(declare-fun e!91660 () Bool)

(assert (=> b!140603 (= e!91660 e!91654)))

(assert (=> b!140603 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67122 () Bool)

(assert (=> b!140603 (= res!67122 (contains!910 lt!73601 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140603 (=> (not res!67122) (not e!91654))))

(declare-fun b!140604 () Bool)

(declare-fun lt!73597 () Unit!4393)

(declare-fun lt!73595 () Unit!4393)

(assert (=> b!140604 (= lt!73597 lt!73595)))

(declare-fun lt!73598 () ListLongMap!1711)

(declare-fun lt!73599 () V!3553)

(declare-fun lt!73600 () (_ BitVec 64))

(declare-fun lt!73596 () (_ BitVec 64))

(assert (=> b!140604 (not (contains!910 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599)) lt!73596))))

(assert (=> b!140604 (= lt!73595 (addStillNotContains!65 lt!73598 lt!73600 lt!73599 lt!73596))))

(assert (=> b!140604 (= lt!73596 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140604 (= lt!73599 (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140604 (= lt!73600 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15590 () ListLongMap!1711)

(assert (=> b!140604 (= lt!73598 call!15590)))

(declare-fun e!91658 () ListLongMap!1711)

(assert (=> b!140604 (= e!91658 (+!167 call!15590 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140605 () Bool)

(assert (=> b!140605 (= e!91657 e!91660)))

(declare-fun c!26396 () Bool)

(assert (=> b!140605 (= c!26396 e!91656)))

(declare-fun res!67119 () Bool)

(assert (=> b!140605 (=> (not res!67119) (not e!91656))))

(assert (=> b!140605 (= res!67119 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15587 () Bool)

(assert (=> bm!15587 (= call!15590 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!140606 () Bool)

(assert (=> b!140606 (= e!91658 call!15590)))

(declare-fun b!140607 () Bool)

(declare-fun e!91655 () Bool)

(assert (=> b!140607 (= e!91660 e!91655)))

(declare-fun c!26394 () Bool)

(assert (=> b!140607 (= c!26394 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!43855 () Bool)

(assert (=> d!43855 e!91657))

(declare-fun res!67121 () Bool)

(assert (=> d!43855 (=> (not res!67121) (not e!91657))))

(assert (=> d!43855 (= res!67121 (not (contains!910 lt!73601 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!91659 () ListLongMap!1711)

(assert (=> d!43855 (= lt!73601 e!91659)))

(declare-fun c!26395 () Bool)

(assert (=> d!43855 (= c!26395 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43855 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43855 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73601)))

(declare-fun b!140608 () Bool)

(assert (=> b!140608 (= e!91659 (ListLongMap!1712 Nil!1736))))

(declare-fun b!140609 () Bool)

(assert (=> b!140609 (= e!91655 (isEmpty!421 lt!73601))))

(declare-fun b!140610 () Bool)

(assert (=> b!140610 (= e!91659 e!91658)))

(declare-fun c!26393 () Bool)

(assert (=> b!140610 (= c!26393 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140611 () Bool)

(assert (=> b!140611 (= e!91655 (= lt!73601 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!43855 c!26395) b!140608))

(assert (= (and d!43855 (not c!26395)) b!140610))

(assert (= (and b!140610 c!26393) b!140604))

(assert (= (and b!140610 (not c!26393)) b!140606))

(assert (= (or b!140604 b!140606) bm!15587))

(assert (= (and d!43855 res!67121) b!140602))

(assert (= (and b!140602 res!67120) b!140605))

(assert (= (and b!140605 res!67119) b!140601))

(assert (= (and b!140605 c!26396) b!140603))

(assert (= (and b!140605 (not c!26396)) b!140607))

(assert (= (and b!140603 res!67122) b!140600))

(assert (= (and b!140607 c!26394) b!140611))

(assert (= (and b!140607 (not c!26394)) b!140609))

(declare-fun b_lambda!6283 () Bool)

(assert (=> (not b_lambda!6283) (not b!140600)))

(assert (=> b!140600 t!6328))

(declare-fun b_and!8773 () Bool)

(assert (= b_and!8769 (and (=> t!6328 result!4187) b_and!8773)))

(assert (=> b!140600 t!6330))

(declare-fun b_and!8775 () Bool)

(assert (= b_and!8771 (and (=> t!6330 result!4189) b_and!8775)))

(declare-fun b_lambda!6285 () Bool)

(assert (=> (not b_lambda!6285) (not b!140604)))

(assert (=> b!140604 t!6328))

(declare-fun b_and!8777 () Bool)

(assert (= b_and!8773 (and (=> t!6328 result!4187) b_and!8777)))

(assert (=> b!140604 t!6330))

(declare-fun b_and!8779 () Bool)

(assert (= b_and!8775 (and (=> t!6330 result!4189) b_and!8779)))

(declare-fun m!167775 () Bool)

(assert (=> d!43855 m!167775))

(assert (=> d!43855 m!166687))

(declare-fun m!167777 () Bool)

(assert (=> bm!15587 m!167777))

(declare-fun m!167779 () Bool)

(assert (=> b!140602 m!167779))

(assert (=> b!140601 m!166699))

(assert (=> b!140601 m!166699))

(assert (=> b!140601 m!166701))

(assert (=> b!140600 m!166849))

(assert (=> b!140600 m!166703))

(assert (=> b!140600 m!166851))

(assert (=> b!140600 m!166699))

(assert (=> b!140600 m!166703))

(assert (=> b!140600 m!166849))

(assert (=> b!140600 m!166699))

(declare-fun m!167781 () Bool)

(assert (=> b!140600 m!167781))

(assert (=> b!140603 m!166699))

(assert (=> b!140603 m!166699))

(declare-fun m!167783 () Bool)

(assert (=> b!140603 m!167783))

(declare-fun m!167785 () Bool)

(assert (=> b!140609 m!167785))

(assert (=> b!140610 m!166699))

(assert (=> b!140610 m!166699))

(assert (=> b!140610 m!166701))

(assert (=> b!140604 m!166849))

(assert (=> b!140604 m!166703))

(assert (=> b!140604 m!166851))

(declare-fun m!167787 () Bool)

(assert (=> b!140604 m!167787))

(assert (=> b!140604 m!166703))

(declare-fun m!167789 () Bool)

(assert (=> b!140604 m!167789))

(assert (=> b!140604 m!166849))

(declare-fun m!167791 () Bool)

(assert (=> b!140604 m!167791))

(assert (=> b!140604 m!166699))

(assert (=> b!140604 m!167787))

(declare-fun m!167793 () Bool)

(assert (=> b!140604 m!167793))

(assert (=> b!140611 m!167777))

(assert (=> b!140106 d!43855))

(declare-fun d!43857 () Bool)

(assert (=> d!43857 (= (apply!120 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) lt!73206) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!73206)))))

(declare-fun bs!5860 () Bool)

(assert (= bs!5860 d!43857))

(declare-fun m!167795 () Bool)

(assert (=> bs!5860 m!167795))

(assert (=> bs!5860 m!167795))

(declare-fun m!167797 () Bool)

(assert (=> bs!5860 m!167797))

(assert (=> b!140106 d!43857))

(declare-fun d!43859 () Bool)

(assert (=> d!43859 (= (apply!120 lt!73195 lt!73214) (get!1528 (getValueByKey!174 (toList!871 lt!73195) lt!73214)))))

(declare-fun bs!5861 () Bool)

(assert (= bs!5861 d!43859))

(declare-fun m!167799 () Bool)

(assert (=> bs!5861 m!167799))

(assert (=> bs!5861 m!167799))

(declare-fun m!167801 () Bool)

(assert (=> bs!5861 m!167801))

(assert (=> b!140106 d!43859))

(declare-fun d!43861 () Bool)

(assert (=> d!43861 (= (apply!120 lt!73199 lt!73206) (get!1528 (getValueByKey!174 (toList!871 lt!73199) lt!73206)))))

(declare-fun bs!5862 () Bool)

(assert (= bs!5862 d!43861))

(declare-fun m!167803 () Bool)

(assert (=> bs!5862 m!167803))

(assert (=> bs!5862 m!167803))

(declare-fun m!167805 () Bool)

(assert (=> bs!5862 m!167805))

(assert (=> b!140106 d!43861))

(declare-fun d!43863 () Bool)

(declare-fun e!91661 () Bool)

(assert (=> d!43863 e!91661))

(declare-fun res!67124 () Bool)

(assert (=> d!43863 (=> (not res!67124) (not e!91661))))

(declare-fun lt!73604 () ListLongMap!1711)

(assert (=> d!43863 (= res!67124 (contains!910 lt!73604 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun lt!73605 () List!1739)

(assert (=> d!43863 (= lt!73604 (ListLongMap!1712 lt!73605))))

(declare-fun lt!73602 () Unit!4393)

(declare-fun lt!73603 () Unit!4393)

(assert (=> d!43863 (= lt!73602 lt!73603)))

(assert (=> d!43863 (= (getValueByKey!174 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (=> d!43863 (= lt!73603 (lemmaContainsTupThenGetReturnValue!91 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (=> d!43863 (= lt!73605 (insertStrictlySorted!94 (toList!871 lt!73199) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (=> d!43863 (= (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) lt!73604)))

(declare-fun b!140612 () Bool)

(declare-fun res!67123 () Bool)

(assert (=> b!140612 (=> (not res!67123) (not e!91661))))

(assert (=> b!140612 (= res!67123 (= (getValueByKey!174 (toList!871 lt!73604) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(declare-fun b!140613 () Bool)

(assert (=> b!140613 (= e!91661 (contains!914 (toList!871 lt!73604) (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))

(assert (= (and d!43863 res!67124) b!140612))

(assert (= (and b!140612 res!67123) b!140613))

(declare-fun m!167807 () Bool)

(assert (=> d!43863 m!167807))

(declare-fun m!167809 () Bool)

(assert (=> d!43863 m!167809))

(declare-fun m!167811 () Bool)

(assert (=> d!43863 m!167811))

(declare-fun m!167813 () Bool)

(assert (=> d!43863 m!167813))

(declare-fun m!167815 () Bool)

(assert (=> b!140612 m!167815))

(declare-fun m!167817 () Bool)

(assert (=> b!140613 m!167817))

(assert (=> b!140106 d!43863))

(declare-fun d!43865 () Bool)

(assert (=> d!43865 (= (apply!120 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) lt!73206) (apply!120 lt!73199 lt!73206))))

(declare-fun lt!73606 () Unit!4393)

(assert (=> d!43865 (= lt!73606 (choose!869 lt!73199 lt!73211 (minValue!2789 newMap!16) lt!73206))))

(declare-fun e!91662 () Bool)

(assert (=> d!43865 e!91662))

(declare-fun res!67125 () Bool)

(assert (=> d!43865 (=> (not res!67125) (not e!91662))))

(assert (=> d!43865 (= res!67125 (contains!910 lt!73199 lt!73206))))

(assert (=> d!43865 (= (addApplyDifferent!96 lt!73199 lt!73211 (minValue!2789 newMap!16) lt!73206) lt!73606)))

(declare-fun b!140614 () Bool)

(assert (=> b!140614 (= e!91662 (not (= lt!73206 lt!73211)))))

(assert (= (and d!43865 res!67125) b!140614))

(assert (=> d!43865 m!166883))

(assert (=> d!43865 m!166883))

(assert (=> d!43865 m!166885))

(declare-fun m!167819 () Bool)

(assert (=> d!43865 m!167819))

(assert (=> d!43865 m!166869))

(declare-fun m!167821 () Bool)

(assert (=> d!43865 m!167821))

(assert (=> b!140106 d!43865))

(declare-fun d!43867 () Bool)

(assert (=> d!43867 (= (apply!120 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) lt!73205) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!73205)))))

(declare-fun bs!5863 () Bool)

(assert (= bs!5863 d!43867))

(declare-fun m!167823 () Bool)

(assert (=> bs!5863 m!167823))

(assert (=> bs!5863 m!167823))

(declare-fun m!167825 () Bool)

(assert (=> bs!5863 m!167825))

(assert (=> b!140106 d!43867))

(declare-fun d!43869 () Bool)

(declare-fun e!91663 () Bool)

(assert (=> d!43869 e!91663))

(declare-fun res!67127 () Bool)

(assert (=> d!43869 (=> (not res!67127) (not e!91663))))

(declare-fun lt!73609 () ListLongMap!1711)

(assert (=> d!43869 (= res!67127 (contains!910 lt!73609 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!73610 () List!1739)

(assert (=> d!43869 (= lt!73609 (ListLongMap!1712 lt!73610))))

(declare-fun lt!73607 () Unit!4393)

(declare-fun lt!73608 () Unit!4393)

(assert (=> d!43869 (= lt!73607 lt!73608)))

(assert (=> d!43869 (= (getValueByKey!174 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43869 (= lt!73608 (lemmaContainsTupThenGetReturnValue!91 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43869 (= lt!73610 (insertStrictlySorted!94 (toList!871 lt!73195) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (=> d!43869 (= (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) lt!73609)))

(declare-fun b!140615 () Bool)

(declare-fun res!67126 () Bool)

(assert (=> b!140615 (=> (not res!67126) (not e!91663))))

(assert (=> b!140615 (= res!67126 (= (getValueByKey!174 (toList!871 lt!73609) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(declare-fun b!140616 () Bool)

(assert (=> b!140616 (= e!91663 (contains!914 (toList!871 lt!73609) (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))

(assert (= (and d!43869 res!67127) b!140615))

(assert (= (and b!140615 res!67126) b!140616))

(declare-fun m!167827 () Bool)

(assert (=> d!43869 m!167827))

(declare-fun m!167829 () Bool)

(assert (=> d!43869 m!167829))

(declare-fun m!167831 () Bool)

(assert (=> d!43869 m!167831))

(declare-fun m!167833 () Bool)

(assert (=> d!43869 m!167833))

(declare-fun m!167835 () Bool)

(assert (=> b!140615 m!167835))

(declare-fun m!167837 () Bool)

(assert (=> b!140616 m!167837))

(assert (=> b!140106 d!43869))

(declare-fun d!43871 () Bool)

(assert (=> d!43871 (= (apply!120 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) lt!73205) (apply!120 lt!73210 lt!73205))))

(declare-fun lt!73611 () Unit!4393)

(assert (=> d!43871 (= lt!73611 (choose!869 lt!73210 lt!73208 (minValue!2789 newMap!16) lt!73205))))

(declare-fun e!91664 () Bool)

(assert (=> d!43871 e!91664))

(declare-fun res!67128 () Bool)

(assert (=> d!43871 (=> (not res!67128) (not e!91664))))

(assert (=> d!43871 (= res!67128 (contains!910 lt!73210 lt!73205))))

(assert (=> d!43871 (= (addApplyDifferent!96 lt!73210 lt!73208 (minValue!2789 newMap!16) lt!73205) lt!73611)))

(declare-fun b!140617 () Bool)

(assert (=> b!140617 (= e!91664 (not (= lt!73205 lt!73208)))))

(assert (= (and d!43871 res!67128) b!140617))

(assert (=> d!43871 m!166879))

(assert (=> d!43871 m!166879))

(assert (=> d!43871 m!166891))

(declare-fun m!167839 () Bool)

(assert (=> d!43871 m!167839))

(assert (=> d!43871 m!166871))

(declare-fun m!167841 () Bool)

(assert (=> d!43871 m!167841))

(assert (=> b!140106 d!43871))

(assert (=> b!140308 d!43699))

(declare-fun d!43873 () Bool)

(assert (=> d!43873 (isDefined!128 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun lt!73612 () Unit!4393)

(assert (=> d!43873 (= lt!73612 (choose!871 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!91665 () Bool)

(assert (=> d!43873 e!91665))

(declare-fun res!67129 () Bool)

(assert (=> d!43873 (=> (not res!67129) (not e!91665))))

(assert (=> d!43873 (= res!67129 (isStrictlySorted!320 (toList!871 call!15490)))))

(assert (=> d!43873 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73612)))

(declare-fun b!140618 () Bool)

(assert (=> b!140618 (= e!91665 (containsKey!178 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43873 res!67129) b!140618))

(assert (=> d!43873 m!166407))

(assert (=> d!43873 m!167105))

(assert (=> d!43873 m!167105))

(assert (=> d!43873 m!167107))

(assert (=> d!43873 m!166407))

(declare-fun m!167843 () Bool)

(assert (=> d!43873 m!167843))

(declare-fun m!167845 () Bool)

(assert (=> d!43873 m!167845))

(assert (=> b!140618 m!166407))

(assert (=> b!140618 m!167101))

(assert (=> b!140310 d!43873))

(declare-fun d!43875 () Bool)

(assert (=> d!43875 (= (isDefined!128 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun bs!5864 () Bool)

(assert (= bs!5864 d!43875))

(assert (=> bs!5864 m!167105))

(declare-fun m!167847 () Bool)

(assert (=> bs!5864 m!167847))

(assert (=> b!140310 d!43875))

(declare-fun b!140622 () Bool)

(declare-fun e!91667 () Option!180)

(assert (=> b!140622 (= e!91667 None!178)))

(declare-fun b!140620 () Bool)

(declare-fun e!91666 () Option!180)

(assert (=> b!140620 (= e!91666 e!91667)))

(declare-fun c!26398 () Bool)

(assert (=> b!140620 (= c!26398 (and ((_ is Cons!1735) (toList!871 call!15490)) (not (= (_1!1339 (h!2342 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!140619 () Bool)

(assert (=> b!140619 (= e!91666 (Some!179 (_2!1339 (h!2342 (toList!871 call!15490)))))))

(declare-fun c!26397 () Bool)

(declare-fun d!43877 () Bool)

(assert (=> d!43877 (= c!26397 (and ((_ is Cons!1735) (toList!871 call!15490)) (= (_1!1339 (h!2342 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!43877 (= (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91666)))

(declare-fun b!140621 () Bool)

(assert (=> b!140621 (= e!91667 (getValueByKey!174 (t!6314 (toList!871 call!15490)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!43877 c!26397) b!140619))

(assert (= (and d!43877 (not c!26397)) b!140620))

(assert (= (and b!140620 c!26398) b!140621))

(assert (= (and b!140620 (not c!26398)) b!140622))

(assert (=> b!140621 m!166407))

(declare-fun m!167849 () Bool)

(assert (=> b!140621 m!167849))

(assert (=> b!140310 d!43877))

(declare-fun d!43879 () Bool)

(declare-fun res!67130 () Bool)

(declare-fun e!91668 () Bool)

(assert (=> d!43879 (=> res!67130 e!91668)))

(assert (=> d!43879 (= res!67130 (and ((_ is Cons!1735) (toList!871 lt!73003)) (= (_1!1339 (h!2342 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43879 (= (containsKey!178 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000) e!91668)))

(declare-fun b!140623 () Bool)

(declare-fun e!91669 () Bool)

(assert (=> b!140623 (= e!91668 e!91669)))

(declare-fun res!67131 () Bool)

(assert (=> b!140623 (=> (not res!67131) (not e!91669))))

(assert (=> b!140623 (= res!67131 (and (or (not ((_ is Cons!1735) (toList!871 lt!73003))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73003)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140624 () Bool)

(assert (=> b!140624 (= e!91669 (containsKey!178 (t!6314 (toList!871 lt!73003)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43879 (not res!67130)) b!140623))

(assert (= (and b!140623 res!67131) b!140624))

(declare-fun m!167851 () Bool)

(assert (=> b!140624 m!167851))

(assert (=> d!43631 d!43879))

(declare-fun d!43881 () Bool)

(declare-fun e!91670 () Bool)

(assert (=> d!43881 e!91670))

(declare-fun res!67133 () Bool)

(assert (=> d!43881 (=> (not res!67133) (not e!91670))))

(declare-fun lt!73615 () ListLongMap!1711)

(assert (=> d!43881 (= res!67133 (contains!910 lt!73615 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!73616 () List!1739)

(assert (=> d!43881 (= lt!73615 (ListLongMap!1712 lt!73616))))

(declare-fun lt!73613 () Unit!4393)

(declare-fun lt!73614 () Unit!4393)

(assert (=> d!43881 (= lt!73613 lt!73614)))

(assert (=> d!43881 (= (getValueByKey!174 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43881 (= lt!73614 (lemmaContainsTupThenGetReturnValue!91 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43881 (= lt!73616 (insertStrictlySorted!94 (toList!871 call!15522) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43881 (= (+!167 call!15522 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!73615)))

(declare-fun b!140625 () Bool)

(declare-fun res!67132 () Bool)

(assert (=> b!140625 (=> (not res!67132) (not e!91670))))

(assert (=> b!140625 (= res!67132 (= (getValueByKey!174 (toList!871 lt!73615) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!140626 () Bool)

(assert (=> b!140626 (= e!91670 (contains!914 (toList!871 lt!73615) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!43881 res!67133) b!140625))

(assert (= (and b!140625 res!67132) b!140626))

(declare-fun m!167853 () Bool)

(assert (=> d!43881 m!167853))

(declare-fun m!167855 () Bool)

(assert (=> d!43881 m!167855))

(declare-fun m!167857 () Bool)

(assert (=> d!43881 m!167857))

(declare-fun m!167859 () Bool)

(assert (=> d!43881 m!167859))

(declare-fun m!167861 () Bool)

(assert (=> b!140625 m!167861))

(declare-fun m!167863 () Bool)

(assert (=> b!140626 m!167863))

(assert (=> b!140068 d!43881))

(declare-fun b!140630 () Bool)

(declare-fun e!91672 () Option!180)

(assert (=> b!140630 (= e!91672 None!178)))

(declare-fun b!140628 () Bool)

(declare-fun e!91671 () Option!180)

(assert (=> b!140628 (= e!91671 e!91672)))

(declare-fun c!26400 () Bool)

(assert (=> b!140628 (= c!26400 (and ((_ is Cons!1735) (toList!871 lt!73231)) (not (= (_1!1339 (h!2342 (toList!871 lt!73231))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun b!140627 () Bool)

(assert (=> b!140627 (= e!91671 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73231)))))))

(declare-fun c!26399 () Bool)

(declare-fun d!43883 () Bool)

(assert (=> d!43883 (= c!26399 (and ((_ is Cons!1735) (toList!871 lt!73231)) (= (_1!1339 (h!2342 (toList!871 lt!73231))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!43883 (= (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91671)))

(declare-fun b!140629 () Bool)

(assert (=> b!140629 (= e!91672 (getValueByKey!174 (t!6314 (toList!871 lt!73231)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!43883 c!26399) b!140627))

(assert (= (and d!43883 (not c!26399)) b!140628))

(assert (= (and b!140628 c!26400) b!140629))

(assert (= (and b!140628 (not c!26400)) b!140630))

(declare-fun m!167865 () Bool)

(assert (=> b!140629 m!167865))

(assert (=> b!140138 d!43883))

(declare-fun d!43885 () Bool)

(declare-fun e!91674 () Bool)

(assert (=> d!43885 e!91674))

(declare-fun res!67134 () Bool)

(assert (=> d!43885 (=> res!67134 e!91674)))

(declare-fun lt!73620 () Bool)

(assert (=> d!43885 (= res!67134 (not lt!73620))))

(declare-fun lt!73619 () Bool)

(assert (=> d!43885 (= lt!73620 lt!73619)))

(declare-fun lt!73618 () Unit!4393)

(declare-fun e!91673 () Unit!4393)

(assert (=> d!43885 (= lt!73618 e!91673)))

(declare-fun c!26401 () Bool)

(assert (=> d!43885 (= c!26401 lt!73619)))

(assert (=> d!43885 (= lt!73619 (containsKey!178 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43885 (= (contains!910 lt!73266 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73620)))

(declare-fun b!140631 () Bool)

(declare-fun lt!73617 () Unit!4393)

(assert (=> b!140631 (= e!91673 lt!73617)))

(assert (=> b!140631 (= lt!73617 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140631 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140632 () Bool)

(declare-fun Unit!4425 () Unit!4393)

(assert (=> b!140632 (= e!91673 Unit!4425)))

(declare-fun b!140633 () Bool)

(assert (=> b!140633 (= e!91674 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43885 c!26401) b!140631))

(assert (= (and d!43885 (not c!26401)) b!140632))

(assert (= (and d!43885 (not res!67134)) b!140633))

(assert (=> d!43885 m!166533))

(declare-fun m!167867 () Bool)

(assert (=> d!43885 m!167867))

(assert (=> b!140631 m!166533))

(declare-fun m!167869 () Bool)

(assert (=> b!140631 m!167869))

(assert (=> b!140631 m!166533))

(declare-fun m!167871 () Bool)

(assert (=> b!140631 m!167871))

(assert (=> b!140631 m!167871))

(declare-fun m!167873 () Bool)

(assert (=> b!140631 m!167873))

(assert (=> b!140633 m!166533))

(assert (=> b!140633 m!167871))

(assert (=> b!140633 m!167871))

(assert (=> b!140633 m!167873))

(assert (=> b!140182 d!43885))

(assert (=> b!140053 d!43699))

(assert (=> d!43669 d!43683))

(assert (=> d!43669 d!43681))

(declare-fun d!43887 () Bool)

(assert (=> d!43887 (contains!910 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73021)))

(assert (=> d!43887 true))

(declare-fun _$35!391 () Unit!4393)

(assert (=> d!43887 (= (choose!870 lt!73015 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73021) _$35!391)))

(declare-fun bs!5865 () Bool)

(assert (= bs!5865 d!43887))

(assert (=> bs!5865 m!166571))

(assert (=> bs!5865 m!166571))

(assert (=> bs!5865 m!166577))

(assert (=> d!43669 d!43887))

(declare-fun d!43889 () Bool)

(declare-fun e!91676 () Bool)

(assert (=> d!43889 e!91676))

(declare-fun res!67135 () Bool)

(assert (=> d!43889 (=> res!67135 e!91676)))

(declare-fun lt!73624 () Bool)

(assert (=> d!43889 (= res!67135 (not lt!73624))))

(declare-fun lt!73623 () Bool)

(assert (=> d!43889 (= lt!73624 lt!73623)))

(declare-fun lt!73622 () Unit!4393)

(declare-fun e!91675 () Unit!4393)

(assert (=> d!43889 (= lt!73622 e!91675)))

(declare-fun c!26402 () Bool)

(assert (=> d!43889 (= c!26402 lt!73623)))

(assert (=> d!43889 (= lt!73623 (containsKey!178 (toList!871 lt!73015) lt!73021))))

(assert (=> d!43889 (= (contains!910 lt!73015 lt!73021) lt!73624)))

(declare-fun b!140635 () Bool)

(declare-fun lt!73621 () Unit!4393)

(assert (=> b!140635 (= e!91675 lt!73621)))

(assert (=> b!140635 (= lt!73621 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73015) lt!73021))))

(assert (=> b!140635 (isDefined!128 (getValueByKey!174 (toList!871 lt!73015) lt!73021))))

(declare-fun b!140636 () Bool)

(declare-fun Unit!4426 () Unit!4393)

(assert (=> b!140636 (= e!91675 Unit!4426)))

(declare-fun b!140637 () Bool)

(assert (=> b!140637 (= e!91676 (isDefined!128 (getValueByKey!174 (toList!871 lt!73015) lt!73021)))))

(assert (= (and d!43889 c!26402) b!140635))

(assert (= (and d!43889 (not c!26402)) b!140636))

(assert (= (and d!43889 (not res!67135)) b!140637))

(declare-fun m!167875 () Bool)

(assert (=> d!43889 m!167875))

(declare-fun m!167877 () Bool)

(assert (=> b!140635 m!167877))

(declare-fun m!167879 () Bool)

(assert (=> b!140635 m!167879))

(assert (=> b!140635 m!167879))

(declare-fun m!167881 () Bool)

(assert (=> b!140635 m!167881))

(assert (=> b!140637 m!167879))

(assert (=> b!140637 m!167879))

(assert (=> b!140637 m!167881))

(assert (=> d!43669 d!43889))

(declare-fun d!43891 () Bool)

(assert (=> d!43891 (= (apply!120 lt!73128 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5866 () Bool)

(assert (= bs!5866 d!43891))

(assert (=> bs!5866 m!166699))

(declare-fun m!167883 () Bool)

(assert (=> bs!5866 m!167883))

(assert (=> bs!5866 m!167883))

(declare-fun m!167885 () Bool)

(assert (=> bs!5866 m!167885))

(assert (=> b!140024 d!43891))

(declare-fun c!26403 () Bool)

(declare-fun d!43893 () Bool)

(assert (=> d!43893 (= c!26403 ((_ is ValueCellFull!1121) (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000)))))

(declare-fun e!91677 () V!3553)

(assert (=> d!43893 (= (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91677)))

(declare-fun b!140638 () Bool)

(assert (=> b!140638 (= e!91677 (get!1526 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140639 () Bool)

(assert (=> b!140639 (= e!91677 (get!1527 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43893 c!26403) b!140638))

(assert (= (and d!43893 (not c!26403)) b!140639))

(assert (=> b!140638 m!166705))

(assert (=> b!140638 m!166703))

(declare-fun m!167887 () Bool)

(assert (=> b!140638 m!167887))

(assert (=> b!140639 m!166705))

(assert (=> b!140639 m!166703))

(declare-fun m!167889 () Bool)

(assert (=> b!140639 m!167889))

(assert (=> b!140024 d!43893))

(declare-fun d!43895 () Bool)

(declare-fun lt!73625 () Bool)

(assert (=> d!43895 (= lt!73625 (select (content!138 (toList!871 lt!73401)) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91679 () Bool)

(assert (=> d!43895 (= lt!73625 e!91679)))

(declare-fun res!67136 () Bool)

(assert (=> d!43895 (=> (not res!67136) (not e!91679))))

(assert (=> d!43895 (= res!67136 ((_ is Cons!1735) (toList!871 lt!73401)))))

(assert (=> d!43895 (= (contains!914 (toList!871 lt!73401) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73625)))

(declare-fun b!140640 () Bool)

(declare-fun e!91678 () Bool)

(assert (=> b!140640 (= e!91679 e!91678)))

(declare-fun res!67137 () Bool)

(assert (=> b!140640 (=> res!67137 e!91678)))

(assert (=> b!140640 (= res!67137 (= (h!2342 (toList!871 lt!73401)) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!140641 () Bool)

(assert (=> b!140641 (= e!91678 (contains!914 (t!6314 (toList!871 lt!73401)) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43895 res!67136) b!140640))

(assert (= (and b!140640 (not res!67137)) b!140641))

(declare-fun m!167891 () Bool)

(assert (=> d!43895 m!167891))

(declare-fun m!167893 () Bool)

(assert (=> d!43895 m!167893))

(declare-fun m!167895 () Bool)

(assert (=> b!140641 m!167895))

(assert (=> b!140324 d!43895))

(declare-fun d!43897 () Bool)

(declare-fun e!91681 () Bool)

(assert (=> d!43897 e!91681))

(declare-fun res!67138 () Bool)

(assert (=> d!43897 (=> res!67138 e!91681)))

(declare-fun lt!73629 () Bool)

(assert (=> d!43897 (= res!67138 (not lt!73629))))

(declare-fun lt!73628 () Bool)

(assert (=> d!43897 (= lt!73629 lt!73628)))

(declare-fun lt!73627 () Unit!4393)

(declare-fun e!91680 () Unit!4393)

(assert (=> d!43897 (= lt!73627 e!91680)))

(declare-fun c!26404 () Bool)

(assert (=> d!43897 (= c!26404 lt!73628)))

(assert (=> d!43897 (= lt!73628 (containsKey!178 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!43897 (= (contains!910 lt!73394 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73629)))

(declare-fun b!140642 () Bool)

(declare-fun lt!73626 () Unit!4393)

(assert (=> b!140642 (= e!91680 lt!73626)))

(assert (=> b!140642 (= lt!73626 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> b!140642 (isDefined!128 (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140643 () Bool)

(declare-fun Unit!4427 () Unit!4393)

(assert (=> b!140643 (= e!91680 Unit!4427)))

(declare-fun b!140644 () Bool)

(assert (=> b!140644 (= e!91681 (isDefined!128 (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!43897 c!26404) b!140642))

(assert (= (and d!43897 (not c!26404)) b!140643))

(assert (= (and d!43897 (not res!67138)) b!140644))

(declare-fun m!167897 () Bool)

(assert (=> d!43897 m!167897))

(declare-fun m!167899 () Bool)

(assert (=> b!140642 m!167899))

(assert (=> b!140642 m!167143))

(assert (=> b!140642 m!167143))

(declare-fun m!167901 () Bool)

(assert (=> b!140642 m!167901))

(assert (=> b!140644 m!167143))

(assert (=> b!140644 m!167143))

(assert (=> b!140644 m!167901))

(assert (=> d!43659 d!43897))

(declare-fun b!140648 () Bool)

(declare-fun e!91683 () Option!180)

(assert (=> b!140648 (= e!91683 None!178)))

(declare-fun b!140646 () Bool)

(declare-fun e!91682 () Option!180)

(assert (=> b!140646 (= e!91682 e!91683)))

(declare-fun c!26406 () Bool)

(assert (=> b!140646 (= c!26406 (and ((_ is Cons!1735) lt!73395) (not (= (_1!1339 (h!2342 lt!73395)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140645 () Bool)

(assert (=> b!140645 (= e!91682 (Some!179 (_2!1339 (h!2342 lt!73395))))))

(declare-fun d!43899 () Bool)

(declare-fun c!26405 () Bool)

(assert (=> d!43899 (= c!26405 (and ((_ is Cons!1735) lt!73395) (= (_1!1339 (h!2342 lt!73395)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43899 (= (getValueByKey!174 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91682)))

(declare-fun b!140647 () Bool)

(assert (=> b!140647 (= e!91683 (getValueByKey!174 (t!6314 lt!73395) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!43899 c!26405) b!140645))

(assert (= (and d!43899 (not c!26405)) b!140646))

(assert (= (and b!140646 c!26406) b!140647))

(assert (= (and b!140646 (not c!26406)) b!140648))

(declare-fun m!167903 () Bool)

(assert (=> b!140647 m!167903))

(assert (=> d!43659 d!43899))

(declare-fun d!43901 () Bool)

(assert (=> d!43901 (= (getValueByKey!174 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73630 () Unit!4393)

(assert (=> d!43901 (= lt!73630 (choose!872 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!91684 () Bool)

(assert (=> d!43901 e!91684))

(declare-fun res!67139 () Bool)

(assert (=> d!43901 (=> (not res!67139) (not e!91684))))

(assert (=> d!43901 (= res!67139 (isStrictlySorted!320 lt!73395))))

(assert (=> d!43901 (= (lemmaContainsTupThenGetReturnValue!91 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73630)))

(declare-fun b!140649 () Bool)

(declare-fun res!67140 () Bool)

(assert (=> b!140649 (=> (not res!67140) (not e!91684))))

(assert (=> b!140649 (= res!67140 (containsKey!178 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140650 () Bool)

(assert (=> b!140650 (= e!91684 (contains!914 lt!73395 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!43901 res!67139) b!140649))

(assert (= (and b!140649 res!67140) b!140650))

(assert (=> d!43901 m!167137))

(declare-fun m!167905 () Bool)

(assert (=> d!43901 m!167905))

(declare-fun m!167907 () Bool)

(assert (=> d!43901 m!167907))

(declare-fun m!167909 () Bool)

(assert (=> b!140649 m!167909))

(declare-fun m!167911 () Bool)

(assert (=> b!140650 m!167911))

(assert (=> d!43659 d!43901))

(declare-fun b!140651 () Bool)

(declare-fun e!91687 () List!1739)

(declare-fun call!15593 () List!1739)

(assert (=> b!140651 (= e!91687 call!15593)))

(declare-fun b!140652 () Bool)

(declare-fun e!91685 () List!1739)

(declare-fun call!15592 () List!1739)

(assert (=> b!140652 (= e!91685 call!15592)))

(declare-fun e!91688 () Bool)

(declare-fun lt!73631 () List!1739)

(declare-fun b!140653 () Bool)

(assert (=> b!140653 (= e!91688 (contains!914 lt!73631 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun c!26410 () Bool)

(declare-fun bm!15588 () Bool)

(declare-fun e!91686 () List!1739)

(assert (=> bm!15588 (= call!15593 ($colon$colon!93 e!91686 (ite c!26410 (h!2342 (toList!871 lt!73005)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26407 () Bool)

(assert (=> bm!15588 (= c!26407 c!26410)))

(declare-fun bm!15589 () Bool)

(declare-fun call!15591 () List!1739)

(assert (=> bm!15589 (= call!15592 call!15591)))

(declare-fun b!140654 () Bool)

(declare-fun res!67141 () Bool)

(assert (=> b!140654 (=> (not res!67141) (not e!91688))))

(assert (=> b!140654 (= res!67141 (containsKey!178 lt!73631 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!43903 () Bool)

(assert (=> d!43903 e!91688))

(declare-fun res!67142 () Bool)

(assert (=> d!43903 (=> (not res!67142) (not e!91688))))

(assert (=> d!43903 (= res!67142 (isStrictlySorted!320 lt!73631))))

(assert (=> d!43903 (= lt!73631 e!91687)))

(assert (=> d!43903 (= c!26410 (and ((_ is Cons!1735) (toList!871 lt!73005)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73005))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43903 (isStrictlySorted!320 (toList!871 lt!73005))))

(assert (=> d!43903 (= (insertStrictlySorted!94 (toList!871 lt!73005) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73631)))

(declare-fun b!140655 () Bool)

(declare-fun c!26408 () Bool)

(declare-fun c!26409 () Bool)

(assert (=> b!140655 (= e!91686 (ite c!26409 (t!6314 (toList!871 lt!73005)) (ite c!26408 (Cons!1735 (h!2342 (toList!871 lt!73005)) (t!6314 (toList!871 lt!73005))) Nil!1736)))))

(declare-fun b!140656 () Bool)

(assert (=> b!140656 (= c!26408 (and ((_ is Cons!1735) (toList!871 lt!73005)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73005))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91689 () List!1739)

(assert (=> b!140656 (= e!91689 e!91685)))

(declare-fun b!140657 () Bool)

(assert (=> b!140657 (= e!91685 call!15592)))

(declare-fun b!140658 () Bool)

(assert (=> b!140658 (= e!91686 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73005)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15590 () Bool)

(assert (=> bm!15590 (= call!15591 call!15593)))

(declare-fun b!140659 () Bool)

(assert (=> b!140659 (= e!91687 e!91689)))

(assert (=> b!140659 (= c!26409 (and ((_ is Cons!1735) (toList!871 lt!73005)) (= (_1!1339 (h!2342 (toList!871 lt!73005))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140660 () Bool)

(assert (=> b!140660 (= e!91689 call!15591)))

(assert (= (and d!43903 c!26410) b!140651))

(assert (= (and d!43903 (not c!26410)) b!140659))

(assert (= (and b!140659 c!26409) b!140660))

(assert (= (and b!140659 (not c!26409)) b!140656))

(assert (= (and b!140656 c!26408) b!140652))

(assert (= (and b!140656 (not c!26408)) b!140657))

(assert (= (or b!140652 b!140657) bm!15589))

(assert (= (or b!140660 bm!15589) bm!15590))

(assert (= (or b!140651 bm!15590) bm!15588))

(assert (= (and bm!15588 c!26407) b!140658))

(assert (= (and bm!15588 (not c!26407)) b!140655))

(assert (= (and d!43903 res!67142) b!140654))

(assert (= (and b!140654 res!67141) b!140653))

(declare-fun m!167913 () Bool)

(assert (=> b!140654 m!167913))

(declare-fun m!167915 () Bool)

(assert (=> b!140658 m!167915))

(declare-fun m!167917 () Bool)

(assert (=> bm!15588 m!167917))

(declare-fun m!167919 () Bool)

(assert (=> b!140653 m!167919))

(declare-fun m!167921 () Bool)

(assert (=> d!43903 m!167921))

(declare-fun m!167923 () Bool)

(assert (=> d!43903 m!167923))

(assert (=> d!43659 d!43903))

(declare-fun d!43905 () Bool)

(assert (=> d!43905 (= (isEmpty!422 (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not ((_ is Some!179) (getValueByKey!174 (toList!871 lt!72917) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(assert (=> d!43689 d!43905))

(declare-fun b!140661 () Bool)

(declare-fun e!91690 () Bool)

(declare-fun e!91692 () Bool)

(assert (=> b!140661 (= e!91690 e!91692)))

(declare-fun c!26411 () Bool)

(assert (=> b!140661 (= c!26411 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140662 () Bool)

(declare-fun e!91693 () Bool)

(assert (=> b!140662 (= e!91693 e!91690)))

(declare-fun res!67143 () Bool)

(assert (=> b!140662 (=> (not res!67143) (not e!91690))))

(declare-fun e!91691 () Bool)

(assert (=> b!140662 (= res!67143 (not e!91691))))

(declare-fun res!67144 () Bool)

(assert (=> b!140662 (=> (not res!67144) (not e!91691))))

(assert (=> b!140662 (= res!67144 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140663 () Bool)

(declare-fun call!15594 () Bool)

(assert (=> b!140663 (= e!91692 call!15594)))

(declare-fun d!43907 () Bool)

(declare-fun res!67145 () Bool)

(assert (=> d!43907 (=> res!67145 e!91693)))

(assert (=> d!43907 (= res!67145 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43907 (= (arrayNoDuplicates!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) e!91693)))

(declare-fun b!140664 () Bool)

(assert (=> b!140664 (= e!91691 (contains!913 (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140665 () Bool)

(assert (=> b!140665 (= e!91692 call!15594)))

(declare-fun bm!15591 () Bool)

(assert (=> bm!15591 (= call!15594 (arrayNoDuplicates!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26411 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737))))))

(assert (= (and d!43907 (not res!67145)) b!140662))

(assert (= (and b!140662 res!67144) b!140664))

(assert (= (and b!140662 res!67143) b!140661))

(assert (= (and b!140661 c!26411) b!140663))

(assert (= (and b!140661 (not c!26411)) b!140665))

(assert (= (or b!140663 b!140665) bm!15591))

(declare-fun m!167925 () Bool)

(assert (=> b!140661 m!167925))

(assert (=> b!140661 m!167925))

(declare-fun m!167927 () Bool)

(assert (=> b!140661 m!167927))

(assert (=> b!140662 m!167925))

(assert (=> b!140662 m!167925))

(assert (=> b!140662 m!167927))

(assert (=> b!140664 m!167925))

(assert (=> b!140664 m!167925))

(declare-fun m!167929 () Bool)

(assert (=> b!140664 m!167929))

(assert (=> bm!15591 m!167925))

(declare-fun m!167931 () Bool)

(assert (=> bm!15591 m!167931))

(assert (=> bm!15516 d!43907))

(assert (=> b!140031 d!43699))

(declare-fun d!43909 () Bool)

(assert (=> d!43909 (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))

(assert (=> d!43909 true))

(declare-fun _$16!158 () Unit!4393)

(assert (=> d!43909 (= (choose!863 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (defaultEntry!2939 newMap!16)) _$16!158)))

(declare-fun bs!5867 () Bool)

(assert (= bs!5867 d!43909))

(assert (=> bs!5867 m!166689))

(assert (=> bs!5867 m!166633))

(assert (=> bs!5867 m!166689))

(assert (=> bs!5867 m!166633))

(assert (=> bs!5867 m!166691))

(assert (=> d!43575 d!43909))

(assert (=> d!43575 d!43719))

(declare-fun b!140669 () Bool)

(declare-fun e!91695 () Option!180)

(assert (=> b!140669 (= e!91695 None!178)))

(declare-fun b!140667 () Bool)

(declare-fun e!91694 () Option!180)

(assert (=> b!140667 (= e!91694 e!91695)))

(declare-fun c!26413 () Bool)

(assert (=> b!140667 (= c!26413 (and ((_ is Cons!1735) (toList!871 lt!73394)) (not (= (_1!1339 (h!2342 (toList!871 lt!73394))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140666 () Bool)

(assert (=> b!140666 (= e!91694 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73394)))))))

(declare-fun d!43911 () Bool)

(declare-fun c!26412 () Bool)

(assert (=> d!43911 (= c!26412 (and ((_ is Cons!1735) (toList!871 lt!73394)) (= (_1!1339 (h!2342 (toList!871 lt!73394))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43911 (= (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91694)))

(declare-fun b!140668 () Bool)

(assert (=> b!140668 (= e!91695 (getValueByKey!174 (t!6314 (toList!871 lt!73394)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!43911 c!26412) b!140666))

(assert (= (and d!43911 (not c!26412)) b!140667))

(assert (= (and b!140667 c!26413) b!140668))

(assert (= (and b!140667 (not c!26413)) b!140669))

(declare-fun m!167933 () Bool)

(assert (=> b!140668 m!167933))

(assert (=> b!140317 d!43911))

(declare-fun d!43913 () Bool)

(assert (=> d!43913 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140220 d!43913))

(declare-fun b!140673 () Bool)

(declare-fun e!91697 () Option!180)

(assert (=> b!140673 (= e!91697 None!178)))

(declare-fun b!140671 () Bool)

(declare-fun e!91696 () Option!180)

(assert (=> b!140671 (= e!91696 e!91697)))

(declare-fun c!26415 () Bool)

(assert (=> b!140671 (= c!26415 (and ((_ is Cons!1735) (toList!871 lt!73386)) (not (= (_1!1339 (h!2342 (toList!871 lt!73386))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!140670 () Bool)

(assert (=> b!140670 (= e!91696 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73386)))))))

(declare-fun d!43915 () Bool)

(declare-fun c!26414 () Bool)

(assert (=> d!43915 (= c!26414 (and ((_ is Cons!1735) (toList!871 lt!73386)) (= (_1!1339 (h!2342 (toList!871 lt!73386))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43915 (= (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91696)))

(declare-fun b!140672 () Bool)

(assert (=> b!140672 (= e!91697 (getValueByKey!174 (t!6314 (toList!871 lt!73386)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43915 c!26414) b!140670))

(assert (= (and d!43915 (not c!26414)) b!140671))

(assert (= (and b!140671 c!26415) b!140672))

(assert (= (and b!140671 (not c!26415)) b!140673))

(declare-fun m!167935 () Bool)

(assert (=> b!140672 m!167935))

(assert (=> b!140313 d!43915))

(assert (=> b!140190 d!43767))

(declare-fun b!140674 () Bool)

(declare-fun e!91699 () (_ BitVec 32))

(declare-fun e!91698 () (_ BitVec 32))

(assert (=> b!140674 (= e!91699 e!91698)))

(declare-fun c!26417 () Bool)

(assert (=> b!140674 (= c!26417 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140675 () Bool)

(declare-fun call!15595 () (_ BitVec 32))

(assert (=> b!140675 (= e!91698 (bvadd #b00000000000000000000000000000001 call!15595))))

(declare-fun d!43917 () Bool)

(declare-fun lt!73632 () (_ BitVec 32))

(assert (=> d!43917 (and (bvsge lt!73632 #b00000000000000000000000000000000) (bvsle lt!73632 (bvsub (size!2575 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!43917 (= lt!73632 e!91699)))

(declare-fun c!26416 () Bool)

(assert (=> d!43917 (= c!26416 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43917 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 newMap!16)) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43917 (= (arrayCountValidKeys!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))) lt!73632)))

(declare-fun b!140676 () Bool)

(assert (=> b!140676 (= e!91699 #b00000000000000000000000000000000)))

(declare-fun b!140677 () Bool)

(assert (=> b!140677 (= e!91698 call!15595)))

(declare-fun bm!15592 () Bool)

(assert (=> bm!15592 (= call!15595 (arrayCountValidKeys!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (= (and d!43917 c!26416) b!140676))

(assert (= (and d!43917 (not c!26416)) b!140674))

(assert (= (and b!140674 c!26417) b!140675))

(assert (= (and b!140674 (not c!26417)) b!140677))

(assert (= (or b!140675 b!140677) bm!15592))

(assert (=> b!140674 m!167925))

(assert (=> b!140674 m!167925))

(assert (=> b!140674 m!167927))

(declare-fun m!167937 () Bool)

(assert (=> bm!15592 m!167937))

(assert (=> bm!15526 d!43917))

(declare-fun d!43919 () Bool)

(declare-fun e!91700 () Bool)

(assert (=> d!43919 e!91700))

(declare-fun res!67147 () Bool)

(assert (=> d!43919 (=> (not res!67147) (not e!91700))))

(declare-fun lt!73635 () ListLongMap!1711)

(assert (=> d!43919 (= res!67147 (contains!910 lt!73635 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!73636 () List!1739)

(assert (=> d!43919 (= lt!73635 (ListLongMap!1712 lt!73636))))

(declare-fun lt!73633 () Unit!4393)

(declare-fun lt!73634 () Unit!4393)

(assert (=> d!43919 (= lt!73633 lt!73634)))

(assert (=> d!43919 (= (getValueByKey!174 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!43919 (= lt!73634 (lemmaContainsTupThenGetReturnValue!91 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!43919 (= lt!73636 (insertStrictlySorted!94 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!43919 (= (+!167 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!73635)))

(declare-fun b!140678 () Bool)

(declare-fun res!67146 () Bool)

(assert (=> b!140678 (=> (not res!67146) (not e!91700))))

(assert (=> b!140678 (= res!67146 (= (getValueByKey!174 (toList!871 lt!73635) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!140679 () Bool)

(assert (=> b!140679 (= e!91700 (contains!914 (toList!871 lt!73635) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!43919 res!67147) b!140678))

(assert (= (and b!140678 res!67146) b!140679))

(declare-fun m!167939 () Bool)

(assert (=> d!43919 m!167939))

(declare-fun m!167941 () Bool)

(assert (=> d!43919 m!167941))

(declare-fun m!167943 () Bool)

(assert (=> d!43919 m!167943))

(declare-fun m!167945 () Bool)

(assert (=> d!43919 m!167945))

(declare-fun m!167947 () Bool)

(assert (=> b!140678 m!167947))

(declare-fun m!167949 () Bool)

(assert (=> b!140679 m!167949))

(assert (=> bm!15523 d!43919))

(declare-fun b!140680 () Bool)

(declare-fun e!91701 () Bool)

(declare-fun e!91703 () Bool)

(assert (=> b!140680 (= e!91701 e!91703)))

(declare-fun c!26418 () Bool)

(assert (=> b!140680 (= c!26418 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140681 () Bool)

(declare-fun e!91704 () Bool)

(assert (=> b!140681 (= e!91704 e!91701)))

(declare-fun res!67148 () Bool)

(assert (=> b!140681 (=> (not res!67148) (not e!91701))))

(declare-fun e!91702 () Bool)

(assert (=> b!140681 (= res!67148 (not e!91702))))

(declare-fun res!67149 () Bool)

(assert (=> b!140681 (=> (not res!67149) (not e!91702))))

(assert (=> b!140681 (= res!67149 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140682 () Bool)

(declare-fun call!15596 () Bool)

(assert (=> b!140682 (= e!91703 call!15596)))

(declare-fun d!43921 () Bool)

(declare-fun res!67150 () Bool)

(assert (=> d!43921 (=> res!67150 e!91704)))

(assert (=> d!43921 (= res!67150 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43921 (= (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) e!91704)))

(declare-fun b!140683 () Bool)

(assert (=> b!140683 (= e!91702 (contains!913 (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140684 () Bool)

(assert (=> b!140684 (= e!91703 call!15596)))

(declare-fun bm!15593 () Bool)

(assert (=> bm!15593 (= call!15596 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26418 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))))))

(assert (= (and d!43921 (not res!67150)) b!140681))

(assert (= (and b!140681 res!67149) b!140683))

(assert (= (and b!140681 res!67148) b!140680))

(assert (= (and b!140680 c!26418) b!140682))

(assert (= (and b!140680 (not c!26418)) b!140684))

(assert (= (or b!140682 b!140684) bm!15593))

(declare-fun m!167951 () Bool)

(assert (=> b!140680 m!167951))

(assert (=> b!140680 m!167951))

(declare-fun m!167953 () Bool)

(assert (=> b!140680 m!167953))

(assert (=> b!140681 m!167951))

(assert (=> b!140681 m!167951))

(assert (=> b!140681 m!167953))

(assert (=> b!140683 m!167951))

(assert (=> b!140683 m!167951))

(declare-fun m!167955 () Bool)

(assert (=> b!140683 m!167955))

(assert (=> bm!15593 m!167951))

(declare-fun m!167957 () Bool)

(assert (=> bm!15593 m!167957))

(assert (=> bm!15543 d!43921))

(assert (=> bm!15552 d!43643))

(assert (=> bm!15522 d!43765))

(declare-fun lt!73637 () Bool)

(declare-fun d!43923 () Bool)

(assert (=> d!43923 (= lt!73637 (select (content!138 (toList!871 lt!73394)) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!91706 () Bool)

(assert (=> d!43923 (= lt!73637 e!91706)))

(declare-fun res!67151 () Bool)

(assert (=> d!43923 (=> (not res!67151) (not e!91706))))

(assert (=> d!43923 (= res!67151 ((_ is Cons!1735) (toList!871 lt!73394)))))

(assert (=> d!43923 (= (contains!914 (toList!871 lt!73394) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73637)))

(declare-fun b!140685 () Bool)

(declare-fun e!91705 () Bool)

(assert (=> b!140685 (= e!91706 e!91705)))

(declare-fun res!67152 () Bool)

(assert (=> b!140685 (=> res!67152 e!91705)))

(assert (=> b!140685 (= res!67152 (= (h!2342 (toList!871 lt!73394)) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!140686 () Bool)

(assert (=> b!140686 (= e!91705 (contains!914 (t!6314 (toList!871 lt!73394)) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!43923 res!67151) b!140685))

(assert (= (and b!140685 (not res!67152)) b!140686))

(declare-fun m!167959 () Bool)

(assert (=> d!43923 m!167959))

(declare-fun m!167961 () Bool)

(assert (=> d!43923 m!167961))

(declare-fun m!167963 () Bool)

(assert (=> b!140686 m!167963))

(assert (=> b!140318 d!43923))

(declare-fun d!43925 () Bool)

(declare-fun e!91708 () Bool)

(assert (=> d!43925 e!91708))

(declare-fun res!67153 () Bool)

(assert (=> d!43925 (=> res!67153 e!91708)))

(declare-fun lt!73641 () Bool)

(assert (=> d!43925 (= res!67153 (not lt!73641))))

(declare-fun lt!73640 () Bool)

(assert (=> d!43925 (= lt!73641 lt!73640)))

(declare-fun lt!73639 () Unit!4393)

(declare-fun e!91707 () Unit!4393)

(assert (=> d!43925 (= lt!73639 e!91707)))

(declare-fun c!26419 () Bool)

(assert (=> d!43925 (= c!26419 lt!73640)))

(assert (=> d!43925 (= lt!73640 (containsKey!178 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (=> d!43925 (= (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) lt!73641)))

(declare-fun b!140687 () Bool)

(declare-fun lt!73638 () Unit!4393)

(assert (=> b!140687 (= e!91707 lt!73638)))

(assert (=> b!140687 (= lt!73638 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (=> b!140687 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(declare-fun b!140688 () Bool)

(declare-fun Unit!4428 () Unit!4393)

(assert (=> b!140688 (= e!91707 Unit!4428)))

(declare-fun b!140689 () Bool)

(assert (=> b!140689 (= e!91708 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (= (and d!43925 c!26419) b!140687))

(assert (= (and d!43925 (not c!26419)) b!140688))

(assert (= (and d!43925 (not res!67153)) b!140689))

(assert (=> d!43925 m!166633))

(declare-fun m!167965 () Bool)

(assert (=> d!43925 m!167965))

(assert (=> b!140687 m!166633))

(declare-fun m!167967 () Bool)

(assert (=> b!140687 m!167967))

(assert (=> b!140687 m!166633))

(declare-fun m!167969 () Bool)

(assert (=> b!140687 m!167969))

(assert (=> b!140687 m!167969))

(declare-fun m!167971 () Bool)

(assert (=> b!140687 m!167971))

(assert (=> b!140689 m!166633))

(assert (=> b!140689 m!167969))

(assert (=> b!140689 m!167969))

(assert (=> b!140689 m!167971))

(assert (=> b!140012 d!43925))

(declare-fun bm!15594 () Bool)

(declare-fun call!15597 () ListLongMap!1711)

(declare-fun call!15599 () ListLongMap!1711)

(assert (=> bm!15594 (= call!15597 call!15599)))

(declare-fun bm!15595 () Bool)

(declare-fun call!15602 () Bool)

(declare-fun lt!73645 () ListLongMap!1711)

(assert (=> bm!15595 (= call!15602 (contains!910 lt!73645 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140691 () Bool)

(declare-fun e!91716 () Bool)

(assert (=> b!140691 (= e!91716 (not call!15602))))

(declare-fun b!140692 () Bool)

(declare-fun e!91714 () ListLongMap!1711)

(assert (=> b!140692 (= e!91714 call!15597)))

(declare-fun b!140693 () Bool)

(declare-fun e!91713 () Bool)

(assert (=> b!140693 (= e!91713 (= (apply!120 lt!73645 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140694 () Bool)

(declare-fun e!91718 () Bool)

(assert (=> b!140694 (= e!91718 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140695 () Bool)

(declare-fun e!91719 () Bool)

(declare-fun e!91712 () Bool)

(assert (=> b!140695 (= e!91719 e!91712)))

(declare-fun c!26422 () Bool)

(assert (=> b!140695 (= c!26422 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140696 () Bool)

(declare-fun res!67155 () Bool)

(assert (=> b!140696 (=> (not res!67155) (not e!91719))))

(declare-fun e!91715 () Bool)

(assert (=> b!140696 (= res!67155 e!91715)))

(declare-fun res!67158 () Bool)

(assert (=> b!140696 (=> res!67158 e!91715)))

(assert (=> b!140696 (= res!67158 (not e!91718))))

(declare-fun res!67161 () Bool)

(assert (=> b!140696 (=> (not res!67161) (not e!91718))))

(assert (=> b!140696 (= res!67161 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15596 () Bool)

(declare-fun call!15603 () ListLongMap!1711)

(declare-fun call!15600 () ListLongMap!1711)

(assert (=> bm!15596 (= call!15603 call!15600)))

(declare-fun b!140697 () Bool)

(declare-fun e!91710 () Bool)

(assert (=> b!140697 (= e!91710 (= (apply!120 lt!73645 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!140698 () Bool)

(declare-fun e!91711 () Bool)

(assert (=> b!140698 (= e!91711 (= (apply!120 lt!73645 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140698 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 lt!73089)))))

(assert (=> b!140698 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140699 () Bool)

(declare-fun e!91721 () ListLongMap!1711)

(assert (=> b!140699 (= e!91721 e!91714)))

(declare-fun c!26424 () Bool)

(assert (=> b!140699 (= c!26424 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140700 () Bool)

(declare-fun e!91709 () Unit!4393)

(declare-fun lt!73661 () Unit!4393)

(assert (=> b!140700 (= e!91709 lt!73661)))

(declare-fun lt!73657 () ListLongMap!1711)

(assert (=> b!140700 (= lt!73657 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73646 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73646 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73663 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73663 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73642 () Unit!4393)

(assert (=> b!140700 (= lt!73642 (addStillContains!96 lt!73657 lt!73646 (zeroValue!2789 newMap!16) lt!73663))))

(assert (=> b!140700 (contains!910 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))) lt!73663)))

(declare-fun lt!73644 () Unit!4393)

(assert (=> b!140700 (= lt!73644 lt!73642)))

(declare-fun lt!73647 () ListLongMap!1711)

(assert (=> b!140700 (= lt!73647 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73659 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73659 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73654 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73654 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73655 () Unit!4393)

(assert (=> b!140700 (= lt!73655 (addApplyDifferent!96 lt!73647 lt!73659 (minValue!2789 newMap!16) lt!73654))))

(assert (=> b!140700 (= (apply!120 (+!167 lt!73647 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))) lt!73654) (apply!120 lt!73647 lt!73654))))

(declare-fun lt!73660 () Unit!4393)

(assert (=> b!140700 (= lt!73660 lt!73655)))

(declare-fun lt!73643 () ListLongMap!1711)

(assert (=> b!140700 (= lt!73643 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73652 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73652 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73662 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73662 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73651 () Unit!4393)

(assert (=> b!140700 (= lt!73651 (addApplyDifferent!96 lt!73643 lt!73652 (zeroValue!2789 newMap!16) lt!73662))))

(assert (=> b!140700 (= (apply!120 (+!167 lt!73643 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))) lt!73662) (apply!120 lt!73643 lt!73662))))

(declare-fun lt!73648 () Unit!4393)

(assert (=> b!140700 (= lt!73648 lt!73651)))

(declare-fun lt!73658 () ListLongMap!1711)

(assert (=> b!140700 (= lt!73658 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73656 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73656 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73653 () (_ BitVec 64))

(assert (=> b!140700 (= lt!73653 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140700 (= lt!73661 (addApplyDifferent!96 lt!73658 lt!73656 (minValue!2789 newMap!16) lt!73653))))

(assert (=> b!140700 (= (apply!120 (+!167 lt!73658 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))) lt!73653) (apply!120 lt!73658 lt!73653))))

(declare-fun d!43927 () Bool)

(assert (=> d!43927 e!91719))

(declare-fun res!67160 () Bool)

(assert (=> d!43927 (=> (not res!67160) (not e!91719))))

(assert (=> d!43927 (= res!67160 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73649 () ListLongMap!1711)

(assert (=> d!43927 (= lt!73645 lt!73649)))

(declare-fun lt!73650 () Unit!4393)

(assert (=> d!43927 (= lt!73650 e!91709)))

(declare-fun c!26420 () Bool)

(declare-fun e!91720 () Bool)

(assert (=> d!43927 (= c!26420 e!91720)))

(declare-fun res!67157 () Bool)

(assert (=> d!43927 (=> (not res!67157) (not e!91720))))

(assert (=> d!43927 (= res!67157 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43927 (= lt!73649 e!91721)))

(declare-fun c!26421 () Bool)

(assert (=> d!43927 (= c!26421 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43927 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43927 (= (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73645)))

(declare-fun b!140690 () Bool)

(declare-fun e!91717 () ListLongMap!1711)

(declare-fun call!15598 () ListLongMap!1711)

(assert (=> b!140690 (= e!91717 call!15598)))

(declare-fun b!140701 () Bool)

(assert (=> b!140701 (= e!91721 (+!167 call!15599 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!140702 () Bool)

(assert (=> b!140702 (= e!91716 e!91710)))

(declare-fun res!67156 () Bool)

(assert (=> b!140702 (= res!67156 call!15602)))

(assert (=> b!140702 (=> (not res!67156) (not e!91710))))

(declare-fun bm!15597 () Bool)

(assert (=> bm!15597 (= call!15598 call!15603)))

(declare-fun b!140703 () Bool)

(declare-fun res!67154 () Bool)

(assert (=> b!140703 (=> (not res!67154) (not e!91719))))

(assert (=> b!140703 (= res!67154 e!91716)))

(declare-fun c!26425 () Bool)

(assert (=> b!140703 (= c!26425 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140704 () Bool)

(declare-fun c!26423 () Bool)

(assert (=> b!140704 (= c!26423 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140704 (= e!91714 e!91717)))

(declare-fun b!140705 () Bool)

(assert (=> b!140705 (= e!91720 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15598 () Bool)

(declare-fun call!15601 () Bool)

(assert (=> bm!15598 (= call!15601 (contains!910 lt!73645 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140706 () Bool)

(assert (=> b!140706 (= e!91717 call!15597)))

(declare-fun b!140707 () Bool)

(assert (=> b!140707 (= e!91712 (not call!15601))))

(declare-fun bm!15599 () Bool)

(assert (=> bm!15599 (= call!15600 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140708 () Bool)

(assert (=> b!140708 (= e!91712 e!91713)))

(declare-fun res!67159 () Bool)

(assert (=> b!140708 (= res!67159 call!15601)))

(assert (=> b!140708 (=> (not res!67159) (not e!91713))))

(declare-fun b!140709 () Bool)

(assert (=> b!140709 (= e!91715 e!91711)))

(declare-fun res!67162 () Bool)

(assert (=> b!140709 (=> (not res!67162) (not e!91711))))

(assert (=> b!140709 (= res!67162 (contains!910 lt!73645 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140709 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140710 () Bool)

(declare-fun Unit!4429 () Unit!4393)

(assert (=> b!140710 (= e!91709 Unit!4429)))

(declare-fun bm!15600 () Bool)

(assert (=> bm!15600 (= call!15599 (+!167 (ite c!26421 call!15600 (ite c!26424 call!15603 call!15598)) (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!43927 c!26421) b!140701))

(assert (= (and d!43927 (not c!26421)) b!140699))

(assert (= (and b!140699 c!26424) b!140692))

(assert (= (and b!140699 (not c!26424)) b!140704))

(assert (= (and b!140704 c!26423) b!140706))

(assert (= (and b!140704 (not c!26423)) b!140690))

(assert (= (or b!140706 b!140690) bm!15597))

(assert (= (or b!140692 bm!15597) bm!15596))

(assert (= (or b!140692 b!140706) bm!15594))

(assert (= (or b!140701 bm!15596) bm!15599))

(assert (= (or b!140701 bm!15594) bm!15600))

(assert (= (and d!43927 res!67157) b!140705))

(assert (= (and d!43927 c!26420) b!140700))

(assert (= (and d!43927 (not c!26420)) b!140710))

(assert (= (and d!43927 res!67160) b!140696))

(assert (= (and b!140696 res!67161) b!140694))

(assert (= (and b!140696 (not res!67158)) b!140709))

(assert (= (and b!140709 res!67162) b!140698))

(assert (= (and b!140696 res!67155) b!140703))

(assert (= (and b!140703 c!26425) b!140702))

(assert (= (and b!140703 (not c!26425)) b!140691))

(assert (= (and b!140702 res!67156) b!140697))

(assert (= (or b!140702 b!140691) bm!15595))

(assert (= (and b!140703 res!67154) b!140695))

(assert (= (and b!140695 c!26422) b!140708))

(assert (= (and b!140695 (not c!26422)) b!140707))

(assert (= (and b!140708 res!67159) b!140693))

(assert (= (or b!140708 b!140707) bm!15598))

(declare-fun b_lambda!6287 () Bool)

(assert (=> (not b_lambda!6287) (not b!140698)))

(assert (=> b!140698 t!6328))

(declare-fun b_and!8781 () Bool)

(assert (= b_and!8777 (and (=> t!6328 result!4187) b_and!8781)))

(assert (=> b!140698 t!6330))

(declare-fun b_and!8783 () Bool)

(assert (= b_and!8779 (and (=> t!6330 result!4189) b_and!8783)))

(assert (=> b!140705 m!166699))

(assert (=> b!140705 m!166699))

(assert (=> b!140705 m!166701))

(assert (=> b!140698 m!166703))

(declare-fun m!167973 () Bool)

(assert (=> b!140698 m!167973))

(assert (=> b!140698 m!166703))

(declare-fun m!167975 () Bool)

(assert (=> b!140698 m!167975))

(assert (=> b!140698 m!166699))

(assert (=> b!140698 m!166699))

(declare-fun m!167977 () Bool)

(assert (=> b!140698 m!167977))

(assert (=> b!140698 m!167973))

(declare-fun m!167979 () Bool)

(assert (=> bm!15595 m!167979))

(assert (=> b!140709 m!166699))

(assert (=> b!140709 m!166699))

(declare-fun m!167981 () Bool)

(assert (=> b!140709 m!167981))

(declare-fun m!167983 () Bool)

(assert (=> b!140693 m!167983))

(assert (=> d!43927 m!166687))

(declare-fun m!167985 () Bool)

(assert (=> bm!15598 m!167985))

(declare-fun m!167987 () Bool)

(assert (=> bm!15600 m!167987))

(declare-fun m!167989 () Bool)

(assert (=> bm!15599 m!167989))

(declare-fun m!167991 () Bool)

(assert (=> b!140697 m!167991))

(declare-fun m!167993 () Bool)

(assert (=> b!140700 m!167993))

(declare-fun m!167995 () Bool)

(assert (=> b!140700 m!167995))

(declare-fun m!167997 () Bool)

(assert (=> b!140700 m!167997))

(declare-fun m!167999 () Bool)

(assert (=> b!140700 m!167999))

(declare-fun m!168001 () Bool)

(assert (=> b!140700 m!168001))

(declare-fun m!168003 () Bool)

(assert (=> b!140700 m!168003))

(assert (=> b!140700 m!167999))

(declare-fun m!168005 () Bool)

(assert (=> b!140700 m!168005))

(declare-fun m!168007 () Bool)

(assert (=> b!140700 m!168007))

(declare-fun m!168009 () Bool)

(assert (=> b!140700 m!168009))

(declare-fun m!168011 () Bool)

(assert (=> b!140700 m!168011))

(declare-fun m!168013 () Bool)

(assert (=> b!140700 m!168013))

(assert (=> b!140700 m!168003))

(declare-fun m!168015 () Bool)

(assert (=> b!140700 m!168015))

(declare-fun m!168017 () Bool)

(assert (=> b!140700 m!168017))

(assert (=> b!140700 m!168007))

(assert (=> b!140700 m!168011))

(assert (=> b!140700 m!166699))

(declare-fun m!168019 () Bool)

(assert (=> b!140700 m!168019))

(assert (=> b!140700 m!167989))

(declare-fun m!168021 () Bool)

(assert (=> b!140700 m!168021))

(assert (=> b!140694 m!166699))

(assert (=> b!140694 m!166699))

(assert (=> b!140694 m!166701))

(declare-fun m!168023 () Bool)

(assert (=> b!140701 m!168023))

(assert (=> b!140012 d!43927))

(declare-fun d!43929 () Bool)

(assert (=> d!43929 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73664 () Unit!4393)

(assert (=> d!43929 (= lt!73664 (choose!871 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91722 () Bool)

(assert (=> d!43929 e!91722))

(declare-fun res!67163 () Bool)

(assert (=> d!43929 (=> (not res!67163) (not e!91722))))

(assert (=> d!43929 (= res!67163 (isStrictlySorted!320 (toList!871 lt!73003)))))

(assert (=> d!43929 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000) lt!73664)))

(declare-fun b!140711 () Bool)

(assert (=> b!140711 (= e!91722 (containsKey!178 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43929 res!67163) b!140711))

(assert (=> d!43929 m!166941))

(assert (=> d!43929 m!166941))

(assert (=> d!43929 m!166995))

(declare-fun m!168025 () Bool)

(assert (=> d!43929 m!168025))

(assert (=> d!43929 m!167261))

(assert (=> b!140711 m!166991))

(assert (=> b!140217 d!43929))

(declare-fun d!43931 () Bool)

(assert (=> d!43931 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5868 () Bool)

(assert (= bs!5868 d!43931))

(assert (=> bs!5868 m!166941))

(declare-fun m!168027 () Bool)

(assert (=> bs!5868 m!168027))

(assert (=> b!140217 d!43931))

(declare-fun b!140715 () Bool)

(declare-fun e!91724 () Option!180)

(assert (=> b!140715 (= e!91724 None!178)))

(declare-fun b!140713 () Bool)

(declare-fun e!91723 () Option!180)

(assert (=> b!140713 (= e!91723 e!91724)))

(declare-fun c!26427 () Bool)

(assert (=> b!140713 (= c!26427 (and ((_ is Cons!1735) (toList!871 lt!73003)) (not (= (_1!1339 (h!2342 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140712 () Bool)

(assert (=> b!140712 (= e!91723 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73003)))))))

(declare-fun d!43933 () Bool)

(declare-fun c!26426 () Bool)

(assert (=> d!43933 (= c!26426 (and ((_ is Cons!1735) (toList!871 lt!73003)) (= (_1!1339 (h!2342 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43933 (= (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000) e!91723)))

(declare-fun b!140714 () Bool)

(assert (=> b!140714 (= e!91724 (getValueByKey!174 (t!6314 (toList!871 lt!73003)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43933 c!26426) b!140712))

(assert (= (and d!43933 (not c!26426)) b!140713))

(assert (= (and b!140713 c!26427) b!140714))

(assert (= (and b!140713 (not c!26427)) b!140715))

(declare-fun m!168029 () Bool)

(assert (=> b!140714 m!168029))

(assert (=> b!140217 d!43933))

(assert (=> b!140221 d!43913))

(assert (=> bm!15542 d!43643))

(declare-fun d!43935 () Bool)

(declare-fun e!91726 () Bool)

(assert (=> d!43935 e!91726))

(declare-fun res!67164 () Bool)

(assert (=> d!43935 (=> res!67164 e!91726)))

(declare-fun lt!73668 () Bool)

(assert (=> d!43935 (= res!67164 (not lt!73668))))

(declare-fun lt!73667 () Bool)

(assert (=> d!43935 (= lt!73668 lt!73667)))

(declare-fun lt!73666 () Unit!4393)

(declare-fun e!91725 () Unit!4393)

(assert (=> d!43935 (= lt!73666 e!91725)))

(declare-fun c!26428 () Bool)

(assert (=> d!43935 (= c!26428 lt!73667)))

(assert (=> d!43935 (= lt!73667 (containsKey!178 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43935 (= (contains!910 lt!73172 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73668)))

(declare-fun b!140716 () Bool)

(declare-fun lt!73665 () Unit!4393)

(assert (=> b!140716 (= e!91725 lt!73665)))

(assert (=> b!140716 (= lt!73665 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140716 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140717 () Bool)

(declare-fun Unit!4430 () Unit!4393)

(assert (=> b!140717 (= e!91725 Unit!4430)))

(declare-fun b!140718 () Bool)

(assert (=> b!140718 (= e!91726 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43935 c!26428) b!140716))

(assert (= (and d!43935 (not c!26428)) b!140717))

(assert (= (and d!43935 (not res!67164)) b!140718))

(declare-fun m!168031 () Bool)

(assert (=> d!43935 m!168031))

(declare-fun m!168033 () Bool)

(assert (=> b!140716 m!168033))

(declare-fun m!168035 () Bool)

(assert (=> b!140716 m!168035))

(assert (=> b!140716 m!168035))

(declare-fun m!168037 () Bool)

(assert (=> b!140716 m!168037))

(assert (=> b!140718 m!168035))

(assert (=> b!140718 m!168035))

(assert (=> b!140718 m!168037))

(assert (=> bm!15518 d!43935))

(declare-fun d!43937 () Bool)

(assert (=> d!43937 (= (size!2581 newMap!16) (bvadd (_size!624 newMap!16) (bvsdiv (bvadd (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140295 d!43937))

(declare-fun d!43939 () Bool)

(assert (=> d!43939 (isDefined!128 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(declare-fun lt!73669 () Unit!4393)

(assert (=> d!43939 (= lt!73669 (choose!871 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(declare-fun e!91727 () Bool)

(assert (=> d!43939 e!91727))

(declare-fun res!67165 () Bool)

(assert (=> d!43939 (=> (not res!67165) (not e!91727))))

(assert (=> d!43939 (= res!67165 (isStrictlySorted!320 (toList!871 call!15492)))))

(assert (=> d!43939 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) lt!73669)))

(declare-fun b!140719 () Bool)

(assert (=> b!140719 (= e!91727 (containsKey!178 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!43939 res!67165) b!140719))

(assert (=> d!43939 m!166633))

(assert (=> d!43939 m!166681))

(assert (=> d!43939 m!166681))

(assert (=> d!43939 m!166683))

(assert (=> d!43939 m!166633))

(declare-fun m!168039 () Bool)

(assert (=> d!43939 m!168039))

(declare-fun m!168041 () Bool)

(assert (=> d!43939 m!168041))

(assert (=> b!140719 m!166633))

(assert (=> b!140719 m!166677))

(assert (=> b!140007 d!43939))

(declare-fun d!43941 () Bool)

(assert (=> d!43941 (= (isDefined!128 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))) (not (isEmpty!422 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))))

(declare-fun bs!5869 () Bool)

(assert (= bs!5869 d!43941))

(assert (=> bs!5869 m!166681))

(declare-fun m!168043 () Bool)

(assert (=> bs!5869 m!168043))

(assert (=> b!140007 d!43941))

(declare-fun b!140723 () Bool)

(declare-fun e!91729 () Option!180)

(assert (=> b!140723 (= e!91729 None!178)))

(declare-fun b!140721 () Bool)

(declare-fun e!91728 () Option!180)

(assert (=> b!140721 (= e!91728 e!91729)))

(declare-fun c!26430 () Bool)

(assert (=> b!140721 (= c!26430 (and ((_ is Cons!1735) (toList!871 call!15492)) (not (= (_1!1339 (h!2342 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))))

(declare-fun b!140720 () Bool)

(assert (=> b!140720 (= e!91728 (Some!179 (_2!1339 (h!2342 (toList!871 call!15492)))))))

(declare-fun c!26429 () Bool)

(declare-fun d!43943 () Bool)

(assert (=> d!43943 (= c!26429 (and ((_ is Cons!1735) (toList!871 call!15492)) (= (_1!1339 (h!2342 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (=> d!43943 (= (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) e!91728)))

(declare-fun b!140722 () Bool)

(assert (=> b!140722 (= e!91729 (getValueByKey!174 (t!6314 (toList!871 call!15492)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!43943 c!26429) b!140720))

(assert (= (and d!43943 (not c!26429)) b!140721))

(assert (= (and b!140721 c!26430) b!140722))

(assert (= (and b!140721 (not c!26430)) b!140723))

(assert (=> b!140722 m!166633))

(declare-fun m!168045 () Bool)

(assert (=> b!140722 m!168045))

(assert (=> b!140007 d!43943))

(declare-fun d!43945 () Bool)

(declare-fun res!67166 () Bool)

(declare-fun e!91730 () Bool)

(assert (=> d!43945 (=> (not res!67166) (not e!91730))))

(assert (=> d!43945 (= res!67166 (simpleValid!96 (_2!1340 lt!73342)))))

(assert (=> d!43945 (= (valid!561 (_2!1340 lt!73342)) e!91730)))

(declare-fun b!140724 () Bool)

(declare-fun res!67167 () Bool)

(assert (=> b!140724 (=> (not res!67167) (not e!91730))))

(assert (=> b!140724 (= res!67167 (= (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))) (_size!624 (_2!1340 lt!73342))))))

(declare-fun b!140725 () Bool)

(declare-fun res!67168 () Bool)

(assert (=> b!140725 (=> (not res!67168) (not e!91730))))

(assert (=> b!140725 (= res!67168 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342))))))

(declare-fun b!140726 () Bool)

(assert (=> b!140726 (= e!91730 (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73342)) #b00000000000000000000000000000000 Nil!1737))))

(assert (= (and d!43945 res!67166) b!140724))

(assert (= (and b!140724 res!67167) b!140725))

(assert (= (and b!140725 res!67168) b!140726))

(declare-fun m!168047 () Bool)

(assert (=> d!43945 m!168047))

(declare-fun m!168049 () Bool)

(assert (=> b!140724 m!168049))

(declare-fun m!168051 () Bool)

(assert (=> b!140725 m!168051))

(declare-fun m!168053 () Bool)

(assert (=> b!140726 m!168053))

(assert (=> b!140272 d!43945))

(declare-fun b!140727 () Bool)

(declare-fun e!91731 () Bool)

(declare-fun e!91733 () Bool)

(assert (=> b!140727 (= e!91731 e!91733)))

(declare-fun c!26431 () Bool)

(assert (=> b!140727 (= c!26431 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!140728 () Bool)

(declare-fun e!91734 () Bool)

(assert (=> b!140728 (= e!91734 e!91731)))

(declare-fun res!67169 () Bool)

(assert (=> b!140728 (=> (not res!67169) (not e!91731))))

(declare-fun e!91732 () Bool)

(assert (=> b!140728 (= res!67169 (not e!91732))))

(declare-fun res!67170 () Bool)

(assert (=> b!140728 (=> (not res!67170) (not e!91732))))

(assert (=> b!140728 (= res!67170 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!140729 () Bool)

(declare-fun call!15604 () Bool)

(assert (=> b!140729 (= e!91733 call!15604)))

(declare-fun d!43947 () Bool)

(declare-fun res!67171 () Bool)

(assert (=> d!43947 (=> res!67171 e!91734)))

(assert (=> d!43947 (= res!67171 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!43947 (= (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73099)) #b00000000000000000000000000000000 Nil!1737) e!91734)))

(declare-fun b!140730 () Bool)

(assert (=> b!140730 (= e!91732 (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!140731 () Bool)

(assert (=> b!140731 (= e!91733 call!15604)))

(declare-fun bm!15601 () Bool)

(assert (=> bm!15601 (= call!15604 (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26431 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)))))

(assert (= (and d!43947 (not res!67171)) b!140728))

(assert (= (and b!140728 res!67170) b!140730))

(assert (= (and b!140728 res!67169) b!140727))

(assert (= (and b!140727 c!26431) b!140729))

(assert (= (and b!140727 (not c!26431)) b!140731))

(assert (= (or b!140729 b!140731) bm!15601))

(assert (=> b!140727 m!167523))

(assert (=> b!140727 m!167523))

(assert (=> b!140727 m!167525))

(assert (=> b!140728 m!167523))

(assert (=> b!140728 m!167523))

(assert (=> b!140728 m!167525))

(assert (=> b!140730 m!167523))

(assert (=> b!140730 m!167523))

(declare-fun m!168055 () Bool)

(assert (=> b!140730 m!168055))

(assert (=> bm!15601 m!167523))

(declare-fun m!168057 () Bool)

(assert (=> bm!15601 m!168057))

(assert (=> b!140229 d!43947))

(declare-fun d!43949 () Bool)

(declare-fun e!91736 () Bool)

(assert (=> d!43949 e!91736))

(declare-fun res!67172 () Bool)

(assert (=> d!43949 (=> res!67172 e!91736)))

(declare-fun lt!73673 () Bool)

(assert (=> d!43949 (= res!67172 (not lt!73673))))

(declare-fun lt!73672 () Bool)

(assert (=> d!43949 (= lt!73673 lt!73672)))

(declare-fun lt!73671 () Unit!4393)

(declare-fun e!91735 () Unit!4393)

(assert (=> d!43949 (= lt!73671 e!91735)))

(declare-fun c!26432 () Bool)

(assert (=> d!43949 (= c!26432 lt!73672)))

(assert (=> d!43949 (= lt!73672 (containsKey!178 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43949 (= (contains!910 lt!73386 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73673)))

(declare-fun b!140732 () Bool)

(declare-fun lt!73670 () Unit!4393)

(assert (=> b!140732 (= e!91735 lt!73670)))

(assert (=> b!140732 (= lt!73670 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140732 (isDefined!128 (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140733 () Bool)

(declare-fun Unit!4431 () Unit!4393)

(assert (=> b!140733 (= e!91735 Unit!4431)))

(declare-fun b!140734 () Bool)

(assert (=> b!140734 (= e!91736 (isDefined!128 (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43949 c!26432) b!140732))

(assert (= (and d!43949 (not c!26432)) b!140733))

(assert (= (and d!43949 (not res!67172)) b!140734))

(declare-fun m!168059 () Bool)

(assert (=> d!43949 m!168059))

(declare-fun m!168061 () Bool)

(assert (=> b!140732 m!168061))

(assert (=> b!140732 m!167119))

(assert (=> b!140732 m!167119))

(declare-fun m!168063 () Bool)

(assert (=> b!140732 m!168063))

(assert (=> b!140734 m!167119))

(assert (=> b!140734 m!167119))

(assert (=> b!140734 m!168063))

(assert (=> d!43655 d!43949))

(declare-fun b!140738 () Bool)

(declare-fun e!91738 () Option!180)

(assert (=> b!140738 (= e!91738 None!178)))

(declare-fun b!140736 () Bool)

(declare-fun e!91737 () Option!180)

(assert (=> b!140736 (= e!91737 e!91738)))

(declare-fun c!26434 () Bool)

(assert (=> b!140736 (= c!26434 (and ((_ is Cons!1735) lt!73387) (not (= (_1!1339 (h!2342 lt!73387)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!140735 () Bool)

(assert (=> b!140735 (= e!91737 (Some!179 (_2!1339 (h!2342 lt!73387))))))

(declare-fun c!26433 () Bool)

(declare-fun d!43951 () Bool)

(assert (=> d!43951 (= c!26433 (and ((_ is Cons!1735) lt!73387) (= (_1!1339 (h!2342 lt!73387)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43951 (= (getValueByKey!174 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91737)))

(declare-fun b!140737 () Bool)

(assert (=> b!140737 (= e!91738 (getValueByKey!174 (t!6314 lt!73387) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43951 c!26433) b!140735))

(assert (= (and d!43951 (not c!26433)) b!140736))

(assert (= (and b!140736 c!26434) b!140737))

(assert (= (and b!140736 (not c!26434)) b!140738))

(declare-fun m!168065 () Bool)

(assert (=> b!140737 m!168065))

(assert (=> d!43655 d!43951))

(declare-fun d!43953 () Bool)

(assert (=> d!43953 (= (getValueByKey!174 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!179 (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73674 () Unit!4393)

(assert (=> d!43953 (= lt!73674 (choose!872 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91739 () Bool)

(assert (=> d!43953 e!91739))

(declare-fun res!67173 () Bool)

(assert (=> d!43953 (=> (not res!67173) (not e!91739))))

(assert (=> d!43953 (= res!67173 (isStrictlySorted!320 lt!73387))))

(assert (=> d!43953 (= (lemmaContainsTupThenGetReturnValue!91 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73674)))

(declare-fun b!140739 () Bool)

(declare-fun res!67174 () Bool)

(assert (=> b!140739 (=> (not res!67174) (not e!91739))))

(assert (=> b!140739 (= res!67174 (containsKey!178 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140740 () Bool)

(assert (=> b!140740 (= e!91739 (contains!914 lt!73387 (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43953 res!67173) b!140739))

(assert (= (and b!140739 res!67174) b!140740))

(assert (=> d!43953 m!167113))

(declare-fun m!168067 () Bool)

(assert (=> d!43953 m!168067))

(declare-fun m!168069 () Bool)

(assert (=> d!43953 m!168069))

(declare-fun m!168071 () Bool)

(assert (=> b!140739 m!168071))

(declare-fun m!168073 () Bool)

(assert (=> b!140740 m!168073))

(assert (=> d!43655 d!43953))

(declare-fun b!140741 () Bool)

(declare-fun e!91742 () List!1739)

(declare-fun call!15607 () List!1739)

(assert (=> b!140741 (= e!91742 call!15607)))

(declare-fun b!140742 () Bool)

(declare-fun e!91740 () List!1739)

(declare-fun call!15606 () List!1739)

(assert (=> b!140742 (= e!91740 call!15606)))

(declare-fun e!91743 () Bool)

(declare-fun b!140743 () Bool)

(declare-fun lt!73675 () List!1739)

(assert (=> b!140743 (= e!91743 (contains!914 lt!73675 (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!15602 () Bool)

(declare-fun c!26438 () Bool)

(declare-fun e!91741 () List!1739)

(assert (=> bm!15602 (= call!15607 ($colon$colon!93 e!91741 (ite c!26438 (h!2342 (toList!871 e!91273)) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26435 () Bool)

(assert (=> bm!15602 (= c!26435 c!26438)))

(declare-fun bm!15603 () Bool)

(declare-fun call!15605 () List!1739)

(assert (=> bm!15603 (= call!15606 call!15605)))

(declare-fun b!140744 () Bool)

(declare-fun res!67175 () Bool)

(assert (=> b!140744 (=> (not res!67175) (not e!91743))))

(assert (=> b!140744 (= res!67175 (containsKey!178 lt!73675 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!43955 () Bool)

(assert (=> d!43955 e!91743))

(declare-fun res!67176 () Bool)

(assert (=> d!43955 (=> (not res!67176) (not e!91743))))

(assert (=> d!43955 (= res!67176 (isStrictlySorted!320 lt!73675))))

(assert (=> d!43955 (= lt!73675 e!91742)))

(assert (=> d!43955 (= c!26438 (and ((_ is Cons!1735) (toList!871 e!91273)) (bvslt (_1!1339 (h!2342 (toList!871 e!91273))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43955 (isStrictlySorted!320 (toList!871 e!91273))))

(assert (=> d!43955 (= (insertStrictlySorted!94 (toList!871 e!91273) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73675)))

(declare-fun b!140745 () Bool)

(declare-fun c!26436 () Bool)

(declare-fun c!26437 () Bool)

(assert (=> b!140745 (= e!91741 (ite c!26437 (t!6314 (toList!871 e!91273)) (ite c!26436 (Cons!1735 (h!2342 (toList!871 e!91273)) (t!6314 (toList!871 e!91273))) Nil!1736)))))

(declare-fun b!140746 () Bool)

(assert (=> b!140746 (= c!26436 (and ((_ is Cons!1735) (toList!871 e!91273)) (bvsgt (_1!1339 (h!2342 (toList!871 e!91273))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!91744 () List!1739)

(assert (=> b!140746 (= e!91744 e!91740)))

(declare-fun b!140747 () Bool)

(assert (=> b!140747 (= e!91740 call!15606)))

(declare-fun b!140748 () Bool)

(assert (=> b!140748 (= e!91741 (insertStrictlySorted!94 (t!6314 (toList!871 e!91273)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!15604 () Bool)

(assert (=> bm!15604 (= call!15605 call!15607)))

(declare-fun b!140749 () Bool)

(assert (=> b!140749 (= e!91742 e!91744)))

(assert (=> b!140749 (= c!26437 (and ((_ is Cons!1735) (toList!871 e!91273)) (= (_1!1339 (h!2342 (toList!871 e!91273))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140750 () Bool)

(assert (=> b!140750 (= e!91744 call!15605)))

(assert (= (and d!43955 c!26438) b!140741))

(assert (= (and d!43955 (not c!26438)) b!140749))

(assert (= (and b!140749 c!26437) b!140750))

(assert (= (and b!140749 (not c!26437)) b!140746))

(assert (= (and b!140746 c!26436) b!140742))

(assert (= (and b!140746 (not c!26436)) b!140747))

(assert (= (or b!140742 b!140747) bm!15603))

(assert (= (or b!140750 bm!15603) bm!15604))

(assert (= (or b!140741 bm!15604) bm!15602))

(assert (= (and bm!15602 c!26435) b!140748))

(assert (= (and bm!15602 (not c!26435)) b!140745))

(assert (= (and d!43955 res!67176) b!140744))

(assert (= (and b!140744 res!67175) b!140743))

(declare-fun m!168075 () Bool)

(assert (=> b!140744 m!168075))

(declare-fun m!168077 () Bool)

(assert (=> b!140748 m!168077))

(declare-fun m!168079 () Bool)

(assert (=> bm!15602 m!168079))

(declare-fun m!168081 () Bool)

(assert (=> b!140743 m!168081))

(declare-fun m!168083 () Bool)

(assert (=> d!43955 m!168083))

(declare-fun m!168085 () Bool)

(assert (=> d!43955 m!168085))

(assert (=> d!43655 d!43955))

(declare-fun d!43957 () Bool)

(assert (=> d!43957 (= (apply!120 lt!73172 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5870 () Bool)

(assert (= bs!5870 d!43957))

(assert (=> bs!5870 m!168035))

(assert (=> bs!5870 m!168035))

(declare-fun m!168087 () Bool)

(assert (=> bs!5870 m!168087))

(assert (=> b!140064 d!43957))

(declare-fun d!43959 () Bool)

(assert (=> d!43959 (= (apply!120 lt!73197 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5871 () Bool)

(assert (= bs!5871 d!43959))

(assert (=> bs!5871 m!167519))

(assert (=> bs!5871 m!167519))

(declare-fun m!168089 () Bool)

(assert (=> bs!5871 m!168089))

(assert (=> b!140099 d!43959))

(declare-fun d!43961 () Bool)

(declare-fun res!67177 () Bool)

(declare-fun e!91745 () Bool)

(assert (=> d!43961 (=> res!67177 e!91745)))

(assert (=> d!43961 (= res!67177 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021)))))

(assert (=> d!43961 (= (containsKey!178 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021) e!91745)))

(declare-fun b!140751 () Bool)

(declare-fun e!91746 () Bool)

(assert (=> b!140751 (= e!91745 e!91746)))

(declare-fun res!67178 () Bool)

(assert (=> b!140751 (=> (not res!67178) (not e!91746))))

(assert (=> b!140751 (= res!67178 (and (or (not ((_ is Cons!1735) (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (bvsle (_1!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021)) ((_ is Cons!1735) (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (bvslt (_1!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021)))))

(declare-fun b!140752 () Bool)

(assert (=> b!140752 (= e!91746 (containsKey!178 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73021))))

(assert (= (and d!43961 (not res!67177)) b!140751))

(assert (= (and b!140751 res!67178) b!140752))

(declare-fun m!168091 () Bool)

(assert (=> b!140752 m!168091))

(assert (=> d!43683 d!43961))

(declare-fun d!43963 () Bool)

(assert (=> d!43963 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73012)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73012)))))

(assert (=> d!43685 d!43963))

(declare-fun b!140756 () Bool)

(declare-fun e!91748 () Option!180)

(assert (=> b!140756 (= e!91748 None!178)))

(declare-fun b!140754 () Bool)

(declare-fun e!91747 () Option!180)

(assert (=> b!140754 (= e!91747 e!91748)))

(declare-fun c!26440 () Bool)

(assert (=> b!140754 (= c!26440 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73012))))))

(declare-fun b!140753 () Bool)

(assert (=> b!140753 (= e!91747 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun d!43965 () Bool)

(declare-fun c!26439 () Bool)

(assert (=> d!43965 (= c!26439 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73012)))))

(assert (=> d!43965 (= (getValueByKey!174 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73012) e!91747)))

(declare-fun b!140755 () Bool)

(assert (=> b!140755 (= e!91748 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73012))))

(assert (= (and d!43965 c!26439) b!140753))

(assert (= (and d!43965 (not c!26439)) b!140754))

(assert (= (and b!140754 c!26440) b!140755))

(assert (= (and b!140754 (not c!26440)) b!140756))

(declare-fun m!168093 () Bool)

(assert (=> b!140755 m!168093))

(assert (=> d!43685 d!43965))

(assert (=> b!140061 d!43699))

(declare-fun d!43967 () Bool)

(declare-fun e!91750 () Bool)

(assert (=> d!43967 e!91750))

(declare-fun res!67179 () Bool)

(assert (=> d!43967 (=> res!67179 e!91750)))

(declare-fun lt!73679 () Bool)

(assert (=> d!43967 (= res!67179 (not lt!73679))))

(declare-fun lt!73678 () Bool)

(assert (=> d!43967 (= lt!73679 lt!73678)))

(declare-fun lt!73677 () Unit!4393)

(declare-fun e!91749 () Unit!4393)

(assert (=> d!43967 (= lt!73677 e!91749)))

(declare-fun c!26441 () Bool)

(assert (=> d!43967 (= c!26441 lt!73678)))

(assert (=> d!43967 (= lt!73678 (containsKey!178 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43967 (= (contains!910 lt!73231 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73679)))

(declare-fun b!140757 () Bool)

(declare-fun lt!73676 () Unit!4393)

(assert (=> b!140757 (= e!91749 lt!73676)))

(assert (=> b!140757 (= lt!73676 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> b!140757 (isDefined!128 (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140758 () Bool)

(declare-fun Unit!4432 () Unit!4393)

(assert (=> b!140758 (= e!91749 Unit!4432)))

(declare-fun b!140759 () Bool)

(assert (=> b!140759 (= e!91750 (isDefined!128 (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (= (and d!43967 c!26441) b!140757))

(assert (= (and d!43967 (not c!26441)) b!140758))

(assert (= (and d!43967 (not res!67179)) b!140759))

(declare-fun m!168095 () Bool)

(assert (=> d!43967 m!168095))

(declare-fun m!168097 () Bool)

(assert (=> b!140757 m!168097))

(assert (=> b!140757 m!166931))

(assert (=> b!140757 m!166931))

(declare-fun m!168099 () Bool)

(assert (=> b!140757 m!168099))

(assert (=> b!140759 m!166931))

(assert (=> b!140759 m!166931))

(assert (=> b!140759 m!168099))

(assert (=> d!43613 d!43967))

(declare-fun b!140763 () Bool)

(declare-fun e!91752 () Option!180)

(assert (=> b!140763 (= e!91752 None!178)))

(declare-fun b!140761 () Bool)

(declare-fun e!91751 () Option!180)

(assert (=> b!140761 (= e!91751 e!91752)))

(declare-fun c!26443 () Bool)

(assert (=> b!140761 (= c!26443 (and ((_ is Cons!1735) lt!73232) (not (= (_1!1339 (h!2342 lt!73232)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun b!140760 () Bool)

(assert (=> b!140760 (= e!91751 (Some!179 (_2!1339 (h!2342 lt!73232))))))

(declare-fun c!26442 () Bool)

(declare-fun d!43969 () Bool)

(assert (=> d!43969 (= c!26442 (and ((_ is Cons!1735) lt!73232) (= (_1!1339 (h!2342 lt!73232)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!43969 (= (getValueByKey!174 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91751)))

(declare-fun b!140762 () Bool)

(assert (=> b!140762 (= e!91752 (getValueByKey!174 (t!6314 lt!73232) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!43969 c!26442) b!140760))

(assert (= (and d!43969 (not c!26442)) b!140761))

(assert (= (and b!140761 c!26443) b!140762))

(assert (= (and b!140761 (not c!26443)) b!140763))

(declare-fun m!168101 () Bool)

(assert (=> b!140762 m!168101))

(assert (=> d!43613 d!43969))

(declare-fun d!43971 () Bool)

(assert (=> d!43971 (= (getValueByKey!174 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (Some!179 (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun lt!73680 () Unit!4393)

(assert (=> d!43971 (= lt!73680 (choose!872 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91753 () Bool)

(assert (=> d!43971 e!91753))

(declare-fun res!67180 () Bool)

(assert (=> d!43971 (=> (not res!67180) (not e!91753))))

(assert (=> d!43971 (= res!67180 (isStrictlySorted!320 lt!73232))))

(assert (=> d!43971 (= (lemmaContainsTupThenGetReturnValue!91 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73680)))

(declare-fun b!140764 () Bool)

(declare-fun res!67181 () Bool)

(assert (=> b!140764 (=> (not res!67181) (not e!91753))))

(assert (=> b!140764 (= res!67181 (containsKey!178 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140765 () Bool)

(assert (=> b!140765 (= e!91753 (contains!914 lt!73232 (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (= (and d!43971 res!67180) b!140764))

(assert (= (and b!140764 res!67181) b!140765))

(assert (=> d!43971 m!166925))

(declare-fun m!168103 () Bool)

(assert (=> d!43971 m!168103))

(declare-fun m!168105 () Bool)

(assert (=> d!43971 m!168105))

(declare-fun m!168107 () Bool)

(assert (=> b!140764 m!168107))

(declare-fun m!168109 () Bool)

(assert (=> b!140765 m!168109))

(assert (=> d!43613 d!43971))

(declare-fun b!140766 () Bool)

(declare-fun e!91756 () List!1739)

(declare-fun call!15610 () List!1739)

(assert (=> b!140766 (= e!91756 call!15610)))

(declare-fun b!140767 () Bool)

(declare-fun e!91754 () List!1739)

(declare-fun call!15609 () List!1739)

(assert (=> b!140767 (= e!91754 call!15609)))

(declare-fun b!140768 () Bool)

(declare-fun lt!73681 () List!1739)

(declare-fun e!91757 () Bool)

(assert (=> b!140768 (= e!91757 (contains!914 lt!73681 (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun e!91755 () List!1739)

(declare-fun bm!15605 () Bool)

(declare-fun c!26447 () Bool)

(assert (=> bm!15605 (= call!15610 ($colon$colon!93 e!91755 (ite c!26447 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun c!26444 () Bool)

(assert (=> bm!15605 (= c!26444 c!26447)))

(declare-fun bm!15606 () Bool)

(declare-fun call!15608 () List!1739)

(assert (=> bm!15606 (= call!15609 call!15608)))

(declare-fun b!140769 () Bool)

(declare-fun res!67182 () Bool)

(assert (=> b!140769 (=> (not res!67182) (not e!91757))))

(assert (=> b!140769 (= res!67182 (containsKey!178 lt!73681 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun d!43973 () Bool)

(assert (=> d!43973 e!91757))

(declare-fun res!67183 () Bool)

(assert (=> d!43973 (=> (not res!67183) (not e!91757))))

(assert (=> d!43973 (= res!67183 (isStrictlySorted!320 lt!73681))))

(assert (=> d!43973 (= lt!73681 e!91756)))

(assert (=> d!43973 (= c!26447 (and ((_ is Cons!1735) (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (bvslt (_1!1339 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!43973 (isStrictlySorted!320 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))))

(assert (=> d!43973 (= (insertStrictlySorted!94 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73681)))

(declare-fun c!26445 () Bool)

(declare-fun c!26446 () Bool)

(declare-fun b!140770 () Bool)

(assert (=> b!140770 (= e!91755 (ite c!26446 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (ite c!26445 (Cons!1735 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) Nil!1736)))))

(declare-fun b!140771 () Bool)

(assert (=> b!140771 (= c!26445 (and ((_ is Cons!1735) (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (bvsgt (_1!1339 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun e!91758 () List!1739)

(assert (=> b!140771 (= e!91758 e!91754)))

(declare-fun b!140772 () Bool)

(assert (=> b!140772 (= e!91754 call!15609)))

(declare-fun b!140773 () Bool)

(assert (=> b!140773 (= e!91755 (insertStrictlySorted!94 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun bm!15607 () Bool)

(assert (=> bm!15607 (= call!15608 call!15610)))

(declare-fun b!140774 () Bool)

(assert (=> b!140774 (= e!91756 e!91758)))

(assert (=> b!140774 (= c!26446 (and ((_ is Cons!1735) (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (= (_1!1339 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140775 () Bool)

(assert (=> b!140775 (= e!91758 call!15608)))

(assert (= (and d!43973 c!26447) b!140766))

(assert (= (and d!43973 (not c!26447)) b!140774))

(assert (= (and b!140774 c!26446) b!140775))

(assert (= (and b!140774 (not c!26446)) b!140771))

(assert (= (and b!140771 c!26445) b!140767))

(assert (= (and b!140771 (not c!26445)) b!140772))

(assert (= (or b!140767 b!140772) bm!15606))

(assert (= (or b!140775 bm!15606) bm!15607))

(assert (= (or b!140766 bm!15607) bm!15605))

(assert (= (and bm!15605 c!26444) b!140773))

(assert (= (and bm!15605 (not c!26444)) b!140770))

(assert (= (and d!43973 res!67183) b!140769))

(assert (= (and b!140769 res!67182) b!140768))

(declare-fun m!168111 () Bool)

(assert (=> b!140769 m!168111))

(declare-fun m!168113 () Bool)

(assert (=> b!140773 m!168113))

(declare-fun m!168115 () Bool)

(assert (=> bm!15605 m!168115))

(declare-fun m!168117 () Bool)

(assert (=> b!140768 m!168117))

(declare-fun m!168119 () Bool)

(assert (=> d!43973 m!168119))

(declare-fun m!168121 () Bool)

(assert (=> d!43973 m!168121))

(assert (=> d!43613 d!43973))

(declare-fun b!140776 () Bool)

(declare-fun e!91759 () Bool)

(declare-fun e!91761 () Bool)

(assert (=> b!140776 (= e!91759 e!91761)))

(declare-fun c!26448 () Bool)

(assert (=> b!140776 (= c!26448 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140777 () Bool)

(declare-fun e!91762 () Bool)

(assert (=> b!140777 (= e!91762 e!91759)))

(declare-fun res!67184 () Bool)

(assert (=> b!140777 (=> (not res!67184) (not e!91759))))

(declare-fun e!91760 () Bool)

(assert (=> b!140777 (= res!67184 (not e!91760))))

(declare-fun res!67185 () Bool)

(assert (=> b!140777 (=> (not res!67185) (not e!91760))))

(assert (=> b!140777 (= res!67185 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140778 () Bool)

(declare-fun call!15611 () Bool)

(assert (=> b!140778 (= e!91761 call!15611)))

(declare-fun d!43975 () Bool)

(declare-fun res!67186 () Bool)

(assert (=> d!43975 (=> res!67186 e!91762)))

(assert (=> d!43975 (= res!67186 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!43975 (= (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 Nil!1737) e!91762)))

(declare-fun b!140779 () Bool)

(assert (=> b!140779 (= e!91760 (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140780 () Bool)

(assert (=> b!140780 (= e!91761 call!15611)))

(declare-fun bm!15608 () Bool)

(assert (=> bm!15608 (= call!15611 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26448 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)))))

(assert (= (and d!43975 (not res!67186)) b!140777))

(assert (= (and b!140777 res!67185) b!140779))

(assert (= (and b!140777 res!67184) b!140776))

(assert (= (and b!140776 c!26448) b!140778))

(assert (= (and b!140776 (not c!26448)) b!140780))

(assert (= (or b!140778 b!140780) bm!15608))

(assert (=> b!140776 m!167691))

(assert (=> b!140776 m!167691))

(assert (=> b!140776 m!167693))

(assert (=> b!140777 m!167691))

(assert (=> b!140777 m!167691))

(assert (=> b!140777 m!167693))

(assert (=> b!140779 m!167691))

(assert (=> b!140779 m!167691))

(declare-fun m!168123 () Bool)

(assert (=> b!140779 m!168123))

(assert (=> bm!15608 m!167691))

(declare-fun m!168125 () Bool)

(assert (=> bm!15608 m!168125))

(assert (=> b!140285 d!43975))

(assert (=> d!43629 d!43611))

(declare-fun b!140797 () Bool)

(declare-fun e!91774 () Bool)

(declare-fun lt!73684 () SeekEntryResult!282)

(assert (=> b!140797 (= e!91774 ((_ is Undefined!282) lt!73684))))

(declare-fun b!140798 () Bool)

(declare-fun e!91773 () Bool)

(assert (=> b!140798 (= e!91773 e!91774)))

(declare-fun c!26454 () Bool)

(assert (=> b!140798 (= c!26454 ((_ is MissingVacant!282) lt!73684))))

(declare-fun b!140799 () Bool)

(declare-fun res!67198 () Bool)

(assert (=> b!140799 (= res!67198 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73684)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91772 () Bool)

(assert (=> b!140799 (=> (not res!67198) (not e!91772))))

(declare-fun call!15617 () Bool)

(declare-fun c!26453 () Bool)

(declare-fun bm!15613 () Bool)

(assert (=> bm!15613 (= call!15617 (inRange!0 (ite c!26453 (index!3291 lt!73684) (index!3294 lt!73684)) (mask!7278 newMap!16)))))

(declare-fun d!43977 () Bool)

(assert (=> d!43977 e!91773))

(assert (=> d!43977 (= c!26453 ((_ is MissingZero!282) lt!73684))))

(assert (=> d!43977 (= lt!73684 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(assert (=> d!43977 true))

(declare-fun _$34!1002 () Unit!4393)

(assert (=> d!43977 (= (choose!868 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) _$34!1002)))

(declare-fun b!140800 () Bool)

(declare-fun res!67196 () Bool)

(declare-fun e!91771 () Bool)

(assert (=> b!140800 (=> (not res!67196) (not e!91771))))

(assert (=> b!140800 (= res!67196 call!15617)))

(assert (=> b!140800 (= e!91774 e!91771)))

(declare-fun b!140801 () Bool)

(declare-fun call!15616 () Bool)

(assert (=> b!140801 (= e!91772 (not call!15616))))

(declare-fun b!140802 () Bool)

(assert (=> b!140802 (= e!91773 e!91772)))

(declare-fun res!67195 () Bool)

(assert (=> b!140802 (= res!67195 call!15617)))

(assert (=> b!140802 (=> (not res!67195) (not e!91772))))

(declare-fun bm!15614 () Bool)

(assert (=> bm!15614 (= call!15616 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!140803 () Bool)

(declare-fun res!67197 () Bool)

(assert (=> b!140803 (=> (not res!67197) (not e!91771))))

(assert (=> b!140803 (= res!67197 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73684)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140804 () Bool)

(assert (=> b!140804 (= e!91771 (not call!15616))))

(assert (= (and d!43977 c!26453) b!140802))

(assert (= (and d!43977 (not c!26453)) b!140798))

(assert (= (and b!140802 res!67195) b!140799))

(assert (= (and b!140799 res!67198) b!140801))

(assert (= (and b!140798 c!26454) b!140800))

(assert (= (and b!140798 (not c!26454)) b!140797))

(assert (= (and b!140800 res!67196) b!140803))

(assert (= (and b!140803 res!67197) b!140804))

(assert (= (or b!140802 b!140800) bm!15613))

(assert (= (or b!140801 b!140804) bm!15614))

(assert (=> d!43977 m!166407))

(assert (=> d!43977 m!166615))

(declare-fun m!168127 () Bool)

(assert (=> b!140803 m!168127))

(declare-fun m!168129 () Bool)

(assert (=> b!140799 m!168129))

(declare-fun m!168131 () Bool)

(assert (=> bm!15613 m!168131))

(assert (=> bm!15614 m!166407))

(assert (=> bm!15614 m!166653))

(assert (=> d!43629 d!43977))

(assert (=> d!43629 d!43719))

(assert (=> d!43607 d!43719))

(assert (=> b!140119 d!43707))

(assert (=> b!140119 d!43709))

(declare-fun d!43979 () Bool)

(assert (=> d!43979 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(declare-fun lt!73685 () Unit!4393)

(assert (=> d!43979 (= lt!73685 (choose!871 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(declare-fun e!91775 () Bool)

(assert (=> d!43979 e!91775))

(declare-fun res!67199 () Bool)

(assert (=> d!43979 (=> (not res!67199) (not e!91775))))

(assert (=> d!43979 (= res!67199 (isStrictlySorted!320 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!43979 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021) lt!73685)))

(declare-fun b!140805 () Bool)

(assert (=> b!140805 (= e!91775 (containsKey!178 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(assert (= (and d!43979 res!67199) b!140805))

(assert (=> d!43979 m!167211))

(assert (=> d!43979 m!167211))

(assert (=> d!43979 m!167213))

(declare-fun m!168133 () Bool)

(assert (=> d!43979 m!168133))

(declare-fun m!168135 () Bool)

(assert (=> d!43979 m!168135))

(assert (=> b!140805 m!167207))

(assert (=> b!140330 d!43979))

(assert (=> b!140330 d!43777))

(assert (=> b!140330 d!43779))

(declare-fun d!43981 () Bool)

(declare-fun e!91776 () Bool)

(assert (=> d!43981 e!91776))

(declare-fun res!67201 () Bool)

(assert (=> d!43981 (=> (not res!67201) (not e!91776))))

(declare-fun lt!73688 () ListLongMap!1711)

(assert (=> d!43981 (= res!67201 (contains!910 lt!73688 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!73689 () List!1739)

(assert (=> d!43981 (= lt!73688 (ListLongMap!1712 lt!73689))))

(declare-fun lt!73686 () Unit!4393)

(declare-fun lt!73687 () Unit!4393)

(assert (=> d!43981 (= lt!73686 lt!73687)))

(assert (=> d!43981 (= (getValueByKey!174 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43981 (= lt!73687 (lemmaContainsTupThenGetReturnValue!91 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43981 (= lt!73689 (insertStrictlySorted!94 (toList!871 call!15532) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!43981 (= (+!167 call!15532 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!73688)))

(declare-fun b!140806 () Bool)

(declare-fun res!67200 () Bool)

(assert (=> b!140806 (=> (not res!67200) (not e!91776))))

(assert (=> b!140806 (= res!67200 (= (getValueByKey!174 (toList!871 lt!73688) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!140807 () Bool)

(assert (=> b!140807 (= e!91776 (contains!914 (toList!871 lt!73688) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!43981 res!67201) b!140806))

(assert (= (and b!140806 res!67200) b!140807))

(declare-fun m!168137 () Bool)

(assert (=> d!43981 m!168137))

(declare-fun m!168139 () Bool)

(assert (=> d!43981 m!168139))

(declare-fun m!168141 () Bool)

(assert (=> d!43981 m!168141))

(declare-fun m!168143 () Bool)

(assert (=> d!43981 m!168143))

(declare-fun m!168145 () Bool)

(assert (=> b!140806 m!168145))

(declare-fun m!168147 () Bool)

(assert (=> b!140807 m!168147))

(assert (=> b!140107 d!43981))

(assert (=> d!43679 d!43659))

(assert (=> d!43679 d!43673))

(declare-fun d!43983 () Bool)

(declare-fun e!91778 () Bool)

(assert (=> d!43983 e!91778))

(declare-fun res!67202 () Bool)

(assert (=> d!43983 (=> res!67202 e!91778)))

(declare-fun lt!73693 () Bool)

(assert (=> d!43983 (= res!67202 (not lt!73693))))

(declare-fun lt!73692 () Bool)

(assert (=> d!43983 (= lt!73693 lt!73692)))

(declare-fun lt!73691 () Unit!4393)

(declare-fun e!91777 () Unit!4393)

(assert (=> d!43983 (= lt!73691 e!91777)))

(declare-fun c!26455 () Bool)

(assert (=> d!43983 (= c!26455 lt!73692)))

(assert (=> d!43983 (= lt!73692 (containsKey!178 (toList!871 lt!73005) lt!73012))))

(assert (=> d!43983 (= (contains!910 lt!73005 lt!73012) lt!73693)))

(declare-fun b!140808 () Bool)

(declare-fun lt!73690 () Unit!4393)

(assert (=> b!140808 (= e!91777 lt!73690)))

(assert (=> b!140808 (= lt!73690 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73005) lt!73012))))

(assert (=> b!140808 (isDefined!128 (getValueByKey!174 (toList!871 lt!73005) lt!73012))))

(declare-fun b!140809 () Bool)

(declare-fun Unit!4433 () Unit!4393)

(assert (=> b!140809 (= e!91777 Unit!4433)))

(declare-fun b!140810 () Bool)

(assert (=> b!140810 (= e!91778 (isDefined!128 (getValueByKey!174 (toList!871 lt!73005) lt!73012)))))

(assert (= (and d!43983 c!26455) b!140808))

(assert (= (and d!43983 (not c!26455)) b!140809))

(assert (= (and d!43983 (not res!67202)) b!140810))

(declare-fun m!168149 () Bool)

(assert (=> d!43983 m!168149))

(declare-fun m!168151 () Bool)

(assert (=> b!140808 m!168151))

(assert (=> b!140808 m!167179))

(assert (=> b!140808 m!167179))

(declare-fun m!168153 () Bool)

(assert (=> b!140808 m!168153))

(assert (=> b!140810 m!167179))

(assert (=> b!140810 m!167179))

(assert (=> b!140810 m!168153))

(assert (=> d!43679 d!43983))

(assert (=> d!43679 d!43685))

(declare-fun d!43985 () Bool)

(assert (=> d!43985 (= (apply!120 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73012) (apply!120 lt!73005 lt!73012))))

(assert (=> d!43985 true))

(declare-fun _$34!1005 () Unit!4393)

(assert (=> d!43985 (= (choose!869 lt!73005 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73012) _$34!1005)))

(declare-fun bs!5872 () Bool)

(assert (= bs!5872 d!43985))

(assert (=> bs!5872 m!166579))

(assert (=> bs!5872 m!166579))

(assert (=> bs!5872 m!166581))

(assert (=> bs!5872 m!166565))

(assert (=> d!43679 d!43985))

(declare-fun d!43987 () Bool)

(assert (=> d!43987 (= (get!1528 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43619 d!43987))

(assert (=> d!43619 d!43933))

(declare-fun d!43989 () Bool)

(assert (=> d!43989 (= (apply!120 lt!73197 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5873 () Bool)

(assert (= bs!5873 d!43989))

(declare-fun m!168155 () Bool)

(assert (=> bs!5873 m!168155))

(assert (=> bs!5873 m!168155))

(declare-fun m!168157 () Bool)

(assert (=> bs!5873 m!168157))

(assert (=> b!140103 d!43989))

(declare-fun d!43991 () Bool)

(assert (=> d!43991 (= (apply!120 lt!73266 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1528 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5874 () Bool)

(assert (= bs!5874 d!43991))

(assert (=> bs!5874 m!166533))

(assert (=> bs!5874 m!167871))

(assert (=> bs!5874 m!167871))

(declare-fun m!168159 () Bool)

(assert (=> bs!5874 m!168159))

(assert (=> b!140179 d!43991))

(assert (=> b!140179 d!43695))

(declare-fun bm!15615 () Bool)

(declare-fun call!15618 () ListLongMap!1711)

(declare-fun call!15620 () ListLongMap!1711)

(assert (=> bm!15615 (= call!15618 call!15620)))

(declare-fun bm!15616 () Bool)

(declare-fun call!15623 () Bool)

(declare-fun lt!73697 () ListLongMap!1711)

(assert (=> bm!15616 (= call!15623 (contains!910 lt!73697 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140813 () Bool)

(declare-fun e!91786 () Bool)

(assert (=> b!140813 (= e!91786 (not call!15623))))

(declare-fun b!140814 () Bool)

(declare-fun e!91784 () ListLongMap!1711)

(assert (=> b!140814 (= e!91784 call!15618)))

(declare-fun b!140815 () Bool)

(declare-fun e!91783 () Bool)

(assert (=> b!140815 (= e!91783 (= (apply!120 lt!73697 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140816 () Bool)

(declare-fun e!91788 () Bool)

(assert (=> b!140816 (= e!91788 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140817 () Bool)

(declare-fun e!91789 () Bool)

(declare-fun e!91782 () Bool)

(assert (=> b!140817 (= e!91789 e!91782)))

(declare-fun c!26458 () Bool)

(assert (=> b!140817 (= c!26458 (not (= (bvand lt!73106 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140818 () Bool)

(declare-fun res!67204 () Bool)

(assert (=> b!140818 (=> (not res!67204) (not e!91789))))

(declare-fun e!91785 () Bool)

(assert (=> b!140818 (= res!67204 e!91785)))

(declare-fun res!67207 () Bool)

(assert (=> b!140818 (=> res!67207 e!91785)))

(assert (=> b!140818 (= res!67207 (not e!91788))))

(declare-fun res!67210 () Bool)

(assert (=> b!140818 (=> (not res!67210) (not e!91788))))

(assert (=> b!140818 (= res!67210 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15617 () Bool)

(declare-fun call!15624 () ListLongMap!1711)

(declare-fun call!15621 () ListLongMap!1711)

(assert (=> bm!15617 (= call!15624 call!15621)))

(declare-fun e!91780 () Bool)

(declare-fun b!140819 () Bool)

(assert (=> b!140819 (= e!91780 (= (apply!120 lt!73697 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140820 () Bool)

(declare-fun e!91781 () Bool)

(assert (=> b!140820 (= e!91781 (= (apply!120 lt!73697 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 newMap!16))))))

(assert (=> b!140820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140821 () Bool)

(declare-fun e!91791 () ListLongMap!1711)

(assert (=> b!140821 (= e!91791 e!91784)))

(declare-fun c!26460 () Bool)

(assert (=> b!140821 (= c!26460 (and (not (= (bvand lt!73106 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!73106 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140822 () Bool)

(declare-fun e!91779 () Unit!4393)

(declare-fun lt!73713 () Unit!4393)

(assert (=> b!140822 (= e!91779 lt!73713)))

(declare-fun lt!73709 () ListLongMap!1711)

(assert (=> b!140822 (= lt!73709 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73698 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73698 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73715 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73715 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73694 () Unit!4393)

(assert (=> b!140822 (= lt!73694 (addStillContains!96 lt!73709 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73715))))

(assert (=> b!140822 (contains!910 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73715)))

(declare-fun lt!73696 () Unit!4393)

(assert (=> b!140822 (= lt!73696 lt!73694)))

(declare-fun lt!73699 () ListLongMap!1711)

(assert (=> b!140822 (= lt!73699 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73711 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73711 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73706 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73706 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73707 () Unit!4393)

(assert (=> b!140822 (= lt!73707 (addApplyDifferent!96 lt!73699 lt!73711 (minValue!2789 newMap!16) lt!73706))))

(assert (=> b!140822 (= (apply!120 (+!167 lt!73699 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))) lt!73706) (apply!120 lt!73699 lt!73706))))

(declare-fun lt!73712 () Unit!4393)

(assert (=> b!140822 (= lt!73712 lt!73707)))

(declare-fun lt!73695 () ListLongMap!1711)

(assert (=> b!140822 (= lt!73695 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73704 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73704 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73714 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73714 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73703 () Unit!4393)

(assert (=> b!140822 (= lt!73703 (addApplyDifferent!96 lt!73695 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73714))))

(assert (=> b!140822 (= (apply!120 (+!167 lt!73695 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73714) (apply!120 lt!73695 lt!73714))))

(declare-fun lt!73700 () Unit!4393)

(assert (=> b!140822 (= lt!73700 lt!73703)))

(declare-fun lt!73710 () ListLongMap!1711)

(assert (=> b!140822 (= lt!73710 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73708 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73708 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73705 () (_ BitVec 64))

(assert (=> b!140822 (= lt!73705 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140822 (= lt!73713 (addApplyDifferent!96 lt!73710 lt!73708 (minValue!2789 newMap!16) lt!73705))))

(assert (=> b!140822 (= (apply!120 (+!167 lt!73710 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))) lt!73705) (apply!120 lt!73710 lt!73705))))

(declare-fun d!43993 () Bool)

(assert (=> d!43993 e!91789))

(declare-fun res!67209 () Bool)

(assert (=> d!43993 (=> (not res!67209) (not e!91789))))

(assert (=> d!43993 (= res!67209 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73701 () ListLongMap!1711)

(assert (=> d!43993 (= lt!73697 lt!73701)))

(declare-fun lt!73702 () Unit!4393)

(assert (=> d!43993 (= lt!73702 e!91779)))

(declare-fun c!26456 () Bool)

(declare-fun e!91790 () Bool)

(assert (=> d!43993 (= c!26456 e!91790)))

(declare-fun res!67206 () Bool)

(assert (=> d!43993 (=> (not res!67206) (not e!91790))))

(assert (=> d!43993 (= res!67206 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!43993 (= lt!73701 e!91791)))

(declare-fun c!26457 () Bool)

(assert (=> d!43993 (= c!26457 (and (not (= (bvand lt!73106 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!73106 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43993 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!43993 (= (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73697)))

(declare-fun b!140812 () Bool)

(declare-fun e!91787 () ListLongMap!1711)

(declare-fun call!15619 () ListLongMap!1711)

(assert (=> b!140812 (= e!91787 call!15619)))

(declare-fun b!140823 () Bool)

(assert (=> b!140823 (= e!91791 (+!167 call!15620 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!140824 () Bool)

(assert (=> b!140824 (= e!91786 e!91780)))

(declare-fun res!67205 () Bool)

(assert (=> b!140824 (= res!67205 call!15623)))

(assert (=> b!140824 (=> (not res!67205) (not e!91780))))

(declare-fun bm!15618 () Bool)

(assert (=> bm!15618 (= call!15619 call!15624)))

(declare-fun b!140825 () Bool)

(declare-fun res!67203 () Bool)

(assert (=> b!140825 (=> (not res!67203) (not e!91789))))

(assert (=> b!140825 (= res!67203 e!91786)))

(declare-fun c!26461 () Bool)

(assert (=> b!140825 (= c!26461 (not (= (bvand lt!73106 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140826 () Bool)

(declare-fun c!26459 () Bool)

(assert (=> b!140826 (= c!26459 (and (not (= (bvand lt!73106 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!73106 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140826 (= e!91784 e!91787)))

(declare-fun b!140827 () Bool)

(assert (=> b!140827 (= e!91790 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15619 () Bool)

(declare-fun call!15622 () Bool)

(assert (=> bm!15619 (= call!15622 (contains!910 lt!73697 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140828 () Bool)

(assert (=> b!140828 (= e!91787 call!15618)))

(declare-fun b!140829 () Bool)

(assert (=> b!140829 (= e!91782 (not call!15622))))

(declare-fun bm!15620 () Bool)

(assert (=> bm!15620 (= call!15621 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140830 () Bool)

(assert (=> b!140830 (= e!91782 e!91783)))

(declare-fun res!67208 () Bool)

(assert (=> b!140830 (= res!67208 call!15622)))

(assert (=> b!140830 (=> (not res!67208) (not e!91783))))

(declare-fun b!140831 () Bool)

(assert (=> b!140831 (= e!91785 e!91781)))

(declare-fun res!67211 () Bool)

(assert (=> b!140831 (=> (not res!67211) (not e!91781))))

(assert (=> b!140831 (= res!67211 (contains!910 lt!73697 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140831 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140832 () Bool)

(declare-fun Unit!4434 () Unit!4393)

(assert (=> b!140832 (= e!91779 Unit!4434)))

(declare-fun bm!15621 () Bool)

(assert (=> bm!15621 (= call!15620 (+!167 (ite c!26457 call!15621 (ite c!26460 call!15624 call!15619)) (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!43993 c!26457) b!140823))

(assert (= (and d!43993 (not c!26457)) b!140821))

(assert (= (and b!140821 c!26460) b!140814))

(assert (= (and b!140821 (not c!26460)) b!140826))

(assert (= (and b!140826 c!26459) b!140828))

(assert (= (and b!140826 (not c!26459)) b!140812))

(assert (= (or b!140828 b!140812) bm!15618))

(assert (= (or b!140814 bm!15618) bm!15617))

(assert (= (or b!140814 b!140828) bm!15615))

(assert (= (or b!140823 bm!15617) bm!15620))

(assert (= (or b!140823 bm!15615) bm!15621))

(assert (= (and d!43993 res!67206) b!140827))

(assert (= (and d!43993 c!26456) b!140822))

(assert (= (and d!43993 (not c!26456)) b!140832))

(assert (= (and d!43993 res!67209) b!140818))

(assert (= (and b!140818 res!67210) b!140816))

(assert (= (and b!140818 (not res!67207)) b!140831))

(assert (= (and b!140831 res!67211) b!140820))

(assert (= (and b!140818 res!67204) b!140825))

(assert (= (and b!140825 c!26461) b!140824))

(assert (= (and b!140825 (not c!26461)) b!140813))

(assert (= (and b!140824 res!67205) b!140819))

(assert (= (or b!140824 b!140813) bm!15616))

(assert (= (and b!140825 res!67203) b!140817))

(assert (= (and b!140817 c!26458) b!140830))

(assert (= (and b!140817 (not c!26458)) b!140829))

(assert (= (and b!140830 res!67208) b!140815))

(assert (= (or b!140830 b!140829) bm!15619))

(declare-fun b_lambda!6289 () Bool)

(assert (=> (not b_lambda!6289) (not b!140820)))

(assert (=> b!140820 t!6328))

(declare-fun b_and!8785 () Bool)

(assert (= b_and!8781 (and (=> t!6328 result!4187) b_and!8785)))

(assert (=> b!140820 t!6330))

(declare-fun b_and!8787 () Bool)

(assert (= b_and!8783 (and (=> t!6330 result!4189) b_and!8787)))

(assert (=> b!140827 m!166699))

(assert (=> b!140827 m!166699))

(assert (=> b!140827 m!166701))

(assert (=> b!140820 m!166703))

(assert (=> b!140820 m!166795))

(assert (=> b!140820 m!166703))

(assert (=> b!140820 m!166797))

(assert (=> b!140820 m!166699))

(assert (=> b!140820 m!166699))

(declare-fun m!168161 () Bool)

(assert (=> b!140820 m!168161))

(assert (=> b!140820 m!166795))

(declare-fun m!168163 () Bool)

(assert (=> bm!15616 m!168163))

(assert (=> b!140831 m!166699))

(assert (=> b!140831 m!166699))

(declare-fun m!168165 () Bool)

(assert (=> b!140831 m!168165))

(declare-fun m!168167 () Bool)

(assert (=> b!140815 m!168167))

(assert (=> d!43993 m!166687))

(declare-fun m!168169 () Bool)

(assert (=> bm!15619 m!168169))

(declare-fun m!168171 () Bool)

(assert (=> bm!15621 m!168171))

(assert (=> bm!15620 m!166427))

(declare-fun m!168173 () Bool)

(assert (=> bm!15620 m!168173))

(declare-fun m!168175 () Bool)

(assert (=> b!140819 m!168175))

(declare-fun m!168177 () Bool)

(assert (=> b!140822 m!168177))

(declare-fun m!168179 () Bool)

(assert (=> b!140822 m!168179))

(assert (=> b!140822 m!166427))

(declare-fun m!168181 () Bool)

(assert (=> b!140822 m!168181))

(declare-fun m!168183 () Bool)

(assert (=> b!140822 m!168183))

(declare-fun m!168185 () Bool)

(assert (=> b!140822 m!168185))

(declare-fun m!168187 () Bool)

(assert (=> b!140822 m!168187))

(assert (=> b!140822 m!168183))

(declare-fun m!168189 () Bool)

(assert (=> b!140822 m!168189))

(declare-fun m!168191 () Bool)

(assert (=> b!140822 m!168191))

(declare-fun m!168193 () Bool)

(assert (=> b!140822 m!168193))

(declare-fun m!168195 () Bool)

(assert (=> b!140822 m!168195))

(declare-fun m!168197 () Bool)

(assert (=> b!140822 m!168197))

(assert (=> b!140822 m!168187))

(declare-fun m!168199 () Bool)

(assert (=> b!140822 m!168199))

(declare-fun m!168201 () Bool)

(assert (=> b!140822 m!168201))

(assert (=> b!140822 m!168191))

(assert (=> b!140822 m!168195))

(assert (=> b!140822 m!166699))

(assert (=> b!140822 m!166427))

(declare-fun m!168203 () Bool)

(assert (=> b!140822 m!168203))

(assert (=> b!140822 m!166427))

(assert (=> b!140822 m!168173))

(declare-fun m!168205 () Bool)

(assert (=> b!140822 m!168205))

(assert (=> b!140816 m!166699))

(assert (=> b!140816 m!166699))

(assert (=> b!140816 m!166701))

(declare-fun m!168207 () Bool)

(assert (=> b!140823 m!168207))

(assert (=> d!43591 d!43993))

(assert (=> d!43591 d!43601))

(assert (=> d!43591 d!43719))

(declare-fun d!43995 () Bool)

(assert (=> d!43995 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!43995 true))

(declare-fun _$7!122 () Unit!4393)

(assert (=> d!43995 (= (choose!866 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) lt!73106 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (defaultEntry!2939 newMap!16)) _$7!122)))

(declare-fun bs!5875 () Bool)

(assert (= bs!5875 d!43995))

(assert (=> bs!5875 m!166541))

(assert (=> bs!5875 m!166541))

(assert (=> bs!5875 m!166777))

(assert (=> bs!5875 m!166427))

(assert (=> bs!5875 m!166781))

(assert (=> d!43591 d!43995))

(declare-fun d!43997 () Bool)

(declare-fun e!91792 () Bool)

(assert (=> d!43997 e!91792))

(declare-fun res!67213 () Bool)

(assert (=> d!43997 (=> (not res!67213) (not e!91792))))

(declare-fun lt!73718 () ListLongMap!1711)

(assert (=> d!43997 (= res!67213 (contains!910 lt!73718 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73719 () List!1739)

(assert (=> d!43997 (= lt!73718 (ListLongMap!1712 lt!73719))))

(declare-fun lt!73716 () Unit!4393)

(declare-fun lt!73717 () Unit!4393)

(assert (=> d!43997 (= lt!73716 lt!73717)))

(assert (=> d!43997 (= (getValueByKey!174 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43997 (= lt!73717 (lemmaContainsTupThenGetReturnValue!91 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43997 (= lt!73719 (insertStrictlySorted!94 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43997 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73718)))

(declare-fun b!140833 () Bool)

(declare-fun res!67212 () Bool)

(assert (=> b!140833 (=> (not res!67212) (not e!91792))))

(assert (=> b!140833 (= res!67212 (= (getValueByKey!174 (toList!871 lt!73718) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140834 () Bool)

(assert (=> b!140834 (= e!91792 (contains!914 (toList!871 lt!73718) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43997 res!67213) b!140833))

(assert (= (and b!140833 res!67212) b!140834))

(declare-fun m!168209 () Bool)

(assert (=> d!43997 m!168209))

(declare-fun m!168211 () Bool)

(assert (=> d!43997 m!168211))

(declare-fun m!168213 () Bool)

(assert (=> d!43997 m!168213))

(declare-fun m!168215 () Bool)

(assert (=> d!43997 m!168215))

(declare-fun m!168217 () Bool)

(assert (=> b!140833 m!168217))

(declare-fun m!168219 () Bool)

(assert (=> b!140834 m!168219))

(assert (=> d!43591 d!43997))

(declare-fun d!43999 () Bool)

(declare-fun e!91794 () Bool)

(assert (=> d!43999 e!91794))

(declare-fun res!67214 () Bool)

(assert (=> d!43999 (=> res!67214 e!91794)))

(declare-fun lt!73723 () Bool)

(assert (=> d!43999 (= res!67214 (not lt!73723))))

(declare-fun lt!73722 () Bool)

(assert (=> d!43999 (= lt!73723 lt!73722)))

(declare-fun lt!73721 () Unit!4393)

(declare-fun e!91793 () Unit!4393)

(assert (=> d!43999 (= lt!73721 e!91793)))

(declare-fun c!26462 () Bool)

(assert (=> d!43999 (= c!26462 lt!73722)))

(assert (=> d!43999 (= lt!73722 (containsKey!178 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43999 (= (contains!910 lt!73128 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73723)))

(declare-fun b!140835 () Bool)

(declare-fun lt!73720 () Unit!4393)

(assert (=> b!140835 (= e!91793 lt!73720)))

(assert (=> b!140835 (= lt!73720 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140835 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140836 () Bool)

(declare-fun Unit!4435 () Unit!4393)

(assert (=> b!140836 (= e!91793 Unit!4435)))

(declare-fun b!140837 () Bool)

(assert (=> b!140837 (= e!91794 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43999 c!26462) b!140835))

(assert (= (and d!43999 (not c!26462)) b!140836))

(assert (= (and d!43999 (not res!67214)) b!140837))

(declare-fun m!168221 () Bool)

(assert (=> d!43999 m!168221))

(declare-fun m!168223 () Bool)

(assert (=> b!140835 m!168223))

(declare-fun m!168225 () Bool)

(assert (=> b!140835 m!168225))

(assert (=> b!140835 m!168225))

(declare-fun m!168227 () Bool)

(assert (=> b!140835 m!168227))

(assert (=> b!140837 m!168225))

(assert (=> b!140837 m!168225))

(assert (=> b!140837 m!168227))

(assert (=> bm!15513 d!43999))

(declare-fun d!44001 () Bool)

(assert (=> d!44001 (= (inRange!0 (ite c!26295 (index!3291 lt!73271) (index!3294 lt!73271)) (mask!7278 newMap!16)) (and (bvsge (ite c!26295 (index!3291 lt!73271) (index!3294 lt!73271)) #b00000000000000000000000000000000) (bvslt (ite c!26295 (index!3291 lt!73271) (index!3294 lt!73271)) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15541 d!44001))

(assert (=> d!43675 d!43657))

(assert (=> d!43675 d!43671))

(declare-fun d!44003 () Bool)

(declare-fun e!91796 () Bool)

(assert (=> d!44003 e!91796))

(declare-fun res!67215 () Bool)

(assert (=> d!44003 (=> res!67215 e!91796)))

(declare-fun lt!73727 () Bool)

(assert (=> d!44003 (= res!67215 (not lt!73727))))

(declare-fun lt!73726 () Bool)

(assert (=> d!44003 (= lt!73727 lt!73726)))

(declare-fun lt!73725 () Unit!4393)

(declare-fun e!91795 () Unit!4393)

(assert (=> d!44003 (= lt!73725 e!91795)))

(declare-fun c!26463 () Bool)

(assert (=> d!44003 (= c!26463 lt!73726)))

(assert (=> d!44003 (= lt!73726 (containsKey!178 (toList!871 lt!73016) lt!73011))))

(assert (=> d!44003 (= (contains!910 lt!73016 lt!73011) lt!73727)))

(declare-fun b!140838 () Bool)

(declare-fun lt!73724 () Unit!4393)

(assert (=> b!140838 (= e!91795 lt!73724)))

(assert (=> b!140838 (= lt!73724 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73016) lt!73011))))

(assert (=> b!140838 (isDefined!128 (getValueByKey!174 (toList!871 lt!73016) lt!73011))))

(declare-fun b!140839 () Bool)

(declare-fun Unit!4436 () Unit!4393)

(assert (=> b!140839 (= e!91795 Unit!4436)))

(declare-fun b!140840 () Bool)

(assert (=> b!140840 (= e!91796 (isDefined!128 (getValueByKey!174 (toList!871 lt!73016) lt!73011)))))

(assert (= (and d!44003 c!26463) b!140838))

(assert (= (and d!44003 (not c!26463)) b!140839))

(assert (= (and d!44003 (not res!67215)) b!140840))

(declare-fun m!168229 () Bool)

(assert (=> d!44003 m!168229))

(declare-fun m!168231 () Bool)

(assert (=> b!140838 m!168231))

(assert (=> b!140838 m!167151))

(assert (=> b!140838 m!167151))

(declare-fun m!168233 () Bool)

(assert (=> b!140838 m!168233))

(assert (=> b!140840 m!167151))

(assert (=> b!140840 m!167151))

(assert (=> b!140840 m!168233))

(assert (=> d!43675 d!44003))

(declare-fun d!44005 () Bool)

(assert (=> d!44005 (= (apply!120 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73011) (apply!120 lt!73016 lt!73011))))

(assert (=> d!44005 true))

(declare-fun _$34!1006 () Unit!4393)

(assert (=> d!44005 (= (choose!869 lt!73016 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73011) _$34!1006)))

(declare-fun bs!5876 () Bool)

(assert (= bs!5876 d!44005))

(assert (=> bs!5876 m!166575))

(assert (=> bs!5876 m!166575))

(assert (=> bs!5876 m!166587))

(assert (=> bs!5876 m!166567))

(assert (=> d!43675 d!44005))

(assert (=> d!43675 d!43663))

(assert (=> b!140092 d!43699))

(declare-fun d!44007 () Bool)

(declare-fun e!91797 () Bool)

(assert (=> d!44007 e!91797))

(declare-fun res!67217 () Bool)

(assert (=> d!44007 (=> (not res!67217) (not e!91797))))

(declare-fun lt!73730 () ListLongMap!1711)

(assert (=> d!44007 (= res!67217 (contains!910 lt!73730 (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun lt!73731 () List!1739)

(assert (=> d!44007 (= lt!73730 (ListLongMap!1712 lt!73731))))

(declare-fun lt!73728 () Unit!4393)

(declare-fun lt!73729 () Unit!4393)

(assert (=> d!44007 (= lt!73728 lt!73729)))

(assert (=> d!44007 (= (getValueByKey!174 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264))) (Some!179 (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (=> d!44007 (= lt!73729 (lemmaContainsTupThenGetReturnValue!91 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (=> d!44007 (= lt!73731 (insertStrictlySorted!94 (toList!871 lt!73263) (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (=> d!44007 (= (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)) lt!73730)))

(declare-fun b!140841 () Bool)

(declare-fun res!67216 () Bool)

(assert (=> b!140841 (=> (not res!67216) (not e!91797))))

(assert (=> b!140841 (= res!67216 (= (getValueByKey!174 (toList!871 lt!73730) (_1!1339 (tuple2!2657 lt!73265 lt!73264))) (Some!179 (_2!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(declare-fun b!140842 () Bool)

(assert (=> b!140842 (= e!91797 (contains!914 (toList!871 lt!73730) (tuple2!2657 lt!73265 lt!73264)))))

(assert (= (and d!44007 res!67217) b!140841))

(assert (= (and b!140841 res!67216) b!140842))

(declare-fun m!168235 () Bool)

(assert (=> d!44007 m!168235))

(declare-fun m!168237 () Bool)

(assert (=> d!44007 m!168237))

(declare-fun m!168239 () Bool)

(assert (=> d!44007 m!168239))

(declare-fun m!168241 () Bool)

(assert (=> d!44007 m!168241))

(declare-fun m!168243 () Bool)

(assert (=> b!140841 m!168243))

(declare-fun m!168245 () Bool)

(assert (=> b!140842 m!168245))

(assert (=> b!140183 d!44007))

(assert (=> b!140183 d!43695))

(declare-fun d!44009 () Bool)

(declare-fun e!91798 () Bool)

(assert (=> d!44009 e!91798))

(declare-fun res!67219 () Bool)

(assert (=> d!44009 (=> (not res!67219) (not e!91798))))

(declare-fun lt!73734 () ListLongMap!1711)

(assert (=> d!44009 (= res!67219 (contains!910 lt!73734 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73735 () List!1739)

(assert (=> d!44009 (= lt!73734 (ListLongMap!1712 lt!73735))))

(declare-fun lt!73732 () Unit!4393)

(declare-fun lt!73733 () Unit!4393)

(assert (=> d!44009 (= lt!73732 lt!73733)))

(assert (=> d!44009 (= (getValueByKey!174 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44009 (= lt!73733 (lemmaContainsTupThenGetReturnValue!91 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44009 (= lt!73735 (insertStrictlySorted!94 (toList!871 call!15539) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44009 (= (+!167 call!15539 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73734)))

(declare-fun b!140843 () Bool)

(declare-fun res!67218 () Bool)

(assert (=> b!140843 (=> (not res!67218) (not e!91798))))

(assert (=> b!140843 (= res!67218 (= (getValueByKey!174 (toList!871 lt!73734) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140844 () Bool)

(assert (=> b!140844 (= e!91798 (contains!914 (toList!871 lt!73734) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44009 res!67219) b!140843))

(assert (= (and b!140843 res!67218) b!140844))

(declare-fun m!168247 () Bool)

(assert (=> d!44009 m!168247))

(declare-fun m!168249 () Bool)

(assert (=> d!44009 m!168249))

(declare-fun m!168251 () Bool)

(assert (=> d!44009 m!168251))

(declare-fun m!168253 () Bool)

(assert (=> d!44009 m!168253))

(declare-fun m!168255 () Bool)

(assert (=> b!140843 m!168255))

(declare-fun m!168257 () Bool)

(assert (=> b!140844 m!168257))

(assert (=> b!140183 d!44009))

(declare-fun d!44011 () Bool)

(assert (=> d!44011 (not (contains!910 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)) lt!73261))))

(declare-fun lt!73738 () Unit!4393)

(declare-fun choose!874 (ListLongMap!1711 (_ BitVec 64) V!3553 (_ BitVec 64)) Unit!4393)

(assert (=> d!44011 (= lt!73738 (choose!874 lt!73263 lt!73265 lt!73264 lt!73261))))

(declare-fun e!91801 () Bool)

(assert (=> d!44011 e!91801))

(declare-fun res!67222 () Bool)

(assert (=> d!44011 (=> (not res!67222) (not e!91801))))

(assert (=> d!44011 (= res!67222 (not (contains!910 lt!73263 lt!73261)))))

(assert (=> d!44011 (= (addStillNotContains!65 lt!73263 lt!73265 lt!73264 lt!73261) lt!73738)))

(declare-fun b!140848 () Bool)

(assert (=> b!140848 (= e!91801 (not (= lt!73265 lt!73261)))))

(assert (= (and d!44011 res!67222) b!140848))

(assert (=> d!44011 m!166971))

(assert (=> d!44011 m!166971))

(assert (=> d!44011 m!166977))

(declare-fun m!168259 () Bool)

(assert (=> d!44011 m!168259))

(declare-fun m!168261 () Bool)

(assert (=> d!44011 m!168261))

(assert (=> b!140183 d!44011))

(declare-fun d!44013 () Bool)

(declare-fun e!91803 () Bool)

(assert (=> d!44013 e!91803))

(declare-fun res!67223 () Bool)

(assert (=> d!44013 (=> res!67223 e!91803)))

(declare-fun lt!73742 () Bool)

(assert (=> d!44013 (= res!67223 (not lt!73742))))

(declare-fun lt!73741 () Bool)

(assert (=> d!44013 (= lt!73742 lt!73741)))

(declare-fun lt!73740 () Unit!4393)

(declare-fun e!91802 () Unit!4393)

(assert (=> d!44013 (= lt!73740 e!91802)))

(declare-fun c!26464 () Bool)

(assert (=> d!44013 (= c!26464 lt!73741)))

(assert (=> d!44013 (= lt!73741 (containsKey!178 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))

(assert (=> d!44013 (= (contains!910 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)) lt!73261) lt!73742)))

(declare-fun b!140849 () Bool)

(declare-fun lt!73739 () Unit!4393)

(assert (=> b!140849 (= e!91802 lt!73739)))

(assert (=> b!140849 (= lt!73739 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))

(assert (=> b!140849 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))

(declare-fun b!140850 () Bool)

(declare-fun Unit!4437 () Unit!4393)

(assert (=> b!140850 (= e!91802 Unit!4437)))

(declare-fun b!140851 () Bool)

(assert (=> b!140851 (= e!91803 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261)))))

(assert (= (and d!44013 c!26464) b!140849))

(assert (= (and d!44013 (not c!26464)) b!140850))

(assert (= (and d!44013 (not res!67223)) b!140851))

(declare-fun m!168263 () Bool)

(assert (=> d!44013 m!168263))

(declare-fun m!168265 () Bool)

(assert (=> b!140849 m!168265))

(declare-fun m!168267 () Bool)

(assert (=> b!140849 m!168267))

(assert (=> b!140849 m!168267))

(declare-fun m!168269 () Bool)

(assert (=> b!140849 m!168269))

(assert (=> b!140851 m!168267))

(assert (=> b!140851 m!168267))

(assert (=> b!140851 m!168269))

(assert (=> b!140183 d!44013))

(declare-fun lt!73743 () Bool)

(declare-fun d!44015 () Bool)

(assert (=> d!44015 (= lt!73743 (select (content!138 (toList!871 lt!73231)) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!91805 () Bool)

(assert (=> d!44015 (= lt!73743 e!91805)))

(declare-fun res!67224 () Bool)

(assert (=> d!44015 (=> (not res!67224) (not e!91805))))

(assert (=> d!44015 (= res!67224 ((_ is Cons!1735) (toList!871 lt!73231)))))

(assert (=> d!44015 (= (contains!914 (toList!871 lt!73231) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73743)))

(declare-fun b!140852 () Bool)

(declare-fun e!91804 () Bool)

(assert (=> b!140852 (= e!91805 e!91804)))

(declare-fun res!67225 () Bool)

(assert (=> b!140852 (=> res!67225 e!91804)))

(assert (=> b!140852 (= res!67225 (= (h!2342 (toList!871 lt!73231)) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140853 () Bool)

(assert (=> b!140853 (= e!91804 (contains!914 (t!6314 (toList!871 lt!73231)) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44015 res!67224) b!140852))

(assert (= (and b!140852 (not res!67225)) b!140853))

(declare-fun m!168271 () Bool)

(assert (=> d!44015 m!168271))

(declare-fun m!168273 () Bool)

(assert (=> d!44015 m!168273))

(declare-fun m!168275 () Bool)

(assert (=> b!140853 m!168275))

(assert (=> b!140139 d!44015))

(declare-fun d!44017 () Bool)

(assert (=> d!44017 (= (get!1528 (getValueByKey!174 (toList!871 lt!73016) lt!73011)) (v!3279 (getValueByKey!174 (toList!871 lt!73016) lt!73011)))))

(assert (=> d!43663 d!44017))

(declare-fun b!140857 () Bool)

(declare-fun e!91807 () Option!180)

(assert (=> b!140857 (= e!91807 None!178)))

(declare-fun b!140855 () Bool)

(declare-fun e!91806 () Option!180)

(assert (=> b!140855 (= e!91806 e!91807)))

(declare-fun c!26466 () Bool)

(assert (=> b!140855 (= c!26466 (and ((_ is Cons!1735) (toList!871 lt!73016)) (not (= (_1!1339 (h!2342 (toList!871 lt!73016))) lt!73011))))))

(declare-fun b!140854 () Bool)

(assert (=> b!140854 (= e!91806 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73016)))))))

(declare-fun d!44019 () Bool)

(declare-fun c!26465 () Bool)

(assert (=> d!44019 (= c!26465 (and ((_ is Cons!1735) (toList!871 lt!73016)) (= (_1!1339 (h!2342 (toList!871 lt!73016))) lt!73011)))))

(assert (=> d!44019 (= (getValueByKey!174 (toList!871 lt!73016) lt!73011) e!91806)))

(declare-fun b!140856 () Bool)

(assert (=> b!140856 (= e!91807 (getValueByKey!174 (t!6314 (toList!871 lt!73016)) lt!73011))))

(assert (= (and d!44019 c!26465) b!140854))

(assert (= (and d!44019 (not c!26465)) b!140855))

(assert (= (and b!140855 c!26466) b!140856))

(assert (= (and b!140855 (not c!26466)) b!140857))

(declare-fun m!168277 () Bool)

(assert (=> b!140856 m!168277))

(assert (=> d!43663 d!44019))

(assert (=> b!140072 d!43699))

(declare-fun d!44021 () Bool)

(declare-fun lt!73744 () Bool)

(assert (=> d!44021 (= lt!73744 (select (content!138 (toList!871 lt!73386)) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91809 () Bool)

(assert (=> d!44021 (= lt!73744 e!91809)))

(declare-fun res!67226 () Bool)

(assert (=> d!44021 (=> (not res!67226) (not e!91809))))

(assert (=> d!44021 (= res!67226 ((_ is Cons!1735) (toList!871 lt!73386)))))

(assert (=> d!44021 (= (contains!914 (toList!871 lt!73386) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73744)))

(declare-fun b!140858 () Bool)

(declare-fun e!91808 () Bool)

(assert (=> b!140858 (= e!91809 e!91808)))

(declare-fun res!67227 () Bool)

(assert (=> b!140858 (=> res!67227 e!91808)))

(assert (=> b!140858 (= res!67227 (= (h!2342 (toList!871 lt!73386)) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140859 () Bool)

(assert (=> b!140859 (= e!91808 (contains!914 (t!6314 (toList!871 lt!73386)) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44021 res!67226) b!140858))

(assert (= (and b!140858 (not res!67227)) b!140859))

(declare-fun m!168279 () Bool)

(assert (=> d!44021 m!168279))

(declare-fun m!168281 () Bool)

(assert (=> d!44021 m!168281))

(declare-fun m!168283 () Bool)

(assert (=> b!140859 m!168283))

(assert (=> b!140314 d!44021))

(declare-fun d!44023 () Bool)

(declare-fun e!91811 () Bool)

(assert (=> d!44023 e!91811))

(declare-fun res!67228 () Bool)

(assert (=> d!44023 (=> res!67228 e!91811)))

(declare-fun lt!73748 () Bool)

(assert (=> d!44023 (= res!67228 (not lt!73748))))

(declare-fun lt!73747 () Bool)

(assert (=> d!44023 (= lt!73748 lt!73747)))

(declare-fun lt!73746 () Unit!4393)

(declare-fun e!91810 () Unit!4393)

(assert (=> d!44023 (= lt!73746 e!91810)))

(declare-fun c!26467 () Bool)

(assert (=> d!44023 (= c!26467 lt!73747)))

(assert (=> d!44023 (= lt!73747 (containsKey!178 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44023 (= (contains!910 lt!73128 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!73748)))

(declare-fun b!140860 () Bool)

(declare-fun lt!73745 () Unit!4393)

(assert (=> b!140860 (= e!91810 lt!73745)))

(assert (=> b!140860 (= lt!73745 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140860 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140861 () Bool)

(declare-fun Unit!4438 () Unit!4393)

(assert (=> b!140861 (= e!91810 Unit!4438)))

(declare-fun b!140862 () Bool)

(assert (=> b!140862 (= e!91811 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44023 c!26467) b!140860))

(assert (= (and d!44023 (not c!26467)) b!140861))

(assert (= (and d!44023 (not res!67228)) b!140862))

(assert (=> d!44023 m!166699))

(declare-fun m!168285 () Bool)

(assert (=> d!44023 m!168285))

(assert (=> b!140860 m!166699))

(declare-fun m!168287 () Bool)

(assert (=> b!140860 m!168287))

(assert (=> b!140860 m!166699))

(assert (=> b!140860 m!167883))

(assert (=> b!140860 m!167883))

(declare-fun m!168289 () Bool)

(assert (=> b!140860 m!168289))

(assert (=> b!140862 m!166699))

(assert (=> b!140862 m!167883))

(assert (=> b!140862 m!167883))

(assert (=> b!140862 m!168289))

(assert (=> b!140035 d!44023))

(assert (=> bm!15532 d!43855))

(declare-fun d!44025 () Bool)

(declare-fun e!91813 () Bool)

(assert (=> d!44025 e!91813))

(declare-fun res!67229 () Bool)

(assert (=> d!44025 (=> res!67229 e!91813)))

(declare-fun lt!73752 () Bool)

(assert (=> d!44025 (= res!67229 (not lt!73752))))

(declare-fun lt!73751 () Bool)

(assert (=> d!44025 (= lt!73752 lt!73751)))

(declare-fun lt!73750 () Unit!4393)

(declare-fun e!91812 () Unit!4393)

(assert (=> d!44025 (= lt!73750 e!91812)))

(declare-fun c!26468 () Bool)

(assert (=> d!44025 (= c!26468 lt!73751)))

(assert (=> d!44025 (= lt!73751 (containsKey!178 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44025 (= (contains!910 lt!73197 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73752)))

(declare-fun b!140863 () Bool)

(declare-fun lt!73749 () Unit!4393)

(assert (=> b!140863 (= e!91812 lt!73749)))

(assert (=> b!140863 (= lt!73749 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140863 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140864 () Bool)

(declare-fun Unit!4439 () Unit!4393)

(assert (=> b!140864 (= e!91812 Unit!4439)))

(declare-fun b!140865 () Bool)

(assert (=> b!140865 (= e!91813 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44025 c!26468) b!140863))

(assert (= (and d!44025 (not c!26468)) b!140864))

(assert (= (and d!44025 (not res!67229)) b!140865))

(declare-fun m!168291 () Bool)

(assert (=> d!44025 m!168291))

(declare-fun m!168293 () Bool)

(assert (=> b!140863 m!168293))

(assert (=> b!140863 m!168155))

(assert (=> b!140863 m!168155))

(declare-fun m!168295 () Bool)

(assert (=> b!140863 m!168295))

(assert (=> b!140865 m!168155))

(assert (=> b!140865 m!168155))

(assert (=> b!140865 m!168295))

(assert (=> bm!15528 d!44025))

(assert (=> b!140296 d!43937))

(assert (=> b!140082 d!43545))

(declare-fun d!44027 () Bool)

(assert (=> d!44027 (= (get!1528 (getValueByKey!174 (toList!871 lt!73001) lt!73020)) (v!3279 (getValueByKey!174 (toList!871 lt!73001) lt!73020)))))

(assert (=> d!43667 d!44027))

(declare-fun b!140869 () Bool)

(declare-fun e!91815 () Option!180)

(assert (=> b!140869 (= e!91815 None!178)))

(declare-fun b!140867 () Bool)

(declare-fun e!91814 () Option!180)

(assert (=> b!140867 (= e!91814 e!91815)))

(declare-fun c!26470 () Bool)

(assert (=> b!140867 (= c!26470 (and ((_ is Cons!1735) (toList!871 lt!73001)) (not (= (_1!1339 (h!2342 (toList!871 lt!73001))) lt!73020))))))

(declare-fun b!140866 () Bool)

(assert (=> b!140866 (= e!91814 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73001)))))))

(declare-fun d!44029 () Bool)

(declare-fun c!26469 () Bool)

(assert (=> d!44029 (= c!26469 (and ((_ is Cons!1735) (toList!871 lt!73001)) (= (_1!1339 (h!2342 (toList!871 lt!73001))) lt!73020)))))

(assert (=> d!44029 (= (getValueByKey!174 (toList!871 lt!73001) lt!73020) e!91814)))

(declare-fun b!140868 () Bool)

(assert (=> b!140868 (= e!91815 (getValueByKey!174 (t!6314 (toList!871 lt!73001)) lt!73020))))

(assert (= (and d!44029 c!26469) b!140866))

(assert (= (and d!44029 (not c!26469)) b!140867))

(assert (= (and b!140867 c!26470) b!140868))

(assert (= (and b!140867 (not c!26470)) b!140869))

(declare-fun m!168297 () Bool)

(assert (=> b!140868 m!168297))

(assert (=> d!43667 d!44029))

(assert (=> b!140051 d!43807))

(assert (=> b!140051 d!43791))

(declare-fun d!44031 () Bool)

(declare-fun res!67230 () Bool)

(declare-fun e!91816 () Bool)

(assert (=> d!44031 (=> res!67230 e!91816)))

(assert (=> d!44031 (= res!67230 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!72917))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44031 (= (containsKey!178 (t!6314 (toList!871 lt!72917)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91816)))

(declare-fun b!140870 () Bool)

(declare-fun e!91817 () Bool)

(assert (=> b!140870 (= e!91816 e!91817)))

(declare-fun res!67231 () Bool)

(assert (=> b!140870 (=> (not res!67231) (not e!91817))))

(assert (=> b!140870 (= res!67231 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 lt!72917)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (t!6314 (toList!871 lt!72917))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!140871 () Bool)

(assert (=> b!140871 (= e!91817 (containsKey!178 (t!6314 (t!6314 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44031 (not res!67230)) b!140870))

(assert (= (and b!140870 res!67231) b!140871))

(assert (=> b!140871 m!166407))

(declare-fun m!168299 () Bool)

(assert (=> b!140871 m!168299))

(assert (=> b!140048 d!44031))

(declare-fun b!140874 () Bool)

(declare-fun res!67232 () Bool)

(declare-fun e!91818 () Bool)

(assert (=> b!140874 (=> (not res!67232) (not e!91818))))

(assert (=> b!140874 (= res!67232 (= (size!2581 (v!3273 (underlying!476 thiss!992))) (bvadd (_size!624 (v!3273 (underlying!476 thiss!992))) (bvsdiv (bvadd (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140873 () Bool)

(declare-fun res!67235 () Bool)

(assert (=> b!140873 (=> (not res!67235) (not e!91818))))

(assert (=> b!140873 (= res!67235 (bvsge (size!2581 (v!3273 (underlying!476 thiss!992))) (_size!624 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun d!44033 () Bool)

(declare-fun res!67233 () Bool)

(assert (=> d!44033 (=> (not res!67233) (not e!91818))))

(assert (=> d!44033 (= res!67233 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992)))))))

(assert (=> d!44033 (= (simpleValid!96 (v!3273 (underlying!476 thiss!992))) e!91818)))

(declare-fun b!140875 () Bool)

(assert (=> b!140875 (= e!91818 (and (bvsge (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!624 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!140872 () Bool)

(declare-fun res!67234 () Bool)

(assert (=> b!140872 (=> (not res!67234) (not e!91818))))

(assert (=> b!140872 (= res!67234 (and (= (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001)) (= (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992))))) (bvsge (_size!624 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!624 (v!3273 (underlying!476 thiss!992))) (bvadd (mask!7278 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!44033 res!67233) b!140872))

(assert (= (and b!140872 res!67234) b!140873))

(assert (= (and b!140873 res!67235) b!140874))

(assert (= (and b!140874 res!67232) b!140875))

(declare-fun m!168301 () Bool)

(assert (=> b!140874 m!168301))

(assert (=> b!140873 m!168301))

(assert (=> d!44033 m!166539))

(assert (=> d!43645 d!44033))

(declare-fun b!140878 () Bool)

(declare-fun res!67236 () Bool)

(declare-fun e!91819 () Bool)

(assert (=> b!140878 (=> (not res!67236) (not e!91819))))

(assert (=> b!140878 (= res!67236 (= (size!2581 (_2!1340 lt!73099)) (bvadd (_size!624 (_2!1340 lt!73099)) (bvsdiv (bvadd (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!140877 () Bool)

(declare-fun res!67239 () Bool)

(assert (=> b!140877 (=> (not res!67239) (not e!91819))))

(assert (=> b!140877 (= res!67239 (bvsge (size!2581 (_2!1340 lt!73099)) (_size!624 (_2!1340 lt!73099))))))

(declare-fun d!44035 () Bool)

(declare-fun res!67237 () Bool)

(assert (=> d!44035 (=> (not res!67237) (not e!91819))))

(assert (=> d!44035 (= res!67237 (validMask!0 (mask!7278 (_2!1340 lt!73099))))))

(assert (=> d!44035 (= (simpleValid!96 (_2!1340 lt!73099)) e!91819)))

(declare-fun b!140879 () Bool)

(assert (=> b!140879 (= e!91819 (and (bvsge (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000011) (bvsge (_vacant!624 (_2!1340 lt!73099)) #b00000000000000000000000000000000)))))

(declare-fun b!140876 () Bool)

(declare-fun res!67238 () Bool)

(assert (=> b!140876 (=> (not res!67238) (not e!91819))))

(assert (=> b!140876 (= res!67238 (and (= (size!2576 (_values!2922 (_2!1340 lt!73099))) (bvadd (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000000000001)) (= (size!2575 (_keys!4697 (_2!1340 lt!73099))) (size!2576 (_values!2922 (_2!1340 lt!73099)))) (bvsge (_size!624 (_2!1340 lt!73099)) #b00000000000000000000000000000000) (bvsle (_size!624 (_2!1340 lt!73099)) (bvadd (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000000000001))))))

(assert (= (and d!44035 res!67237) b!140876))

(assert (= (and b!140876 res!67238) b!140877))

(assert (= (and b!140877 res!67239) b!140878))

(assert (= (and b!140878 res!67236) b!140879))

(declare-fun m!168303 () Bool)

(assert (=> b!140878 m!168303))

(assert (=> b!140877 m!168303))

(assert (=> d!44035 m!167541))

(assert (=> d!43639 d!44035))

(assert (=> b!140154 d!43801))

(assert (=> b!140154 d!43803))

(assert (=> b!140267 d!43629))

(declare-fun b!140883 () Bool)

(declare-fun e!91821 () Option!180)

(assert (=> b!140883 (= e!91821 None!178)))

(declare-fun b!140881 () Bool)

(declare-fun e!91820 () Option!180)

(assert (=> b!140881 (= e!91820 e!91821)))

(declare-fun c!26472 () Bool)

(assert (=> b!140881 (= c!26472 (and ((_ is Cons!1735) (toList!871 lt!73279)) (not (= (_1!1339 (h!2342 (toList!871 lt!73279))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140880 () Bool)

(assert (=> b!140880 (= e!91820 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73279)))))))

(declare-fun c!26471 () Bool)

(declare-fun d!44037 () Bool)

(assert (=> d!44037 (= c!26471 (and ((_ is Cons!1735) (toList!871 lt!73279)) (= (_1!1339 (h!2342 (toList!871 lt!73279))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44037 (= (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91820)))

(declare-fun b!140882 () Bool)

(assert (=> b!140882 (= e!91821 (getValueByKey!174 (t!6314 (toList!871 lt!73279)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44037 c!26471) b!140880))

(assert (= (and d!44037 (not c!26471)) b!140881))

(assert (= (and b!140881 c!26472) b!140882))

(assert (= (and b!140881 (not c!26472)) b!140883))

(declare-fun m!168305 () Bool)

(assert (=> b!140882 m!168305))

(assert (=> b!140225 d!44037))

(declare-fun d!44039 () Bool)

(assert (=> d!44039 (= (apply!120 lt!73172 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5877 () Bool)

(assert (= bs!5877 d!44039))

(assert (=> bs!5877 m!166699))

(declare-fun m!168307 () Bool)

(assert (=> bs!5877 m!168307))

(assert (=> bs!5877 m!168307))

(declare-fun m!168309 () Bool)

(assert (=> bs!5877 m!168309))

(assert (=> b!140065 d!44039))

(declare-fun d!44041 () Bool)

(declare-fun c!26473 () Bool)

(assert (=> d!44041 (= c!26473 ((_ is ValueCellFull!1121) (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91822 () V!3553)

(assert (=> d!44041 (= (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91822)))

(declare-fun b!140884 () Bool)

(assert (=> b!140884 (= e!91822 (get!1526 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140885 () Bool)

(assert (=> b!140885 (= e!91822 (get!1527 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44041 c!26473) b!140884))

(assert (= (and d!44041 (not c!26473)) b!140885))

(assert (=> b!140884 m!166795))

(assert (=> b!140884 m!166703))

(declare-fun m!168311 () Bool)

(assert (=> b!140884 m!168311))

(assert (=> b!140885 m!166795))

(assert (=> b!140885 m!166703))

(declare-fun m!168313 () Bool)

(assert (=> b!140885 m!168313))

(assert (=> b!140065 d!44041))

(declare-fun b!140889 () Bool)

(declare-fun e!91824 () Option!180)

(assert (=> b!140889 (= e!91824 None!178)))

(declare-fun b!140887 () Bool)

(declare-fun e!91823 () Option!180)

(assert (=> b!140887 (= e!91823 e!91824)))

(declare-fun c!26475 () Bool)

(assert (=> b!140887 (= c!26475 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!72917))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!140886 () Bool)

(assert (=> b!140886 (= e!91823 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!72917))))))))

(declare-fun c!26474 () Bool)

(declare-fun d!44043 () Bool)

(assert (=> d!44043 (= c!26474 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!72917))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44043 (= (getValueByKey!174 (t!6314 (toList!871 lt!72917)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!91823)))

(declare-fun b!140888 () Bool)

(assert (=> b!140888 (= e!91824 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44043 c!26474) b!140886))

(assert (= (and d!44043 (not c!26474)) b!140887))

(assert (= (and b!140887 c!26475) b!140888))

(assert (= (and b!140887 (not c!26475)) b!140889))

(assert (=> b!140888 m!166407))

(declare-fun m!168315 () Bool)

(assert (=> b!140888 m!168315))

(assert (=> b!140346 d!44043))

(declare-fun d!44045 () Bool)

(declare-fun e!91825 () Bool)

(assert (=> d!44045 e!91825))

(declare-fun res!67241 () Bool)

(assert (=> d!44045 (=> (not res!67241) (not e!91825))))

(declare-fun lt!73755 () ListLongMap!1711)

(assert (=> d!44045 (= res!67241 (contains!910 lt!73755 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!73756 () List!1739)

(assert (=> d!44045 (= lt!73755 (ListLongMap!1712 lt!73756))))

(declare-fun lt!73753 () Unit!4393)

(declare-fun lt!73754 () Unit!4393)

(assert (=> d!44045 (= lt!73753 lt!73754)))

(assert (=> d!44045 (= (getValueByKey!174 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44045 (= lt!73754 (lemmaContainsTupThenGetReturnValue!91 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44045 (= lt!73756 (insertStrictlySorted!94 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44045 (= (+!167 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!73755)))

(declare-fun b!140890 () Bool)

(declare-fun res!67240 () Bool)

(assert (=> b!140890 (=> (not res!67240) (not e!91825))))

(assert (=> b!140890 (= res!67240 (= (getValueByKey!174 (toList!871 lt!73755) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!140891 () Bool)

(assert (=> b!140891 (= e!91825 (contains!914 (toList!871 lt!73755) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44045 res!67241) b!140890))

(assert (= (and b!140890 res!67240) b!140891))

(declare-fun m!168317 () Bool)

(assert (=> d!44045 m!168317))

(declare-fun m!168319 () Bool)

(assert (=> d!44045 m!168319))

(declare-fun m!168321 () Bool)

(assert (=> d!44045 m!168321))

(declare-fun m!168323 () Bool)

(assert (=> d!44045 m!168323))

(declare-fun m!168325 () Bool)

(assert (=> b!140890 m!168325))

(declare-fun m!168327 () Bool)

(assert (=> b!140891 m!168327))

(assert (=> bm!15533 d!44045))

(assert (=> b!140100 d!43699))

(declare-fun d!44047 () Bool)

(declare-fun e!91826 () Bool)

(assert (=> d!44047 e!91826))

(declare-fun res!67243 () Bool)

(assert (=> d!44047 (=> (not res!67243) (not e!91826))))

(declare-fun lt!73759 () ListLongMap!1711)

(assert (=> d!44047 (= res!67243 (contains!910 lt!73759 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73760 () List!1739)

(assert (=> d!44047 (= lt!73759 (ListLongMap!1712 lt!73760))))

(declare-fun lt!73757 () Unit!4393)

(declare-fun lt!73758 () Unit!4393)

(assert (=> d!44047 (= lt!73757 lt!73758)))

(assert (=> d!44047 (= (getValueByKey!174 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44047 (= lt!73758 (lemmaContainsTupThenGetReturnValue!91 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44047 (= lt!73760 (insertStrictlySorted!94 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44047 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73759)))

(declare-fun b!140892 () Bool)

(declare-fun res!67242 () Bool)

(assert (=> b!140892 (=> (not res!67242) (not e!91826))))

(assert (=> b!140892 (= res!67242 (= (getValueByKey!174 (toList!871 lt!73759) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140893 () Bool)

(assert (=> b!140893 (= e!91826 (contains!914 (toList!871 lt!73759) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44047 res!67243) b!140892))

(assert (= (and b!140892 res!67242) b!140893))

(declare-fun m!168329 () Bool)

(assert (=> d!44047 m!168329))

(declare-fun m!168331 () Bool)

(assert (=> d!44047 m!168331))

(declare-fun m!168333 () Bool)

(assert (=> d!44047 m!168333))

(declare-fun m!168335 () Bool)

(assert (=> d!44047 m!168335))

(declare-fun m!168337 () Bool)

(assert (=> b!140892 m!168337))

(declare-fun m!168339 () Bool)

(assert (=> b!140893 m!168339))

(assert (=> b!140015 d!44047))

(assert (=> b!140015 d!43601))

(declare-fun bm!15622 () Bool)

(declare-fun call!15625 () ListLongMap!1711)

(declare-fun call!15627 () ListLongMap!1711)

(assert (=> bm!15622 (= call!15625 call!15627)))

(declare-fun bm!15623 () Bool)

(declare-fun call!15630 () Bool)

(declare-fun lt!73764 () ListLongMap!1711)

(assert (=> bm!15623 (= call!15630 (contains!910 lt!73764 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140895 () Bool)

(declare-fun e!91834 () Bool)

(assert (=> b!140895 (= e!91834 (not call!15630))))

(declare-fun b!140896 () Bool)

(declare-fun e!91832 () ListLongMap!1711)

(assert (=> b!140896 (= e!91832 call!15625)))

(declare-fun b!140897 () Bool)

(declare-fun e!91831 () Bool)

(assert (=> b!140897 (= e!91831 (= (apply!120 lt!73764 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!140898 () Bool)

(declare-fun e!91836 () Bool)

(assert (=> b!140898 (= e!91836 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140899 () Bool)

(declare-fun e!91837 () Bool)

(declare-fun e!91830 () Bool)

(assert (=> b!140899 (= e!91837 e!91830)))

(declare-fun c!26478 () Bool)

(assert (=> b!140899 (= c!26478 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140900 () Bool)

(declare-fun res!67245 () Bool)

(assert (=> b!140900 (=> (not res!67245) (not e!91837))))

(declare-fun e!91833 () Bool)

(assert (=> b!140900 (= res!67245 e!91833)))

(declare-fun res!67248 () Bool)

(assert (=> b!140900 (=> res!67248 e!91833)))

(assert (=> b!140900 (= res!67248 (not e!91836))))

(declare-fun res!67251 () Bool)

(assert (=> b!140900 (=> (not res!67251) (not e!91836))))

(assert (=> b!140900 (= res!67251 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15624 () Bool)

(declare-fun call!15631 () ListLongMap!1711)

(declare-fun call!15628 () ListLongMap!1711)

(assert (=> bm!15624 (= call!15631 call!15628)))

(declare-fun b!140901 () Bool)

(declare-fun e!91828 () Bool)

(assert (=> b!140901 (= e!91828 (= (apply!120 lt!73764 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun e!91829 () Bool)

(declare-fun b!140902 () Bool)

(assert (=> b!140902 (= e!91829 (= (apply!120 lt!73764 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140902 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))))))

(assert (=> b!140902 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140903 () Bool)

(declare-fun e!91839 () ListLongMap!1711)

(assert (=> b!140903 (= e!91839 e!91832)))

(declare-fun c!26480 () Bool)

(assert (=> b!140903 (= c!26480 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140904 () Bool)

(declare-fun e!91827 () Unit!4393)

(declare-fun lt!73780 () Unit!4393)

(assert (=> b!140904 (= e!91827 lt!73780)))

(declare-fun lt!73776 () ListLongMap!1711)

(assert (=> b!140904 (= lt!73776 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73765 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73765 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73782 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73782 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73761 () Unit!4393)

(assert (=> b!140904 (= lt!73761 (addStillContains!96 lt!73776 lt!73765 (zeroValue!2789 newMap!16) lt!73782))))

(assert (=> b!140904 (contains!910 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))) lt!73782)))

(declare-fun lt!73763 () Unit!4393)

(assert (=> b!140904 (= lt!73763 lt!73761)))

(declare-fun lt!73766 () ListLongMap!1711)

(assert (=> b!140904 (= lt!73766 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73778 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73778 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73773 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73773 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73774 () Unit!4393)

(assert (=> b!140904 (= lt!73774 (addApplyDifferent!96 lt!73766 lt!73778 (minValue!2789 newMap!16) lt!73773))))

(assert (=> b!140904 (= (apply!120 (+!167 lt!73766 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))) lt!73773) (apply!120 lt!73766 lt!73773))))

(declare-fun lt!73779 () Unit!4393)

(assert (=> b!140904 (= lt!73779 lt!73774)))

(declare-fun lt!73762 () ListLongMap!1711)

(assert (=> b!140904 (= lt!73762 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73771 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73771 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73781 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73781 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73770 () Unit!4393)

(assert (=> b!140904 (= lt!73770 (addApplyDifferent!96 lt!73762 lt!73771 (zeroValue!2789 newMap!16) lt!73781))))

(assert (=> b!140904 (= (apply!120 (+!167 lt!73762 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))) lt!73781) (apply!120 lt!73762 lt!73781))))

(declare-fun lt!73767 () Unit!4393)

(assert (=> b!140904 (= lt!73767 lt!73770)))

(declare-fun lt!73777 () ListLongMap!1711)

(assert (=> b!140904 (= lt!73777 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73775 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73775 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73772 () (_ BitVec 64))

(assert (=> b!140904 (= lt!73772 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140904 (= lt!73780 (addApplyDifferent!96 lt!73777 lt!73775 (minValue!2789 newMap!16) lt!73772))))

(assert (=> b!140904 (= (apply!120 (+!167 lt!73777 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))) lt!73772) (apply!120 lt!73777 lt!73772))))

(declare-fun d!44049 () Bool)

(assert (=> d!44049 e!91837))

(declare-fun res!67250 () Bool)

(assert (=> d!44049 (=> (not res!67250) (not e!91837))))

(assert (=> d!44049 (= res!67250 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun lt!73768 () ListLongMap!1711)

(assert (=> d!44049 (= lt!73764 lt!73768)))

(declare-fun lt!73769 () Unit!4393)

(assert (=> d!44049 (= lt!73769 e!91827)))

(declare-fun c!26476 () Bool)

(declare-fun e!91838 () Bool)

(assert (=> d!44049 (= c!26476 e!91838)))

(declare-fun res!67247 () Bool)

(assert (=> d!44049 (=> (not res!67247) (not e!91838))))

(assert (=> d!44049 (= res!67247 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44049 (= lt!73768 e!91839)))

(declare-fun c!26477 () Bool)

(assert (=> d!44049 (= c!26477 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!44049 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44049 (= (getCurrentListMap!534 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73764)))

(declare-fun b!140894 () Bool)

(declare-fun e!91835 () ListLongMap!1711)

(declare-fun call!15626 () ListLongMap!1711)

(assert (=> b!140894 (= e!91835 call!15626)))

(declare-fun b!140905 () Bool)

(assert (=> b!140905 (= e!91839 (+!167 call!15627 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!140906 () Bool)

(assert (=> b!140906 (= e!91834 e!91828)))

(declare-fun res!67246 () Bool)

(assert (=> b!140906 (= res!67246 call!15630)))

(assert (=> b!140906 (=> (not res!67246) (not e!91828))))

(declare-fun bm!15625 () Bool)

(assert (=> bm!15625 (= call!15626 call!15631)))

(declare-fun b!140907 () Bool)

(declare-fun res!67244 () Bool)

(assert (=> b!140907 (=> (not res!67244) (not e!91837))))

(assert (=> b!140907 (= res!67244 e!91834)))

(declare-fun c!26481 () Bool)

(assert (=> b!140907 (= c!26481 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!140908 () Bool)

(declare-fun c!26479 () Bool)

(assert (=> b!140908 (= c!26479 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140908 (= e!91832 e!91835)))

(declare-fun b!140909 () Bool)

(assert (=> b!140909 (= e!91838 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15626 () Bool)

(declare-fun call!15629 () Bool)

(assert (=> bm!15626 (= call!15629 (contains!910 lt!73764 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140910 () Bool)

(assert (=> b!140910 (= e!91835 call!15625)))

(declare-fun b!140911 () Bool)

(assert (=> b!140911 (= e!91830 (not call!15629))))

(declare-fun bm!15627 () Bool)

(assert (=> bm!15627 (= call!15628 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!140912 () Bool)

(assert (=> b!140912 (= e!91830 e!91831)))

(declare-fun res!67249 () Bool)

(assert (=> b!140912 (= res!67249 call!15629)))

(assert (=> b!140912 (=> (not res!67249) (not e!91831))))

(declare-fun b!140913 () Bool)

(assert (=> b!140913 (= e!91833 e!91829)))

(declare-fun res!67252 () Bool)

(assert (=> b!140913 (=> (not res!67252) (not e!91829))))

(assert (=> b!140913 (= res!67252 (contains!910 lt!73764 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140913 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140914 () Bool)

(declare-fun Unit!4440 () Unit!4393)

(assert (=> b!140914 (= e!91827 Unit!4440)))

(declare-fun bm!15628 () Bool)

(assert (=> bm!15628 (= call!15627 (+!167 (ite c!26477 call!15628 (ite c!26480 call!15631 call!15626)) (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44049 c!26477) b!140905))

(assert (= (and d!44049 (not c!26477)) b!140903))

(assert (= (and b!140903 c!26480) b!140896))

(assert (= (and b!140903 (not c!26480)) b!140908))

(assert (= (and b!140908 c!26479) b!140910))

(assert (= (and b!140908 (not c!26479)) b!140894))

(assert (= (or b!140910 b!140894) bm!15625))

(assert (= (or b!140896 bm!15625) bm!15624))

(assert (= (or b!140896 b!140910) bm!15622))

(assert (= (or b!140905 bm!15624) bm!15627))

(assert (= (or b!140905 bm!15622) bm!15628))

(assert (= (and d!44049 res!67247) b!140909))

(assert (= (and d!44049 c!26476) b!140904))

(assert (= (and d!44049 (not c!26476)) b!140914))

(assert (= (and d!44049 res!67250) b!140900))

(assert (= (and b!140900 res!67251) b!140898))

(assert (= (and b!140900 (not res!67248)) b!140913))

(assert (= (and b!140913 res!67252) b!140902))

(assert (= (and b!140900 res!67245) b!140907))

(assert (= (and b!140907 c!26481) b!140906))

(assert (= (and b!140907 (not c!26481)) b!140895))

(assert (= (and b!140906 res!67246) b!140901))

(assert (= (or b!140906 b!140895) bm!15623))

(assert (= (and b!140907 res!67244) b!140899))

(assert (= (and b!140899 c!26478) b!140912))

(assert (= (and b!140899 (not c!26478)) b!140911))

(assert (= (and b!140912 res!67249) b!140897))

(assert (= (or b!140912 b!140911) bm!15626))

(declare-fun b_lambda!6291 () Bool)

(assert (=> (not b_lambda!6291) (not b!140902)))

(assert (=> b!140902 t!6328))

(declare-fun b_and!8789 () Bool)

(assert (= b_and!8785 (and (=> t!6328 result!4187) b_and!8789)))

(assert (=> b!140902 t!6330))

(declare-fun b_and!8791 () Bool)

(assert (= b_and!8787 (and (=> t!6330 result!4189) b_and!8791)))

(assert (=> b!140909 m!166699))

(assert (=> b!140909 m!166699))

(assert (=> b!140909 m!166701))

(assert (=> b!140902 m!166703))

(declare-fun m!168341 () Bool)

(assert (=> b!140902 m!168341))

(assert (=> b!140902 m!166703))

(declare-fun m!168343 () Bool)

(assert (=> b!140902 m!168343))

(assert (=> b!140902 m!166699))

(assert (=> b!140902 m!166699))

(declare-fun m!168345 () Bool)

(assert (=> b!140902 m!168345))

(assert (=> b!140902 m!168341))

(declare-fun m!168347 () Bool)

(assert (=> bm!15623 m!168347))

(assert (=> b!140913 m!166699))

(assert (=> b!140913 m!166699))

(declare-fun m!168349 () Bool)

(assert (=> b!140913 m!168349))

(declare-fun m!168351 () Bool)

(assert (=> b!140897 m!168351))

(assert (=> d!44049 m!166687))

(declare-fun m!168353 () Bool)

(assert (=> bm!15626 m!168353))

(declare-fun m!168355 () Bool)

(assert (=> bm!15628 m!168355))

(declare-fun m!168357 () Bool)

(assert (=> bm!15627 m!168357))

(declare-fun m!168359 () Bool)

(assert (=> b!140901 m!168359))

(declare-fun m!168361 () Bool)

(assert (=> b!140904 m!168361))

(declare-fun m!168363 () Bool)

(assert (=> b!140904 m!168363))

(declare-fun m!168365 () Bool)

(assert (=> b!140904 m!168365))

(declare-fun m!168367 () Bool)

(assert (=> b!140904 m!168367))

(declare-fun m!168369 () Bool)

(assert (=> b!140904 m!168369))

(declare-fun m!168371 () Bool)

(assert (=> b!140904 m!168371))

(assert (=> b!140904 m!168367))

(declare-fun m!168373 () Bool)

(assert (=> b!140904 m!168373))

(declare-fun m!168375 () Bool)

(assert (=> b!140904 m!168375))

(declare-fun m!168377 () Bool)

(assert (=> b!140904 m!168377))

(declare-fun m!168379 () Bool)

(assert (=> b!140904 m!168379))

(declare-fun m!168381 () Bool)

(assert (=> b!140904 m!168381))

(assert (=> b!140904 m!168371))

(declare-fun m!168383 () Bool)

(assert (=> b!140904 m!168383))

(declare-fun m!168385 () Bool)

(assert (=> b!140904 m!168385))

(assert (=> b!140904 m!168375))

(assert (=> b!140904 m!168379))

(assert (=> b!140904 m!166699))

(declare-fun m!168387 () Bool)

(assert (=> b!140904 m!168387))

(assert (=> b!140904 m!168357))

(declare-fun m!168389 () Bool)

(assert (=> b!140904 m!168389))

(assert (=> b!140898 m!166699))

(assert (=> b!140898 m!166699))

(assert (=> b!140898 m!166701))

(declare-fun m!168391 () Bool)

(assert (=> b!140905 m!168391))

(assert (=> b!140015 d!44049))

(assert (=> b!140180 d!43599))

(declare-fun d!44051 () Bool)

(declare-fun e!91841 () Bool)

(assert (=> d!44051 e!91841))

(declare-fun res!67253 () Bool)

(assert (=> d!44051 (=> res!67253 e!91841)))

(declare-fun lt!73786 () Bool)

(assert (=> d!44051 (= res!67253 (not lt!73786))))

(declare-fun lt!73785 () Bool)

(assert (=> d!44051 (= lt!73786 lt!73785)))

(declare-fun lt!73784 () Unit!4393)

(declare-fun e!91840 () Unit!4393)

(assert (=> d!44051 (= lt!73784 e!91840)))

(declare-fun c!26482 () Bool)

(assert (=> d!44051 (= c!26482 lt!73785)))

(assert (=> d!44051 (= lt!73785 (containsKey!178 (toList!871 lt!73001) lt!73020))))

(assert (=> d!44051 (= (contains!910 lt!73001 lt!73020) lt!73786)))

(declare-fun b!140915 () Bool)

(declare-fun lt!73783 () Unit!4393)

(assert (=> b!140915 (= e!91840 lt!73783)))

(assert (=> b!140915 (= lt!73783 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73001) lt!73020))))

(assert (=> b!140915 (isDefined!128 (getValueByKey!174 (toList!871 lt!73001) lt!73020))))

(declare-fun b!140916 () Bool)

(declare-fun Unit!4441 () Unit!4393)

(assert (=> b!140916 (= e!91840 Unit!4441)))

(declare-fun b!140917 () Bool)

(assert (=> b!140917 (= e!91841 (isDefined!128 (getValueByKey!174 (toList!871 lt!73001) lt!73020)))))

(assert (= (and d!44051 c!26482) b!140915))

(assert (= (and d!44051 (not c!26482)) b!140916))

(assert (= (and d!44051 (not res!67253)) b!140917))

(declare-fun m!168393 () Bool)

(assert (=> d!44051 m!168393))

(declare-fun m!168395 () Bool)

(assert (=> b!140915 m!168395))

(assert (=> b!140915 m!167167))

(assert (=> b!140915 m!167167))

(declare-fun m!168397 () Bool)

(assert (=> b!140915 m!168397))

(assert (=> b!140917 m!167167))

(assert (=> b!140917 m!167167))

(assert (=> b!140917 m!168397))

(assert (=> d!43661 d!44051))

(assert (=> d!43661 d!43677))

(declare-fun d!44053 () Bool)

(assert (=> d!44053 (= (apply!120 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!73020) (apply!120 lt!73001 lt!73020))))

(assert (=> d!44053 true))

(declare-fun _$34!1007 () Unit!4393)

(assert (=> d!44053 (= (choose!869 lt!73001 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) lt!73020) _$34!1007)))

(declare-fun bs!5878 () Bool)

(assert (= bs!5878 d!44053))

(assert (=> bs!5878 m!166583))

(assert (=> bs!5878 m!166583))

(assert (=> bs!5878 m!166585))

(assert (=> bs!5878 m!166589))

(assert (=> d!43661 d!44053))

(assert (=> d!43661 d!43665))

(assert (=> d!43661 d!43667))

(declare-fun d!44055 () Bool)

(declare-fun e!91843 () Bool)

(assert (=> d!44055 e!91843))

(declare-fun res!67254 () Bool)

(assert (=> d!44055 (=> res!67254 e!91843)))

(declare-fun lt!73790 () Bool)

(assert (=> d!44055 (= res!67254 (not lt!73790))))

(declare-fun lt!73789 () Bool)

(assert (=> d!44055 (= lt!73790 lt!73789)))

(declare-fun lt!73788 () Unit!4393)

(declare-fun e!91842 () Unit!4393)

(assert (=> d!44055 (= lt!73788 e!91842)))

(declare-fun c!26483 () Bool)

(assert (=> d!44055 (= c!26483 lt!73789)))

(assert (=> d!44055 (= lt!73789 (containsKey!178 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44055 (= (contains!910 lt!73279 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73790)))

(declare-fun b!140918 () Bool)

(declare-fun lt!73787 () Unit!4393)

(assert (=> b!140918 (= e!91842 lt!73787)))

(assert (=> b!140918 (= lt!73787 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!140918 (isDefined!128 (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140919 () Bool)

(declare-fun Unit!4442 () Unit!4393)

(assert (=> b!140919 (= e!91842 Unit!4442)))

(declare-fun b!140920 () Bool)

(assert (=> b!140920 (= e!91843 (isDefined!128 (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44055 c!26483) b!140918))

(assert (= (and d!44055 (not c!26483)) b!140919))

(assert (= (and d!44055 (not res!67254)) b!140920))

(declare-fun m!168399 () Bool)

(assert (=> d!44055 m!168399))

(declare-fun m!168401 () Bool)

(assert (=> b!140918 m!168401))

(assert (=> b!140918 m!167013))

(assert (=> b!140918 m!167013))

(declare-fun m!168403 () Bool)

(assert (=> b!140918 m!168403))

(assert (=> b!140920 m!167013))

(assert (=> b!140920 m!167013))

(assert (=> b!140920 m!168403))

(assert (=> d!43635 d!44055))

(declare-fun b!140924 () Bool)

(declare-fun e!91845 () Option!180)

(assert (=> b!140924 (= e!91845 None!178)))

(declare-fun b!140922 () Bool)

(declare-fun e!91844 () Option!180)

(assert (=> b!140922 (= e!91844 e!91845)))

(declare-fun c!26485 () Bool)

(assert (=> b!140922 (= c!26485 (and ((_ is Cons!1735) lt!73280) (not (= (_1!1339 (h!2342 lt!73280)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140921 () Bool)

(assert (=> b!140921 (= e!91844 (Some!179 (_2!1339 (h!2342 lt!73280))))))

(declare-fun d!44057 () Bool)

(declare-fun c!26484 () Bool)

(assert (=> d!44057 (= c!26484 (and ((_ is Cons!1735) lt!73280) (= (_1!1339 (h!2342 lt!73280)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44057 (= (getValueByKey!174 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91844)))

(declare-fun b!140923 () Bool)

(assert (=> b!140923 (= e!91845 (getValueByKey!174 (t!6314 lt!73280) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44057 c!26484) b!140921))

(assert (= (and d!44057 (not c!26484)) b!140922))

(assert (= (and b!140922 c!26485) b!140923))

(assert (= (and b!140922 (not c!26485)) b!140924))

(declare-fun m!168405 () Bool)

(assert (=> b!140923 m!168405))

(assert (=> d!43635 d!44057))

(declare-fun d!44059 () Bool)

(assert (=> d!44059 (= (getValueByKey!174 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73791 () Unit!4393)

(assert (=> d!44059 (= lt!73791 (choose!872 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91846 () Bool)

(assert (=> d!44059 e!91846))

(declare-fun res!67255 () Bool)

(assert (=> d!44059 (=> (not res!67255) (not e!91846))))

(assert (=> d!44059 (= res!67255 (isStrictlySorted!320 lt!73280))))

(assert (=> d!44059 (= (lemmaContainsTupThenGetReturnValue!91 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73791)))

(declare-fun b!140925 () Bool)

(declare-fun res!67256 () Bool)

(assert (=> b!140925 (=> (not res!67256) (not e!91846))))

(assert (=> b!140925 (= res!67256 (containsKey!178 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140926 () Bool)

(assert (=> b!140926 (= e!91846 (contains!914 lt!73280 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44059 res!67255) b!140925))

(assert (= (and b!140925 res!67256) b!140926))

(assert (=> d!44059 m!167007))

(declare-fun m!168407 () Bool)

(assert (=> d!44059 m!168407))

(declare-fun m!168409 () Bool)

(assert (=> d!44059 m!168409))

(declare-fun m!168411 () Bool)

(assert (=> b!140925 m!168411))

(declare-fun m!168413 () Bool)

(assert (=> b!140926 m!168413))

(assert (=> d!43635 d!44059))

(declare-fun b!140927 () Bool)

(declare-fun e!91849 () List!1739)

(declare-fun call!15634 () List!1739)

(assert (=> b!140927 (= e!91849 call!15634)))

(declare-fun b!140928 () Bool)

(declare-fun e!91847 () List!1739)

(declare-fun call!15633 () List!1739)

(assert (=> b!140928 (= e!91847 call!15633)))

(declare-fun b!140929 () Bool)

(declare-fun lt!73792 () List!1739)

(declare-fun e!91850 () Bool)

(assert (=> b!140929 (= e!91850 (contains!914 lt!73792 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91848 () List!1739)

(declare-fun c!26489 () Bool)

(declare-fun bm!15629 () Bool)

(assert (=> bm!15629 (= call!15634 ($colon$colon!93 e!91848 (ite c!26489 (h!2342 (toList!871 call!15501)) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26486 () Bool)

(assert (=> bm!15629 (= c!26486 c!26489)))

(declare-fun bm!15630 () Bool)

(declare-fun call!15632 () List!1739)

(assert (=> bm!15630 (= call!15633 call!15632)))

(declare-fun b!140930 () Bool)

(declare-fun res!67257 () Bool)

(assert (=> b!140930 (=> (not res!67257) (not e!91850))))

(assert (=> b!140930 (= res!67257 (containsKey!178 lt!73792 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!44061 () Bool)

(assert (=> d!44061 e!91850))

(declare-fun res!67258 () Bool)

(assert (=> d!44061 (=> (not res!67258) (not e!91850))))

(assert (=> d!44061 (= res!67258 (isStrictlySorted!320 lt!73792))))

(assert (=> d!44061 (= lt!73792 e!91849)))

(assert (=> d!44061 (= c!26489 (and ((_ is Cons!1735) (toList!871 call!15501)) (bvslt (_1!1339 (h!2342 (toList!871 call!15501))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44061 (isStrictlySorted!320 (toList!871 call!15501))))

(assert (=> d!44061 (= (insertStrictlySorted!94 (toList!871 call!15501) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73792)))

(declare-fun b!140931 () Bool)

(declare-fun c!26487 () Bool)

(declare-fun c!26488 () Bool)

(assert (=> b!140931 (= e!91848 (ite c!26488 (t!6314 (toList!871 call!15501)) (ite c!26487 (Cons!1735 (h!2342 (toList!871 call!15501)) (t!6314 (toList!871 call!15501))) Nil!1736)))))

(declare-fun b!140932 () Bool)

(assert (=> b!140932 (= c!26487 (and ((_ is Cons!1735) (toList!871 call!15501)) (bvsgt (_1!1339 (h!2342 (toList!871 call!15501))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91851 () List!1739)

(assert (=> b!140932 (= e!91851 e!91847)))

(declare-fun b!140933 () Bool)

(assert (=> b!140933 (= e!91847 call!15633)))

(declare-fun b!140934 () Bool)

(assert (=> b!140934 (= e!91848 (insertStrictlySorted!94 (t!6314 (toList!871 call!15501)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15631 () Bool)

(assert (=> bm!15631 (= call!15632 call!15634)))

(declare-fun b!140935 () Bool)

(assert (=> b!140935 (= e!91849 e!91851)))

(assert (=> b!140935 (= c!26488 (and ((_ is Cons!1735) (toList!871 call!15501)) (= (_1!1339 (h!2342 (toList!871 call!15501))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140936 () Bool)

(assert (=> b!140936 (= e!91851 call!15632)))

(assert (= (and d!44061 c!26489) b!140927))

(assert (= (and d!44061 (not c!26489)) b!140935))

(assert (= (and b!140935 c!26488) b!140936))

(assert (= (and b!140935 (not c!26488)) b!140932))

(assert (= (and b!140932 c!26487) b!140928))

(assert (= (and b!140932 (not c!26487)) b!140933))

(assert (= (or b!140928 b!140933) bm!15630))

(assert (= (or b!140936 bm!15630) bm!15631))

(assert (= (or b!140927 bm!15631) bm!15629))

(assert (= (and bm!15629 c!26486) b!140934))

(assert (= (and bm!15629 (not c!26486)) b!140931))

(assert (= (and d!44061 res!67258) b!140930))

(assert (= (and b!140930 res!67257) b!140929))

(declare-fun m!168415 () Bool)

(assert (=> b!140930 m!168415))

(declare-fun m!168417 () Bool)

(assert (=> b!140934 m!168417))

(declare-fun m!168419 () Bool)

(assert (=> bm!15629 m!168419))

(declare-fun m!168421 () Bool)

(assert (=> b!140929 m!168421))

(declare-fun m!168423 () Bool)

(assert (=> d!44061 m!168423))

(declare-fun m!168425 () Bool)

(assert (=> d!44061 m!168425))

(assert (=> d!43635 d!44061))

(declare-fun b!140938 () Bool)

(declare-fun e!91853 () Bool)

(declare-fun call!15635 () Bool)

(assert (=> b!140938 (= e!91853 call!15635)))

(declare-fun b!140939 () Bool)

(declare-fun e!91854 () Bool)

(assert (=> b!140939 (= e!91854 e!91853)))

(declare-fun c!26490 () Bool)

(assert (=> b!140939 (= c!26490 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140940 () Bool)

(declare-fun e!91852 () Bool)

(assert (=> b!140940 (= e!91852 call!15635)))

(declare-fun bm!15632 () Bool)

(assert (=> bm!15632 (= call!15635 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!140937 () Bool)

(assert (=> b!140937 (= e!91853 e!91852)))

(declare-fun lt!73794 () (_ BitVec 64))

(assert (=> b!140937 (= lt!73794 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!73793 () Unit!4393)

(assert (=> b!140937 (= lt!73793 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 newMap!16) lt!73794 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!140937 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73794 #b00000000000000000000000000000000)))

(declare-fun lt!73795 () Unit!4393)

(assert (=> b!140937 (= lt!73795 lt!73793)))

(declare-fun res!67260 () Bool)

(assert (=> b!140937 (= res!67260 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4697 newMap!16) (mask!7278 newMap!16)) (Found!282 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!140937 (=> (not res!67260) (not e!91852))))

(declare-fun d!44063 () Bool)

(declare-fun res!67259 () Bool)

(assert (=> d!44063 (=> res!67259 e!91854)))

(assert (=> d!44063 (= res!67259 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44063 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 newMap!16) (mask!7278 newMap!16)) e!91854)))

(assert (= (and d!44063 (not res!67259)) b!140939))

(assert (= (and b!140939 c!26490) b!140937))

(assert (= (and b!140939 (not c!26490)) b!140938))

(assert (= (and b!140937 res!67260) b!140940))

(assert (= (or b!140940 b!140938) bm!15632))

(assert (=> b!140939 m!167925))

(assert (=> b!140939 m!167925))

(assert (=> b!140939 m!167927))

(declare-fun m!168427 () Bool)

(assert (=> bm!15632 m!168427))

(assert (=> b!140937 m!167925))

(declare-fun m!168429 () Bool)

(assert (=> b!140937 m!168429))

(declare-fun m!168431 () Bool)

(assert (=> b!140937 m!168431))

(assert (=> b!140937 m!167925))

(declare-fun m!168433 () Bool)

(assert (=> b!140937 m!168433))

(assert (=> bm!15558 d!44063))

(assert (=> b!140312 d!43875))

(assert (=> b!140312 d!43877))

(declare-fun d!44065 () Bool)

(declare-fun e!91856 () Bool)

(assert (=> d!44065 e!91856))

(declare-fun res!67261 () Bool)

(assert (=> d!44065 (=> res!67261 e!91856)))

(declare-fun lt!73799 () Bool)

(assert (=> d!44065 (= res!67261 (not lt!73799))))

(declare-fun lt!73798 () Bool)

(assert (=> d!44065 (= lt!73799 lt!73798)))

(declare-fun lt!73797 () Unit!4393)

(declare-fun e!91855 () Unit!4393)

(assert (=> d!44065 (= lt!73797 e!91855)))

(declare-fun c!26491 () Bool)

(assert (=> d!44065 (= c!26491 lt!73798)))

(assert (=> d!44065 (= lt!73798 (containsKey!178 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44065 (= (contains!910 lt!73390 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73799)))

(declare-fun b!140941 () Bool)

(declare-fun lt!73796 () Unit!4393)

(assert (=> b!140941 (= e!91855 lt!73796)))

(assert (=> b!140941 (= lt!73796 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> b!140941 (isDefined!128 (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140942 () Bool)

(declare-fun Unit!4443 () Unit!4393)

(assert (=> b!140942 (= e!91855 Unit!4443)))

(declare-fun b!140943 () Bool)

(assert (=> b!140943 (= e!91856 (isDefined!128 (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44065 c!26491) b!140941))

(assert (= (and d!44065 (not c!26491)) b!140942))

(assert (= (and d!44065 (not res!67261)) b!140943))

(declare-fun m!168435 () Bool)

(assert (=> d!44065 m!168435))

(declare-fun m!168437 () Bool)

(assert (=> b!140941 m!168437))

(assert (=> b!140941 m!167131))

(assert (=> b!140941 m!167131))

(declare-fun m!168439 () Bool)

(assert (=> b!140941 m!168439))

(assert (=> b!140943 m!167131))

(assert (=> b!140943 m!167131))

(assert (=> b!140943 m!168439))

(assert (=> d!43657 d!44065))

(declare-fun b!140947 () Bool)

(declare-fun e!91858 () Option!180)

(assert (=> b!140947 (= e!91858 None!178)))

(declare-fun b!140945 () Bool)

(declare-fun e!91857 () Option!180)

(assert (=> b!140945 (= e!91857 e!91858)))

(declare-fun c!26493 () Bool)

(assert (=> b!140945 (= c!26493 (and ((_ is Cons!1735) lt!73391) (not (= (_1!1339 (h!2342 lt!73391)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140944 () Bool)

(assert (=> b!140944 (= e!91857 (Some!179 (_2!1339 (h!2342 lt!73391))))))

(declare-fun c!26492 () Bool)

(declare-fun d!44067 () Bool)

(assert (=> d!44067 (= c!26492 (and ((_ is Cons!1735) lt!73391) (= (_1!1339 (h!2342 lt!73391)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44067 (= (getValueByKey!174 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91857)))

(declare-fun b!140946 () Bool)

(assert (=> b!140946 (= e!91858 (getValueByKey!174 (t!6314 lt!73391) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44067 c!26492) b!140944))

(assert (= (and d!44067 (not c!26492)) b!140945))

(assert (= (and b!140945 c!26493) b!140946))

(assert (= (and b!140945 (not c!26493)) b!140947))

(declare-fun m!168441 () Bool)

(assert (=> b!140946 m!168441))

(assert (=> d!43657 d!44067))

(declare-fun d!44069 () Bool)

(assert (=> d!44069 (= (getValueByKey!174 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73800 () Unit!4393)

(assert (=> d!44069 (= lt!73800 (choose!872 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!91859 () Bool)

(assert (=> d!44069 e!91859))

(declare-fun res!67262 () Bool)

(assert (=> d!44069 (=> (not res!67262) (not e!91859))))

(assert (=> d!44069 (= res!67262 (isStrictlySorted!320 lt!73391))))

(assert (=> d!44069 (= (lemmaContainsTupThenGetReturnValue!91 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73800)))

(declare-fun b!140948 () Bool)

(declare-fun res!67263 () Bool)

(assert (=> b!140948 (=> (not res!67263) (not e!91859))))

(assert (=> b!140948 (= res!67263 (containsKey!178 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140949 () Bool)

(assert (=> b!140949 (= e!91859 (contains!914 lt!73391 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44069 res!67262) b!140948))

(assert (= (and b!140948 res!67263) b!140949))

(assert (=> d!44069 m!167125))

(declare-fun m!168443 () Bool)

(assert (=> d!44069 m!168443))

(declare-fun m!168445 () Bool)

(assert (=> d!44069 m!168445))

(declare-fun m!168447 () Bool)

(assert (=> b!140948 m!168447))

(declare-fun m!168449 () Bool)

(assert (=> b!140949 m!168449))

(assert (=> d!43657 d!44069))

(declare-fun b!140950 () Bool)

(declare-fun e!91862 () List!1739)

(declare-fun call!15638 () List!1739)

(assert (=> b!140950 (= e!91862 call!15638)))

(declare-fun b!140951 () Bool)

(declare-fun e!91860 () List!1739)

(declare-fun call!15637 () List!1739)

(assert (=> b!140951 (= e!91860 call!15637)))

(declare-fun lt!73801 () List!1739)

(declare-fun b!140952 () Bool)

(declare-fun e!91863 () Bool)

(assert (=> b!140952 (= e!91863 (contains!914 lt!73801 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun bm!15633 () Bool)

(declare-fun e!91861 () List!1739)

(declare-fun c!26497 () Bool)

(assert (=> bm!15633 (= call!15638 ($colon$colon!93 e!91861 (ite c!26497 (h!2342 (toList!871 lt!73016)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26494 () Bool)

(assert (=> bm!15633 (= c!26494 c!26497)))

(declare-fun bm!15634 () Bool)

(declare-fun call!15636 () List!1739)

(assert (=> bm!15634 (= call!15637 call!15636)))

(declare-fun b!140953 () Bool)

(declare-fun res!67264 () Bool)

(assert (=> b!140953 (=> (not res!67264) (not e!91863))))

(assert (=> b!140953 (= res!67264 (containsKey!178 lt!73801 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!44071 () Bool)

(assert (=> d!44071 e!91863))

(declare-fun res!67265 () Bool)

(assert (=> d!44071 (=> (not res!67265) (not e!91863))))

(assert (=> d!44071 (= res!67265 (isStrictlySorted!320 lt!73801))))

(assert (=> d!44071 (= lt!73801 e!91862)))

(assert (=> d!44071 (= c!26497 (and ((_ is Cons!1735) (toList!871 lt!73016)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73016))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44071 (isStrictlySorted!320 (toList!871 lt!73016))))

(assert (=> d!44071 (= (insertStrictlySorted!94 (toList!871 lt!73016) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73801)))

(declare-fun c!26496 () Bool)

(declare-fun b!140954 () Bool)

(declare-fun c!26495 () Bool)

(assert (=> b!140954 (= e!91861 (ite c!26496 (t!6314 (toList!871 lt!73016)) (ite c!26495 (Cons!1735 (h!2342 (toList!871 lt!73016)) (t!6314 (toList!871 lt!73016))) Nil!1736)))))

(declare-fun b!140955 () Bool)

(assert (=> b!140955 (= c!26495 (and ((_ is Cons!1735) (toList!871 lt!73016)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73016))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91864 () List!1739)

(assert (=> b!140955 (= e!91864 e!91860)))

(declare-fun b!140956 () Bool)

(assert (=> b!140956 (= e!91860 call!15637)))

(declare-fun b!140957 () Bool)

(assert (=> b!140957 (= e!91861 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73016)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15635 () Bool)

(assert (=> bm!15635 (= call!15636 call!15638)))

(declare-fun b!140958 () Bool)

(assert (=> b!140958 (= e!91862 e!91864)))

(assert (=> b!140958 (= c!26496 (and ((_ is Cons!1735) (toList!871 lt!73016)) (= (_1!1339 (h!2342 (toList!871 lt!73016))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!140959 () Bool)

(assert (=> b!140959 (= e!91864 call!15636)))

(assert (= (and d!44071 c!26497) b!140950))

(assert (= (and d!44071 (not c!26497)) b!140958))

(assert (= (and b!140958 c!26496) b!140959))

(assert (= (and b!140958 (not c!26496)) b!140955))

(assert (= (and b!140955 c!26495) b!140951))

(assert (= (and b!140955 (not c!26495)) b!140956))

(assert (= (or b!140951 b!140956) bm!15634))

(assert (= (or b!140959 bm!15634) bm!15635))

(assert (= (or b!140950 bm!15635) bm!15633))

(assert (= (and bm!15633 c!26494) b!140957))

(assert (= (and bm!15633 (not c!26494)) b!140954))

(assert (= (and d!44071 res!67265) b!140953))

(assert (= (and b!140953 res!67264) b!140952))

(declare-fun m!168451 () Bool)

(assert (=> b!140953 m!168451))

(declare-fun m!168453 () Bool)

(assert (=> b!140957 m!168453))

(declare-fun m!168455 () Bool)

(assert (=> bm!15633 m!168455))

(declare-fun m!168457 () Bool)

(assert (=> b!140952 m!168457))

(declare-fun m!168459 () Bool)

(assert (=> d!44071 m!168459))

(declare-fun m!168461 () Bool)

(assert (=> d!44071 m!168461))

(assert (=> d!43657 d!44071))

(assert (=> b!140009 d!43941))

(assert (=> b!140009 d!43943))

(declare-fun d!44073 () Bool)

(assert (=> d!44073 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000)))

(declare-fun lt!73804 () Unit!4393)

(declare-fun choose!13 (array!4873 (_ BitVec 64) (_ BitVec 32)) Unit!4393)

(assert (=> d!44073 (= lt!73804 (choose!13 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000))))

(assert (=> d!44073 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44073 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000) lt!73804)))

(declare-fun bs!5879 () Bool)

(assert (= bs!5879 d!44073))

(assert (=> bs!5879 m!167097))

(declare-fun m!168463 () Bool)

(assert (=> bs!5879 m!168463))

(assert (=> b!140306 d!44073))

(declare-fun d!44075 () Bool)

(declare-fun res!67266 () Bool)

(declare-fun e!91865 () Bool)

(assert (=> d!44075 (=> res!67266 e!91865)))

(assert (=> d!44075 (= res!67266 (= (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) lt!73378))))

(assert (=> d!44075 (= (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000) e!91865)))

(declare-fun b!140960 () Bool)

(declare-fun e!91866 () Bool)

(assert (=> b!140960 (= e!91865 e!91866)))

(declare-fun res!67267 () Bool)

(assert (=> b!140960 (=> (not res!67267) (not e!91866))))

(assert (=> b!140960 (= res!67267 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!140961 () Bool)

(assert (=> b!140961 (= e!91866 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44075 (not res!67266)) b!140960))

(assert (= (and b!140960 res!67267) b!140961))

(assert (=> d!44075 m!166699))

(declare-fun m!168465 () Bool)

(assert (=> b!140961 m!168465))

(assert (=> b!140306 d!44075))

(declare-fun b!140962 () Bool)

(declare-fun c!26500 () Bool)

(declare-fun lt!73806 () (_ BitVec 64))

(assert (=> b!140962 (= c!26500 (= lt!73806 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91869 () SeekEntryResult!282)

(declare-fun e!91868 () SeekEntryResult!282)

(assert (=> b!140962 (= e!91869 e!91868)))

(declare-fun b!140963 () Bool)

(declare-fun e!91867 () SeekEntryResult!282)

(assert (=> b!140963 (= e!91867 Undefined!282)))

(declare-fun b!140964 () Bool)

(declare-fun lt!73807 () SeekEntryResult!282)

(assert (=> b!140964 (= e!91869 (Found!282 (index!3293 lt!73807)))))

(declare-fun b!140965 () Bool)

(assert (=> b!140965 (= e!91868 (seekKeyOrZeroReturnVacant!0 (x!16138 lt!73807) (index!3293 lt!73807) (index!3293 lt!73807) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun d!44077 () Bool)

(declare-fun lt!73805 () SeekEntryResult!282)

(assert (=> d!44077 (and (or ((_ is Undefined!282) lt!73805) (not ((_ is Found!282) lt!73805)) (and (bvsge (index!3292 lt!73805) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73805) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73805) ((_ is Found!282) lt!73805) (not ((_ is MissingZero!282) lt!73805)) (and (bvsge (index!3291 lt!73805) #b00000000000000000000000000000000) (bvslt (index!3291 lt!73805) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73805) ((_ is Found!282) lt!73805) ((_ is MissingZero!282) lt!73805) (not ((_ is MissingVacant!282) lt!73805)) (and (bvsge (index!3294 lt!73805) #b00000000000000000000000000000000) (bvslt (index!3294 lt!73805) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73805) (ite ((_ is Found!282) lt!73805) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73805)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!282) lt!73805) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!73805)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!282) lt!73805) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73805)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44077 (= lt!73805 e!91867)))

(declare-fun c!26498 () Bool)

(assert (=> d!44077 (= c!26498 (and ((_ is Intermediate!282) lt!73807) (undefined!1094 lt!73807)))))

(assert (=> d!44077 (= lt!73807 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(assert (=> d!44077 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44077 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!73805)))

(declare-fun b!140966 () Bool)

(assert (=> b!140966 (= e!91868 (MissingZero!282 (index!3293 lt!73807)))))

(declare-fun b!140967 () Bool)

(assert (=> b!140967 (= e!91867 e!91869)))

(assert (=> b!140967 (= lt!73806 (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73807)))))

(declare-fun c!26499 () Bool)

(assert (=> b!140967 (= c!26499 (= lt!73806 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44077 c!26498) b!140963))

(assert (= (and d!44077 (not c!26498)) b!140967))

(assert (= (and b!140967 c!26499) b!140964))

(assert (= (and b!140967 (not c!26499)) b!140962))

(assert (= (and b!140962 c!26500) b!140966))

(assert (= (and b!140962 (not c!26500)) b!140965))

(assert (=> b!140965 m!166699))

(declare-fun m!168467 () Bool)

(assert (=> b!140965 m!168467))

(assert (=> d!44077 m!166699))

(declare-fun m!168469 () Bool)

(assert (=> d!44077 m!168469))

(declare-fun m!168471 () Bool)

(assert (=> d!44077 m!168471))

(assert (=> d!44077 m!168469))

(assert (=> d!44077 m!166699))

(declare-fun m!168473 () Bool)

(assert (=> d!44077 m!168473))

(declare-fun m!168475 () Bool)

(assert (=> d!44077 m!168475))

(assert (=> d!44077 m!166687))

(declare-fun m!168477 () Bool)

(assert (=> d!44077 m!168477))

(declare-fun m!168479 () Bool)

(assert (=> b!140967 m!168479))

(assert (=> b!140306 d!44077))

(declare-fun d!44079 () Bool)

(assert (=> d!44079 (= (apply!120 lt!73141 lt!73136) (get!1528 (getValueByKey!174 (toList!871 lt!73141) lt!73136)))))

(declare-fun bs!5880 () Bool)

(assert (= bs!5880 d!44079))

(declare-fun m!168481 () Bool)

(assert (=> bs!5880 m!168481))

(assert (=> bs!5880 m!168481))

(declare-fun m!168483 () Bool)

(assert (=> bs!5880 m!168483))

(assert (=> b!140026 d!44079))

(declare-fun d!44081 () Bool)

(assert (=> d!44081 (= (apply!120 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73136) (apply!120 lt!73141 lt!73136))))

(declare-fun lt!73808 () Unit!4393)

(assert (=> d!44081 (= lt!73808 (choose!869 lt!73141 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73136))))

(declare-fun e!91870 () Bool)

(assert (=> d!44081 e!91870))

(declare-fun res!67268 () Bool)

(assert (=> d!44081 (=> (not res!67268) (not e!91870))))

(assert (=> d!44081 (= res!67268 (contains!910 lt!73141 lt!73136))))

(assert (=> d!44081 (= (addApplyDifferent!96 lt!73141 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73136) lt!73808)))

(declare-fun b!140968 () Bool)

(assert (=> b!140968 (= e!91870 (not (= lt!73136 lt!73139)))))

(assert (= (and d!44081 res!67268) b!140968))

(assert (=> d!44081 m!166735))

(assert (=> d!44081 m!166735))

(assert (=> d!44081 m!166747))

(declare-fun m!168485 () Bool)

(assert (=> d!44081 m!168485))

(assert (=> d!44081 m!166727))

(declare-fun m!168487 () Bool)

(assert (=> d!44081 m!168487))

(assert (=> b!140026 d!44081))

(declare-fun d!44083 () Bool)

(declare-fun e!91872 () Bool)

(assert (=> d!44083 e!91872))

(declare-fun res!67269 () Bool)

(assert (=> d!44083 (=> res!67269 e!91872)))

(declare-fun lt!73812 () Bool)

(assert (=> d!44083 (= res!67269 (not lt!73812))))

(declare-fun lt!73811 () Bool)

(assert (=> d!44083 (= lt!73812 lt!73811)))

(declare-fun lt!73810 () Unit!4393)

(declare-fun e!91871 () Unit!4393)

(assert (=> d!44083 (= lt!73810 e!91871)))

(declare-fun c!26501 () Bool)

(assert (=> d!44083 (= c!26501 lt!73811)))

(assert (=> d!44083 (= lt!73811 (containsKey!178 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))

(assert (=> d!44083 (= (contains!910 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73146) lt!73812)))

(declare-fun b!140969 () Bool)

(declare-fun lt!73809 () Unit!4393)

(assert (=> b!140969 (= e!91871 lt!73809)))

(assert (=> b!140969 (= lt!73809 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))

(assert (=> b!140969 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))

(declare-fun b!140970 () Bool)

(declare-fun Unit!4444 () Unit!4393)

(assert (=> b!140970 (= e!91871 Unit!4444)))

(declare-fun b!140971 () Bool)

(assert (=> b!140971 (= e!91872 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146)))))

(assert (= (and d!44083 c!26501) b!140969))

(assert (= (and d!44083 (not c!26501)) b!140970))

(assert (= (and d!44083 (not res!67269)) b!140971))

(declare-fun m!168489 () Bool)

(assert (=> d!44083 m!168489))

(declare-fun m!168491 () Bool)

(assert (=> b!140969 m!168491))

(declare-fun m!168493 () Bool)

(assert (=> b!140969 m!168493))

(assert (=> b!140969 m!168493))

(declare-fun m!168495 () Bool)

(assert (=> b!140969 m!168495))

(assert (=> b!140971 m!168493))

(assert (=> b!140971 m!168493))

(assert (=> b!140971 m!168495))

(assert (=> b!140026 d!44083))

(declare-fun d!44085 () Bool)

(assert (=> d!44085 (= (apply!120 lt!73130 lt!73137) (get!1528 (getValueByKey!174 (toList!871 lt!73130) lt!73137)))))

(declare-fun bs!5881 () Bool)

(assert (= bs!5881 d!44085))

(declare-fun m!168497 () Bool)

(assert (=> bs!5881 m!168497))

(assert (=> bs!5881 m!168497))

(declare-fun m!168499 () Bool)

(assert (=> bs!5881 m!168499))

(assert (=> b!140026 d!44085))

(declare-fun d!44087 () Bool)

(declare-fun e!91873 () Bool)

(assert (=> d!44087 e!91873))

(declare-fun res!67271 () Bool)

(assert (=> d!44087 (=> (not res!67271) (not e!91873))))

(declare-fun lt!73815 () ListLongMap!1711)

(assert (=> d!44087 (= res!67271 (contains!910 lt!73815 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!73816 () List!1739)

(assert (=> d!44087 (= lt!73815 (ListLongMap!1712 lt!73816))))

(declare-fun lt!73813 () Unit!4393)

(declare-fun lt!73814 () Unit!4393)

(assert (=> d!44087 (= lt!73813 lt!73814)))

(assert (=> d!44087 (= (getValueByKey!174 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44087 (= lt!73814 (lemmaContainsTupThenGetReturnValue!91 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44087 (= lt!73816 (insertStrictlySorted!94 (toList!871 lt!73141) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44087 (= (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73815)))

(declare-fun b!140972 () Bool)

(declare-fun res!67270 () Bool)

(assert (=> b!140972 (=> (not res!67270) (not e!91873))))

(assert (=> b!140972 (= res!67270 (= (getValueByKey!174 (toList!871 lt!73815) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!140973 () Bool)

(assert (=> b!140973 (= e!91873 (contains!914 (toList!871 lt!73815) (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!44087 res!67271) b!140972))

(assert (= (and b!140972 res!67270) b!140973))

(declare-fun m!168501 () Bool)

(assert (=> d!44087 m!168501))

(declare-fun m!168503 () Bool)

(assert (=> d!44087 m!168503))

(declare-fun m!168505 () Bool)

(assert (=> d!44087 m!168505))

(declare-fun m!168507 () Bool)

(assert (=> d!44087 m!168507))

(declare-fun m!168509 () Bool)

(assert (=> b!140972 m!168509))

(declare-fun m!168511 () Bool)

(assert (=> b!140973 m!168511))

(assert (=> b!140026 d!44087))

(declare-fun d!44089 () Bool)

(assert (=> d!44089 (= (apply!120 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73136) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73136)))))

(declare-fun bs!5882 () Bool)

(assert (= bs!5882 d!44089))

(declare-fun m!168513 () Bool)

(assert (=> bs!5882 m!168513))

(assert (=> bs!5882 m!168513))

(declare-fun m!168515 () Bool)

(assert (=> bs!5882 m!168515))

(assert (=> b!140026 d!44089))

(declare-fun d!44091 () Bool)

(assert (=> d!44091 (= (apply!120 lt!73126 lt!73145) (get!1528 (getValueByKey!174 (toList!871 lt!73126) lt!73145)))))

(declare-fun bs!5883 () Bool)

(assert (= bs!5883 d!44091))

(declare-fun m!168517 () Bool)

(assert (=> bs!5883 m!168517))

(assert (=> bs!5883 m!168517))

(declare-fun m!168519 () Bool)

(assert (=> bs!5883 m!168519))

(assert (=> b!140026 d!44091))

(declare-fun d!44093 () Bool)

(assert (=> d!44093 (= (apply!120 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73137) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73137)))))

(declare-fun bs!5884 () Bool)

(assert (= bs!5884 d!44093))

(declare-fun m!168521 () Bool)

(assert (=> bs!5884 m!168521))

(assert (=> bs!5884 m!168521))

(declare-fun m!168523 () Bool)

(assert (=> bs!5884 m!168523))

(assert (=> b!140026 d!44093))

(declare-fun d!44095 () Bool)

(declare-fun e!91874 () Bool)

(assert (=> d!44095 e!91874))

(declare-fun res!67273 () Bool)

(assert (=> d!44095 (=> (not res!67273) (not e!91874))))

(declare-fun lt!73819 () ListLongMap!1711)

(assert (=> d!44095 (= res!67273 (contains!910 lt!73819 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!73820 () List!1739)

(assert (=> d!44095 (= lt!73819 (ListLongMap!1712 lt!73820))))

(declare-fun lt!73817 () Unit!4393)

(declare-fun lt!73818 () Unit!4393)

(assert (=> d!44095 (= lt!73817 lt!73818)))

(assert (=> d!44095 (= (getValueByKey!174 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44095 (= lt!73818 (lemmaContainsTupThenGetReturnValue!91 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44095 (= lt!73820 (insertStrictlySorted!94 (toList!871 lt!73126) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44095 (= (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73819)))

(declare-fun b!140974 () Bool)

(declare-fun res!67272 () Bool)

(assert (=> b!140974 (=> (not res!67272) (not e!91874))))

(assert (=> b!140974 (= res!67272 (= (getValueByKey!174 (toList!871 lt!73819) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!140975 () Bool)

(assert (=> b!140975 (= e!91874 (contains!914 (toList!871 lt!73819) (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44095 res!67273) b!140974))

(assert (= (and b!140974 res!67272) b!140975))

(declare-fun m!168525 () Bool)

(assert (=> d!44095 m!168525))

(declare-fun m!168527 () Bool)

(assert (=> d!44095 m!168527))

(declare-fun m!168529 () Bool)

(assert (=> d!44095 m!168529))

(declare-fun m!168531 () Bool)

(assert (=> d!44095 m!168531))

(declare-fun m!168533 () Bool)

(assert (=> b!140974 m!168533))

(declare-fun m!168535 () Bool)

(assert (=> b!140975 m!168535))

(assert (=> b!140026 d!44095))

(declare-fun d!44097 () Bool)

(assert (=> d!44097 (= (apply!120 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73145) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73145)))))

(declare-fun bs!5885 () Bool)

(assert (= bs!5885 d!44097))

(declare-fun m!168537 () Bool)

(assert (=> bs!5885 m!168537))

(assert (=> bs!5885 m!168537))

(declare-fun m!168539 () Bool)

(assert (=> bs!5885 m!168539))

(assert (=> b!140026 d!44097))

(declare-fun d!44099 () Bool)

(declare-fun e!91875 () Bool)

(assert (=> d!44099 e!91875))

(declare-fun res!67275 () Bool)

(assert (=> d!44099 (=> (not res!67275) (not e!91875))))

(declare-fun lt!73823 () ListLongMap!1711)

(assert (=> d!44099 (= res!67275 (contains!910 lt!73823 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!73824 () List!1739)

(assert (=> d!44099 (= lt!73823 (ListLongMap!1712 lt!73824))))

(declare-fun lt!73821 () Unit!4393)

(declare-fun lt!73822 () Unit!4393)

(assert (=> d!44099 (= lt!73821 lt!73822)))

(assert (=> d!44099 (= (getValueByKey!174 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44099 (= lt!73822 (lemmaContainsTupThenGetReturnValue!91 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44099 (= lt!73824 (insertStrictlySorted!94 (toList!871 lt!73140) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!44099 (= (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73823)))

(declare-fun b!140976 () Bool)

(declare-fun res!67274 () Bool)

(assert (=> b!140976 (=> (not res!67274) (not e!91875))))

(assert (=> b!140976 (= res!67274 (= (getValueByKey!174 (toList!871 lt!73823) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!140977 () Bool)

(assert (=> b!140977 (= e!91875 (contains!914 (toList!871 lt!73823) (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44099 res!67275) b!140976))

(assert (= (and b!140976 res!67274) b!140977))

(declare-fun m!168541 () Bool)

(assert (=> d!44099 m!168541))

(declare-fun m!168543 () Bool)

(assert (=> d!44099 m!168543))

(declare-fun m!168545 () Bool)

(assert (=> d!44099 m!168545))

(declare-fun m!168547 () Bool)

(assert (=> d!44099 m!168547))

(declare-fun m!168549 () Bool)

(assert (=> b!140976 m!168549))

(declare-fun m!168551 () Bool)

(assert (=> b!140977 m!168551))

(assert (=> b!140026 d!44099))

(declare-fun d!44101 () Bool)

(assert (=> d!44101 (= (apply!120 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73137) (apply!120 lt!73130 lt!73137))))

(declare-fun lt!73825 () Unit!4393)

(assert (=> d!44101 (= lt!73825 (choose!869 lt!73130 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73137))))

(declare-fun e!91876 () Bool)

(assert (=> d!44101 e!91876))

(declare-fun res!67276 () Bool)

(assert (=> d!44101 (=> (not res!67276) (not e!91876))))

(assert (=> d!44101 (= res!67276 (contains!910 lt!73130 lt!73137))))

(assert (=> d!44101 (= (addApplyDifferent!96 lt!73130 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73137) lt!73825)))

(declare-fun b!140978 () Bool)

(assert (=> b!140978 (= e!91876 (not (= lt!73137 lt!73142)))))

(assert (= (and d!44101 res!67276) b!140978))

(assert (=> d!44101 m!166739))

(assert (=> d!44101 m!166739))

(assert (=> d!44101 m!166741))

(declare-fun m!168553 () Bool)

(assert (=> d!44101 m!168553))

(assert (=> d!44101 m!166725))

(declare-fun m!168555 () Bool)

(assert (=> d!44101 m!168555))

(assert (=> b!140026 d!44101))

(declare-fun d!44103 () Bool)

(declare-fun e!91877 () Bool)

(assert (=> d!44103 e!91877))

(declare-fun res!67278 () Bool)

(assert (=> d!44103 (=> (not res!67278) (not e!91877))))

(declare-fun lt!73828 () ListLongMap!1711)

(assert (=> d!44103 (= res!67278 (contains!910 lt!73828 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!73829 () List!1739)

(assert (=> d!44103 (= lt!73828 (ListLongMap!1712 lt!73829))))

(declare-fun lt!73826 () Unit!4393)

(declare-fun lt!73827 () Unit!4393)

(assert (=> d!44103 (= lt!73826 lt!73827)))

(assert (=> d!44103 (= (getValueByKey!174 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44103 (= lt!73827 (lemmaContainsTupThenGetReturnValue!91 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44103 (= lt!73829 (insertStrictlySorted!94 (toList!871 lt!73130) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44103 (= (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73828)))

(declare-fun b!140979 () Bool)

(declare-fun res!67277 () Bool)

(assert (=> b!140979 (=> (not res!67277) (not e!91877))))

(assert (=> b!140979 (= res!67277 (= (getValueByKey!174 (toList!871 lt!73828) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!140980 () Bool)

(assert (=> b!140980 (= e!91877 (contains!914 (toList!871 lt!73828) (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!44103 res!67278) b!140979))

(assert (= (and b!140979 res!67277) b!140980))

(declare-fun m!168557 () Bool)

(assert (=> d!44103 m!168557))

(declare-fun m!168559 () Bool)

(assert (=> d!44103 m!168559))

(declare-fun m!168561 () Bool)

(assert (=> d!44103 m!168561))

(declare-fun m!168563 () Bool)

(assert (=> d!44103 m!168563))

(declare-fun m!168565 () Bool)

(assert (=> b!140979 m!168565))

(declare-fun m!168567 () Bool)

(assert (=> b!140980 m!168567))

(assert (=> b!140026 d!44103))

(declare-fun d!44105 () Bool)

(assert (=> d!44105 (contains!910 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73146)))

(declare-fun lt!73830 () Unit!4393)

(assert (=> d!44105 (= lt!73830 (choose!870 lt!73140 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73146))))

(assert (=> d!44105 (contains!910 lt!73140 lt!73146)))

(assert (=> d!44105 (= (addStillContains!96 lt!73140 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73146) lt!73830)))

(declare-fun bs!5886 () Bool)

(assert (= bs!5886 d!44105))

(assert (=> bs!5886 m!166731))

(assert (=> bs!5886 m!166731))

(assert (=> bs!5886 m!166737))

(declare-fun m!168569 () Bool)

(assert (=> bs!5886 m!168569))

(declare-fun m!168571 () Bool)

(assert (=> bs!5886 m!168571))

(assert (=> b!140026 d!44105))

(declare-fun d!44107 () Bool)

(assert (=> d!44107 (= (apply!120 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73145) (apply!120 lt!73126 lt!73145))))

(declare-fun lt!73831 () Unit!4393)

(assert (=> d!44107 (= lt!73831 (choose!869 lt!73126 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73145))))

(declare-fun e!91878 () Bool)

(assert (=> d!44107 e!91878))

(declare-fun res!67279 () Bool)

(assert (=> d!44107 (=> (not res!67279) (not e!91878))))

(assert (=> d!44107 (= res!67279 (contains!910 lt!73126 lt!73145))))

(assert (=> d!44107 (= (addApplyDifferent!96 lt!73126 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73145) lt!73831)))

(declare-fun b!140981 () Bool)

(assert (=> b!140981 (= e!91878 (not (= lt!73145 lt!73135)))))

(assert (= (and d!44107 res!67279) b!140981))

(assert (=> d!44107 m!166743))

(assert (=> d!44107 m!166743))

(assert (=> d!44107 m!166745))

(declare-fun m!168573 () Bool)

(assert (=> d!44107 m!168573))

(assert (=> d!44107 m!166749))

(declare-fun m!168575 () Bool)

(assert (=> d!44107 m!168575))

(assert (=> b!140026 d!44107))

(assert (=> b!140026 d!43809))

(declare-fun b!140985 () Bool)

(declare-fun e!91880 () Option!180)

(assert (=> b!140985 (= e!91880 None!178)))

(declare-fun b!140983 () Bool)

(declare-fun e!91879 () Option!180)

(assert (=> b!140983 (= e!91879 e!91880)))

(declare-fun c!26503 () Bool)

(assert (=> b!140983 (= c!26503 (and ((_ is Cons!1735) (toList!871 lt!73410)) (not (= (_1!1339 (h!2342 (toList!871 lt!73410))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140982 () Bool)

(assert (=> b!140982 (= e!91879 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73410)))))))

(declare-fun d!44109 () Bool)

(declare-fun c!26502 () Bool)

(assert (=> d!44109 (= c!26502 (and ((_ is Cons!1735) (toList!871 lt!73410)) (= (_1!1339 (h!2342 (toList!871 lt!73410))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44109 (= (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91879)))

(declare-fun b!140984 () Bool)

(assert (=> b!140984 (= e!91880 (getValueByKey!174 (t!6314 (toList!871 lt!73410)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44109 c!26502) b!140982))

(assert (= (and d!44109 (not c!26502)) b!140983))

(assert (= (and b!140983 c!26503) b!140984))

(assert (= (and b!140983 (not c!26503)) b!140985))

(declare-fun m!168577 () Bool)

(assert (=> b!140984 m!168577))

(assert (=> b!140328 d!44109))

(declare-fun d!44111 () Bool)

(assert (=> d!44111 (= (apply!120 lt!73197 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5887 () Bool)

(assert (= bs!5887 d!44111))

(assert (=> bs!5887 m!166699))

(assert (=> bs!5887 m!167591))

(assert (=> bs!5887 m!167591))

(declare-fun m!168579 () Bool)

(assert (=> bs!5887 m!168579))

(assert (=> b!140104 d!44111))

(declare-fun c!26504 () Bool)

(declare-fun d!44113 () Bool)

(assert (=> d!44113 (= c!26504 ((_ is ValueCellFull!1121) (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!91881 () V!3553)

(assert (=> d!44113 (= (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91881)))

(declare-fun b!140986 () Bool)

(assert (=> b!140986 (= e!91881 (get!1526 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140987 () Bool)

(assert (=> b!140987 (= e!91881 (get!1527 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44113 c!26504) b!140986))

(assert (= (and d!44113 (not c!26504)) b!140987))

(assert (=> b!140986 m!166849))

(assert (=> b!140986 m!166703))

(declare-fun m!168581 () Bool)

(assert (=> b!140986 m!168581))

(assert (=> b!140987 m!166849))

(assert (=> b!140987 m!166703))

(declare-fun m!168583 () Bool)

(assert (=> b!140987 m!168583))

(assert (=> b!140104 d!44113))

(declare-fun d!44115 () Bool)

(assert (=> d!44115 (= (get!1528 (getValueByKey!174 (toList!871 lt!73005) lt!73012)) (v!3279 (getValueByKey!174 (toList!871 lt!73005) lt!73012)))))

(assert (=> d!43673 d!44115))

(declare-fun b!140991 () Bool)

(declare-fun e!91883 () Option!180)

(assert (=> b!140991 (= e!91883 None!178)))

(declare-fun b!140989 () Bool)

(declare-fun e!91882 () Option!180)

(assert (=> b!140989 (= e!91882 e!91883)))

(declare-fun c!26506 () Bool)

(assert (=> b!140989 (= c!26506 (and ((_ is Cons!1735) (toList!871 lt!73005)) (not (= (_1!1339 (h!2342 (toList!871 lt!73005))) lt!73012))))))

(declare-fun b!140988 () Bool)

(assert (=> b!140988 (= e!91882 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73005)))))))

(declare-fun d!44117 () Bool)

(declare-fun c!26505 () Bool)

(assert (=> d!44117 (= c!26505 (and ((_ is Cons!1735) (toList!871 lt!73005)) (= (_1!1339 (h!2342 (toList!871 lt!73005))) lt!73012)))))

(assert (=> d!44117 (= (getValueByKey!174 (toList!871 lt!73005) lt!73012) e!91882)))

(declare-fun b!140990 () Bool)

(assert (=> b!140990 (= e!91883 (getValueByKey!174 (t!6314 (toList!871 lt!73005)) lt!73012))))

(assert (= (and d!44117 c!26505) b!140988))

(assert (= (and d!44117 (not c!26505)) b!140989))

(assert (= (and b!140989 c!26506) b!140990))

(assert (= (and b!140989 (not c!26506)) b!140991))

(declare-fun m!168585 () Bool)

(assert (=> b!140990 m!168585))

(assert (=> d!43673 d!44117))

(declare-fun d!44119 () Bool)

(declare-fun e!91885 () Bool)

(assert (=> d!44119 e!91885))

(declare-fun res!67280 () Bool)

(assert (=> d!44119 (=> res!67280 e!91885)))

(declare-fun lt!73835 () Bool)

(assert (=> d!44119 (= res!67280 (not lt!73835))))

(declare-fun lt!73834 () Bool)

(assert (=> d!44119 (= lt!73835 lt!73834)))

(declare-fun lt!73833 () Unit!4393)

(declare-fun e!91884 () Unit!4393)

(assert (=> d!44119 (= lt!73833 e!91884)))

(declare-fun c!26507 () Bool)

(assert (=> d!44119 (= c!26507 lt!73834)))

(assert (=> d!44119 (= lt!73834 (containsKey!178 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44119 (= (contains!910 lt!73172 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73835)))

(declare-fun b!140992 () Bool)

(declare-fun lt!73832 () Unit!4393)

(assert (=> b!140992 (= e!91884 lt!73832)))

(assert (=> b!140992 (= lt!73832 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140992 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140993 () Bool)

(declare-fun Unit!4445 () Unit!4393)

(assert (=> b!140993 (= e!91884 Unit!4445)))

(declare-fun b!140994 () Bool)

(assert (=> b!140994 (= e!91885 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44119 c!26507) b!140992))

(assert (= (and d!44119 (not c!26507)) b!140993))

(assert (= (and d!44119 (not res!67280)) b!140994))

(declare-fun m!168587 () Bool)

(assert (=> d!44119 m!168587))

(declare-fun m!168589 () Bool)

(assert (=> b!140992 m!168589))

(assert (=> b!140992 m!167599))

(assert (=> b!140992 m!167599))

(declare-fun m!168591 () Bool)

(assert (=> b!140992 m!168591))

(assert (=> b!140994 m!167599))

(assert (=> b!140994 m!167599))

(assert (=> b!140994 m!168591))

(assert (=> bm!15521 d!44119))

(declare-fun d!44121 () Bool)

(declare-fun e!91887 () Bool)

(assert (=> d!44121 e!91887))

(declare-fun res!67281 () Bool)

(assert (=> d!44121 (=> res!67281 e!91887)))

(declare-fun lt!73839 () Bool)

(assert (=> d!44121 (= res!67281 (not lt!73839))))

(declare-fun lt!73838 () Bool)

(assert (=> d!44121 (= lt!73839 lt!73838)))

(declare-fun lt!73837 () Unit!4393)

(declare-fun e!91886 () Unit!4393)

(assert (=> d!44121 (= lt!73837 e!91886)))

(declare-fun c!26508 () Bool)

(assert (=> d!44121 (= c!26508 lt!73838)))

(assert (=> d!44121 (= lt!73838 (containsKey!178 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44121 (= (contains!910 lt!73157 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73839)))

(declare-fun b!140995 () Bool)

(declare-fun lt!73836 () Unit!4393)

(assert (=> b!140995 (= e!91886 lt!73836)))

(assert (=> b!140995 (= lt!73836 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> b!140995 (isDefined!128 (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!140996 () Bool)

(declare-fun Unit!4446 () Unit!4393)

(assert (=> b!140996 (= e!91886 Unit!4446)))

(declare-fun b!140997 () Bool)

(assert (=> b!140997 (= e!91887 (isDefined!128 (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44121 c!26508) b!140995))

(assert (= (and d!44121 (not c!26508)) b!140996))

(assert (= (and d!44121 (not res!67281)) b!140997))

(declare-fun m!168593 () Bool)

(assert (=> d!44121 m!168593))

(declare-fun m!168595 () Bool)

(assert (=> b!140995 m!168595))

(assert (=> b!140995 m!166765))

(assert (=> b!140995 m!166765))

(declare-fun m!168597 () Bool)

(assert (=> b!140995 m!168597))

(assert (=> b!140997 m!166765))

(assert (=> b!140997 m!166765))

(assert (=> b!140997 m!168597))

(assert (=> d!43583 d!44121))

(declare-fun b!141001 () Bool)

(declare-fun e!91889 () Option!180)

(assert (=> b!141001 (= e!91889 None!178)))

(declare-fun b!140999 () Bool)

(declare-fun e!91888 () Option!180)

(assert (=> b!140999 (= e!91888 e!91889)))

(declare-fun c!26510 () Bool)

(assert (=> b!140999 (= c!26510 (and ((_ is Cons!1735) lt!73158) (not (= (_1!1339 (h!2342 lt!73158)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!140998 () Bool)

(assert (=> b!140998 (= e!91888 (Some!179 (_2!1339 (h!2342 lt!73158))))))

(declare-fun d!44123 () Bool)

(declare-fun c!26509 () Bool)

(assert (=> d!44123 (= c!26509 (and ((_ is Cons!1735) lt!73158) (= (_1!1339 (h!2342 lt!73158)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44123 (= (getValueByKey!174 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91888)))

(declare-fun b!141000 () Bool)

(assert (=> b!141000 (= e!91889 (getValueByKey!174 (t!6314 lt!73158) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44123 c!26509) b!140998))

(assert (= (and d!44123 (not c!26509)) b!140999))

(assert (= (and b!140999 c!26510) b!141000))

(assert (= (and b!140999 (not c!26510)) b!141001))

(declare-fun m!168599 () Bool)

(assert (=> b!141000 m!168599))

(assert (=> d!43583 d!44123))

(declare-fun d!44125 () Bool)

(assert (=> d!44125 (= (getValueByKey!174 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73840 () Unit!4393)

(assert (=> d!44125 (= lt!73840 (choose!872 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!91890 () Bool)

(assert (=> d!44125 e!91890))

(declare-fun res!67282 () Bool)

(assert (=> d!44125 (=> (not res!67282) (not e!91890))))

(assert (=> d!44125 (= res!67282 (isStrictlySorted!320 lt!73158))))

(assert (=> d!44125 (= (lemmaContainsTupThenGetReturnValue!91 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73840)))

(declare-fun b!141002 () Bool)

(declare-fun res!67283 () Bool)

(assert (=> b!141002 (=> (not res!67283) (not e!91890))))

(assert (=> b!141002 (= res!67283 (containsKey!178 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!141003 () Bool)

(assert (=> b!141003 (= e!91890 (contains!914 lt!73158 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44125 res!67282) b!141002))

(assert (= (and b!141002 res!67283) b!141003))

(assert (=> d!44125 m!166759))

(declare-fun m!168601 () Bool)

(assert (=> d!44125 m!168601))

(declare-fun m!168603 () Bool)

(assert (=> d!44125 m!168603))

(declare-fun m!168605 () Bool)

(assert (=> b!141002 m!168605))

(declare-fun m!168607 () Bool)

(assert (=> b!141003 m!168607))

(assert (=> d!43583 d!44125))

(declare-fun b!141004 () Bool)

(declare-fun e!91893 () List!1739)

(declare-fun call!15641 () List!1739)

(assert (=> b!141004 (= e!91893 call!15641)))

(declare-fun b!141005 () Bool)

(declare-fun e!91891 () List!1739)

(declare-fun call!15640 () List!1739)

(assert (=> b!141005 (= e!91891 call!15640)))

(declare-fun b!141006 () Bool)

(declare-fun e!91894 () Bool)

(declare-fun lt!73841 () List!1739)

(assert (=> b!141006 (= e!91894 (contains!914 lt!73841 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91892 () List!1739)

(declare-fun c!26514 () Bool)

(declare-fun bm!15636 () Bool)

(assert (=> bm!15636 (= call!15641 ($colon$colon!93 e!91892 (ite c!26514 (h!2342 (toList!871 call!15435)) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26511 () Bool)

(assert (=> bm!15636 (= c!26511 c!26514)))

(declare-fun bm!15637 () Bool)

(declare-fun call!15639 () List!1739)

(assert (=> bm!15637 (= call!15640 call!15639)))

(declare-fun b!141007 () Bool)

(declare-fun res!67284 () Bool)

(assert (=> b!141007 (=> (not res!67284) (not e!91894))))

(assert (=> b!141007 (= res!67284 (containsKey!178 lt!73841 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!44127 () Bool)

(assert (=> d!44127 e!91894))

(declare-fun res!67285 () Bool)

(assert (=> d!44127 (=> (not res!67285) (not e!91894))))

(assert (=> d!44127 (= res!67285 (isStrictlySorted!320 lt!73841))))

(assert (=> d!44127 (= lt!73841 e!91893)))

(assert (=> d!44127 (= c!26514 (and ((_ is Cons!1735) (toList!871 call!15435)) (bvslt (_1!1339 (h!2342 (toList!871 call!15435))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44127 (isStrictlySorted!320 (toList!871 call!15435))))

(assert (=> d!44127 (= (insertStrictlySorted!94 (toList!871 call!15435) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73841)))

(declare-fun c!26513 () Bool)

(declare-fun b!141008 () Bool)

(declare-fun c!26512 () Bool)

(assert (=> b!141008 (= e!91892 (ite c!26513 (t!6314 (toList!871 call!15435)) (ite c!26512 (Cons!1735 (h!2342 (toList!871 call!15435)) (t!6314 (toList!871 call!15435))) Nil!1736)))))

(declare-fun b!141009 () Bool)

(assert (=> b!141009 (= c!26512 (and ((_ is Cons!1735) (toList!871 call!15435)) (bvsgt (_1!1339 (h!2342 (toList!871 call!15435))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91895 () List!1739)

(assert (=> b!141009 (= e!91895 e!91891)))

(declare-fun b!141010 () Bool)

(assert (=> b!141010 (= e!91891 call!15640)))

(declare-fun b!141011 () Bool)

(assert (=> b!141011 (= e!91892 (insertStrictlySorted!94 (t!6314 (toList!871 call!15435)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15638 () Bool)

(assert (=> bm!15638 (= call!15639 call!15641)))

(declare-fun b!141012 () Bool)

(assert (=> b!141012 (= e!91893 e!91895)))

(assert (=> b!141012 (= c!26513 (and ((_ is Cons!1735) (toList!871 call!15435)) (= (_1!1339 (h!2342 (toList!871 call!15435))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141013 () Bool)

(assert (=> b!141013 (= e!91895 call!15639)))

(assert (= (and d!44127 c!26514) b!141004))

(assert (= (and d!44127 (not c!26514)) b!141012))

(assert (= (and b!141012 c!26513) b!141013))

(assert (= (and b!141012 (not c!26513)) b!141009))

(assert (= (and b!141009 c!26512) b!141005))

(assert (= (and b!141009 (not c!26512)) b!141010))

(assert (= (or b!141005 b!141010) bm!15637))

(assert (= (or b!141013 bm!15637) bm!15638))

(assert (= (or b!141004 bm!15638) bm!15636))

(assert (= (and bm!15636 c!26511) b!141011))

(assert (= (and bm!15636 (not c!26511)) b!141008))

(assert (= (and d!44127 res!67285) b!141007))

(assert (= (and b!141007 res!67284) b!141006))

(declare-fun m!168609 () Bool)

(assert (=> b!141007 m!168609))

(declare-fun m!168611 () Bool)

(assert (=> b!141011 m!168611))

(declare-fun m!168613 () Bool)

(assert (=> bm!15636 m!168613))

(declare-fun m!168615 () Bool)

(assert (=> b!141006 m!168615))

(declare-fun m!168617 () Bool)

(assert (=> d!44127 m!168617))

(declare-fun m!168619 () Bool)

(assert (=> d!44127 m!168619))

(assert (=> d!43583 d!44127))

(declare-fun b!141017 () Bool)

(declare-fun e!91897 () Option!180)

(assert (=> b!141017 (= e!91897 None!178)))

(declare-fun b!141015 () Bool)

(declare-fun e!91896 () Option!180)

(assert (=> b!141015 (= e!91896 e!91897)))

(declare-fun c!26516 () Bool)

(assert (=> b!141015 (= c!26516 (and ((_ is Cons!1735) (toList!871 lt!73390)) (not (= (_1!1339 (h!2342 (toList!871 lt!73390))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!141014 () Bool)

(assert (=> b!141014 (= e!91896 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73390)))))))

(declare-fun d!44129 () Bool)

(declare-fun c!26515 () Bool)

(assert (=> d!44129 (= c!26515 (and ((_ is Cons!1735) (toList!871 lt!73390)) (= (_1!1339 (h!2342 (toList!871 lt!73390))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44129 (= (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91896)))

(declare-fun b!141016 () Bool)

(assert (=> b!141016 (= e!91897 (getValueByKey!174 (t!6314 (toList!871 lt!73390)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44129 c!26515) b!141014))

(assert (= (and d!44129 (not c!26515)) b!141015))

(assert (= (and b!141015 c!26516) b!141016))

(assert (= (and b!141015 (not c!26516)) b!141017))

(declare-fun m!168621 () Bool)

(assert (=> b!141016 m!168621))

(assert (=> b!140315 d!44129))

(assert (=> b!140111 d!43699))

(declare-fun d!44131 () Bool)

(declare-fun lt!73842 () Bool)

(assert (=> d!44131 (= lt!73842 (select (content!137 Nil!1737) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91898 () Bool)

(assert (=> d!44131 (= lt!73842 e!91898)))

(declare-fun res!67287 () Bool)

(assert (=> d!44131 (=> (not res!67287) (not e!91898))))

(assert (=> d!44131 (= res!67287 ((_ is Cons!1736) Nil!1737))))

(assert (=> d!44131 (= (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!73842)))

(declare-fun b!141018 () Bool)

(declare-fun e!91899 () Bool)

(assert (=> b!141018 (= e!91898 e!91899)))

(declare-fun res!67286 () Bool)

(assert (=> b!141018 (=> res!67286 e!91899)))

(assert (=> b!141018 (= res!67286 (= (h!2343 Nil!1737) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141019 () Bool)

(assert (=> b!141019 (= e!91899 (contains!913 (t!6315 Nil!1737) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44131 res!67287) b!141018))

(assert (= (and b!141018 (not res!67286)) b!141019))

(assert (=> d!44131 m!166945))

(assert (=> d!44131 m!166699))

(declare-fun m!168623 () Bool)

(assert (=> d!44131 m!168623))

(assert (=> b!141019 m!166699))

(declare-fun m!168625 () Bool)

(assert (=> b!141019 m!168625))

(assert (=> b!140055 d!44131))

(assert (=> d!43647 d!43719))

(declare-fun d!44133 () Bool)

(declare-fun res!67288 () Bool)

(declare-fun e!91900 () Bool)

(assert (=> d!44133 (=> res!67288 e!91900)))

(assert (=> d!44133 (= res!67288 (= (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44133 (= (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!91900)))

(declare-fun b!141020 () Bool)

(declare-fun e!91901 () Bool)

(assert (=> b!141020 (= e!91900 e!91901)))

(declare-fun res!67289 () Bool)

(assert (=> b!141020 (=> (not res!67289) (not e!91901))))

(assert (=> b!141020 (= res!67289 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!141021 () Bool)

(assert (=> b!141021 (= e!91901 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44133 (not res!67288)) b!141020))

(assert (= (and b!141020 res!67289) b!141021))

(assert (=> d!44133 m!167925))

(assert (=> b!141021 m!166407))

(declare-fun m!168627 () Bool)

(assert (=> b!141021 m!168627))

(assert (=> b!140282 d!44133))

(declare-fun d!44135 () Bool)

(assert (=> d!44135 (= (get!1526 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3272 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140348 d!44135))

(assert (=> d!43641 d!44047))

(declare-fun b!141022 () Bool)

(declare-fun e!91902 () Bool)

(declare-fun e!91904 () Bool)

(assert (=> b!141022 (= e!91902 e!91904)))

(declare-fun c!26517 () Bool)

(assert (=> b!141022 (= c!26517 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)))))

(declare-fun b!141023 () Bool)

(declare-fun e!91905 () Bool)

(assert (=> b!141023 (= e!91905 e!91902)))

(declare-fun res!67290 () Bool)

(assert (=> b!141023 (=> (not res!67290) (not e!91902))))

(declare-fun e!91903 () Bool)

(assert (=> b!141023 (= res!67290 (not e!91903))))

(declare-fun res!67291 () Bool)

(assert (=> b!141023 (=> (not res!67291) (not e!91903))))

(assert (=> b!141023 (= res!67291 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)))))

(declare-fun b!141024 () Bool)

(declare-fun call!15642 () Bool)

(assert (=> b!141024 (= e!91904 call!15642)))

(declare-fun d!44137 () Bool)

(declare-fun res!67292 () Bool)

(assert (=> d!44137 (=> res!67292 e!91905)))

(assert (=> d!44137 (= res!67292 (bvsge lt!73352 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!44137 (= (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73352 lt!73349) e!91905)))

(declare-fun b!141025 () Bool)

(assert (=> b!141025 (= e!91903 (contains!913 lt!73349 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)))))

(declare-fun b!141026 () Bool)

(assert (=> b!141026 (= e!91904 call!15642)))

(declare-fun bm!15639 () Bool)

(assert (=> bm!15639 (= call!15642 (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (bvadd lt!73352 #b00000000000000000000000000000001) (ite c!26517 (Cons!1736 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) lt!73349) lt!73349)))))

(assert (= (and d!44137 (not res!67292)) b!141023))

(assert (= (and b!141023 res!67291) b!141025))

(assert (= (and b!141023 res!67290) b!141022))

(assert (= (and b!141022 c!26517) b!141024))

(assert (= (and b!141022 (not c!26517)) b!141026))

(assert (= (or b!141024 b!141026) bm!15639))

(declare-fun m!168629 () Bool)

(assert (=> b!141022 m!168629))

(assert (=> b!141022 m!168629))

(declare-fun m!168631 () Bool)

(assert (=> b!141022 m!168631))

(assert (=> b!141023 m!168629))

(assert (=> b!141023 m!168629))

(assert (=> b!141023 m!168631))

(assert (=> b!141025 m!168629))

(assert (=> b!141025 m!168629))

(declare-fun m!168633 () Bool)

(assert (=> b!141025 m!168633))

(assert (=> bm!15639 m!168629))

(declare-fun m!168635 () Bool)

(assert (=> bm!15639 m!168635))

(assert (=> d!43641 d!44137))

(declare-fun d!44139 () Bool)

(assert (=> d!44139 (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!73843 () Unit!4393)

(assert (=> d!44139 (= lt!73843 (choose!13 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(assert (=> d!44139 (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000)))

(assert (=> d!44139 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) lt!73843)))

(declare-fun bs!5888 () Bool)

(assert (= bs!5888 d!44139))

(assert (=> bs!5888 m!166407))

(assert (=> bs!5888 m!167065))

(assert (=> bs!5888 m!166407))

(declare-fun m!168637 () Bool)

(assert (=> bs!5888 m!168637))

(assert (=> d!43641 d!44139))

(declare-fun d!44141 () Bool)

(declare-fun e!91908 () Bool)

(assert (=> d!44141 e!91908))

(declare-fun res!67295 () Bool)

(assert (=> d!44141 (=> (not res!67295) (not e!91908))))

(assert (=> d!44141 (= res!67295 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 (_keys!4697 newMap!16))) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2576 (_values!2922 newMap!16)))))))

(declare-fun lt!73846 () Unit!4393)

(declare-fun choose!875 (array!4873 array!4875 (_ BitVec 32) (_ BitVec 32) V!3553 V!3553 (_ BitVec 32) (_ BitVec 64) V!3553 Int) Unit!4393)

(assert (=> d!44141 (= lt!73846 (choose!875 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!44141 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44141 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) lt!73846)))

(declare-fun b!141029 () Bool)

(assert (=> b!141029 (= e!91908 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44141 res!67295) b!141029))

(assert (=> d!44141 m!166407))

(assert (=> d!44141 m!166427))

(declare-fun m!168639 () Bool)

(assert (=> d!44141 m!168639))

(assert (=> d!44141 m!166687))

(assert (=> b!141029 m!166541))

(assert (=> b!141029 m!166695))

(assert (=> b!141029 m!167051))

(assert (=> b!141029 m!167035))

(assert (=> b!141029 m!166541))

(assert (=> b!141029 m!167045))

(assert (=> d!43641 d!44141))

(assert (=> d!43641 d!43601))

(declare-fun bm!15640 () Bool)

(declare-fun call!15643 () ListLongMap!1711)

(declare-fun call!15645 () ListLongMap!1711)

(assert (=> bm!15640 (= call!15643 call!15645)))

(declare-fun bm!15641 () Bool)

(declare-fun call!15648 () Bool)

(declare-fun lt!73850 () ListLongMap!1711)

(assert (=> bm!15641 (= call!15648 (contains!910 lt!73850 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141031 () Bool)

(declare-fun e!91916 () Bool)

(assert (=> b!141031 (= e!91916 (not call!15648))))

(declare-fun b!141032 () Bool)

(declare-fun e!91914 () ListLongMap!1711)

(assert (=> b!141032 (= e!91914 call!15643)))

(declare-fun b!141033 () Bool)

(declare-fun e!91913 () Bool)

(assert (=> b!141033 (= e!91913 (= (apply!120 lt!73850 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun b!141034 () Bool)

(declare-fun e!91918 () Bool)

(assert (=> b!141034 (= e!91918 (validKeyInArray!0 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(declare-fun b!141035 () Bool)

(declare-fun e!91919 () Bool)

(declare-fun e!91912 () Bool)

(assert (=> b!141035 (= e!91919 e!91912)))

(declare-fun c!26520 () Bool)

(assert (=> b!141035 (= c!26520 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141036 () Bool)

(declare-fun res!67297 () Bool)

(assert (=> b!141036 (=> (not res!67297) (not e!91919))))

(declare-fun e!91915 () Bool)

(assert (=> b!141036 (= res!67297 e!91915)))

(declare-fun res!67300 () Bool)

(assert (=> b!141036 (=> res!67300 e!91915)))

(assert (=> b!141036 (= res!67300 (not e!91918))))

(declare-fun res!67303 () Bool)

(assert (=> b!141036 (=> (not res!67303) (not e!91918))))

(assert (=> b!141036 (= res!67303 (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(declare-fun bm!15642 () Bool)

(declare-fun call!15649 () ListLongMap!1711)

(declare-fun call!15646 () ListLongMap!1711)

(assert (=> bm!15642 (= call!15649 call!15646)))

(declare-fun b!141037 () Bool)

(declare-fun e!91910 () Bool)

(assert (=> b!141037 (= e!91910 (= (apply!120 lt!73850 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!141038 () Bool)

(declare-fun e!91911 () Bool)

(assert (=> b!141038 (= e!91911 (= (apply!120 lt!73850 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 lt!73365)))))

(assert (=> b!141038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(declare-fun b!141039 () Bool)

(declare-fun e!91921 () ListLongMap!1711)

(assert (=> b!141039 (= e!91921 e!91914)))

(declare-fun c!26522 () Bool)

(assert (=> b!141039 (= c!26522 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141040 () Bool)

(declare-fun e!91909 () Unit!4393)

(declare-fun lt!73866 () Unit!4393)

(assert (=> b!141040 (= e!91909 lt!73866)))

(declare-fun lt!73862 () ListLongMap!1711)

(assert (=> b!141040 (= lt!73862 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73851 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73851 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73868 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73868 (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))

(declare-fun lt!73847 () Unit!4393)

(assert (=> b!141040 (= lt!73847 (addStillContains!96 lt!73862 lt!73851 (zeroValue!2789 newMap!16) lt!73868))))

(assert (=> b!141040 (contains!910 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))) lt!73868)))

(declare-fun lt!73849 () Unit!4393)

(assert (=> b!141040 (= lt!73849 lt!73847)))

(declare-fun lt!73852 () ListLongMap!1711)

(assert (=> b!141040 (= lt!73852 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73864 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73864 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73859 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73859 (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))

(declare-fun lt!73860 () Unit!4393)

(assert (=> b!141040 (= lt!73860 (addApplyDifferent!96 lt!73852 lt!73864 (minValue!2789 newMap!16) lt!73859))))

(assert (=> b!141040 (= (apply!120 (+!167 lt!73852 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))) lt!73859) (apply!120 lt!73852 lt!73859))))

(declare-fun lt!73865 () Unit!4393)

(assert (=> b!141040 (= lt!73865 lt!73860)))

(declare-fun lt!73848 () ListLongMap!1711)

(assert (=> b!141040 (= lt!73848 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73857 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73857 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73867 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73867 (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))

(declare-fun lt!73856 () Unit!4393)

(assert (=> b!141040 (= lt!73856 (addApplyDifferent!96 lt!73848 lt!73857 (zeroValue!2789 newMap!16) lt!73867))))

(assert (=> b!141040 (= (apply!120 (+!167 lt!73848 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))) lt!73867) (apply!120 lt!73848 lt!73867))))

(declare-fun lt!73853 () Unit!4393)

(assert (=> b!141040 (= lt!73853 lt!73856)))

(declare-fun lt!73863 () ListLongMap!1711)

(assert (=> b!141040 (= lt!73863 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73861 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73861 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73858 () (_ BitVec 64))

(assert (=> b!141040 (= lt!73858 (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))

(assert (=> b!141040 (= lt!73866 (addApplyDifferent!96 lt!73863 lt!73861 (minValue!2789 newMap!16) lt!73858))))

(assert (=> b!141040 (= (apply!120 (+!167 lt!73863 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))) lt!73858) (apply!120 lt!73863 lt!73858))))

(declare-fun d!44143 () Bool)

(assert (=> d!44143 e!91919))

(declare-fun res!67302 () Bool)

(assert (=> d!44143 (=> (not res!67302) (not e!91919))))

(assert (=> d!44143 (= res!67302 (or (bvsge #b00000000000000000000000000000000 (size!2575 lt!73348)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))))

(declare-fun lt!73854 () ListLongMap!1711)

(assert (=> d!44143 (= lt!73850 lt!73854)))

(declare-fun lt!73855 () Unit!4393)

(assert (=> d!44143 (= lt!73855 e!91909)))

(declare-fun c!26518 () Bool)

(declare-fun e!91920 () Bool)

(assert (=> d!44143 (= c!26518 e!91920)))

(declare-fun res!67299 () Bool)

(assert (=> d!44143 (=> (not res!67299) (not e!91920))))

(assert (=> d!44143 (= res!67299 (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(assert (=> d!44143 (= lt!73854 e!91921)))

(declare-fun c!26519 () Bool)

(assert (=> d!44143 (= c!26519 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!44143 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44143 (= (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73850)))

(declare-fun b!141030 () Bool)

(declare-fun e!91917 () ListLongMap!1711)

(declare-fun call!15644 () ListLongMap!1711)

(assert (=> b!141030 (= e!91917 call!15644)))

(declare-fun b!141041 () Bool)

(assert (=> b!141041 (= e!91921 (+!167 call!15645 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!141042 () Bool)

(assert (=> b!141042 (= e!91916 e!91910)))

(declare-fun res!67298 () Bool)

(assert (=> b!141042 (= res!67298 call!15648)))

(assert (=> b!141042 (=> (not res!67298) (not e!91910))))

(declare-fun bm!15643 () Bool)

(assert (=> bm!15643 (= call!15644 call!15649)))

(declare-fun b!141043 () Bool)

(declare-fun res!67296 () Bool)

(assert (=> b!141043 (=> (not res!67296) (not e!91919))))

(assert (=> b!141043 (= res!67296 e!91916)))

(declare-fun c!26523 () Bool)

(assert (=> b!141043 (= c!26523 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!141044 () Bool)

(declare-fun c!26521 () Bool)

(assert (=> b!141044 (= c!26521 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!141044 (= e!91914 e!91917)))

(declare-fun b!141045 () Bool)

(assert (=> b!141045 (= e!91920 (validKeyInArray!0 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(declare-fun bm!15644 () Bool)

(declare-fun call!15647 () Bool)

(assert (=> bm!15644 (= call!15647 (contains!910 lt!73850 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141046 () Bool)

(assert (=> b!141046 (= e!91917 call!15643)))

(declare-fun b!141047 () Bool)

(assert (=> b!141047 (= e!91912 (not call!15647))))

(declare-fun bm!15645 () Bool)

(assert (=> bm!15645 (= call!15646 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!141048 () Bool)

(assert (=> b!141048 (= e!91912 e!91913)))

(declare-fun res!67301 () Bool)

(assert (=> b!141048 (= res!67301 call!15647)))

(assert (=> b!141048 (=> (not res!67301) (not e!91913))))

(declare-fun b!141049 () Bool)

(assert (=> b!141049 (= e!91915 e!91911)))

(declare-fun res!67304 () Bool)

(assert (=> b!141049 (=> (not res!67304) (not e!91911))))

(assert (=> b!141049 (= res!67304 (contains!910 lt!73850 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(assert (=> b!141049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(declare-fun b!141050 () Bool)

(declare-fun Unit!4447 () Unit!4393)

(assert (=> b!141050 (= e!91909 Unit!4447)))

(declare-fun bm!15646 () Bool)

(assert (=> bm!15646 (= call!15645 (+!167 (ite c!26519 call!15646 (ite c!26522 call!15649 call!15644)) (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44143 c!26519) b!141041))

(assert (= (and d!44143 (not c!26519)) b!141039))

(assert (= (and b!141039 c!26522) b!141032))

(assert (= (and b!141039 (not c!26522)) b!141044))

(assert (= (and b!141044 c!26521) b!141046))

(assert (= (and b!141044 (not c!26521)) b!141030))

(assert (= (or b!141046 b!141030) bm!15643))

(assert (= (or b!141032 bm!15643) bm!15642))

(assert (= (or b!141032 b!141046) bm!15640))

(assert (= (or b!141041 bm!15642) bm!15645))

(assert (= (or b!141041 bm!15640) bm!15646))

(assert (= (and d!44143 res!67299) b!141045))

(assert (= (and d!44143 c!26518) b!141040))

(assert (= (and d!44143 (not c!26518)) b!141050))

(assert (= (and d!44143 res!67302) b!141036))

(assert (= (and b!141036 res!67303) b!141034))

(assert (= (and b!141036 (not res!67300)) b!141049))

(assert (= (and b!141049 res!67304) b!141038))

(assert (= (and b!141036 res!67297) b!141043))

(assert (= (and b!141043 c!26523) b!141042))

(assert (= (and b!141043 (not c!26523)) b!141031))

(assert (= (and b!141042 res!67298) b!141037))

(assert (= (or b!141042 b!141031) bm!15641))

(assert (= (and b!141043 res!67296) b!141035))

(assert (= (and b!141035 c!26520) b!141048))

(assert (= (and b!141035 (not c!26520)) b!141047))

(assert (= (and b!141048 res!67301) b!141033))

(assert (= (or b!141048 b!141047) bm!15644))

(declare-fun b_lambda!6293 () Bool)

(assert (=> (not b_lambda!6293) (not b!141038)))

(assert (=> b!141038 t!6328))

(declare-fun b_and!8793 () Bool)

(assert (= b_and!8789 (and (=> t!6328 result!4187) b_and!8793)))

(assert (=> b!141038 t!6330))

(declare-fun b_and!8795 () Bool)

(assert (= b_and!8791 (and (=> t!6330 result!4189) b_and!8795)))

(declare-fun m!168641 () Bool)

(assert (=> b!141045 m!168641))

(assert (=> b!141045 m!168641))

(declare-fun m!168643 () Bool)

(assert (=> b!141045 m!168643))

(assert (=> b!141038 m!166703))

(declare-fun m!168645 () Bool)

(assert (=> b!141038 m!168645))

(assert (=> b!141038 m!166703))

(declare-fun m!168647 () Bool)

(assert (=> b!141038 m!168647))

(assert (=> b!141038 m!168641))

(assert (=> b!141038 m!168641))

(declare-fun m!168649 () Bool)

(assert (=> b!141038 m!168649))

(assert (=> b!141038 m!168645))

(declare-fun m!168651 () Bool)

(assert (=> bm!15641 m!168651))

(assert (=> b!141049 m!168641))

(assert (=> b!141049 m!168641))

(declare-fun m!168653 () Bool)

(assert (=> b!141049 m!168653))

(declare-fun m!168655 () Bool)

(assert (=> b!141033 m!168655))

(assert (=> d!44143 m!166687))

(declare-fun m!168657 () Bool)

(assert (=> bm!15644 m!168657))

(declare-fun m!168659 () Bool)

(assert (=> bm!15646 m!168659))

(declare-fun m!168661 () Bool)

(assert (=> bm!15645 m!168661))

(declare-fun m!168663 () Bool)

(assert (=> b!141037 m!168663))

(declare-fun m!168665 () Bool)

(assert (=> b!141040 m!168665))

(declare-fun m!168667 () Bool)

(assert (=> b!141040 m!168667))

(declare-fun m!168669 () Bool)

(assert (=> b!141040 m!168669))

(declare-fun m!168671 () Bool)

(assert (=> b!141040 m!168671))

(declare-fun m!168673 () Bool)

(assert (=> b!141040 m!168673))

(declare-fun m!168675 () Bool)

(assert (=> b!141040 m!168675))

(assert (=> b!141040 m!168671))

(declare-fun m!168677 () Bool)

(assert (=> b!141040 m!168677))

(declare-fun m!168679 () Bool)

(assert (=> b!141040 m!168679))

(declare-fun m!168681 () Bool)

(assert (=> b!141040 m!168681))

(declare-fun m!168683 () Bool)

(assert (=> b!141040 m!168683))

(declare-fun m!168685 () Bool)

(assert (=> b!141040 m!168685))

(assert (=> b!141040 m!168675))

(declare-fun m!168687 () Bool)

(assert (=> b!141040 m!168687))

(declare-fun m!168689 () Bool)

(assert (=> b!141040 m!168689))

(assert (=> b!141040 m!168679))

(assert (=> b!141040 m!168683))

(assert (=> b!141040 m!168641))

(declare-fun m!168691 () Bool)

(assert (=> b!141040 m!168691))

(assert (=> b!141040 m!168661))

(declare-fun m!168693 () Bool)

(assert (=> b!141040 m!168693))

(assert (=> b!141034 m!168641))

(assert (=> b!141034 m!168641))

(assert (=> b!141034 m!168643))

(declare-fun m!168695 () Bool)

(assert (=> b!141041 m!168695))

(assert (=> d!43641 d!44143))

(assert (=> d!43641 d!43643))

(declare-fun b!141051 () Bool)

(declare-fun e!91923 () (_ BitVec 32))

(declare-fun e!91922 () (_ BitVec 32))

(assert (=> b!141051 (= e!91923 e!91922)))

(declare-fun c!26525 () Bool)

(assert (=> b!141051 (= c!26525 (validKeyInArray!0 (select (arr!2302 lt!73355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(declare-fun b!141052 () Bool)

(declare-fun call!15650 () (_ BitVec 32))

(assert (=> b!141052 (= e!91922 (bvadd #b00000000000000000000000000000001 call!15650))))

(declare-fun d!44145 () Bool)

(declare-fun lt!73869 () (_ BitVec 32))

(assert (=> d!44145 (and (bvsge lt!73869 #b00000000000000000000000000000000) (bvsle lt!73869 (bvsub (size!2575 lt!73355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (=> d!44145 (= lt!73869 e!91923)))

(declare-fun c!26524 () Bool)

(assert (=> d!44145 (= c!26524 (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)))))

(assert (=> d!44145 (and (bvsle (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) (size!2575 lt!73355)))))

(assert (=> d!44145 (= (arrayCountValidKeys!0 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) lt!73869)))

(declare-fun b!141053 () Bool)

(assert (=> b!141053 (= e!91923 #b00000000000000000000000000000000)))

(declare-fun b!141054 () Bool)

(assert (=> b!141054 (= e!91922 call!15650)))

(declare-fun bm!15647 () Bool)

(assert (=> bm!15647 (= call!15650 (arrayCountValidKeys!0 lt!73355 (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)))))

(assert (= (and d!44145 c!26524) b!141053))

(assert (= (and d!44145 (not c!26524)) b!141051))

(assert (= (and b!141051 c!26525) b!141052))

(assert (= (and b!141051 (not c!26525)) b!141054))

(assert (= (or b!141052 b!141054) bm!15647))

(declare-fun m!168697 () Bool)

(assert (=> b!141051 m!168697))

(assert (=> b!141051 m!168697))

(declare-fun m!168699 () Bool)

(assert (=> b!141051 m!168699))

(declare-fun m!168701 () Bool)

(assert (=> bm!15647 m!168701))

(assert (=> d!43641 d!44145))

(declare-fun d!44147 () Bool)

(declare-fun e!91926 () Bool)

(assert (=> d!44147 e!91926))

(declare-fun res!67307 () Bool)

(assert (=> d!44147 (=> (not res!67307) (not e!91926))))

(assert (=> d!44147 (= res!67307 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 (_keys!4697 newMap!16)))))))

(declare-fun lt!73872 () Unit!4393)

(declare-fun choose!102 ((_ BitVec 64) array!4873 (_ BitVec 32) (_ BitVec 32)) Unit!4393)

(assert (=> d!44147 (= lt!73872 (choose!102 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (mask!7278 newMap!16)))))

(assert (=> d!44147 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44147 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (mask!7278 newMap!16)) lt!73872)))

(declare-fun b!141057 () Bool)

(assert (=> b!141057 (= e!91926 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)))))

(assert (= (and d!44147 res!67307) b!141057))

(assert (=> d!44147 m!166407))

(declare-fun m!168703 () Bool)

(assert (=> d!44147 m!168703))

(assert (=> d!44147 m!166687))

(assert (=> b!141057 m!167045))

(assert (=> b!141057 m!167055))

(assert (=> d!43641 d!44147))

(declare-fun b!141058 () Bool)

(declare-fun e!91928 () (_ BitVec 32))

(declare-fun e!91927 () (_ BitVec 32))

(assert (=> b!141058 (= e!91928 e!91927)))

(declare-fun c!26527 () Bool)

(assert (=> b!141058 (= c!26527 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141059 () Bool)

(declare-fun call!15651 () (_ BitVec 32))

(assert (=> b!141059 (= e!91927 (bvadd #b00000000000000000000000000000001 call!15651))))

(declare-fun lt!73873 () (_ BitVec 32))

(declare-fun d!44149 () Bool)

(assert (=> d!44149 (and (bvsge lt!73873 #b00000000000000000000000000000000) (bvsle lt!73873 (bvsub (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!44149 (= lt!73873 e!91928)))

(declare-fun c!26526 () Bool)

(assert (=> d!44149 (= c!26526 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44149 (and (bvsle #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 newMap!16)) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!44149 (= (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) lt!73873)))

(declare-fun b!141060 () Bool)

(assert (=> b!141060 (= e!91928 #b00000000000000000000000000000000)))

(declare-fun b!141061 () Bool)

(assert (=> b!141061 (= e!91927 call!15651)))

(declare-fun bm!15648 () Bool)

(assert (=> bm!15648 (= call!15651 (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (= (and d!44149 c!26526) b!141060))

(assert (= (and d!44149 (not c!26526)) b!141058))

(assert (= (and b!141058 c!26527) b!141059))

(assert (= (and b!141058 (not c!26527)) b!141061))

(assert (= (or b!141059 b!141061) bm!15648))

(declare-fun m!168705 () Bool)

(assert (=> b!141058 m!168705))

(assert (=> b!141058 m!168705))

(declare-fun m!168707 () Bool)

(assert (=> b!141058 m!168707))

(declare-fun m!168709 () Bool)

(assert (=> bm!15648 m!168709))

(assert (=> d!43641 d!44149))

(assert (=> d!43641 d!43839))

(declare-fun d!44151 () Bool)

(declare-fun e!91931 () Bool)

(assert (=> d!44151 e!91931))

(declare-fun res!67310 () Bool)

(assert (=> d!44151 (=> (not res!67310) (not e!91931))))

(assert (=> d!44151 (= res!67310 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 (_keys!4697 newMap!16)))))))

(declare-fun lt!73876 () Unit!4393)

(declare-fun choose!41 (array!4873 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1740) Unit!4393)

(assert (=> d!44151 (= lt!73876 (choose!41 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) lt!73352 lt!73349))))

(assert (=> d!44151 (bvslt (size!2575 (_keys!4697 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!44151 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) lt!73352 lt!73349) lt!73876)))

(declare-fun b!141064 () Bool)

(assert (=> b!141064 (= e!91931 (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73352 lt!73349))))

(assert (= (and d!44151 res!67310) b!141064))

(assert (=> d!44151 m!166407))

(declare-fun m!168711 () Bool)

(assert (=> d!44151 m!168711))

(assert (=> b!141064 m!167045))

(assert (=> b!141064 m!167033))

(assert (=> d!43641 d!44151))

(declare-fun bm!15649 () Bool)

(declare-fun call!15652 () ListLongMap!1711)

(declare-fun call!15654 () ListLongMap!1711)

(assert (=> bm!15649 (= call!15652 call!15654)))

(declare-fun bm!15650 () Bool)

(declare-fun call!15657 () Bool)

(declare-fun lt!73880 () ListLongMap!1711)

(assert (=> bm!15650 (= call!15657 (contains!910 lt!73880 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141066 () Bool)

(declare-fun e!91939 () Bool)

(assert (=> b!141066 (= e!91939 (not call!15657))))

(declare-fun b!141067 () Bool)

(declare-fun e!91937 () ListLongMap!1711)

(assert (=> b!141067 (= e!91937 call!15652)))

(declare-fun b!141068 () Bool)

(declare-fun e!91936 () Bool)

(assert (=> b!141068 (= e!91936 (= (apply!120 lt!73880 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 newMap!16)))))

(declare-fun e!91941 () Bool)

(declare-fun b!141069 () Bool)

(assert (=> b!141069 (= e!91941 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141070 () Bool)

(declare-fun e!91942 () Bool)

(declare-fun e!91935 () Bool)

(assert (=> b!141070 (= e!91942 e!91935)))

(declare-fun c!26530 () Bool)

(assert (=> b!141070 (= c!26530 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141071 () Bool)

(declare-fun res!67312 () Bool)

(assert (=> b!141071 (=> (not res!67312) (not e!91942))))

(declare-fun e!91938 () Bool)

(assert (=> b!141071 (= res!67312 e!91938)))

(declare-fun res!67315 () Bool)

(assert (=> b!141071 (=> res!67315 e!91938)))

(assert (=> b!141071 (= res!67315 (not e!91941))))

(declare-fun res!67318 () Bool)

(assert (=> b!141071 (=> (not res!67318) (not e!91941))))

(assert (=> b!141071 (= res!67318 (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun bm!15651 () Bool)

(declare-fun call!15658 () ListLongMap!1711)

(declare-fun call!15655 () ListLongMap!1711)

(assert (=> bm!15651 (= call!15658 call!15655)))

(declare-fun b!141072 () Bool)

(declare-fun e!91933 () Bool)

(assert (=> b!141072 (= e!91933 (= (apply!120 lt!73880 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 newMap!16)))))

(declare-fun b!141073 () Bool)

(declare-fun e!91934 () Bool)

(assert (=> b!141073 (= e!91934 (= (apply!120 lt!73880 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141073 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))))))

(assert (=> b!141073 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun b!141074 () Bool)

(declare-fun e!91944 () ListLongMap!1711)

(assert (=> b!141074 (= e!91944 e!91937)))

(declare-fun c!26532 () Bool)

(assert (=> b!141074 (= c!26532 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141075 () Bool)

(declare-fun e!91932 () Unit!4393)

(declare-fun lt!73896 () Unit!4393)

(assert (=> b!141075 (= e!91932 lt!73896)))

(declare-fun lt!73892 () ListLongMap!1711)

(assert (=> b!141075 (= lt!73892 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73881 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73881 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73898 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73898 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73877 () Unit!4393)

(assert (=> b!141075 (= lt!73877 (addStillContains!96 lt!73892 lt!73881 (zeroValue!2789 newMap!16) lt!73898))))

(assert (=> b!141075 (contains!910 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))) lt!73898)))

(declare-fun lt!73879 () Unit!4393)

(assert (=> b!141075 (= lt!73879 lt!73877)))

(declare-fun lt!73882 () ListLongMap!1711)

(assert (=> b!141075 (= lt!73882 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73894 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73894 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73889 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73889 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73890 () Unit!4393)

(assert (=> b!141075 (= lt!73890 (addApplyDifferent!96 lt!73882 lt!73894 (minValue!2789 newMap!16) lt!73889))))

(assert (=> b!141075 (= (apply!120 (+!167 lt!73882 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))) lt!73889) (apply!120 lt!73882 lt!73889))))

(declare-fun lt!73895 () Unit!4393)

(assert (=> b!141075 (= lt!73895 lt!73890)))

(declare-fun lt!73878 () ListLongMap!1711)

(assert (=> b!141075 (= lt!73878 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73887 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73887 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73897 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73897 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73886 () Unit!4393)

(assert (=> b!141075 (= lt!73886 (addApplyDifferent!96 lt!73878 lt!73887 (zeroValue!2789 newMap!16) lt!73897))))

(assert (=> b!141075 (= (apply!120 (+!167 lt!73878 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))) lt!73897) (apply!120 lt!73878 lt!73897))))

(declare-fun lt!73883 () Unit!4393)

(assert (=> b!141075 (= lt!73883 lt!73886)))

(declare-fun lt!73893 () ListLongMap!1711)

(assert (=> b!141075 (= lt!73893 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun lt!73891 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73891 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73888 () (_ BitVec 64))

(assert (=> b!141075 (= lt!73888 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!141075 (= lt!73896 (addApplyDifferent!96 lt!73893 lt!73891 (minValue!2789 newMap!16) lt!73888))))

(assert (=> b!141075 (= (apply!120 (+!167 lt!73893 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))) lt!73888) (apply!120 lt!73893 lt!73888))))

(declare-fun d!44153 () Bool)

(assert (=> d!44153 e!91942))

(declare-fun res!67317 () Bool)

(assert (=> d!44153 (=> (not res!67317) (not e!91942))))

(assert (=> d!44153 (= res!67317 (or (bvsge #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))))

(declare-fun lt!73884 () ListLongMap!1711)

(assert (=> d!44153 (= lt!73880 lt!73884)))

(declare-fun lt!73885 () Unit!4393)

(assert (=> d!44153 (= lt!73885 e!91932)))

(declare-fun c!26528 () Bool)

(declare-fun e!91943 () Bool)

(assert (=> d!44153 (= c!26528 e!91943)))

(declare-fun res!67314 () Bool)

(assert (=> d!44153 (=> (not res!67314) (not e!91943))))

(assert (=> d!44153 (= res!67314 (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!44153 (= lt!73884 e!91944)))

(declare-fun c!26529 () Bool)

(assert (=> d!44153 (= c!26529 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!44153 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44153 (= (getCurrentListMap!534 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!73880)))

(declare-fun b!141065 () Bool)

(declare-fun e!91940 () ListLongMap!1711)

(declare-fun call!15653 () ListLongMap!1711)

(assert (=> b!141065 (= e!91940 call!15653)))

(declare-fun b!141076 () Bool)

(assert (=> b!141076 (= e!91944 (+!167 call!15654 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!141077 () Bool)

(assert (=> b!141077 (= e!91939 e!91933)))

(declare-fun res!67313 () Bool)

(assert (=> b!141077 (= res!67313 call!15657)))

(assert (=> b!141077 (=> (not res!67313) (not e!91933))))

(declare-fun bm!15652 () Bool)

(assert (=> bm!15652 (= call!15653 call!15658)))

(declare-fun b!141078 () Bool)

(declare-fun res!67311 () Bool)

(assert (=> b!141078 (=> (not res!67311) (not e!91942))))

(assert (=> b!141078 (= res!67311 e!91939)))

(declare-fun c!26533 () Bool)

(assert (=> b!141078 (= c!26533 (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!141079 () Bool)

(declare-fun c!26531 () Bool)

(assert (=> b!141079 (= c!26531 (and (not (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!141079 (= e!91937 e!91940)))

(declare-fun b!141080 () Bool)

(assert (=> b!141080 (= e!91943 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!15653 () Bool)

(declare-fun call!15656 () Bool)

(assert (=> bm!15653 (= call!15656 (contains!910 lt!73880 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141081 () Bool)

(assert (=> b!141081 (= e!91940 call!15652)))

(declare-fun b!141082 () Bool)

(assert (=> b!141082 (= e!91935 (not call!15656))))

(declare-fun bm!15654 () Bool)

(assert (=> bm!15654 (= call!15655 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(declare-fun b!141083 () Bool)

(assert (=> b!141083 (= e!91935 e!91936)))

(declare-fun res!67316 () Bool)

(assert (=> b!141083 (= res!67316 call!15656)))

(assert (=> b!141083 (=> (not res!67316) (not e!91936))))

(declare-fun b!141084 () Bool)

(assert (=> b!141084 (= e!91938 e!91934)))

(declare-fun res!67319 () Bool)

(assert (=> b!141084 (=> (not res!67319) (not e!91934))))

(assert (=> b!141084 (= res!67319 (contains!910 lt!73880 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141084 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun b!141085 () Bool)

(declare-fun Unit!4448 () Unit!4393)

(assert (=> b!141085 (= e!91932 Unit!4448)))

(declare-fun bm!15655 () Bool)

(assert (=> bm!15655 (= call!15654 (+!167 (ite c!26529 call!15655 (ite c!26532 call!15658 call!15653)) (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44153 c!26529) b!141076))

(assert (= (and d!44153 (not c!26529)) b!141074))

(assert (= (and b!141074 c!26532) b!141067))

(assert (= (and b!141074 (not c!26532)) b!141079))

(assert (= (and b!141079 c!26531) b!141081))

(assert (= (and b!141079 (not c!26531)) b!141065))

(assert (= (or b!141081 b!141065) bm!15652))

(assert (= (or b!141067 bm!15652) bm!15651))

(assert (= (or b!141067 b!141081) bm!15649))

(assert (= (or b!141076 bm!15651) bm!15654))

(assert (= (or b!141076 bm!15649) bm!15655))

(assert (= (and d!44153 res!67314) b!141080))

(assert (= (and d!44153 c!26528) b!141075))

(assert (= (and d!44153 (not c!26528)) b!141085))

(assert (= (and d!44153 res!67317) b!141071))

(assert (= (and b!141071 res!67318) b!141069))

(assert (= (and b!141071 (not res!67315)) b!141084))

(assert (= (and b!141084 res!67319) b!141073))

(assert (= (and b!141071 res!67312) b!141078))

(assert (= (and b!141078 c!26533) b!141077))

(assert (= (and b!141078 (not c!26533)) b!141066))

(assert (= (and b!141077 res!67313) b!141072))

(assert (= (or b!141077 b!141066) bm!15650))

(assert (= (and b!141078 res!67311) b!141070))

(assert (= (and b!141070 c!26530) b!141083))

(assert (= (and b!141070 (not c!26530)) b!141082))

(assert (= (and b!141083 res!67316) b!141068))

(assert (= (or b!141083 b!141082) bm!15653))

(declare-fun b_lambda!6295 () Bool)

(assert (=> (not b_lambda!6295) (not b!141073)))

(assert (=> b!141073 t!6328))

(declare-fun b_and!8797 () Bool)

(assert (= b_and!8793 (and (=> t!6328 result!4187) b_and!8797)))

(assert (=> b!141073 t!6330))

(declare-fun b_and!8799 () Bool)

(assert (= b_and!8795 (and (=> t!6330 result!4189) b_and!8799)))

(assert (=> b!141080 m!168705))

(assert (=> b!141080 m!168705))

(assert (=> b!141080 m!168707))

(assert (=> b!141073 m!166703))

(declare-fun m!168713 () Bool)

(assert (=> b!141073 m!168713))

(assert (=> b!141073 m!166703))

(declare-fun m!168715 () Bool)

(assert (=> b!141073 m!168715))

(assert (=> b!141073 m!168705))

(assert (=> b!141073 m!168705))

(declare-fun m!168717 () Bool)

(assert (=> b!141073 m!168717))

(assert (=> b!141073 m!168713))

(declare-fun m!168719 () Bool)

(assert (=> bm!15650 m!168719))

(assert (=> b!141084 m!168705))

(assert (=> b!141084 m!168705))

(declare-fun m!168721 () Bool)

(assert (=> b!141084 m!168721))

(declare-fun m!168723 () Bool)

(assert (=> b!141068 m!168723))

(assert (=> d!44153 m!166687))

(declare-fun m!168725 () Bool)

(assert (=> bm!15653 m!168725))

(declare-fun m!168727 () Bool)

(assert (=> bm!15655 m!168727))

(declare-fun m!168729 () Bool)

(assert (=> bm!15654 m!168729))

(declare-fun m!168731 () Bool)

(assert (=> b!141072 m!168731))

(declare-fun m!168733 () Bool)

(assert (=> b!141075 m!168733))

(declare-fun m!168735 () Bool)

(assert (=> b!141075 m!168735))

(declare-fun m!168737 () Bool)

(assert (=> b!141075 m!168737))

(declare-fun m!168739 () Bool)

(assert (=> b!141075 m!168739))

(declare-fun m!168741 () Bool)

(assert (=> b!141075 m!168741))

(declare-fun m!168743 () Bool)

(assert (=> b!141075 m!168743))

(assert (=> b!141075 m!168739))

(declare-fun m!168745 () Bool)

(assert (=> b!141075 m!168745))

(declare-fun m!168747 () Bool)

(assert (=> b!141075 m!168747))

(declare-fun m!168749 () Bool)

(assert (=> b!141075 m!168749))

(declare-fun m!168751 () Bool)

(assert (=> b!141075 m!168751))

(declare-fun m!168753 () Bool)

(assert (=> b!141075 m!168753))

(assert (=> b!141075 m!168743))

(declare-fun m!168755 () Bool)

(assert (=> b!141075 m!168755))

(declare-fun m!168757 () Bool)

(assert (=> b!141075 m!168757))

(assert (=> b!141075 m!168747))

(assert (=> b!141075 m!168751))

(assert (=> b!141075 m!168705))

(declare-fun m!168759 () Bool)

(assert (=> b!141075 m!168759))

(assert (=> b!141075 m!168729))

(declare-fun m!168761 () Bool)

(assert (=> b!141075 m!168761))

(assert (=> b!141069 m!168705))

(assert (=> b!141069 m!168705))

(assert (=> b!141069 m!168707))

(declare-fun m!168763 () Bool)

(assert (=> b!141076 m!168763))

(assert (=> d!43641 d!44153))

(assert (=> d!43641 d!43561))

(declare-fun d!44155 () Bool)

(declare-fun e!91945 () Bool)

(assert (=> d!44155 e!91945))

(declare-fun res!67320 () Bool)

(assert (=> d!44155 (=> (not res!67320) (not e!91945))))

(assert (=> d!44155 (= res!67320 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 lt!73348))))))

(declare-fun lt!73899 () Unit!4393)

(assert (=> d!44155 (= lt!73899 (choose!863 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (defaultEntry!2939 newMap!16)))))

(assert (=> d!44155 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44155 (= (lemmaValidKeyInArrayIsInListMap!124 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (defaultEntry!2939 newMap!16)) lt!73899)))

(declare-fun b!141086 () Bool)

(assert (=> b!141086 (= e!91945 (contains!910 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (= (and d!44155 res!67320) b!141086))

(declare-fun m!168765 () Bool)

(assert (=> d!44155 m!168765))

(assert (=> d!44155 m!166687))

(assert (=> b!141086 m!167039))

(declare-fun m!168767 () Bool)

(assert (=> b!141086 m!168767))

(assert (=> b!141086 m!167039))

(assert (=> b!141086 m!168767))

(declare-fun m!168769 () Bool)

(assert (=> b!141086 m!168769))

(assert (=> d!43641 d!44155))

(declare-fun d!44157 () Bool)

(declare-fun res!67321 () Bool)

(declare-fun e!91946 () Bool)

(assert (=> d!44157 (=> res!67321 e!91946)))

(assert (=> d!44157 (= res!67321 (= (select (arr!2302 lt!73345) #b00000000000000000000000000000000) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44157 (= (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91946)))

(declare-fun b!141087 () Bool)

(declare-fun e!91947 () Bool)

(assert (=> b!141087 (= e!91946 e!91947)))

(declare-fun res!67322 () Bool)

(assert (=> b!141087 (=> (not res!67322) (not e!91947))))

(assert (=> b!141087 (= res!67322 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 lt!73345)))))

(declare-fun b!141088 () Bool)

(assert (=> b!141088 (= e!91947 (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44157 (not res!67321)) b!141087))

(assert (= (and b!141087 res!67322) b!141088))

(declare-fun m!168771 () Bool)

(assert (=> d!44157 m!168771))

(assert (=> b!141088 m!166407))

(declare-fun m!168773 () Bool)

(assert (=> b!141088 m!168773))

(assert (=> d!43641 d!44157))

(declare-fun b!141099 () Bool)

(declare-fun e!91953 () Bool)

(assert (=> b!141099 (= e!91953 (bvslt (size!2575 (_keys!4697 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!141097 () Bool)

(declare-fun res!67331 () Bool)

(assert (=> b!141097 (=> (not res!67331) (not e!91953))))

(assert (=> b!141097 (= res!67331 (not (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))))

(declare-fun b!141100 () Bool)

(declare-fun e!91952 () Bool)

(assert (=> b!141100 (= e!91952 (= (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!141098 () Bool)

(declare-fun res!67333 () Bool)

(assert (=> b!141098 (=> (not res!67333) (not e!91953))))

(assert (=> b!141098 (= res!67333 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun d!44159 () Bool)

(assert (=> d!44159 e!91952))

(declare-fun res!67332 () Bool)

(assert (=> d!44159 (=> (not res!67332) (not e!91952))))

(assert (=> d!44159 (= res!67332 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 (_keys!4697 newMap!16)))))))

(declare-fun lt!73902 () Unit!4393)

(declare-fun choose!1 (array!4873 (_ BitVec 32) (_ BitVec 64)) Unit!4393)

(assert (=> d!44159 (= lt!73902 (choose!1 (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44159 e!91953))

(declare-fun res!67334 () Bool)

(assert (=> d!44159 (=> (not res!67334) (not e!91953))))

(assert (=> d!44159 (= res!67334 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 (_keys!4697 newMap!16)))))))

(assert (=> d!44159 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73902)))

(assert (= (and d!44159 res!67334) b!141097))

(assert (= (and b!141097 res!67331) b!141098))

(assert (= (and b!141098 res!67333) b!141099))

(assert (= (and d!44159 res!67332) b!141100))

(declare-fun m!168775 () Bool)

(assert (=> b!141097 m!168775))

(assert (=> b!141097 m!168775))

(declare-fun m!168777 () Bool)

(assert (=> b!141097 m!168777))

(assert (=> b!141100 m!167045))

(assert (=> b!141100 m!167037))

(assert (=> b!141100 m!166599))

(assert (=> b!141098 m!166407))

(assert (=> b!141098 m!166525))

(assert (=> d!44159 m!166407))

(declare-fun m!168779 () Bool)

(assert (=> d!44159 m!168779))

(assert (=> d!43641 d!44159))

(declare-fun d!44161 () Bool)

(assert (=> d!44161 (= (arrayCountValidKeys!0 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!73905 () Unit!4393)

(declare-fun choose!2 (array!4873 (_ BitVec 32)) Unit!4393)

(assert (=> d!44161 (= lt!73905 (choose!2 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(declare-fun e!91956 () Bool)

(assert (=> d!44161 e!91956))

(declare-fun res!67339 () Bool)

(assert (=> d!44161 (=> (not res!67339) (not e!91956))))

(assert (=> d!44161 (= res!67339 (and (bvsge (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000000) (bvslt (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (size!2575 lt!73355))))))

(assert (=> d!44161 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) lt!73905)))

(declare-fun b!141105 () Bool)

(declare-fun res!67340 () Bool)

(assert (=> b!141105 (=> (not res!67340) (not e!91956))))

(assert (=> b!141105 (= res!67340 (validKeyInArray!0 (select (arr!2302 lt!73355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(declare-fun b!141106 () Bool)

(assert (=> b!141106 (= e!91956 (bvslt (size!2575 lt!73355) #b01111111111111111111111111111111))))

(assert (= (and d!44161 res!67339) b!141105))

(assert (= (and b!141105 res!67340) b!141106))

(assert (=> d!44161 m!167047))

(declare-fun m!168781 () Bool)

(assert (=> d!44161 m!168781))

(assert (=> b!141105 m!168697))

(assert (=> b!141105 m!168697))

(assert (=> b!141105 m!168699))

(assert (=> d!43641 d!44161))

(declare-fun b!141108 () Bool)

(declare-fun e!91958 () Bool)

(declare-fun call!15659 () Bool)

(assert (=> b!141108 (= e!91958 call!15659)))

(declare-fun b!141109 () Bool)

(declare-fun e!91959 () Bool)

(assert (=> b!141109 (= e!91959 e!91958)))

(declare-fun c!26534 () Bool)

(assert (=> b!141109 (= c!26534 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141110 () Bool)

(declare-fun e!91957 () Bool)

(assert (=> b!141110 (= e!91957 call!15659)))

(declare-fun bm!15656 () Bool)

(assert (=> bm!15656 (= call!15659 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)))))

(declare-fun b!141107 () Bool)

(assert (=> b!141107 (= e!91958 e!91957)))

(declare-fun lt!73907 () (_ BitVec 64))

(assert (=> b!141107 (= lt!73907 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73906 () Unit!4393)

(assert (=> b!141107 (= lt!73906 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 #b00000000000000000000000000000000))))

(assert (=> b!141107 (arrayContainsKey!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 #b00000000000000000000000000000000)))

(declare-fun lt!73908 () Unit!4393)

(assert (=> b!141107 (= lt!73908 lt!73906)))

(declare-fun res!67342 () Bool)

(assert (=> b!141107 (= res!67342 (= (seekEntryOrOpen!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)) (Found!282 #b00000000000000000000000000000000)))))

(assert (=> b!141107 (=> (not res!67342) (not e!91957))))

(declare-fun d!44163 () Bool)

(declare-fun res!67341 () Bool)

(assert (=> d!44163 (=> res!67341 e!91959)))

(assert (=> d!44163 (= res!67341 (bvsge #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!44163 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)) e!91959)))

(assert (= (and d!44163 (not res!67341)) b!141109))

(assert (= (and b!141109 c!26534) b!141107))

(assert (= (and b!141109 (not c!26534)) b!141108))

(assert (= (and b!141107 res!67342) b!141110))

(assert (= (or b!141110 b!141108) bm!15656))

(assert (=> b!141109 m!168705))

(assert (=> b!141109 m!168705))

(assert (=> b!141109 m!168707))

(declare-fun m!168783 () Bool)

(assert (=> bm!15656 m!168783))

(assert (=> b!141107 m!168705))

(declare-fun m!168785 () Bool)

(assert (=> b!141107 m!168785))

(declare-fun m!168787 () Bool)

(assert (=> b!141107 m!168787))

(assert (=> b!141107 m!168705))

(declare-fun m!168789 () Bool)

(assert (=> b!141107 m!168789))

(assert (=> d!43641 d!44163))

(declare-fun d!44165 () Bool)

(declare-fun e!91961 () Bool)

(assert (=> d!44165 e!91961))

(declare-fun res!67343 () Bool)

(assert (=> d!44165 (=> res!67343 e!91961)))

(declare-fun lt!73912 () Bool)

(assert (=> d!44165 (= res!67343 (not lt!73912))))

(declare-fun lt!73911 () Bool)

(assert (=> d!44165 (= lt!73912 lt!73911)))

(declare-fun lt!73910 () Unit!4393)

(declare-fun e!91960 () Unit!4393)

(assert (=> d!44165 (= lt!73910 e!91960)))

(declare-fun c!26535 () Bool)

(assert (=> d!44165 (= c!26535 lt!73911)))

(assert (=> d!44165 (= lt!73911 (containsKey!178 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (=> d!44165 (= (contains!910 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) lt!73912)))

(declare-fun b!141111 () Bool)

(declare-fun lt!73909 () Unit!4393)

(assert (=> b!141111 (= e!91960 lt!73909)))

(assert (=> b!141111 (= lt!73909 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (=> b!141111 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(declare-fun b!141112 () Bool)

(declare-fun Unit!4449 () Unit!4393)

(assert (=> b!141112 (= e!91960 Unit!4449)))

(declare-fun b!141113 () Bool)

(assert (=> b!141113 (= e!91961 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))))

(assert (= (and d!44165 c!26535) b!141111))

(assert (= (and d!44165 (not c!26535)) b!141112))

(assert (= (and d!44165 (not res!67343)) b!141113))

(assert (=> d!44165 m!167031))

(declare-fun m!168791 () Bool)

(assert (=> d!44165 m!168791))

(assert (=> b!141111 m!167031))

(declare-fun m!168793 () Bool)

(assert (=> b!141111 m!168793))

(assert (=> b!141111 m!167031))

(declare-fun m!168795 () Bool)

(assert (=> b!141111 m!168795))

(assert (=> b!141111 m!168795))

(declare-fun m!168797 () Bool)

(assert (=> b!141111 m!168797))

(assert (=> b!141113 m!167031))

(assert (=> b!141113 m!168795))

(assert (=> b!141113 m!168795))

(assert (=> b!141113 m!168797))

(assert (=> d!43641 d!44165))

(assert (=> d!43641 d!43605))

(assert (=> b!140219 d!43931))

(assert (=> b!140219 d!43933))

(declare-fun d!44167 () Bool)

(declare-fun lt!73913 () Bool)

(assert (=> d!44167 (= lt!73913 (select (content!137 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!91962 () Bool)

(assert (=> d!44167 (= lt!73913 e!91962)))

(declare-fun res!67345 () Bool)

(assert (=> d!44167 (=> (not res!67345) (not e!91962))))

(assert (=> d!44167 (= res!67345 ((_ is Cons!1736) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))))

(assert (=> d!44167 (= (contains!913 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!73913)))

(declare-fun b!141114 () Bool)

(declare-fun e!91963 () Bool)

(assert (=> b!141114 (= e!91962 e!91963)))

(declare-fun res!67344 () Bool)

(assert (=> b!141114 (=> res!67344 e!91963)))

(assert (=> b!141114 (= res!67344 (= (h!2343 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!141115 () Bool)

(assert (=> b!141115 (= e!91963 (contains!913 (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!44167 res!67345) b!141114))

(assert (= (and b!141114 (not res!67344)) b!141115))

(declare-fun m!168799 () Bool)

(assert (=> d!44167 m!168799))

(assert (=> d!44167 m!166997))

(declare-fun m!168801 () Bool)

(assert (=> d!44167 m!168801))

(assert (=> b!141115 m!166997))

(declare-fun m!168803 () Bool)

(assert (=> b!141115 m!168803))

(assert (=> b!140223 d!44167))

(declare-fun d!44169 () Bool)

(declare-fun res!67346 () Bool)

(declare-fun e!91964 () Bool)

(assert (=> d!44169 (=> res!67346 e!91964)))

(assert (=> d!44169 (= res!67346 (and ((_ is Cons!1735) (toList!871 lt!73003)) (= (_1!1339 (h!2342 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44169 (= (containsKey!178 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91964)))

(declare-fun b!141116 () Bool)

(declare-fun e!91965 () Bool)

(assert (=> b!141116 (= e!91964 e!91965)))

(declare-fun res!67347 () Bool)

(assert (=> b!141116 (=> (not res!67347) (not e!91965))))

(assert (=> b!141116 (= res!67347 (and (or (not ((_ is Cons!1735) (toList!871 lt!73003))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1735) (toList!871 lt!73003)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!141117 () Bool)

(assert (=> b!141117 (= e!91965 (containsKey!178 (t!6314 (toList!871 lt!73003)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44169 (not res!67346)) b!141116))

(assert (= (and b!141116 res!67347) b!141117))

(assert (=> b!141117 m!166533))

(declare-fun m!168805 () Bool)

(assert (=> b!141117 m!168805))

(assert (=> d!43609 d!44169))

(declare-fun d!44171 () Bool)

(declare-fun e!91967 () Bool)

(assert (=> d!44171 e!91967))

(declare-fun res!67348 () Bool)

(assert (=> d!44171 (=> res!67348 e!91967)))

(declare-fun lt!73917 () Bool)

(assert (=> d!44171 (= res!67348 (not lt!73917))))

(declare-fun lt!73916 () Bool)

(assert (=> d!44171 (= lt!73917 lt!73916)))

(declare-fun lt!73915 () Unit!4393)

(declare-fun e!91966 () Unit!4393)

(assert (=> d!44171 (= lt!73915 e!91966)))

(declare-fun c!26536 () Bool)

(assert (=> d!44171 (= c!26536 lt!73916)))

(assert (=> d!44171 (= lt!73916 (containsKey!178 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44171 (= (contains!910 lt!73172 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!73917)))

(declare-fun b!141118 () Bool)

(declare-fun lt!73914 () Unit!4393)

(assert (=> b!141118 (= e!91966 lt!73914)))

(assert (=> b!141118 (= lt!73914 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141118 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141119 () Bool)

(declare-fun Unit!4450 () Unit!4393)

(assert (=> b!141119 (= e!91966 Unit!4450)))

(declare-fun b!141120 () Bool)

(assert (=> b!141120 (= e!91967 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44171 c!26536) b!141118))

(assert (= (and d!44171 (not c!26536)) b!141119))

(assert (= (and d!44171 (not res!67348)) b!141120))

(assert (=> d!44171 m!166699))

(declare-fun m!168807 () Bool)

(assert (=> d!44171 m!168807))

(assert (=> b!141118 m!166699))

(declare-fun m!168809 () Bool)

(assert (=> b!141118 m!168809))

(assert (=> b!141118 m!166699))

(assert (=> b!141118 m!168307))

(assert (=> b!141118 m!168307))

(declare-fun m!168811 () Bool)

(assert (=> b!141118 m!168811))

(assert (=> b!141120 m!166699))

(assert (=> b!141120 m!168307))

(assert (=> b!141120 m!168307))

(assert (=> b!141120 m!168811))

(assert (=> b!140076 d!44171))

(declare-fun d!44173 () Bool)

(assert (=> d!44173 (= (apply!120 lt!73128 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5889 () Bool)

(assert (= bs!5889 d!44173))

(assert (=> bs!5889 m!168225))

(assert (=> bs!5889 m!168225))

(declare-fun m!168813 () Bool)

(assert (=> bs!5889 m!168813))

(assert (=> b!140019 d!44173))

(declare-fun d!44175 () Bool)

(declare-fun e!91969 () Bool)

(assert (=> d!44175 e!91969))

(declare-fun res!67349 () Bool)

(assert (=> d!44175 (=> res!67349 e!91969)))

(declare-fun lt!73921 () Bool)

(assert (=> d!44175 (= res!67349 (not lt!73921))))

(declare-fun lt!73920 () Bool)

(assert (=> d!44175 (= lt!73921 lt!73920)))

(declare-fun lt!73919 () Unit!4393)

(declare-fun e!91968 () Unit!4393)

(assert (=> d!44175 (= lt!73919 e!91968)))

(declare-fun c!26537 () Bool)

(assert (=> d!44175 (= c!26537 lt!73920)))

(assert (=> d!44175 (= lt!73920 (containsKey!178 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44175 (= (contains!910 lt!73410 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73921)))

(declare-fun b!141121 () Bool)

(declare-fun lt!73918 () Unit!4393)

(assert (=> b!141121 (= e!91968 lt!73918)))

(assert (=> b!141121 (= lt!73918 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> b!141121 (isDefined!128 (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!141122 () Bool)

(declare-fun Unit!4451 () Unit!4393)

(assert (=> b!141122 (= e!91968 Unit!4451)))

(declare-fun b!141123 () Bool)

(assert (=> b!141123 (= e!91969 (isDefined!128 (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44175 c!26537) b!141121))

(assert (= (and d!44175 (not c!26537)) b!141122))

(assert (= (and d!44175 (not res!67349)) b!141123))

(declare-fun m!168815 () Bool)

(assert (=> d!44175 m!168815))

(declare-fun m!168817 () Bool)

(assert (=> b!141121 m!168817))

(assert (=> b!141121 m!167203))

(assert (=> b!141121 m!167203))

(declare-fun m!168819 () Bool)

(assert (=> b!141121 m!168819))

(assert (=> b!141123 m!167203))

(assert (=> b!141123 m!167203))

(assert (=> b!141123 m!168819))

(assert (=> d!43681 d!44175))

(declare-fun b!141127 () Bool)

(declare-fun e!91971 () Option!180)

(assert (=> b!141127 (= e!91971 None!178)))

(declare-fun b!141125 () Bool)

(declare-fun e!91970 () Option!180)

(assert (=> b!141125 (= e!91970 e!91971)))

(declare-fun c!26539 () Bool)

(assert (=> b!141125 (= c!26539 (and ((_ is Cons!1735) lt!73411) (not (= (_1!1339 (h!2342 lt!73411)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!141124 () Bool)

(assert (=> b!141124 (= e!91970 (Some!179 (_2!1339 (h!2342 lt!73411))))))

(declare-fun d!44177 () Bool)

(declare-fun c!26538 () Bool)

(assert (=> d!44177 (= c!26538 (and ((_ is Cons!1735) lt!73411) (= (_1!1339 (h!2342 lt!73411)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44177 (= (getValueByKey!174 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!91970)))

(declare-fun b!141126 () Bool)

(assert (=> b!141126 (= e!91971 (getValueByKey!174 (t!6314 lt!73411) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44177 c!26538) b!141124))

(assert (= (and d!44177 (not c!26538)) b!141125))

(assert (= (and b!141125 c!26539) b!141126))

(assert (= (and b!141125 (not c!26539)) b!141127))

(declare-fun m!168821 () Bool)

(assert (=> b!141126 m!168821))

(assert (=> d!43681 d!44177))

(declare-fun d!44179 () Bool)

(assert (=> d!44179 (= (getValueByKey!174 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!73922 () Unit!4393)

(assert (=> d!44179 (= lt!73922 (choose!872 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!91972 () Bool)

(assert (=> d!44179 e!91972))

(declare-fun res!67350 () Bool)

(assert (=> d!44179 (=> (not res!67350) (not e!91972))))

(assert (=> d!44179 (= res!67350 (isStrictlySorted!320 lt!73411))))

(assert (=> d!44179 (= (lemmaContainsTupThenGetReturnValue!91 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73922)))

(declare-fun b!141128 () Bool)

(declare-fun res!67351 () Bool)

(assert (=> b!141128 (=> (not res!67351) (not e!91972))))

(assert (=> b!141128 (= res!67351 (containsKey!178 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!141129 () Bool)

(assert (=> b!141129 (= e!91972 (contains!914 lt!73411 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44179 res!67350) b!141128))

(assert (= (and b!141128 res!67351) b!141129))

(assert (=> d!44179 m!167197))

(declare-fun m!168823 () Bool)

(assert (=> d!44179 m!168823))

(declare-fun m!168825 () Bool)

(assert (=> d!44179 m!168825))

(declare-fun m!168827 () Bool)

(assert (=> b!141128 m!168827))

(declare-fun m!168829 () Bool)

(assert (=> b!141129 m!168829))

(assert (=> d!43681 d!44179))

(declare-fun b!141130 () Bool)

(declare-fun e!91975 () List!1739)

(declare-fun call!15662 () List!1739)

(assert (=> b!141130 (= e!91975 call!15662)))

(declare-fun b!141131 () Bool)

(declare-fun e!91973 () List!1739)

(declare-fun call!15661 () List!1739)

(assert (=> b!141131 (= e!91973 call!15661)))

(declare-fun lt!73923 () List!1739)

(declare-fun e!91976 () Bool)

(declare-fun b!141132 () Bool)

(assert (=> b!141132 (= e!91976 (contains!914 lt!73923 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91974 () List!1739)

(declare-fun bm!15657 () Bool)

(declare-fun c!26543 () Bool)

(assert (=> bm!15657 (= call!15662 ($colon$colon!93 e!91974 (ite c!26543 (h!2342 (toList!871 lt!73015)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26540 () Bool)

(assert (=> bm!15657 (= c!26540 c!26543)))

(declare-fun bm!15658 () Bool)

(declare-fun call!15660 () List!1739)

(assert (=> bm!15658 (= call!15661 call!15660)))

(declare-fun b!141133 () Bool)

(declare-fun res!67352 () Bool)

(assert (=> b!141133 (=> (not res!67352) (not e!91976))))

(assert (=> b!141133 (= res!67352 (containsKey!178 lt!73923 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!44181 () Bool)

(assert (=> d!44181 e!91976))

(declare-fun res!67353 () Bool)

(assert (=> d!44181 (=> (not res!67353) (not e!91976))))

(assert (=> d!44181 (= res!67353 (isStrictlySorted!320 lt!73923))))

(assert (=> d!44181 (= lt!73923 e!91975)))

(assert (=> d!44181 (= c!26543 (and ((_ is Cons!1735) (toList!871 lt!73015)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73015))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44181 (isStrictlySorted!320 (toList!871 lt!73015))))

(assert (=> d!44181 (= (insertStrictlySorted!94 (toList!871 lt!73015) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73923)))

(declare-fun c!26541 () Bool)

(declare-fun b!141134 () Bool)

(declare-fun c!26542 () Bool)

(assert (=> b!141134 (= e!91974 (ite c!26542 (t!6314 (toList!871 lt!73015)) (ite c!26541 (Cons!1735 (h!2342 (toList!871 lt!73015)) (t!6314 (toList!871 lt!73015))) Nil!1736)))))

(declare-fun b!141135 () Bool)

(assert (=> b!141135 (= c!26541 (and ((_ is Cons!1735) (toList!871 lt!73015)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73015))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!91977 () List!1739)

(assert (=> b!141135 (= e!91977 e!91973)))

(declare-fun b!141136 () Bool)

(assert (=> b!141136 (= e!91973 call!15661)))

(declare-fun b!141137 () Bool)

(assert (=> b!141137 (= e!91974 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73015)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15659 () Bool)

(assert (=> bm!15659 (= call!15660 call!15662)))

(declare-fun b!141138 () Bool)

(assert (=> b!141138 (= e!91975 e!91977)))

(assert (=> b!141138 (= c!26542 (and ((_ is Cons!1735) (toList!871 lt!73015)) (= (_1!1339 (h!2342 (toList!871 lt!73015))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141139 () Bool)

(assert (=> b!141139 (= e!91977 call!15660)))

(assert (= (and d!44181 c!26543) b!141130))

(assert (= (and d!44181 (not c!26543)) b!141138))

(assert (= (and b!141138 c!26542) b!141139))

(assert (= (and b!141138 (not c!26542)) b!141135))

(assert (= (and b!141135 c!26541) b!141131))

(assert (= (and b!141135 (not c!26541)) b!141136))

(assert (= (or b!141131 b!141136) bm!15658))

(assert (= (or b!141139 bm!15658) bm!15659))

(assert (= (or b!141130 bm!15659) bm!15657))

(assert (= (and bm!15657 c!26540) b!141137))

(assert (= (and bm!15657 (not c!26540)) b!141134))

(assert (= (and d!44181 res!67353) b!141133))

(assert (= (and b!141133 res!67352) b!141132))

(declare-fun m!168831 () Bool)

(assert (=> b!141133 m!168831))

(declare-fun m!168833 () Bool)

(assert (=> b!141137 m!168833))

(declare-fun m!168835 () Bool)

(assert (=> bm!15657 m!168835))

(declare-fun m!168837 () Bool)

(assert (=> b!141132 m!168837))

(declare-fun m!168839 () Bool)

(assert (=> d!44181 m!168839))

(declare-fun m!168841 () Bool)

(assert (=> d!44181 m!168841))

(assert (=> d!43681 d!44181))

(declare-fun b!141140 () Bool)

(declare-fun e!91979 () (_ BitVec 32))

(declare-fun e!91978 () (_ BitVec 32))

(assert (=> b!141140 (= e!91979 e!91978)))

(declare-fun c!26545 () Bool)

(assert (=> b!141140 (= c!26545 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!141141 () Bool)

(declare-fun call!15663 () (_ BitVec 32))

(assert (=> b!141141 (= e!91978 (bvadd #b00000000000000000000000000000001 call!15663))))

(declare-fun d!44183 () Bool)

(declare-fun lt!73924 () (_ BitVec 32))

(assert (=> d!44183 (and (bvsge lt!73924 #b00000000000000000000000000000000) (bvsle lt!73924 (bvsub (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!44183 (= lt!73924 e!91979)))

(declare-fun c!26544 () Bool)

(assert (=> d!44183 (= c!26544 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!44183 (and (bvsle #b00000000000000000000000000000000 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!44183 (= (arrayCountValidKeys!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000000 (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))) lt!73924)))

(declare-fun b!141142 () Bool)

(assert (=> b!141142 (= e!91979 #b00000000000000000000000000000000)))

(declare-fun b!141143 () Bool)

(assert (=> b!141143 (= e!91978 call!15663)))

(declare-fun bm!15660 () Bool)

(assert (=> bm!15660 (= call!15663 (arrayCountValidKeys!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!44183 c!26544) b!141142))

(assert (= (and d!44183 (not c!26544)) b!141140))

(assert (= (and b!141140 c!26545) b!141141))

(assert (= (and b!141140 (not c!26545)) b!141143))

(assert (= (or b!141141 b!141143) bm!15660))

(assert (=> b!141140 m!167691))

(assert (=> b!141140 m!167691))

(assert (=> b!141140 m!167693))

(declare-fun m!168843 () Bool)

(assert (=> bm!15660 m!168843))

(assert (=> b!140283 d!44183))

(declare-fun d!44185 () Bool)

(declare-fun res!67354 () Bool)

(declare-fun e!91980 () Bool)

(assert (=> d!44185 (=> res!67354 e!91980)))

(assert (=> d!44185 (= res!67354 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44185 (= (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!91980)))

(declare-fun b!141144 () Bool)

(declare-fun e!91981 () Bool)

(assert (=> b!141144 (= e!91980 e!91981)))

(declare-fun res!67355 () Bool)

(assert (=> b!141144 (=> (not res!67355) (not e!91981))))

(assert (=> b!141144 (= res!67355 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!141145 () Bool)

(assert (=> b!141145 (= e!91981 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44185 (not res!67354)) b!141144))

(assert (= (and b!141144 res!67355) b!141145))

(declare-fun m!168845 () Bool)

(assert (=> d!44185 m!168845))

(assert (=> b!141145 m!166407))

(declare-fun m!168847 () Bool)

(assert (=> b!141145 m!168847))

(assert (=> b!140192 d!44185))

(declare-fun b!141164 () Bool)

(declare-fun lt!73930 () SeekEntryResult!282)

(assert (=> b!141164 (and (bvsge (index!3293 lt!73930) #b00000000000000000000000000000000) (bvslt (index!3293 lt!73930) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67362 () Bool)

(assert (=> b!141164 (= res!67362 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73930)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!91996 () Bool)

(assert (=> b!141164 (=> res!67362 e!91996)))

(declare-fun e!91993 () Bool)

(assert (=> b!141164 (= e!91993 e!91996)))

(declare-fun e!91992 () SeekEntryResult!282)

(declare-fun b!141165 () Bool)

(assert (=> b!141165 (= e!91992 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!141166 () Bool)

(declare-fun e!91994 () SeekEntryResult!282)

(assert (=> b!141166 (= e!91994 (Intermediate!282 true (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!141168 () Bool)

(assert (=> b!141168 (= e!91992 (Intermediate!282 false (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!141169 () Bool)

(declare-fun e!91995 () Bool)

(assert (=> b!141169 (= e!91995 (bvsge (x!16138 lt!73930) #b01111111111111111111111111111110))))

(declare-fun b!141170 () Bool)

(assert (=> b!141170 (= e!91995 e!91993)))

(declare-fun res!67363 () Bool)

(assert (=> b!141170 (= res!67363 (and ((_ is Intermediate!282) lt!73930) (not (undefined!1094 lt!73930)) (bvslt (x!16138 lt!73930) #b01111111111111111111111111111110) (bvsge (x!16138 lt!73930) #b00000000000000000000000000000000) (bvsge (x!16138 lt!73930) #b00000000000000000000000000000000)))))

(assert (=> b!141170 (=> (not res!67363) (not e!91993))))

(declare-fun b!141171 () Bool)

(assert (=> b!141171 (= e!91994 e!91992)))

(declare-fun lt!73929 () (_ BitVec 64))

(declare-fun c!26552 () Bool)

(assert (=> b!141171 (= c!26552 (or (= lt!73929 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (= (bvadd lt!73929 lt!73929) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141172 () Bool)

(assert (=> b!141172 (and (bvsge (index!3293 lt!73930) #b00000000000000000000000000000000) (bvslt (index!3293 lt!73930) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141172 (= e!91996 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73930)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141167 () Bool)

(assert (=> b!141167 (and (bvsge (index!3293 lt!73930) #b00000000000000000000000000000000) (bvslt (index!3293 lt!73930) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67364 () Bool)

(assert (=> b!141167 (= res!67364 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73930)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141167 (=> res!67364 e!91996)))

(declare-fun d!44187 () Bool)

(assert (=> d!44187 e!91995))

(declare-fun c!26553 () Bool)

(assert (=> d!44187 (= c!26553 (and ((_ is Intermediate!282) lt!73930) (undefined!1094 lt!73930)))))

(assert (=> d!44187 (= lt!73930 e!91994)))

(declare-fun c!26554 () Bool)

(assert (=> d!44187 (= c!26554 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!44187 (= lt!73929 (select (arr!2302 (_keys!4697 newMap!16)) (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16))))))

(assert (=> d!44187 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44187 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!73930)))

(assert (= (and d!44187 c!26554) b!141166))

(assert (= (and d!44187 (not c!26554)) b!141171))

(assert (= (and b!141171 c!26552) b!141168))

(assert (= (and b!141171 (not c!26552)) b!141165))

(assert (= (and d!44187 c!26553) b!141169))

(assert (= (and d!44187 (not c!26553)) b!141170))

(assert (= (and b!141170 res!67363) b!141164))

(assert (= (and b!141164 (not res!67362)) b!141167))

(assert (= (and b!141167 (not res!67364)) b!141172))

(assert (=> b!141165 m!166911))

(declare-fun m!168849 () Bool)

(assert (=> b!141165 m!168849))

(assert (=> b!141165 m!168849))

(assert (=> b!141165 m!166407))

(declare-fun m!168851 () Bool)

(assert (=> b!141165 m!168851))

(declare-fun m!168853 () Bool)

(assert (=> b!141164 m!168853))

(assert (=> d!44187 m!166911))

(declare-fun m!168855 () Bool)

(assert (=> d!44187 m!168855))

(assert (=> d!44187 m!166687))

(assert (=> b!141167 m!168853))

(assert (=> b!141172 m!168853))

(assert (=> d!43611 d!44187))

(declare-fun d!44189 () Bool)

(declare-fun lt!73936 () (_ BitVec 32))

(declare-fun lt!73935 () (_ BitVec 32))

(assert (=> d!44189 (= lt!73936 (bvmul (bvxor lt!73935 (bvlshr lt!73935 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!44189 (= lt!73935 ((_ extract 31 0) (bvand (bvxor (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvlshr (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!44189 (and (bvsge (mask!7278 newMap!16) #b00000000000000000000000000000000) (let ((res!67365 (let ((h!2347 ((_ extract 31 0) (bvand (bvxor (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvlshr (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16242 (bvmul (bvxor h!2347 (bvlshr h!2347 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16242 (bvlshr x!16242 #b00000000000000000000000000001101)) (mask!7278 newMap!16)))))) (and (bvslt res!67365 (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67365 #b00000000000000000000000000000000))))))

(assert (=> d!44189 (= (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) (bvand (bvxor lt!73936 (bvlshr lt!73936 #b00000000000000000000000000001101)) (mask!7278 newMap!16)))))

(assert (=> d!43611 d!44189))

(assert (=> d!43611 d!43719))

(declare-fun d!44191 () Bool)

(declare-fun isEmpty!423 (List!1739) Bool)

(assert (=> d!44191 (= (isEmpty!421 lt!73266) (isEmpty!423 (toList!871 lt!73266)))))

(declare-fun bs!5890 () Bool)

(assert (= bs!5890 d!44191))

(declare-fun m!168857 () Bool)

(assert (=> bs!5890 m!168857))

(assert (=> b!140188 d!44191))

(declare-fun d!44193 () Bool)

(assert (=> d!44193 (= (inRange!0 (ite c!26307 (index!3292 lt!73347) (ite c!26310 (index!3291 lt!73353) (index!3294 lt!73353))) (mask!7278 newMap!16)) (and (bvsge (ite c!26307 (index!3292 lt!73347) (ite c!26310 (index!3291 lt!73353) (index!3294 lt!73353))) #b00000000000000000000000000000000) (bvslt (ite c!26307 (index!3292 lt!73347) (ite c!26310 (index!3291 lt!73353) (index!3294 lt!73353))) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15553 d!44193))

(declare-fun d!44195 () Bool)

(declare-fun lt!73937 () Bool)

(assert (=> d!44195 (= lt!73937 (select (content!138 (toList!871 lt!73279)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!91998 () Bool)

(assert (=> d!44195 (= lt!73937 e!91998)))

(declare-fun res!67366 () Bool)

(assert (=> d!44195 (=> (not res!67366) (not e!91998))))

(assert (=> d!44195 (= res!67366 ((_ is Cons!1735) (toList!871 lt!73279)))))

(assert (=> d!44195 (= (contains!914 (toList!871 lt!73279) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73937)))

(declare-fun b!141173 () Bool)

(declare-fun e!91997 () Bool)

(assert (=> b!141173 (= e!91998 e!91997)))

(declare-fun res!67367 () Bool)

(assert (=> b!141173 (=> res!67367 e!91997)))

(assert (=> b!141173 (= res!67367 (= (h!2342 (toList!871 lt!73279)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141174 () Bool)

(assert (=> b!141174 (= e!91997 (contains!914 (t!6314 (toList!871 lt!73279)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44195 res!67366) b!141173))

(assert (= (and b!141173 (not res!67367)) b!141174))

(declare-fun m!168859 () Bool)

(assert (=> d!44195 m!168859))

(declare-fun m!168861 () Bool)

(assert (=> d!44195 m!168861))

(declare-fun m!168863 () Bool)

(assert (=> b!141174 m!168863))

(assert (=> b!140226 d!44195))

(declare-fun d!44197 () Bool)

(assert (=> d!44197 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73020)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73020)))))

(assert (=> d!43677 d!44197))

(declare-fun b!141178 () Bool)

(declare-fun e!92000 () Option!180)

(assert (=> b!141178 (= e!92000 None!178)))

(declare-fun b!141176 () Bool)

(declare-fun e!91999 () Option!180)

(assert (=> b!141176 (= e!91999 e!92000)))

(declare-fun c!26556 () Bool)

(assert (=> b!141176 (= c!26556 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73020))))))

(declare-fun b!141175 () Bool)

(assert (=> b!141175 (= e!91999 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun d!44199 () Bool)

(declare-fun c!26555 () Bool)

(assert (=> d!44199 (= c!26555 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73020)))))

(assert (=> d!44199 (= (getValueByKey!174 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73020) e!91999)))

(declare-fun b!141177 () Bool)

(assert (=> b!141177 (= e!92000 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73020))))

(assert (= (and d!44199 c!26555) b!141175))

(assert (= (and d!44199 (not c!26555)) b!141176))

(assert (= (and b!141176 c!26556) b!141177))

(assert (= (and b!141176 (not c!26556)) b!141178))

(declare-fun m!168865 () Bool)

(assert (=> b!141177 m!168865))

(assert (=> d!43677 d!44199))

(assert (=> d!43615 d!43611))

(declare-fun d!44201 () Bool)

(declare-fun e!92003 () Bool)

(assert (=> d!44201 e!92003))

(declare-fun res!67372 () Bool)

(assert (=> d!44201 (=> (not res!67372) (not e!92003))))

(declare-fun lt!73940 () SeekEntryResult!282)

(assert (=> d!44201 (= res!67372 ((_ is Found!282) lt!73940))))

(assert (=> d!44201 (= lt!73940 (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(assert (=> d!44201 true))

(declare-fun _$33!120 () Unit!4393)

(assert (=> d!44201 (= (choose!867 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (defaultEntry!2939 newMap!16)) _$33!120)))

(declare-fun b!141183 () Bool)

(declare-fun res!67373 () Bool)

(assert (=> b!141183 (=> (not res!67373) (not e!92003))))

(assert (=> b!141183 (= res!67373 (inRange!0 (index!3292 lt!73940) (mask!7278 newMap!16)))))

(declare-fun b!141184 () Bool)

(assert (=> b!141184 (= e!92003 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73940)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44201 res!67372) b!141183))

(assert (= (and b!141183 res!67373) b!141184))

(assert (=> d!44201 m!166407))

(assert (=> d!44201 m!166615))

(declare-fun m!168867 () Bool)

(assert (=> b!141183 m!168867))

(declare-fun m!168869 () Bool)

(assert (=> b!141184 m!168869))

(assert (=> d!43615 d!44201))

(assert (=> d!43615 d!43719))

(declare-fun d!44203 () Bool)

(assert (=> d!44203 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!44203 true))

(declare-fun _$5!140 () Unit!4393)

(assert (=> d!44203 (= (choose!864 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (index!3292 lt!73103) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) _$5!140)))

(declare-fun bs!5891 () Bool)

(assert (= bs!5891 d!44203))

(assert (=> bs!5891 m!166541))

(assert (=> bs!5891 m!166541))

(assert (=> bs!5891 m!166695))

(assert (=> bs!5891 m!166629))

(assert (=> bs!5891 m!166697))

(assert (=> d!43577 d!44203))

(assert (=> d!43577 d!43719))

(declare-fun d!44205 () Bool)

(assert (=> d!44205 (= (get!1528 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3279 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43693 d!44205))

(assert (=> d!43693 d!43709))

(assert (=> b!140274 d!43615))

(declare-fun d!44207 () Bool)

(declare-fun e!92005 () Bool)

(assert (=> d!44207 e!92005))

(declare-fun res!67374 () Bool)

(assert (=> d!44207 (=> res!67374 e!92005)))

(declare-fun lt!73944 () Bool)

(assert (=> d!44207 (= res!67374 (not lt!73944))))

(declare-fun lt!73943 () Bool)

(assert (=> d!44207 (= lt!73944 lt!73943)))

(declare-fun lt!73942 () Unit!4393)

(declare-fun e!92004 () Unit!4393)

(assert (=> d!44207 (= lt!73942 e!92004)))

(declare-fun c!26557 () Bool)

(assert (=> d!44207 (= c!26557 lt!73943)))

(assert (=> d!44207 (= lt!73943 (containsKey!178 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44207 (= (contains!910 (map!1424 (_2!1340 lt!73342)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!73944)))

(declare-fun b!141185 () Bool)

(declare-fun lt!73941 () Unit!4393)

(assert (=> b!141185 (= e!92004 lt!73941)))

(assert (=> b!141185 (= lt!73941 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> b!141185 (isDefined!128 (getValueByKey!174 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!141186 () Bool)

(declare-fun Unit!4452 () Unit!4393)

(assert (=> b!141186 (= e!92004 Unit!4452)))

(declare-fun b!141187 () Bool)

(assert (=> b!141187 (= e!92005 (isDefined!128 (getValueByKey!174 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (= (and d!44207 c!26557) b!141185))

(assert (= (and d!44207 (not c!26557)) b!141186))

(assert (= (and d!44207 (not res!67374)) b!141187))

(assert (=> d!44207 m!166407))

(declare-fun m!168871 () Bool)

(assert (=> d!44207 m!168871))

(assert (=> b!141185 m!166407))

(declare-fun m!168873 () Bool)

(assert (=> b!141185 m!168873))

(assert (=> b!141185 m!166407))

(declare-fun m!168875 () Bool)

(assert (=> b!141185 m!168875))

(assert (=> b!141185 m!168875))

(declare-fun m!168877 () Bool)

(assert (=> b!141185 m!168877))

(assert (=> b!141187 m!166407))

(assert (=> b!141187 m!168875))

(assert (=> b!141187 m!168875))

(assert (=> b!141187 m!168877))

(assert (=> b!140270 d!44207))

(assert (=> b!140270 d!43721))

(assert (=> d!43581 d!43719))

(declare-fun b!141188 () Bool)

(declare-fun e!92007 () (_ BitVec 32))

(declare-fun e!92006 () (_ BitVec 32))

(assert (=> b!141188 (= e!92007 e!92006)))

(declare-fun c!26559 () Bool)

(assert (=> b!141188 (= c!26559 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!141189 () Bool)

(declare-fun call!15664 () (_ BitVec 32))

(assert (=> b!141189 (= e!92006 (bvadd #b00000000000000000000000000000001 call!15664))))

(declare-fun d!44209 () Bool)

(declare-fun lt!73945 () (_ BitVec 32))

(assert (=> d!44209 (and (bvsge lt!73945 #b00000000000000000000000000000000) (bvsle lt!73945 (bvsub (size!2575 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (=> d!44209 (= lt!73945 e!92007)))

(declare-fun c!26558 () Bool)

(assert (=> d!44209 (= c!26558 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!44209 (and (bvsle #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 (_2!1340 lt!73099))) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!44209 (= (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))) lt!73945)))

(declare-fun b!141190 () Bool)

(assert (=> b!141190 (= e!92007 #b00000000000000000000000000000000)))

(declare-fun b!141191 () Bool)

(assert (=> b!141191 (= e!92006 call!15664)))

(declare-fun bm!15661 () Bool)

(assert (=> bm!15661 (= call!15664 (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (= (and d!44209 c!26558) b!141190))

(assert (= (and d!44209 (not c!26558)) b!141188))

(assert (= (and b!141188 c!26559) b!141189))

(assert (= (and b!141188 (not c!26559)) b!141191))

(assert (= (or b!141189 b!141191) bm!15661))

(assert (=> b!141188 m!167523))

(assert (=> b!141188 m!167523))

(assert (=> b!141188 m!167525))

(declare-fun m!168879 () Bool)

(assert (=> bm!15661 m!168879))

(assert (=> b!140227 d!44209))

(assert (=> b!140335 d!43585))

(declare-fun b!141195 () Bool)

(declare-fun e!92009 () Option!180)

(assert (=> b!141195 (= e!92009 None!178)))

(declare-fun b!141193 () Bool)

(declare-fun e!92008 () Option!180)

(assert (=> b!141193 (= e!92008 e!92009)))

(declare-fun c!26561 () Bool)

(assert (=> b!141193 (= c!26561 (and ((_ is Cons!1735) (toList!871 lt!73157)) (not (= (_1!1339 (h!2342 (toList!871 lt!73157))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!141192 () Bool)

(assert (=> b!141192 (= e!92008 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73157)))))))

(declare-fun d!44211 () Bool)

(declare-fun c!26560 () Bool)

(assert (=> d!44211 (= c!26560 (and ((_ is Cons!1735) (toList!871 lt!73157)) (= (_1!1339 (h!2342 (toList!871 lt!73157))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44211 (= (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92008)))

(declare-fun b!141194 () Bool)

(assert (=> b!141194 (= e!92009 (getValueByKey!174 (t!6314 (toList!871 lt!73157)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44211 c!26560) b!141192))

(assert (= (and d!44211 (not c!26560)) b!141193))

(assert (= (and b!141193 c!26561) b!141194))

(assert (= (and b!141193 (not c!26561)) b!141195))

(declare-fun m!168881 () Bool)

(assert (=> b!141194 m!168881))

(assert (=> b!140041 d!44211))

(declare-fun b!141196 () Bool)

(declare-fun e!92011 () Bool)

(assert (=> b!141196 (= e!92011 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4847 () Bool)

(declare-fun mapRes!4847 () Bool)

(declare-fun tp!11579 () Bool)

(assert (=> mapNonEmpty!4847 (= mapRes!4847 (and tp!11579 e!92011))))

(declare-fun mapValue!4847 () ValueCell!1121)

(declare-fun mapRest!4847 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4847 () (_ BitVec 32))

(assert (=> mapNonEmpty!4847 (= mapRest!4846 (store mapRest!4847 mapKey!4847 mapValue!4847))))

(declare-fun b!141197 () Bool)

(declare-fun e!92010 () Bool)

(assert (=> b!141197 (= e!92010 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4847 () Bool)

(assert (=> mapIsEmpty!4847 mapRes!4847))

(declare-fun condMapEmpty!4847 () Bool)

(declare-fun mapDefault!4847 () ValueCell!1121)

(assert (=> mapNonEmpty!4846 (= condMapEmpty!4847 (= mapRest!4846 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4847)))))

(assert (=> mapNonEmpty!4846 (= tp!11578 (and e!92010 mapRes!4847))))

(assert (= (and mapNonEmpty!4846 condMapEmpty!4847) mapIsEmpty!4847))

(assert (= (and mapNonEmpty!4846 (not condMapEmpty!4847)) mapNonEmpty!4847))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1121) mapValue!4847)) b!141196))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1121) mapDefault!4847)) b!141197))

(declare-fun m!168883 () Bool)

(assert (=> mapNonEmpty!4847 m!168883))

(declare-fun b!141198 () Bool)

(declare-fun e!92013 () Bool)

(assert (=> b!141198 (= e!92013 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4848 () Bool)

(declare-fun mapRes!4848 () Bool)

(declare-fun tp!11580 () Bool)

(assert (=> mapNonEmpty!4848 (= mapRes!4848 (and tp!11580 e!92013))))

(declare-fun mapRest!4848 () (Array (_ BitVec 32) ValueCell!1121))

(declare-fun mapKey!4848 () (_ BitVec 32))

(declare-fun mapValue!4848 () ValueCell!1121)

(assert (=> mapNonEmpty!4848 (= mapRest!4845 (store mapRest!4848 mapKey!4848 mapValue!4848))))

(declare-fun b!141199 () Bool)

(declare-fun e!92012 () Bool)

(assert (=> b!141199 (= e!92012 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4848 () Bool)

(assert (=> mapIsEmpty!4848 mapRes!4848))

(declare-fun condMapEmpty!4848 () Bool)

(declare-fun mapDefault!4848 () ValueCell!1121)

(assert (=> mapNonEmpty!4845 (= condMapEmpty!4848 (= mapRest!4845 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4848)))))

(assert (=> mapNonEmpty!4845 (= tp!11577 (and e!92012 mapRes!4848))))

(assert (= (and mapNonEmpty!4845 condMapEmpty!4848) mapIsEmpty!4848))

(assert (= (and mapNonEmpty!4845 (not condMapEmpty!4848)) mapNonEmpty!4848))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1121) mapValue!4848)) b!141198))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1121) mapDefault!4848)) b!141199))

(declare-fun m!168885 () Bool)

(assert (=> mapNonEmpty!4848 m!168885))

(declare-fun b_lambda!6297 () Bool)

(assert (= b_lambda!6279 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6297)))

(declare-fun b_lambda!6299 () Bool)

(assert (= b_lambda!6291 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6299)))

(declare-fun b_lambda!6301 () Bool)

(assert (= b_lambda!6275 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6301)))

(declare-fun b_lambda!6303 () Bool)

(assert (= b_lambda!6289 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6303)))

(declare-fun b_lambda!6305 () Bool)

(assert (= b_lambda!6273 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6305)))

(declare-fun b_lambda!6307 () Bool)

(assert (= b_lambda!6269 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6307)))

(declare-fun b_lambda!6309 () Bool)

(assert (= b_lambda!6283 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6309)))

(declare-fun b_lambda!6311 () Bool)

(assert (= b_lambda!6295 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6311)))

(declare-fun b_lambda!6313 () Bool)

(assert (= b_lambda!6281 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6313)))

(declare-fun b_lambda!6315 () Bool)

(assert (= b_lambda!6293 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6315)))

(declare-fun b_lambda!6317 () Bool)

(assert (= b_lambda!6267 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6317)))

(declare-fun b_lambda!6319 () Bool)

(assert (= b_lambda!6271 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6319)))

(declare-fun b_lambda!6321 () Bool)

(assert (= b_lambda!6285 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6321)))

(declare-fun b_lambda!6323 () Bool)

(assert (= b_lambda!6287 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6323)))

(check-sat (not b!140860) (not b!140726) (not b!140642) (not b!140450) (not b!140668) (not b!140644) (not d!44203) (not d!43957) (not b!140939) (not d!43895) (not b!140356) (not d!43859) (not b!140681) (not b!140757) (not d!43815) (not b!140480) (not b!140697) (not b!140890) (not b!140859) (not b!140382) (not d!43739) (not b!140705) (not d!44059) (not b!140892) (not d!44083) (not b!140575) (not bm!15616) (not d!44127) (not b!140416) (not d!43737) (not bm!15565) (not b!140649) (not b!141121) (not b!140578) (not b!140501) (not b_lambda!6319) (not d!44181) (not b_lambda!6315) (not b!140743) (not b!141132) (not d!44103) (not bm!15626) (not b!140934) (not b!140433) (not d!43745) (not b!140762) (not b!140662) (not b!141023) (not b!140728) (not b!140937) (not b!140568) (not bm!15564) (not bm!15601) (not b!140926) (not b!140979) (not b!140948) (not b!140995) (not b!140563) (not d!44195) (not d!43997) (not d!43777) (not b!140453) (not d!43751) (not d!43727) (not b!140615) (not b!140752) (not d!43991) (not b!140523) (not d!43765) (not d!43887) (not bm!15593) (not b!140823) (not b!140946) (not b!140853) (not b!140583) (not b_lambda!6305) (not b!140694) (not d!43785) (not b!141064) (not b!140581) (not b!140430) (not b!140601) (not b!141073) (not b!140468) (not b!140494) (not b!140558) (not b!140810) (not d!43857) (not b!140918) (not d!43731) (not b!140521) (not d!43885) (not b!140831) (not b!140835) (not b!140488) (not b_lambda!6307) (not b!140511) (not bm!15605) (not d!43979) (not d!43707) (not d!44071) (not b!140473) (not b!140990) (not b!140755) (not b!140816) (not b!140559) (not d!44107) (not b_lambda!6311) (not b!140679) (not d!43927) (not d!43767) (not b!140730) (not b!140658) (not b!140837) (not d!43851) (not b!140820) (not d!44179) (not d!43935) (not bm!15592) (not bm!15636) (not b!140971) (not b!141120) (not b!140571) (not d!44003) (not b_lambda!6263) (not d!43839) (not b!140764) (not d!43925) (not d!43869) (not d!44171) (not b!140440) (not b!140423) (not b!140513) (not b!141034) b_and!8799 (not bm!15587) (not d!43977) (not mapNonEmpty!4847) (not b!140514) (not b_lambda!6241) (not b!141100) (not bm!15641) (not bm!15660) (not b_next!3027) (not b!140849) (not d!43973) (not d!43939) (not bm!15572) (not bm!15648) (not d!44147) (not b!141128) (not d!43715) (not b!140841) (not bm!15647) (not d!44151) (not b!140973) (not b!140604) (not b!140396) (not b!140727) (not b!141080) (not b!140602) (not b!140504) (not b!140456) (not b!140528) (not b!140897) (not b!141069) (not d!44167) (not bm!15608) (not b!140599) (not b!140616) (not b!140508) (not b_lambda!6277) (not d!44095) (not d!43799) (not d!43837) (not b!140672) (not d!43809) (not d!44207) (not b!141165) (not b!140384) (not b!141016) (not b!140693) (not d!44023) (not b!140840) (not d!44011) (not b_lambda!6309) (not bm!15575) (not b!140844) (not b!140355) (not b!141185) (not b!140701) (not b!140443) (not b!141188) (not b!141105) (not bm!15591) (not b!140595) (not b!140868) (not b!140477) (not b!140462) (not bm!15646) (not d!43871) (not b!141006) (not d!44099) (not bm!15620) (not b_lambda!6301) (not d!43807) (not b!141011) (not d!44049) (not b_lambda!6317) (not b!141177) (not d!44111) (not d!44089) (not b!140534) (not b!140969) (not b!140472) (not b!140915) (not b!141187) (not d!44039) (not b!141098) (not b!141029) (not b!140520) (not b!140625) (not b!140466) (not d!43847) (not bm!15645) (not d!43823) (not b!141174) (not bm!15650) (not d!43763) (not d!43711) (not b!141129) (not b!140834) (not bm!15614) (not d!43999) (not b_lambda!6323) (not b!140425) (not b!141109) (not b!140718) (not b!140438) (not b!140748) (not d!44131) (not b_lambda!6257) (not b!140913) (not d!43959) (not b!140882) (not b!140650) (not b!140484) (not b!140732) (not d!43941) (not b!140986) (not d!44035) b_and!8797 (not b!140361) (not d!43867) (not d!44081) (not b!140510) (not b!141057) (not d!43861) (not b!140893) (not b_lambda!6299) (not b!140479) (not b!141019) (not b!140904) (not d!43733) (not b!140626) (not d!44079) (not d!44085) (not b!141037) (not b!140454) (not b!140980) (not b!140957) (not b!140819) (not d!43753) (not b!140610) (not b!140711) (not d!43901) (not d!44093) (not d!43981) (not b!140700) (not b!140596) (not bm!15654) (not b!140891) (not d!44187) (not b!140689) (not d!44015) (not b!140441) (not d!43811) (not b!141123) (not b!140961) (not d!44047) (not d!43849) (not b!140815) (not b!140833) (not b!140393) (not bm!15560) (not d!43945) (not b!140722) (not b!140427) (not d!44069) (not d!43835) (not bm!15633) (not b!140432) (not b!140888) (not d!44161) (not d!44077) (not b!140358) (not b!140863) (not b!141118) (not b!140805) (not b!140838) (not b!141084) (not d!44191) (not b!140744) (not b!140974) (not b!140664) (not bm!15619) (not d!43749) (not b!140987) (not d!44141) (not b!140997) (not d!43845) (not bm!15602) (not b_next!3025) (not b!140843) (not b!140442) (not b!140972) (not d!43919) (not b!141040) (not d!43971) (not b!140777) (not b!140535) (not b!140698) (not b!140631) (not b_lambda!6245) (not b!140808) (not bm!15599) (not b!141126) (not d!43829) (not d!44159) (not bm!15655) (not d!44051) (not b!141076) (not d!44125) (not b!140885) (not b!140522) (not b!141075) (not d!43897) (not b!140994) (not b!140647) (not b!141115) (not b!141183) (not b!140822) (not b!140976) (not b_lambda!6321) (not d!44033) (not b!140842) (not d!43889) (not bm!15588) (not bm!15595) (not b!140878) (not d!43717) (not b!140492) (not b!140435) (not bm!15644) (not d!44143) (not b!141117) (not bm!15613) (not b!140364) (not b!140515) (not b!140709) (not b!140639) (not b!140618) (not d!43865) (not bm!15574) (not b!140410) (not bm!15563) (not b!140624) (not b!140725) (not d!43819) (not b!141113) (not b!141137) (not b!140408) (not b!140674) (not bm!15582) (not b_lambda!6313) (not bm!15598) (not b!141140) (not d!43953) (not bm!15585) (not b!140401) (not b!140613) (not d!44155) (not b!140600) (not b!140719) (not b!140941) (not bm!15653) (not b!140724) (not d!44061) (not d!44091) (not b!140525) (not b!140759) (not b!140385) (not b_lambda!6303) (not d!43955) (not d!44013) (not b!140463) (not d!43891) (not b!140806) (not b!141003) (not b!140357) (not b!140431) (not d!43863) (not b!140465) (not b!140737) (not d!44065) (not bm!15628) (not d!44201) (not d!43757) (not b!140579) (not b!140452) (not b!140977) (not b!141086) (not b!140929) (not b!140953) (not d!43855) (not b!140920) (not b!141145) (not d!44007) (not d!44165) (not b!140930) (not b!140865) (not d!43983) (not b!140498) tp_is_empty!2929 (not b!140740) (not d!43759) (not b!140905) (not d!43735) (not b!140476) (not d!44105) (not b!140686) (not b!140405) (not d!44139) (not b!141022) (not d!44073) (not d!44005) (not b!140429) (not b!141194) (not d!44121) (not b!140638) (not b!140594) (not b!141133) (not b!140776) (not b!140874) (not b!140871) (not d!44045) (not bm!15639) (not b!140680) (not b!140856) (not b!141025) (not b!140683) (not d!43929) (not b!140577) (not b!140444) (not d!44153) (not b!140360) (not b!140768) (not d!43985) (not b!141049) (not b!140687) (not b!140611) (not b!140654) (not b!140807) (not bm!15627) (not b!140641) (not b!140592) (not d!43841) (not d!43721) (not b!141021) (not d!43995) (not mapNonEmpty!4848) (not b!140952) (not b!140779) (not b!140451) (not b!141107) (not b!141041) (not b!141045) (not d!43761) (not b!140505) (not b!140629) (not b!140588) (not b_lambda!6297) (not b!140621) (not d!43743) (not bm!15586) (not b!141038) (not b!140965) (not b!140585) (not b!140437) (not bm!15567) (not b!140992) (not b!140512) (not b!141058) (not b!140566) (not b!140917) (not d!44053) (not d!44087) (not b!140589) (not b!140397) (not b!140449) (not d!43705) (not d!43967) (not b!140862) (not d!44119) (not b!141002) (not d!43747) (not d!43801) (not b!140455) (not b!140461) (not d!44021) (not d!44009) (not b!140637) (not d!43755) (not b!140603) (not b!140877) (not b!140661) (not d!44175) (not d!43773) (not d!43909) (not b!141072) (not bm!15621) (not b!140943) (not b!140949) (not b!140884) (not b!140390) (not b_lambda!6265) (not b!140902) (not d!43723) (not b!141007) (not bm!15600) (not b!140612) (not d!43931) (not b!140635) (not d!43923) (not d!44025) (not d!44173) (not b!140984) (not d!43741) (not b!140734) (not bm!15656) (not b!140598) (not b!141111) (not d!43873) (not d!43775) (not b!140609) (not b!140678) (not b!141097) (not d!44101) (not d!43805) (not b!141068) (not b!140975) (not d!43993) (not b!140901) (not d!43713) (not d!43875) (not b!140898) (not d!43989) (not b!140496) (not bm!15632) (not b!140633) (not b!140389) (not b_lambda!6261) (not b!140407) (not b!141000) (not d!43881) (not b!140714) (not d!43903) (not b!140422) (not bm!15657) (not d!43769) (not b!140436) (not b!140394) (not bm!15661) (not d!43853) (not b!140716) (not d!43703) (not d!43949) (not b!140851) (not b!140739) (not d!43817) (not b!141033) (not b!140873) (not bm!15629) (not d!43843) (not d!44055) (not b!140909) (not bm!15566) (not bm!15569) (not b!140769) (not bm!15573) (not bm!15623) (not b!140591) (not d!44097) (not b!141051) (not b!140653) (not d!43701) (not b!140773) (not b!140923) (not b!141088) (not b!140925) (not b!140765) (not b_lambda!6259) (not d!43793) (not b!140827))
(check-sat b_and!8797 b_and!8799 (not b_next!3025) (not b_next!3027))
(get-model)

(declare-fun d!44213 () Bool)

(declare-fun e!92015 () Bool)

(assert (=> d!44213 e!92015))

(declare-fun res!67375 () Bool)

(assert (=> d!44213 (=> res!67375 e!92015)))

(declare-fun lt!73949 () Bool)

(assert (=> d!44213 (= res!67375 (not lt!73949))))

(declare-fun lt!73948 () Bool)

(assert (=> d!44213 (= lt!73949 lt!73948)))

(declare-fun lt!73947 () Unit!4393)

(declare-fun e!92014 () Unit!4393)

(assert (=> d!44213 (= lt!73947 e!92014)))

(declare-fun c!26562 () Bool)

(assert (=> d!44213 (= c!26562 lt!73948)))

(assert (=> d!44213 (= lt!73948 (containsKey!178 (toList!871 lt!73645) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44213 (= (contains!910 lt!73645 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73949)))

(declare-fun b!141200 () Bool)

(declare-fun lt!73946 () Unit!4393)

(assert (=> b!141200 (= e!92014 lt!73946)))

(assert (=> b!141200 (= lt!73946 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73645) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141200 (isDefined!128 (getValueByKey!174 (toList!871 lt!73645) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141201 () Bool)

(declare-fun Unit!4453 () Unit!4393)

(assert (=> b!141201 (= e!92014 Unit!4453)))

(declare-fun b!141202 () Bool)

(assert (=> b!141202 (= e!92015 (isDefined!128 (getValueByKey!174 (toList!871 lt!73645) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44213 c!26562) b!141200))

(assert (= (and d!44213 (not c!26562)) b!141201))

(assert (= (and d!44213 (not res!67375)) b!141202))

(declare-fun m!168887 () Bool)

(assert (=> d!44213 m!168887))

(declare-fun m!168889 () Bool)

(assert (=> b!141200 m!168889))

(declare-fun m!168891 () Bool)

(assert (=> b!141200 m!168891))

(assert (=> b!141200 m!168891))

(declare-fun m!168893 () Bool)

(assert (=> b!141200 m!168893))

(assert (=> b!141202 m!168891))

(assert (=> b!141202 m!168891))

(assert (=> b!141202 m!168893))

(assert (=> bm!15598 d!44213))

(declare-fun d!44215 () Bool)

(assert (=> d!44215 (= (apply!120 lt!73850 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73850) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5892 () Bool)

(assert (= bs!5892 d!44215))

(declare-fun m!168895 () Bool)

(assert (=> bs!5892 m!168895))

(assert (=> bs!5892 m!168895))

(declare-fun m!168897 () Bool)

(assert (=> bs!5892 m!168897))

(assert (=> b!141033 d!44215))

(declare-fun d!44217 () Bool)

(assert (=> d!44217 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140473 d!44217))

(assert (=> d!43929 d!43931))

(assert (=> d!43929 d!43933))

(declare-fun d!44219 () Bool)

(assert (=> d!44219 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44219 true))

(declare-fun _$12!413 () Unit!4393)

(assert (=> d!44219 (= (choose!871 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!413)))

(declare-fun bs!5893 () Bool)

(assert (= bs!5893 d!44219))

(assert (=> bs!5893 m!166941))

(assert (=> bs!5893 m!166941))

(assert (=> bs!5893 m!166995))

(assert (=> d!43929 d!44219))

(declare-fun d!44221 () Bool)

(declare-fun res!67376 () Bool)

(declare-fun e!92016 () Bool)

(assert (=> d!44221 (=> res!67376 e!92016)))

(assert (=> d!44221 (= res!67376 (or ((_ is Nil!1736) (toList!871 lt!73003)) ((_ is Nil!1736) (t!6314 (toList!871 lt!73003)))))))

(assert (=> d!44221 (= (isStrictlySorted!320 (toList!871 lt!73003)) e!92016)))

(declare-fun b!141203 () Bool)

(declare-fun e!92017 () Bool)

(assert (=> b!141203 (= e!92016 e!92017)))

(declare-fun res!67377 () Bool)

(assert (=> b!141203 (=> (not res!67377) (not e!92017))))

(assert (=> b!141203 (= res!67377 (bvslt (_1!1339 (h!2342 (toList!871 lt!73003))) (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003))))))))

(declare-fun b!141204 () Bool)

(assert (=> b!141204 (= e!92017 (isStrictlySorted!320 (t!6314 (toList!871 lt!73003))))))

(assert (= (and d!44221 (not res!67376)) b!141203))

(assert (= (and b!141203 res!67377) b!141204))

(declare-fun m!168899 () Bool)

(assert (=> b!141204 m!168899))

(assert (=> d!43929 d!44221))

(assert (=> d!44187 d!43719))

(declare-fun d!44223 () Bool)

(declare-fun lt!73950 () Bool)

(assert (=> d!44223 (= lt!73950 (select (content!138 (toList!871 lt!73462)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92019 () Bool)

(assert (=> d!44223 (= lt!73950 e!92019)))

(declare-fun res!67378 () Bool)

(assert (=> d!44223 (=> (not res!67378) (not e!92019))))

(assert (=> d!44223 (= res!67378 ((_ is Cons!1735) (toList!871 lt!73462)))))

(assert (=> d!44223 (= (contains!914 (toList!871 lt!73462) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73950)))

(declare-fun b!141205 () Bool)

(declare-fun e!92018 () Bool)

(assert (=> b!141205 (= e!92019 e!92018)))

(declare-fun res!67379 () Bool)

(assert (=> b!141205 (=> res!67379 e!92018)))

(assert (=> b!141205 (= res!67379 (= (h!2342 (toList!871 lt!73462)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141206 () Bool)

(assert (=> b!141206 (= e!92018 (contains!914 (t!6314 (toList!871 lt!73462)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44223 res!67378) b!141205))

(assert (= (and b!141205 (not res!67379)) b!141206))

(declare-fun m!168901 () Bool)

(assert (=> d!44223 m!168901))

(declare-fun m!168903 () Bool)

(assert (=> d!44223 m!168903))

(declare-fun m!168905 () Bool)

(assert (=> b!141206 m!168905))

(assert (=> b!140408 d!44223))

(assert (=> d!43887 d!43683))

(assert (=> d!43887 d!43681))

(assert (=> d!44107 d!44095))

(assert (=> d!44107 d!44097))

(declare-fun d!44225 () Bool)

(declare-fun e!92021 () Bool)

(assert (=> d!44225 e!92021))

(declare-fun res!67380 () Bool)

(assert (=> d!44225 (=> res!67380 e!92021)))

(declare-fun lt!73954 () Bool)

(assert (=> d!44225 (= res!67380 (not lt!73954))))

(declare-fun lt!73953 () Bool)

(assert (=> d!44225 (= lt!73954 lt!73953)))

(declare-fun lt!73952 () Unit!4393)

(declare-fun e!92020 () Unit!4393)

(assert (=> d!44225 (= lt!73952 e!92020)))

(declare-fun c!26563 () Bool)

(assert (=> d!44225 (= c!26563 lt!73953)))

(assert (=> d!44225 (= lt!73953 (containsKey!178 (toList!871 lt!73126) lt!73145))))

(assert (=> d!44225 (= (contains!910 lt!73126 lt!73145) lt!73954)))

(declare-fun b!141207 () Bool)

(declare-fun lt!73951 () Unit!4393)

(assert (=> b!141207 (= e!92020 lt!73951)))

(assert (=> b!141207 (= lt!73951 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73126) lt!73145))))

(assert (=> b!141207 (isDefined!128 (getValueByKey!174 (toList!871 lt!73126) lt!73145))))

(declare-fun b!141208 () Bool)

(declare-fun Unit!4454 () Unit!4393)

(assert (=> b!141208 (= e!92020 Unit!4454)))

(declare-fun b!141209 () Bool)

(assert (=> b!141209 (= e!92021 (isDefined!128 (getValueByKey!174 (toList!871 lt!73126) lt!73145)))))

(assert (= (and d!44225 c!26563) b!141207))

(assert (= (and d!44225 (not c!26563)) b!141208))

(assert (= (and d!44225 (not res!67380)) b!141209))

(declare-fun m!168907 () Bool)

(assert (=> d!44225 m!168907))

(declare-fun m!168909 () Bool)

(assert (=> b!141207 m!168909))

(assert (=> b!141207 m!168517))

(assert (=> b!141207 m!168517))

(declare-fun m!168911 () Bool)

(assert (=> b!141207 m!168911))

(assert (=> b!141209 m!168517))

(assert (=> b!141209 m!168517))

(assert (=> b!141209 m!168911))

(assert (=> d!44107 d!44225))

(declare-fun d!44227 () Bool)

(assert (=> d!44227 (= (apply!120 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73145) (apply!120 lt!73126 lt!73145))))

(assert (=> d!44227 true))

(declare-fun _$34!1008 () Unit!4393)

(assert (=> d!44227 (= (choose!869 lt!73126 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73145) _$34!1008)))

(declare-fun bs!5894 () Bool)

(assert (= bs!5894 d!44227))

(assert (=> bs!5894 m!166743))

(assert (=> bs!5894 m!166743))

(assert (=> bs!5894 m!166745))

(assert (=> bs!5894 m!166749))

(assert (=> d!44107 d!44227))

(assert (=> d!44107 d!44091))

(declare-fun b!141211 () Bool)

(declare-fun e!92023 () Bool)

(declare-fun call!15665 () Bool)

(assert (=> b!141211 (= e!92023 call!15665)))

(declare-fun b!141212 () Bool)

(declare-fun e!92024 () Bool)

(assert (=> b!141212 (= e!92024 e!92023)))

(declare-fun c!26564 () Bool)

(assert (=> b!141212 (= c!26564 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun b!141213 () Bool)

(declare-fun e!92022 () Bool)

(assert (=> b!141213 (= e!92022 call!15665)))

(declare-fun bm!15662 () Bool)

(assert (=> bm!15662 (= call!15665 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342))))))

(declare-fun b!141210 () Bool)

(assert (=> b!141210 (= e!92023 e!92022)))

(declare-fun lt!73956 () (_ BitVec 64))

(assert (=> b!141210 (= lt!73956 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000))))

(declare-fun lt!73955 () Unit!4393)

(assert (=> b!141210 (= lt!73955 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (_2!1340 lt!73342)) lt!73956 #b00000000000000000000000000000000))))

(assert (=> b!141210 (arrayContainsKey!0 (_keys!4697 (_2!1340 lt!73342)) lt!73956 #b00000000000000000000000000000000)))

(declare-fun lt!73957 () Unit!4393)

(assert (=> b!141210 (= lt!73957 lt!73955)))

(declare-fun res!67382 () Bool)

(assert (=> b!141210 (= res!67382 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000) (_keys!4697 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342))) (Found!282 #b00000000000000000000000000000000)))))

(assert (=> b!141210 (=> (not res!67382) (not e!92022))))

(declare-fun d!44229 () Bool)

(declare-fun res!67381 () Bool)

(assert (=> d!44229 (=> res!67381 e!92024)))

(assert (=> d!44229 (= res!67381 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(assert (=> d!44229 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4697 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342))) e!92024)))

(assert (= (and d!44229 (not res!67381)) b!141212))

(assert (= (and b!141212 c!26564) b!141210))

(assert (= (and b!141212 (not c!26564)) b!141211))

(assert (= (and b!141210 res!67382) b!141213))

(assert (= (or b!141213 b!141211) bm!15662))

(declare-fun m!168913 () Bool)

(assert (=> b!141212 m!168913))

(assert (=> b!141212 m!168913))

(declare-fun m!168915 () Bool)

(assert (=> b!141212 m!168915))

(declare-fun m!168917 () Bool)

(assert (=> bm!15662 m!168917))

(assert (=> b!141210 m!168913))

(declare-fun m!168919 () Bool)

(assert (=> b!141210 m!168919))

(declare-fun m!168921 () Bool)

(assert (=> b!141210 m!168921))

(assert (=> b!141210 m!168913))

(declare-fun m!168923 () Bool)

(assert (=> b!141210 m!168923))

(assert (=> b!140725 d!44229))

(declare-fun lt!73958 () Bool)

(declare-fun d!44231 () Bool)

(assert (=> d!44231 (= lt!73958 (select (content!138 lt!73280) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92026 () Bool)

(assert (=> d!44231 (= lt!73958 e!92026)))

(declare-fun res!67383 () Bool)

(assert (=> d!44231 (=> (not res!67383) (not e!92026))))

(assert (=> d!44231 (= res!67383 ((_ is Cons!1735) lt!73280))))

(assert (=> d!44231 (= (contains!914 lt!73280 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73958)))

(declare-fun b!141214 () Bool)

(declare-fun e!92025 () Bool)

(assert (=> b!141214 (= e!92026 e!92025)))

(declare-fun res!67384 () Bool)

(assert (=> b!141214 (=> res!67384 e!92025)))

(assert (=> b!141214 (= res!67384 (= (h!2342 lt!73280) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141215 () Bool)

(assert (=> b!141215 (= e!92025 (contains!914 (t!6314 lt!73280) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44231 res!67383) b!141214))

(assert (= (and b!141214 (not res!67384)) b!141215))

(declare-fun m!168925 () Bool)

(assert (=> d!44231 m!168925))

(declare-fun m!168927 () Bool)

(assert (=> d!44231 m!168927))

(declare-fun m!168929 () Bool)

(assert (=> b!141215 m!168929))

(assert (=> b!140926 d!44231))

(assert (=> d!43751 d!43755))

(assert (=> d!43751 d!43743))

(declare-fun d!44233 () Bool)

(declare-fun e!92028 () Bool)

(assert (=> d!44233 e!92028))

(declare-fun res!67385 () Bool)

(assert (=> d!44233 (=> res!67385 e!92028)))

(declare-fun lt!73962 () Bool)

(assert (=> d!44233 (= res!67385 (not lt!73962))))

(declare-fun lt!73961 () Bool)

(assert (=> d!44233 (= lt!73962 lt!73961)))

(declare-fun lt!73960 () Unit!4393)

(declare-fun e!92027 () Unit!4393)

(assert (=> d!44233 (= lt!73960 e!92027)))

(declare-fun c!26565 () Bool)

(assert (=> d!44233 (= c!26565 lt!73961)))

(assert (=> d!44233 (= lt!73961 (containsKey!178 (toList!871 lt!73170) lt!73189))))

(assert (=> d!44233 (= (contains!910 lt!73170 lt!73189) lt!73962)))

(declare-fun b!141216 () Bool)

(declare-fun lt!73959 () Unit!4393)

(assert (=> b!141216 (= e!92027 lt!73959)))

(assert (=> b!141216 (= lt!73959 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73170) lt!73189))))

(assert (=> b!141216 (isDefined!128 (getValueByKey!174 (toList!871 lt!73170) lt!73189))))

(declare-fun b!141217 () Bool)

(declare-fun Unit!4455 () Unit!4393)

(assert (=> b!141217 (= e!92027 Unit!4455)))

(declare-fun b!141218 () Bool)

(assert (=> b!141218 (= e!92028 (isDefined!128 (getValueByKey!174 (toList!871 lt!73170) lt!73189)))))

(assert (= (and d!44233 c!26565) b!141216))

(assert (= (and d!44233 (not c!26565)) b!141217))

(assert (= (and d!44233 (not res!67385)) b!141218))

(declare-fun m!168931 () Bool)

(assert (=> d!44233 m!168931))

(declare-fun m!168933 () Bool)

(assert (=> b!141216 m!168933))

(assert (=> b!141216 m!167387))

(assert (=> b!141216 m!167387))

(declare-fun m!168935 () Bool)

(assert (=> b!141216 m!168935))

(assert (=> b!141218 m!167387))

(assert (=> b!141218 m!167387))

(assert (=> b!141218 m!168935))

(assert (=> d!43751 d!44233))

(assert (=> d!43751 d!43747))

(declare-fun d!44235 () Bool)

(assert (=> d!44235 (= (apply!120 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) lt!73189) (apply!120 lt!73170 lt!73189))))

(assert (=> d!44235 true))

(declare-fun _$34!1009 () Unit!4393)

(assert (=> d!44235 (= (choose!869 lt!73170 lt!73179 (zeroValue!2789 newMap!16) lt!73189) _$34!1009)))

(declare-fun bs!5895 () Bool)

(assert (= bs!5895 d!44235))

(assert (=> bs!5895 m!166833))

(assert (=> bs!5895 m!166833))

(assert (=> bs!5895 m!166835))

(assert (=> bs!5895 m!166839))

(assert (=> d!43751 d!44235))

(declare-fun d!44237 () Bool)

(declare-fun res!67386 () Bool)

(declare-fun e!92029 () Bool)

(assert (=> d!44237 (=> res!67386 e!92029)))

(assert (=> d!44237 (= res!67386 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44237 (= (containsKey!178 (t!6314 (toList!871 lt!73003)) #b1000000000000000000000000000000000000000000000000000000000000000) e!92029)))

(declare-fun b!141219 () Bool)

(declare-fun e!92030 () Bool)

(assert (=> b!141219 (= e!92029 e!92030)))

(declare-fun res!67387 () Bool)

(assert (=> b!141219 (=> (not res!67387) (not e!92030))))

(assert (=> b!141219 (= res!67387 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 lt!73003)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141220 () Bool)

(assert (=> b!141220 (= e!92030 (containsKey!178 (t!6314 (t!6314 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44237 (not res!67386)) b!141219))

(assert (= (and b!141219 res!67387) b!141220))

(declare-fun m!168937 () Bool)

(assert (=> b!141220 m!168937))

(assert (=> b!140355 d!44237))

(declare-fun b!141222 () Bool)

(declare-fun e!92032 () Bool)

(declare-fun call!15666 () Bool)

(assert (=> b!141222 (= e!92032 call!15666)))

(declare-fun b!141223 () Bool)

(declare-fun e!92033 () Bool)

(assert (=> b!141223 (= e!92033 e!92032)))

(declare-fun c!26566 () Bool)

(assert (=> b!141223 (= c!26566 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141224 () Bool)

(declare-fun e!92031 () Bool)

(assert (=> b!141224 (= e!92031 call!15666)))

(declare-fun bm!15663 () Bool)

(assert (=> bm!15663 (= call!15666 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!141221 () Bool)

(assert (=> b!141221 (= e!92032 e!92031)))

(declare-fun lt!73964 () (_ BitVec 64))

(assert (=> b!141221 (= lt!73964 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!73963 () Unit!4393)

(assert (=> b!141221 (= lt!73963 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 newMap!16) lt!73964 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!141221 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73964 #b00000000000000000000000000000000)))

(declare-fun lt!73965 () Unit!4393)

(assert (=> b!141221 (= lt!73965 lt!73963)))

(declare-fun res!67389 () Bool)

(assert (=> b!141221 (= res!67389 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4697 newMap!16) (mask!7278 newMap!16)) (Found!282 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!141221 (=> (not res!67389) (not e!92031))))

(declare-fun d!44239 () Bool)

(declare-fun res!67388 () Bool)

(assert (=> d!44239 (=> res!67388 e!92033)))

(assert (=> d!44239 (= res!67388 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44239 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4697 newMap!16) (mask!7278 newMap!16)) e!92033)))

(assert (= (and d!44239 (not res!67388)) b!141223))

(assert (= (and b!141223 c!26566) b!141221))

(assert (= (and b!141223 (not c!26566)) b!141222))

(assert (= (and b!141221 res!67389) b!141224))

(assert (= (or b!141224 b!141222) bm!15663))

(declare-fun m!168939 () Bool)

(assert (=> b!141223 m!168939))

(assert (=> b!141223 m!168939))

(declare-fun m!168941 () Bool)

(assert (=> b!141223 m!168941))

(declare-fun m!168943 () Bool)

(assert (=> bm!15663 m!168943))

(assert (=> b!141221 m!168939))

(declare-fun m!168945 () Bool)

(assert (=> b!141221 m!168945))

(declare-fun m!168947 () Bool)

(assert (=> b!141221 m!168947))

(assert (=> b!141221 m!168939))

(declare-fun m!168949 () Bool)

(assert (=> b!141221 m!168949))

(assert (=> bm!15632 d!44239))

(declare-fun d!44241 () Bool)

(assert (=> d!44241 (= (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141058 d!44241))

(declare-fun d!44243 () Bool)

(assert (=> d!44243 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73137)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73137)))))

(assert (=> d!44093 d!44243))

(declare-fun b!141228 () Bool)

(declare-fun e!92035 () Option!180)

(assert (=> b!141228 (= e!92035 None!178)))

(declare-fun b!141226 () Bool)

(declare-fun e!92034 () Option!180)

(assert (=> b!141226 (= e!92034 e!92035)))

(declare-fun c!26568 () Bool)

(assert (=> b!141226 (= c!26568 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73137))))))

(declare-fun b!141225 () Bool)

(assert (=> b!141225 (= e!92034 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun d!44245 () Bool)

(declare-fun c!26567 () Bool)

(assert (=> d!44245 (= c!26567 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73137)))))

(assert (=> d!44245 (= (getValueByKey!174 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73137) e!92034)))

(declare-fun b!141227 () Bool)

(assert (=> b!141227 (= e!92035 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!73137))))

(assert (= (and d!44245 c!26567) b!141225))

(assert (= (and d!44245 (not c!26567)) b!141226))

(assert (= (and b!141226 c!26568) b!141227))

(assert (= (and b!141226 (not c!26568)) b!141228))

(declare-fun m!168951 () Bool)

(assert (=> b!141227 m!168951))

(assert (=> d!44093 d!44245))

(declare-fun d!44247 () Bool)

(declare-fun res!67390 () Bool)

(declare-fun e!92036 () Bool)

(assert (=> d!44247 (=> res!67390 e!92036)))

(assert (=> d!44247 (= res!67390 (and ((_ is Cons!1735) lt!73402) (= (_1!1339 (h!2342 lt!73402)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44247 (= (containsKey!178 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92036)))

(declare-fun b!141229 () Bool)

(declare-fun e!92037 () Bool)

(assert (=> b!141229 (= e!92036 e!92037)))

(declare-fun res!67391 () Bool)

(assert (=> b!141229 (=> (not res!67391) (not e!92037))))

(assert (=> b!141229 (= res!67391 (and (or (not ((_ is Cons!1735) lt!73402)) (bvsle (_1!1339 (h!2342 lt!73402)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73402) (bvslt (_1!1339 (h!2342 lt!73402)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141230 () Bool)

(assert (=> b!141230 (= e!92037 (containsKey!178 (t!6314 lt!73402) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44247 (not res!67390)) b!141229))

(assert (= (and b!141229 res!67391) b!141230))

(declare-fun m!168953 () Bool)

(assert (=> b!141230 m!168953))

(assert (=> b!140534 d!44247))

(declare-fun d!44249 () Bool)

(assert (=> d!44249 (= (isEmpty!422 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021)) (not ((_ is Some!179) (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))))

(assert (=> d!43777 d!44249))

(declare-fun d!44251 () Bool)

(declare-fun res!67392 () Bool)

(declare-fun e!92038 () Bool)

(assert (=> d!44251 (=> res!67392 e!92038)))

(assert (=> d!44251 (= res!67392 (and ((_ is Cons!1735) (toList!871 lt!73172)) (= (_1!1339 (h!2342 (toList!871 lt!73172))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44251 (= (containsKey!178 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000) e!92038)))

(declare-fun b!141231 () Bool)

(declare-fun e!92039 () Bool)

(assert (=> b!141231 (= e!92038 e!92039)))

(declare-fun res!67393 () Bool)

(assert (=> b!141231 (=> (not res!67393) (not e!92039))))

(assert (=> b!141231 (= res!67393 (and (or (not ((_ is Cons!1735) (toList!871 lt!73172))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73172))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73172)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73172))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141232 () Bool)

(assert (=> b!141232 (= e!92039 (containsKey!178 (t!6314 (toList!871 lt!73172)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44251 (not res!67392)) b!141231))

(assert (= (and b!141231 res!67393) b!141232))

(declare-fun m!168955 () Bool)

(assert (=> b!141232 m!168955))

(assert (=> d!44119 d!44251))

(declare-fun lt!73966 () Bool)

(declare-fun d!44253 () Bool)

(assert (=> d!44253 (= lt!73966 (select (content!138 (toList!871 lt!73609)) (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))

(declare-fun e!92041 () Bool)

(assert (=> d!44253 (= lt!73966 e!92041)))

(declare-fun res!67394 () Bool)

(assert (=> d!44253 (=> (not res!67394) (not e!92041))))

(assert (=> d!44253 (= res!67394 ((_ is Cons!1735) (toList!871 lt!73609)))))

(assert (=> d!44253 (= (contains!914 (toList!871 lt!73609) (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) lt!73966)))

(declare-fun b!141233 () Bool)

(declare-fun e!92040 () Bool)

(assert (=> b!141233 (= e!92041 e!92040)))

(declare-fun res!67395 () Bool)

(assert (=> b!141233 (=> res!67395 e!92040)))

(assert (=> b!141233 (= res!67395 (= (h!2342 (toList!871 lt!73609)) (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))

(declare-fun b!141234 () Bool)

(assert (=> b!141234 (= e!92040 (contains!914 (t!6314 (toList!871 lt!73609)) (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44253 res!67394) b!141233))

(assert (= (and b!141233 (not res!67395)) b!141234))

(declare-fun m!168957 () Bool)

(assert (=> d!44253 m!168957))

(declare-fun m!168959 () Bool)

(assert (=> d!44253 m!168959))

(declare-fun m!168961 () Bool)

(assert (=> b!141234 m!168961))

(assert (=> b!140616 d!44253))

(declare-fun b!141235 () Bool)

(declare-fun e!92043 () SeekEntryResult!282)

(assert (=> b!141235 (= e!92043 Undefined!282)))

(declare-fun b!141236 () Bool)

(declare-fun c!26569 () Bool)

(declare-fun lt!73967 () (_ BitVec 64))

(assert (=> b!141236 (= c!26569 (= lt!73967 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92044 () SeekEntryResult!282)

(declare-fun e!92042 () SeekEntryResult!282)

(assert (=> b!141236 (= e!92044 e!92042)))

(declare-fun b!141237 () Bool)

(assert (=> b!141237 (= e!92043 e!92044)))

(declare-fun c!26571 () Bool)

(assert (=> b!141237 (= c!26571 (= lt!73967 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141238 () Bool)

(assert (=> b!141238 (= e!92044 (Found!282 (index!3293 lt!73807)))))

(declare-fun d!44255 () Bool)

(declare-fun lt!73968 () SeekEntryResult!282)

(assert (=> d!44255 (and (or ((_ is Undefined!282) lt!73968) (not ((_ is Found!282) lt!73968)) (and (bvsge (index!3292 lt!73968) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73968) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73968) ((_ is Found!282) lt!73968) (not ((_ is MissingVacant!282) lt!73968)) (not (= (index!3294 lt!73968) (index!3293 lt!73807))) (and (bvsge (index!3294 lt!73968) #b00000000000000000000000000000000) (bvslt (index!3294 lt!73968) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!73968) (ite ((_ is Found!282) lt!73968) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73968)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!282) lt!73968) (= (index!3294 lt!73968) (index!3293 lt!73807)) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!73968)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!44255 (= lt!73968 e!92043)))

(declare-fun c!26570 () Bool)

(assert (=> d!44255 (= c!26570 (bvsge (x!16138 lt!73807) #b01111111111111111111111111111110))))

(assert (=> d!44255 (= lt!73967 (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!73807)))))

(assert (=> d!44255 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44255 (= (seekKeyOrZeroReturnVacant!0 (x!16138 lt!73807) (index!3293 lt!73807) (index!3293 lt!73807) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!73968)))

(declare-fun b!141239 () Bool)

(assert (=> b!141239 (= e!92042 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16138 lt!73807) #b00000000000000000000000000000001) (nextIndex!0 (index!3293 lt!73807) (x!16138 lt!73807) (mask!7278 newMap!16)) (index!3293 lt!73807) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!141240 () Bool)

(assert (=> b!141240 (= e!92042 (MissingVacant!282 (index!3293 lt!73807)))))

(assert (= (and d!44255 c!26570) b!141235))

(assert (= (and d!44255 (not c!26570)) b!141237))

(assert (= (and b!141237 c!26571) b!141238))

(assert (= (and b!141237 (not c!26571)) b!141236))

(assert (= (and b!141236 c!26569) b!141240))

(assert (= (and b!141236 (not c!26569)) b!141239))

(declare-fun m!168963 () Bool)

(assert (=> d!44255 m!168963))

(declare-fun m!168965 () Bool)

(assert (=> d!44255 m!168965))

(assert (=> d!44255 m!168479))

(assert (=> d!44255 m!166687))

(declare-fun m!168967 () Bool)

(assert (=> b!141239 m!168967))

(assert (=> b!141239 m!168967))

(assert (=> b!141239 m!166699))

(declare-fun m!168969 () Bool)

(assert (=> b!141239 m!168969))

(assert (=> b!140965 d!44255))

(assert (=> d!43939 d!43941))

(assert (=> d!43939 d!43943))

(declare-fun d!44257 () Bool)

(assert (=> d!44257 (isDefined!128 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (=> d!44257 true))

(declare-fun _$12!414 () Unit!4393)

(assert (=> d!44257 (= (choose!871 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) _$12!414)))

(declare-fun bs!5896 () Bool)

(assert (= bs!5896 d!44257))

(assert (=> bs!5896 m!166633))

(assert (=> bs!5896 m!166681))

(assert (=> bs!5896 m!166681))

(assert (=> bs!5896 m!166683))

(assert (=> d!43939 d!44257))

(declare-fun d!44259 () Bool)

(declare-fun res!67396 () Bool)

(declare-fun e!92045 () Bool)

(assert (=> d!44259 (=> res!67396 e!92045)))

(assert (=> d!44259 (= res!67396 (or ((_ is Nil!1736) (toList!871 call!15492)) ((_ is Nil!1736) (t!6314 (toList!871 call!15492)))))))

(assert (=> d!44259 (= (isStrictlySorted!320 (toList!871 call!15492)) e!92045)))

(declare-fun b!141241 () Bool)

(declare-fun e!92046 () Bool)

(assert (=> b!141241 (= e!92045 e!92046)))

(declare-fun res!67397 () Bool)

(assert (=> b!141241 (=> (not res!67397) (not e!92046))))

(assert (=> b!141241 (= res!67397 (bvslt (_1!1339 (h!2342 (toList!871 call!15492))) (_1!1339 (h!2342 (t!6314 (toList!871 call!15492))))))))

(declare-fun b!141242 () Bool)

(assert (=> b!141242 (= e!92046 (isStrictlySorted!320 (t!6314 (toList!871 call!15492))))))

(assert (= (and d!44259 (not res!67396)) b!141241))

(assert (= (and b!141241 res!67397) b!141242))

(declare-fun m!168971 () Bool)

(assert (=> b!141242 m!168971))

(assert (=> d!43939 d!44259))

(declare-fun d!44261 () Bool)

(declare-fun res!67398 () Bool)

(declare-fun e!92047 () Bool)

(assert (=> d!44261 (=> res!67398 e!92047)))

(assert (=> d!44261 (= res!67398 (or ((_ is Nil!1736) lt!73681) ((_ is Nil!1736) (t!6314 lt!73681))))))

(assert (=> d!44261 (= (isStrictlySorted!320 lt!73681) e!92047)))

(declare-fun b!141243 () Bool)

(declare-fun e!92048 () Bool)

(assert (=> b!141243 (= e!92047 e!92048)))

(declare-fun res!67399 () Bool)

(assert (=> b!141243 (=> (not res!67399) (not e!92048))))

(assert (=> b!141243 (= res!67399 (bvslt (_1!1339 (h!2342 lt!73681)) (_1!1339 (h!2342 (t!6314 lt!73681)))))))

(declare-fun b!141244 () Bool)

(assert (=> b!141244 (= e!92048 (isStrictlySorted!320 (t!6314 lt!73681)))))

(assert (= (and d!44261 (not res!67398)) b!141243))

(assert (= (and b!141243 res!67399) b!141244))

(declare-fun m!168973 () Bool)

(assert (=> b!141244 m!168973))

(assert (=> d!43973 d!44261))

(declare-fun d!44263 () Bool)

(declare-fun res!67400 () Bool)

(declare-fun e!92049 () Bool)

(assert (=> d!44263 (=> res!67400 e!92049)))

(assert (=> d!44263 (= res!67400 (or ((_ is Nil!1736) (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) ((_ is Nil!1736) (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))))))))

(assert (=> d!44263 (= (isStrictlySorted!320 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) e!92049)))

(declare-fun b!141245 () Bool)

(declare-fun e!92050 () Bool)

(assert (=> b!141245 (= e!92049 e!92050)))

(declare-fun res!67401 () Bool)

(assert (=> b!141245 (=> (not res!67401) (not e!92050))))

(assert (=> b!141245 (= res!67401 (bvslt (_1!1339 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (_1!1339 (h!2342 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))))))))

(declare-fun b!141246 () Bool)

(assert (=> b!141246 (= e!92050 (isStrictlySorted!320 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))))))

(assert (= (and d!44263 (not res!67400)) b!141245))

(assert (= (and b!141245 res!67401) b!141246))

(declare-fun m!168975 () Bool)

(assert (=> b!141246 m!168975))

(assert (=> d!43973 d!44263))

(declare-fun d!44265 () Bool)

(assert (=> d!44265 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))

(declare-fun lt!73969 () Unit!4393)

(assert (=> d!44265 (= lt!73969 (choose!871 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))

(declare-fun e!92051 () Bool)

(assert (=> d!44265 e!92051))

(declare-fun res!67402 () Bool)

(assert (=> d!44265 (=> (not res!67402) (not e!92051))))

(assert (=> d!44265 (= res!67402 (isStrictlySorted!320 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))))))

(assert (=> d!44265 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261) lt!73969)))

(declare-fun b!141247 () Bool)

(assert (=> b!141247 (= e!92051 (containsKey!178 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))

(assert (= (and d!44265 res!67402) b!141247))

(assert (=> d!44265 m!168267))

(assert (=> d!44265 m!168267))

(assert (=> d!44265 m!168269))

(declare-fun m!168977 () Bool)

(assert (=> d!44265 m!168977))

(declare-fun m!168979 () Bool)

(assert (=> d!44265 m!168979))

(assert (=> b!141247 m!168263))

(assert (=> b!140849 d!44265))

(declare-fun d!44267 () Bool)

(assert (=> d!44267 (= (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261)) (not (isEmpty!422 (getValueByKey!174 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261))))))

(declare-fun bs!5897 () Bool)

(assert (= bs!5897 d!44267))

(assert (=> bs!5897 m!168267))

(declare-fun m!168981 () Bool)

(assert (=> bs!5897 m!168981))

(assert (=> b!140849 d!44267))

(declare-fun b!141251 () Bool)

(declare-fun e!92053 () Option!180)

(assert (=> b!141251 (= e!92053 None!178)))

(declare-fun b!141249 () Bool)

(declare-fun e!92052 () Option!180)

(assert (=> b!141249 (= e!92052 e!92053)))

(declare-fun c!26573 () Bool)

(assert (=> b!141249 (= c!26573 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))))) lt!73261))))))

(declare-fun b!141248 () Bool)

(assert (=> b!141248 (= e!92052 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))))))))

(declare-fun d!44269 () Bool)

(declare-fun c!26572 () Bool)

(assert (=> d!44269 (= c!26572 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))))) lt!73261)))))

(assert (=> d!44269 (= (getValueByKey!174 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261) e!92052)))

(declare-fun b!141250 () Bool)

(assert (=> b!141250 (= e!92053 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))) lt!73261))))

(assert (= (and d!44269 c!26572) b!141248))

(assert (= (and d!44269 (not c!26572)) b!141249))

(assert (= (and b!141249 c!26573) b!141250))

(assert (= (and b!141249 (not c!26573)) b!141251))

(declare-fun m!168983 () Bool)

(assert (=> b!141250 m!168983))

(assert (=> b!140849 d!44269))

(declare-fun d!44271 () Bool)

(declare-fun e!92055 () Bool)

(assert (=> d!44271 e!92055))

(declare-fun res!67403 () Bool)

(assert (=> d!44271 (=> res!67403 e!92055)))

(declare-fun lt!73973 () Bool)

(assert (=> d!44271 (= res!67403 (not lt!73973))))

(declare-fun lt!73972 () Bool)

(assert (=> d!44271 (= lt!73973 lt!73972)))

(declare-fun lt!73971 () Unit!4393)

(declare-fun e!92054 () Unit!4393)

(assert (=> d!44271 (= lt!73971 e!92054)))

(declare-fun c!26574 () Bool)

(assert (=> d!44271 (= c!26574 lt!73972)))

(assert (=> d!44271 (= lt!73972 (containsKey!178 (toList!871 lt!73508) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!44271 (= (contains!910 lt!73508 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!73973)))

(declare-fun b!141252 () Bool)

(declare-fun lt!73970 () Unit!4393)

(assert (=> b!141252 (= e!92054 lt!73970)))

(assert (=> b!141252 (= lt!73970 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73508) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!141252 (isDefined!128 (getValueByKey!174 (toList!871 lt!73508) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!141253 () Bool)

(declare-fun Unit!4456 () Unit!4393)

(assert (=> b!141253 (= e!92054 Unit!4456)))

(declare-fun b!141254 () Bool)

(assert (=> b!141254 (= e!92055 (isDefined!128 (getValueByKey!174 (toList!871 lt!73508) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!44271 c!26574) b!141252))

(assert (= (and d!44271 (not c!26574)) b!141253))

(assert (= (and d!44271 (not res!67403)) b!141254))

(assert (=> d!44271 m!166979))

(declare-fun m!168985 () Bool)

(assert (=> d!44271 m!168985))

(assert (=> b!141252 m!166979))

(declare-fun m!168987 () Bool)

(assert (=> b!141252 m!168987))

(assert (=> b!141252 m!166979))

(declare-fun m!168989 () Bool)

(assert (=> b!141252 m!168989))

(assert (=> b!141252 m!168989))

(declare-fun m!168991 () Bool)

(assert (=> b!141252 m!168991))

(assert (=> b!141254 m!166979))

(assert (=> b!141254 m!168989))

(assert (=> b!141254 m!168989))

(assert (=> b!141254 m!168991))

(assert (=> b!140455 d!44271))

(declare-fun d!44273 () Bool)

(assert (=> d!44273 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!73974 () Unit!4393)

(assert (=> d!44273 (= lt!73974 (choose!871 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92056 () Bool)

(assert (=> d!44273 e!92056))

(declare-fun res!67404 () Bool)

(assert (=> d!44273 (=> (not res!67404) (not e!92056))))

(assert (=> d!44273 (= res!67404 (isStrictlySorted!320 (toList!871 lt!73172)))))

(assert (=> d!44273 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000) lt!73974)))

(declare-fun b!141255 () Bool)

(assert (=> b!141255 (= e!92056 (containsKey!178 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44273 res!67404) b!141255))

(assert (=> d!44273 m!168035))

(assert (=> d!44273 m!168035))

(assert (=> d!44273 m!168037))

(declare-fun m!168993 () Bool)

(assert (=> d!44273 m!168993))

(declare-fun m!168995 () Bool)

(assert (=> d!44273 m!168995))

(assert (=> b!141255 m!168031))

(assert (=> b!140716 d!44273))

(declare-fun d!44275 () Bool)

(assert (=> d!44275 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5898 () Bool)

(assert (= bs!5898 d!44275))

(assert (=> bs!5898 m!168035))

(declare-fun m!168997 () Bool)

(assert (=> bs!5898 m!168997))

(assert (=> b!140716 d!44275))

(declare-fun b!141259 () Bool)

(declare-fun e!92058 () Option!180)

(assert (=> b!141259 (= e!92058 None!178)))

(declare-fun b!141257 () Bool)

(declare-fun e!92057 () Option!180)

(assert (=> b!141257 (= e!92057 e!92058)))

(declare-fun c!26576 () Bool)

(assert (=> b!141257 (= c!26576 (and ((_ is Cons!1735) (toList!871 lt!73172)) (not (= (_1!1339 (h!2342 (toList!871 lt!73172))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141256 () Bool)

(assert (=> b!141256 (= e!92057 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73172)))))))

(declare-fun d!44277 () Bool)

(declare-fun c!26575 () Bool)

(assert (=> d!44277 (= c!26575 (and ((_ is Cons!1735) (toList!871 lt!73172)) (= (_1!1339 (h!2342 (toList!871 lt!73172))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44277 (= (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000) e!92057)))

(declare-fun b!141258 () Bool)

(assert (=> b!141258 (= e!92058 (getValueByKey!174 (t!6314 (toList!871 lt!73172)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44277 c!26575) b!141256))

(assert (= (and d!44277 (not c!26575)) b!141257))

(assert (= (and b!141257 c!26576) b!141258))

(assert (= (and b!141257 (not c!26576)) b!141259))

(declare-fun m!168999 () Bool)

(assert (=> b!141258 m!168999))

(assert (=> b!140716 d!44277))

(declare-fun d!44279 () Bool)

(assert (=> d!44279 (= ($colon$colon!93 e!91974 (ite c!26543 (h!2342 (toList!871 lt!73015)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (Cons!1735 (ite c!26543 (h!2342 (toList!871 lt!73015)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91974))))

(assert (=> bm!15657 d!44279))

(declare-fun d!44281 () Bool)

(declare-fun e!92059 () Bool)

(assert (=> d!44281 e!92059))

(declare-fun res!67406 () Bool)

(assert (=> d!44281 (=> (not res!67406) (not e!92059))))

(declare-fun lt!73977 () ListLongMap!1711)

(assert (=> d!44281 (= res!67406 (contains!910 lt!73977 (_1!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))))))

(declare-fun lt!73978 () List!1739)

(assert (=> d!44281 (= lt!73977 (ListLongMap!1712 lt!73978))))

(declare-fun lt!73975 () Unit!4393)

(declare-fun lt!73976 () Unit!4393)

(assert (=> d!44281 (= lt!73975 lt!73976)))

(assert (=> d!44281 (= (getValueByKey!174 lt!73978 (_1!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))))))

(assert (=> d!44281 (= lt!73976 (lemmaContainsTupThenGetReturnValue!91 lt!73978 (_1!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))))))

(assert (=> d!44281 (= lt!73978 (insertStrictlySorted!94 (toList!871 lt!73699) (_1!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))))))

(assert (=> d!44281 (= (+!167 lt!73699 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))) lt!73977)))

(declare-fun b!141260 () Bool)

(declare-fun res!67405 () Bool)

(assert (=> b!141260 (=> (not res!67405) (not e!92059))))

(assert (=> b!141260 (= res!67405 (= (getValueByKey!174 (toList!871 lt!73977) (_1!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))))))))

(declare-fun b!141261 () Bool)

(assert (=> b!141261 (= e!92059 (contains!914 (toList!871 lt!73977) (tuple2!2657 lt!73711 (minValue!2789 newMap!16))))))

(assert (= (and d!44281 res!67406) b!141260))

(assert (= (and b!141260 res!67405) b!141261))

(declare-fun m!169001 () Bool)

(assert (=> d!44281 m!169001))

(declare-fun m!169003 () Bool)

(assert (=> d!44281 m!169003))

(declare-fun m!169005 () Bool)

(assert (=> d!44281 m!169005))

(declare-fun m!169007 () Bool)

(assert (=> d!44281 m!169007))

(declare-fun m!169009 () Bool)

(assert (=> b!141260 m!169009))

(declare-fun m!169011 () Bool)

(assert (=> b!141261 m!169011))

(assert (=> b!140822 d!44281))

(declare-fun d!44283 () Bool)

(assert (=> d!44283 (= (apply!120 lt!73699 lt!73706) (get!1528 (getValueByKey!174 (toList!871 lt!73699) lt!73706)))))

(declare-fun bs!5899 () Bool)

(assert (= bs!5899 d!44283))

(declare-fun m!169013 () Bool)

(assert (=> bs!5899 m!169013))

(assert (=> bs!5899 m!169013))

(declare-fun m!169015 () Bool)

(assert (=> bs!5899 m!169015))

(assert (=> b!140822 d!44283))

(declare-fun d!44285 () Bool)

(declare-fun e!92060 () Bool)

(assert (=> d!44285 e!92060))

(declare-fun res!67408 () Bool)

(assert (=> d!44285 (=> (not res!67408) (not e!92060))))

(declare-fun lt!73981 () ListLongMap!1711)

(assert (=> d!44285 (= res!67408 (contains!910 lt!73981 (_1!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73982 () List!1739)

(assert (=> d!44285 (= lt!73981 (ListLongMap!1712 lt!73982))))

(declare-fun lt!73979 () Unit!4393)

(declare-fun lt!73980 () Unit!4393)

(assert (=> d!44285 (= lt!73979 lt!73980)))

(assert (=> d!44285 (= (getValueByKey!174 lt!73982 (_1!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44285 (= lt!73980 (lemmaContainsTupThenGetReturnValue!91 lt!73982 (_1!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44285 (= lt!73982 (insertStrictlySorted!94 (toList!871 lt!73695) (_1!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44285 (= (+!167 lt!73695 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73981)))

(declare-fun b!141262 () Bool)

(declare-fun res!67407 () Bool)

(assert (=> b!141262 (=> (not res!67407) (not e!92060))))

(assert (=> b!141262 (= res!67407 (= (getValueByKey!174 (toList!871 lt!73981) (_1!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141263 () Bool)

(assert (=> b!141263 (= e!92060 (contains!914 (toList!871 lt!73981) (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44285 res!67408) b!141262))

(assert (= (and b!141262 res!67407) b!141263))

(declare-fun m!169017 () Bool)

(assert (=> d!44285 m!169017))

(declare-fun m!169019 () Bool)

(assert (=> d!44285 m!169019))

(declare-fun m!169021 () Bool)

(assert (=> d!44285 m!169021))

(declare-fun m!169023 () Bool)

(assert (=> d!44285 m!169023))

(declare-fun m!169025 () Bool)

(assert (=> b!141262 m!169025))

(declare-fun m!169027 () Bool)

(assert (=> b!141263 m!169027))

(assert (=> b!140822 d!44285))

(declare-fun d!44287 () Bool)

(assert (=> d!44287 (= (apply!120 (+!167 lt!73699 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))) lt!73706) (apply!120 lt!73699 lt!73706))))

(declare-fun lt!73983 () Unit!4393)

(assert (=> d!44287 (= lt!73983 (choose!869 lt!73699 lt!73711 (minValue!2789 newMap!16) lt!73706))))

(declare-fun e!92061 () Bool)

(assert (=> d!44287 e!92061))

(declare-fun res!67409 () Bool)

(assert (=> d!44287 (=> (not res!67409) (not e!92061))))

(assert (=> d!44287 (= res!67409 (contains!910 lt!73699 lt!73706))))

(assert (=> d!44287 (= (addApplyDifferent!96 lt!73699 lt!73711 (minValue!2789 newMap!16) lt!73706) lt!73983)))

(declare-fun b!141264 () Bool)

(assert (=> b!141264 (= e!92061 (not (= lt!73706 lt!73711)))))

(assert (= (and d!44287 res!67409) b!141264))

(assert (=> d!44287 m!168191))

(assert (=> d!44287 m!168191))

(assert (=> d!44287 m!168193))

(declare-fun m!169029 () Bool)

(assert (=> d!44287 m!169029))

(assert (=> d!44287 m!168177))

(declare-fun m!169031 () Bool)

(assert (=> d!44287 m!169031))

(assert (=> b!140822 d!44287))

(declare-fun d!44289 () Bool)

(assert (=> d!44289 (= (apply!120 (+!167 lt!73695 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73714) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73695 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73714)))))

(declare-fun bs!5900 () Bool)

(assert (= bs!5900 d!44289))

(declare-fun m!169033 () Bool)

(assert (=> bs!5900 m!169033))

(assert (=> bs!5900 m!169033))

(declare-fun m!169035 () Bool)

(assert (=> bs!5900 m!169035))

(assert (=> b!140822 d!44289))

(declare-fun d!44291 () Bool)

(declare-fun e!92062 () Bool)

(assert (=> d!44291 e!92062))

(declare-fun res!67411 () Bool)

(assert (=> d!44291 (=> (not res!67411) (not e!92062))))

(declare-fun lt!73986 () ListLongMap!1711)

(assert (=> d!44291 (= res!67411 (contains!910 lt!73986 (_1!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73987 () List!1739)

(assert (=> d!44291 (= lt!73986 (ListLongMap!1712 lt!73987))))

(declare-fun lt!73984 () Unit!4393)

(declare-fun lt!73985 () Unit!4393)

(assert (=> d!44291 (= lt!73984 lt!73985)))

(assert (=> d!44291 (= (getValueByKey!174 lt!73987 (_1!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44291 (= lt!73985 (lemmaContainsTupThenGetReturnValue!91 lt!73987 (_1!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44291 (= lt!73987 (insertStrictlySorted!94 (toList!871 lt!73709) (_1!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44291 (= (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73986)))

(declare-fun b!141265 () Bool)

(declare-fun res!67410 () Bool)

(assert (=> b!141265 (=> (not res!67410) (not e!92062))))

(assert (=> b!141265 (= res!67410 (= (getValueByKey!174 (toList!871 lt!73986) (_1!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141266 () Bool)

(assert (=> b!141266 (= e!92062 (contains!914 (toList!871 lt!73986) (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44291 res!67411) b!141265))

(assert (= (and b!141265 res!67410) b!141266))

(declare-fun m!169037 () Bool)

(assert (=> d!44291 m!169037))

(declare-fun m!169039 () Bool)

(assert (=> d!44291 m!169039))

(declare-fun m!169041 () Bool)

(assert (=> d!44291 m!169041))

(declare-fun m!169043 () Bool)

(assert (=> d!44291 m!169043))

(declare-fun m!169045 () Bool)

(assert (=> b!141265 m!169045))

(declare-fun m!169047 () Bool)

(assert (=> b!141266 m!169047))

(assert (=> b!140822 d!44291))

(declare-fun d!44293 () Bool)

(assert (=> d!44293 (= (apply!120 (+!167 lt!73710 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))) lt!73705) (apply!120 lt!73710 lt!73705))))

(declare-fun lt!73988 () Unit!4393)

(assert (=> d!44293 (= lt!73988 (choose!869 lt!73710 lt!73708 (minValue!2789 newMap!16) lt!73705))))

(declare-fun e!92063 () Bool)

(assert (=> d!44293 e!92063))

(declare-fun res!67412 () Bool)

(assert (=> d!44293 (=> (not res!67412) (not e!92063))))

(assert (=> d!44293 (= res!67412 (contains!910 lt!73710 lt!73705))))

(assert (=> d!44293 (= (addApplyDifferent!96 lt!73710 lt!73708 (minValue!2789 newMap!16) lt!73705) lt!73988)))

(declare-fun b!141267 () Bool)

(assert (=> b!141267 (= e!92063 (not (= lt!73705 lt!73708)))))

(assert (= (and d!44293 res!67412) b!141267))

(assert (=> d!44293 m!168187))

(assert (=> d!44293 m!168187))

(assert (=> d!44293 m!168199))

(declare-fun m!169049 () Bool)

(assert (=> d!44293 m!169049))

(assert (=> d!44293 m!168179))

(declare-fun m!169051 () Bool)

(assert (=> d!44293 m!169051))

(assert (=> b!140822 d!44293))

(declare-fun d!44295 () Bool)

(assert (=> d!44295 (= (apply!120 lt!73695 lt!73714) (get!1528 (getValueByKey!174 (toList!871 lt!73695) lt!73714)))))

(declare-fun bs!5901 () Bool)

(assert (= bs!5901 d!44295))

(declare-fun m!169053 () Bool)

(assert (=> bs!5901 m!169053))

(assert (=> bs!5901 m!169053))

(declare-fun m!169055 () Bool)

(assert (=> bs!5901 m!169055))

(assert (=> b!140822 d!44295))

(declare-fun d!44297 () Bool)

(declare-fun e!92064 () Bool)

(assert (=> d!44297 e!92064))

(declare-fun res!67414 () Bool)

(assert (=> d!44297 (=> (not res!67414) (not e!92064))))

(declare-fun lt!73991 () ListLongMap!1711)

(assert (=> d!44297 (= res!67414 (contains!910 lt!73991 (_1!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))))))

(declare-fun lt!73992 () List!1739)

(assert (=> d!44297 (= lt!73991 (ListLongMap!1712 lt!73992))))

(declare-fun lt!73989 () Unit!4393)

(declare-fun lt!73990 () Unit!4393)

(assert (=> d!44297 (= lt!73989 lt!73990)))

(assert (=> d!44297 (= (getValueByKey!174 lt!73992 (_1!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))))))

(assert (=> d!44297 (= lt!73990 (lemmaContainsTupThenGetReturnValue!91 lt!73992 (_1!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))))))

(assert (=> d!44297 (= lt!73992 (insertStrictlySorted!94 (toList!871 lt!73710) (_1!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))))))

(assert (=> d!44297 (= (+!167 lt!73710 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))) lt!73991)))

(declare-fun b!141268 () Bool)

(declare-fun res!67413 () Bool)

(assert (=> b!141268 (=> (not res!67413) (not e!92064))))

(assert (=> b!141268 (= res!67413 (= (getValueByKey!174 (toList!871 lt!73991) (_1!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))))))))

(declare-fun b!141269 () Bool)

(assert (=> b!141269 (= e!92064 (contains!914 (toList!871 lt!73991) (tuple2!2657 lt!73708 (minValue!2789 newMap!16))))))

(assert (= (and d!44297 res!67414) b!141268))

(assert (= (and b!141268 res!67413) b!141269))

(declare-fun m!169057 () Bool)

(assert (=> d!44297 m!169057))

(declare-fun m!169059 () Bool)

(assert (=> d!44297 m!169059))

(declare-fun m!169061 () Bool)

(assert (=> d!44297 m!169061))

(declare-fun m!169063 () Bool)

(assert (=> d!44297 m!169063))

(declare-fun m!169065 () Bool)

(assert (=> b!141268 m!169065))

(declare-fun m!169067 () Bool)

(assert (=> b!141269 m!169067))

(assert (=> b!140822 d!44297))

(declare-fun d!44299 () Bool)

(declare-fun e!92066 () Bool)

(assert (=> d!44299 e!92066))

(declare-fun res!67415 () Bool)

(assert (=> d!44299 (=> res!67415 e!92066)))

(declare-fun lt!73996 () Bool)

(assert (=> d!44299 (= res!67415 (not lt!73996))))

(declare-fun lt!73995 () Bool)

(assert (=> d!44299 (= lt!73996 lt!73995)))

(declare-fun lt!73994 () Unit!4393)

(declare-fun e!92065 () Unit!4393)

(assert (=> d!44299 (= lt!73994 e!92065)))

(declare-fun c!26577 () Bool)

(assert (=> d!44299 (= c!26577 lt!73995)))

(assert (=> d!44299 (= lt!73995 (containsKey!178 (toList!871 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73715))))

(assert (=> d!44299 (= (contains!910 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73715) lt!73996)))

(declare-fun b!141270 () Bool)

(declare-fun lt!73993 () Unit!4393)

(assert (=> b!141270 (= e!92065 lt!73993)))

(assert (=> b!141270 (= lt!73993 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73715))))

(assert (=> b!141270 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73715))))

(declare-fun b!141271 () Bool)

(declare-fun Unit!4457 () Unit!4393)

(assert (=> b!141271 (= e!92065 Unit!4457)))

(declare-fun b!141272 () Bool)

(assert (=> b!141272 (= e!92066 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73715)))))

(assert (= (and d!44299 c!26577) b!141270))

(assert (= (and d!44299 (not c!26577)) b!141271))

(assert (= (and d!44299 (not res!67415)) b!141272))

(declare-fun m!169069 () Bool)

(assert (=> d!44299 m!169069))

(declare-fun m!169071 () Bool)

(assert (=> b!141270 m!169071))

(declare-fun m!169073 () Bool)

(assert (=> b!141270 m!169073))

(assert (=> b!141270 m!169073))

(declare-fun m!169075 () Bool)

(assert (=> b!141270 m!169075))

(assert (=> b!141272 m!169073))

(assert (=> b!141272 m!169073))

(assert (=> b!141272 m!169075))

(assert (=> b!140822 d!44299))

(declare-fun d!44301 () Bool)

(assert (=> d!44301 (contains!910 (+!167 lt!73709 (tuple2!2657 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73715)))

(declare-fun lt!73997 () Unit!4393)

(assert (=> d!44301 (= lt!73997 (choose!870 lt!73709 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73715))))

(assert (=> d!44301 (contains!910 lt!73709 lt!73715)))

(assert (=> d!44301 (= (addStillContains!96 lt!73709 lt!73698 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73715) lt!73997)))

(declare-fun bs!5902 () Bool)

(assert (= bs!5902 d!44301))

(assert (=> bs!5902 m!168183))

(assert (=> bs!5902 m!168183))

(assert (=> bs!5902 m!168189))

(assert (=> bs!5902 m!166427))

(declare-fun m!169077 () Bool)

(assert (=> bs!5902 m!169077))

(declare-fun m!169079 () Bool)

(assert (=> bs!5902 m!169079))

(assert (=> b!140822 d!44301))

(declare-fun d!44303 () Bool)

(assert (=> d!44303 (= (apply!120 (+!167 lt!73699 (tuple2!2657 lt!73711 (minValue!2789 newMap!16))) lt!73706) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73699 (tuple2!2657 lt!73711 (minValue!2789 newMap!16)))) lt!73706)))))

(declare-fun bs!5903 () Bool)

(assert (= bs!5903 d!44303))

(declare-fun m!169081 () Bool)

(assert (=> bs!5903 m!169081))

(assert (=> bs!5903 m!169081))

(declare-fun m!169083 () Bool)

(assert (=> bs!5903 m!169083))

(assert (=> b!140822 d!44303))

(declare-fun d!44305 () Bool)

(assert (=> d!44305 (= (apply!120 (+!167 lt!73710 (tuple2!2657 lt!73708 (minValue!2789 newMap!16))) lt!73705) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73710 (tuple2!2657 lt!73708 (minValue!2789 newMap!16)))) lt!73705)))))

(declare-fun bs!5904 () Bool)

(assert (= bs!5904 d!44305))

(declare-fun m!169085 () Bool)

(assert (=> bs!5904 m!169085))

(assert (=> bs!5904 m!169085))

(declare-fun m!169087 () Bool)

(assert (=> bs!5904 m!169087))

(assert (=> b!140822 d!44305))

(declare-fun d!44307 () Bool)

(assert (=> d!44307 (= (apply!120 lt!73710 lt!73705) (get!1528 (getValueByKey!174 (toList!871 lt!73710) lt!73705)))))

(declare-fun bs!5905 () Bool)

(assert (= bs!5905 d!44307))

(declare-fun m!169089 () Bool)

(assert (=> bs!5905 m!169089))

(assert (=> bs!5905 m!169089))

(declare-fun m!169091 () Bool)

(assert (=> bs!5905 m!169091))

(assert (=> b!140822 d!44307))

(declare-fun b!141273 () Bool)

(assert (=> b!141273 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141273 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 newMap!16))))))

(declare-fun e!92067 () Bool)

(declare-fun lt!74004 () ListLongMap!1711)

(assert (=> b!141273 (= e!92067 (= (apply!120 lt!74004 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141274 () Bool)

(declare-fun e!92069 () Bool)

(assert (=> b!141274 (= e!92069 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141274 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141275 () Bool)

(declare-fun res!67417 () Bool)

(declare-fun e!92070 () Bool)

(assert (=> b!141275 (=> (not res!67417) (not e!92070))))

(assert (=> b!141275 (= res!67417 (not (contains!910 lt!74004 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141276 () Bool)

(declare-fun e!92073 () Bool)

(assert (=> b!141276 (= e!92073 e!92067)))

(assert (=> b!141276 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67419 () Bool)

(assert (=> b!141276 (= res!67419 (contains!910 lt!74004 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141276 (=> (not res!67419) (not e!92067))))

(declare-fun b!141277 () Bool)

(declare-fun lt!74000 () Unit!4393)

(declare-fun lt!73998 () Unit!4393)

(assert (=> b!141277 (= lt!74000 lt!73998)))

(declare-fun lt!73999 () (_ BitVec 64))

(declare-fun lt!74002 () V!3553)

(declare-fun lt!74003 () (_ BitVec 64))

(declare-fun lt!74001 () ListLongMap!1711)

(assert (=> b!141277 (not (contains!910 (+!167 lt!74001 (tuple2!2657 lt!74003 lt!74002)) lt!73999))))

(assert (=> b!141277 (= lt!73998 (addStillNotContains!65 lt!74001 lt!74003 lt!74002 lt!73999))))

(assert (=> b!141277 (= lt!73999 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141277 (= lt!74002 (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141277 (= lt!74003 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15667 () ListLongMap!1711)

(assert (=> b!141277 (= lt!74001 call!15667)))

(declare-fun e!92071 () ListLongMap!1711)

(assert (=> b!141277 (= e!92071 (+!167 call!15667 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141278 () Bool)

(assert (=> b!141278 (= e!92070 e!92073)))

(declare-fun c!26581 () Bool)

(assert (=> b!141278 (= c!26581 e!92069)))

(declare-fun res!67416 () Bool)

(assert (=> b!141278 (=> (not res!67416) (not e!92069))))

(assert (=> b!141278 (= res!67416 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15664 () Bool)

(assert (=> bm!15664 (= call!15667 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141279 () Bool)

(assert (=> b!141279 (= e!92071 call!15667)))

(declare-fun b!141280 () Bool)

(declare-fun e!92068 () Bool)

(assert (=> b!141280 (= e!92073 e!92068)))

(declare-fun c!26579 () Bool)

(assert (=> b!141280 (= c!26579 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!44309 () Bool)

(assert (=> d!44309 e!92070))

(declare-fun res!67418 () Bool)

(assert (=> d!44309 (=> (not res!67418) (not e!92070))))

(assert (=> d!44309 (= res!67418 (not (contains!910 lt!74004 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92072 () ListLongMap!1711)

(assert (=> d!44309 (= lt!74004 e!92072)))

(declare-fun c!26580 () Bool)

(assert (=> d!44309 (= c!26580 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44309 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44309 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74004)))

(declare-fun b!141281 () Bool)

(assert (=> b!141281 (= e!92072 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141282 () Bool)

(assert (=> b!141282 (= e!92068 (isEmpty!421 lt!74004))))

(declare-fun b!141283 () Bool)

(assert (=> b!141283 (= e!92072 e!92071)))

(declare-fun c!26578 () Bool)

(assert (=> b!141283 (= c!26578 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141284 () Bool)

(assert (=> b!141284 (= e!92068 (= lt!74004 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73106 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44309 c!26580) b!141281))

(assert (= (and d!44309 (not c!26580)) b!141283))

(assert (= (and b!141283 c!26578) b!141277))

(assert (= (and b!141283 (not c!26578)) b!141279))

(assert (= (or b!141277 b!141279) bm!15664))

(assert (= (and d!44309 res!67418) b!141275))

(assert (= (and b!141275 res!67417) b!141278))

(assert (= (and b!141278 res!67416) b!141274))

(assert (= (and b!141278 c!26581) b!141276))

(assert (= (and b!141278 (not c!26581)) b!141280))

(assert (= (and b!141276 res!67419) b!141273))

(assert (= (and b!141280 c!26579) b!141284))

(assert (= (and b!141280 (not c!26579)) b!141282))

(declare-fun b_lambda!6325 () Bool)

(assert (=> (not b_lambda!6325) (not b!141273)))

(assert (=> b!141273 t!6328))

(declare-fun b_and!8801 () Bool)

(assert (= b_and!8797 (and (=> t!6328 result!4187) b_and!8801)))

(assert (=> b!141273 t!6330))

(declare-fun b_and!8803 () Bool)

(assert (= b_and!8799 (and (=> t!6330 result!4189) b_and!8803)))

(declare-fun b_lambda!6327 () Bool)

(assert (=> (not b_lambda!6327) (not b!141277)))

(assert (=> b!141277 t!6328))

(declare-fun b_and!8805 () Bool)

(assert (= b_and!8801 (and (=> t!6328 result!4187) b_and!8805)))

(assert (=> b!141277 t!6330))

(declare-fun b_and!8807 () Bool)

(assert (= b_and!8803 (and (=> t!6330 result!4189) b_and!8807)))

(declare-fun m!169093 () Bool)

(assert (=> d!44309 m!169093))

(assert (=> d!44309 m!166687))

(assert (=> bm!15664 m!166427))

(declare-fun m!169095 () Bool)

(assert (=> bm!15664 m!169095))

(declare-fun m!169097 () Bool)

(assert (=> b!141275 m!169097))

(assert (=> b!141274 m!166699))

(assert (=> b!141274 m!166699))

(assert (=> b!141274 m!166701))

(assert (=> b!141273 m!166795))

(assert (=> b!141273 m!166703))

(assert (=> b!141273 m!166797))

(assert (=> b!141273 m!166699))

(assert (=> b!141273 m!166703))

(assert (=> b!141273 m!166795))

(assert (=> b!141273 m!166699))

(declare-fun m!169099 () Bool)

(assert (=> b!141273 m!169099))

(assert (=> b!141276 m!166699))

(assert (=> b!141276 m!166699))

(declare-fun m!169101 () Bool)

(assert (=> b!141276 m!169101))

(declare-fun m!169103 () Bool)

(assert (=> b!141282 m!169103))

(assert (=> b!141283 m!166699))

(assert (=> b!141283 m!166699))

(assert (=> b!141283 m!166701))

(assert (=> b!141277 m!166795))

(assert (=> b!141277 m!166703))

(assert (=> b!141277 m!166797))

(declare-fun m!169105 () Bool)

(assert (=> b!141277 m!169105))

(assert (=> b!141277 m!166703))

(declare-fun m!169107 () Bool)

(assert (=> b!141277 m!169107))

(assert (=> b!141277 m!166795))

(declare-fun m!169109 () Bool)

(assert (=> b!141277 m!169109))

(assert (=> b!141277 m!166699))

(assert (=> b!141277 m!169105))

(declare-fun m!169111 () Bool)

(assert (=> b!141277 m!169111))

(assert (=> b!141284 m!166427))

(assert (=> b!141284 m!169095))

(assert (=> b!140822 d!44309))

(declare-fun d!44311 () Bool)

(assert (=> d!44311 (= (apply!120 (+!167 lt!73695 (tuple2!2657 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73714) (apply!120 lt!73695 lt!73714))))

(declare-fun lt!74005 () Unit!4393)

(assert (=> d!44311 (= lt!74005 (choose!869 lt!73695 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73714))))

(declare-fun e!92074 () Bool)

(assert (=> d!44311 e!92074))

(declare-fun res!67420 () Bool)

(assert (=> d!44311 (=> (not res!67420) (not e!92074))))

(assert (=> d!44311 (= res!67420 (contains!910 lt!73695 lt!73714))))

(assert (=> d!44311 (= (addApplyDifferent!96 lt!73695 lt!73704 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73714) lt!74005)))

(declare-fun b!141285 () Bool)

(assert (=> b!141285 (= e!92074 (not (= lt!73714 lt!73704)))))

(assert (= (and d!44311 res!67420) b!141285))

(assert (=> d!44311 m!168195))

(assert (=> d!44311 m!168195))

(assert (=> d!44311 m!168197))

(assert (=> d!44311 m!166427))

(declare-fun m!169113 () Bool)

(assert (=> d!44311 m!169113))

(assert (=> d!44311 m!168201))

(declare-fun m!169115 () Bool)

(assert (=> d!44311 m!169115))

(assert (=> b!140822 d!44311))

(declare-fun d!44313 () Bool)

(assert (=> d!44313 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74006 () Unit!4393)

(assert (=> d!44313 (= lt!74006 (choose!871 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92075 () Bool)

(assert (=> d!44313 e!92075))

(declare-fun res!67421 () Bool)

(assert (=> d!44313 (=> (not res!67421) (not e!92075))))

(assert (=> d!44313 (= res!67421 (isStrictlySorted!320 (toList!871 lt!73197)))))

(assert (=> d!44313 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74006)))

(declare-fun b!141286 () Bool)

(assert (=> b!141286 (= e!92075 (containsKey!178 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44313 res!67421) b!141286))

(assert (=> d!44313 m!168155))

(assert (=> d!44313 m!168155))

(assert (=> d!44313 m!168295))

(declare-fun m!169117 () Bool)

(assert (=> d!44313 m!169117))

(declare-fun m!169119 () Bool)

(assert (=> d!44313 m!169119))

(assert (=> b!141286 m!168291))

(assert (=> b!140863 d!44313))

(declare-fun d!44315 () Bool)

(assert (=> d!44315 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5906 () Bool)

(assert (= bs!5906 d!44315))

(assert (=> bs!5906 m!168155))

(declare-fun m!169121 () Bool)

(assert (=> bs!5906 m!169121))

(assert (=> b!140863 d!44315))

(declare-fun b!141290 () Bool)

(declare-fun e!92077 () Option!180)

(assert (=> b!141290 (= e!92077 None!178)))

(declare-fun b!141288 () Bool)

(declare-fun e!92076 () Option!180)

(assert (=> b!141288 (= e!92076 e!92077)))

(declare-fun c!26583 () Bool)

(assert (=> b!141288 (= c!26583 (and ((_ is Cons!1735) (toList!871 lt!73197)) (not (= (_1!1339 (h!2342 (toList!871 lt!73197))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141287 () Bool)

(assert (=> b!141287 (= e!92076 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73197)))))))

(declare-fun d!44317 () Bool)

(declare-fun c!26582 () Bool)

(assert (=> d!44317 (= c!26582 (and ((_ is Cons!1735) (toList!871 lt!73197)) (= (_1!1339 (h!2342 (toList!871 lt!73197))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44317 (= (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000) e!92076)))

(declare-fun b!141289 () Bool)

(assert (=> b!141289 (= e!92077 (getValueByKey!174 (t!6314 (toList!871 lt!73197)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44317 c!26582) b!141287))

(assert (= (and d!44317 (not c!26582)) b!141288))

(assert (= (and b!141288 c!26583) b!141289))

(assert (= (and b!141288 (not c!26583)) b!141290))

(declare-fun m!169123 () Bool)

(assert (=> b!141289 m!169123))

(assert (=> b!140863 d!44317))

(declare-fun lt!74007 () Bool)

(declare-fun d!44319 () Bool)

(assert (=> d!44319 (= lt!74007 (select (content!138 (t!6314 (toList!871 lt!73410))) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!92079 () Bool)

(assert (=> d!44319 (= lt!74007 e!92079)))

(declare-fun res!67422 () Bool)

(assert (=> d!44319 (=> (not res!67422) (not e!92079))))

(assert (=> d!44319 (= res!67422 ((_ is Cons!1735) (t!6314 (toList!871 lt!73410))))))

(assert (=> d!44319 (= (contains!914 (t!6314 (toList!871 lt!73410)) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!74007)))

(declare-fun b!141291 () Bool)

(declare-fun e!92078 () Bool)

(assert (=> b!141291 (= e!92079 e!92078)))

(declare-fun res!67423 () Bool)

(assert (=> b!141291 (=> res!67423 e!92078)))

(assert (=> b!141291 (= res!67423 (= (h!2342 (t!6314 (toList!871 lt!73410))) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!141292 () Bool)

(assert (=> b!141292 (= e!92078 (contains!914 (t!6314 (t!6314 (toList!871 lt!73410))) (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!44319 res!67422) b!141291))

(assert (= (and b!141291 (not res!67423)) b!141292))

(declare-fun m!169125 () Bool)

(assert (=> d!44319 m!169125))

(declare-fun m!169127 () Bool)

(assert (=> d!44319 m!169127))

(declare-fun m!169129 () Bool)

(assert (=> b!141292 m!169129))

(assert (=> b!140422 d!44319))

(declare-fun d!44321 () Bool)

(assert (=> d!44321 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5907 () Bool)

(assert (= bs!5907 d!44321))

(assert (=> bs!5907 m!167883))

(declare-fun m!169131 () Bool)

(assert (=> bs!5907 m!169131))

(assert (=> b!140862 d!44321))

(declare-fun b!141296 () Bool)

(declare-fun e!92081 () Option!180)

(assert (=> b!141296 (= e!92081 None!178)))

(declare-fun b!141294 () Bool)

(declare-fun e!92080 () Option!180)

(assert (=> b!141294 (= e!92080 e!92081)))

(declare-fun c!26585 () Bool)

(assert (=> b!141294 (= c!26585 (and ((_ is Cons!1735) (toList!871 lt!73128)) (not (= (_1!1339 (h!2342 (toList!871 lt!73128))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141293 () Bool)

(assert (=> b!141293 (= e!92080 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73128)))))))

(declare-fun d!44323 () Bool)

(declare-fun c!26584 () Bool)

(assert (=> d!44323 (= c!26584 (and ((_ is Cons!1735) (toList!871 lt!73128)) (= (_1!1339 (h!2342 (toList!871 lt!73128))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44323 (= (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) e!92080)))

(declare-fun b!141295 () Bool)

(assert (=> b!141295 (= e!92081 (getValueByKey!174 (t!6314 (toList!871 lt!73128)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44323 c!26584) b!141293))

(assert (= (and d!44323 (not c!26584)) b!141294))

(assert (= (and b!141294 c!26585) b!141295))

(assert (= (and b!141294 (not c!26585)) b!141296))

(assert (=> b!141295 m!166699))

(declare-fun m!169133 () Bool)

(assert (=> b!141295 m!169133))

(assert (=> b!140862 d!44323))

(declare-fun d!44325 () Bool)

(assert (=> d!44325 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74008 () Unit!4393)

(assert (=> d!44325 (= lt!74008 (choose!871 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92082 () Bool)

(assert (=> d!44325 e!92082))

(declare-fun res!67424 () Bool)

(assert (=> d!44325 (=> (not res!67424) (not e!92082))))

(assert (=> d!44325 (= res!67424 (isStrictlySorted!320 (toList!871 lt!73266)))))

(assert (=> d!44325 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74008)))

(declare-fun b!141297 () Bool)

(assert (=> b!141297 (= e!92082 (containsKey!178 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44325 res!67424) b!141297))

(assert (=> d!44325 m!167363))

(assert (=> d!44325 m!167363))

(assert (=> d!44325 m!167365))

(declare-fun m!169135 () Bool)

(assert (=> d!44325 m!169135))

(declare-fun m!169137 () Bool)

(assert (=> d!44325 m!169137))

(assert (=> b!141297 m!167359))

(assert (=> b!140423 d!44325))

(declare-fun d!44327 () Bool)

(assert (=> d!44327 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5908 () Bool)

(assert (= bs!5908 d!44327))

(assert (=> bs!5908 m!167363))

(declare-fun m!169139 () Bool)

(assert (=> bs!5908 m!169139))

(assert (=> b!140423 d!44327))

(declare-fun b!141301 () Bool)

(declare-fun e!92084 () Option!180)

(assert (=> b!141301 (= e!92084 None!178)))

(declare-fun b!141299 () Bool)

(declare-fun e!92083 () Option!180)

(assert (=> b!141299 (= e!92083 e!92084)))

(declare-fun c!26587 () Bool)

(assert (=> b!141299 (= c!26587 (and ((_ is Cons!1735) (toList!871 lt!73266)) (not (= (_1!1339 (h!2342 (toList!871 lt!73266))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141298 () Bool)

(assert (=> b!141298 (= e!92083 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73266)))))))

(declare-fun d!44329 () Bool)

(declare-fun c!26586 () Bool)

(assert (=> d!44329 (= c!26586 (and ((_ is Cons!1735) (toList!871 lt!73266)) (= (_1!1339 (h!2342 (toList!871 lt!73266))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44329 (= (getValueByKey!174 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000) e!92083)))

(declare-fun b!141300 () Bool)

(assert (=> b!141300 (= e!92084 (getValueByKey!174 (t!6314 (toList!871 lt!73266)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44329 c!26586) b!141298))

(assert (= (and d!44329 (not c!26586)) b!141299))

(assert (= (and b!141299 c!26587) b!141300))

(assert (= (and b!141299 (not c!26587)) b!141301))

(declare-fun m!169141 () Bool)

(assert (=> b!141300 m!169141))

(assert (=> b!140423 d!44329))

(declare-fun b!141305 () Bool)

(declare-fun e!92086 () Option!180)

(assert (=> b!141305 (= e!92086 None!178)))

(declare-fun b!141303 () Bool)

(declare-fun e!92085 () Option!180)

(assert (=> b!141303 (= e!92085 e!92086)))

(declare-fun c!26589 () Bool)

(assert (=> b!141303 (= c!26589 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73410))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73410)))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!141302 () Bool)

(assert (=> b!141302 (= e!92085 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73410))))))))

(declare-fun c!26588 () Bool)

(declare-fun d!44331 () Bool)

(assert (=> d!44331 (= c!26588 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73410))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73410)))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44331 (= (getValueByKey!174 (t!6314 (toList!871 lt!73410)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92085)))

(declare-fun b!141304 () Bool)

(assert (=> b!141304 (= e!92086 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73410))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44331 c!26588) b!141302))

(assert (= (and d!44331 (not c!26588)) b!141303))

(assert (= (and b!141303 c!26589) b!141304))

(assert (= (and b!141303 (not c!26589)) b!141305))

(declare-fun m!169143 () Bool)

(assert (=> b!141304 m!169143))

(assert (=> b!140984 d!44331))

(assert (=> b!141029 d!44047))

(assert (=> b!141029 d!43601))

(assert (=> b!141029 d!44153))

(declare-fun b!141306 () Bool)

(assert (=> b!141306 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141306 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2576 (_values!2922 newMap!16))))))

(declare-fun e!92087 () Bool)

(declare-fun lt!74015 () ListLongMap!1711)

(assert (=> b!141306 (= e!92087 (= (apply!120 lt!74015 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141307 () Bool)

(declare-fun e!92089 () Bool)

(assert (=> b!141307 (= e!92089 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141307 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141308 () Bool)

(declare-fun res!67426 () Bool)

(declare-fun e!92090 () Bool)

(assert (=> b!141308 (=> (not res!67426) (not e!92090))))

(assert (=> b!141308 (= res!67426 (not (contains!910 lt!74015 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141309 () Bool)

(declare-fun e!92093 () Bool)

(assert (=> b!141309 (= e!92093 e!92087)))

(assert (=> b!141309 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67428 () Bool)

(assert (=> b!141309 (= res!67428 (contains!910 lt!74015 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141309 (=> (not res!67428) (not e!92087))))

(declare-fun b!141310 () Bool)

(declare-fun lt!74011 () Unit!4393)

(declare-fun lt!74009 () Unit!4393)

(assert (=> b!141310 (= lt!74011 lt!74009)))

(declare-fun lt!74013 () V!3553)

(declare-fun lt!74010 () (_ BitVec 64))

(declare-fun lt!74014 () (_ BitVec 64))

(declare-fun lt!74012 () ListLongMap!1711)

(assert (=> b!141310 (not (contains!910 (+!167 lt!74012 (tuple2!2657 lt!74014 lt!74013)) lt!74010))))

(assert (=> b!141310 (= lt!74009 (addStillNotContains!65 lt!74012 lt!74014 lt!74013 lt!74010))))

(assert (=> b!141310 (= lt!74010 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141310 (= lt!74013 (get!1523 (select (arr!2303 (_values!2922 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141310 (= lt!74014 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15668 () ListLongMap!1711)

(assert (=> b!141310 (= lt!74012 call!15668)))

(declare-fun e!92091 () ListLongMap!1711)

(assert (=> b!141310 (= e!92091 (+!167 call!15668 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141311 () Bool)

(assert (=> b!141311 (= e!92090 e!92093)))

(declare-fun c!26593 () Bool)

(assert (=> b!141311 (= c!26593 e!92089)))

(declare-fun res!67425 () Bool)

(assert (=> b!141311 (=> (not res!67425) (not e!92089))))

(assert (=> b!141311 (= res!67425 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15665 () Bool)

(assert (=> bm!15665 (= call!15668 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141312 () Bool)

(assert (=> b!141312 (= e!92091 call!15668)))

(declare-fun b!141313 () Bool)

(declare-fun e!92088 () Bool)

(assert (=> b!141313 (= e!92093 e!92088)))

(declare-fun c!26591 () Bool)

(assert (=> b!141313 (= c!26591 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!44333 () Bool)

(assert (=> d!44333 e!92090))

(declare-fun res!67427 () Bool)

(assert (=> d!44333 (=> (not res!67427) (not e!92090))))

(assert (=> d!44333 (= res!67427 (not (contains!910 lt!74015 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92092 () ListLongMap!1711)

(assert (=> d!44333 (= lt!74015 e!92092)))

(declare-fun c!26592 () Bool)

(assert (=> d!44333 (= c!26592 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44333 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44333 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)) lt!74015)))

(declare-fun b!141314 () Bool)

(assert (=> b!141314 (= e!92092 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141315 () Bool)

(assert (=> b!141315 (= e!92088 (isEmpty!421 lt!74015))))

(declare-fun b!141316 () Bool)

(assert (=> b!141316 (= e!92092 e!92091)))

(declare-fun c!26590 () Bool)

(assert (=> b!141316 (= c!26590 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141317 () Bool)

(assert (=> b!141317 (= e!92088 (= lt!74015 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44333 c!26592) b!141314))

(assert (= (and d!44333 (not c!26592)) b!141316))

(assert (= (and b!141316 c!26590) b!141310))

(assert (= (and b!141316 (not c!26590)) b!141312))

(assert (= (or b!141310 b!141312) bm!15665))

(assert (= (and d!44333 res!67427) b!141308))

(assert (= (and b!141308 res!67426) b!141311))

(assert (= (and b!141311 res!67425) b!141307))

(assert (= (and b!141311 c!26593) b!141309))

(assert (= (and b!141311 (not c!26593)) b!141313))

(assert (= (and b!141309 res!67428) b!141306))

(assert (= (and b!141313 c!26591) b!141317))

(assert (= (and b!141313 (not c!26591)) b!141315))

(declare-fun b_lambda!6329 () Bool)

(assert (=> (not b_lambda!6329) (not b!141306)))

(assert (=> b!141306 t!6328))

(declare-fun b_and!8809 () Bool)

(assert (= b_and!8805 (and (=> t!6328 result!4187) b_and!8809)))

(assert (=> b!141306 t!6330))

(declare-fun b_and!8811 () Bool)

(assert (= b_and!8807 (and (=> t!6330 result!4189) b_and!8811)))

(declare-fun b_lambda!6331 () Bool)

(assert (=> (not b_lambda!6331) (not b!141310)))

(assert (=> b!141310 t!6328))

(declare-fun b_and!8813 () Bool)

(assert (= b_and!8809 (and (=> t!6328 result!4187) b_and!8813)))

(assert (=> b!141310 t!6330))

(declare-fun b_and!8815 () Bool)

(assert (= b_and!8811 (and (=> t!6330 result!4189) b_and!8815)))

(declare-fun m!169145 () Bool)

(assert (=> d!44333 m!169145))

(assert (=> d!44333 m!166687))

(declare-fun m!169147 () Bool)

(assert (=> bm!15665 m!169147))

(declare-fun m!169149 () Bool)

(assert (=> b!141308 m!169149))

(assert (=> b!141307 m!167925))

(assert (=> b!141307 m!167925))

(assert (=> b!141307 m!167927))

(declare-fun m!169151 () Bool)

(assert (=> b!141306 m!169151))

(assert (=> b!141306 m!166703))

(declare-fun m!169153 () Bool)

(assert (=> b!141306 m!169153))

(assert (=> b!141306 m!167925))

(assert (=> b!141306 m!166703))

(assert (=> b!141306 m!169151))

(assert (=> b!141306 m!167925))

(declare-fun m!169155 () Bool)

(assert (=> b!141306 m!169155))

(assert (=> b!141309 m!167925))

(assert (=> b!141309 m!167925))

(declare-fun m!169157 () Bool)

(assert (=> b!141309 m!169157))

(declare-fun m!169159 () Bool)

(assert (=> b!141315 m!169159))

(assert (=> b!141316 m!167925))

(assert (=> b!141316 m!167925))

(assert (=> b!141316 m!167927))

(assert (=> b!141310 m!169151))

(assert (=> b!141310 m!166703))

(assert (=> b!141310 m!169153))

(declare-fun m!169161 () Bool)

(assert (=> b!141310 m!169161))

(assert (=> b!141310 m!166703))

(declare-fun m!169163 () Bool)

(assert (=> b!141310 m!169163))

(assert (=> b!141310 m!169151))

(declare-fun m!169165 () Bool)

(assert (=> b!141310 m!169165))

(assert (=> b!141310 m!167925))

(assert (=> b!141310 m!169161))

(declare-fun m!169167 () Bool)

(assert (=> b!141310 m!169167))

(assert (=> b!141317 m!169147))

(assert (=> bm!15566 d!44333))

(declare-fun b!141318 () Bool)

(assert (=> b!141318 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> b!141318 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 (_2!1340 lt!73099)))))))

(declare-fun e!92094 () Bool)

(declare-fun lt!74022 () ListLongMap!1711)

(assert (=> b!141318 (= e!92094 (= (apply!120 lt!74022 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141319 () Bool)

(declare-fun e!92096 () Bool)

(assert (=> b!141319 (= e!92096 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (=> b!141319 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141320 () Bool)

(declare-fun res!67430 () Bool)

(declare-fun e!92097 () Bool)

(assert (=> b!141320 (=> (not res!67430) (not e!92097))))

(assert (=> b!141320 (= res!67430 (not (contains!910 lt!74022 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141321 () Bool)

(declare-fun e!92100 () Bool)

(assert (=> b!141321 (= e!92100 e!92094)))

(assert (=> b!141321 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun res!67432 () Bool)

(assert (=> b!141321 (= res!67432 (contains!910 lt!74022 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (=> b!141321 (=> (not res!67432) (not e!92094))))

(declare-fun b!141322 () Bool)

(declare-fun lt!74018 () Unit!4393)

(declare-fun lt!74016 () Unit!4393)

(assert (=> b!141322 (= lt!74018 lt!74016)))

(declare-fun lt!74019 () ListLongMap!1711)

(declare-fun lt!74020 () V!3553)

(declare-fun lt!74021 () (_ BitVec 64))

(declare-fun lt!74017 () (_ BitVec 64))

(assert (=> b!141322 (not (contains!910 (+!167 lt!74019 (tuple2!2657 lt!74021 lt!74020)) lt!74017))))

(assert (=> b!141322 (= lt!74016 (addStillNotContains!65 lt!74019 lt!74021 lt!74020 lt!74017))))

(assert (=> b!141322 (= lt!74017 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141322 (= lt!74020 (get!1523 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141322 (= lt!74021 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))

(declare-fun call!15669 () ListLongMap!1711)

(assert (=> b!141322 (= lt!74019 call!15669)))

(declare-fun e!92098 () ListLongMap!1711)

(assert (=> b!141322 (= e!92098 (+!167 call!15669 (tuple2!2657 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141323 () Bool)

(assert (=> b!141323 (= e!92097 e!92100)))

(declare-fun c!26597 () Bool)

(assert (=> b!141323 (= c!26597 e!92096)))

(declare-fun res!67429 () Bool)

(assert (=> b!141323 (=> (not res!67429) (not e!92096))))

(assert (=> b!141323 (= res!67429 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun bm!15666 () Bool)

(assert (=> bm!15666 (= call!15669 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 (_2!1340 lt!73099))))))

(declare-fun b!141324 () Bool)

(assert (=> b!141324 (= e!92098 call!15669)))

(declare-fun b!141325 () Bool)

(declare-fun e!92095 () Bool)

(assert (=> b!141325 (= e!92100 e!92095)))

(declare-fun c!26595 () Bool)

(assert (=> b!141325 (= c!26595 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun d!44335 () Bool)

(assert (=> d!44335 e!92097))

(declare-fun res!67431 () Bool)

(assert (=> d!44335 (=> (not res!67431) (not e!92097))))

(assert (=> d!44335 (= res!67431 (not (contains!910 lt!74022 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92099 () ListLongMap!1711)

(assert (=> d!44335 (= lt!74022 e!92099)))

(declare-fun c!26596 () Bool)

(assert (=> d!44335 (= c!26596 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!44335 (validMask!0 (mask!7278 (_2!1340 lt!73099)))))

(assert (=> d!44335 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73099))) lt!74022)))

(declare-fun b!141326 () Bool)

(assert (=> b!141326 (= e!92099 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141327 () Bool)

(assert (=> b!141327 (= e!92095 (isEmpty!421 lt!74022))))

(declare-fun b!141328 () Bool)

(assert (=> b!141328 (= e!92099 e!92098)))

(declare-fun c!26594 () Bool)

(assert (=> b!141328 (= c!26594 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!141329 () Bool)

(assert (=> b!141329 (= e!92095 (= lt!74022 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73099)) (_values!2922 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099)) (extraKeys!2694 (_2!1340 lt!73099)) (zeroValue!2789 (_2!1340 lt!73099)) (minValue!2789 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 (_2!1340 lt!73099)))))))

(assert (= (and d!44335 c!26596) b!141326))

(assert (= (and d!44335 (not c!26596)) b!141328))

(assert (= (and b!141328 c!26594) b!141322))

(assert (= (and b!141328 (not c!26594)) b!141324))

(assert (= (or b!141322 b!141324) bm!15666))

(assert (= (and d!44335 res!67431) b!141320))

(assert (= (and b!141320 res!67430) b!141323))

(assert (= (and b!141323 res!67429) b!141319))

(assert (= (and b!141323 c!26597) b!141321))

(assert (= (and b!141323 (not c!26597)) b!141325))

(assert (= (and b!141321 res!67432) b!141318))

(assert (= (and b!141325 c!26595) b!141329))

(assert (= (and b!141325 (not c!26595)) b!141327))

(declare-fun b_lambda!6333 () Bool)

(assert (=> (not b_lambda!6333) (not b!141318)))

(assert (=> b!141318 t!6332))

(declare-fun b_and!8817 () Bool)

(assert (= b_and!8813 (and (=> t!6332 result!4191) b_and!8817)))

(assert (=> b!141318 t!6334))

(declare-fun b_and!8819 () Bool)

(assert (= b_and!8815 (and (=> t!6334 result!4193) b_and!8819)))

(declare-fun b_lambda!6335 () Bool)

(assert (=> (not b_lambda!6335) (not b!141322)))

(assert (=> b!141322 t!6332))

(declare-fun b_and!8821 () Bool)

(assert (= b_and!8817 (and (=> t!6332 result!4191) b_and!8821)))

(assert (=> b!141322 t!6334))

(declare-fun b_and!8823 () Bool)

(assert (= b_and!8819 (and (=> t!6334 result!4193) b_and!8823)))

(declare-fun m!169169 () Bool)

(assert (=> d!44335 m!169169))

(assert (=> d!44335 m!167541))

(declare-fun m!169171 () Bool)

(assert (=> bm!15666 m!169171))

(declare-fun m!169173 () Bool)

(assert (=> b!141320 m!169173))

(assert (=> b!141319 m!167523))

(assert (=> b!141319 m!167523))

(assert (=> b!141319 m!167525))

(assert (=> b!141318 m!167529))

(assert (=> b!141318 m!167527))

(assert (=> b!141318 m!167531))

(assert (=> b!141318 m!167523))

(assert (=> b!141318 m!167527))

(assert (=> b!141318 m!167529))

(assert (=> b!141318 m!167523))

(declare-fun m!169175 () Bool)

(assert (=> b!141318 m!169175))

(assert (=> b!141321 m!167523))

(assert (=> b!141321 m!167523))

(declare-fun m!169177 () Bool)

(assert (=> b!141321 m!169177))

(declare-fun m!169179 () Bool)

(assert (=> b!141327 m!169179))

(assert (=> b!141328 m!167523))

(assert (=> b!141328 m!167523))

(assert (=> b!141328 m!167525))

(assert (=> b!141322 m!167529))

(assert (=> b!141322 m!167527))

(assert (=> b!141322 m!167531))

(declare-fun m!169181 () Bool)

(assert (=> b!141322 m!169181))

(assert (=> b!141322 m!167527))

(declare-fun m!169183 () Bool)

(assert (=> b!141322 m!169183))

(assert (=> b!141322 m!167529))

(declare-fun m!169185 () Bool)

(assert (=> b!141322 m!169185))

(assert (=> b!141322 m!167523))

(assert (=> b!141322 m!169181))

(declare-fun m!169187 () Bool)

(assert (=> b!141322 m!169187))

(assert (=> b!141329 m!169171))

(assert (=> bm!15573 d!44335))

(declare-fun d!44337 () Bool)

(declare-fun res!67433 () Bool)

(declare-fun e!92101 () Bool)

(assert (=> d!44337 (=> res!67433 e!92101)))

(assert (=> d!44337 (= res!67433 (and ((_ is Cons!1735) lt!73395) (= (_1!1339 (h!2342 lt!73395)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44337 (= (containsKey!178 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92101)))

(declare-fun b!141330 () Bool)

(declare-fun e!92102 () Bool)

(assert (=> b!141330 (= e!92101 e!92102)))

(declare-fun res!67434 () Bool)

(assert (=> b!141330 (=> (not res!67434) (not e!92102))))

(assert (=> b!141330 (= res!67434 (and (or (not ((_ is Cons!1735) lt!73395)) (bvsle (_1!1339 (h!2342 lt!73395)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73395) (bvslt (_1!1339 (h!2342 lt!73395)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141331 () Bool)

(assert (=> b!141331 (= e!92102 (containsKey!178 (t!6314 lt!73395) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44337 (not res!67433)) b!141330))

(assert (= (and b!141330 res!67434) b!141331))

(declare-fun m!169189 () Bool)

(assert (=> b!141331 m!169189))

(assert (=> b!140649 d!44337))

(declare-fun d!44339 () Bool)

(assert (=> d!44339 (= (apply!120 lt!73777 lt!73772) (get!1528 (getValueByKey!174 (toList!871 lt!73777) lt!73772)))))

(declare-fun bs!5909 () Bool)

(assert (= bs!5909 d!44339))

(declare-fun m!169191 () Bool)

(assert (=> bs!5909 m!169191))

(assert (=> bs!5909 m!169191))

(declare-fun m!169193 () Bool)

(assert (=> bs!5909 m!169193))

(assert (=> b!140904 d!44339))

(declare-fun d!44341 () Bool)

(assert (=> d!44341 (contains!910 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))) lt!73782)))

(declare-fun lt!74023 () Unit!4393)

(assert (=> d!44341 (= lt!74023 (choose!870 lt!73776 lt!73765 (zeroValue!2789 newMap!16) lt!73782))))

(assert (=> d!44341 (contains!910 lt!73776 lt!73782)))

(assert (=> d!44341 (= (addStillContains!96 lt!73776 lt!73765 (zeroValue!2789 newMap!16) lt!73782) lt!74023)))

(declare-fun bs!5910 () Bool)

(assert (= bs!5910 d!44341))

(assert (=> bs!5910 m!168367))

(assert (=> bs!5910 m!168367))

(assert (=> bs!5910 m!168373))

(declare-fun m!169195 () Bool)

(assert (=> bs!5910 m!169195))

(declare-fun m!169197 () Bool)

(assert (=> bs!5910 m!169197))

(assert (=> b!140904 d!44341))

(declare-fun d!44343 () Bool)

(assert (=> d!44343 (= (apply!120 (+!167 lt!73766 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))) lt!73773) (apply!120 lt!73766 lt!73773))))

(declare-fun lt!74024 () Unit!4393)

(assert (=> d!44343 (= lt!74024 (choose!869 lt!73766 lt!73778 (minValue!2789 newMap!16) lt!73773))))

(declare-fun e!92103 () Bool)

(assert (=> d!44343 e!92103))

(declare-fun res!67435 () Bool)

(assert (=> d!44343 (=> (not res!67435) (not e!92103))))

(assert (=> d!44343 (= res!67435 (contains!910 lt!73766 lt!73773))))

(assert (=> d!44343 (= (addApplyDifferent!96 lt!73766 lt!73778 (minValue!2789 newMap!16) lt!73773) lt!74024)))

(declare-fun b!141332 () Bool)

(assert (=> b!141332 (= e!92103 (not (= lt!73773 lt!73778)))))

(assert (= (and d!44343 res!67435) b!141332))

(assert (=> d!44343 m!168375))

(assert (=> d!44343 m!168375))

(assert (=> d!44343 m!168377))

(declare-fun m!169199 () Bool)

(assert (=> d!44343 m!169199))

(assert (=> d!44343 m!168361))

(declare-fun m!169201 () Bool)

(assert (=> d!44343 m!169201))

(assert (=> b!140904 d!44343))

(declare-fun d!44345 () Bool)

(declare-fun e!92104 () Bool)

(assert (=> d!44345 e!92104))

(declare-fun res!67437 () Bool)

(assert (=> d!44345 (=> (not res!67437) (not e!92104))))

(declare-fun lt!74027 () ListLongMap!1711)

(assert (=> d!44345 (= res!67437 (contains!910 lt!74027 (_1!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74028 () List!1739)

(assert (=> d!44345 (= lt!74027 (ListLongMap!1712 lt!74028))))

(declare-fun lt!74025 () Unit!4393)

(declare-fun lt!74026 () Unit!4393)

(assert (=> d!44345 (= lt!74025 lt!74026)))

(assert (=> d!44345 (= (getValueByKey!174 lt!74028 (_1!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44345 (= lt!74026 (lemmaContainsTupThenGetReturnValue!91 lt!74028 (_1!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44345 (= lt!74028 (insertStrictlySorted!94 (toList!871 lt!73776) (_1!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44345 (= (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))) lt!74027)))

(declare-fun b!141333 () Bool)

(declare-fun res!67436 () Bool)

(assert (=> b!141333 (=> (not res!67436) (not e!92104))))

(assert (=> b!141333 (= res!67436 (= (getValueByKey!174 (toList!871 lt!74027) (_1!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141334 () Bool)

(assert (=> b!141334 (= e!92104 (contains!914 (toList!871 lt!74027) (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44345 res!67437) b!141333))

(assert (= (and b!141333 res!67436) b!141334))

(declare-fun m!169203 () Bool)

(assert (=> d!44345 m!169203))

(declare-fun m!169205 () Bool)

(assert (=> d!44345 m!169205))

(declare-fun m!169207 () Bool)

(assert (=> d!44345 m!169207))

(declare-fun m!169209 () Bool)

(assert (=> d!44345 m!169209))

(declare-fun m!169211 () Bool)

(assert (=> b!141333 m!169211))

(declare-fun m!169213 () Bool)

(assert (=> b!141334 m!169213))

(assert (=> b!140904 d!44345))

(declare-fun d!44347 () Bool)

(assert (=> d!44347 (= (apply!120 (+!167 lt!73762 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))) lt!73781) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73762 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))) lt!73781)))))

(declare-fun bs!5911 () Bool)

(assert (= bs!5911 d!44347))

(declare-fun m!169215 () Bool)

(assert (=> bs!5911 m!169215))

(assert (=> bs!5911 m!169215))

(declare-fun m!169217 () Bool)

(assert (=> bs!5911 m!169217))

(assert (=> b!140904 d!44347))

(declare-fun d!44349 () Bool)

(assert (=> d!44349 (= (apply!120 lt!73762 lt!73781) (get!1528 (getValueByKey!174 (toList!871 lt!73762) lt!73781)))))

(declare-fun bs!5912 () Bool)

(assert (= bs!5912 d!44349))

(declare-fun m!169219 () Bool)

(assert (=> bs!5912 m!169219))

(assert (=> bs!5912 m!169219))

(declare-fun m!169221 () Bool)

(assert (=> bs!5912 m!169221))

(assert (=> b!140904 d!44349))

(declare-fun d!44351 () Bool)

(assert (=> d!44351 (= (apply!120 (+!167 lt!73777 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))) lt!73772) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73777 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))) lt!73772)))))

(declare-fun bs!5913 () Bool)

(assert (= bs!5913 d!44351))

(declare-fun m!169223 () Bool)

(assert (=> bs!5913 m!169223))

(assert (=> bs!5913 m!169223))

(declare-fun m!169225 () Bool)

(assert (=> bs!5913 m!169225))

(assert (=> b!140904 d!44351))

(declare-fun d!44353 () Bool)

(declare-fun e!92105 () Bool)

(assert (=> d!44353 e!92105))

(declare-fun res!67439 () Bool)

(assert (=> d!44353 (=> (not res!67439) (not e!92105))))

(declare-fun lt!74031 () ListLongMap!1711)

(assert (=> d!44353 (= res!67439 (contains!910 lt!74031 (_1!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))))))

(declare-fun lt!74032 () List!1739)

(assert (=> d!44353 (= lt!74031 (ListLongMap!1712 lt!74032))))

(declare-fun lt!74029 () Unit!4393)

(declare-fun lt!74030 () Unit!4393)

(assert (=> d!44353 (= lt!74029 lt!74030)))

(assert (=> d!44353 (= (getValueByKey!174 lt!74032 (_1!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))))))

(assert (=> d!44353 (= lt!74030 (lemmaContainsTupThenGetReturnValue!91 lt!74032 (_1!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))))))

(assert (=> d!44353 (= lt!74032 (insertStrictlySorted!94 (toList!871 lt!73777) (_1!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))))))

(assert (=> d!44353 (= (+!167 lt!73777 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))) lt!74031)))

(declare-fun b!141335 () Bool)

(declare-fun res!67438 () Bool)

(assert (=> b!141335 (=> (not res!67438) (not e!92105))))

(assert (=> b!141335 (= res!67438 (= (getValueByKey!174 (toList!871 lt!74031) (_1!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))))))))

(declare-fun b!141336 () Bool)

(assert (=> b!141336 (= e!92105 (contains!914 (toList!871 lt!74031) (tuple2!2657 lt!73775 (minValue!2789 newMap!16))))))

(assert (= (and d!44353 res!67439) b!141335))

(assert (= (and b!141335 res!67438) b!141336))

(declare-fun m!169227 () Bool)

(assert (=> d!44353 m!169227))

(declare-fun m!169229 () Bool)

(assert (=> d!44353 m!169229))

(declare-fun m!169231 () Bool)

(assert (=> d!44353 m!169231))

(declare-fun m!169233 () Bool)

(assert (=> d!44353 m!169233))

(declare-fun m!169235 () Bool)

(assert (=> b!141335 m!169235))

(declare-fun m!169237 () Bool)

(assert (=> b!141336 m!169237))

(assert (=> b!140904 d!44353))

(declare-fun d!44355 () Bool)

(declare-fun e!92106 () Bool)

(assert (=> d!44355 e!92106))

(declare-fun res!67441 () Bool)

(assert (=> d!44355 (=> (not res!67441) (not e!92106))))

(declare-fun lt!74035 () ListLongMap!1711)

(assert (=> d!44355 (= res!67441 (contains!910 lt!74035 (_1!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74036 () List!1739)

(assert (=> d!44355 (= lt!74035 (ListLongMap!1712 lt!74036))))

(declare-fun lt!74033 () Unit!4393)

(declare-fun lt!74034 () Unit!4393)

(assert (=> d!44355 (= lt!74033 lt!74034)))

(assert (=> d!44355 (= (getValueByKey!174 lt!74036 (_1!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44355 (= lt!74034 (lemmaContainsTupThenGetReturnValue!91 lt!74036 (_1!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44355 (= lt!74036 (insertStrictlySorted!94 (toList!871 lt!73762) (_1!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44355 (= (+!167 lt!73762 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))) lt!74035)))

(declare-fun b!141337 () Bool)

(declare-fun res!67440 () Bool)

(assert (=> b!141337 (=> (not res!67440) (not e!92106))))

(assert (=> b!141337 (= res!67440 (= (getValueByKey!174 (toList!871 lt!74035) (_1!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141338 () Bool)

(assert (=> b!141338 (= e!92106 (contains!914 (toList!871 lt!74035) (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44355 res!67441) b!141337))

(assert (= (and b!141337 res!67440) b!141338))

(declare-fun m!169239 () Bool)

(assert (=> d!44355 m!169239))

(declare-fun m!169241 () Bool)

(assert (=> d!44355 m!169241))

(declare-fun m!169243 () Bool)

(assert (=> d!44355 m!169243))

(declare-fun m!169245 () Bool)

(assert (=> d!44355 m!169245))

(declare-fun m!169247 () Bool)

(assert (=> b!141337 m!169247))

(declare-fun m!169249 () Bool)

(assert (=> b!141338 m!169249))

(assert (=> b!140904 d!44355))

(declare-fun b!141339 () Bool)

(assert (=> b!141339 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141339 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))))))

(declare-fun e!92107 () Bool)

(declare-fun lt!74043 () ListLongMap!1711)

(assert (=> b!141339 (= e!92107 (= (apply!120 lt!74043 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141340 () Bool)

(declare-fun e!92109 () Bool)

(assert (=> b!141340 (= e!92109 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141340 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141341 () Bool)

(declare-fun res!67443 () Bool)

(declare-fun e!92110 () Bool)

(assert (=> b!141341 (=> (not res!67443) (not e!92110))))

(assert (=> b!141341 (= res!67443 (not (contains!910 lt!74043 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141342 () Bool)

(declare-fun e!92113 () Bool)

(assert (=> b!141342 (= e!92113 e!92107)))

(assert (=> b!141342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67445 () Bool)

(assert (=> b!141342 (= res!67445 (contains!910 lt!74043 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141342 (=> (not res!67445) (not e!92107))))

(declare-fun b!141343 () Bool)

(declare-fun lt!74039 () Unit!4393)

(declare-fun lt!74037 () Unit!4393)

(assert (=> b!141343 (= lt!74039 lt!74037)))

(declare-fun lt!74041 () V!3553)

(declare-fun lt!74042 () (_ BitVec 64))

(declare-fun lt!74038 () (_ BitVec 64))

(declare-fun lt!74040 () ListLongMap!1711)

(assert (=> b!141343 (not (contains!910 (+!167 lt!74040 (tuple2!2657 lt!74042 lt!74041)) lt!74038))))

(assert (=> b!141343 (= lt!74037 (addStillNotContains!65 lt!74040 lt!74042 lt!74041 lt!74038))))

(assert (=> b!141343 (= lt!74038 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141343 (= lt!74041 (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141343 (= lt!74042 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15670 () ListLongMap!1711)

(assert (=> b!141343 (= lt!74040 call!15670)))

(declare-fun e!92111 () ListLongMap!1711)

(assert (=> b!141343 (= e!92111 (+!167 call!15670 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141344 () Bool)

(assert (=> b!141344 (= e!92110 e!92113)))

(declare-fun c!26601 () Bool)

(assert (=> b!141344 (= c!26601 e!92109)))

(declare-fun res!67442 () Bool)

(assert (=> b!141344 (=> (not res!67442) (not e!92109))))

(assert (=> b!141344 (= res!67442 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15667 () Bool)

(assert (=> bm!15667 (= call!15670 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141345 () Bool)

(assert (=> b!141345 (= e!92111 call!15670)))

(declare-fun b!141346 () Bool)

(declare-fun e!92108 () Bool)

(assert (=> b!141346 (= e!92113 e!92108)))

(declare-fun c!26599 () Bool)

(assert (=> b!141346 (= c!26599 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!44357 () Bool)

(assert (=> d!44357 e!92110))

(declare-fun res!67444 () Bool)

(assert (=> d!44357 (=> (not res!67444) (not e!92110))))

(assert (=> d!44357 (= res!67444 (not (contains!910 lt!74043 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92112 () ListLongMap!1711)

(assert (=> d!44357 (= lt!74043 e!92112)))

(declare-fun c!26600 () Bool)

(assert (=> d!44357 (= c!26600 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44357 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44357 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74043)))

(declare-fun b!141347 () Bool)

(assert (=> b!141347 (= e!92112 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141348 () Bool)

(assert (=> b!141348 (= e!92108 (isEmpty!421 lt!74043))))

(declare-fun b!141349 () Bool)

(assert (=> b!141349 (= e!92112 e!92111)))

(declare-fun c!26598 () Bool)

(assert (=> b!141349 (= c!26598 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141350 () Bool)

(assert (=> b!141350 (= e!92108 (= lt!74043 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44357 c!26600) b!141347))

(assert (= (and d!44357 (not c!26600)) b!141349))

(assert (= (and b!141349 c!26598) b!141343))

(assert (= (and b!141349 (not c!26598)) b!141345))

(assert (= (or b!141343 b!141345) bm!15667))

(assert (= (and d!44357 res!67444) b!141341))

(assert (= (and b!141341 res!67443) b!141344))

(assert (= (and b!141344 res!67442) b!141340))

(assert (= (and b!141344 c!26601) b!141342))

(assert (= (and b!141344 (not c!26601)) b!141346))

(assert (= (and b!141342 res!67445) b!141339))

(assert (= (and b!141346 c!26599) b!141350))

(assert (= (and b!141346 (not c!26599)) b!141348))

(declare-fun b_lambda!6337 () Bool)

(assert (=> (not b_lambda!6337) (not b!141339)))

(assert (=> b!141339 t!6328))

(declare-fun b_and!8825 () Bool)

(assert (= b_and!8821 (and (=> t!6328 result!4187) b_and!8825)))

(assert (=> b!141339 t!6330))

(declare-fun b_and!8827 () Bool)

(assert (= b_and!8823 (and (=> t!6330 result!4189) b_and!8827)))

(declare-fun b_lambda!6339 () Bool)

(assert (=> (not b_lambda!6339) (not b!141343)))

(assert (=> b!141343 t!6328))

(declare-fun b_and!8829 () Bool)

(assert (= b_and!8825 (and (=> t!6328 result!4187) b_and!8829)))

(assert (=> b!141343 t!6330))

(declare-fun b_and!8831 () Bool)

(assert (= b_and!8827 (and (=> t!6330 result!4189) b_and!8831)))

(declare-fun m!169251 () Bool)

(assert (=> d!44357 m!169251))

(assert (=> d!44357 m!166687))

(declare-fun m!169253 () Bool)

(assert (=> bm!15667 m!169253))

(declare-fun m!169255 () Bool)

(assert (=> b!141341 m!169255))

(assert (=> b!141340 m!166699))

(assert (=> b!141340 m!166699))

(assert (=> b!141340 m!166701))

(assert (=> b!141339 m!168341))

(assert (=> b!141339 m!166703))

(assert (=> b!141339 m!168343))

(assert (=> b!141339 m!166699))

(assert (=> b!141339 m!166703))

(assert (=> b!141339 m!168341))

(assert (=> b!141339 m!166699))

(declare-fun m!169257 () Bool)

(assert (=> b!141339 m!169257))

(assert (=> b!141342 m!166699))

(assert (=> b!141342 m!166699))

(declare-fun m!169259 () Bool)

(assert (=> b!141342 m!169259))

(declare-fun m!169261 () Bool)

(assert (=> b!141348 m!169261))

(assert (=> b!141349 m!166699))

(assert (=> b!141349 m!166699))

(assert (=> b!141349 m!166701))

(assert (=> b!141343 m!168341))

(assert (=> b!141343 m!166703))

(assert (=> b!141343 m!168343))

(declare-fun m!169263 () Bool)

(assert (=> b!141343 m!169263))

(assert (=> b!141343 m!166703))

(declare-fun m!169265 () Bool)

(assert (=> b!141343 m!169265))

(assert (=> b!141343 m!168341))

(declare-fun m!169267 () Bool)

(assert (=> b!141343 m!169267))

(assert (=> b!141343 m!166699))

(assert (=> b!141343 m!169263))

(declare-fun m!169269 () Bool)

(assert (=> b!141343 m!169269))

(assert (=> b!141350 m!169253))

(assert (=> b!140904 d!44357))

(declare-fun d!44359 () Bool)

(assert (=> d!44359 (= (apply!120 (+!167 lt!73777 (tuple2!2657 lt!73775 (minValue!2789 newMap!16))) lt!73772) (apply!120 lt!73777 lt!73772))))

(declare-fun lt!74044 () Unit!4393)

(assert (=> d!44359 (= lt!74044 (choose!869 lt!73777 lt!73775 (minValue!2789 newMap!16) lt!73772))))

(declare-fun e!92114 () Bool)

(assert (=> d!44359 e!92114))

(declare-fun res!67446 () Bool)

(assert (=> d!44359 (=> (not res!67446) (not e!92114))))

(assert (=> d!44359 (= res!67446 (contains!910 lt!73777 lt!73772))))

(assert (=> d!44359 (= (addApplyDifferent!96 lt!73777 lt!73775 (minValue!2789 newMap!16) lt!73772) lt!74044)))

(declare-fun b!141351 () Bool)

(assert (=> b!141351 (= e!92114 (not (= lt!73772 lt!73775)))))

(assert (= (and d!44359 res!67446) b!141351))

(assert (=> d!44359 m!168371))

(assert (=> d!44359 m!168371))

(assert (=> d!44359 m!168383))

(declare-fun m!169271 () Bool)

(assert (=> d!44359 m!169271))

(assert (=> d!44359 m!168363))

(declare-fun m!169273 () Bool)

(assert (=> d!44359 m!169273))

(assert (=> b!140904 d!44359))

(declare-fun d!44361 () Bool)

(assert (=> d!44361 (= (apply!120 (+!167 lt!73766 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))) lt!73773) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73766 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))) lt!73773)))))

(declare-fun bs!5914 () Bool)

(assert (= bs!5914 d!44361))

(declare-fun m!169275 () Bool)

(assert (=> bs!5914 m!169275))

(assert (=> bs!5914 m!169275))

(declare-fun m!169277 () Bool)

(assert (=> bs!5914 m!169277))

(assert (=> b!140904 d!44361))

(declare-fun d!44363 () Bool)

(declare-fun e!92116 () Bool)

(assert (=> d!44363 e!92116))

(declare-fun res!67447 () Bool)

(assert (=> d!44363 (=> res!67447 e!92116)))

(declare-fun lt!74048 () Bool)

(assert (=> d!44363 (= res!67447 (not lt!74048))))

(declare-fun lt!74047 () Bool)

(assert (=> d!44363 (= lt!74048 lt!74047)))

(declare-fun lt!74046 () Unit!4393)

(declare-fun e!92115 () Unit!4393)

(assert (=> d!44363 (= lt!74046 e!92115)))

(declare-fun c!26602 () Bool)

(assert (=> d!44363 (= c!26602 lt!74047)))

(assert (=> d!44363 (= lt!74047 (containsKey!178 (toList!871 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))) lt!73782))))

(assert (=> d!44363 (= (contains!910 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16))) lt!73782) lt!74048)))

(declare-fun b!141352 () Bool)

(declare-fun lt!74045 () Unit!4393)

(assert (=> b!141352 (= e!92115 lt!74045)))

(assert (=> b!141352 (= lt!74045 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))) lt!73782))))

(assert (=> b!141352 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))) lt!73782))))

(declare-fun b!141353 () Bool)

(declare-fun Unit!4458 () Unit!4393)

(assert (=> b!141353 (= e!92115 Unit!4458)))

(declare-fun b!141354 () Bool)

(assert (=> b!141354 (= e!92116 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73776 (tuple2!2657 lt!73765 (zeroValue!2789 newMap!16)))) lt!73782)))))

(assert (= (and d!44363 c!26602) b!141352))

(assert (= (and d!44363 (not c!26602)) b!141353))

(assert (= (and d!44363 (not res!67447)) b!141354))

(declare-fun m!169279 () Bool)

(assert (=> d!44363 m!169279))

(declare-fun m!169281 () Bool)

(assert (=> b!141352 m!169281))

(declare-fun m!169283 () Bool)

(assert (=> b!141352 m!169283))

(assert (=> b!141352 m!169283))

(declare-fun m!169285 () Bool)

(assert (=> b!141352 m!169285))

(assert (=> b!141354 m!169283))

(assert (=> b!141354 m!169283))

(assert (=> b!141354 m!169285))

(assert (=> b!140904 d!44363))

(declare-fun d!44365 () Bool)

(assert (=> d!44365 (= (apply!120 (+!167 lt!73762 (tuple2!2657 lt!73771 (zeroValue!2789 newMap!16))) lt!73781) (apply!120 lt!73762 lt!73781))))

(declare-fun lt!74049 () Unit!4393)

(assert (=> d!44365 (= lt!74049 (choose!869 lt!73762 lt!73771 (zeroValue!2789 newMap!16) lt!73781))))

(declare-fun e!92117 () Bool)

(assert (=> d!44365 e!92117))

(declare-fun res!67448 () Bool)

(assert (=> d!44365 (=> (not res!67448) (not e!92117))))

(assert (=> d!44365 (= res!67448 (contains!910 lt!73762 lt!73781))))

(assert (=> d!44365 (= (addApplyDifferent!96 lt!73762 lt!73771 (zeroValue!2789 newMap!16) lt!73781) lt!74049)))

(declare-fun b!141355 () Bool)

(assert (=> b!141355 (= e!92117 (not (= lt!73781 lt!73771)))))

(assert (= (and d!44365 res!67448) b!141355))

(assert (=> d!44365 m!168379))

(assert (=> d!44365 m!168379))

(assert (=> d!44365 m!168381))

(declare-fun m!169287 () Bool)

(assert (=> d!44365 m!169287))

(assert (=> d!44365 m!168385))

(declare-fun m!169289 () Bool)

(assert (=> d!44365 m!169289))

(assert (=> b!140904 d!44365))

(declare-fun d!44367 () Bool)

(assert (=> d!44367 (= (apply!120 lt!73766 lt!73773) (get!1528 (getValueByKey!174 (toList!871 lt!73766) lt!73773)))))

(declare-fun bs!5915 () Bool)

(assert (= bs!5915 d!44367))

(declare-fun m!169291 () Bool)

(assert (=> bs!5915 m!169291))

(assert (=> bs!5915 m!169291))

(declare-fun m!169293 () Bool)

(assert (=> bs!5915 m!169293))

(assert (=> b!140904 d!44367))

(declare-fun d!44369 () Bool)

(declare-fun e!92118 () Bool)

(assert (=> d!44369 e!92118))

(declare-fun res!67450 () Bool)

(assert (=> d!44369 (=> (not res!67450) (not e!92118))))

(declare-fun lt!74052 () ListLongMap!1711)

(assert (=> d!44369 (= res!67450 (contains!910 lt!74052 (_1!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))))))

(declare-fun lt!74053 () List!1739)

(assert (=> d!44369 (= lt!74052 (ListLongMap!1712 lt!74053))))

(declare-fun lt!74050 () Unit!4393)

(declare-fun lt!74051 () Unit!4393)

(assert (=> d!44369 (= lt!74050 lt!74051)))

(assert (=> d!44369 (= (getValueByKey!174 lt!74053 (_1!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))))))

(assert (=> d!44369 (= lt!74051 (lemmaContainsTupThenGetReturnValue!91 lt!74053 (_1!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))))))

(assert (=> d!44369 (= lt!74053 (insertStrictlySorted!94 (toList!871 lt!73766) (_1!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))))))

(assert (=> d!44369 (= (+!167 lt!73766 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))) lt!74052)))

(declare-fun b!141356 () Bool)

(declare-fun res!67449 () Bool)

(assert (=> b!141356 (=> (not res!67449) (not e!92118))))

(assert (=> b!141356 (= res!67449 (= (getValueByKey!174 (toList!871 lt!74052) (_1!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73778 (minValue!2789 newMap!16))))))))

(declare-fun b!141357 () Bool)

(assert (=> b!141357 (= e!92118 (contains!914 (toList!871 lt!74052) (tuple2!2657 lt!73778 (minValue!2789 newMap!16))))))

(assert (= (and d!44369 res!67450) b!141356))

(assert (= (and b!141356 res!67449) b!141357))

(declare-fun m!169295 () Bool)

(assert (=> d!44369 m!169295))

(declare-fun m!169297 () Bool)

(assert (=> d!44369 m!169297))

(declare-fun m!169299 () Bool)

(assert (=> d!44369 m!169299))

(declare-fun m!169301 () Bool)

(assert (=> d!44369 m!169301))

(declare-fun m!169303 () Bool)

(assert (=> b!141356 m!169303))

(declare-fun m!169305 () Bool)

(assert (=> b!141357 m!169305))

(assert (=> b!140904 d!44369))

(declare-fun b!141361 () Bool)

(declare-fun e!92120 () Option!180)

(assert (=> b!141361 (= e!92120 None!178)))

(declare-fun b!141359 () Bool)

(declare-fun e!92119 () Option!180)

(assert (=> b!141359 (= e!92119 e!92120)))

(declare-fun c!26604 () Bool)

(assert (=> b!141359 (= c!26604 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73279))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73279)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141358 () Bool)

(assert (=> b!141358 (= e!92119 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73279))))))))

(declare-fun d!44371 () Bool)

(declare-fun c!26603 () Bool)

(assert (=> d!44371 (= c!26603 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73279))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73279)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44371 (= (getValueByKey!174 (t!6314 (toList!871 lt!73279)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92119)))

(declare-fun b!141360 () Bool)

(assert (=> b!141360 (= e!92120 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73279))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44371 c!26603) b!141358))

(assert (= (and d!44371 (not c!26603)) b!141359))

(assert (= (and b!141359 c!26604) b!141360))

(assert (= (and b!141359 (not c!26604)) b!141361))

(declare-fun m!169307 () Bool)

(assert (=> b!141360 m!169307))

(assert (=> b!140882 d!44371))

(assert (=> d!44125 d!44123))

(declare-fun d!44373 () Bool)

(assert (=> d!44373 (= (getValueByKey!174 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44373 true))

(declare-fun _$22!494 () Unit!4393)

(assert (=> d!44373 (= (choose!872 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) _$22!494)))

(declare-fun bs!5916 () Bool)

(assert (= bs!5916 d!44373))

(assert (=> bs!5916 m!166759))

(assert (=> d!44125 d!44373))

(declare-fun d!44375 () Bool)

(declare-fun res!67451 () Bool)

(declare-fun e!92121 () Bool)

(assert (=> d!44375 (=> res!67451 e!92121)))

(assert (=> d!44375 (= res!67451 (or ((_ is Nil!1736) lt!73158) ((_ is Nil!1736) (t!6314 lt!73158))))))

(assert (=> d!44375 (= (isStrictlySorted!320 lt!73158) e!92121)))

(declare-fun b!141362 () Bool)

(declare-fun e!92122 () Bool)

(assert (=> b!141362 (= e!92121 e!92122)))

(declare-fun res!67452 () Bool)

(assert (=> b!141362 (=> (not res!67452) (not e!92122))))

(assert (=> b!141362 (= res!67452 (bvslt (_1!1339 (h!2342 lt!73158)) (_1!1339 (h!2342 (t!6314 lt!73158)))))))

(declare-fun b!141363 () Bool)

(assert (=> b!141363 (= e!92122 (isStrictlySorted!320 (t!6314 lt!73158)))))

(assert (= (and d!44375 (not res!67451)) b!141362))

(assert (= (and b!141362 res!67452) b!141363))

(declare-fun m!169309 () Bool)

(assert (=> b!141363 m!169309))

(assert (=> d!44125 d!44375))

(declare-fun d!44377 () Bool)

(declare-fun res!67453 () Bool)

(declare-fun e!92123 () Bool)

(assert (=> d!44377 (=> res!67453 e!92123)))

(assert (=> d!44377 (= res!67453 (= (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!73378))))

(assert (=> d!44377 (= (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!92123)))

(declare-fun b!141364 () Bool)

(declare-fun e!92124 () Bool)

(assert (=> b!141364 (= e!92123 e!92124)))

(declare-fun res!67454 () Bool)

(assert (=> b!141364 (=> (not res!67454) (not e!92124))))

(assert (=> b!141364 (= res!67454 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!141365 () Bool)

(assert (=> b!141365 (= e!92124 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44377 (not res!67453)) b!141364))

(assert (= (and b!141364 res!67454) b!141365))

(assert (=> d!44377 m!167925))

(declare-fun m!169311 () Bool)

(assert (=> b!141365 m!169311))

(assert (=> b!140961 d!44377))

(declare-fun d!44379 () Bool)

(declare-fun e!92126 () Bool)

(assert (=> d!44379 e!92126))

(declare-fun res!67455 () Bool)

(assert (=> d!44379 (=> res!67455 e!92126)))

(declare-fun lt!74057 () Bool)

(assert (=> d!44379 (= res!67455 (not lt!74057))))

(declare-fun lt!74056 () Bool)

(assert (=> d!44379 (= lt!74057 lt!74056)))

(declare-fun lt!74055 () Unit!4393)

(declare-fun e!92125 () Unit!4393)

(assert (=> d!44379 (= lt!74055 e!92125)))

(declare-fun c!26605 () Bool)

(assert (=> d!44379 (= c!26605 lt!74056)))

(assert (=> d!44379 (= lt!74056 (containsKey!178 (toList!871 lt!73880) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!44379 (= (contains!910 lt!73880 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)) lt!74057)))

(declare-fun b!141366 () Bool)

(declare-fun lt!74054 () Unit!4393)

(assert (=> b!141366 (= e!92125 lt!74054)))

(assert (=> b!141366 (= lt!74054 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73880) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141366 (isDefined!128 (getValueByKey!174 (toList!871 lt!73880) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141367 () Bool)

(declare-fun Unit!4459 () Unit!4393)

(assert (=> b!141367 (= e!92125 Unit!4459)))

(declare-fun b!141368 () Bool)

(assert (=> b!141368 (= e!92126 (isDefined!128 (getValueByKey!174 (toList!871 lt!73880) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!44379 c!26605) b!141366))

(assert (= (and d!44379 (not c!26605)) b!141367))

(assert (= (and d!44379 (not res!67455)) b!141368))

(assert (=> d!44379 m!168705))

(declare-fun m!169313 () Bool)

(assert (=> d!44379 m!169313))

(assert (=> b!141366 m!168705))

(declare-fun m!169315 () Bool)

(assert (=> b!141366 m!169315))

(assert (=> b!141366 m!168705))

(declare-fun m!169317 () Bool)

(assert (=> b!141366 m!169317))

(assert (=> b!141366 m!169317))

(declare-fun m!169319 () Bool)

(assert (=> b!141366 m!169319))

(assert (=> b!141368 m!168705))

(assert (=> b!141368 m!169317))

(assert (=> b!141368 m!169317))

(assert (=> b!141368 m!169319))

(assert (=> b!141084 d!44379))

(declare-fun d!44381 () Bool)

(declare-fun e!92127 () Bool)

(assert (=> d!44381 e!92127))

(declare-fun res!67457 () Bool)

(assert (=> d!44381 (=> (not res!67457) (not e!92127))))

(declare-fun lt!74060 () ListLongMap!1711)

(assert (=> d!44381 (= res!67457 (contains!910 lt!74060 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74061 () List!1739)

(assert (=> d!44381 (= lt!74060 (ListLongMap!1712 lt!74061))))

(declare-fun lt!74058 () Unit!4393)

(declare-fun lt!74059 () Unit!4393)

(assert (=> d!44381 (= lt!74058 lt!74059)))

(assert (=> d!44381 (= (getValueByKey!174 lt!74061 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44381 (= lt!74059 (lemmaContainsTupThenGetReturnValue!91 lt!74061 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44381 (= lt!74061 (insertStrictlySorted!94 (toList!871 call!15627) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44381 (= (+!167 call!15627 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74060)))

(declare-fun b!141369 () Bool)

(declare-fun res!67456 () Bool)

(assert (=> b!141369 (=> (not res!67456) (not e!92127))))

(assert (=> b!141369 (= res!67456 (= (getValueByKey!174 (toList!871 lt!74060) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141370 () Bool)

(assert (=> b!141370 (= e!92127 (contains!914 (toList!871 lt!74060) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!44381 res!67457) b!141369))

(assert (= (and b!141369 res!67456) b!141370))

(declare-fun m!169321 () Bool)

(assert (=> d!44381 m!169321))

(declare-fun m!169323 () Bool)

(assert (=> d!44381 m!169323))

(declare-fun m!169325 () Bool)

(assert (=> d!44381 m!169325))

(declare-fun m!169327 () Bool)

(assert (=> d!44381 m!169327))

(declare-fun m!169329 () Bool)

(assert (=> b!141369 m!169329))

(declare-fun m!169331 () Bool)

(assert (=> b!141370 m!169331))

(assert (=> b!140905 d!44381))

(assert (=> d!44153 d!43719))

(declare-fun d!44383 () Bool)

(assert (=> d!44383 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140581 d!44383))

(declare-fun b!141371 () Bool)

(declare-fun e!92128 () Bool)

(declare-fun e!92130 () Bool)

(assert (=> b!141371 (= e!92128 e!92130)))

(declare-fun c!26606 () Bool)

(assert (=> b!141371 (= c!26606 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun b!141372 () Bool)

(declare-fun e!92131 () Bool)

(assert (=> b!141372 (= e!92131 e!92128)))

(declare-fun res!67458 () Bool)

(assert (=> b!141372 (=> (not res!67458) (not e!92128))))

(declare-fun e!92129 () Bool)

(assert (=> b!141372 (= res!67458 (not e!92129))))

(declare-fun res!67459 () Bool)

(assert (=> b!141372 (=> (not res!67459) (not e!92129))))

(assert (=> b!141372 (= res!67459 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun b!141373 () Bool)

(declare-fun call!15671 () Bool)

(assert (=> b!141373 (= e!92130 call!15671)))

(declare-fun d!44385 () Bool)

(declare-fun res!67460 () Bool)

(assert (=> d!44385 (=> res!67460 e!92131)))

(assert (=> d!44385 (= res!67460 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(assert (=> d!44385 (= (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73342)) #b00000000000000000000000000000000 Nil!1737) e!92131)))

(declare-fun b!141374 () Bool)

(assert (=> b!141374 (= e!92129 (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun b!141375 () Bool)

(assert (=> b!141375 (= e!92130 call!15671)))

(declare-fun bm!15668 () Bool)

(assert (=> bm!15668 (= call!15671 (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73342)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26606 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)))))

(assert (= (and d!44385 (not res!67460)) b!141372))

(assert (= (and b!141372 res!67459) b!141374))

(assert (= (and b!141372 res!67458) b!141371))

(assert (= (and b!141371 c!26606) b!141373))

(assert (= (and b!141371 (not c!26606)) b!141375))

(assert (= (or b!141373 b!141375) bm!15668))

(assert (=> b!141371 m!168913))

(assert (=> b!141371 m!168913))

(assert (=> b!141371 m!168915))

(assert (=> b!141372 m!168913))

(assert (=> b!141372 m!168913))

(assert (=> b!141372 m!168915))

(assert (=> b!141374 m!168913))

(assert (=> b!141374 m!168913))

(declare-fun m!169333 () Bool)

(assert (=> b!141374 m!169333))

(assert (=> bm!15668 m!168913))

(declare-fun m!169335 () Bool)

(assert (=> bm!15668 m!169335))

(assert (=> b!140726 d!44385))

(declare-fun d!44387 () Bool)

(assert (=> d!44387 (= (validKeyInArray!0 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)) (and (not (= (select (arr!2302 lt!73348) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 lt!73348) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141034 d!44387))

(declare-fun b!141379 () Bool)

(declare-fun e!92133 () Option!180)

(assert (=> b!141379 (= e!92133 None!178)))

(declare-fun b!141377 () Bool)

(declare-fun e!92132 () Option!180)

(assert (=> b!141377 (= e!92132 e!92133)))

(declare-fun c!26608 () Bool)

(assert (=> b!141377 (= c!26608 (and ((_ is Cons!1735) (toList!871 lt!73487)) (not (= (_1!1339 (h!2342 (toList!871 lt!73487))) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))))

(declare-fun b!141376 () Bool)

(assert (=> b!141376 (= e!92132 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73487)))))))

(declare-fun c!26607 () Bool)

(declare-fun d!44389 () Bool)

(assert (=> d!44389 (= c!26607 (and ((_ is Cons!1735) (toList!871 lt!73487)) (= (_1!1339 (h!2342 (toList!871 lt!73487))) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(assert (=> d!44389 (= (getValueByKey!174 (toList!871 lt!73487) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) e!92132)))

(declare-fun b!141378 () Bool)

(assert (=> b!141378 (= e!92133 (getValueByKey!174 (t!6314 (toList!871 lt!73487)) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (= (and d!44389 c!26607) b!141376))

(assert (= (and d!44389 (not c!26607)) b!141377))

(assert (= (and b!141377 c!26608) b!141378))

(assert (= (and b!141377 (not c!26608)) b!141379))

(declare-fun m!169337 () Bool)

(assert (=> b!141378 m!169337))

(assert (=> b!140435 d!44389))

(declare-fun d!44391 () Bool)

(assert (=> d!44391 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140661 d!44391))

(declare-fun d!44393 () Bool)

(declare-fun res!67461 () Bool)

(declare-fun e!92134 () Bool)

(assert (=> d!44393 (=> res!67461 e!92134)))

(assert (=> d!44393 (= res!67461 (and ((_ is Cons!1735) lt!73387) (= (_1!1339 (h!2342 lt!73387)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44393 (= (containsKey!178 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92134)))

(declare-fun b!141380 () Bool)

(declare-fun e!92135 () Bool)

(assert (=> b!141380 (= e!92134 e!92135)))

(declare-fun res!67462 () Bool)

(assert (=> b!141380 (=> (not res!67462) (not e!92135))))

(assert (=> b!141380 (= res!67462 (and (or (not ((_ is Cons!1735) lt!73387)) (bvsle (_1!1339 (h!2342 lt!73387)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1735) lt!73387) (bvslt (_1!1339 (h!2342 lt!73387)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141381 () Bool)

(assert (=> b!141381 (= e!92135 (containsKey!178 (t!6314 lt!73387) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44393 (not res!67461)) b!141380))

(assert (= (and b!141380 res!67462) b!141381))

(declare-fun m!169339 () Bool)

(assert (=> b!141381 m!169339))

(assert (=> b!140739 d!44393))

(declare-fun d!44395 () Bool)

(assert (=> d!44395 (= (isEmpty!422 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not ((_ is Some!179) (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(assert (=> d!43875 d!44395))

(assert (=> d!44033 d!43569))

(assert (=> d!44011 d!44013))

(assert (=> d!44011 d!44007))

(declare-fun d!44397 () Bool)

(assert (=> d!44397 (not (contains!910 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)) lt!73261))))

(assert (=> d!44397 true))

(declare-fun _$36!336 () Unit!4393)

(assert (=> d!44397 (= (choose!874 lt!73263 lt!73265 lt!73264 lt!73261) _$36!336)))

(declare-fun bs!5917 () Bool)

(assert (= bs!5917 d!44397))

(assert (=> bs!5917 m!166971))

(assert (=> bs!5917 m!166971))

(assert (=> bs!5917 m!166977))

(assert (=> d!44011 d!44397))

(declare-fun d!44399 () Bool)

(declare-fun e!92137 () Bool)

(assert (=> d!44399 e!92137))

(declare-fun res!67463 () Bool)

(assert (=> d!44399 (=> res!67463 e!92137)))

(declare-fun lt!74065 () Bool)

(assert (=> d!44399 (= res!67463 (not lt!74065))))

(declare-fun lt!74064 () Bool)

(assert (=> d!44399 (= lt!74065 lt!74064)))

(declare-fun lt!74063 () Unit!4393)

(declare-fun e!92136 () Unit!4393)

(assert (=> d!44399 (= lt!74063 e!92136)))

(declare-fun c!26609 () Bool)

(assert (=> d!44399 (= c!26609 lt!74064)))

(assert (=> d!44399 (= lt!74064 (containsKey!178 (toList!871 lt!73263) lt!73261))))

(assert (=> d!44399 (= (contains!910 lt!73263 lt!73261) lt!74065)))

(declare-fun b!141383 () Bool)

(declare-fun lt!74062 () Unit!4393)

(assert (=> b!141383 (= e!92136 lt!74062)))

(assert (=> b!141383 (= lt!74062 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73263) lt!73261))))

(assert (=> b!141383 (isDefined!128 (getValueByKey!174 (toList!871 lt!73263) lt!73261))))

(declare-fun b!141384 () Bool)

(declare-fun Unit!4460 () Unit!4393)

(assert (=> b!141384 (= e!92136 Unit!4460)))

(declare-fun b!141385 () Bool)

(assert (=> b!141385 (= e!92137 (isDefined!128 (getValueByKey!174 (toList!871 lt!73263) lt!73261)))))

(assert (= (and d!44399 c!26609) b!141383))

(assert (= (and d!44399 (not c!26609)) b!141384))

(assert (= (and d!44399 (not res!67463)) b!141385))

(declare-fun m!169341 () Bool)

(assert (=> d!44399 m!169341))

(declare-fun m!169343 () Bool)

(assert (=> b!141383 m!169343))

(declare-fun m!169345 () Bool)

(assert (=> b!141383 m!169345))

(assert (=> b!141383 m!169345))

(declare-fun m!169347 () Bool)

(assert (=> b!141383 m!169347))

(assert (=> b!141385 m!169345))

(assert (=> b!141385 m!169345))

(assert (=> b!141385 m!169347))

(assert (=> d!44011 d!44399))

(declare-fun b!141386 () Bool)

(declare-fun e!92139 () (_ BitVec 32))

(declare-fun e!92138 () (_ BitVec 32))

(assert (=> b!141386 (= e!92139 e!92138)))

(declare-fun c!26611 () Bool)

(assert (=> b!141386 (= c!26611 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141387 () Bool)

(declare-fun call!15672 () (_ BitVec 32))

(assert (=> b!141387 (= e!92138 (bvadd #b00000000000000000000000000000001 call!15672))))

(declare-fun d!44401 () Bool)

(declare-fun lt!74066 () (_ BitVec 32))

(assert (=> d!44401 (and (bvsge lt!74066 #b00000000000000000000000000000000) (bvsle lt!74066 (bvsub (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44401 (= lt!74066 e!92139)))

(declare-fun c!26610 () Bool)

(assert (=> d!44401 (= c!26610 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!44401 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!44401 (= (arrayCountValidKeys!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))) lt!74066)))

(declare-fun b!141388 () Bool)

(assert (=> b!141388 (= e!92139 #b00000000000000000000000000000000)))

(declare-fun b!141389 () Bool)

(assert (=> b!141389 (= e!92138 call!15672)))

(declare-fun bm!15669 () Bool)

(assert (=> bm!15669 (= call!15672 (arrayCountValidKeys!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!44401 c!26610) b!141388))

(assert (= (and d!44401 (not c!26610)) b!141386))

(assert (= (and b!141386 c!26611) b!141387))

(assert (= (and b!141386 (not c!26611)) b!141389))

(assert (= (or b!141387 b!141389) bm!15669))

(declare-fun m!169349 () Bool)

(assert (=> b!141386 m!169349))

(assert (=> b!141386 m!169349))

(declare-fun m!169351 () Bool)

(assert (=> b!141386 m!169351))

(declare-fun m!169353 () Bool)

(assert (=> bm!15669 m!169353))

(assert (=> bm!15660 d!44401))

(declare-fun d!44403 () Bool)

(declare-fun e!92141 () Bool)

(assert (=> d!44403 e!92141))

(declare-fun res!67464 () Bool)

(assert (=> d!44403 (=> res!67464 e!92141)))

(declare-fun lt!74070 () Bool)

(assert (=> d!44403 (= res!67464 (not lt!74070))))

(declare-fun lt!74069 () Bool)

(assert (=> d!44403 (= lt!74070 lt!74069)))

(declare-fun lt!74068 () Unit!4393)

(declare-fun e!92140 () Unit!4393)

(assert (=> d!44403 (= lt!74068 e!92140)))

(declare-fun c!26612 () Bool)

(assert (=> d!44403 (= c!26612 lt!74069)))

(assert (=> d!44403 (= lt!74069 (containsKey!178 (toList!871 lt!73755) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44403 (= (contains!910 lt!73755 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74070)))

(declare-fun b!141390 () Bool)

(declare-fun lt!74067 () Unit!4393)

(assert (=> b!141390 (= e!92140 lt!74067)))

(assert (=> b!141390 (= lt!74067 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73755) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> b!141390 (isDefined!128 (getValueByKey!174 (toList!871 lt!73755) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141391 () Bool)

(declare-fun Unit!4461 () Unit!4393)

(assert (=> b!141391 (= e!92140 Unit!4461)))

(declare-fun b!141392 () Bool)

(assert (=> b!141392 (= e!92141 (isDefined!128 (getValueByKey!174 (toList!871 lt!73755) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!44403 c!26612) b!141390))

(assert (= (and d!44403 (not c!26612)) b!141391))

(assert (= (and d!44403 (not res!67464)) b!141392))

(declare-fun m!169355 () Bool)

(assert (=> d!44403 m!169355))

(declare-fun m!169357 () Bool)

(assert (=> b!141390 m!169357))

(assert (=> b!141390 m!168325))

(assert (=> b!141390 m!168325))

(declare-fun m!169359 () Bool)

(assert (=> b!141390 m!169359))

(assert (=> b!141392 m!168325))

(assert (=> b!141392 m!168325))

(assert (=> b!141392 m!169359))

(assert (=> d!44045 d!44403))

(declare-fun b!141396 () Bool)

(declare-fun e!92143 () Option!180)

(assert (=> b!141396 (= e!92143 None!178)))

(declare-fun b!141394 () Bool)

(declare-fun e!92142 () Option!180)

(assert (=> b!141394 (= e!92142 e!92143)))

(declare-fun c!26614 () Bool)

(assert (=> b!141394 (= c!26614 (and ((_ is Cons!1735) lt!73756) (not (= (_1!1339 (h!2342 lt!73756)) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!141393 () Bool)

(assert (=> b!141393 (= e!92142 (Some!179 (_2!1339 (h!2342 lt!73756))))))

(declare-fun c!26613 () Bool)

(declare-fun d!44405 () Bool)

(assert (=> d!44405 (= c!26613 (and ((_ is Cons!1735) lt!73756) (= (_1!1339 (h!2342 lt!73756)) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!44405 (= (getValueByKey!174 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92142)))

(declare-fun b!141395 () Bool)

(assert (=> b!141395 (= e!92143 (getValueByKey!174 (t!6314 lt!73756) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44405 c!26613) b!141393))

(assert (= (and d!44405 (not c!26613)) b!141394))

(assert (= (and b!141394 c!26614) b!141395))

(assert (= (and b!141394 (not c!26614)) b!141396))

(declare-fun m!169361 () Bool)

(assert (=> b!141395 m!169361))

(assert (=> d!44045 d!44405))

(declare-fun d!44407 () Bool)

(assert (=> d!44407 (= (getValueByKey!174 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74071 () Unit!4393)

(assert (=> d!44407 (= lt!74071 (choose!872 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92144 () Bool)

(assert (=> d!44407 e!92144))

(declare-fun res!67465 () Bool)

(assert (=> d!44407 (=> (not res!67465) (not e!92144))))

(assert (=> d!44407 (= res!67465 (isStrictlySorted!320 lt!73756))))

(assert (=> d!44407 (= (lemmaContainsTupThenGetReturnValue!91 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74071)))

(declare-fun b!141397 () Bool)

(declare-fun res!67466 () Bool)

(assert (=> b!141397 (=> (not res!67466) (not e!92144))))

(assert (=> b!141397 (= res!67466 (containsKey!178 lt!73756 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141398 () Bool)

(assert (=> b!141398 (= e!92144 (contains!914 lt!73756 (tuple2!2657 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!44407 res!67465) b!141397))

(assert (= (and b!141397 res!67466) b!141398))

(assert (=> d!44407 m!168319))

(declare-fun m!169363 () Bool)

(assert (=> d!44407 m!169363))

(declare-fun m!169365 () Bool)

(assert (=> d!44407 m!169365))

(declare-fun m!169367 () Bool)

(assert (=> b!141397 m!169367))

(declare-fun m!169369 () Bool)

(assert (=> b!141398 m!169369))

(assert (=> d!44045 d!44407))

(declare-fun b!141399 () Bool)

(declare-fun e!92147 () List!1739)

(declare-fun call!15675 () List!1739)

(assert (=> b!141399 (= e!92147 call!15675)))

(declare-fun b!141400 () Bool)

(declare-fun e!92145 () List!1739)

(declare-fun call!15674 () List!1739)

(assert (=> b!141400 (= e!92145 call!15674)))

(declare-fun lt!74072 () List!1739)

(declare-fun e!92148 () Bool)

(declare-fun b!141401 () Bool)

(assert (=> b!141401 (= e!92148 (contains!914 lt!74072 (tuple2!2657 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun bm!15670 () Bool)

(declare-fun e!92146 () List!1739)

(declare-fun c!26618 () Bool)

(assert (=> bm!15670 (= call!15675 ($colon$colon!93 e!92146 (ite c!26618 (h!2342 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (tuple2!2657 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun c!26615 () Bool)

(assert (=> bm!15670 (= c!26615 c!26618)))

(declare-fun bm!15671 () Bool)

(declare-fun call!15673 () List!1739)

(assert (=> bm!15671 (= call!15674 call!15673)))

(declare-fun b!141402 () Bool)

(declare-fun res!67467 () Bool)

(assert (=> b!141402 (=> (not res!67467) (not e!92148))))

(assert (=> b!141402 (= res!67467 (containsKey!178 lt!74072 (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun d!44409 () Bool)

(assert (=> d!44409 e!92148))

(declare-fun res!67468 () Bool)

(assert (=> d!44409 (=> (not res!67468) (not e!92148))))

(assert (=> d!44409 (= res!67468 (isStrictlySorted!320 lt!74072))))

(assert (=> d!44409 (= lt!74072 e!92147)))

(assert (=> d!44409 (= c!26618 (and ((_ is Cons!1735) (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (bvslt (_1!1339 (h!2342 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!44409 (isStrictlySorted!320 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))))))

(assert (=> d!44409 (= (insertStrictlySorted!94 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74072)))

(declare-fun c!26616 () Bool)

(declare-fun c!26617 () Bool)

(declare-fun b!141403 () Bool)

(assert (=> b!141403 (= e!92146 (ite c!26617 (t!6314 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (ite c!26616 (Cons!1735 (h!2342 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (t!6314 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))))) Nil!1736)))))

(declare-fun b!141404 () Bool)

(assert (=> b!141404 (= c!26616 (and ((_ is Cons!1735) (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (bvsgt (_1!1339 (h!2342 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun e!92149 () List!1739)

(assert (=> b!141404 (= e!92149 e!92145)))

(declare-fun b!141405 () Bool)

(assert (=> b!141405 (= e!92145 call!15674)))

(declare-fun b!141406 () Bool)

(assert (=> b!141406 (= e!92146 (insertStrictlySorted!94 (t!6314 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun bm!15672 () Bool)

(assert (=> bm!15672 (= call!15673 call!15675)))

(declare-fun b!141407 () Bool)

(assert (=> b!141407 (= e!92147 e!92149)))

(assert (=> b!141407 (= c!26617 (and ((_ is Cons!1735) (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531)))) (= (_1!1339 (h!2342 (toList!871 (ite c!26263 call!15533 (ite c!26266 call!15536 call!15531))))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141408 () Bool)

(assert (=> b!141408 (= e!92149 call!15673)))

(assert (= (and d!44409 c!26618) b!141399))

(assert (= (and d!44409 (not c!26618)) b!141407))

(assert (= (and b!141407 c!26617) b!141408))

(assert (= (and b!141407 (not c!26617)) b!141404))

(assert (= (and b!141404 c!26616) b!141400))

(assert (= (and b!141404 (not c!26616)) b!141405))

(assert (= (or b!141400 b!141405) bm!15671))

(assert (= (or b!141408 bm!15671) bm!15672))

(assert (= (or b!141399 bm!15672) bm!15670))

(assert (= (and bm!15670 c!26615) b!141406))

(assert (= (and bm!15670 (not c!26615)) b!141403))

(assert (= (and d!44409 res!67468) b!141402))

(assert (= (and b!141402 res!67467) b!141401))

(declare-fun m!169371 () Bool)

(assert (=> b!141402 m!169371))

(declare-fun m!169373 () Bool)

(assert (=> b!141406 m!169373))

(declare-fun m!169375 () Bool)

(assert (=> bm!15670 m!169375))

(declare-fun m!169377 () Bool)

(assert (=> b!141401 m!169377))

(declare-fun m!169379 () Bool)

(assert (=> d!44409 m!169379))

(declare-fun m!169381 () Bool)

(assert (=> d!44409 m!169381))

(assert (=> d!44045 d!44409))

(declare-fun d!44411 () Bool)

(declare-fun lt!74073 () Bool)

(assert (=> d!44411 (= lt!74073 (select (content!138 lt!73841) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92151 () Bool)

(assert (=> d!44411 (= lt!74073 e!92151)))

(declare-fun res!67469 () Bool)

(assert (=> d!44411 (=> (not res!67469) (not e!92151))))

(assert (=> d!44411 (= res!67469 ((_ is Cons!1735) lt!73841))))

(assert (=> d!44411 (= (contains!914 lt!73841 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74073)))

(declare-fun b!141409 () Bool)

(declare-fun e!92150 () Bool)

(assert (=> b!141409 (= e!92151 e!92150)))

(declare-fun res!67470 () Bool)

(assert (=> b!141409 (=> res!67470 e!92150)))

(assert (=> b!141409 (= res!67470 (= (h!2342 lt!73841) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141410 () Bool)

(assert (=> b!141410 (= e!92150 (contains!914 (t!6314 lt!73841) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44411 res!67469) b!141409))

(assert (= (and b!141409 (not res!67470)) b!141410))

(declare-fun m!169383 () Bool)

(assert (=> d!44411 m!169383))

(declare-fun m!169385 () Bool)

(assert (=> d!44411 m!169385))

(declare-fun m!169387 () Bool)

(assert (=> b!141410 m!169387))

(assert (=> b!141006 d!44411))

(declare-fun d!44413 () Bool)

(declare-fun lt!74074 () Bool)

(assert (=> d!44413 (= lt!74074 (select (content!138 lt!73402) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92153 () Bool)

(assert (=> d!44413 (= lt!74074 e!92153)))

(declare-fun res!67471 () Bool)

(assert (=> d!44413 (=> (not res!67471) (not e!92153))))

(assert (=> d!44413 (= res!67471 ((_ is Cons!1735) lt!73402))))

(assert (=> d!44413 (= (contains!914 lt!73402 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74074)))

(declare-fun b!141411 () Bool)

(declare-fun e!92152 () Bool)

(assert (=> b!141411 (= e!92153 e!92152)))

(declare-fun res!67472 () Bool)

(assert (=> b!141411 (=> res!67472 e!92152)))

(assert (=> b!141411 (= res!67472 (= (h!2342 lt!73402) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141412 () Bool)

(assert (=> b!141412 (= e!92152 (contains!914 (t!6314 lt!73402) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44413 res!67471) b!141411))

(assert (= (and b!141411 (not res!67472)) b!141412))

(declare-fun m!169389 () Bool)

(assert (=> d!44413 m!169389))

(declare-fun m!169391 () Bool)

(assert (=> d!44413 m!169391))

(declare-fun m!169393 () Bool)

(assert (=> b!141412 m!169393))

(assert (=> b!140535 d!44413))

(declare-fun d!44415 () Bool)

(assert (=> d!44415 (= (get!1528 (getValueByKey!174 (toList!871 lt!73141) lt!73136)) (v!3279 (getValueByKey!174 (toList!871 lt!73141) lt!73136)))))

(assert (=> d!44079 d!44415))

(declare-fun b!141416 () Bool)

(declare-fun e!92155 () Option!180)

(assert (=> b!141416 (= e!92155 None!178)))

(declare-fun b!141414 () Bool)

(declare-fun e!92154 () Option!180)

(assert (=> b!141414 (= e!92154 e!92155)))

(declare-fun c!26620 () Bool)

(assert (=> b!141414 (= c!26620 (and ((_ is Cons!1735) (toList!871 lt!73141)) (not (= (_1!1339 (h!2342 (toList!871 lt!73141))) lt!73136))))))

(declare-fun b!141413 () Bool)

(assert (=> b!141413 (= e!92154 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73141)))))))

(declare-fun d!44417 () Bool)

(declare-fun c!26619 () Bool)

(assert (=> d!44417 (= c!26619 (and ((_ is Cons!1735) (toList!871 lt!73141)) (= (_1!1339 (h!2342 (toList!871 lt!73141))) lt!73136)))))

(assert (=> d!44417 (= (getValueByKey!174 (toList!871 lt!73141) lt!73136) e!92154)))

(declare-fun b!141415 () Bool)

(assert (=> b!141415 (= e!92155 (getValueByKey!174 (t!6314 (toList!871 lt!73141)) lt!73136))))

(assert (= (and d!44417 c!26619) b!141413))

(assert (= (and d!44417 (not c!26619)) b!141414))

(assert (= (and b!141414 c!26620) b!141415))

(assert (= (and b!141414 (not c!26620)) b!141416))

(declare-fun m!169395 () Bool)

(assert (=> b!141415 m!169395))

(assert (=> d!44079 d!44417))

(declare-fun d!44419 () Bool)

(assert (=> d!44419 (= ($colon$colon!93 e!91892 (ite c!26514 (h!2342 (toList!871 call!15435)) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (Cons!1735 (ite c!26514 (h!2342 (toList!871 call!15435)) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91892))))

(assert (=> bm!15636 d!44419))

(declare-fun d!44421 () Bool)

(declare-fun res!67473 () Bool)

(declare-fun e!92156 () Bool)

(assert (=> d!44421 (=> res!67473 e!92156)))

(assert (=> d!44421 (= res!67473 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15492))) (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15492)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (=> d!44421 (= (containsKey!178 (t!6314 (toList!871 call!15492)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) e!92156)))

(declare-fun b!141417 () Bool)

(declare-fun e!92157 () Bool)

(assert (=> b!141417 (= e!92156 e!92157)))

(declare-fun res!67474 () Bool)

(assert (=> b!141417 (=> (not res!67474) (not e!92157))))

(assert (=> b!141417 (= res!67474 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 call!15492)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 call!15492)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))) ((_ is Cons!1735) (t!6314 (toList!871 call!15492))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 call!15492)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(declare-fun b!141418 () Bool)

(assert (=> b!141418 (= e!92157 (containsKey!178 (t!6314 (t!6314 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!44421 (not res!67473)) b!141417))

(assert (= (and b!141417 res!67474) b!141418))

(assert (=> b!141418 m!166633))

(declare-fun m!169397 () Bool)

(assert (=> b!141418 m!169397))

(assert (=> b!140504 d!44421))

(declare-fun d!44423 () Bool)

(assert (=> d!44423 (isDefined!128 (getValueByKey!174 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun lt!74075 () Unit!4393)

(assert (=> d!44423 (= lt!74075 (choose!871 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!92158 () Bool)

(assert (=> d!44423 e!92158))

(declare-fun res!67475 () Bool)

(assert (=> d!44423 (=> (not res!67475) (not e!92158))))

(assert (=> d!44423 (= res!67475 (isStrictlySorted!320 (toList!871 (map!1424 (_2!1340 lt!73342)))))))

(assert (=> d!44423 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!74075)))

(declare-fun b!141419 () Bool)

(assert (=> b!141419 (= e!92158 (containsKey!178 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44423 res!67475) b!141419))

(assert (=> d!44423 m!166407))

(assert (=> d!44423 m!168875))

(assert (=> d!44423 m!168875))

(assert (=> d!44423 m!168877))

(assert (=> d!44423 m!166407))

(declare-fun m!169399 () Bool)

(assert (=> d!44423 m!169399))

(declare-fun m!169401 () Bool)

(assert (=> d!44423 m!169401))

(assert (=> b!141419 m!166407))

(assert (=> b!141419 m!168871))

(assert (=> b!141185 d!44423))

(declare-fun d!44425 () Bool)

(assert (=> d!44425 (= (isDefined!128 (getValueByKey!174 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!174 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun bs!5918 () Bool)

(assert (= bs!5918 d!44425))

(assert (=> bs!5918 m!168875))

(declare-fun m!169403 () Bool)

(assert (=> bs!5918 m!169403))

(assert (=> b!141185 d!44425))

(declare-fun b!141423 () Bool)

(declare-fun e!92160 () Option!180)

(assert (=> b!141423 (= e!92160 None!178)))

(declare-fun b!141421 () Bool)

(declare-fun e!92159 () Option!180)

(assert (=> b!141421 (= e!92159 e!92160)))

(declare-fun c!26622 () Bool)

(assert (=> b!141421 (= c!26622 (and ((_ is Cons!1735) (toList!871 (map!1424 (_2!1340 lt!73342)))) (not (= (_1!1339 (h!2342 (toList!871 (map!1424 (_2!1340 lt!73342))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!141420 () Bool)

(assert (=> b!141420 (= e!92159 (Some!179 (_2!1339 (h!2342 (toList!871 (map!1424 (_2!1340 lt!73342)))))))))

(declare-fun c!26621 () Bool)

(declare-fun d!44427 () Bool)

(assert (=> d!44427 (= c!26621 (and ((_ is Cons!1735) (toList!871 (map!1424 (_2!1340 lt!73342)))) (= (_1!1339 (h!2342 (toList!871 (map!1424 (_2!1340 lt!73342))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44427 (= (getValueByKey!174 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92159)))

(declare-fun b!141422 () Bool)

(assert (=> b!141422 (= e!92160 (getValueByKey!174 (t!6314 (toList!871 (map!1424 (_2!1340 lt!73342)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44427 c!26621) b!141420))

(assert (= (and d!44427 (not c!26621)) b!141421))

(assert (= (and b!141421 c!26622) b!141422))

(assert (= (and b!141421 (not c!26622)) b!141423))

(assert (=> b!141422 m!166407))

(declare-fun m!169405 () Bool)

(assert (=> b!141422 m!169405))

(assert (=> b!141185 d!44427))

(declare-fun b!141427 () Bool)

(declare-fun e!92162 () Option!180)

(assert (=> b!141427 (= e!92162 None!178)))

(declare-fun b!141425 () Bool)

(declare-fun e!92161 () Option!180)

(assert (=> b!141425 (= e!92161 e!92162)))

(declare-fun c!26624 () Bool)

(assert (=> b!141425 (= c!26624 (and ((_ is Cons!1735) (toList!871 lt!73482)) (not (= (_1!1339 (h!2342 (toList!871 lt!73482))) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))))

(declare-fun b!141424 () Bool)

(assert (=> b!141424 (= e!92161 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73482)))))))

(declare-fun c!26623 () Bool)

(declare-fun d!44429 () Bool)

(assert (=> d!44429 (= c!26623 (and ((_ is Cons!1735) (toList!871 lt!73482)) (= (_1!1339 (h!2342 (toList!871 lt!73482))) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(assert (=> d!44429 (= (getValueByKey!174 (toList!871 lt!73482) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) e!92161)))

(declare-fun b!141426 () Bool)

(assert (=> b!141426 (= e!92162 (getValueByKey!174 (t!6314 (toList!871 lt!73482)) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (= (and d!44429 c!26623) b!141424))

(assert (= (and d!44429 (not c!26623)) b!141425))

(assert (= (and b!141425 c!26624) b!141426))

(assert (= (and b!141425 (not c!26624)) b!141427))

(declare-fun m!169407 () Bool)

(assert (=> b!141426 m!169407))

(assert (=> b!140432 d!44429))

(declare-fun d!44431 () Bool)

(declare-fun e!92163 () Bool)

(assert (=> d!44431 e!92163))

(declare-fun res!67477 () Bool)

(assert (=> d!44431 (=> (not res!67477) (not e!92163))))

(declare-fun lt!74078 () ListLongMap!1711)

(assert (=> d!44431 (= res!67477 (contains!910 lt!74078 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74079 () List!1739)

(assert (=> d!44431 (= lt!74078 (ListLongMap!1712 lt!74079))))

(declare-fun lt!74076 () Unit!4393)

(declare-fun lt!74077 () Unit!4393)

(assert (=> d!44431 (= lt!74076 lt!74077)))

(assert (=> d!44431 (= (getValueByKey!174 lt!74079 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44431 (= lt!74077 (lemmaContainsTupThenGetReturnValue!91 lt!74079 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44431 (= lt!74079 (insertStrictlySorted!94 (toList!871 call!15620) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44431 (= (+!167 call!15620 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74078)))

(declare-fun b!141428 () Bool)

(declare-fun res!67476 () Bool)

(assert (=> b!141428 (=> (not res!67476) (not e!92163))))

(assert (=> b!141428 (= res!67476 (= (getValueByKey!174 (toList!871 lt!74078) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141429 () Bool)

(assert (=> b!141429 (= e!92163 (contains!914 (toList!871 lt!74078) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!44431 res!67477) b!141428))

(assert (= (and b!141428 res!67476) b!141429))

(declare-fun m!169409 () Bool)

(assert (=> d!44431 m!169409))

(declare-fun m!169411 () Bool)

(assert (=> d!44431 m!169411))

(declare-fun m!169413 () Bool)

(assert (=> d!44431 m!169413))

(declare-fun m!169415 () Bool)

(assert (=> d!44431 m!169415))

(declare-fun m!169417 () Bool)

(assert (=> b!141428 m!169417))

(declare-fun m!169419 () Bool)

(assert (=> b!141429 m!169419))

(assert (=> b!140823 d!44431))

(declare-fun d!44433 () Bool)

(assert (=> d!44433 (arrayContainsKey!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 #b00000000000000000000000000000000)))

(declare-fun lt!74080 () Unit!4393)

(assert (=> d!44433 (= lt!74080 (choose!13 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 #b00000000000000000000000000000000))))

(assert (=> d!44433 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44433 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 #b00000000000000000000000000000000) lt!74080)))

(declare-fun bs!5919 () Bool)

(assert (= bs!5919 d!44433))

(assert (=> bs!5919 m!168787))

(declare-fun m!169421 () Bool)

(assert (=> bs!5919 m!169421))

(assert (=> b!141107 d!44433))

(declare-fun d!44435 () Bool)

(declare-fun res!67478 () Bool)

(declare-fun e!92164 () Bool)

(assert (=> d!44435 (=> res!67478 e!92164)))

(assert (=> d!44435 (= res!67478 (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) lt!73907))))

(assert (=> d!44435 (= (arrayContainsKey!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 #b00000000000000000000000000000000) e!92164)))

(declare-fun b!141430 () Bool)

(declare-fun e!92165 () Bool)

(assert (=> b!141430 (= e!92164 e!92165)))

(declare-fun res!67479 () Bool)

(assert (=> b!141430 (=> (not res!67479) (not e!92165))))

(assert (=> b!141430 (= res!67479 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun b!141431 () Bool)

(assert (=> b!141431 (= e!92165 (arrayContainsKey!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73907 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44435 (not res!67478)) b!141430))

(assert (= (and b!141430 res!67479) b!141431))

(assert (=> d!44435 m!168705))

(declare-fun m!169423 () Bool)

(assert (=> b!141431 m!169423))

(assert (=> b!141107 d!44435))

(declare-fun b!141432 () Bool)

(declare-fun c!26627 () Bool)

(declare-fun lt!74082 () (_ BitVec 64))

(assert (=> b!141432 (= c!26627 (= lt!74082 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92168 () SeekEntryResult!282)

(declare-fun e!92167 () SeekEntryResult!282)

(assert (=> b!141432 (= e!92168 e!92167)))

(declare-fun b!141433 () Bool)

(declare-fun e!92166 () SeekEntryResult!282)

(assert (=> b!141433 (= e!92166 Undefined!282)))

(declare-fun b!141434 () Bool)

(declare-fun lt!74083 () SeekEntryResult!282)

(assert (=> b!141434 (= e!92168 (Found!282 (index!3293 lt!74083)))))

(declare-fun b!141435 () Bool)

(assert (=> b!141435 (= e!92167 (seekKeyOrZeroReturnVacant!0 (x!16138 lt!74083) (index!3293 lt!74083) (index!3293 lt!74083) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)))))

(declare-fun d!44437 () Bool)

(declare-fun lt!74081 () SeekEntryResult!282)

(assert (=> d!44437 (and (or ((_ is Undefined!282) lt!74081) (not ((_ is Found!282) lt!74081)) (and (bvsge (index!3292 lt!74081) #b00000000000000000000000000000000) (bvslt (index!3292 lt!74081) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))) (or ((_ is Undefined!282) lt!74081) ((_ is Found!282) lt!74081) (not ((_ is MissingZero!282) lt!74081)) (and (bvsge (index!3291 lt!74081) #b00000000000000000000000000000000) (bvslt (index!3291 lt!74081) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))) (or ((_ is Undefined!282) lt!74081) ((_ is Found!282) lt!74081) ((_ is MissingZero!282) lt!74081) (not ((_ is MissingVacant!282) lt!74081)) (and (bvsge (index!3294 lt!74081) #b00000000000000000000000000000000) (bvslt (index!3294 lt!74081) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))) (or ((_ is Undefined!282) lt!74081) (ite ((_ is Found!282) lt!74081) (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (index!3292 lt!74081)) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!282) lt!74081) (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (index!3291 lt!74081)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!282) lt!74081) (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (index!3294 lt!74081)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44437 (= lt!74081 e!92166)))

(declare-fun c!26625 () Bool)

(assert (=> d!44437 (= c!26625 (and ((_ is Intermediate!282) lt!74083) (undefined!1094 lt!74083)))))

(assert (=> d!44437 (= lt!74083 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) (mask!7278 newMap!16)) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)))))

(assert (=> d!44437 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44437 (= (seekEntryOrOpen!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)) lt!74081)))

(declare-fun b!141436 () Bool)

(assert (=> b!141436 (= e!92167 (MissingZero!282 (index!3293 lt!74083)))))

(declare-fun b!141437 () Bool)

(assert (=> b!141437 (= e!92166 e!92168)))

(assert (=> b!141437 (= lt!74082 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (index!3293 lt!74083)))))

(declare-fun c!26626 () Bool)

(assert (=> b!141437 (= c!26626 (= lt!74082 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!44437 c!26625) b!141433))

(assert (= (and d!44437 (not c!26625)) b!141437))

(assert (= (and b!141437 c!26626) b!141434))

(assert (= (and b!141437 (not c!26626)) b!141432))

(assert (= (and b!141432 c!26627) b!141436))

(assert (= (and b!141432 (not c!26627)) b!141435))

(assert (=> b!141435 m!168705))

(declare-fun m!169425 () Bool)

(assert (=> b!141435 m!169425))

(assert (=> d!44437 m!168705))

(declare-fun m!169427 () Bool)

(assert (=> d!44437 m!169427))

(declare-fun m!169429 () Bool)

(assert (=> d!44437 m!169429))

(assert (=> d!44437 m!169427))

(assert (=> d!44437 m!168705))

(declare-fun m!169431 () Bool)

(assert (=> d!44437 m!169431))

(declare-fun m!169433 () Bool)

(assert (=> d!44437 m!169433))

(assert (=> d!44437 m!166687))

(declare-fun m!169435 () Bool)

(assert (=> d!44437 m!169435))

(declare-fun m!169437 () Bool)

(assert (=> b!141437 m!169437))

(assert (=> b!141107 d!44437))

(declare-fun d!44439 () Bool)

(declare-fun res!67480 () Bool)

(declare-fun e!92169 () Bool)

(assert (=> d!44439 (=> res!67480 e!92169)))

(assert (=> d!44439 (= res!67480 (and ((_ is Cons!1735) (toList!871 lt!73410)) (= (_1!1339 (h!2342 (toList!871 lt!73410))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44439 (= (containsKey!178 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92169)))

(declare-fun b!141438 () Bool)

(declare-fun e!92170 () Bool)

(assert (=> b!141438 (= e!92169 e!92170)))

(declare-fun res!67481 () Bool)

(assert (=> b!141438 (=> (not res!67481) (not e!92170))))

(assert (=> b!141438 (= res!67481 (and (or (not ((_ is Cons!1735) (toList!871 lt!73410))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73410))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) (toList!871 lt!73410)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73410))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141439 () Bool)

(assert (=> b!141439 (= e!92170 (containsKey!178 (t!6314 (toList!871 lt!73410)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44439 (not res!67480)) b!141438))

(assert (= (and b!141438 res!67481) b!141439))

(declare-fun m!169439 () Bool)

(assert (=> b!141439 m!169439))

(assert (=> d!44175 d!44439))

(declare-fun d!44441 () Bool)

(declare-fun e!92171 () Bool)

(assert (=> d!44441 e!92171))

(declare-fun res!67483 () Bool)

(assert (=> d!44441 (=> (not res!67483) (not e!92171))))

(declare-fun lt!74086 () ListLongMap!1711)

(assert (=> d!44441 (= res!67483 (contains!910 lt!74086 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74087 () List!1739)

(assert (=> d!44441 (= lt!74086 (ListLongMap!1712 lt!74087))))

(declare-fun lt!74084 () Unit!4393)

(declare-fun lt!74085 () Unit!4393)

(assert (=> d!44441 (= lt!74084 lt!74085)))

(assert (=> d!44441 (= (getValueByKey!174 lt!74087 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44441 (= lt!74085 (lemmaContainsTupThenGetReturnValue!91 lt!74087 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44441 (= lt!74087 (insertStrictlySorted!94 (toList!871 call!15570) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44441 (= (+!167 call!15570 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74086)))

(declare-fun b!141440 () Bool)

(declare-fun res!67482 () Bool)

(assert (=> b!141440 (=> (not res!67482) (not e!92171))))

(assert (=> b!141440 (= res!67482 (= (getValueByKey!174 (toList!871 lt!74086) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141441 () Bool)

(assert (=> b!141441 (= e!92171 (contains!914 (toList!871 lt!74086) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44441 res!67483) b!141440))

(assert (= (and b!141440 res!67482) b!141441))

(declare-fun m!169441 () Bool)

(assert (=> d!44441 m!169441))

(declare-fun m!169443 () Bool)

(assert (=> d!44441 m!169443))

(declare-fun m!169445 () Bool)

(assert (=> d!44441 m!169445))

(declare-fun m!169447 () Bool)

(assert (=> d!44441 m!169447))

(declare-fun m!169449 () Bool)

(assert (=> b!141440 m!169449))

(declare-fun m!169451 () Bool)

(assert (=> b!141441 m!169451))

(assert (=> b!140456 d!44441))

(declare-fun d!44443 () Bool)

(declare-fun c!26628 () Bool)

(assert (=> d!44443 (= c!26628 ((_ is ValueCellFull!1121) (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!92172 () V!3553)

(assert (=> d!44443 (= (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92172)))

(declare-fun b!141442 () Bool)

(assert (=> b!141442 (= e!92172 (get!1526 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141443 () Bool)

(assert (=> b!141443 (= e!92172 (get!1527 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44443 c!26628) b!141442))

(assert (= (and d!44443 (not c!26628)) b!141443))

(assert (=> b!141442 m!167491))

(assert (=> b!141442 m!166425))

(declare-fun m!169453 () Bool)

(assert (=> b!141442 m!169453))

(assert (=> b!141443 m!167491))

(assert (=> b!141443 m!166425))

(declare-fun m!169455 () Bool)

(assert (=> b!141443 m!169455))

(assert (=> b!140456 d!44443))

(declare-fun d!44445 () Bool)

(assert (=> d!44445 (not (contains!910 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506)) lt!73503))))

(declare-fun lt!74088 () Unit!4393)

(assert (=> d!44445 (= lt!74088 (choose!874 lt!73505 lt!73507 lt!73506 lt!73503))))

(declare-fun e!92173 () Bool)

(assert (=> d!44445 e!92173))

(declare-fun res!67484 () Bool)

(assert (=> d!44445 (=> (not res!67484) (not e!92173))))

(assert (=> d!44445 (= res!67484 (not (contains!910 lt!73505 lt!73503)))))

(assert (=> d!44445 (= (addStillNotContains!65 lt!73505 lt!73507 lt!73506 lt!73503) lt!74088)))

(declare-fun b!141444 () Bool)

(assert (=> b!141444 (= e!92173 (not (= lt!73507 lt!73503)))))

(assert (= (and d!44445 res!67484) b!141444))

(assert (=> d!44445 m!167501))

(assert (=> d!44445 m!167501))

(assert (=> d!44445 m!167507))

(declare-fun m!169457 () Bool)

(assert (=> d!44445 m!169457))

(declare-fun m!169459 () Bool)

(assert (=> d!44445 m!169459))

(assert (=> b!140456 d!44445))

(declare-fun d!44447 () Bool)

(declare-fun e!92174 () Bool)

(assert (=> d!44447 e!92174))

(declare-fun res!67486 () Bool)

(assert (=> d!44447 (=> (not res!67486) (not e!92174))))

(declare-fun lt!74091 () ListLongMap!1711)

(assert (=> d!44447 (= res!67486 (contains!910 lt!74091 (_1!1339 (tuple2!2657 lt!73507 lt!73506))))))

(declare-fun lt!74092 () List!1739)

(assert (=> d!44447 (= lt!74091 (ListLongMap!1712 lt!74092))))

(declare-fun lt!74089 () Unit!4393)

(declare-fun lt!74090 () Unit!4393)

(assert (=> d!44447 (= lt!74089 lt!74090)))

(assert (=> d!44447 (= (getValueByKey!174 lt!74092 (_1!1339 (tuple2!2657 lt!73507 lt!73506))) (Some!179 (_2!1339 (tuple2!2657 lt!73507 lt!73506))))))

(assert (=> d!44447 (= lt!74090 (lemmaContainsTupThenGetReturnValue!91 lt!74092 (_1!1339 (tuple2!2657 lt!73507 lt!73506)) (_2!1339 (tuple2!2657 lt!73507 lt!73506))))))

(assert (=> d!44447 (= lt!74092 (insertStrictlySorted!94 (toList!871 lt!73505) (_1!1339 (tuple2!2657 lt!73507 lt!73506)) (_2!1339 (tuple2!2657 lt!73507 lt!73506))))))

(assert (=> d!44447 (= (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506)) lt!74091)))

(declare-fun b!141445 () Bool)

(declare-fun res!67485 () Bool)

(assert (=> b!141445 (=> (not res!67485) (not e!92174))))

(assert (=> b!141445 (= res!67485 (= (getValueByKey!174 (toList!871 lt!74091) (_1!1339 (tuple2!2657 lt!73507 lt!73506))) (Some!179 (_2!1339 (tuple2!2657 lt!73507 lt!73506)))))))

(declare-fun b!141446 () Bool)

(assert (=> b!141446 (= e!92174 (contains!914 (toList!871 lt!74091) (tuple2!2657 lt!73507 lt!73506)))))

(assert (= (and d!44447 res!67486) b!141445))

(assert (= (and b!141445 res!67485) b!141446))

(declare-fun m!169461 () Bool)

(assert (=> d!44447 m!169461))

(declare-fun m!169463 () Bool)

(assert (=> d!44447 m!169463))

(declare-fun m!169465 () Bool)

(assert (=> d!44447 m!169465))

(declare-fun m!169467 () Bool)

(assert (=> d!44447 m!169467))

(declare-fun m!169469 () Bool)

(assert (=> b!141445 m!169469))

(declare-fun m!169471 () Bool)

(assert (=> b!141446 m!169471))

(assert (=> b!140456 d!44447))

(declare-fun d!44449 () Bool)

(declare-fun e!92176 () Bool)

(assert (=> d!44449 e!92176))

(declare-fun res!67487 () Bool)

(assert (=> d!44449 (=> res!67487 e!92176)))

(declare-fun lt!74096 () Bool)

(assert (=> d!44449 (= res!67487 (not lt!74096))))

(declare-fun lt!74095 () Bool)

(assert (=> d!44449 (= lt!74096 lt!74095)))

(declare-fun lt!74094 () Unit!4393)

(declare-fun e!92175 () Unit!4393)

(assert (=> d!44449 (= lt!74094 e!92175)))

(declare-fun c!26629 () Bool)

(assert (=> d!44449 (= c!26629 lt!74095)))

(assert (=> d!44449 (= lt!74095 (containsKey!178 (toList!871 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506))) lt!73503))))

(assert (=> d!44449 (= (contains!910 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506)) lt!73503) lt!74096)))

(declare-fun b!141447 () Bool)

(declare-fun lt!74093 () Unit!4393)

(assert (=> b!141447 (= e!92175 lt!74093)))

(assert (=> b!141447 (= lt!74093 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506))) lt!73503))))

(assert (=> b!141447 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506))) lt!73503))))

(declare-fun b!141448 () Bool)

(declare-fun Unit!4462 () Unit!4393)

(assert (=> b!141448 (= e!92175 Unit!4462)))

(declare-fun b!141449 () Bool)

(assert (=> b!141449 (= e!92176 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73505 (tuple2!2657 lt!73507 lt!73506))) lt!73503)))))

(assert (= (and d!44449 c!26629) b!141447))

(assert (= (and d!44449 (not c!26629)) b!141448))

(assert (= (and d!44449 (not res!67487)) b!141449))

(declare-fun m!169473 () Bool)

(assert (=> d!44449 m!169473))

(declare-fun m!169475 () Bool)

(assert (=> b!141447 m!169475))

(declare-fun m!169477 () Bool)

(assert (=> b!141447 m!169477))

(assert (=> b!141447 m!169477))

(declare-fun m!169479 () Bool)

(assert (=> b!141447 m!169479))

(assert (=> b!141449 m!169477))

(assert (=> b!141449 m!169477))

(assert (=> b!141449 m!169479))

(assert (=> b!140456 d!44449))

(declare-fun d!44451 () Bool)

(declare-fun lt!74097 () Bool)

(assert (=> d!44451 (= lt!74097 (select (content!138 lt!73395) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92178 () Bool)

(assert (=> d!44451 (= lt!74097 e!92178)))

(declare-fun res!67488 () Bool)

(assert (=> d!44451 (=> (not res!67488) (not e!92178))))

(assert (=> d!44451 (= res!67488 ((_ is Cons!1735) lt!73395))))

(assert (=> d!44451 (= (contains!914 lt!73395 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74097)))

(declare-fun b!141450 () Bool)

(declare-fun e!92177 () Bool)

(assert (=> b!141450 (= e!92178 e!92177)))

(declare-fun res!67489 () Bool)

(assert (=> b!141450 (=> res!67489 e!92177)))

(assert (=> b!141450 (= res!67489 (= (h!2342 lt!73395) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141451 () Bool)

(assert (=> b!141451 (= e!92177 (contains!914 (t!6314 lt!73395) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44451 res!67488) b!141450))

(assert (= (and b!141450 (not res!67489)) b!141451))

(declare-fun m!169481 () Bool)

(assert (=> d!44451 m!169481))

(declare-fun m!169483 () Bool)

(assert (=> d!44451 m!169483))

(declare-fun m!169485 () Bool)

(assert (=> b!141451 m!169485))

(assert (=> b!140650 d!44451))

(declare-fun d!44453 () Bool)

(assert (=> d!44453 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73001) lt!73020)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73001) lt!73020))))))

(declare-fun bs!5920 () Bool)

(assert (= bs!5920 d!44453))

(assert (=> bs!5920 m!167167))

(declare-fun m!169487 () Bool)

(assert (=> bs!5920 m!169487))

(assert (=> b!140917 d!44453))

(assert (=> b!140917 d!44029))

(declare-fun b!141452 () Bool)

(assert (=> b!141452 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(assert (=> b!141452 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 lt!73365)))))

(declare-fun lt!74104 () ListLongMap!1711)

(declare-fun e!92179 () Bool)

(assert (=> b!141452 (= e!92179 (= (apply!120 lt!74104 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141453 () Bool)

(declare-fun e!92181 () Bool)

(assert (=> b!141453 (= e!92181 (validKeyInArray!0 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(assert (=> b!141453 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141454 () Bool)

(declare-fun res!67491 () Bool)

(declare-fun e!92182 () Bool)

(assert (=> b!141454 (=> (not res!67491) (not e!92182))))

(assert (=> b!141454 (= res!67491 (not (contains!910 lt!74104 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141455 () Bool)

(declare-fun e!92185 () Bool)

(assert (=> b!141455 (= e!92185 e!92179)))

(assert (=> b!141455 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(declare-fun res!67493 () Bool)

(assert (=> b!141455 (= res!67493 (contains!910 lt!74104 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(assert (=> b!141455 (=> (not res!67493) (not e!92179))))

(declare-fun b!141456 () Bool)

(declare-fun lt!74100 () Unit!4393)

(declare-fun lt!74098 () Unit!4393)

(assert (=> b!141456 (= lt!74100 lt!74098)))

(declare-fun lt!74103 () (_ BitVec 64))

(declare-fun lt!74099 () (_ BitVec 64))

(declare-fun lt!74101 () ListLongMap!1711)

(declare-fun lt!74102 () V!3553)

(assert (=> b!141456 (not (contains!910 (+!167 lt!74101 (tuple2!2657 lt!74103 lt!74102)) lt!74099))))

(assert (=> b!141456 (= lt!74098 (addStillNotContains!65 lt!74101 lt!74103 lt!74102 lt!74099))))

(assert (=> b!141456 (= lt!74099 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141456 (= lt!74102 (get!1523 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141456 (= lt!74103 (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))

(declare-fun call!15676 () ListLongMap!1711)

(assert (=> b!141456 (= lt!74101 call!15676)))

(declare-fun e!92183 () ListLongMap!1711)

(assert (=> b!141456 (= e!92183 (+!167 call!15676 (tuple2!2657 (select (arr!2302 lt!73348) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141457 () Bool)

(assert (=> b!141457 (= e!92182 e!92185)))

(declare-fun c!26633 () Bool)

(assert (=> b!141457 (= c!26633 e!92181)))

(declare-fun res!67490 () Bool)

(assert (=> b!141457 (=> (not res!67490) (not e!92181))))

(assert (=> b!141457 (= res!67490 (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(declare-fun bm!15673 () Bool)

(assert (=> bm!15673 (= call!15676 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141458 () Bool)

(assert (=> b!141458 (= e!92183 call!15676)))

(declare-fun b!141459 () Bool)

(declare-fun e!92180 () Bool)

(assert (=> b!141459 (= e!92185 e!92180)))

(declare-fun c!26631 () Bool)

(assert (=> b!141459 (= c!26631 (bvslt #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(declare-fun d!44455 () Bool)

(assert (=> d!44455 e!92182))

(declare-fun res!67492 () Bool)

(assert (=> d!44455 (=> (not res!67492) (not e!92182))))

(assert (=> d!44455 (= res!67492 (not (contains!910 lt!74104 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92184 () ListLongMap!1711)

(assert (=> d!44455 (= lt!74104 e!92184)))

(declare-fun c!26632 () Bool)

(assert (=> d!44455 (= c!26632 (bvsge #b00000000000000000000000000000000 (size!2575 lt!73348)))))

(assert (=> d!44455 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44455 (= (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74104)))

(declare-fun b!141460 () Bool)

(assert (=> b!141460 (= e!92184 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141461 () Bool)

(assert (=> b!141461 (= e!92180 (isEmpty!421 lt!74104))))

(declare-fun b!141462 () Bool)

(assert (=> b!141462 (= e!92184 e!92183)))

(declare-fun c!26630 () Bool)

(assert (=> b!141462 (= c!26630 (validKeyInArray!0 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(declare-fun b!141463 () Bool)

(assert (=> b!141463 (= e!92180 (= lt!74104 (getCurrentListMapNoExtraKeys!132 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44455 c!26632) b!141460))

(assert (= (and d!44455 (not c!26632)) b!141462))

(assert (= (and b!141462 c!26630) b!141456))

(assert (= (and b!141462 (not c!26630)) b!141458))

(assert (= (or b!141456 b!141458) bm!15673))

(assert (= (and d!44455 res!67492) b!141454))

(assert (= (and b!141454 res!67491) b!141457))

(assert (= (and b!141457 res!67490) b!141453))

(assert (= (and b!141457 c!26633) b!141455))

(assert (= (and b!141457 (not c!26633)) b!141459))

(assert (= (and b!141455 res!67493) b!141452))

(assert (= (and b!141459 c!26631) b!141463))

(assert (= (and b!141459 (not c!26631)) b!141461))

(declare-fun b_lambda!6341 () Bool)

(assert (=> (not b_lambda!6341) (not b!141452)))

(assert (=> b!141452 t!6328))

(declare-fun b_and!8833 () Bool)

(assert (= b_and!8829 (and (=> t!6328 result!4187) b_and!8833)))

(assert (=> b!141452 t!6330))

(declare-fun b_and!8835 () Bool)

(assert (= b_and!8831 (and (=> t!6330 result!4189) b_and!8835)))

(declare-fun b_lambda!6343 () Bool)

(assert (=> (not b_lambda!6343) (not b!141456)))

(assert (=> b!141456 t!6328))

(declare-fun b_and!8837 () Bool)

(assert (= b_and!8833 (and (=> t!6328 result!4187) b_and!8837)))

(assert (=> b!141456 t!6330))

(declare-fun b_and!8839 () Bool)

(assert (= b_and!8835 (and (=> t!6330 result!4189) b_and!8839)))

(declare-fun m!169489 () Bool)

(assert (=> d!44455 m!169489))

(assert (=> d!44455 m!166687))

(declare-fun m!169491 () Bool)

(assert (=> bm!15673 m!169491))

(declare-fun m!169493 () Bool)

(assert (=> b!141454 m!169493))

(assert (=> b!141453 m!168641))

(assert (=> b!141453 m!168641))

(assert (=> b!141453 m!168643))

(assert (=> b!141452 m!168645))

(assert (=> b!141452 m!166703))

(assert (=> b!141452 m!168647))

(assert (=> b!141452 m!168641))

(assert (=> b!141452 m!166703))

(assert (=> b!141452 m!168645))

(assert (=> b!141452 m!168641))

(declare-fun m!169495 () Bool)

(assert (=> b!141452 m!169495))

(assert (=> b!141455 m!168641))

(assert (=> b!141455 m!168641))

(declare-fun m!169497 () Bool)

(assert (=> b!141455 m!169497))

(declare-fun m!169499 () Bool)

(assert (=> b!141461 m!169499))

(assert (=> b!141462 m!168641))

(assert (=> b!141462 m!168641))

(assert (=> b!141462 m!168643))

(assert (=> b!141456 m!168645))

(assert (=> b!141456 m!166703))

(assert (=> b!141456 m!168647))

(declare-fun m!169501 () Bool)

(assert (=> b!141456 m!169501))

(assert (=> b!141456 m!166703))

(declare-fun m!169503 () Bool)

(assert (=> b!141456 m!169503))

(assert (=> b!141456 m!168645))

(declare-fun m!169505 () Bool)

(assert (=> b!141456 m!169505))

(assert (=> b!141456 m!168641))

(assert (=> b!141456 m!169501))

(declare-fun m!169507 () Bool)

(assert (=> b!141456 m!169507))

(assert (=> b!141463 m!169491))

(assert (=> bm!15645 d!44455))

(declare-fun d!44457 () Bool)

(assert (=> d!44457 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!73205)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!73205)))))

(assert (=> d!43867 d!44457))

(declare-fun b!141467 () Bool)

(declare-fun e!92187 () Option!180)

(assert (=> b!141467 (= e!92187 None!178)))

(declare-fun b!141465 () Bool)

(declare-fun e!92186 () Option!180)

(assert (=> b!141465 (= e!92186 e!92187)))

(declare-fun c!26635 () Bool)

(assert (=> b!141465 (= c!26635 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))) lt!73205))))))

(declare-fun b!141464 () Bool)

(assert (=> b!141464 (= e!92186 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))))

(declare-fun c!26634 () Bool)

(declare-fun d!44459 () Bool)

(assert (=> d!44459 (= c!26634 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))) lt!73205)))))

(assert (=> d!44459 (= (getValueByKey!174 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!73205) e!92186)))

(declare-fun b!141466 () Bool)

(assert (=> b!141466 (= e!92187 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))) lt!73205))))

(assert (= (and d!44459 c!26634) b!141464))

(assert (= (and d!44459 (not c!26634)) b!141465))

(assert (= (and b!141465 c!26635) b!141466))

(assert (= (and b!141465 (not c!26635)) b!141467))

(declare-fun m!169509 () Bool)

(assert (=> b!141466 m!169509))

(assert (=> d!43867 d!44459))

(declare-fun d!44461 () Bool)

(assert (=> d!44461 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun lt!74105 () Unit!4393)

(assert (=> d!44461 (= lt!74105 (choose!871 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!92188 () Bool)

(assert (=> d!44461 e!92188))

(declare-fun res!67494 () Bool)

(assert (=> d!44461 (=> (not res!67494) (not e!92188))))

(assert (=> d!44461 (= res!67494 (isStrictlySorted!320 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))

(assert (=> d!44461 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) lt!74105)))

(declare-fun b!141468 () Bool)

(assert (=> b!141468 (= e!92188 (containsKey!178 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44461 res!67494) b!141468))

(assert (=> d!44461 m!166407))

(assert (=> d!44461 m!167723))

(assert (=> d!44461 m!167723))

(assert (=> d!44461 m!167725))

(assert (=> d!44461 m!166407))

(declare-fun m!169511 () Bool)

(assert (=> d!44461 m!169511))

(declare-fun m!169513 () Bool)

(assert (=> d!44461 m!169513))

(assert (=> b!141468 m!166407))

(assert (=> b!141468 m!167719))

(assert (=> b!140589 d!44461))

(declare-fun d!44463 () Bool)

(assert (=> d!44463 (= (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun bs!5921 () Bool)

(assert (= bs!5921 d!44463))

(assert (=> bs!5921 m!167723))

(declare-fun m!169515 () Bool)

(assert (=> bs!5921 m!169515))

(assert (=> b!140589 d!44463))

(declare-fun b!141472 () Bool)

(declare-fun e!92190 () Option!180)

(assert (=> b!141472 (= e!92190 None!178)))

(declare-fun b!141470 () Bool)

(declare-fun e!92189 () Option!180)

(assert (=> b!141470 (= e!92189 e!92190)))

(declare-fun c!26637 () Bool)

(assert (=> b!141470 (= c!26637 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (not (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!141469 () Bool)

(assert (=> b!141469 (= e!92189 (Some!179 (_2!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))))

(declare-fun c!26636 () Bool)

(declare-fun d!44465 () Bool)

(assert (=> d!44465 (= c!26636 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44465 (= (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92189)))

(declare-fun b!141471 () Bool)

(assert (=> b!141471 (= e!92190 (getValueByKey!174 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44465 c!26636) b!141469))

(assert (= (and d!44465 (not c!26636)) b!141470))

(assert (= (and b!141470 c!26637) b!141471))

(assert (= (and b!141470 (not c!26637)) b!141472))

(assert (=> b!141471 m!166407))

(declare-fun m!169517 () Bool)

(assert (=> b!141471 m!169517))

(assert (=> b!140589 d!44465))

(declare-fun d!44467 () Bool)

(assert (=> d!44467 (= (get!1528 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43989 d!44467))

(assert (=> d!43989 d!44317))

(declare-fun b!141473 () Bool)

(declare-fun e!92193 () List!1739)

(declare-fun call!15679 () List!1739)

(assert (=> b!141473 (= e!92193 call!15679)))

(declare-fun b!141474 () Bool)

(declare-fun e!92191 () List!1739)

(declare-fun call!15678 () List!1739)

(assert (=> b!141474 (= e!92191 call!15678)))

(declare-fun b!141475 () Bool)

(declare-fun e!92194 () Bool)

(declare-fun lt!74106 () List!1739)

(assert (=> b!141475 (= e!92194 (contains!914 lt!74106 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!15674 () Bool)

(declare-fun e!92192 () List!1739)

(declare-fun c!26641 () Bool)

(assert (=> bm!15674 (= call!15679 ($colon$colon!93 e!92192 (ite c!26641 (h!2342 (t!6314 (toList!871 call!15501))) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26638 () Bool)

(assert (=> bm!15674 (= c!26638 c!26641)))

(declare-fun bm!15675 () Bool)

(declare-fun call!15677 () List!1739)

(assert (=> bm!15675 (= call!15678 call!15677)))

(declare-fun b!141476 () Bool)

(declare-fun res!67495 () Bool)

(assert (=> b!141476 (=> (not res!67495) (not e!92194))))

(assert (=> b!141476 (= res!67495 (containsKey!178 lt!74106 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!44469 () Bool)

(assert (=> d!44469 e!92194))

(declare-fun res!67496 () Bool)

(assert (=> d!44469 (=> (not res!67496) (not e!92194))))

(assert (=> d!44469 (= res!67496 (isStrictlySorted!320 lt!74106))))

(assert (=> d!44469 (= lt!74106 e!92193)))

(assert (=> d!44469 (= c!26641 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15501))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 call!15501)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44469 (isStrictlySorted!320 (t!6314 (toList!871 call!15501)))))

(assert (=> d!44469 (= (insertStrictlySorted!94 (t!6314 (toList!871 call!15501)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74106)))

(declare-fun c!26640 () Bool)

(declare-fun b!141477 () Bool)

(declare-fun c!26639 () Bool)

(assert (=> b!141477 (= e!92192 (ite c!26640 (t!6314 (t!6314 (toList!871 call!15501))) (ite c!26639 (Cons!1735 (h!2342 (t!6314 (toList!871 call!15501))) (t!6314 (t!6314 (toList!871 call!15501)))) Nil!1736)))))

(declare-fun b!141478 () Bool)

(assert (=> b!141478 (= c!26639 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15501))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 call!15501)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92195 () List!1739)

(assert (=> b!141478 (= e!92195 e!92191)))

(declare-fun b!141479 () Bool)

(assert (=> b!141479 (= e!92191 call!15678)))

(declare-fun b!141480 () Bool)

(assert (=> b!141480 (= e!92192 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 call!15501))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15676 () Bool)

(assert (=> bm!15676 (= call!15677 call!15679)))

(declare-fun b!141481 () Bool)

(assert (=> b!141481 (= e!92193 e!92195)))

(assert (=> b!141481 (= c!26640 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15501))) (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15501)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141482 () Bool)

(assert (=> b!141482 (= e!92195 call!15677)))

(assert (= (and d!44469 c!26641) b!141473))

(assert (= (and d!44469 (not c!26641)) b!141481))

(assert (= (and b!141481 c!26640) b!141482))

(assert (= (and b!141481 (not c!26640)) b!141478))

(assert (= (and b!141478 c!26639) b!141474))

(assert (= (and b!141478 (not c!26639)) b!141479))

(assert (= (or b!141474 b!141479) bm!15675))

(assert (= (or b!141482 bm!15675) bm!15676))

(assert (= (or b!141473 bm!15676) bm!15674))

(assert (= (and bm!15674 c!26638) b!141480))

(assert (= (and bm!15674 (not c!26638)) b!141477))

(assert (= (and d!44469 res!67496) b!141476))

(assert (= (and b!141476 res!67495) b!141475))

(declare-fun m!169519 () Bool)

(assert (=> b!141476 m!169519))

(declare-fun m!169521 () Bool)

(assert (=> b!141480 m!169521))

(declare-fun m!169523 () Bool)

(assert (=> bm!15674 m!169523))

(declare-fun m!169525 () Bool)

(assert (=> b!141475 m!169525))

(declare-fun m!169527 () Bool)

(assert (=> d!44469 m!169527))

(declare-fun m!169529 () Bool)

(assert (=> d!44469 m!169529))

(assert (=> b!140934 d!44469))

(assert (=> d!44005 d!43671))

(assert (=> d!44005 d!43657))

(assert (=> d!44005 d!43663))

(assert (=> d!43971 d!43969))

(declare-fun d!44471 () Bool)

(assert (=> d!44471 (= (getValueByKey!174 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (Some!179 (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44471 true))

(declare-fun _$22!495 () Unit!4393)

(assert (=> d!44471 (= (choose!872 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) _$22!495)))

(declare-fun bs!5922 () Bool)

(assert (= bs!5922 d!44471))

(assert (=> bs!5922 m!166925))

(assert (=> d!43971 d!44471))

(declare-fun d!44473 () Bool)

(declare-fun res!67497 () Bool)

(declare-fun e!92196 () Bool)

(assert (=> d!44473 (=> res!67497 e!92196)))

(assert (=> d!44473 (= res!67497 (or ((_ is Nil!1736) lt!73232) ((_ is Nil!1736) (t!6314 lt!73232))))))

(assert (=> d!44473 (= (isStrictlySorted!320 lt!73232) e!92196)))

(declare-fun b!141483 () Bool)

(declare-fun e!92197 () Bool)

(assert (=> b!141483 (= e!92196 e!92197)))

(declare-fun res!67498 () Bool)

(assert (=> b!141483 (=> (not res!67498) (not e!92197))))

(assert (=> b!141483 (= res!67498 (bvslt (_1!1339 (h!2342 lt!73232)) (_1!1339 (h!2342 (t!6314 lt!73232)))))))

(declare-fun b!141484 () Bool)

(assert (=> b!141484 (= e!92197 (isStrictlySorted!320 (t!6314 lt!73232)))))

(assert (= (and d!44473 (not res!67497)) b!141483))

(assert (= (and b!141483 res!67498) b!141484))

(declare-fun m!169531 () Bool)

(assert (=> b!141484 m!169531))

(assert (=> d!43971 d!44473))

(declare-fun lt!74107 () Bool)

(declare-fun d!44475 () Bool)

(assert (=> d!44475 (= lt!74107 (select (content!138 (t!6314 (toList!871 lt!73386))) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92199 () Bool)

(assert (=> d!44475 (= lt!74107 e!92199)))

(declare-fun res!67499 () Bool)

(assert (=> d!44475 (=> (not res!67499) (not e!92199))))

(assert (=> d!44475 (= res!67499 ((_ is Cons!1735) (t!6314 (toList!871 lt!73386))))))

(assert (=> d!44475 (= (contains!914 (t!6314 (toList!871 lt!73386)) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74107)))

(declare-fun b!141485 () Bool)

(declare-fun e!92198 () Bool)

(assert (=> b!141485 (= e!92199 e!92198)))

(declare-fun res!67500 () Bool)

(assert (=> b!141485 (=> res!67500 e!92198)))

(assert (=> b!141485 (= res!67500 (= (h!2342 (t!6314 (toList!871 lt!73386))) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141486 () Bool)

(assert (=> b!141486 (= e!92198 (contains!914 (t!6314 (t!6314 (toList!871 lt!73386))) (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44475 res!67499) b!141485))

(assert (= (and b!141485 (not res!67500)) b!141486))

(declare-fun m!169533 () Bool)

(assert (=> d!44475 m!169533))

(declare-fun m!169535 () Bool)

(assert (=> d!44475 m!169535))

(declare-fun m!169537 () Bool)

(assert (=> b!141486 m!169537))

(assert (=> b!140859 d!44475))

(declare-fun b!141490 () Bool)

(declare-fun e!92201 () Option!180)

(assert (=> b!141490 (= e!92201 None!178)))

(declare-fun b!141488 () Bool)

(declare-fun e!92200 () Option!180)

(assert (=> b!141488 (= e!92200 e!92201)))

(declare-fun c!26643 () Bool)

(assert (=> b!141488 (= c!26643 (and ((_ is Cons!1735) (toList!871 lt!73819)) (not (= (_1!1339 (h!2342 (toList!871 lt!73819))) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!141487 () Bool)

(assert (=> b!141487 (= e!92200 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73819)))))))

(declare-fun d!44477 () Bool)

(declare-fun c!26642 () Bool)

(assert (=> d!44477 (= c!26642 (and ((_ is Cons!1735) (toList!871 lt!73819)) (= (_1!1339 (h!2342 (toList!871 lt!73819))) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!44477 (= (getValueByKey!174 (toList!871 lt!73819) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92200)))

(declare-fun b!141489 () Bool)

(assert (=> b!141489 (= e!92201 (getValueByKey!174 (t!6314 (toList!871 lt!73819)) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44477 c!26642) b!141487))

(assert (= (and d!44477 (not c!26642)) b!141488))

(assert (= (and b!141488 c!26643) b!141489))

(assert (= (and b!141488 (not c!26643)) b!141490))

(declare-fun m!169539 () Bool)

(assert (=> b!141489 m!169539))

(assert (=> b!140974 d!44477))

(assert (=> d!44161 d!44145))

(declare-fun d!44479 () Bool)

(assert (=> d!44479 (= (arrayCountValidKeys!0 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!44479 true))

(declare-fun _$85!15 () Unit!4393)

(assert (=> d!44479 (= (choose!2 lt!73355 (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) _$85!15)))

(declare-fun bs!5923 () Bool)

(assert (= bs!5923 d!44479))

(assert (=> bs!5923 m!167047))

(assert (=> d!44161 d!44479))

(declare-fun d!44481 () Bool)

(declare-fun res!67501 () Bool)

(declare-fun e!92202 () Bool)

(assert (=> d!44481 (=> res!67501 e!92202)))

(assert (=> d!44481 (= res!67501 (and ((_ is Cons!1735) (toList!871 lt!73401)) (= (_1!1339 (h!2342 (toList!871 lt!73401))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44481 (= (containsKey!178 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92202)))

(declare-fun b!141491 () Bool)

(declare-fun e!92203 () Bool)

(assert (=> b!141491 (= e!92202 e!92203)))

(declare-fun res!67502 () Bool)

(assert (=> b!141491 (=> (not res!67502) (not e!92203))))

(assert (=> b!141491 (= res!67502 (and (or (not ((_ is Cons!1735) (toList!871 lt!73401))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73401))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) (toList!871 lt!73401)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73401))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141492 () Bool)

(assert (=> b!141492 (= e!92203 (containsKey!178 (t!6314 (toList!871 lt!73401)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44481 (not res!67501)) b!141491))

(assert (= (and b!141491 res!67502) b!141492))

(declare-fun m!169541 () Bool)

(assert (=> b!141492 m!169541))

(assert (=> d!43811 d!44481))

(assert (=> b!141069 d!44241))

(assert (=> d!44073 d!44075))

(declare-fun d!44483 () Bool)

(assert (=> d!44483 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000)))

(assert (=> d!44483 true))

(declare-fun _$60!366 () Unit!4393)

(assert (=> d!44483 (= (choose!13 (_keys!4697 newMap!16) lt!73378 #b00000000000000000000000000000000) _$60!366)))

(declare-fun bs!5924 () Bool)

(assert (= bs!5924 d!44483))

(assert (=> bs!5924 m!167097))

(assert (=> d!44073 d!44483))

(declare-fun d!44485 () Bool)

(assert (=> d!44485 (= (apply!120 lt!73439 lt!73458) (get!1528 (getValueByKey!174 (toList!871 lt!73439) lt!73458)))))

(declare-fun bs!5925 () Bool)

(assert (= bs!5925 d!44485))

(declare-fun m!169543 () Bool)

(assert (=> bs!5925 m!169543))

(assert (=> bs!5925 m!169543))

(declare-fun m!169545 () Bool)

(assert (=> bs!5925 m!169545))

(assert (=> b!140396 d!44485))

(declare-fun d!44487 () Bool)

(assert (=> d!44487 (= (apply!120 (+!167 lt!73454 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73449) (apply!120 lt!73454 lt!73449))))

(declare-fun lt!74108 () Unit!4393)

(assert (=> d!44487 (= lt!74108 (choose!869 lt!73454 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73449))))

(declare-fun e!92204 () Bool)

(assert (=> d!44487 e!92204))

(declare-fun res!67503 () Bool)

(assert (=> d!44487 (=> (not res!67503) (not e!92204))))

(assert (=> d!44487 (= res!67503 (contains!910 lt!73454 lt!73449))))

(assert (=> d!44487 (= (addApplyDifferent!96 lt!73454 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73449) lt!74108)))

(declare-fun b!141493 () Bool)

(assert (=> b!141493 (= e!92204 (not (= lt!73449 lt!73452)))))

(assert (= (and d!44487 res!67503) b!141493))

(assert (=> d!44487 m!167313))

(assert (=> d!44487 m!167313))

(assert (=> d!44487 m!167325))

(assert (=> d!44487 m!166427))

(declare-fun m!169547 () Bool)

(assert (=> d!44487 m!169547))

(assert (=> d!44487 m!167305))

(declare-fun m!169549 () Bool)

(assert (=> d!44487 m!169549))

(assert (=> b!140396 d!44487))

(declare-fun d!44489 () Bool)

(assert (=> d!44489 (= (apply!120 lt!73443 lt!73450) (get!1528 (getValueByKey!174 (toList!871 lt!73443) lt!73450)))))

(declare-fun bs!5926 () Bool)

(assert (= bs!5926 d!44489))

(declare-fun m!169551 () Bool)

(assert (=> bs!5926 m!169551))

(assert (=> bs!5926 m!169551))

(declare-fun m!169553 () Bool)

(assert (=> bs!5926 m!169553))

(assert (=> b!140396 d!44489))

(declare-fun d!44491 () Bool)

(declare-fun e!92205 () Bool)

(assert (=> d!44491 e!92205))

(declare-fun res!67505 () Bool)

(assert (=> d!44491 (=> (not res!67505) (not e!92205))))

(declare-fun lt!74111 () ListLongMap!1711)

(assert (=> d!44491 (= res!67505 (contains!910 lt!74111 (_1!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74112 () List!1739)

(assert (=> d!44491 (= lt!74111 (ListLongMap!1712 lt!74112))))

(declare-fun lt!74109 () Unit!4393)

(declare-fun lt!74110 () Unit!4393)

(assert (=> d!44491 (= lt!74109 lt!74110)))

(assert (=> d!44491 (= (getValueByKey!174 lt!74112 (_1!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44491 (= lt!74110 (lemmaContainsTupThenGetReturnValue!91 lt!74112 (_1!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44491 (= lt!74112 (insertStrictlySorted!94 (toList!871 lt!73439) (_1!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44491 (= (+!167 lt!73439 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))) lt!74111)))

(declare-fun b!141494 () Bool)

(declare-fun res!67504 () Bool)

(assert (=> b!141494 (=> (not res!67504) (not e!92205))))

(assert (=> b!141494 (= res!67504 (= (getValueByKey!174 (toList!871 lt!74111) (_1!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141495 () Bool)

(assert (=> b!141495 (= e!92205 (contains!914 (toList!871 lt!74111) (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44491 res!67505) b!141494))

(assert (= (and b!141494 res!67504) b!141495))

(declare-fun m!169555 () Bool)

(assert (=> d!44491 m!169555))

(declare-fun m!169557 () Bool)

(assert (=> d!44491 m!169557))

(declare-fun m!169559 () Bool)

(assert (=> d!44491 m!169559))

(declare-fun m!169561 () Bool)

(assert (=> d!44491 m!169561))

(declare-fun m!169563 () Bool)

(assert (=> b!141494 m!169563))

(declare-fun m!169565 () Bool)

(assert (=> b!141495 m!169565))

(assert (=> b!140396 d!44491))

(declare-fun d!44493 () Bool)

(assert (=> d!44493 (= (apply!120 (+!167 lt!73439 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))) lt!73458) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73439 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16)))) lt!73458)))))

(declare-fun bs!5927 () Bool)

(assert (= bs!5927 d!44493))

(declare-fun m!169567 () Bool)

(assert (=> bs!5927 m!169567))

(assert (=> bs!5927 m!169567))

(declare-fun m!169569 () Bool)

(assert (=> bs!5927 m!169569))

(assert (=> b!140396 d!44493))

(declare-fun d!44495 () Bool)

(assert (=> d!44495 (contains!910 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))) lt!73459)))

(declare-fun lt!74113 () Unit!4393)

(assert (=> d!44495 (= lt!74113 (choose!870 lt!73453 lt!73442 (zeroValue!2789 newMap!16) lt!73459))))

(assert (=> d!44495 (contains!910 lt!73453 lt!73459)))

(assert (=> d!44495 (= (addStillContains!96 lt!73453 lt!73442 (zeroValue!2789 newMap!16) lt!73459) lt!74113)))

(declare-fun bs!5928 () Bool)

(assert (= bs!5928 d!44495))

(assert (=> bs!5928 m!167309))

(assert (=> bs!5928 m!167309))

(assert (=> bs!5928 m!167315))

(declare-fun m!169571 () Bool)

(assert (=> bs!5928 m!169571))

(declare-fun m!169573 () Bool)

(assert (=> bs!5928 m!169573))

(assert (=> b!140396 d!44495))

(declare-fun d!44497 () Bool)

(declare-fun e!92206 () Bool)

(assert (=> d!44497 e!92206))

(declare-fun res!67507 () Bool)

(assert (=> d!44497 (=> (not res!67507) (not e!92206))))

(declare-fun lt!74116 () ListLongMap!1711)

(assert (=> d!44497 (= res!67507 (contains!910 lt!74116 (_1!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74117 () List!1739)

(assert (=> d!44497 (= lt!74116 (ListLongMap!1712 lt!74117))))

(declare-fun lt!74114 () Unit!4393)

(declare-fun lt!74115 () Unit!4393)

(assert (=> d!44497 (= lt!74114 lt!74115)))

(assert (=> d!44497 (= (getValueByKey!174 lt!74117 (_1!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44497 (= lt!74115 (lemmaContainsTupThenGetReturnValue!91 lt!74117 (_1!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44497 (= lt!74117 (insertStrictlySorted!94 (toList!871 lt!73443) (_1!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44497 (= (+!167 lt!73443 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74116)))

(declare-fun b!141496 () Bool)

(declare-fun res!67506 () Bool)

(assert (=> b!141496 (=> (not res!67506) (not e!92206))))

(assert (=> b!141496 (= res!67506 (= (getValueByKey!174 (toList!871 lt!74116) (_1!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141497 () Bool)

(assert (=> b!141497 (= e!92206 (contains!914 (toList!871 lt!74116) (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44497 res!67507) b!141496))

(assert (= (and b!141496 res!67506) b!141497))

(declare-fun m!169575 () Bool)

(assert (=> d!44497 m!169575))

(declare-fun m!169577 () Bool)

(assert (=> d!44497 m!169577))

(declare-fun m!169579 () Bool)

(assert (=> d!44497 m!169579))

(declare-fun m!169581 () Bool)

(assert (=> d!44497 m!169581))

(declare-fun m!169583 () Bool)

(assert (=> b!141496 m!169583))

(declare-fun m!169585 () Bool)

(assert (=> b!141497 m!169585))

(assert (=> b!140396 d!44497))

(declare-fun d!44499 () Bool)

(assert (=> d!44499 (= (apply!120 lt!73454 lt!73449) (get!1528 (getValueByKey!174 (toList!871 lt!73454) lt!73449)))))

(declare-fun bs!5929 () Bool)

(assert (= bs!5929 d!44499))

(declare-fun m!169587 () Bool)

(assert (=> bs!5929 m!169587))

(assert (=> bs!5929 m!169587))

(declare-fun m!169589 () Bool)

(assert (=> bs!5929 m!169589))

(assert (=> b!140396 d!44499))

(declare-fun d!44501 () Bool)

(declare-fun e!92207 () Bool)

(assert (=> d!44501 e!92207))

(declare-fun res!67509 () Bool)

(assert (=> d!44501 (=> (not res!67509) (not e!92207))))

(declare-fun lt!74120 () ListLongMap!1711)

(assert (=> d!44501 (= res!67509 (contains!910 lt!74120 (_1!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74121 () List!1739)

(assert (=> d!44501 (= lt!74120 (ListLongMap!1712 lt!74121))))

(declare-fun lt!74118 () Unit!4393)

(declare-fun lt!74119 () Unit!4393)

(assert (=> d!44501 (= lt!74118 lt!74119)))

(assert (=> d!44501 (= (getValueByKey!174 lt!74121 (_1!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44501 (= lt!74119 (lemmaContainsTupThenGetReturnValue!91 lt!74121 (_1!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44501 (= lt!74121 (insertStrictlySorted!94 (toList!871 lt!73453) (_1!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44501 (= (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))) lt!74120)))

(declare-fun b!141498 () Bool)

(declare-fun res!67508 () Bool)

(assert (=> b!141498 (=> (not res!67508) (not e!92207))))

(assert (=> b!141498 (= res!67508 (= (getValueByKey!174 (toList!871 lt!74120) (_1!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141499 () Bool)

(assert (=> b!141499 (= e!92207 (contains!914 (toList!871 lt!74120) (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44501 res!67509) b!141498))

(assert (= (and b!141498 res!67508) b!141499))

(declare-fun m!169591 () Bool)

(assert (=> d!44501 m!169591))

(declare-fun m!169593 () Bool)

(assert (=> d!44501 m!169593))

(declare-fun m!169595 () Bool)

(assert (=> d!44501 m!169595))

(declare-fun m!169597 () Bool)

(assert (=> d!44501 m!169597))

(declare-fun m!169599 () Bool)

(assert (=> b!141498 m!169599))

(declare-fun m!169601 () Bool)

(assert (=> b!141499 m!169601))

(assert (=> b!140396 d!44501))

(declare-fun d!44503 () Bool)

(assert (=> d!44503 (= (apply!120 (+!167 lt!73454 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73449) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73454 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73449)))))

(declare-fun bs!5930 () Bool)

(assert (= bs!5930 d!44503))

(declare-fun m!169603 () Bool)

(assert (=> bs!5930 m!169603))

(assert (=> bs!5930 m!169603))

(declare-fun m!169605 () Bool)

(assert (=> bs!5930 m!169605))

(assert (=> b!140396 d!44503))

(declare-fun d!44505 () Bool)

(assert (=> d!44505 (= (apply!120 (+!167 lt!73443 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73450) (apply!120 lt!73443 lt!73450))))

(declare-fun lt!74122 () Unit!4393)

(assert (=> d!44505 (= lt!74122 (choose!869 lt!73443 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73450))))

(declare-fun e!92208 () Bool)

(assert (=> d!44505 e!92208))

(declare-fun res!67510 () Bool)

(assert (=> d!44505 (=> (not res!67510) (not e!92208))))

(assert (=> d!44505 (= res!67510 (contains!910 lt!73443 lt!73450))))

(assert (=> d!44505 (= (addApplyDifferent!96 lt!73443 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73450) lt!74122)))

(declare-fun b!141500 () Bool)

(assert (=> b!141500 (= e!92208 (not (= lt!73450 lt!73455)))))

(assert (= (and d!44505 res!67510) b!141500))

(assert (=> d!44505 m!167317))

(assert (=> d!44505 m!167317))

(assert (=> d!44505 m!167319))

(assert (=> d!44505 m!166427))

(declare-fun m!169607 () Bool)

(assert (=> d!44505 m!169607))

(assert (=> d!44505 m!167303))

(declare-fun m!169609 () Bool)

(assert (=> d!44505 m!169609))

(assert (=> b!140396 d!44505))

(declare-fun d!44507 () Bool)

(declare-fun e!92209 () Bool)

(assert (=> d!44507 e!92209))

(declare-fun res!67512 () Bool)

(assert (=> d!44507 (=> (not res!67512) (not e!92209))))

(declare-fun lt!74125 () ListLongMap!1711)

(assert (=> d!44507 (= res!67512 (contains!910 lt!74125 (_1!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74126 () List!1739)

(assert (=> d!44507 (= lt!74125 (ListLongMap!1712 lt!74126))))

(declare-fun lt!74123 () Unit!4393)

(declare-fun lt!74124 () Unit!4393)

(assert (=> d!44507 (= lt!74123 lt!74124)))

(assert (=> d!44507 (= (getValueByKey!174 lt!74126 (_1!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44507 (= lt!74124 (lemmaContainsTupThenGetReturnValue!91 lt!74126 (_1!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44507 (= lt!74126 (insertStrictlySorted!94 (toList!871 lt!73454) (_1!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44507 (= (+!167 lt!73454 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74125)))

(declare-fun b!141501 () Bool)

(declare-fun res!67511 () Bool)

(assert (=> b!141501 (=> (not res!67511) (not e!92209))))

(assert (=> b!141501 (= res!67511 (= (getValueByKey!174 (toList!871 lt!74125) (_1!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141502 () Bool)

(assert (=> b!141502 (= e!92209 (contains!914 (toList!871 lt!74125) (tuple2!2657 lt!73452 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44507 res!67512) b!141501))

(assert (= (and b!141501 res!67511) b!141502))

(declare-fun m!169611 () Bool)

(assert (=> d!44507 m!169611))

(declare-fun m!169613 () Bool)

(assert (=> d!44507 m!169613))

(declare-fun m!169615 () Bool)

(assert (=> d!44507 m!169615))

(declare-fun m!169617 () Bool)

(assert (=> d!44507 m!169617))

(declare-fun m!169619 () Bool)

(assert (=> b!141501 m!169619))

(declare-fun m!169621 () Bool)

(assert (=> b!141502 m!169621))

(assert (=> b!140396 d!44507))

(declare-fun b!141503 () Bool)

(assert (=> b!141503 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141503 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 newMap!16))))))

(declare-fun e!92210 () Bool)

(declare-fun lt!74133 () ListLongMap!1711)

(assert (=> b!141503 (= e!92210 (= (apply!120 lt!74133 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141504 () Bool)

(declare-fun e!92212 () Bool)

(assert (=> b!141504 (= e!92212 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141504 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141505 () Bool)

(declare-fun res!67514 () Bool)

(declare-fun e!92213 () Bool)

(assert (=> b!141505 (=> (not res!67514) (not e!92213))))

(assert (=> b!141505 (= res!67514 (not (contains!910 lt!74133 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141506 () Bool)

(declare-fun e!92216 () Bool)

(assert (=> b!141506 (= e!92216 e!92210)))

(assert (=> b!141506 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67516 () Bool)

(assert (=> b!141506 (= res!67516 (contains!910 lt!74133 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141506 (=> (not res!67516) (not e!92210))))

(declare-fun b!141507 () Bool)

(declare-fun lt!74129 () Unit!4393)

(declare-fun lt!74127 () Unit!4393)

(assert (=> b!141507 (= lt!74129 lt!74127)))

(declare-fun lt!74128 () (_ BitVec 64))

(declare-fun lt!74132 () (_ BitVec 64))

(declare-fun lt!74131 () V!3553)

(declare-fun lt!74130 () ListLongMap!1711)

(assert (=> b!141507 (not (contains!910 (+!167 lt!74130 (tuple2!2657 lt!74132 lt!74131)) lt!74128))))

(assert (=> b!141507 (= lt!74127 (addStillNotContains!65 lt!74130 lt!74132 lt!74131 lt!74128))))

(assert (=> b!141507 (= lt!74128 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141507 (= lt!74131 (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141507 (= lt!74132 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15680 () ListLongMap!1711)

(assert (=> b!141507 (= lt!74130 call!15680)))

(declare-fun e!92214 () ListLongMap!1711)

(assert (=> b!141507 (= e!92214 (+!167 call!15680 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141508 () Bool)

(assert (=> b!141508 (= e!92213 e!92216)))

(declare-fun c!26647 () Bool)

(assert (=> b!141508 (= c!26647 e!92212)))

(declare-fun res!67513 () Bool)

(assert (=> b!141508 (=> (not res!67513) (not e!92212))))

(assert (=> b!141508 (= res!67513 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15677 () Bool)

(assert (=> bm!15677 (= call!15680 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141509 () Bool)

(assert (=> b!141509 (= e!92214 call!15680)))

(declare-fun b!141510 () Bool)

(declare-fun e!92211 () Bool)

(assert (=> b!141510 (= e!92216 e!92211)))

(declare-fun c!26645 () Bool)

(assert (=> b!141510 (= c!26645 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!44509 () Bool)

(assert (=> d!44509 e!92213))

(declare-fun res!67515 () Bool)

(assert (=> d!44509 (=> (not res!67515) (not e!92213))))

(assert (=> d!44509 (= res!67515 (not (contains!910 lt!74133 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92215 () ListLongMap!1711)

(assert (=> d!44509 (= lt!74133 e!92215)))

(declare-fun c!26646 () Bool)

(assert (=> d!44509 (= c!26646 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44509 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44509 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74133)))

(declare-fun b!141511 () Bool)

(assert (=> b!141511 (= e!92215 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141512 () Bool)

(assert (=> b!141512 (= e!92211 (isEmpty!421 lt!74133))))

(declare-fun b!141513 () Bool)

(assert (=> b!141513 (= e!92215 e!92214)))

(declare-fun c!26644 () Bool)

(assert (=> b!141513 (= c!26644 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141514 () Bool)

(assert (=> b!141514 (= e!92211 (= lt!74133 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) lt!73111 (zeroValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44509 c!26646) b!141511))

(assert (= (and d!44509 (not c!26646)) b!141513))

(assert (= (and b!141513 c!26644) b!141507))

(assert (= (and b!141513 (not c!26644)) b!141509))

(assert (= (or b!141507 b!141509) bm!15677))

(assert (= (and d!44509 res!67515) b!141505))

(assert (= (and b!141505 res!67514) b!141508))

(assert (= (and b!141508 res!67513) b!141504))

(assert (= (and b!141508 c!26647) b!141506))

(assert (= (and b!141508 (not c!26647)) b!141510))

(assert (= (and b!141506 res!67516) b!141503))

(assert (= (and b!141510 c!26645) b!141514))

(assert (= (and b!141510 (not c!26645)) b!141512))

(declare-fun b_lambda!6345 () Bool)

(assert (=> (not b_lambda!6345) (not b!141503)))

(assert (=> b!141503 t!6328))

(declare-fun b_and!8841 () Bool)

(assert (= b_and!8837 (and (=> t!6328 result!4187) b_and!8841)))

(assert (=> b!141503 t!6330))

(declare-fun b_and!8843 () Bool)

(assert (= b_and!8839 (and (=> t!6330 result!4189) b_and!8843)))

(declare-fun b_lambda!6347 () Bool)

(assert (=> (not b_lambda!6347) (not b!141507)))

(assert (=> b!141507 t!6328))

(declare-fun b_and!8845 () Bool)

(assert (= b_and!8841 (and (=> t!6328 result!4187) b_and!8845)))

(assert (=> b!141507 t!6330))

(declare-fun b_and!8847 () Bool)

(assert (= b_and!8843 (and (=> t!6330 result!4189) b_and!8847)))

(declare-fun m!169623 () Bool)

(assert (=> d!44509 m!169623))

(assert (=> d!44509 m!166687))

(assert (=> bm!15677 m!166427))

(declare-fun m!169625 () Bool)

(assert (=> bm!15677 m!169625))

(declare-fun m!169627 () Bool)

(assert (=> b!141505 m!169627))

(assert (=> b!141504 m!166699))

(assert (=> b!141504 m!166699))

(assert (=> b!141504 m!166701))

(assert (=> b!141503 m!166795))

(assert (=> b!141503 m!166703))

(assert (=> b!141503 m!166797))

(assert (=> b!141503 m!166699))

(assert (=> b!141503 m!166703))

(assert (=> b!141503 m!166795))

(assert (=> b!141503 m!166699))

(declare-fun m!169629 () Bool)

(assert (=> b!141503 m!169629))

(assert (=> b!141506 m!166699))

(assert (=> b!141506 m!166699))

(declare-fun m!169631 () Bool)

(assert (=> b!141506 m!169631))

(declare-fun m!169633 () Bool)

(assert (=> b!141512 m!169633))

(assert (=> b!141513 m!166699))

(assert (=> b!141513 m!166699))

(assert (=> b!141513 m!166701))

(assert (=> b!141507 m!166795))

(assert (=> b!141507 m!166703))

(assert (=> b!141507 m!166797))

(declare-fun m!169635 () Bool)

(assert (=> b!141507 m!169635))

(assert (=> b!141507 m!166703))

(declare-fun m!169637 () Bool)

(assert (=> b!141507 m!169637))

(assert (=> b!141507 m!166795))

(declare-fun m!169639 () Bool)

(assert (=> b!141507 m!169639))

(assert (=> b!141507 m!166699))

(assert (=> b!141507 m!169635))

(declare-fun m!169641 () Bool)

(assert (=> b!141507 m!169641))

(assert (=> b!141514 m!166427))

(assert (=> b!141514 m!169625))

(assert (=> b!140396 d!44509))

(declare-fun d!44511 () Bool)

(declare-fun e!92218 () Bool)

(assert (=> d!44511 e!92218))

(declare-fun res!67517 () Bool)

(assert (=> d!44511 (=> res!67517 e!92218)))

(declare-fun lt!74137 () Bool)

(assert (=> d!44511 (= res!67517 (not lt!74137))))

(declare-fun lt!74136 () Bool)

(assert (=> d!44511 (= lt!74137 lt!74136)))

(declare-fun lt!74135 () Unit!4393)

(declare-fun e!92217 () Unit!4393)

(assert (=> d!44511 (= lt!74135 e!92217)))

(declare-fun c!26648 () Bool)

(assert (=> d!44511 (= c!26648 lt!74136)))

(assert (=> d!44511 (= lt!74136 (containsKey!178 (toList!871 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))) lt!73459))))

(assert (=> d!44511 (= (contains!910 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16))) lt!73459) lt!74137)))

(declare-fun b!141515 () Bool)

(declare-fun lt!74134 () Unit!4393)

(assert (=> b!141515 (= e!92217 lt!74134)))

(assert (=> b!141515 (= lt!74134 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))) lt!73459))))

(assert (=> b!141515 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))) lt!73459))))

(declare-fun b!141516 () Bool)

(declare-fun Unit!4463 () Unit!4393)

(assert (=> b!141516 (= e!92217 Unit!4463)))

(declare-fun b!141517 () Bool)

(assert (=> b!141517 (= e!92218 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73453 (tuple2!2657 lt!73442 (zeroValue!2789 newMap!16)))) lt!73459)))))

(assert (= (and d!44511 c!26648) b!141515))

(assert (= (and d!44511 (not c!26648)) b!141516))

(assert (= (and d!44511 (not res!67517)) b!141517))

(declare-fun m!169643 () Bool)

(assert (=> d!44511 m!169643))

(declare-fun m!169645 () Bool)

(assert (=> b!141515 m!169645))

(declare-fun m!169647 () Bool)

(assert (=> b!141515 m!169647))

(assert (=> b!141515 m!169647))

(declare-fun m!169649 () Bool)

(assert (=> b!141515 m!169649))

(assert (=> b!141517 m!169647))

(assert (=> b!141517 m!169647))

(assert (=> b!141517 m!169649))

(assert (=> b!140396 d!44511))

(declare-fun d!44513 () Bool)

(assert (=> d!44513 (= (apply!120 (+!167 lt!73439 (tuple2!2657 lt!73448 (zeroValue!2789 newMap!16))) lt!73458) (apply!120 lt!73439 lt!73458))))

(declare-fun lt!74138 () Unit!4393)

(assert (=> d!44513 (= lt!74138 (choose!869 lt!73439 lt!73448 (zeroValue!2789 newMap!16) lt!73458))))

(declare-fun e!92219 () Bool)

(assert (=> d!44513 e!92219))

(declare-fun res!67518 () Bool)

(assert (=> d!44513 (=> (not res!67518) (not e!92219))))

(assert (=> d!44513 (= res!67518 (contains!910 lt!73439 lt!73458))))

(assert (=> d!44513 (= (addApplyDifferent!96 lt!73439 lt!73448 (zeroValue!2789 newMap!16) lt!73458) lt!74138)))

(declare-fun b!141518 () Bool)

(assert (=> b!141518 (= e!92219 (not (= lt!73458 lt!73448)))))

(assert (= (and d!44513 res!67518) b!141518))

(assert (=> d!44513 m!167321))

(assert (=> d!44513 m!167321))

(assert (=> d!44513 m!167323))

(declare-fun m!169651 () Bool)

(assert (=> d!44513 m!169651))

(assert (=> d!44513 m!167327))

(declare-fun m!169653 () Bool)

(assert (=> d!44513 m!169653))

(assert (=> b!140396 d!44513))

(declare-fun d!44515 () Bool)

(assert (=> d!44515 (= (apply!120 (+!167 lt!73443 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73450) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73443 (tuple2!2657 lt!73455 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73450)))))

(declare-fun bs!5931 () Bool)

(assert (= bs!5931 d!44515))

(declare-fun m!169655 () Bool)

(assert (=> bs!5931 m!169655))

(assert (=> bs!5931 m!169655))

(declare-fun m!169657 () Bool)

(assert (=> bs!5931 m!169657))

(assert (=> b!140396 d!44515))

(declare-fun b!141519 () Bool)

(declare-fun e!92222 () List!1739)

(declare-fun call!15683 () List!1739)

(assert (=> b!141519 (= e!92222 call!15683)))

(declare-fun b!141520 () Bool)

(declare-fun e!92220 () List!1739)

(declare-fun call!15682 () List!1739)

(assert (=> b!141520 (= e!92220 call!15682)))

(declare-fun lt!74139 () List!1739)

(declare-fun e!92223 () Bool)

(declare-fun b!141521 () Bool)

(assert (=> b!141521 (= e!92223 (contains!914 lt!74139 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun c!26652 () Bool)

(declare-fun e!92221 () List!1739)

(declare-fun bm!15678 () Bool)

(assert (=> bm!15678 (= call!15683 ($colon$colon!93 e!92221 (ite c!26652 (h!2342 (t!6314 (toList!871 lt!73016))) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26649 () Bool)

(assert (=> bm!15678 (= c!26649 c!26652)))

(declare-fun bm!15679 () Bool)

(declare-fun call!15681 () List!1739)

(assert (=> bm!15679 (= call!15682 call!15681)))

(declare-fun b!141522 () Bool)

(declare-fun res!67519 () Bool)

(assert (=> b!141522 (=> (not res!67519) (not e!92223))))

(assert (=> b!141522 (= res!67519 (containsKey!178 lt!74139 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!44517 () Bool)

(assert (=> d!44517 e!92223))

(declare-fun res!67520 () Bool)

(assert (=> d!44517 (=> (not res!67520) (not e!92223))))

(assert (=> d!44517 (= res!67520 (isStrictlySorted!320 lt!74139))))

(assert (=> d!44517 (= lt!74139 e!92222)))

(assert (=> d!44517 (= c!26652 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73016))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73016)))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44517 (isStrictlySorted!320 (t!6314 (toList!871 lt!73016)))))

(assert (=> d!44517 (= (insertStrictlySorted!94 (t!6314 (toList!871 lt!73016)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74139)))

(declare-fun c!26650 () Bool)

(declare-fun b!141523 () Bool)

(declare-fun c!26651 () Bool)

(assert (=> b!141523 (= e!92221 (ite c!26651 (t!6314 (t!6314 (toList!871 lt!73016))) (ite c!26650 (Cons!1735 (h!2342 (t!6314 (toList!871 lt!73016))) (t!6314 (t!6314 (toList!871 lt!73016)))) Nil!1736)))))

(declare-fun b!141524 () Bool)

(assert (=> b!141524 (= c!26650 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73016))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73016)))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92224 () List!1739)

(assert (=> b!141524 (= e!92224 e!92220)))

(declare-fun b!141525 () Bool)

(assert (=> b!141525 (= e!92220 call!15682)))

(declare-fun b!141526 () Bool)

(assert (=> b!141526 (= e!92221 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 lt!73016))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15680 () Bool)

(assert (=> bm!15680 (= call!15681 call!15683)))

(declare-fun b!141527 () Bool)

(assert (=> b!141527 (= e!92222 e!92224)))

(assert (=> b!141527 (= c!26651 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73016))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73016)))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141528 () Bool)

(assert (=> b!141528 (= e!92224 call!15681)))

(assert (= (and d!44517 c!26652) b!141519))

(assert (= (and d!44517 (not c!26652)) b!141527))

(assert (= (and b!141527 c!26651) b!141528))

(assert (= (and b!141527 (not c!26651)) b!141524))

(assert (= (and b!141524 c!26650) b!141520))

(assert (= (and b!141524 (not c!26650)) b!141525))

(assert (= (or b!141520 b!141525) bm!15679))

(assert (= (or b!141528 bm!15679) bm!15680))

(assert (= (or b!141519 bm!15680) bm!15678))

(assert (= (and bm!15678 c!26649) b!141526))

(assert (= (and bm!15678 (not c!26649)) b!141523))

(assert (= (and d!44517 res!67520) b!141522))

(assert (= (and b!141522 res!67519) b!141521))

(declare-fun m!169659 () Bool)

(assert (=> b!141522 m!169659))

(declare-fun m!169661 () Bool)

(assert (=> b!141526 m!169661))

(declare-fun m!169663 () Bool)

(assert (=> bm!15678 m!169663))

(declare-fun m!169665 () Bool)

(assert (=> b!141521 m!169665))

(declare-fun m!169667 () Bool)

(assert (=> d!44517 m!169667))

(declare-fun m!169669 () Bool)

(assert (=> d!44517 m!169669))

(assert (=> b!140957 d!44517))

(assert (=> b!140674 d!44391))

(declare-fun d!44519 () Bool)

(assert (=> d!44519 (= (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215)) (not (isEmpty!422 (getValueByKey!174 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))))

(declare-fun bs!5932 () Bool)

(assert (= bs!5932 d!44519))

(assert (=> bs!5932 m!167735))

(declare-fun m!169671 () Bool)

(assert (=> bs!5932 m!169671))

(assert (=> b!140594 d!44519))

(declare-fun b!141532 () Bool)

(declare-fun e!92226 () Option!180)

(assert (=> b!141532 (= e!92226 None!178)))

(declare-fun b!141530 () Bool)

(declare-fun e!92225 () Option!180)

(assert (=> b!141530 (= e!92225 e!92226)))

(declare-fun c!26654 () Bool)

(assert (=> b!141530 (= c!26654 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))) lt!73215))))))

(declare-fun b!141529 () Bool)

(assert (=> b!141529 (= e!92225 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))))

(declare-fun c!26653 () Bool)

(declare-fun d!44521 () Bool)

(assert (=> d!44521 (= c!26653 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))) lt!73215)))))

(assert (=> d!44521 (= (getValueByKey!174 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215) e!92225)))

(declare-fun b!141531 () Bool)

(assert (=> b!141531 (= e!92226 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))) lt!73215))))

(assert (= (and d!44521 c!26653) b!141529))

(assert (= (and d!44521 (not c!26653)) b!141530))

(assert (= (and b!141530 c!26654) b!141531))

(assert (= (and b!141530 (not c!26654)) b!141532))

(declare-fun m!169673 () Bool)

(assert (=> b!141531 m!169673))

(assert (=> b!140594 d!44521))

(assert (=> b!140939 d!44391))

(declare-fun d!44523 () Bool)

(declare-fun res!67521 () Bool)

(declare-fun e!92227 () Bool)

(assert (=> d!44523 (=> res!67521 e!92227)))

(assert (=> d!44523 (= res!67521 (and ((_ is Cons!1735) (toList!871 lt!73394)) (= (_1!1339 (h!2342 (toList!871 lt!73394))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44523 (= (containsKey!178 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92227)))

(declare-fun b!141533 () Bool)

(declare-fun e!92228 () Bool)

(assert (=> b!141533 (= e!92227 e!92228)))

(declare-fun res!67522 () Bool)

(assert (=> b!141533 (=> (not res!67522) (not e!92228))))

(assert (=> b!141533 (= res!67522 (and (or (not ((_ is Cons!1735) (toList!871 lt!73394))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73394))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) (toList!871 lt!73394)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73394))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141534 () Bool)

(assert (=> b!141534 (= e!92228 (containsKey!178 (t!6314 (toList!871 lt!73394)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44523 (not res!67521)) b!141533))

(assert (= (and b!141533 res!67522) b!141534))

(declare-fun m!169675 () Bool)

(assert (=> b!141534 m!169675))

(assert (=> d!43897 d!44523))

(declare-fun b!141535 () Bool)

(assert (=> b!141535 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141535 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2576 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089))))))

(declare-fun lt!74146 () ListLongMap!1711)

(declare-fun e!92229 () Bool)

(assert (=> b!141535 (= e!92229 (= (apply!120 lt!74146 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141536 () Bool)

(declare-fun e!92231 () Bool)

(assert (=> b!141536 (= e!92231 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141536 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141537 () Bool)

(declare-fun res!67524 () Bool)

(declare-fun e!92232 () Bool)

(assert (=> b!141537 (=> (not res!67524) (not e!92232))))

(assert (=> b!141537 (= res!67524 (not (contains!910 lt!74146 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141538 () Bool)

(declare-fun e!92235 () Bool)

(assert (=> b!141538 (= e!92235 e!92229)))

(assert (=> b!141538 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67526 () Bool)

(assert (=> b!141538 (= res!67526 (contains!910 lt!74146 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141538 (=> (not res!67526) (not e!92229))))

(declare-fun b!141539 () Bool)

(declare-fun lt!74142 () Unit!4393)

(declare-fun lt!74140 () Unit!4393)

(assert (=> b!141539 (= lt!74142 lt!74140)))

(declare-fun lt!74143 () ListLongMap!1711)

(declare-fun lt!74145 () (_ BitVec 64))

(declare-fun lt!74144 () V!3553)

(declare-fun lt!74141 () (_ BitVec 64))

(assert (=> b!141539 (not (contains!910 (+!167 lt!74143 (tuple2!2657 lt!74145 lt!74144)) lt!74141))))

(assert (=> b!141539 (= lt!74140 (addStillNotContains!65 lt!74143 lt!74145 lt!74144 lt!74141))))

(assert (=> b!141539 (= lt!74141 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141539 (= lt!74144 (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141539 (= lt!74145 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15684 () ListLongMap!1711)

(assert (=> b!141539 (= lt!74143 call!15684)))

(declare-fun e!92233 () ListLongMap!1711)

(assert (=> b!141539 (= e!92233 (+!167 call!15684 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141540 () Bool)

(assert (=> b!141540 (= e!92232 e!92235)))

(declare-fun c!26658 () Bool)

(assert (=> b!141540 (= c!26658 e!92231)))

(declare-fun res!67523 () Bool)

(assert (=> b!141540 (=> (not res!67523) (not e!92231))))

(assert (=> b!141540 (= res!67523 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15681 () Bool)

(assert (=> bm!15681 (= call!15684 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141541 () Bool)

(assert (=> b!141541 (= e!92233 call!15684)))

(declare-fun b!141542 () Bool)

(declare-fun e!92230 () Bool)

(assert (=> b!141542 (= e!92235 e!92230)))

(declare-fun c!26656 () Bool)

(assert (=> b!141542 (= c!26656 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!44525 () Bool)

(assert (=> d!44525 e!92232))

(declare-fun res!67525 () Bool)

(assert (=> d!44525 (=> (not res!67525) (not e!92232))))

(assert (=> d!44525 (= res!67525 (not (contains!910 lt!74146 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92234 () ListLongMap!1711)

(assert (=> d!44525 (= lt!74146 e!92234)))

(declare-fun c!26657 () Bool)

(assert (=> d!44525 (= c!26657 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44525 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44525 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)) lt!74146)))

(declare-fun b!141543 () Bool)

(assert (=> b!141543 (= e!92234 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141544 () Bool)

(assert (=> b!141544 (= e!92230 (isEmpty!421 lt!74146))))

(declare-fun b!141545 () Bool)

(assert (=> b!141545 (= e!92234 e!92233)))

(declare-fun c!26655 () Bool)

(assert (=> b!141545 (= c!26655 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141546 () Bool)

(assert (=> b!141546 (= e!92230 (= lt!74146 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089) (mask!7278 newMap!16) (ite c!26231 (ite c!26232 lt!73106 lt!73111) (extraKeys!2694 newMap!16)) (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44525 c!26657) b!141543))

(assert (= (and d!44525 (not c!26657)) b!141545))

(assert (= (and b!141545 c!26655) b!141539))

(assert (= (and b!141545 (not c!26655)) b!141541))

(assert (= (or b!141539 b!141541) bm!15681))

(assert (= (and d!44525 res!67525) b!141537))

(assert (= (and b!141537 res!67524) b!141540))

(assert (= (and b!141540 res!67523) b!141536))

(assert (= (and b!141540 c!26658) b!141538))

(assert (= (and b!141540 (not c!26658)) b!141542))

(assert (= (and b!141538 res!67526) b!141535))

(assert (= (and b!141542 c!26656) b!141546))

(assert (= (and b!141542 (not c!26656)) b!141544))

(declare-fun b_lambda!6349 () Bool)

(assert (=> (not b_lambda!6349) (not b!141535)))

(assert (=> b!141535 t!6328))

(declare-fun b_and!8849 () Bool)

(assert (= b_and!8845 (and (=> t!6328 result!4187) b_and!8849)))

(assert (=> b!141535 t!6330))

(declare-fun b_and!8851 () Bool)

(assert (= b_and!8847 (and (=> t!6330 result!4189) b_and!8851)))

(declare-fun b_lambda!6351 () Bool)

(assert (=> (not b_lambda!6351) (not b!141539)))

(assert (=> b!141539 t!6328))

(declare-fun b_and!8853 () Bool)

(assert (= b_and!8849 (and (=> t!6328 result!4187) b_and!8853)))

(assert (=> b!141539 t!6330))

(declare-fun b_and!8855 () Bool)

(assert (= b_and!8851 (and (=> t!6330 result!4189) b_and!8855)))

(declare-fun m!169677 () Bool)

(assert (=> d!44525 m!169677))

(assert (=> d!44525 m!166687))

(declare-fun m!169679 () Bool)

(assert (=> bm!15681 m!169679))

(declare-fun m!169681 () Bool)

(assert (=> b!141537 m!169681))

(assert (=> b!141536 m!167925))

(assert (=> b!141536 m!167925))

(assert (=> b!141536 m!167927))

(declare-fun m!169683 () Bool)

(assert (=> b!141535 m!169683))

(assert (=> b!141535 m!166703))

(declare-fun m!169685 () Bool)

(assert (=> b!141535 m!169685))

(assert (=> b!141535 m!167925))

(assert (=> b!141535 m!166703))

(assert (=> b!141535 m!169683))

(assert (=> b!141535 m!167925))

(declare-fun m!169687 () Bool)

(assert (=> b!141535 m!169687))

(assert (=> b!141538 m!167925))

(assert (=> b!141538 m!167925))

(declare-fun m!169689 () Bool)

(assert (=> b!141538 m!169689))

(declare-fun m!169691 () Bool)

(assert (=> b!141544 m!169691))

(assert (=> b!141545 m!167925))

(assert (=> b!141545 m!167925))

(assert (=> b!141545 m!167927))

(assert (=> b!141539 m!169683))

(assert (=> b!141539 m!166703))

(assert (=> b!141539 m!169685))

(declare-fun m!169693 () Bool)

(assert (=> b!141539 m!169693))

(assert (=> b!141539 m!166703))

(declare-fun m!169695 () Bool)

(assert (=> b!141539 m!169695))

(assert (=> b!141539 m!169683))

(declare-fun m!169697 () Bool)

(assert (=> b!141539 m!169697))

(assert (=> b!141539 m!167925))

(assert (=> b!141539 m!169693))

(declare-fun m!169699 () Bool)

(assert (=> b!141539 m!169699))

(assert (=> b!141546 m!169679))

(assert (=> b!140522 d!44525))

(declare-fun d!44527 () Bool)

(assert (=> d!44527 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!73206)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!73206)))))

(assert (=> d!43857 d!44527))

(declare-fun b!141550 () Bool)

(declare-fun e!92237 () Option!180)

(assert (=> b!141550 (= e!92237 None!178)))

(declare-fun b!141548 () Bool)

(declare-fun e!92236 () Option!180)

(assert (=> b!141548 (= e!92236 e!92237)))

(declare-fun c!26660 () Bool)

(assert (=> b!141548 (= c!26660 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))) lt!73206))))))

(declare-fun b!141547 () Bool)

(assert (=> b!141547 (= e!92236 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))))

(declare-fun d!44529 () Bool)

(declare-fun c!26659 () Bool)

(assert (=> d!44529 (= c!26659 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))) lt!73206)))))

(assert (=> d!44529 (= (getValueByKey!174 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!73206) e!92236)))

(declare-fun b!141549 () Bool)

(assert (=> b!141549 (= e!92237 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))) lt!73206))))

(assert (= (and d!44529 c!26659) b!141547))

(assert (= (and d!44529 (not c!26659)) b!141548))

(assert (= (and b!141548 c!26660) b!141549))

(assert (= (and b!141548 (not c!26660)) b!141550))

(declare-fun m!169701 () Bool)

(assert (=> b!141549 m!169701))

(assert (=> d!43857 d!44529))

(declare-fun d!44531 () Bool)

(declare-fun e!92238 () Bool)

(assert (=> d!44531 e!92238))

(declare-fun res!67528 () Bool)

(assert (=> d!44531 (=> (not res!67528) (not e!92238))))

(declare-fun lt!74149 () ListLongMap!1711)

(assert (=> d!44531 (= res!67528 (contains!910 lt!74149 (_1!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74150 () List!1739)

(assert (=> d!44531 (= lt!74149 (ListLongMap!1712 lt!74150))))

(declare-fun lt!74147 () Unit!4393)

(declare-fun lt!74148 () Unit!4393)

(assert (=> d!44531 (= lt!74147 lt!74148)))

(assert (=> d!44531 (= (getValueByKey!174 lt!74150 (_1!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44531 (= lt!74148 (lemmaContainsTupThenGetReturnValue!91 lt!74150 (_1!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44531 (= lt!74150 (insertStrictlySorted!94 (toList!871 (ite c!26457 call!15621 (ite c!26460 call!15624 call!15619))) (_1!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44531 (= (+!167 (ite c!26457 call!15621 (ite c!26460 call!15624 call!15619)) (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74149)))

(declare-fun b!141551 () Bool)

(declare-fun res!67527 () Bool)

(assert (=> b!141551 (=> (not res!67527) (not e!92238))))

(assert (=> b!141551 (= res!67527 (= (getValueByKey!174 (toList!871 lt!74149) (_1!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141552 () Bool)

(assert (=> b!141552 (= e!92238 (contains!914 (toList!871 lt!74149) (ite (or c!26457 c!26460) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44531 res!67528) b!141551))

(assert (= (and b!141551 res!67527) b!141552))

(declare-fun m!169703 () Bool)

(assert (=> d!44531 m!169703))

(declare-fun m!169705 () Bool)

(assert (=> d!44531 m!169705))

(declare-fun m!169707 () Bool)

(assert (=> d!44531 m!169707))

(declare-fun m!169709 () Bool)

(assert (=> d!44531 m!169709))

(declare-fun m!169711 () Bool)

(assert (=> b!141551 m!169711))

(declare-fun m!169713 () Bool)

(assert (=> b!141552 m!169713))

(assert (=> bm!15621 d!44531))

(declare-fun b!141556 () Bool)

(declare-fun e!92240 () Option!180)

(assert (=> b!141556 (= e!92240 None!178)))

(declare-fun b!141554 () Bool)

(declare-fun e!92239 () Option!180)

(assert (=> b!141554 (= e!92239 e!92240)))

(declare-fun c!26662 () Bool)

(assert (=> b!141554 (= c!26662 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73020))))))

(declare-fun b!141553 () Bool)

(assert (=> b!141553 (= e!92239 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))))

(declare-fun c!26661 () Bool)

(declare-fun d!44533 () Bool)

(assert (=> d!44533 (= c!26661 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73020)))))

(assert (=> d!44533 (= (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73020) e!92239)))

(declare-fun b!141555 () Bool)

(assert (=> b!141555 (= e!92240 (getValueByKey!174 (t!6314 (t!6314 (toList!871 (+!167 lt!73001 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73020))))

(assert (= (and d!44533 c!26661) b!141553))

(assert (= (and d!44533 (not c!26661)) b!141554))

(assert (= (and b!141554 c!26662) b!141555))

(assert (= (and b!141554 (not c!26662)) b!141556))

(declare-fun m!169715 () Bool)

(assert (=> b!141555 m!169715))

(assert (=> b!141177 d!44533))

(assert (=> d!43871 d!43847))

(assert (=> d!43871 d!43849))

(declare-fun d!44535 () Bool)

(declare-fun e!92242 () Bool)

(assert (=> d!44535 e!92242))

(declare-fun res!67529 () Bool)

(assert (=> d!44535 (=> res!67529 e!92242)))

(declare-fun lt!74154 () Bool)

(assert (=> d!44535 (= res!67529 (not lt!74154))))

(declare-fun lt!74153 () Bool)

(assert (=> d!44535 (= lt!74154 lt!74153)))

(declare-fun lt!74152 () Unit!4393)

(declare-fun e!92241 () Unit!4393)

(assert (=> d!44535 (= lt!74152 e!92241)))

(declare-fun c!26663 () Bool)

(assert (=> d!44535 (= c!26663 lt!74153)))

(assert (=> d!44535 (= lt!74153 (containsKey!178 (toList!871 lt!73210) lt!73205))))

(assert (=> d!44535 (= (contains!910 lt!73210 lt!73205) lt!74154)))

(declare-fun b!141557 () Bool)

(declare-fun lt!74151 () Unit!4393)

(assert (=> b!141557 (= e!92241 lt!74151)))

(assert (=> b!141557 (= lt!74151 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73210) lt!73205))))

(assert (=> b!141557 (isDefined!128 (getValueByKey!174 (toList!871 lt!73210) lt!73205))))

(declare-fun b!141558 () Bool)

(declare-fun Unit!4464 () Unit!4393)

(assert (=> b!141558 (= e!92241 Unit!4464)))

(declare-fun b!141559 () Bool)

(assert (=> b!141559 (= e!92242 (isDefined!128 (getValueByKey!174 (toList!871 lt!73210) lt!73205)))))

(assert (= (and d!44535 c!26663) b!141557))

(assert (= (and d!44535 (not c!26663)) b!141558))

(assert (= (and d!44535 (not res!67529)) b!141559))

(declare-fun m!169717 () Bool)

(assert (=> d!44535 m!169717))

(declare-fun m!169719 () Bool)

(assert (=> b!141557 m!169719))

(assert (=> b!141557 m!167743))

(assert (=> b!141557 m!167743))

(declare-fun m!169721 () Bool)

(assert (=> b!141557 m!169721))

(assert (=> b!141559 m!167743))

(assert (=> b!141559 m!167743))

(assert (=> b!141559 m!169721))

(assert (=> d!43871 d!44535))

(assert (=> d!43871 d!43867))

(declare-fun d!44537 () Bool)

(assert (=> d!44537 (= (apply!120 (+!167 lt!73210 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) lt!73205) (apply!120 lt!73210 lt!73205))))

(assert (=> d!44537 true))

(declare-fun _$34!1010 () Unit!4393)

(assert (=> d!44537 (= (choose!869 lt!73210 lt!73208 (minValue!2789 newMap!16) lt!73205) _$34!1010)))

(declare-fun bs!5933 () Bool)

(assert (= bs!5933 d!44537))

(assert (=> bs!5933 m!166879))

(assert (=> bs!5933 m!166879))

(assert (=> bs!5933 m!166891))

(assert (=> bs!5933 m!166871))

(assert (=> d!43871 d!44537))

(declare-fun d!44539 () Bool)

(assert (=> d!44539 (= (get!1526 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3272 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140884 d!44539))

(declare-fun d!44541 () Bool)

(assert (=> d!44541 (not (contains!910 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499)) lt!73496))))

(declare-fun lt!74155 () Unit!4393)

(assert (=> d!44541 (= lt!74155 (choose!874 lt!73498 lt!73500 lt!73499 lt!73496))))

(declare-fun e!92243 () Bool)

(assert (=> d!44541 e!92243))

(declare-fun res!67530 () Bool)

(assert (=> d!44541 (=> (not res!67530) (not e!92243))))

(assert (=> d!44541 (= res!67530 (not (contains!910 lt!73498 lt!73496)))))

(assert (=> d!44541 (= (addStillNotContains!65 lt!73498 lt!73500 lt!73499 lt!73496) lt!74155)))

(declare-fun b!141560 () Bool)

(assert (=> b!141560 (= e!92243 (not (= lt!73500 lt!73496)))))

(assert (= (and d!44541 res!67530) b!141560))

(assert (=> d!44541 m!167475))

(assert (=> d!44541 m!167475))

(assert (=> d!44541 m!167481))

(declare-fun m!169723 () Bool)

(assert (=> d!44541 m!169723))

(declare-fun m!169725 () Bool)

(assert (=> d!44541 m!169725))

(assert (=> b!140444 d!44541))

(assert (=> b!140444 d!44041))

(declare-fun d!44543 () Bool)

(declare-fun e!92244 () Bool)

(assert (=> d!44543 e!92244))

(declare-fun res!67532 () Bool)

(assert (=> d!44543 (=> (not res!67532) (not e!92244))))

(declare-fun lt!74158 () ListLongMap!1711)

(assert (=> d!44543 (= res!67532 (contains!910 lt!74158 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74159 () List!1739)

(assert (=> d!44543 (= lt!74158 (ListLongMap!1712 lt!74159))))

(declare-fun lt!74156 () Unit!4393)

(declare-fun lt!74157 () Unit!4393)

(assert (=> d!44543 (= lt!74156 lt!74157)))

(assert (=> d!44543 (= (getValueByKey!174 lt!74159 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44543 (= lt!74157 (lemmaContainsTupThenGetReturnValue!91 lt!74159 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44543 (= lt!74159 (insertStrictlySorted!94 (toList!871 call!15569) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44543 (= (+!167 call!15569 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74158)))

(declare-fun b!141561 () Bool)

(declare-fun res!67531 () Bool)

(assert (=> b!141561 (=> (not res!67531) (not e!92244))))

(assert (=> b!141561 (= res!67531 (= (getValueByKey!174 (toList!871 lt!74158) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141562 () Bool)

(assert (=> b!141562 (= e!92244 (contains!914 (toList!871 lt!74158) (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44543 res!67532) b!141561))

(assert (= (and b!141561 res!67531) b!141562))

(declare-fun m!169727 () Bool)

(assert (=> d!44543 m!169727))

(declare-fun m!169729 () Bool)

(assert (=> d!44543 m!169729))

(declare-fun m!169731 () Bool)

(assert (=> d!44543 m!169731))

(declare-fun m!169733 () Bool)

(assert (=> d!44543 m!169733))

(declare-fun m!169735 () Bool)

(assert (=> b!141561 m!169735))

(declare-fun m!169737 () Bool)

(assert (=> b!141562 m!169737))

(assert (=> b!140444 d!44543))

(declare-fun d!44545 () Bool)

(declare-fun e!92246 () Bool)

(assert (=> d!44545 e!92246))

(declare-fun res!67533 () Bool)

(assert (=> d!44545 (=> res!67533 e!92246)))

(declare-fun lt!74163 () Bool)

(assert (=> d!44545 (= res!67533 (not lt!74163))))

(declare-fun lt!74162 () Bool)

(assert (=> d!44545 (= lt!74163 lt!74162)))

(declare-fun lt!74161 () Unit!4393)

(declare-fun e!92245 () Unit!4393)

(assert (=> d!44545 (= lt!74161 e!92245)))

(declare-fun c!26664 () Bool)

(assert (=> d!44545 (= c!26664 lt!74162)))

(assert (=> d!44545 (= lt!74162 (containsKey!178 (toList!871 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499))) lt!73496))))

(assert (=> d!44545 (= (contains!910 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499)) lt!73496) lt!74163)))

(declare-fun b!141563 () Bool)

(declare-fun lt!74160 () Unit!4393)

(assert (=> b!141563 (= e!92245 lt!74160)))

(assert (=> b!141563 (= lt!74160 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499))) lt!73496))))

(assert (=> b!141563 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499))) lt!73496))))

(declare-fun b!141564 () Bool)

(declare-fun Unit!4465 () Unit!4393)

(assert (=> b!141564 (= e!92245 Unit!4465)))

(declare-fun b!141565 () Bool)

(assert (=> b!141565 (= e!92246 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499))) lt!73496)))))

(assert (= (and d!44545 c!26664) b!141563))

(assert (= (and d!44545 (not c!26664)) b!141564))

(assert (= (and d!44545 (not res!67533)) b!141565))

(declare-fun m!169739 () Bool)

(assert (=> d!44545 m!169739))

(declare-fun m!169741 () Bool)

(assert (=> b!141563 m!169741))

(declare-fun m!169743 () Bool)

(assert (=> b!141563 m!169743))

(assert (=> b!141563 m!169743))

(declare-fun m!169745 () Bool)

(assert (=> b!141563 m!169745))

(assert (=> b!141565 m!169743))

(assert (=> b!141565 m!169743))

(assert (=> b!141565 m!169745))

(assert (=> b!140444 d!44545))

(declare-fun d!44547 () Bool)

(declare-fun e!92247 () Bool)

(assert (=> d!44547 e!92247))

(declare-fun res!67535 () Bool)

(assert (=> d!44547 (=> (not res!67535) (not e!92247))))

(declare-fun lt!74166 () ListLongMap!1711)

(assert (=> d!44547 (= res!67535 (contains!910 lt!74166 (_1!1339 (tuple2!2657 lt!73500 lt!73499))))))

(declare-fun lt!74167 () List!1739)

(assert (=> d!44547 (= lt!74166 (ListLongMap!1712 lt!74167))))

(declare-fun lt!74164 () Unit!4393)

(declare-fun lt!74165 () Unit!4393)

(assert (=> d!44547 (= lt!74164 lt!74165)))

(assert (=> d!44547 (= (getValueByKey!174 lt!74167 (_1!1339 (tuple2!2657 lt!73500 lt!73499))) (Some!179 (_2!1339 (tuple2!2657 lt!73500 lt!73499))))))

(assert (=> d!44547 (= lt!74165 (lemmaContainsTupThenGetReturnValue!91 lt!74167 (_1!1339 (tuple2!2657 lt!73500 lt!73499)) (_2!1339 (tuple2!2657 lt!73500 lt!73499))))))

(assert (=> d!44547 (= lt!74167 (insertStrictlySorted!94 (toList!871 lt!73498) (_1!1339 (tuple2!2657 lt!73500 lt!73499)) (_2!1339 (tuple2!2657 lt!73500 lt!73499))))))

(assert (=> d!44547 (= (+!167 lt!73498 (tuple2!2657 lt!73500 lt!73499)) lt!74166)))

(declare-fun b!141566 () Bool)

(declare-fun res!67534 () Bool)

(assert (=> b!141566 (=> (not res!67534) (not e!92247))))

(assert (=> b!141566 (= res!67534 (= (getValueByKey!174 (toList!871 lt!74166) (_1!1339 (tuple2!2657 lt!73500 lt!73499))) (Some!179 (_2!1339 (tuple2!2657 lt!73500 lt!73499)))))))

(declare-fun b!141567 () Bool)

(assert (=> b!141567 (= e!92247 (contains!914 (toList!871 lt!74166) (tuple2!2657 lt!73500 lt!73499)))))

(assert (= (and d!44547 res!67535) b!141566))

(assert (= (and b!141566 res!67534) b!141567))

(declare-fun m!169747 () Bool)

(assert (=> d!44547 m!169747))

(declare-fun m!169749 () Bool)

(assert (=> d!44547 m!169749))

(declare-fun m!169751 () Bool)

(assert (=> d!44547 m!169751))

(declare-fun m!169753 () Bool)

(assert (=> d!44547 m!169753))

(declare-fun m!169755 () Bool)

(assert (=> b!141566 m!169755))

(declare-fun m!169757 () Bool)

(assert (=> b!141567 m!169757))

(assert (=> b!140444 d!44547))

(declare-fun d!44549 () Bool)

(assert (=> d!44549 (= (apply!120 lt!73697 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73697) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5934 () Bool)

(assert (= bs!5934 d!44549))

(assert (=> bs!5934 m!166699))

(declare-fun m!169759 () Bool)

(assert (=> bs!5934 m!169759))

(assert (=> bs!5934 m!169759))

(declare-fun m!169761 () Bool)

(assert (=> bs!5934 m!169761))

(assert (=> b!140820 d!44549))

(assert (=> b!140820 d!44041))

(declare-fun d!44551 () Bool)

(declare-fun res!67536 () Bool)

(declare-fun e!92248 () Bool)

(assert (=> d!44551 (=> res!67536 e!92248)))

(assert (=> d!44551 (= res!67536 (and ((_ is Cons!1735) (toList!871 lt!73386)) (= (_1!1339 (h!2342 (toList!871 lt!73386))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44551 (= (containsKey!178 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92248)))

(declare-fun b!141568 () Bool)

(declare-fun e!92249 () Bool)

(assert (=> b!141568 (= e!92248 e!92249)))

(declare-fun res!67537 () Bool)

(assert (=> b!141568 (=> (not res!67537) (not e!92249))))

(assert (=> b!141568 (= res!67537 (and (or (not ((_ is Cons!1735) (toList!871 lt!73386))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73386))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1735) (toList!871 lt!73386)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73386))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141569 () Bool)

(assert (=> b!141569 (= e!92249 (containsKey!178 (t!6314 (toList!871 lt!73386)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44551 (not res!67536)) b!141568))

(assert (= (and b!141568 res!67537) b!141569))

(declare-fun m!169763 () Bool)

(assert (=> b!141569 m!169763))

(assert (=> d!43949 d!44551))

(declare-fun b!141570 () Bool)

(assert (=> b!141570 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> b!141570 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))))))

(declare-fun e!92250 () Bool)

(declare-fun lt!74174 () ListLongMap!1711)

(assert (=> b!141570 (= e!92250 (= (apply!120 lt!74174 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141571 () Bool)

(declare-fun e!92252 () Bool)

(assert (=> b!141571 (= e!92252 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141571 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!141572 () Bool)

(declare-fun res!67539 () Bool)

(declare-fun e!92253 () Bool)

(assert (=> b!141572 (=> (not res!67539) (not e!92253))))

(assert (=> b!141572 (= res!67539 (not (contains!910 lt!74174 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141573 () Bool)

(declare-fun e!92256 () Bool)

(assert (=> b!141573 (= e!92256 e!92250)))

(assert (=> b!141573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun res!67541 () Bool)

(assert (=> b!141573 (= res!67541 (contains!910 lt!74174 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141573 (=> (not res!67541) (not e!92250))))

(declare-fun b!141574 () Bool)

(declare-fun lt!74170 () Unit!4393)

(declare-fun lt!74168 () Unit!4393)

(assert (=> b!141574 (= lt!74170 lt!74168)))

(declare-fun lt!74171 () ListLongMap!1711)

(declare-fun lt!74172 () V!3553)

(declare-fun lt!74169 () (_ BitVec 64))

(declare-fun lt!74173 () (_ BitVec 64))

(assert (=> b!141574 (not (contains!910 (+!167 lt!74171 (tuple2!2657 lt!74173 lt!74172)) lt!74169))))

(assert (=> b!141574 (= lt!74168 (addStillNotContains!65 lt!74171 lt!74173 lt!74172 lt!74169))))

(assert (=> b!141574 (= lt!74169 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141574 (= lt!74172 (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141574 (= lt!74173 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun call!15685 () ListLongMap!1711)

(assert (=> b!141574 (= lt!74171 call!15685)))

(declare-fun e!92254 () ListLongMap!1711)

(assert (=> b!141574 (= e!92254 (+!167 call!15685 (tuple2!2657 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141575 () Bool)

(assert (=> b!141575 (= e!92253 e!92256)))

(declare-fun c!26668 () Bool)

(assert (=> b!141575 (= c!26668 e!92252)))

(declare-fun res!67538 () Bool)

(assert (=> b!141575 (=> (not res!67538) (not e!92252))))

(assert (=> b!141575 (= res!67538 (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun bm!15682 () Bool)

(assert (=> bm!15682 (= call!15685 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141576 () Bool)

(assert (=> b!141576 (= e!92254 call!15685)))

(declare-fun b!141577 () Bool)

(declare-fun e!92251 () Bool)

(assert (=> b!141577 (= e!92256 e!92251)))

(declare-fun c!26666 () Bool)

(assert (=> b!141577 (= c!26666 (bvslt #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(declare-fun d!44553 () Bool)

(assert (=> d!44553 e!92253))

(declare-fun res!67540 () Bool)

(assert (=> d!44553 (=> (not res!67540) (not e!92253))))

(assert (=> d!44553 (= res!67540 (not (contains!910 lt!74174 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92255 () ListLongMap!1711)

(assert (=> d!44553 (= lt!74174 e!92255)))

(declare-fun c!26667 () Bool)

(assert (=> d!44553 (= c!26667 (bvsge #b00000000000000000000000000000000 (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!44553 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44553 (= (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74174)))

(declare-fun b!141578 () Bool)

(assert (=> b!141578 (= e!92255 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141579 () Bool)

(assert (=> b!141579 (= e!92251 (isEmpty!421 lt!74174))))

(declare-fun b!141580 () Bool)

(assert (=> b!141580 (= e!92255 e!92254)))

(declare-fun c!26665 () Bool)

(assert (=> b!141580 (= c!26665 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141581 () Bool)

(assert (=> b!141581 (= e!92251 (= lt!74174 (getCurrentListMapNoExtraKeys!132 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44553 c!26667) b!141578))

(assert (= (and d!44553 (not c!26667)) b!141580))

(assert (= (and b!141580 c!26665) b!141574))

(assert (= (and b!141580 (not c!26665)) b!141576))

(assert (= (or b!141574 b!141576) bm!15682))

(assert (= (and d!44553 res!67540) b!141572))

(assert (= (and b!141572 res!67539) b!141575))

(assert (= (and b!141575 res!67538) b!141571))

(assert (= (and b!141575 c!26668) b!141573))

(assert (= (and b!141575 (not c!26668)) b!141577))

(assert (= (and b!141573 res!67541) b!141570))

(assert (= (and b!141577 c!26666) b!141581))

(assert (= (and b!141577 (not c!26666)) b!141579))

(declare-fun b_lambda!6353 () Bool)

(assert (=> (not b_lambda!6353) (not b!141570)))

(assert (=> b!141570 t!6328))

(declare-fun b_and!8857 () Bool)

(assert (= b_and!8853 (and (=> t!6328 result!4187) b_and!8857)))

(assert (=> b!141570 t!6330))

(declare-fun b_and!8859 () Bool)

(assert (= b_and!8855 (and (=> t!6330 result!4189) b_and!8859)))

(declare-fun b_lambda!6355 () Bool)

(assert (=> (not b_lambda!6355) (not b!141574)))

(assert (=> b!141574 t!6328))

(declare-fun b_and!8861 () Bool)

(assert (= b_and!8857 (and (=> t!6328 result!4187) b_and!8861)))

(assert (=> b!141574 t!6330))

(declare-fun b_and!8863 () Bool)

(assert (= b_and!8859 (and (=> t!6330 result!4189) b_and!8863)))

(declare-fun m!169765 () Bool)

(assert (=> d!44553 m!169765))

(assert (=> d!44553 m!166687))

(declare-fun m!169767 () Bool)

(assert (=> bm!15682 m!169767))

(declare-fun m!169769 () Bool)

(assert (=> b!141572 m!169769))

(assert (=> b!141571 m!168705))

(assert (=> b!141571 m!168705))

(assert (=> b!141571 m!168707))

(assert (=> b!141570 m!168713))

(assert (=> b!141570 m!166703))

(assert (=> b!141570 m!168715))

(assert (=> b!141570 m!168705))

(assert (=> b!141570 m!166703))

(assert (=> b!141570 m!168713))

(assert (=> b!141570 m!168705))

(declare-fun m!169771 () Bool)

(assert (=> b!141570 m!169771))

(assert (=> b!141573 m!168705))

(assert (=> b!141573 m!168705))

(declare-fun m!169773 () Bool)

(assert (=> b!141573 m!169773))

(declare-fun m!169775 () Bool)

(assert (=> b!141579 m!169775))

(assert (=> b!141580 m!168705))

(assert (=> b!141580 m!168705))

(assert (=> b!141580 m!168707))

(assert (=> b!141574 m!168713))

(assert (=> b!141574 m!166703))

(assert (=> b!141574 m!168715))

(declare-fun m!169777 () Bool)

(assert (=> b!141574 m!169777))

(assert (=> b!141574 m!166703))

(declare-fun m!169779 () Bool)

(assert (=> b!141574 m!169779))

(assert (=> b!141574 m!168713))

(declare-fun m!169781 () Bool)

(assert (=> b!141574 m!169781))

(assert (=> b!141574 m!168705))

(assert (=> b!141574 m!169777))

(declare-fun m!169783 () Bool)

(assert (=> b!141574 m!169783))

(assert (=> b!141581 m!169767))

(assert (=> bm!15654 d!44553))

(declare-fun d!44555 () Bool)

(assert (=> d!44555 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74175 () Unit!4393)

(assert (=> d!44555 (= lt!74175 (choose!871 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92257 () Bool)

(assert (=> d!44555 e!92257))

(declare-fun res!67542 () Bool)

(assert (=> d!44555 (=> (not res!67542) (not e!92257))))

(assert (=> d!44555 (= res!67542 (isStrictlySorted!320 (toList!871 lt!73128)))))

(assert (=> d!44555 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74175)))

(declare-fun b!141582 () Bool)

(assert (=> b!141582 (= e!92257 (containsKey!178 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44555 res!67542) b!141582))

(assert (=> d!44555 m!166699))

(assert (=> d!44555 m!167883))

(assert (=> d!44555 m!167883))

(assert (=> d!44555 m!168289))

(assert (=> d!44555 m!166699))

(declare-fun m!169785 () Bool)

(assert (=> d!44555 m!169785))

(declare-fun m!169787 () Bool)

(assert (=> d!44555 m!169787))

(assert (=> b!141582 m!166699))

(assert (=> b!141582 m!168285))

(assert (=> b!140860 d!44555))

(assert (=> b!140860 d!44321))

(assert (=> b!140860 d!44323))

(declare-fun lt!74176 () Bool)

(declare-fun d!44557 () Bool)

(assert (=> d!44557 (= lt!74176 (select (content!138 (toList!871 lt!73421)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun e!92259 () Bool)

(assert (=> d!44557 (= lt!74176 e!92259)))

(declare-fun res!67543 () Bool)

(assert (=> d!44557 (=> (not res!67543) (not e!92259))))

(assert (=> d!44557 (= res!67543 ((_ is Cons!1735) (toList!871 lt!73421)))))

(assert (=> d!44557 (= (contains!914 (toList!871 lt!73421) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!74176)))

(declare-fun b!141583 () Bool)

(declare-fun e!92258 () Bool)

(assert (=> b!141583 (= e!92259 e!92258)))

(declare-fun res!67544 () Bool)

(assert (=> b!141583 (=> res!67544 e!92258)))

(assert (=> b!141583 (= res!67544 (= (h!2342 (toList!871 lt!73421)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!141584 () Bool)

(assert (=> b!141584 (= e!92258 (contains!914 (t!6314 (toList!871 lt!73421)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!44557 res!67543) b!141583))

(assert (= (and b!141583 (not res!67544)) b!141584))

(declare-fun m!169789 () Bool)

(assert (=> d!44557 m!169789))

(declare-fun m!169791 () Bool)

(assert (=> d!44557 m!169791))

(declare-fun m!169793 () Bool)

(assert (=> b!141584 m!169793))

(assert (=> b!140357 d!44557))

(declare-fun d!44559 () Bool)

(declare-fun e!92261 () Bool)

(assert (=> d!44559 e!92261))

(declare-fun res!67545 () Bool)

(assert (=> d!44559 (=> res!67545 e!92261)))

(declare-fun lt!74180 () Bool)

(assert (=> d!44559 (= res!67545 (not lt!74180))))

(declare-fun lt!74179 () Bool)

(assert (=> d!44559 (= lt!74180 lt!74179)))

(declare-fun lt!74178 () Unit!4393)

(declare-fun e!92260 () Unit!4393)

(assert (=> d!44559 (= lt!74178 e!92260)))

(declare-fun c!26669 () Bool)

(assert (=> d!44559 (= c!26669 lt!74179)))

(assert (=> d!44559 (= lt!74179 (containsKey!178 (toList!871 lt!73850) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44559 (= (contains!910 lt!73850 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74180)))

(declare-fun b!141585 () Bool)

(declare-fun lt!74177 () Unit!4393)

(assert (=> b!141585 (= e!92260 lt!74177)))

(assert (=> b!141585 (= lt!74177 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73850) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141585 (isDefined!128 (getValueByKey!174 (toList!871 lt!73850) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141586 () Bool)

(declare-fun Unit!4466 () Unit!4393)

(assert (=> b!141586 (= e!92260 Unit!4466)))

(declare-fun b!141587 () Bool)

(assert (=> b!141587 (= e!92261 (isDefined!128 (getValueByKey!174 (toList!871 lt!73850) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44559 c!26669) b!141585))

(assert (= (and d!44559 (not c!26669)) b!141586))

(assert (= (and d!44559 (not res!67545)) b!141587))

(declare-fun m!169795 () Bool)

(assert (=> d!44559 m!169795))

(declare-fun m!169797 () Bool)

(assert (=> b!141585 m!169797))

(assert (=> b!141585 m!168895))

(assert (=> b!141585 m!168895))

(declare-fun m!169799 () Bool)

(assert (=> b!141585 m!169799))

(assert (=> b!141587 m!168895))

(assert (=> b!141587 m!168895))

(assert (=> b!141587 m!169799))

(assert (=> bm!15644 d!44559))

(declare-fun d!44561 () Bool)

(declare-fun res!67546 () Bool)

(declare-fun e!92262 () Bool)

(assert (=> d!44561 (=> res!67546 e!92262)))

(assert (=> d!44561 (= res!67546 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15490))) (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15490)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44561 (= (containsKey!178 (t!6314 (toList!871 call!15490)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92262)))

(declare-fun b!141588 () Bool)

(declare-fun e!92263 () Bool)

(assert (=> b!141588 (= e!92262 e!92263)))

(declare-fun res!67547 () Bool)

(assert (=> b!141588 (=> (not res!67547) (not e!92263))))

(assert (=> b!141588 (= res!67547 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 call!15490)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 call!15490)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (t!6314 (toList!871 call!15490))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 call!15490)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!141589 () Bool)

(assert (=> b!141589 (= e!92263 (containsKey!178 (t!6314 (t!6314 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44561 (not res!67546)) b!141588))

(assert (= (and b!141588 res!67547) b!141589))

(assert (=> b!141589 m!166407))

(declare-fun m!169801 () Bool)

(assert (=> b!141589 m!169801))

(assert (=> b!140498 d!44561))

(declare-fun b!141593 () Bool)

(declare-fun e!92265 () Option!180)

(assert (=> b!141593 (= e!92265 None!178)))

(declare-fun b!141591 () Bool)

(declare-fun e!92264 () Option!180)

(assert (=> b!141591 (= e!92264 e!92265)))

(declare-fun c!26671 () Bool)

(assert (=> b!141591 (= c!26671 (and ((_ is Cons!1735) (toList!871 lt!73759)) (not (= (_1!1339 (h!2342 (toList!871 lt!73759))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141590 () Bool)

(assert (=> b!141590 (= e!92264 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73759)))))))

(declare-fun d!44563 () Bool)

(declare-fun c!26670 () Bool)

(assert (=> d!44563 (= c!26670 (and ((_ is Cons!1735) (toList!871 lt!73759)) (= (_1!1339 (h!2342 (toList!871 lt!73759))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44563 (= (getValueByKey!174 (toList!871 lt!73759) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92264)))

(declare-fun b!141592 () Bool)

(assert (=> b!141592 (= e!92265 (getValueByKey!174 (t!6314 (toList!871 lt!73759)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44563 c!26670) b!141590))

(assert (= (and d!44563 (not c!26670)) b!141591))

(assert (= (and b!141591 c!26671) b!141592))

(assert (= (and b!141591 (not c!26671)) b!141593))

(declare-fun m!169803 () Bool)

(assert (=> b!141592 m!169803))

(assert (=> b!140892 d!44563))

(declare-fun d!44565 () Bool)

(declare-fun lt!74181 () Bool)

(assert (=> d!44565 (= lt!74181 (select (content!138 (toList!871 lt!73588)) (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))

(declare-fun e!92267 () Bool)

(assert (=> d!44565 (= lt!74181 e!92267)))

(declare-fun res!67548 () Bool)

(assert (=> d!44565 (=> (not res!67548) (not e!92267))))

(assert (=> d!44565 (= res!67548 ((_ is Cons!1735) (toList!871 lt!73588)))))

(assert (=> d!44565 (= (contains!914 (toList!871 lt!73588) (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) lt!74181)))

(declare-fun b!141594 () Bool)

(declare-fun e!92266 () Bool)

(assert (=> b!141594 (= e!92267 e!92266)))

(declare-fun res!67549 () Bool)

(assert (=> b!141594 (=> res!67549 e!92266)))

(assert (=> b!141594 (= res!67549 (= (h!2342 (toList!871 lt!73588)) (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))

(declare-fun b!141595 () Bool)

(assert (=> b!141595 (= e!92266 (contains!914 (t!6314 (toList!871 lt!73588)) (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))

(assert (= (and d!44565 res!67548) b!141594))

(assert (= (and b!141594 (not res!67549)) b!141595))

(declare-fun m!169805 () Bool)

(assert (=> d!44565 m!169805))

(declare-fun m!169807 () Bool)

(assert (=> d!44565 m!169807))

(declare-fun m!169809 () Bool)

(assert (=> b!141595 m!169809))

(assert (=> b!140596 d!44565))

(declare-fun d!44567 () Bool)

(declare-fun res!67550 () Bool)

(declare-fun e!92268 () Bool)

(assert (=> d!44567 (=> res!67550 e!92268)))

(assert (=> d!44567 (= res!67550 (or ((_ is Nil!1736) lt!73923) ((_ is Nil!1736) (t!6314 lt!73923))))))

(assert (=> d!44567 (= (isStrictlySorted!320 lt!73923) e!92268)))

(declare-fun b!141596 () Bool)

(declare-fun e!92269 () Bool)

(assert (=> b!141596 (= e!92268 e!92269)))

(declare-fun res!67551 () Bool)

(assert (=> b!141596 (=> (not res!67551) (not e!92269))))

(assert (=> b!141596 (= res!67551 (bvslt (_1!1339 (h!2342 lt!73923)) (_1!1339 (h!2342 (t!6314 lt!73923)))))))

(declare-fun b!141597 () Bool)

(assert (=> b!141597 (= e!92269 (isStrictlySorted!320 (t!6314 lt!73923)))))

(assert (= (and d!44567 (not res!67550)) b!141596))

(assert (= (and b!141596 res!67551) b!141597))

(declare-fun m!169811 () Bool)

(assert (=> b!141597 m!169811))

(assert (=> d!44181 d!44567))

(declare-fun d!44569 () Bool)

(declare-fun res!67552 () Bool)

(declare-fun e!92270 () Bool)

(assert (=> d!44569 (=> res!67552 e!92270)))

(assert (=> d!44569 (= res!67552 (or ((_ is Nil!1736) (toList!871 lt!73015)) ((_ is Nil!1736) (t!6314 (toList!871 lt!73015)))))))

(assert (=> d!44569 (= (isStrictlySorted!320 (toList!871 lt!73015)) e!92270)))

(declare-fun b!141598 () Bool)

(declare-fun e!92271 () Bool)

(assert (=> b!141598 (= e!92270 e!92271)))

(declare-fun res!67553 () Bool)

(assert (=> b!141598 (=> (not res!67553) (not e!92271))))

(assert (=> b!141598 (= res!67553 (bvslt (_1!1339 (h!2342 (toList!871 lt!73015))) (_1!1339 (h!2342 (t!6314 (toList!871 lt!73015))))))))

(declare-fun b!141599 () Bool)

(assert (=> b!141599 (= e!92271 (isStrictlySorted!320 (t!6314 (toList!871 lt!73015))))))

(assert (= (and d!44569 (not res!67552)) b!141598))

(assert (= (and b!141598 res!67553) b!141599))

(declare-fun m!169813 () Bool)

(assert (=> b!141599 m!169813))

(assert (=> d!44181 d!44569))

(declare-fun d!44571 () Bool)

(assert (=> d!44571 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun bs!5935 () Bool)

(assert (= bs!5935 d!44571))

(assert (=> bs!5935 m!166931))

(declare-fun m!169815 () Bool)

(assert (=> bs!5935 m!169815))

(assert (=> b!140759 d!44571))

(assert (=> b!140759 d!43883))

(declare-fun d!44573 () Bool)

(assert (=> d!44573 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140453 d!44573))

(declare-fun d!44575 () Bool)

(declare-fun lt!74182 () Bool)

(assert (=> d!44575 (= lt!74182 (select (content!138 (toList!871 lt!73635)) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92273 () Bool)

(assert (=> d!44575 (= lt!74182 e!92273)))

(declare-fun res!67554 () Bool)

(assert (=> d!44575 (=> (not res!67554) (not e!92273))))

(assert (=> d!44575 (= res!67554 ((_ is Cons!1735) (toList!871 lt!73635)))))

(assert (=> d!44575 (= (contains!914 (toList!871 lt!73635) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74182)))

(declare-fun b!141600 () Bool)

(declare-fun e!92272 () Bool)

(assert (=> b!141600 (= e!92273 e!92272)))

(declare-fun res!67555 () Bool)

(assert (=> b!141600 (=> res!67555 e!92272)))

(assert (=> b!141600 (= res!67555 (= (h!2342 (toList!871 lt!73635)) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141601 () Bool)

(assert (=> b!141601 (= e!92272 (contains!914 (t!6314 (toList!871 lt!73635)) (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44575 res!67554) b!141600))

(assert (= (and b!141600 (not res!67555)) b!141601))

(declare-fun m!169817 () Bool)

(assert (=> d!44575 m!169817))

(declare-fun m!169819 () Bool)

(assert (=> d!44575 m!169819))

(declare-fun m!169821 () Bool)

(assert (=> b!141601 m!169821))

(assert (=> b!140679 d!44575))

(declare-fun d!44577 () Bool)

(assert (=> d!44577 (= (apply!120 lt!73764 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73764) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5936 () Bool)

(assert (= bs!5936 d!44577))

(assert (=> bs!5936 m!166699))

(declare-fun m!169823 () Bool)

(assert (=> bs!5936 m!169823))

(assert (=> bs!5936 m!169823))

(declare-fun m!169825 () Bool)

(assert (=> bs!5936 m!169825))

(assert (=> b!140902 d!44577))

(declare-fun c!26672 () Bool)

(declare-fun d!44579 () Bool)

(assert (=> d!44579 (= c!26672 ((_ is ValueCellFull!1121) (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!92274 () V!3553)

(assert (=> d!44579 (= (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92274)))

(declare-fun b!141602 () Bool)

(assert (=> b!141602 (= e!92274 (get!1526 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141603 () Bool)

(assert (=> b!141603 (= e!92274 (get!1527 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44579 c!26672) b!141602))

(assert (= (and d!44579 (not c!26672)) b!141603))

(assert (=> b!141602 m!168341))

(assert (=> b!141602 m!166703))

(declare-fun m!169827 () Bool)

(assert (=> b!141602 m!169827))

(assert (=> b!141603 m!168341))

(assert (=> b!141603 m!166703))

(declare-fun m!169829 () Bool)

(assert (=> b!141603 m!169829))

(assert (=> b!140902 d!44579))

(declare-fun b!141607 () Bool)

(declare-fun e!92276 () Option!180)

(assert (=> b!141607 (= e!92276 None!178)))

(declare-fun b!141605 () Bool)

(declare-fun e!92275 () Option!180)

(assert (=> b!141605 (= e!92275 e!92276)))

(declare-fun c!26674 () Bool)

(assert (=> b!141605 (= c!26674 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73390))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73390)))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!141604 () Bool)

(assert (=> b!141604 (= e!92275 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73390))))))))

(declare-fun d!44581 () Bool)

(declare-fun c!26673 () Bool)

(assert (=> d!44581 (= c!26673 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73390))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73390)))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44581 (= (getValueByKey!174 (t!6314 (toList!871 lt!73390)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92275)))

(declare-fun b!141606 () Bool)

(assert (=> b!141606 (= e!92276 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73390))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44581 c!26673) b!141604))

(assert (= (and d!44581 (not c!26673)) b!141605))

(assert (= (and b!141605 c!26674) b!141606))

(assert (= (and b!141605 (not c!26674)) b!141607))

(declare-fun m!169831 () Bool)

(assert (=> b!141606 m!169831))

(assert (=> b!141016 d!44581))

(declare-fun d!44583 () Bool)

(declare-fun res!67556 () Bool)

(declare-fun e!92277 () Bool)

(assert (=> d!44583 (=> res!67556 e!92277)))

(assert (=> d!44583 (= res!67556 (and ((_ is Cons!1735) (toList!871 lt!73016)) (= (_1!1339 (h!2342 (toList!871 lt!73016))) lt!73011)))))

(assert (=> d!44583 (= (containsKey!178 (toList!871 lt!73016) lt!73011) e!92277)))

(declare-fun b!141608 () Bool)

(declare-fun e!92278 () Bool)

(assert (=> b!141608 (= e!92277 e!92278)))

(declare-fun res!67557 () Bool)

(assert (=> b!141608 (=> (not res!67557) (not e!92278))))

(assert (=> b!141608 (= res!67557 (and (or (not ((_ is Cons!1735) (toList!871 lt!73016))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73016))) lt!73011)) ((_ is Cons!1735) (toList!871 lt!73016)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73016))) lt!73011)))))

(declare-fun b!141609 () Bool)

(assert (=> b!141609 (= e!92278 (containsKey!178 (t!6314 (toList!871 lt!73016)) lt!73011))))

(assert (= (and d!44583 (not res!67556)) b!141608))

(assert (= (and b!141608 res!67557) b!141609))

(declare-fun m!169833 () Bool)

(assert (=> b!141609 m!169833))

(assert (=> d!44003 d!44583))

(declare-fun d!44585 () Bool)

(declare-fun e!92280 () Bool)

(assert (=> d!44585 e!92280))

(declare-fun res!67558 () Bool)

(assert (=> d!44585 (=> res!67558 e!92280)))

(declare-fun lt!74186 () Bool)

(assert (=> d!44585 (= res!67558 (not lt!74186))))

(declare-fun lt!74185 () Bool)

(assert (=> d!44585 (= lt!74186 lt!74185)))

(declare-fun lt!74184 () Unit!4393)

(declare-fun e!92279 () Unit!4393)

(assert (=> d!44585 (= lt!74184 e!92279)))

(declare-fun c!26675 () Bool)

(assert (=> d!44585 (= c!26675 lt!74185)))

(assert (=> d!44585 (= lt!74185 (containsKey!178 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (=> d!44585 (= (contains!910 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) lt!74186)))

(declare-fun b!141610 () Bool)

(declare-fun lt!74183 () Unit!4393)

(assert (=> b!141610 (= e!92279 lt!74183)))

(assert (=> b!141610 (= lt!74183 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (=> b!141610 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(declare-fun b!141611 () Bool)

(declare-fun Unit!4467 () Unit!4393)

(assert (=> b!141611 (= e!92279 Unit!4467)))

(declare-fun b!141612 () Bool)

(assert (=> b!141612 (= e!92280 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))))

(assert (= (and d!44585 c!26675) b!141610))

(assert (= (and d!44585 (not c!26675)) b!141611))

(assert (= (and d!44585 (not res!67558)) b!141612))

(assert (=> d!44585 m!168767))

(declare-fun m!169835 () Bool)

(assert (=> d!44585 m!169835))

(assert (=> b!141610 m!168767))

(declare-fun m!169837 () Bool)

(assert (=> b!141610 m!169837))

(assert (=> b!141610 m!168767))

(declare-fun m!169839 () Bool)

(assert (=> b!141610 m!169839))

(assert (=> b!141610 m!169839))

(declare-fun m!169841 () Bool)

(assert (=> b!141610 m!169841))

(assert (=> b!141612 m!168767))

(assert (=> b!141612 m!169839))

(assert (=> b!141612 m!169839))

(assert (=> b!141612 m!169841))

(assert (=> b!141086 d!44585))

(assert (=> b!141086 d!44143))

(assert (=> b!140705 d!43699))

(declare-fun d!44587 () Bool)

(declare-fun c!26678 () Bool)

(assert (=> d!44587 (= c!26678 ((_ is Nil!1736) (toList!871 lt!73390)))))

(declare-fun e!92283 () (InoxSet tuple2!2656))

(assert (=> d!44587 (= (content!138 (toList!871 lt!73390)) e!92283)))

(declare-fun b!141617 () Bool)

(assert (=> b!141617 (= e!92283 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!141618 () Bool)

(assert (=> b!141618 (= e!92283 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73390)) true) (content!138 (t!6314 (toList!871 lt!73390)))))))

(assert (= (and d!44587 c!26678) b!141617))

(assert (= (and d!44587 (not c!26678)) b!141618))

(declare-fun m!169843 () Bool)

(assert (=> b!141618 m!169843))

(declare-fun m!169845 () Bool)

(assert (=> b!141618 m!169845))

(assert (=> d!43769 d!44587))

(declare-fun d!44589 () Bool)

(assert (=> d!44589 (= (inRange!0 (index!3292 lt!73940) (mask!7278 newMap!16)) (and (bvsge (index!3292 lt!73940) #b00000000000000000000000000000000) (bvslt (index!3292 lt!73940) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!141183 d!44589))

(declare-fun d!44591 () Bool)

(assert (=> d!44591 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5937 () Bool)

(assert (= bs!5937 d!44591))

(assert (=> bs!5937 m!167591))

(declare-fun m!169847 () Bool)

(assert (=> bs!5937 m!169847))

(assert (=> b!140496 d!44591))

(declare-fun b!141622 () Bool)

(declare-fun e!92285 () Option!180)

(assert (=> b!141622 (= e!92285 None!178)))

(declare-fun b!141620 () Bool)

(declare-fun e!92284 () Option!180)

(assert (=> b!141620 (= e!92284 e!92285)))

(declare-fun c!26680 () Bool)

(assert (=> b!141620 (= c!26680 (and ((_ is Cons!1735) (toList!871 lt!73197)) (not (= (_1!1339 (h!2342 (toList!871 lt!73197))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141619 () Bool)

(assert (=> b!141619 (= e!92284 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73197)))))))

(declare-fun d!44593 () Bool)

(declare-fun c!26679 () Bool)

(assert (=> d!44593 (= c!26679 (and ((_ is Cons!1735) (toList!871 lt!73197)) (= (_1!1339 (h!2342 (toList!871 lt!73197))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44593 (= (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) e!92284)))

(declare-fun b!141621 () Bool)

(assert (=> b!141621 (= e!92285 (getValueByKey!174 (t!6314 (toList!871 lt!73197)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44593 c!26679) b!141619))

(assert (= (and d!44593 (not c!26679)) b!141620))

(assert (= (and b!141620 c!26680) b!141621))

(assert (= (and b!141620 (not c!26680)) b!141622))

(assert (=> b!141621 m!166699))

(declare-fun m!169849 () Bool)

(assert (=> b!141621 m!169849))

(assert (=> b!140496 d!44593))

(declare-fun d!44595 () Bool)

(declare-fun res!67559 () Bool)

(declare-fun e!92286 () Bool)

(assert (=> d!44595 (=> res!67559 e!92286)))

(assert (=> d!44595 (= res!67559 (and ((_ is Cons!1735) lt!73280) (= (_1!1339 (h!2342 lt!73280)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44595 (= (containsKey!178 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92286)))

(declare-fun b!141623 () Bool)

(declare-fun e!92287 () Bool)

(assert (=> b!141623 (= e!92286 e!92287)))

(declare-fun res!67560 () Bool)

(assert (=> b!141623 (=> (not res!67560) (not e!92287))))

(assert (=> b!141623 (= res!67560 (and (or (not ((_ is Cons!1735) lt!73280)) (bvsle (_1!1339 (h!2342 lt!73280)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1735) lt!73280) (bvslt (_1!1339 (h!2342 lt!73280)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141624 () Bool)

(assert (=> b!141624 (= e!92287 (containsKey!178 (t!6314 lt!73280) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44595 (not res!67559)) b!141623))

(assert (= (and b!141623 res!67560) b!141624))

(declare-fun m!169851 () Bool)

(assert (=> b!141624 m!169851))

(assert (=> b!140925 d!44595))

(declare-fun d!44597 () Bool)

(declare-fun res!67561 () Bool)

(declare-fun e!92288 () Bool)

(assert (=> d!44597 (=> res!67561 e!92288)))

(assert (=> d!44597 (= res!67561 (and ((_ is Cons!1735) (toList!871 lt!73197)) (= (_1!1339 (h!2342 (toList!871 lt!73197))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44597 (= (containsKey!178 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000) e!92288)))

(declare-fun b!141625 () Bool)

(declare-fun e!92289 () Bool)

(assert (=> b!141625 (= e!92288 e!92289)))

(declare-fun res!67562 () Bool)

(assert (=> b!141625 (=> (not res!67562) (not e!92289))))

(assert (=> b!141625 (= res!67562 (and (or (not ((_ is Cons!1735) (toList!871 lt!73197))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73197))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73197)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73197))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141626 () Bool)

(assert (=> b!141626 (= e!92289 (containsKey!178 (t!6314 (toList!871 lt!73197)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44597 (not res!67561)) b!141625))

(assert (= (and b!141625 res!67562) b!141626))

(declare-fun m!169853 () Bool)

(assert (=> b!141626 m!169853))

(assert (=> d!43773 d!44597))

(declare-fun d!44599 () Bool)

(assert (=> d!44599 (= (get!1528 (getValueByKey!174 (toList!871 lt!73210) lt!73205)) (v!3279 (getValueByKey!174 (toList!871 lt!73210) lt!73205)))))

(assert (=> d!43847 d!44599))

(declare-fun b!141630 () Bool)

(declare-fun e!92291 () Option!180)

(assert (=> b!141630 (= e!92291 None!178)))

(declare-fun b!141628 () Bool)

(declare-fun e!92290 () Option!180)

(assert (=> b!141628 (= e!92290 e!92291)))

(declare-fun c!26682 () Bool)

(assert (=> b!141628 (= c!26682 (and ((_ is Cons!1735) (toList!871 lt!73210)) (not (= (_1!1339 (h!2342 (toList!871 lt!73210))) lt!73205))))))

(declare-fun b!141627 () Bool)

(assert (=> b!141627 (= e!92290 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73210)))))))

(declare-fun d!44601 () Bool)

(declare-fun c!26681 () Bool)

(assert (=> d!44601 (= c!26681 (and ((_ is Cons!1735) (toList!871 lt!73210)) (= (_1!1339 (h!2342 (toList!871 lt!73210))) lt!73205)))))

(assert (=> d!44601 (= (getValueByKey!174 (toList!871 lt!73210) lt!73205) e!92290)))

(declare-fun b!141629 () Bool)

(assert (=> b!141629 (= e!92291 (getValueByKey!174 (t!6314 (toList!871 lt!73210)) lt!73205))))

(assert (= (and d!44601 c!26681) b!141627))

(assert (= (and d!44601 (not c!26681)) b!141628))

(assert (= (and b!141628 c!26682) b!141629))

(assert (= (and b!141628 (not c!26682)) b!141630))

(declare-fun m!169855 () Bool)

(assert (=> b!141629 m!169855))

(assert (=> d!43847 d!44601))

(assert (=> d!44179 d!44177))

(declare-fun d!44603 () Bool)

(assert (=> d!44603 (= (getValueByKey!174 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44603 true))

(declare-fun _$22!496 () Unit!4393)

(assert (=> d!44603 (= (choose!872 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) _$22!496)))

(declare-fun bs!5938 () Bool)

(assert (= bs!5938 d!44603))

(assert (=> bs!5938 m!167197))

(assert (=> d!44179 d!44603))

(declare-fun d!44605 () Bool)

(declare-fun res!67563 () Bool)

(declare-fun e!92292 () Bool)

(assert (=> d!44605 (=> res!67563 e!92292)))

(assert (=> d!44605 (= res!67563 (or ((_ is Nil!1736) lt!73411) ((_ is Nil!1736) (t!6314 lt!73411))))))

(assert (=> d!44605 (= (isStrictlySorted!320 lt!73411) e!92292)))

(declare-fun b!141631 () Bool)

(declare-fun e!92293 () Bool)

(assert (=> b!141631 (= e!92292 e!92293)))

(declare-fun res!67564 () Bool)

(assert (=> b!141631 (=> (not res!67564) (not e!92293))))

(assert (=> b!141631 (= res!67564 (bvslt (_1!1339 (h!2342 lt!73411)) (_1!1339 (h!2342 (t!6314 lt!73411)))))))

(declare-fun b!141632 () Bool)

(assert (=> b!141632 (= e!92293 (isStrictlySorted!320 (t!6314 lt!73411)))))

(assert (= (and d!44605 (not res!67563)) b!141631))

(assert (= (and b!141631 res!67564) b!141632))

(declare-fun m!169857 () Bool)

(assert (=> b!141632 m!169857))

(assert (=> d!44179 d!44605))

(declare-fun d!44607 () Bool)

(declare-fun e!92294 () Bool)

(assert (=> d!44607 e!92294))

(declare-fun res!67566 () Bool)

(assert (=> d!44607 (=> (not res!67566) (not e!92294))))

(declare-fun lt!74189 () ListLongMap!1711)

(assert (=> d!44607 (= res!67566 (contains!910 lt!74189 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74190 () List!1739)

(assert (=> d!44607 (= lt!74189 (ListLongMap!1712 lt!74190))))

(declare-fun lt!74187 () Unit!4393)

(declare-fun lt!74188 () Unit!4393)

(assert (=> d!44607 (= lt!74187 lt!74188)))

(assert (=> d!44607 (= (getValueByKey!174 lt!74190 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44607 (= lt!74188 (lemmaContainsTupThenGetReturnValue!91 lt!74190 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44607 (= lt!74190 (insertStrictlySorted!94 (toList!871 call!15564) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44607 (= (+!167 call!15564 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74189)))

(declare-fun b!141633 () Bool)

(declare-fun res!67565 () Bool)

(assert (=> b!141633 (=> (not res!67565) (not e!92294))))

(assert (=> b!141633 (= res!67565 (= (getValueByKey!174 (toList!871 lt!74189) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141634 () Bool)

(assert (=> b!141634 (= e!92294 (contains!914 (toList!871 lt!74189) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44607 res!67566) b!141633))

(assert (= (and b!141633 res!67565) b!141634))

(declare-fun m!169859 () Bool)

(assert (=> d!44607 m!169859))

(declare-fun m!169861 () Bool)

(assert (=> d!44607 m!169861))

(declare-fun m!169863 () Bool)

(assert (=> d!44607 m!169863))

(declare-fun m!169865 () Bool)

(assert (=> d!44607 m!169865))

(declare-fun m!169867 () Bool)

(assert (=> b!141633 m!169867))

(declare-fun m!169869 () Bool)

(assert (=> b!141634 m!169869))

(assert (=> b!140397 d!44607))

(declare-fun b!141638 () Bool)

(declare-fun e!92296 () Option!180)

(assert (=> b!141638 (= e!92296 None!178)))

(declare-fun b!141636 () Bool)

(declare-fun e!92295 () Option!180)

(assert (=> b!141636 (= e!92295 e!92296)))

(declare-fun c!26684 () Bool)

(assert (=> b!141636 (= c!26684 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73012))))))

(declare-fun b!141635 () Bool)

(assert (=> b!141635 (= e!92295 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))))

(declare-fun c!26683 () Bool)

(declare-fun d!44609 () Bool)

(assert (=> d!44609 (= c!26683 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73012)))))

(assert (=> d!44609 (= (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73012) e!92295)))

(declare-fun b!141637 () Bool)

(assert (=> b!141637 (= e!92296 (getValueByKey!174 (t!6314 (t!6314 (toList!871 (+!167 lt!73005 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73012))))

(assert (= (and d!44609 c!26683) b!141635))

(assert (= (and d!44609 (not c!26683)) b!141636))

(assert (= (and b!141636 c!26684) b!141637))

(assert (= (and b!141636 (not c!26684)) b!141638))

(declare-fun m!169871 () Bool)

(assert (=> b!141637 m!169871))

(assert (=> b!140755 d!44609))

(assert (=> d!43805 d!43807))

(assert (=> d!43805 d!43791))

(declare-fun d!44611 () Bool)

(assert (=> d!44611 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44611 true))

(declare-fun _$12!415 () Unit!4393)

(assert (=> d!44611 (= (choose!871 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!415)))

(declare-fun bs!5939 () Bool)

(assert (= bs!5939 d!44611))

(assert (=> bs!5939 m!166787))

(assert (=> bs!5939 m!166787))

(assert (=> bs!5939 m!166789))

(assert (=> d!43805 d!44611))

(assert (=> d!43805 d!44221))

(declare-fun b!141639 () Bool)

(declare-fun e!92298 () (_ BitVec 32))

(declare-fun e!92297 () (_ BitVec 32))

(assert (=> b!141639 (= e!92298 e!92297)))

(declare-fun c!26686 () Bool)

(assert (=> b!141639 (= c!26686 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun b!141640 () Bool)

(declare-fun call!15686 () (_ BitVec 32))

(assert (=> b!141640 (= e!92297 (bvadd #b00000000000000000000000000000001 call!15686))))

(declare-fun d!44613 () Bool)

(declare-fun lt!74191 () (_ BitVec 32))

(assert (=> d!44613 (and (bvsge lt!74191 #b00000000000000000000000000000000) (bvsle lt!74191 (bvsub (size!2575 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(assert (=> d!44613 (= lt!74191 e!92298)))

(declare-fun c!26685 () Bool)

(assert (=> d!44613 (= c!26685 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(assert (=> d!44613 (and (bvsle #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 (_2!1340 lt!73342))) (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(assert (=> d!44613 (= (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))) lt!74191)))

(declare-fun b!141641 () Bool)

(assert (=> b!141641 (= e!92298 #b00000000000000000000000000000000)))

(declare-fun b!141642 () Bool)

(assert (=> b!141642 (= e!92297 call!15686)))

(declare-fun bm!15683 () Bool)

(assert (=> bm!15683 (= call!15686 (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73342)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(assert (= (and d!44613 c!26685) b!141641))

(assert (= (and d!44613 (not c!26685)) b!141639))

(assert (= (and b!141639 c!26686) b!141640))

(assert (= (and b!141639 (not c!26686)) b!141642))

(assert (= (or b!141640 b!141642) bm!15683))

(assert (=> b!141639 m!168913))

(assert (=> b!141639 m!168913))

(assert (=> b!141639 m!168915))

(declare-fun m!169873 () Bool)

(assert (=> bm!15683 m!169873))

(assert (=> b!140724 d!44613))

(declare-fun d!44615 () Bool)

(declare-fun lt!74192 () Bool)

(assert (=> d!44615 (= lt!74192 (select (content!138 (toList!871 lt!73819)) (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun e!92300 () Bool)

(assert (=> d!44615 (= lt!74192 e!92300)))

(declare-fun res!67567 () Bool)

(assert (=> d!44615 (=> (not res!67567) (not e!92300))))

(assert (=> d!44615 (= res!67567 ((_ is Cons!1735) (toList!871 lt!73819)))))

(assert (=> d!44615 (= (contains!914 (toList!871 lt!73819) (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!74192)))

(declare-fun b!141643 () Bool)

(declare-fun e!92299 () Bool)

(assert (=> b!141643 (= e!92300 e!92299)))

(declare-fun res!67568 () Bool)

(assert (=> b!141643 (=> res!67568 e!92299)))

(assert (=> b!141643 (= res!67568 (= (h!2342 (toList!871 lt!73819)) (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun b!141644 () Bool)

(assert (=> b!141644 (= e!92299 (contains!914 (t!6314 (toList!871 lt!73819)) (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44615 res!67567) b!141643))

(assert (= (and b!141643 (not res!67568)) b!141644))

(declare-fun m!169875 () Bool)

(assert (=> d!44615 m!169875))

(declare-fun m!169877 () Bool)

(assert (=> d!44615 m!169877))

(declare-fun m!169879 () Bool)

(assert (=> b!141644 m!169879))

(assert (=> b!140975 d!44615))

(declare-fun d!44617 () Bool)

(declare-fun e!92302 () Bool)

(assert (=> d!44617 e!92302))

(declare-fun res!67569 () Bool)

(assert (=> d!44617 (=> res!67569 e!92302)))

(declare-fun lt!74196 () Bool)

(assert (=> d!44617 (= res!67569 (not lt!74196))))

(declare-fun lt!74195 () Bool)

(assert (=> d!44617 (= lt!74196 lt!74195)))

(declare-fun lt!74194 () Unit!4393)

(declare-fun e!92301 () Unit!4393)

(assert (=> d!44617 (= lt!74194 e!92301)))

(declare-fun c!26687 () Bool)

(assert (=> d!44617 (= c!26687 lt!74195)))

(assert (=> d!44617 (= lt!74195 (containsKey!178 (toList!871 lt!73565) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44617 (= (contains!910 lt!73565 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!74196)))

(declare-fun b!141645 () Bool)

(declare-fun lt!74193 () Unit!4393)

(assert (=> b!141645 (= e!92301 lt!74193)))

(assert (=> b!141645 (= lt!74193 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73565) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> b!141645 (isDefined!128 (getValueByKey!174 (toList!871 lt!73565) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!141646 () Bool)

(declare-fun Unit!4468 () Unit!4393)

(assert (=> b!141646 (= e!92301 Unit!4468)))

(declare-fun b!141647 () Bool)

(assert (=> b!141647 (= e!92302 (isDefined!128 (getValueByKey!174 (toList!871 lt!73565) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (= (and d!44617 c!26687) b!141645))

(assert (= (and d!44617 (not c!26687)) b!141646))

(assert (= (and d!44617 (not res!67569)) b!141647))

(declare-fun m!169881 () Bool)

(assert (=> d!44617 m!169881))

(declare-fun m!169883 () Bool)

(assert (=> b!141645 m!169883))

(assert (=> b!141645 m!167687))

(assert (=> b!141645 m!167687))

(declare-fun m!169885 () Bool)

(assert (=> b!141645 m!169885))

(assert (=> b!141647 m!167687))

(assert (=> b!141647 m!167687))

(assert (=> b!141647 m!169885))

(assert (=> d!43829 d!44617))

(declare-fun b!141651 () Bool)

(declare-fun e!92304 () Option!180)

(assert (=> b!141651 (= e!92304 None!178)))

(declare-fun b!141649 () Bool)

(declare-fun e!92303 () Option!180)

(assert (=> b!141649 (= e!92303 e!92304)))

(declare-fun c!26689 () Bool)

(assert (=> b!141649 (= c!26689 (and ((_ is Cons!1735) lt!73566) (not (= (_1!1339 (h!2342 lt!73566)) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun b!141648 () Bool)

(assert (=> b!141648 (= e!92303 (Some!179 (_2!1339 (h!2342 lt!73566))))))

(declare-fun c!26688 () Bool)

(declare-fun d!44619 () Bool)

(assert (=> d!44619 (= c!26688 (and ((_ is Cons!1735) lt!73566) (= (_1!1339 (h!2342 lt!73566)) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (=> d!44619 (= (getValueByKey!174 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) e!92303)))

(declare-fun b!141650 () Bool)

(assert (=> b!141650 (= e!92304 (getValueByKey!174 (t!6314 lt!73566) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44619 c!26688) b!141648))

(assert (= (and d!44619 (not c!26688)) b!141649))

(assert (= (and b!141649 c!26689) b!141650))

(assert (= (and b!141649 (not c!26689)) b!141651))

(declare-fun m!169887 () Bool)

(assert (=> b!141650 m!169887))

(assert (=> d!43829 d!44619))

(declare-fun d!44621 () Bool)

(assert (=> d!44621 (= (getValueByKey!174 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (Some!179 (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun lt!74197 () Unit!4393)

(assert (=> d!44621 (= lt!74197 (choose!872 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92305 () Bool)

(assert (=> d!44621 e!92305))

(declare-fun res!67570 () Bool)

(assert (=> d!44621 (=> (not res!67570) (not e!92305))))

(assert (=> d!44621 (= res!67570 (isStrictlySorted!320 lt!73566))))

(assert (=> d!44621 (= (lemmaContainsTupThenGetReturnValue!91 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!74197)))

(declare-fun b!141652 () Bool)

(declare-fun res!67571 () Bool)

(assert (=> b!141652 (=> (not res!67571) (not e!92305))))

(assert (=> b!141652 (= res!67571 (containsKey!178 lt!73566 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!141653 () Bool)

(assert (=> b!141653 (= e!92305 (contains!914 lt!73566 (tuple2!2657 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (= (and d!44621 res!67570) b!141652))

(assert (= (and b!141652 res!67571) b!141653))

(assert (=> d!44621 m!167681))

(declare-fun m!169889 () Bool)

(assert (=> d!44621 m!169889))

(declare-fun m!169891 () Bool)

(assert (=> d!44621 m!169891))

(declare-fun m!169893 () Bool)

(assert (=> b!141652 m!169893))

(declare-fun m!169895 () Bool)

(assert (=> b!141653 m!169895))

(assert (=> d!43829 d!44621))

(declare-fun b!141654 () Bool)

(declare-fun e!92308 () List!1739)

(declare-fun call!15689 () List!1739)

(assert (=> b!141654 (= e!92308 call!15689)))

(declare-fun b!141655 () Bool)

(declare-fun e!92306 () List!1739)

(declare-fun call!15688 () List!1739)

(assert (=> b!141655 (= e!92306 call!15688)))

(declare-fun e!92309 () Bool)

(declare-fun b!141656 () Bool)

(declare-fun lt!74198 () List!1739)

(assert (=> b!141656 (= e!92309 (contains!914 lt!74198 (tuple2!2657 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!26693 () Bool)

(declare-fun bm!15684 () Bool)

(declare-fun e!92307 () List!1739)

(assert (=> bm!15684 (= call!15689 ($colon$colon!93 e!92307 (ite c!26693 (h!2342 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (tuple2!2657 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun c!26690 () Bool)

(assert (=> bm!15684 (= c!26690 c!26693)))

(declare-fun bm!15685 () Bool)

(declare-fun call!15687 () List!1739)

(assert (=> bm!15685 (= call!15688 call!15687)))

(declare-fun b!141657 () Bool)

(declare-fun res!67572 () Bool)

(assert (=> b!141657 (=> (not res!67572) (not e!92309))))

(assert (=> b!141657 (= res!67572 (containsKey!178 lt!74198 (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun d!44623 () Bool)

(assert (=> d!44623 e!92309))

(declare-fun res!67573 () Bool)

(assert (=> d!44623 (=> (not res!67573) (not e!92309))))

(assert (=> d!44623 (= res!67573 (isStrictlySorted!320 lt!74198))))

(assert (=> d!44623 (= lt!74198 e!92308)))

(assert (=> d!44623 (= c!26693 (and ((_ is Cons!1735) (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (bvslt (_1!1339 (h!2342 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (=> d!44623 (isStrictlySorted!320 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))))))

(assert (=> d!44623 (= (insertStrictlySorted!94 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!74198)))

(declare-fun b!141658 () Bool)

(declare-fun c!26691 () Bool)

(declare-fun c!26692 () Bool)

(assert (=> b!141658 (= e!92307 (ite c!26692 (t!6314 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (ite c!26691 (Cons!1735 (h!2342 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (t!6314 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))))) Nil!1736)))))

(declare-fun b!141659 () Bool)

(assert (=> b!141659 (= c!26691 (and ((_ is Cons!1735) (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (bvsgt (_1!1339 (h!2342 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun e!92310 () List!1739)

(assert (=> b!141659 (= e!92310 e!92306)))

(declare-fun b!141660 () Bool)

(assert (=> b!141660 (= e!92306 call!15688)))

(declare-fun b!141661 () Bool)

(assert (=> b!141661 (= e!92307 (insertStrictlySorted!94 (t!6314 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (_2!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun bm!15686 () Bool)

(assert (=> bm!15686 (= call!15687 call!15689)))

(declare-fun b!141662 () Bool)

(assert (=> b!141662 (= e!92308 e!92310)))

(assert (=> b!141662 (= c!26692 (and ((_ is Cons!1735) (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513)))) (= (_1!1339 (h!2342 (toList!871 (ite c!26240 call!15515 (ite c!26243 call!15518 call!15513))))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!141663 () Bool)

(assert (=> b!141663 (= e!92310 call!15687)))

(assert (= (and d!44623 c!26693) b!141654))

(assert (= (and d!44623 (not c!26693)) b!141662))

(assert (= (and b!141662 c!26692) b!141663))

(assert (= (and b!141662 (not c!26692)) b!141659))

(assert (= (and b!141659 c!26691) b!141655))

(assert (= (and b!141659 (not c!26691)) b!141660))

(assert (= (or b!141655 b!141660) bm!15685))

(assert (= (or b!141663 bm!15685) bm!15686))

(assert (= (or b!141654 bm!15686) bm!15684))

(assert (= (and bm!15684 c!26690) b!141661))

(assert (= (and bm!15684 (not c!26690)) b!141658))

(assert (= (and d!44623 res!67573) b!141657))

(assert (= (and b!141657 res!67572) b!141656))

(declare-fun m!169897 () Bool)

(assert (=> b!141657 m!169897))

(declare-fun m!169899 () Bool)

(assert (=> b!141661 m!169899))

(declare-fun m!169901 () Bool)

(assert (=> bm!15684 m!169901))

(declare-fun m!169903 () Bool)

(assert (=> b!141656 m!169903))

(declare-fun m!169905 () Bool)

(assert (=> d!44623 m!169905))

(declare-fun m!169907 () Bool)

(assert (=> d!44623 m!169907))

(assert (=> d!43829 d!44623))

(declare-fun d!44625 () Bool)

(declare-fun lt!74199 () Bool)

(assert (=> d!44625 (= lt!74199 (select (content!138 (t!6314 (toList!871 lt!73157))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!92312 () Bool)

(assert (=> d!44625 (= lt!74199 e!92312)))

(declare-fun res!67574 () Bool)

(assert (=> d!44625 (=> (not res!67574) (not e!92312))))

(assert (=> d!44625 (= res!67574 ((_ is Cons!1735) (t!6314 (toList!871 lt!73157))))))

(assert (=> d!44625 (= (contains!914 (t!6314 (toList!871 lt!73157)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!74199)))

(declare-fun b!141664 () Bool)

(declare-fun e!92311 () Bool)

(assert (=> b!141664 (= e!92312 e!92311)))

(declare-fun res!67575 () Bool)

(assert (=> b!141664 (=> res!67575 e!92311)))

(assert (=> b!141664 (= res!67575 (= (h!2342 (t!6314 (toList!871 lt!73157))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!141665 () Bool)

(assert (=> b!141665 (= e!92311 (contains!914 (t!6314 (t!6314 (toList!871 lt!73157))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!44625 res!67574) b!141664))

(assert (= (and b!141664 (not res!67575)) b!141665))

(declare-fun m!169909 () Bool)

(assert (=> d!44625 m!169909))

(declare-fun m!169911 () Bool)

(assert (=> d!44625 m!169911))

(declare-fun m!169913 () Bool)

(assert (=> b!141665 m!169913))

(assert (=> b!140588 d!44625))

(declare-fun d!44627 () Bool)

(declare-fun e!92314 () Bool)

(assert (=> d!44627 e!92314))

(declare-fun res!67576 () Bool)

(assert (=> d!44627 (=> res!67576 e!92314)))

(declare-fun lt!74203 () Bool)

(assert (=> d!44627 (= res!67576 (not lt!74203))))

(declare-fun lt!74202 () Bool)

(assert (=> d!44627 (= lt!74203 lt!74202)))

(declare-fun lt!74201 () Unit!4393)

(declare-fun e!92313 () Unit!4393)

(assert (=> d!44627 (= lt!74201 e!92313)))

(declare-fun c!26694 () Bool)

(assert (=> d!44627 (= c!26694 lt!74202)))

(assert (=> d!44627 (= lt!74202 (containsKey!178 (toList!871 lt!73645) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44627 (= (contains!910 lt!73645 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74203)))

(declare-fun b!141666 () Bool)

(declare-fun lt!74200 () Unit!4393)

(assert (=> b!141666 (= e!92313 lt!74200)))

(assert (=> b!141666 (= lt!74200 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73645) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141666 (isDefined!128 (getValueByKey!174 (toList!871 lt!73645) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141667 () Bool)

(declare-fun Unit!4469 () Unit!4393)

(assert (=> b!141667 (= e!92313 Unit!4469)))

(declare-fun b!141668 () Bool)

(assert (=> b!141668 (= e!92314 (isDefined!128 (getValueByKey!174 (toList!871 lt!73645) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44627 c!26694) b!141666))

(assert (= (and d!44627 (not c!26694)) b!141667))

(assert (= (and d!44627 (not res!67576)) b!141668))

(declare-fun m!169915 () Bool)

(assert (=> d!44627 m!169915))

(declare-fun m!169917 () Bool)

(assert (=> b!141666 m!169917))

(declare-fun m!169919 () Bool)

(assert (=> b!141666 m!169919))

(assert (=> b!141666 m!169919))

(declare-fun m!169921 () Bool)

(assert (=> b!141666 m!169921))

(assert (=> b!141668 m!169919))

(assert (=> b!141668 m!169919))

(assert (=> b!141668 m!169921))

(assert (=> bm!15595 d!44627))

(declare-fun b!141669 () Bool)

(declare-fun lt!74205 () SeekEntryResult!282)

(assert (=> b!141669 (and (bvsge (index!3293 lt!74205) #b00000000000000000000000000000000) (bvslt (index!3293 lt!74205) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67577 () Bool)

(assert (=> b!141669 (= res!67577 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74205)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun e!92319 () Bool)

(assert (=> b!141669 (=> res!67577 e!92319)))

(declare-fun e!92316 () Bool)

(assert (=> b!141669 (= e!92316 e!92319)))

(declare-fun b!141670 () Bool)

(declare-fun e!92315 () SeekEntryResult!282)

(assert (=> b!141670 (= e!92315 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun e!92317 () SeekEntryResult!282)

(declare-fun b!141671 () Bool)

(assert (=> b!141671 (= e!92317 (Intermediate!282 true (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!141673 () Bool)

(assert (=> b!141673 (= e!92315 (Intermediate!282 false (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!141674 () Bool)

(declare-fun e!92318 () Bool)

(assert (=> b!141674 (= e!92318 (bvsge (x!16138 lt!74205) #b01111111111111111111111111111110))))

(declare-fun b!141675 () Bool)

(assert (=> b!141675 (= e!92318 e!92316)))

(declare-fun res!67578 () Bool)

(assert (=> b!141675 (= res!67578 (and ((_ is Intermediate!282) lt!74205) (not (undefined!1094 lt!74205)) (bvslt (x!16138 lt!74205) #b01111111111111111111111111111110) (bvsge (x!16138 lt!74205) #b00000000000000000000000000000000) (bvsge (x!16138 lt!74205) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141675 (=> (not res!67578) (not e!92316))))

(declare-fun b!141676 () Bool)

(assert (=> b!141676 (= e!92317 e!92315)))

(declare-fun lt!74204 () (_ BitVec 64))

(declare-fun c!26695 () Bool)

(assert (=> b!141676 (= c!26695 (or (= lt!74204 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (= (bvadd lt!74204 lt!74204) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141677 () Bool)

(assert (=> b!141677 (and (bvsge (index!3293 lt!74205) #b00000000000000000000000000000000) (bvslt (index!3293 lt!74205) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141677 (= e!92319 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74205)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141672 () Bool)

(assert (=> b!141672 (and (bvsge (index!3293 lt!74205) #b00000000000000000000000000000000) (bvslt (index!3293 lt!74205) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67579 () Bool)

(assert (=> b!141672 (= res!67579 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74205)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141672 (=> res!67579 e!92319)))

(declare-fun d!44629 () Bool)

(assert (=> d!44629 e!92318))

(declare-fun c!26696 () Bool)

(assert (=> d!44629 (= c!26696 (and ((_ is Intermediate!282) lt!74205) (undefined!1094 lt!74205)))))

(assert (=> d!44629 (= lt!74205 e!92317)))

(declare-fun c!26697 () Bool)

(assert (=> d!44629 (= c!26697 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!44629 (= lt!74204 (select (arr!2302 (_keys!4697 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16))))))

(assert (=> d!44629 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44629 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!74205)))

(assert (= (and d!44629 c!26697) b!141671))

(assert (= (and d!44629 (not c!26697)) b!141676))

(assert (= (and b!141676 c!26695) b!141673))

(assert (= (and b!141676 (not c!26695)) b!141670))

(assert (= (and d!44629 c!26696) b!141674))

(assert (= (and d!44629 (not c!26696)) b!141675))

(assert (= (and b!141675 res!67578) b!141669))

(assert (= (and b!141669 (not res!67577)) b!141672))

(assert (= (and b!141672 (not res!67579)) b!141677))

(assert (=> b!141670 m!168849))

(declare-fun m!169923 () Bool)

(assert (=> b!141670 m!169923))

(assert (=> b!141670 m!169923))

(assert (=> b!141670 m!166407))

(declare-fun m!169925 () Bool)

(assert (=> b!141670 m!169925))

(declare-fun m!169927 () Bool)

(assert (=> b!141669 m!169927))

(assert (=> d!44629 m!168849))

(declare-fun m!169929 () Bool)

(assert (=> d!44629 m!169929))

(assert (=> d!44629 m!166687))

(assert (=> b!141672 m!169927))

(assert (=> b!141677 m!169927))

(assert (=> b!141165 d!44629))

(declare-fun d!44631 () Bool)

(declare-fun lt!74208 () (_ BitVec 32))

(assert (=> d!44631 (and (bvsge lt!74208 #b00000000000000000000000000000000) (bvslt lt!74208 (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!44631 (= lt!74208 (choose!52 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)))))

(assert (=> d!44631 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44631 (= (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) lt!74208)))

(declare-fun bs!5940 () Bool)

(assert (= bs!5940 d!44631))

(assert (=> bs!5940 m!166911))

(declare-fun m!169931 () Bool)

(assert (=> bs!5940 m!169931))

(assert (=> bs!5940 m!166687))

(assert (=> b!141165 d!44631))

(declare-fun b!141679 () Bool)

(declare-fun e!92321 () Bool)

(declare-fun call!15690 () Bool)

(assert (=> b!141679 (= e!92321 call!15690)))

(declare-fun b!141680 () Bool)

(declare-fun e!92322 () Bool)

(assert (=> b!141680 (= e!92322 e!92321)))

(declare-fun c!26698 () Bool)

(assert (=> b!141680 (= c!26698 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141681 () Bool)

(declare-fun e!92320 () Bool)

(assert (=> b!141681 (= e!92320 call!15690)))

(declare-fun bm!15687 () Bool)

(assert (=> bm!15687 (= call!15690 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))))))

(declare-fun b!141678 () Bool)

(assert (=> b!141678 (= e!92321 e!92320)))

(declare-fun lt!74210 () (_ BitVec 64))

(assert (=> b!141678 (= lt!74210 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74209 () Unit!4393)

(assert (=> b!141678 (= lt!74209 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (_2!1340 lt!73099)) lt!74210 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141678 (arrayContainsKey!0 (_keys!4697 (_2!1340 lt!73099)) lt!74210 #b00000000000000000000000000000000)))

(declare-fun lt!74211 () Unit!4393)

(assert (=> b!141678 (= lt!74211 lt!74209)))

(declare-fun res!67581 () Bool)

(assert (=> b!141678 (= res!67581 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))) (Found!282 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141678 (=> (not res!67581) (not e!92320))))

(declare-fun d!44633 () Bool)

(declare-fun res!67580 () Bool)

(assert (=> d!44633 (=> res!67580 e!92322)))

(assert (=> d!44633 (= res!67580 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!44633 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))) e!92322)))

(assert (= (and d!44633 (not res!67580)) b!141680))

(assert (= (and b!141680 c!26698) b!141678))

(assert (= (and b!141680 (not c!26698)) b!141679))

(assert (= (and b!141678 res!67581) b!141681))

(assert (= (or b!141681 b!141679) bm!15687))

(declare-fun m!169933 () Bool)

(assert (=> b!141680 m!169933))

(assert (=> b!141680 m!169933))

(declare-fun m!169935 () Bool)

(assert (=> b!141680 m!169935))

(declare-fun m!169937 () Bool)

(assert (=> bm!15687 m!169937))

(assert (=> b!141678 m!169933))

(declare-fun m!169939 () Bool)

(assert (=> b!141678 m!169939))

(declare-fun m!169941 () Bool)

(assert (=> b!141678 m!169941))

(assert (=> b!141678 m!169933))

(declare-fun m!169943 () Bool)

(assert (=> b!141678 m!169943))

(assert (=> bm!15586 d!44633))

(declare-fun d!44635 () Bool)

(declare-fun res!67582 () Bool)

(declare-fun e!92323 () Bool)

(assert (=> d!44635 (=> res!67582 e!92323)))

(assert (=> d!44635 (= res!67582 (and ((_ is Cons!1735) lt!73631) (= (_1!1339 (h!2342 lt!73631)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44635 (= (containsKey!178 lt!73631 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92323)))

(declare-fun b!141682 () Bool)

(declare-fun e!92324 () Bool)

(assert (=> b!141682 (= e!92323 e!92324)))

(declare-fun res!67583 () Bool)

(assert (=> b!141682 (=> (not res!67583) (not e!92324))))

(assert (=> b!141682 (= res!67583 (and (or (not ((_ is Cons!1735) lt!73631)) (bvsle (_1!1339 (h!2342 lt!73631)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73631) (bvslt (_1!1339 (h!2342 lt!73631)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141683 () Bool)

(assert (=> b!141683 (= e!92324 (containsKey!178 (t!6314 lt!73631) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44635 (not res!67582)) b!141682))

(assert (= (and b!141682 res!67583) b!141683))

(declare-fun m!169945 () Bool)

(assert (=> b!141683 m!169945))

(assert (=> b!140654 d!44635))

(declare-fun d!44637 () Bool)

(declare-fun res!67584 () Bool)

(declare-fun e!92325 () Bool)

(assert (=> d!44637 (=> res!67584 e!92325)))

(assert (=> d!44637 (= res!67584 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))))

(assert (=> d!44637 (= (containsKey!178 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) e!92325)))

(declare-fun b!141684 () Bool)

(declare-fun e!92326 () Bool)

(assert (=> b!141684 (= e!92325 e!92326)))

(declare-fun res!67585 () Bool)

(assert (=> b!141684 (=> (not res!67585) (not e!92326))))

(assert (=> b!141684 (= res!67585 (and (or (not ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (bvsle (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))) ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))))

(declare-fun b!141685 () Bool)

(assert (=> b!141685 (= e!92326 (containsKey!178 (t!6314 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (= (and d!44637 (not res!67584)) b!141684))

(assert (= (and b!141684 res!67585) b!141685))

(assert (=> b!141685 m!167031))

(declare-fun m!169947 () Bool)

(assert (=> b!141685 m!169947))

(assert (=> d!44165 d!44637))

(declare-fun d!44639 () Bool)

(assert (=> d!44639 (= (isEmpty!422 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) (not ((_ is Some!179) (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(assert (=> d!43801 d!44639))

(assert (=> d!43705 d!43707))

(assert (=> d!43705 d!43709))

(declare-fun d!44641 () Bool)

(assert (=> d!44641 (isDefined!128 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!44641 true))

(declare-fun _$12!416 () Unit!4393)

(assert (=> d!44641 (= (choose!871 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!416)))

(declare-fun bs!5941 () Bool)

(assert (= bs!5941 d!44641))

(assert (=> bs!5941 m!166533))

(assert (=> bs!5941 m!166905))

(assert (=> bs!5941 m!166905))

(assert (=> bs!5941 m!166907))

(assert (=> d!43705 d!44641))

(assert (=> d!43705 d!44221))

(declare-fun d!44643 () Bool)

(declare-fun c!26699 () Bool)

(assert (=> d!44643 (= c!26699 ((_ is Nil!1736) (toList!871 lt!73401)))))

(declare-fun e!92327 () (InoxSet tuple2!2656))

(assert (=> d!44643 (= (content!138 (toList!871 lt!73401)) e!92327)))

(declare-fun b!141686 () Bool)

(assert (=> b!141686 (= e!92327 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!141687 () Bool)

(assert (=> b!141687 (= e!92327 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73401)) true) (content!138 (t!6314 (toList!871 lt!73401)))))))

(assert (= (and d!44643 c!26699) b!141686))

(assert (= (and d!44643 (not c!26699)) b!141687))

(declare-fun m!169949 () Bool)

(assert (=> b!141687 m!169949))

(declare-fun m!169951 () Bool)

(assert (=> b!141687 m!169951))

(assert (=> d!43895 d!44643))

(declare-fun b!141691 () Bool)

(declare-fun e!92329 () Option!180)

(assert (=> b!141691 (= e!92329 None!178)))

(declare-fun b!141689 () Bool)

(declare-fun e!92328 () Option!180)

(assert (=> b!141689 (= e!92328 e!92329)))

(declare-fun c!26701 () Bool)

(assert (=> b!141689 (= c!26701 (and ((_ is Cons!1735) (toList!871 lt!73609)) (not (= (_1!1339 (h!2342 (toList!871 lt!73609))) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141688 () Bool)

(assert (=> b!141688 (= e!92328 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73609)))))))

(declare-fun c!26700 () Bool)

(declare-fun d!44645 () Bool)

(assert (=> d!44645 (= c!26700 (and ((_ is Cons!1735) (toList!871 lt!73609)) (= (_1!1339 (h!2342 (toList!871 lt!73609))) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44645 (= (getValueByKey!174 (toList!871 lt!73609) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) e!92328)))

(declare-fun b!141690 () Bool)

(assert (=> b!141690 (= e!92329 (getValueByKey!174 (t!6314 (toList!871 lt!73609)) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44645 c!26700) b!141688))

(assert (= (and d!44645 (not c!26700)) b!141689))

(assert (= (and b!141689 c!26701) b!141690))

(assert (= (and b!141689 (not c!26701)) b!141691))

(declare-fun m!169953 () Bool)

(assert (=> b!141690 m!169953))

(assert (=> b!140615 d!44645))

(declare-fun d!44647 () Bool)

(assert (=> d!44647 (= (get!1527 (select (arr!2303 (_values!2922 newMap!16)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140885 d!44647))

(declare-fun d!44649 () Bool)

(declare-fun res!67586 () Bool)

(declare-fun e!92330 () Bool)

(assert (=> d!44649 (=> res!67586 e!92330)))

(assert (=> d!44649 (= res!67586 (or ((_ is Nil!1736) lt!73841) ((_ is Nil!1736) (t!6314 lt!73841))))))

(assert (=> d!44649 (= (isStrictlySorted!320 lt!73841) e!92330)))

(declare-fun b!141692 () Bool)

(declare-fun e!92331 () Bool)

(assert (=> b!141692 (= e!92330 e!92331)))

(declare-fun res!67587 () Bool)

(assert (=> b!141692 (=> (not res!67587) (not e!92331))))

(assert (=> b!141692 (= res!67587 (bvslt (_1!1339 (h!2342 lt!73841)) (_1!1339 (h!2342 (t!6314 lt!73841)))))))

(declare-fun b!141693 () Bool)

(assert (=> b!141693 (= e!92331 (isStrictlySorted!320 (t!6314 lt!73841)))))

(assert (= (and d!44649 (not res!67586)) b!141692))

(assert (= (and b!141692 res!67587) b!141693))

(declare-fun m!169955 () Bool)

(assert (=> b!141693 m!169955))

(assert (=> d!44127 d!44649))

(declare-fun d!44651 () Bool)

(declare-fun res!67588 () Bool)

(declare-fun e!92332 () Bool)

(assert (=> d!44651 (=> res!67588 e!92332)))

(assert (=> d!44651 (= res!67588 (or ((_ is Nil!1736) (toList!871 call!15435)) ((_ is Nil!1736) (t!6314 (toList!871 call!15435)))))))

(assert (=> d!44651 (= (isStrictlySorted!320 (toList!871 call!15435)) e!92332)))

(declare-fun b!141694 () Bool)

(declare-fun e!92333 () Bool)

(assert (=> b!141694 (= e!92332 e!92333)))

(declare-fun res!67589 () Bool)

(assert (=> b!141694 (=> (not res!67589) (not e!92333))))

(assert (=> b!141694 (= res!67589 (bvslt (_1!1339 (h!2342 (toList!871 call!15435))) (_1!1339 (h!2342 (t!6314 (toList!871 call!15435))))))))

(declare-fun b!141695 () Bool)

(assert (=> b!141695 (= e!92333 (isStrictlySorted!320 (t!6314 (toList!871 call!15435))))))

(assert (= (and d!44651 (not res!67588)) b!141694))

(assert (= (and b!141694 res!67589) b!141695))

(declare-fun m!169957 () Bool)

(assert (=> b!141695 m!169957))

(assert (=> d!44127 d!44651))

(declare-fun d!44653 () Bool)

(declare-fun e!92335 () Bool)

(assert (=> d!44653 e!92335))

(declare-fun res!67590 () Bool)

(assert (=> d!44653 (=> res!67590 e!92335)))

(declare-fun lt!74215 () Bool)

(assert (=> d!44653 (= res!67590 (not lt!74215))))

(declare-fun lt!74214 () Bool)

(assert (=> d!44653 (= lt!74215 lt!74214)))

(declare-fun lt!74213 () Unit!4393)

(declare-fun e!92334 () Unit!4393)

(assert (=> d!44653 (= lt!74213 e!92334)))

(declare-fun c!26702 () Bool)

(assert (=> d!44653 (= c!26702 lt!74214)))

(assert (=> d!44653 (= lt!74214 (containsKey!178 (toList!871 lt!73508) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44653 (= (contains!910 lt!73508 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74215)))

(declare-fun b!141696 () Bool)

(declare-fun lt!74212 () Unit!4393)

(assert (=> b!141696 (= e!92334 lt!74212)))

(assert (=> b!141696 (= lt!74212 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73508) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141696 (isDefined!128 (getValueByKey!174 (toList!871 lt!73508) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141697 () Bool)

(declare-fun Unit!4470 () Unit!4393)

(assert (=> b!141697 (= e!92334 Unit!4470)))

(declare-fun b!141698 () Bool)

(assert (=> b!141698 (= e!92335 (isDefined!128 (getValueByKey!174 (toList!871 lt!73508) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44653 c!26702) b!141696))

(assert (= (and d!44653 (not c!26702)) b!141697))

(assert (= (and d!44653 (not res!67590)) b!141698))

(declare-fun m!169959 () Bool)

(assert (=> d!44653 m!169959))

(declare-fun m!169961 () Bool)

(assert (=> b!141696 m!169961))

(declare-fun m!169963 () Bool)

(assert (=> b!141696 m!169963))

(assert (=> b!141696 m!169963))

(declare-fun m!169965 () Bool)

(assert (=> b!141696 m!169965))

(assert (=> b!141698 m!169963))

(assert (=> b!141698 m!169963))

(assert (=> b!141698 m!169965))

(assert (=> b!140454 d!44653))

(declare-fun d!44655 () Bool)

(declare-fun lt!74216 () Bool)

(assert (=> d!44655 (= lt!74216 (select (content!138 lt!73923) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92337 () Bool)

(assert (=> d!44655 (= lt!74216 e!92337)))

(declare-fun res!67591 () Bool)

(assert (=> d!44655 (=> (not res!67591) (not e!92337))))

(assert (=> d!44655 (= res!67591 ((_ is Cons!1735) lt!73923))))

(assert (=> d!44655 (= (contains!914 lt!73923 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74216)))

(declare-fun b!141699 () Bool)

(declare-fun e!92336 () Bool)

(assert (=> b!141699 (= e!92337 e!92336)))

(declare-fun res!67592 () Bool)

(assert (=> b!141699 (=> res!67592 e!92336)))

(assert (=> b!141699 (= res!67592 (= (h!2342 lt!73923) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141700 () Bool)

(assert (=> b!141700 (= e!92336 (contains!914 (t!6314 lt!73923) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44655 res!67591) b!141699))

(assert (= (and b!141699 (not res!67592)) b!141700))

(declare-fun m!169967 () Bool)

(assert (=> d!44655 m!169967))

(declare-fun m!169969 () Bool)

(assert (=> d!44655 m!169969))

(declare-fun m!169971 () Bool)

(assert (=> b!141700 m!169971))

(assert (=> b!141132 d!44655))

(declare-fun d!44657 () Bool)

(declare-fun res!67593 () Bool)

(declare-fun e!92338 () Bool)

(assert (=> d!44657 (=> res!67593 e!92338)))

(assert (=> d!44657 (= res!67593 (and ((_ is Cons!1735) lt!73675) (= (_1!1339 (h!2342 lt!73675)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44657 (= (containsKey!178 lt!73675 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92338)))

(declare-fun b!141701 () Bool)

(declare-fun e!92339 () Bool)

(assert (=> b!141701 (= e!92338 e!92339)))

(declare-fun res!67594 () Bool)

(assert (=> b!141701 (=> (not res!67594) (not e!92339))))

(assert (=> b!141701 (= res!67594 (and (or (not ((_ is Cons!1735) lt!73675)) (bvsle (_1!1339 (h!2342 lt!73675)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1735) lt!73675) (bvslt (_1!1339 (h!2342 lt!73675)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141702 () Bool)

(assert (=> b!141702 (= e!92339 (containsKey!178 (t!6314 lt!73675) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44657 (not res!67593)) b!141701))

(assert (= (and b!141701 res!67594) b!141702))

(declare-fun m!169973 () Bool)

(assert (=> b!141702 m!169973))

(assert (=> b!140744 d!44657))

(assert (=> d!43909 d!43925))

(assert (=> d!43909 d!43927))

(declare-fun d!44659 () Bool)

(assert (=> d!44659 (isDefined!128 (getValueByKey!174 (toList!871 lt!73001) lt!73020))))

(declare-fun lt!74217 () Unit!4393)

(assert (=> d!44659 (= lt!74217 (choose!871 (toList!871 lt!73001) lt!73020))))

(declare-fun e!92340 () Bool)

(assert (=> d!44659 e!92340))

(declare-fun res!67595 () Bool)

(assert (=> d!44659 (=> (not res!67595) (not e!92340))))

(assert (=> d!44659 (= res!67595 (isStrictlySorted!320 (toList!871 lt!73001)))))

(assert (=> d!44659 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73001) lt!73020) lt!74217)))

(declare-fun b!141703 () Bool)

(assert (=> b!141703 (= e!92340 (containsKey!178 (toList!871 lt!73001) lt!73020))))

(assert (= (and d!44659 res!67595) b!141703))

(assert (=> d!44659 m!167167))

(assert (=> d!44659 m!167167))

(assert (=> d!44659 m!168397))

(declare-fun m!169975 () Bool)

(assert (=> d!44659 m!169975))

(assert (=> d!44659 m!167663))

(assert (=> b!141703 m!168393))

(assert (=> b!140915 d!44659))

(assert (=> b!140915 d!44453))

(assert (=> b!140915 d!44029))

(declare-fun d!44661 () Bool)

(assert (=> d!44661 (= (apply!120 lt!73517 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73517) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5942 () Bool)

(assert (= bs!5942 d!44661))

(declare-fun m!169977 () Bool)

(assert (=> bs!5942 m!169977))

(assert (=> bs!5942 m!169977))

(declare-fun m!169979 () Bool)

(assert (=> bs!5942 m!169979))

(assert (=> b!140472 d!44661))

(declare-fun b!141707 () Bool)

(declare-fun e!92342 () Option!180)

(assert (=> b!141707 (= e!92342 None!178)))

(declare-fun b!141705 () Bool)

(declare-fun e!92341 () Option!180)

(assert (=> b!141705 (= e!92341 e!92342)))

(declare-fun c!26704 () Bool)

(assert (=> b!141705 (= c!26704 (and ((_ is Cons!1735) (toList!871 lt!73462)) (not (= (_1!1339 (h!2342 (toList!871 lt!73462))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141704 () Bool)

(assert (=> b!141704 (= e!92341 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73462)))))))

(declare-fun c!26703 () Bool)

(declare-fun d!44663 () Bool)

(assert (=> d!44663 (= c!26703 (and ((_ is Cons!1735) (toList!871 lt!73462)) (= (_1!1339 (h!2342 (toList!871 lt!73462))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44663 (= (getValueByKey!174 (toList!871 lt!73462) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92341)))

(declare-fun b!141706 () Bool)

(assert (=> b!141706 (= e!92342 (getValueByKey!174 (t!6314 (toList!871 lt!73462)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44663 c!26703) b!141704))

(assert (= (and d!44663 (not c!26703)) b!141705))

(assert (= (and b!141705 c!26704) b!141706))

(assert (= (and b!141705 (not c!26704)) b!141707))

(declare-fun m!169981 () Bool)

(assert (=> b!141706 m!169981))

(assert (=> b!140407 d!44663))

(declare-fun d!44665 () Bool)

(assert (=> d!44665 (= (get!1528 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) (v!3279 (getValueByKey!174 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43891 d!44665))

(assert (=> d!43891 d!44323))

(declare-fun d!44667 () Bool)

(declare-fun lt!74218 () Bool)

(assert (=> d!44667 (= lt!74218 (select (content!138 (toList!871 lt!73759)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92344 () Bool)

(assert (=> d!44667 (= lt!74218 e!92344)))

(declare-fun res!67596 () Bool)

(assert (=> d!44667 (=> (not res!67596) (not e!92344))))

(assert (=> d!44667 (= res!67596 ((_ is Cons!1735) (toList!871 lt!73759)))))

(assert (=> d!44667 (= (contains!914 (toList!871 lt!73759) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74218)))

(declare-fun b!141708 () Bool)

(declare-fun e!92343 () Bool)

(assert (=> b!141708 (= e!92344 e!92343)))

(declare-fun res!67597 () Bool)

(assert (=> b!141708 (=> res!67597 e!92343)))

(assert (=> b!141708 (= res!67597 (= (h!2342 (toList!871 lt!73759)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141709 () Bool)

(assert (=> b!141709 (= e!92343 (contains!914 (t!6314 (toList!871 lt!73759)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44667 res!67596) b!141708))

(assert (= (and b!141708 (not res!67597)) b!141709))

(declare-fun m!169983 () Bool)

(assert (=> d!44667 m!169983))

(declare-fun m!169985 () Bool)

(assert (=> d!44667 m!169985))

(declare-fun m!169987 () Bool)

(assert (=> b!141709 m!169987))

(assert (=> b!140893 d!44667))

(declare-fun d!44669 () Bool)

(assert (=> d!44669 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!73189)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!73189)))))

(assert (=> d!43755 d!44669))

(declare-fun b!141713 () Bool)

(declare-fun e!92346 () Option!180)

(assert (=> b!141713 (= e!92346 None!178)))

(declare-fun b!141711 () Bool)

(declare-fun e!92345 () Option!180)

(assert (=> b!141711 (= e!92345 e!92346)))

(declare-fun c!26706 () Bool)

(assert (=> b!141711 (= c!26706 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))) lt!73189))))))

(declare-fun b!141710 () Bool)

(assert (=> b!141710 (= e!92345 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))))

(declare-fun d!44671 () Bool)

(declare-fun c!26705 () Bool)

(assert (=> d!44671 (= c!26705 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))) lt!73189)))))

(assert (=> d!44671 (= (getValueByKey!174 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!73189) e!92345)))

(declare-fun b!141712 () Bool)

(assert (=> b!141712 (= e!92346 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73170 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))) lt!73189))))

(assert (= (and d!44671 c!26705) b!141710))

(assert (= (and d!44671 (not c!26705)) b!141711))

(assert (= (and b!141711 c!26706) b!141712))

(assert (= (and b!141711 (not c!26706)) b!141713))

(declare-fun m!169989 () Bool)

(assert (=> b!141712 m!169989))

(assert (=> d!43755 d!44671))

(declare-fun d!44673 () Bool)

(assert (=> d!44673 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 #b00000000000000000000000000000000)))

(declare-fun lt!74219 () Unit!4393)

(assert (=> d!44673 (= lt!74219 (choose!13 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 #b00000000000000000000000000000000))))

(assert (=> d!44673 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44673 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 #b00000000000000000000000000000000) lt!74219)))

(declare-fun bs!5943 () Bool)

(assert (= bs!5943 d!44673))

(assert (=> bs!5943 m!167699))

(declare-fun m!169991 () Bool)

(assert (=> bs!5943 m!169991))

(assert (=> b!140579 d!44673))

(declare-fun d!44675 () Bool)

(declare-fun res!67598 () Bool)

(declare-fun e!92347 () Bool)

(assert (=> d!44675 (=> res!67598 e!92347)))

(assert (=> d!44675 (= res!67598 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) lt!73568))))

(assert (=> d!44675 (= (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 #b00000000000000000000000000000000) e!92347)))

(declare-fun b!141714 () Bool)

(declare-fun e!92348 () Bool)

(assert (=> b!141714 (= e!92347 e!92348)))

(declare-fun res!67599 () Bool)

(assert (=> b!141714 (=> (not res!67599) (not e!92348))))

(assert (=> b!141714 (= res!67599 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!141715 () Bool)

(assert (=> b!141715 (= e!92348 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!73568 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44675 (not res!67598)) b!141714))

(assert (= (and b!141714 res!67599) b!141715))

(assert (=> d!44675 m!167691))

(declare-fun m!169993 () Bool)

(assert (=> b!141715 m!169993))

(assert (=> b!140579 d!44675))

(declare-fun b!141716 () Bool)

(declare-fun c!26709 () Bool)

(declare-fun lt!74221 () (_ BitVec 64))

(assert (=> b!141716 (= c!26709 (= lt!74221 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92351 () SeekEntryResult!282)

(declare-fun e!92350 () SeekEntryResult!282)

(assert (=> b!141716 (= e!92351 e!92350)))

(declare-fun b!141717 () Bool)

(declare-fun e!92349 () SeekEntryResult!282)

(assert (=> b!141717 (= e!92349 Undefined!282)))

(declare-fun b!141718 () Bool)

(declare-fun lt!74222 () SeekEntryResult!282)

(assert (=> b!141718 (= e!92351 (Found!282 (index!3293 lt!74222)))))

(declare-fun b!141719 () Bool)

(assert (=> b!141719 (= e!92350 (seekKeyOrZeroReturnVacant!0 (x!16138 lt!74222) (index!3293 lt!74222) (index!3293 lt!74222) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun d!44677 () Bool)

(declare-fun lt!74220 () SeekEntryResult!282)

(assert (=> d!44677 (and (or ((_ is Undefined!282) lt!74220) (not ((_ is Found!282) lt!74220)) (and (bvsge (index!3292 lt!74220) #b00000000000000000000000000000000) (bvslt (index!3292 lt!74220) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))) (or ((_ is Undefined!282) lt!74220) ((_ is Found!282) lt!74220) (not ((_ is MissingZero!282) lt!74220)) (and (bvsge (index!3291 lt!74220) #b00000000000000000000000000000000) (bvslt (index!3291 lt!74220) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))) (or ((_ is Undefined!282) lt!74220) ((_ is Found!282) lt!74220) ((_ is MissingZero!282) lt!74220) (not ((_ is MissingVacant!282) lt!74220)) (and (bvsge (index!3294 lt!74220) #b00000000000000000000000000000000) (bvslt (index!3294 lt!74220) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))) (or ((_ is Undefined!282) lt!74220) (ite ((_ is Found!282) lt!74220) (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (index!3292 lt!74220)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!282) lt!74220) (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (index!3291 lt!74220)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!282) lt!74220) (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (index!3294 lt!74220)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44677 (= lt!74220 e!92349)))

(declare-fun c!26707 () Bool)

(assert (=> d!44677 (= c!26707 (and ((_ is Intermediate!282) lt!74222) (undefined!1094 lt!74222)))))

(assert (=> d!44677 (= lt!74222 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) (mask!7278 (v!3273 (underlying!476 thiss!992)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))))))

(assert (=> d!44677 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!44677 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))) lt!74220)))

(declare-fun b!141720 () Bool)

(assert (=> b!141720 (= e!92350 (MissingZero!282 (index!3293 lt!74222)))))

(declare-fun b!141721 () Bool)

(assert (=> b!141721 (= e!92349 e!92351)))

(assert (=> b!141721 (= lt!74221 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (index!3293 lt!74222)))))

(declare-fun c!26708 () Bool)

(assert (=> b!141721 (= c!26708 (= lt!74221 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!44677 c!26707) b!141717))

(assert (= (and d!44677 (not c!26707)) b!141721))

(assert (= (and b!141721 c!26708) b!141718))

(assert (= (and b!141721 (not c!26708)) b!141716))

(assert (= (and b!141716 c!26709) b!141720))

(assert (= (and b!141716 (not c!26709)) b!141719))

(assert (=> b!141719 m!167691))

(declare-fun m!169995 () Bool)

(assert (=> b!141719 m!169995))

(assert (=> d!44677 m!167691))

(declare-fun m!169997 () Bool)

(assert (=> d!44677 m!169997))

(declare-fun m!169999 () Bool)

(assert (=> d!44677 m!169999))

(assert (=> d!44677 m!169997))

(assert (=> d!44677 m!167691))

(declare-fun m!170001 () Bool)

(assert (=> d!44677 m!170001))

(declare-fun m!170003 () Bool)

(assert (=> d!44677 m!170003))

(assert (=> d!44677 m!166539))

(declare-fun m!170005 () Bool)

(assert (=> d!44677 m!170005))

(declare-fun m!170007 () Bool)

(assert (=> b!141721 m!170007))

(assert (=> b!140579 d!44677))

(declare-fun b!141725 () Bool)

(declare-fun e!92353 () Option!180)

(assert (=> b!141725 (= e!92353 None!178)))

(declare-fun b!141723 () Bool)

(declare-fun e!92352 () Option!180)

(assert (=> b!141723 (= e!92352 e!92353)))

(declare-fun c!26711 () Bool)

(assert (=> b!141723 (= c!26711 (and ((_ is Cons!1735) (toList!871 lt!73436)) (not (= (_1!1339 (h!2342 (toList!871 lt!73436))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141722 () Bool)

(assert (=> b!141722 (= e!92352 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73436)))))))

(declare-fun c!26710 () Bool)

(declare-fun d!44679 () Bool)

(assert (=> d!44679 (= c!26710 (and ((_ is Cons!1735) (toList!871 lt!73436)) (= (_1!1339 (h!2342 (toList!871 lt!73436))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44679 (= (getValueByKey!174 (toList!871 lt!73436) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92352)))

(declare-fun b!141724 () Bool)

(assert (=> b!141724 (= e!92353 (getValueByKey!174 (t!6314 (toList!871 lt!73436)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44679 c!26710) b!141722))

(assert (= (and d!44679 (not c!26710)) b!141723))

(assert (= (and b!141723 c!26711) b!141724))

(assert (= (and b!141723 (not c!26711)) b!141725))

(declare-fun m!170009 () Bool)

(assert (=> b!141724 m!170009))

(assert (=> b!140384 d!44679))

(declare-fun d!44681 () Bool)

(assert (=> d!44681 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73794 #b00000000000000000000000000000000)))

(declare-fun lt!74223 () Unit!4393)

(assert (=> d!44681 (= lt!74223 (choose!13 (_keys!4697 newMap!16) lt!73794 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!44681 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!44681 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 newMap!16) lt!73794 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!74223)))

(declare-fun bs!5944 () Bool)

(assert (= bs!5944 d!44681))

(assert (=> bs!5944 m!168431))

(declare-fun m!170011 () Bool)

(assert (=> bs!5944 m!170011))

(assert (=> b!140937 d!44681))

(declare-fun d!44683 () Bool)

(declare-fun res!67600 () Bool)

(declare-fun e!92354 () Bool)

(assert (=> d!44683 (=> res!67600 e!92354)))

(assert (=> d!44683 (= res!67600 (= (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) lt!73794))))

(assert (=> d!44683 (= (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73794 #b00000000000000000000000000000000) e!92354)))

(declare-fun b!141726 () Bool)

(declare-fun e!92355 () Bool)

(assert (=> b!141726 (= e!92354 e!92355)))

(declare-fun res!67601 () Bool)

(assert (=> b!141726 (=> (not res!67601) (not e!92355))))

(assert (=> b!141726 (= res!67601 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!141727 () Bool)

(assert (=> b!141727 (= e!92355 (arrayContainsKey!0 (_keys!4697 newMap!16) lt!73794 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44683 (not res!67600)) b!141726))

(assert (= (and b!141726 res!67601) b!141727))

(assert (=> d!44683 m!166699))

(declare-fun m!170013 () Bool)

(assert (=> b!141727 m!170013))

(assert (=> b!140937 d!44683))

(declare-fun b!141728 () Bool)

(declare-fun c!26714 () Bool)

(declare-fun lt!74225 () (_ BitVec 64))

(assert (=> b!141728 (= c!26714 (= lt!74225 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92358 () SeekEntryResult!282)

(declare-fun e!92357 () SeekEntryResult!282)

(assert (=> b!141728 (= e!92358 e!92357)))

(declare-fun b!141729 () Bool)

(declare-fun e!92356 () SeekEntryResult!282)

(assert (=> b!141729 (= e!92356 Undefined!282)))

(declare-fun b!141730 () Bool)

(declare-fun lt!74226 () SeekEntryResult!282)

(assert (=> b!141730 (= e!92358 (Found!282 (index!3293 lt!74226)))))

(declare-fun b!141731 () Bool)

(assert (=> b!141731 (= e!92357 (seekKeyOrZeroReturnVacant!0 (x!16138 lt!74226) (index!3293 lt!74226) (index!3293 lt!74226) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun d!44685 () Bool)

(declare-fun lt!74224 () SeekEntryResult!282)

(assert (=> d!44685 (and (or ((_ is Undefined!282) lt!74224) (not ((_ is Found!282) lt!74224)) (and (bvsge (index!3292 lt!74224) #b00000000000000000000000000000000) (bvslt (index!3292 lt!74224) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!74224) ((_ is Found!282) lt!74224) (not ((_ is MissingZero!282) lt!74224)) (and (bvsge (index!3291 lt!74224) #b00000000000000000000000000000000) (bvslt (index!3291 lt!74224) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!74224) ((_ is Found!282) lt!74224) ((_ is MissingZero!282) lt!74224) (not ((_ is MissingVacant!282) lt!74224)) (and (bvsge (index!3294 lt!74224) #b00000000000000000000000000000000) (bvslt (index!3294 lt!74224) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!74224) (ite ((_ is Found!282) lt!74224) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!74224)) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!282) lt!74224) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3291 lt!74224)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!282) lt!74224) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!74224)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44685 (= lt!74224 e!92356)))

(declare-fun c!26712 () Bool)

(assert (=> d!44685 (= c!26712 (and ((_ is Intermediate!282) lt!74226) (undefined!1094 lt!74226)))))

(assert (=> d!44685 (= lt!74226 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(assert (=> d!44685 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44685 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!74224)))

(declare-fun b!141732 () Bool)

(assert (=> b!141732 (= e!92357 (MissingZero!282 (index!3293 lt!74226)))))

(declare-fun b!141733 () Bool)

(assert (=> b!141733 (= e!92356 e!92358)))

(assert (=> b!141733 (= lt!74225 (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74226)))))

(declare-fun c!26713 () Bool)

(assert (=> b!141733 (= c!26713 (= lt!74225 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!44685 c!26712) b!141729))

(assert (= (and d!44685 (not c!26712)) b!141733))

(assert (= (and b!141733 c!26713) b!141730))

(assert (= (and b!141733 (not c!26713)) b!141728))

(assert (= (and b!141728 c!26714) b!141732))

(assert (= (and b!141728 (not c!26714)) b!141731))

(assert (=> b!141731 m!167925))

(declare-fun m!170015 () Bool)

(assert (=> b!141731 m!170015))

(assert (=> d!44685 m!167925))

(declare-fun m!170017 () Bool)

(assert (=> d!44685 m!170017))

(declare-fun m!170019 () Bool)

(assert (=> d!44685 m!170019))

(assert (=> d!44685 m!170017))

(assert (=> d!44685 m!167925))

(declare-fun m!170021 () Bool)

(assert (=> d!44685 m!170021))

(declare-fun m!170023 () Bool)

(assert (=> d!44685 m!170023))

(assert (=> d!44685 m!166687))

(declare-fun m!170025 () Bool)

(assert (=> d!44685 m!170025))

(declare-fun m!170027 () Bool)

(assert (=> b!141733 m!170027))

(assert (=> b!140937 d!44685))

(declare-fun d!44687 () Bool)

(declare-fun res!67602 () Bool)

(declare-fun e!92359 () Bool)

(assert (=> d!44687 (=> res!67602 e!92359)))

(assert (=> d!44687 (= res!67602 (and ((_ is Cons!1735) (toList!871 lt!73266)) (= (_1!1339 (h!2342 (toList!871 lt!73266))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44687 (= (containsKey!178 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92359)))

(declare-fun b!141734 () Bool)

(declare-fun e!92360 () Bool)

(assert (=> b!141734 (= e!92359 e!92360)))

(declare-fun res!67603 () Bool)

(assert (=> b!141734 (=> (not res!67603) (not e!92360))))

(assert (=> b!141734 (= res!67603 (and (or (not ((_ is Cons!1735) (toList!871 lt!73266))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73266))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1735) (toList!871 lt!73266)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73266))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!141735 () Bool)

(assert (=> b!141735 (= e!92360 (containsKey!178 (t!6314 (toList!871 lt!73266)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44687 (not res!67602)) b!141734))

(assert (= (and b!141734 res!67603) b!141735))

(assert (=> b!141735 m!166533))

(declare-fun m!170029 () Bool)

(assert (=> b!141735 m!170029))

(assert (=> d!43885 d!44687))

(assert (=> d!43953 d!43951))

(declare-fun d!44689 () Bool)

(assert (=> d!44689 (= (getValueByKey!174 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!179 (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44689 true))

(declare-fun _$22!497 () Unit!4393)

(assert (=> d!44689 (= (choose!872 lt!73387 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!497)))

(declare-fun bs!5945 () Bool)

(assert (= bs!5945 d!44689))

(assert (=> bs!5945 m!167113))

(assert (=> d!43953 d!44689))

(declare-fun d!44691 () Bool)

(declare-fun res!67604 () Bool)

(declare-fun e!92361 () Bool)

(assert (=> d!44691 (=> res!67604 e!92361)))

(assert (=> d!44691 (= res!67604 (or ((_ is Nil!1736) lt!73387) ((_ is Nil!1736) (t!6314 lt!73387))))))

(assert (=> d!44691 (= (isStrictlySorted!320 lt!73387) e!92361)))

(declare-fun b!141736 () Bool)

(declare-fun e!92362 () Bool)

(assert (=> b!141736 (= e!92361 e!92362)))

(declare-fun res!67605 () Bool)

(assert (=> b!141736 (=> (not res!67605) (not e!92362))))

(assert (=> b!141736 (= res!67605 (bvslt (_1!1339 (h!2342 lt!73387)) (_1!1339 (h!2342 (t!6314 lt!73387)))))))

(declare-fun b!141737 () Bool)

(assert (=> b!141737 (= e!92362 (isStrictlySorted!320 (t!6314 lt!73387)))))

(assert (= (and d!44691 (not res!67604)) b!141736))

(assert (= (and b!141736 res!67605) b!141737))

(declare-fun m!170031 () Bool)

(assert (=> b!141737 m!170031))

(assert (=> d!43953 d!44691))

(declare-fun d!44693 () Bool)

(declare-fun e!92364 () Bool)

(assert (=> d!44693 e!92364))

(declare-fun res!67606 () Bool)

(assert (=> d!44693 (=> res!67606 e!92364)))

(declare-fun lt!74230 () Bool)

(assert (=> d!44693 (= res!67606 (not lt!74230))))

(declare-fun lt!74229 () Bool)

(assert (=> d!44693 (= lt!74230 lt!74229)))

(declare-fun lt!74228 () Unit!4393)

(declare-fun e!92363 () Unit!4393)

(assert (=> d!44693 (= lt!74228 e!92363)))

(declare-fun c!26715 () Bool)

(assert (=> d!44693 (= c!26715 lt!74229)))

(assert (=> d!44693 (= lt!74229 (containsKey!178 (toList!871 lt!73697) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44693 (= (contains!910 lt!73697 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74230)))

(declare-fun b!141738 () Bool)

(declare-fun lt!74227 () Unit!4393)

(assert (=> b!141738 (= e!92363 lt!74227)))

(assert (=> b!141738 (= lt!74227 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73697) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141738 (isDefined!128 (getValueByKey!174 (toList!871 lt!73697) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141739 () Bool)

(declare-fun Unit!4471 () Unit!4393)

(assert (=> b!141739 (= e!92363 Unit!4471)))

(declare-fun b!141740 () Bool)

(assert (=> b!141740 (= e!92364 (isDefined!128 (getValueByKey!174 (toList!871 lt!73697) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44693 c!26715) b!141738))

(assert (= (and d!44693 (not c!26715)) b!141739))

(assert (= (and d!44693 (not res!67606)) b!141740))

(assert (=> d!44693 m!166699))

(declare-fun m!170033 () Bool)

(assert (=> d!44693 m!170033))

(assert (=> b!141738 m!166699))

(declare-fun m!170035 () Bool)

(assert (=> b!141738 m!170035))

(assert (=> b!141738 m!166699))

(assert (=> b!141738 m!169759))

(assert (=> b!141738 m!169759))

(declare-fun m!170037 () Bool)

(assert (=> b!141738 m!170037))

(assert (=> b!141740 m!166699))

(assert (=> b!141740 m!169759))

(assert (=> b!141740 m!169759))

(assert (=> b!141740 m!170037))

(assert (=> b!140831 d!44693))

(declare-fun d!44695 () Bool)

(declare-fun lt!74231 () Bool)

(assert (=> d!44695 (= lt!74231 (select (content!138 lt!73631) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92366 () Bool)

(assert (=> d!44695 (= lt!74231 e!92366)))

(declare-fun res!67607 () Bool)

(assert (=> d!44695 (=> (not res!67607) (not e!92366))))

(assert (=> d!44695 (= res!67607 ((_ is Cons!1735) lt!73631))))

(assert (=> d!44695 (= (contains!914 lt!73631 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74231)))

(declare-fun b!141741 () Bool)

(declare-fun e!92365 () Bool)

(assert (=> b!141741 (= e!92366 e!92365)))

(declare-fun res!67608 () Bool)

(assert (=> b!141741 (=> res!67608 e!92365)))

(assert (=> b!141741 (= res!67608 (= (h!2342 lt!73631) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141742 () Bool)

(assert (=> b!141742 (= e!92365 (contains!914 (t!6314 lt!73631) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44695 res!67607) b!141741))

(assert (= (and b!141741 (not res!67608)) b!141742))

(declare-fun m!170039 () Bool)

(assert (=> d!44695 m!170039))

(declare-fun m!170041 () Bool)

(assert (=> d!44695 m!170041))

(declare-fun m!170043 () Bool)

(assert (=> b!141742 m!170043))

(assert (=> b!140653 d!44695))

(declare-fun d!44697 () Bool)

(declare-fun e!92368 () Bool)

(assert (=> d!44697 e!92368))

(declare-fun res!67609 () Bool)

(assert (=> d!44697 (=> res!67609 e!92368)))

(declare-fun lt!74235 () Bool)

(assert (=> d!44697 (= res!67609 (not lt!74235))))

(declare-fun lt!74234 () Bool)

(assert (=> d!44697 (= lt!74235 lt!74234)))

(declare-fun lt!74233 () Unit!4393)

(declare-fun e!92367 () Unit!4393)

(assert (=> d!44697 (= lt!74233 e!92367)))

(declare-fun c!26716 () Bool)

(assert (=> d!44697 (= c!26716 lt!74234)))

(assert (=> d!44697 (= lt!74234 (containsKey!178 (toList!871 lt!73688) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44697 (= (contains!910 lt!73688 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74235)))

(declare-fun b!141743 () Bool)

(declare-fun lt!74232 () Unit!4393)

(assert (=> b!141743 (= e!92367 lt!74232)))

(assert (=> b!141743 (= lt!74232 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73688) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> b!141743 (isDefined!128 (getValueByKey!174 (toList!871 lt!73688) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141744 () Bool)

(declare-fun Unit!4472 () Unit!4393)

(assert (=> b!141744 (= e!92367 Unit!4472)))

(declare-fun b!141745 () Bool)

(assert (=> b!141745 (= e!92368 (isDefined!128 (getValueByKey!174 (toList!871 lt!73688) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44697 c!26716) b!141743))

(assert (= (and d!44697 (not c!26716)) b!141744))

(assert (= (and d!44697 (not res!67609)) b!141745))

(declare-fun m!170045 () Bool)

(assert (=> d!44697 m!170045))

(declare-fun m!170047 () Bool)

(assert (=> b!141743 m!170047))

(assert (=> b!141743 m!168145))

(assert (=> b!141743 m!168145))

(declare-fun m!170049 () Bool)

(assert (=> b!141743 m!170049))

(assert (=> b!141745 m!168145))

(assert (=> b!141745 m!168145))

(assert (=> b!141745 m!170049))

(assert (=> d!43981 d!44697))

(declare-fun b!141749 () Bool)

(declare-fun e!92370 () Option!180)

(assert (=> b!141749 (= e!92370 None!178)))

(declare-fun b!141747 () Bool)

(declare-fun e!92369 () Option!180)

(assert (=> b!141747 (= e!92369 e!92370)))

(declare-fun c!26718 () Bool)

(assert (=> b!141747 (= c!26718 (and ((_ is Cons!1735) lt!73689) (not (= (_1!1339 (h!2342 lt!73689)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141746 () Bool)

(assert (=> b!141746 (= e!92369 (Some!179 (_2!1339 (h!2342 lt!73689))))))

(declare-fun d!44699 () Bool)

(declare-fun c!26717 () Bool)

(assert (=> d!44699 (= c!26717 (and ((_ is Cons!1735) lt!73689) (= (_1!1339 (h!2342 lt!73689)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44699 (= (getValueByKey!174 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!92369)))

(declare-fun b!141748 () Bool)

(assert (=> b!141748 (= e!92370 (getValueByKey!174 (t!6314 lt!73689) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44699 c!26717) b!141746))

(assert (= (and d!44699 (not c!26717)) b!141747))

(assert (= (and b!141747 c!26718) b!141748))

(assert (= (and b!141747 (not c!26718)) b!141749))

(declare-fun m!170051 () Bool)

(assert (=> b!141748 m!170051))

(assert (=> d!43981 d!44699))

(declare-fun d!44701 () Bool)

(assert (=> d!44701 (= (getValueByKey!174 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74236 () Unit!4393)

(assert (=> d!44701 (= lt!74236 (choose!872 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92371 () Bool)

(assert (=> d!44701 e!92371))

(declare-fun res!67610 () Bool)

(assert (=> d!44701 (=> (not res!67610) (not e!92371))))

(assert (=> d!44701 (= res!67610 (isStrictlySorted!320 lt!73689))))

(assert (=> d!44701 (= (lemmaContainsTupThenGetReturnValue!91 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74236)))

(declare-fun b!141750 () Bool)

(declare-fun res!67611 () Bool)

(assert (=> b!141750 (=> (not res!67611) (not e!92371))))

(assert (=> b!141750 (= res!67611 (containsKey!178 lt!73689 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!141751 () Bool)

(assert (=> b!141751 (= e!92371 (contains!914 lt!73689 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44701 res!67610) b!141750))

(assert (= (and b!141750 res!67611) b!141751))

(assert (=> d!44701 m!168139))

(declare-fun m!170053 () Bool)

(assert (=> d!44701 m!170053))

(declare-fun m!170055 () Bool)

(assert (=> d!44701 m!170055))

(declare-fun m!170057 () Bool)

(assert (=> b!141750 m!170057))

(declare-fun m!170059 () Bool)

(assert (=> b!141751 m!170059))

(assert (=> d!43981 d!44701))

(declare-fun b!141752 () Bool)

(declare-fun e!92374 () List!1739)

(declare-fun call!15693 () List!1739)

(assert (=> b!141752 (= e!92374 call!15693)))

(declare-fun b!141753 () Bool)

(declare-fun e!92372 () List!1739)

(declare-fun call!15692 () List!1739)

(assert (=> b!141753 (= e!92372 call!15692)))

(declare-fun b!141754 () Bool)

(declare-fun e!92375 () Bool)

(declare-fun lt!74237 () List!1739)

(assert (=> b!141754 (= e!92375 (contains!914 lt!74237 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun c!26722 () Bool)

(declare-fun bm!15688 () Bool)

(declare-fun e!92373 () List!1739)

(assert (=> bm!15688 (= call!15693 ($colon$colon!93 e!92373 (ite c!26722 (h!2342 (toList!871 call!15532)) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun c!26719 () Bool)

(assert (=> bm!15688 (= c!26719 c!26722)))

(declare-fun bm!15689 () Bool)

(declare-fun call!15691 () List!1739)

(assert (=> bm!15689 (= call!15692 call!15691)))

(declare-fun b!141755 () Bool)

(declare-fun res!67612 () Bool)

(assert (=> b!141755 (=> (not res!67612) (not e!92375))))

(assert (=> b!141755 (= res!67612 (containsKey!178 lt!74237 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!44703 () Bool)

(assert (=> d!44703 e!92375))

(declare-fun res!67613 () Bool)

(assert (=> d!44703 (=> (not res!67613) (not e!92375))))

(assert (=> d!44703 (= res!67613 (isStrictlySorted!320 lt!74237))))

(assert (=> d!44703 (= lt!74237 e!92374)))

(assert (=> d!44703 (= c!26722 (and ((_ is Cons!1735) (toList!871 call!15532)) (bvslt (_1!1339 (h!2342 (toList!871 call!15532))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44703 (isStrictlySorted!320 (toList!871 call!15532))))

(assert (=> d!44703 (= (insertStrictlySorted!94 (toList!871 call!15532) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74237)))

(declare-fun b!141756 () Bool)

(declare-fun c!26721 () Bool)

(declare-fun c!26720 () Bool)

(assert (=> b!141756 (= e!92373 (ite c!26721 (t!6314 (toList!871 call!15532)) (ite c!26720 (Cons!1735 (h!2342 (toList!871 call!15532)) (t!6314 (toList!871 call!15532))) Nil!1736)))))

(declare-fun b!141757 () Bool)

(assert (=> b!141757 (= c!26720 (and ((_ is Cons!1735) (toList!871 call!15532)) (bvsgt (_1!1339 (h!2342 (toList!871 call!15532))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92376 () List!1739)

(assert (=> b!141757 (= e!92376 e!92372)))

(declare-fun b!141758 () Bool)

(assert (=> b!141758 (= e!92372 call!15692)))

(declare-fun b!141759 () Bool)

(assert (=> b!141759 (= e!92373 (insertStrictlySorted!94 (t!6314 (toList!871 call!15532)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun bm!15690 () Bool)

(assert (=> bm!15690 (= call!15691 call!15693)))

(declare-fun b!141760 () Bool)

(assert (=> b!141760 (= e!92374 e!92376)))

(assert (=> b!141760 (= c!26721 (and ((_ is Cons!1735) (toList!871 call!15532)) (= (_1!1339 (h!2342 (toList!871 call!15532))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!141761 () Bool)

(assert (=> b!141761 (= e!92376 call!15691)))

(assert (= (and d!44703 c!26722) b!141752))

(assert (= (and d!44703 (not c!26722)) b!141760))

(assert (= (and b!141760 c!26721) b!141761))

(assert (= (and b!141760 (not c!26721)) b!141757))

(assert (= (and b!141757 c!26720) b!141753))

(assert (= (and b!141757 (not c!26720)) b!141758))

(assert (= (or b!141753 b!141758) bm!15689))

(assert (= (or b!141761 bm!15689) bm!15690))

(assert (= (or b!141752 bm!15690) bm!15688))

(assert (= (and bm!15688 c!26719) b!141759))

(assert (= (and bm!15688 (not c!26719)) b!141756))

(assert (= (and d!44703 res!67613) b!141755))

(assert (= (and b!141755 res!67612) b!141754))

(declare-fun m!170061 () Bool)

(assert (=> b!141755 m!170061))

(declare-fun m!170063 () Bool)

(assert (=> b!141759 m!170063))

(declare-fun m!170065 () Bool)

(assert (=> bm!15688 m!170065))

(declare-fun m!170067 () Bool)

(assert (=> b!141754 m!170067))

(declare-fun m!170069 () Bool)

(assert (=> d!44703 m!170069))

(declare-fun m!170071 () Bool)

(assert (=> d!44703 m!170071))

(assert (=> d!43981 d!44703))

(declare-fun d!44705 () Bool)

(declare-fun lt!74238 () Bool)

(assert (=> d!44705 (= lt!74238 (select (content!138 (toList!871 lt!73718)) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92378 () Bool)

(assert (=> d!44705 (= lt!74238 e!92378)))

(declare-fun res!67614 () Bool)

(assert (=> d!44705 (=> (not res!67614) (not e!92378))))

(assert (=> d!44705 (= res!67614 ((_ is Cons!1735) (toList!871 lt!73718)))))

(assert (=> d!44705 (= (contains!914 (toList!871 lt!73718) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74238)))

(declare-fun b!141762 () Bool)

(declare-fun e!92377 () Bool)

(assert (=> b!141762 (= e!92378 e!92377)))

(declare-fun res!67615 () Bool)

(assert (=> b!141762 (=> res!67615 e!92377)))

(assert (=> b!141762 (= res!67615 (= (h!2342 (toList!871 lt!73718)) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141763 () Bool)

(assert (=> b!141763 (= e!92377 (contains!914 (t!6314 (toList!871 lt!73718)) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44705 res!67614) b!141762))

(assert (= (and b!141762 (not res!67615)) b!141763))

(declare-fun m!170073 () Bool)

(assert (=> d!44705 m!170073))

(declare-fun m!170075 () Bool)

(assert (=> d!44705 m!170075))

(declare-fun m!170077 () Bool)

(assert (=> b!141763 m!170077))

(assert (=> b!140834 d!44705))

(declare-fun b!141767 () Bool)

(declare-fun e!92380 () Option!180)

(assert (=> b!141767 (= e!92380 None!178)))

(declare-fun b!141765 () Bool)

(declare-fun e!92379 () Option!180)

(assert (=> b!141765 (= e!92379 e!92380)))

(declare-fun c!26724 () Bool)

(assert (=> b!141765 (= c!26724 (and ((_ is Cons!1735) (t!6314 (t!6314 (toList!871 lt!72917)))) (not (= (_1!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!141764 () Bool)

(assert (=> b!141764 (= e!92379 (Some!179 (_2!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917)))))))))

(declare-fun d!44707 () Bool)

(declare-fun c!26723 () Bool)

(assert (=> d!44707 (= c!26723 (and ((_ is Cons!1735) (t!6314 (t!6314 (toList!871 lt!72917)))) (= (_1!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44707 (= (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92379)))

(declare-fun b!141766 () Bool)

(assert (=> b!141766 (= e!92380 (getValueByKey!174 (t!6314 (t!6314 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44707 c!26723) b!141764))

(assert (= (and d!44707 (not c!26723)) b!141765))

(assert (= (and b!141765 c!26724) b!141766))

(assert (= (and b!141765 (not c!26724)) b!141767))

(assert (=> b!141766 m!166407))

(declare-fun m!170079 () Bool)

(assert (=> b!141766 m!170079))

(assert (=> b!140888 d!44707))

(declare-fun b!141771 () Bool)

(declare-fun e!92382 () Option!180)

(assert (=> b!141771 (= e!92382 None!178)))

(declare-fun b!141769 () Bool)

(declare-fun e!92381 () Option!180)

(assert (=> b!141769 (= e!92381 e!92382)))

(declare-fun c!26726 () Bool)

(assert (=> b!141769 (= c!26726 (and ((_ is Cons!1735) (toList!871 lt!73478)) (not (= (_1!1339 (h!2342 (toList!871 lt!73478))) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141768 () Bool)

(assert (=> b!141768 (= e!92381 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73478)))))))

(declare-fun c!26725 () Bool)

(declare-fun d!44709 () Bool)

(assert (=> d!44709 (= c!26725 (and ((_ is Cons!1735) (toList!871 lt!73478)) (= (_1!1339 (h!2342 (toList!871 lt!73478))) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44709 (= (getValueByKey!174 (toList!871 lt!73478) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) e!92381)))

(declare-fun b!141770 () Bool)

(assert (=> b!141770 (= e!92382 (getValueByKey!174 (t!6314 (toList!871 lt!73478)) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44709 c!26725) b!141768))

(assert (= (and d!44709 (not c!26725)) b!141769))

(assert (= (and b!141769 c!26726) b!141770))

(assert (= (and b!141769 (not c!26726)) b!141771))

(declare-fun m!170081 () Bool)

(assert (=> b!141770 m!170081))

(assert (=> b!140430 d!44709))

(declare-fun d!44711 () Bool)

(assert (=> d!44711 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))

(declare-fun lt!74239 () Unit!4393)

(assert (=> d!44711 (= lt!74239 (choose!871 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))

(declare-fun e!92383 () Bool)

(assert (=> d!44711 e!92383))

(declare-fun res!67616 () Bool)

(assert (=> d!44711 (=> (not res!67616) (not e!92383))))

(assert (=> d!44711 (= res!67616 (isStrictlySorted!320 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44711 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215) lt!74239)))

(declare-fun b!141772 () Bool)

(assert (=> b!141772 (= e!92383 (containsKey!178 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215))))

(assert (= (and d!44711 res!67616) b!141772))

(assert (=> d!44711 m!167735))

(assert (=> d!44711 m!167735))

(assert (=> d!44711 m!167737))

(declare-fun m!170083 () Bool)

(assert (=> d!44711 m!170083))

(declare-fun m!170085 () Bool)

(assert (=> d!44711 m!170085))

(assert (=> b!141772 m!167731))

(assert (=> b!140592 d!44711))

(assert (=> b!140592 d!44519))

(assert (=> b!140592 d!44521))

(declare-fun b!141776 () Bool)

(declare-fun e!92385 () Option!180)

(assert (=> b!141776 (= e!92385 None!178)))

(declare-fun b!141774 () Bool)

(declare-fun e!92384 () Option!180)

(assert (=> b!141774 (= e!92384 e!92385)))

(declare-fun c!26728 () Bool)

(assert (=> b!141774 (= c!26728 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73005))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73005)))) lt!73012))))))

(declare-fun b!141773 () Bool)

(assert (=> b!141773 (= e!92384 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73005))))))))

(declare-fun d!44713 () Bool)

(declare-fun c!26727 () Bool)

(assert (=> d!44713 (= c!26727 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73005))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73005)))) lt!73012)))))

(assert (=> d!44713 (= (getValueByKey!174 (t!6314 (toList!871 lt!73005)) lt!73012) e!92384)))

(declare-fun b!141775 () Bool)

(assert (=> b!141775 (= e!92385 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73005))) lt!73012))))

(assert (= (and d!44713 c!26727) b!141773))

(assert (= (and d!44713 (not c!26727)) b!141774))

(assert (= (and b!141774 c!26728) b!141775))

(assert (= (and b!141774 (not c!26728)) b!141776))

(declare-fun m!170087 () Bool)

(assert (=> b!141775 m!170087))

(assert (=> b!140990 d!44713))

(declare-fun d!44715 () Bool)

(assert (=> d!44715 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun bs!5946 () Bool)

(assert (= bs!5946 d!44715))

(assert (=> bs!5946 m!167203))

(declare-fun m!170089 () Bool)

(assert (=> bs!5946 m!170089))

(assert (=> b!141123 d!44715))

(assert (=> b!141123 d!44109))

(declare-fun b!141780 () Bool)

(declare-fun e!92387 () Option!180)

(assert (=> b!141780 (= e!92387 None!178)))

(declare-fun b!141778 () Bool)

(declare-fun e!92386 () Option!180)

(assert (=> b!141778 (= e!92386 e!92387)))

(declare-fun c!26730 () Bool)

(assert (=> b!141778 (= c!26730 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73021))))))

(declare-fun b!141777 () Bool)

(assert (=> b!141777 (= e!92386 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))))

(declare-fun d!44717 () Bool)

(declare-fun c!26729 () Bool)

(assert (=> d!44717 (= c!26729 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73021)))))

(assert (=> d!44717 (= (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73021) e!92386)))

(declare-fun b!141779 () Bool)

(assert (=> b!141779 (= e!92387 (getValueByKey!174 (t!6314 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021))))

(assert (= (and d!44717 c!26729) b!141777))

(assert (= (and d!44717 (not c!26729)) b!141778))

(assert (= (and b!141778 c!26730) b!141779))

(assert (= (and b!141778 (not c!26730)) b!141780))

(declare-fun m!170091 () Bool)

(assert (=> b!141779 m!170091))

(assert (=> b!140492 d!44717))

(declare-fun d!44719 () Bool)

(assert (=> d!44719 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!73181)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!73181)))))

(assert (=> d!43735 d!44719))

(declare-fun b!141784 () Bool)

(declare-fun e!92389 () Option!180)

(assert (=> b!141784 (= e!92389 None!178)))

(declare-fun b!141782 () Bool)

(declare-fun e!92388 () Option!180)

(assert (=> b!141782 (= e!92388 e!92389)))

(declare-fun c!26732 () Bool)

(assert (=> b!141782 (= c!26732 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))) lt!73181))))))

(declare-fun b!141781 () Bool)

(assert (=> b!141781 (= e!92388 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))))

(declare-fun c!26731 () Bool)

(declare-fun d!44721 () Bool)

(assert (=> d!44721 (= c!26731 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))) lt!73181)))))

(assert (=> d!44721 (= (getValueByKey!174 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!73181) e!92388)))

(declare-fun b!141783 () Bool)

(assert (=> b!141783 (= e!92389 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))) lt!73181))))

(assert (= (and d!44721 c!26731) b!141781))

(assert (= (and d!44721 (not c!26731)) b!141782))

(assert (= (and b!141782 c!26732) b!141783))

(assert (= (and b!141782 (not c!26732)) b!141784))

(declare-fun m!170093 () Bool)

(assert (=> b!141783 m!170093))

(assert (=> d!43735 d!44721))

(declare-fun d!44723 () Bool)

(declare-fun c!26733 () Bool)

(assert (=> d!44723 (= c!26733 ((_ is Nil!1736) (toList!871 lt!73231)))))

(declare-fun e!92390 () (InoxSet tuple2!2656))

(assert (=> d!44723 (= (content!138 (toList!871 lt!73231)) e!92390)))

(declare-fun b!141785 () Bool)

(assert (=> b!141785 (= e!92390 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!141786 () Bool)

(assert (=> b!141786 (= e!92390 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73231)) true) (content!138 (t!6314 (toList!871 lt!73231)))))))

(assert (= (and d!44723 c!26733) b!141785))

(assert (= (and d!44723 (not c!26733)) b!141786))

(declare-fun m!170095 () Bool)

(assert (=> b!141786 m!170095))

(declare-fun m!170097 () Bool)

(assert (=> b!141786 m!170097))

(assert (=> d!44015 d!44723))

(declare-fun d!44725 () Bool)

(assert (=> d!44725 (= (isEmpty!421 lt!73548) (isEmpty!423 (toList!871 lt!73548)))))

(declare-fun bs!5947 () Bool)

(assert (= bs!5947 d!44725))

(declare-fun m!170099 () Bool)

(assert (=> bs!5947 m!170099))

(assert (=> b!140520 d!44725))

(assert (=> d!43977 d!43611))

(declare-fun d!44727 () Bool)

(declare-fun lt!74240 () Bool)

(assert (=> d!44727 (= lt!74240 (select (content!138 lt!73391) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92392 () Bool)

(assert (=> d!44727 (= lt!74240 e!92392)))

(declare-fun res!67617 () Bool)

(assert (=> d!44727 (=> (not res!67617) (not e!92392))))

(assert (=> d!44727 (= res!67617 ((_ is Cons!1735) lt!73391))))

(assert (=> d!44727 (= (contains!914 lt!73391 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74240)))

(declare-fun b!141787 () Bool)

(declare-fun e!92391 () Bool)

(assert (=> b!141787 (= e!92392 e!92391)))

(declare-fun res!67618 () Bool)

(assert (=> b!141787 (=> res!67618 e!92391)))

(assert (=> b!141787 (= res!67618 (= (h!2342 lt!73391) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141788 () Bool)

(assert (=> b!141788 (= e!92391 (contains!914 (t!6314 lt!73391) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44727 res!67617) b!141787))

(assert (= (and b!141787 (not res!67618)) b!141788))

(declare-fun m!170101 () Bool)

(assert (=> d!44727 m!170101))

(declare-fun m!170103 () Bool)

(assert (=> d!44727 m!170103))

(declare-fun m!170105 () Bool)

(assert (=> b!141788 m!170105))

(assert (=> b!140949 d!44727))

(declare-fun d!44729 () Bool)

(declare-fun res!67619 () Bool)

(declare-fun e!92393 () Bool)

(assert (=> d!44729 (=> res!67619 e!92393)))

(assert (=> d!44729 (= res!67619 (and ((_ is Cons!1735) (toList!871 lt!73279)) (= (_1!1339 (h!2342 (toList!871 lt!73279))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44729 (= (containsKey!178 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92393)))

(declare-fun b!141789 () Bool)

(declare-fun e!92394 () Bool)

(assert (=> b!141789 (= e!92393 e!92394)))

(declare-fun res!67620 () Bool)

(assert (=> b!141789 (=> (not res!67620) (not e!92394))))

(assert (=> b!141789 (= res!67620 (and (or (not ((_ is Cons!1735) (toList!871 lt!73279))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73279))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1735) (toList!871 lt!73279)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73279))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141790 () Bool)

(assert (=> b!141790 (= e!92394 (containsKey!178 (t!6314 (toList!871 lt!73279)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44729 (not res!67619)) b!141789))

(assert (= (and b!141789 res!67620) b!141790))

(declare-fun m!170107 () Bool)

(assert (=> b!141790 m!170107))

(assert (=> d!44055 d!44729))

(declare-fun d!44731 () Bool)

(assert (=> d!44731 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!73214)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!73214)))))

(assert (=> d!43841 d!44731))

(declare-fun b!141794 () Bool)

(declare-fun e!92396 () Option!180)

(assert (=> b!141794 (= e!92396 None!178)))

(declare-fun b!141792 () Bool)

(declare-fun e!92395 () Option!180)

(assert (=> b!141792 (= e!92395 e!92396)))

(declare-fun c!26735 () Bool)

(assert (=> b!141792 (= c!26735 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))) lt!73214))))))

(declare-fun b!141791 () Bool)

(assert (=> b!141791 (= e!92395 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))))

(declare-fun d!44733 () Bool)

(declare-fun c!26734 () Bool)

(assert (=> d!44733 (= c!26734 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))) lt!73214)))))

(assert (=> d!44733 (= (getValueByKey!174 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!73214) e!92395)))

(declare-fun b!141793 () Bool)

(assert (=> b!141793 (= e!92396 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))) lt!73214))))

(assert (= (and d!44733 c!26734) b!141791))

(assert (= (and d!44733 (not c!26734)) b!141792))

(assert (= (and b!141792 c!26735) b!141793))

(assert (= (and b!141792 (not c!26735)) b!141794))

(declare-fun m!170109 () Bool)

(assert (=> b!141793 m!170109))

(assert (=> d!43841 d!44733))

(declare-fun d!44735 () Bool)

(assert (=> d!44735 (= (get!1526 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3272 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000)))))

(assert (=> b!140986 d!44735))

(declare-fun d!44737 () Bool)

(assert (=> d!44737 (= (get!1528 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44173 d!44737))

(declare-fun b!141798 () Bool)

(declare-fun e!92398 () Option!180)

(assert (=> b!141798 (= e!92398 None!178)))

(declare-fun b!141796 () Bool)

(declare-fun e!92397 () Option!180)

(assert (=> b!141796 (= e!92397 e!92398)))

(declare-fun c!26737 () Bool)

(assert (=> b!141796 (= c!26737 (and ((_ is Cons!1735) (toList!871 lt!73128)) (not (= (_1!1339 (h!2342 (toList!871 lt!73128))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141795 () Bool)

(assert (=> b!141795 (= e!92397 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73128)))))))

(declare-fun d!44739 () Bool)

(declare-fun c!26736 () Bool)

(assert (=> d!44739 (= c!26736 (and ((_ is Cons!1735) (toList!871 lt!73128)) (= (_1!1339 (h!2342 (toList!871 lt!73128))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44739 (= (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000) e!92397)))

(declare-fun b!141797 () Bool)

(assert (=> b!141797 (= e!92398 (getValueByKey!174 (t!6314 (toList!871 lt!73128)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44739 c!26736) b!141795))

(assert (= (and d!44739 (not c!26736)) b!141796))

(assert (= (and b!141796 c!26737) b!141797))

(assert (= (and b!141796 (not c!26737)) b!141798))

(declare-fun m!170111 () Bool)

(assert (=> b!141797 m!170111))

(assert (=> d!44173 d!44739))

(declare-fun d!44741 () Bool)

(declare-fun lt!74241 () Bool)

(assert (=> d!44741 (= lt!74241 (select (content!138 lt!73675) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!92400 () Bool)

(assert (=> d!44741 (= lt!74241 e!92400)))

(declare-fun res!67621 () Bool)

(assert (=> d!44741 (=> (not res!67621) (not e!92400))))

(assert (=> d!44741 (= res!67621 ((_ is Cons!1735) lt!73675))))

(assert (=> d!44741 (= (contains!914 lt!73675 (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74241)))

(declare-fun b!141799 () Bool)

(declare-fun e!92399 () Bool)

(assert (=> b!141799 (= e!92400 e!92399)))

(declare-fun res!67622 () Bool)

(assert (=> b!141799 (=> res!67622 e!92399)))

(assert (=> b!141799 (= res!67622 (= (h!2342 lt!73675) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141800 () Bool)

(assert (=> b!141800 (= e!92399 (contains!914 (t!6314 lt!73675) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44741 res!67621) b!141799))

(assert (= (and b!141799 (not res!67622)) b!141800))

(declare-fun m!170113 () Bool)

(assert (=> d!44741 m!170113))

(declare-fun m!170115 () Bool)

(assert (=> d!44741 m!170115))

(declare-fun m!170117 () Bool)

(assert (=> b!141800 m!170117))

(assert (=> b!140743 d!44741))

(declare-fun lt!74242 () Bool)

(declare-fun d!44743 () Bool)

(assert (=> d!44743 (= lt!74242 (select (content!138 (toList!871 lt!73478)) (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))

(declare-fun e!92402 () Bool)

(assert (=> d!44743 (= lt!74242 e!92402)))

(declare-fun res!67623 () Bool)

(assert (=> d!44743 (=> (not res!67623) (not e!92402))))

(assert (=> d!44743 (= res!67623 ((_ is Cons!1735) (toList!871 lt!73478)))))

(assert (=> d!44743 (= (contains!914 (toList!871 lt!73478) (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) lt!74242)))

(declare-fun b!141801 () Bool)

(declare-fun e!92401 () Bool)

(assert (=> b!141801 (= e!92402 e!92401)))

(declare-fun res!67624 () Bool)

(assert (=> b!141801 (=> res!67624 e!92401)))

(assert (=> b!141801 (= res!67624 (= (h!2342 (toList!871 lt!73478)) (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))

(declare-fun b!141802 () Bool)

(assert (=> b!141802 (= e!92401 (contains!914 (t!6314 (toList!871 lt!73478)) (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44743 res!67623) b!141801))

(assert (= (and b!141801 (not res!67624)) b!141802))

(declare-fun m!170119 () Bool)

(assert (=> d!44743 m!170119))

(declare-fun m!170121 () Bool)

(assert (=> d!44743 m!170121))

(declare-fun m!170123 () Bool)

(assert (=> b!141802 m!170123))

(assert (=> b!140431 d!44743))

(declare-fun b!141806 () Bool)

(declare-fun e!92404 () Option!180)

(assert (=> b!141806 (= e!92404 None!178)))

(declare-fun b!141804 () Bool)

(declare-fun e!92403 () Option!180)

(assert (=> b!141804 (= e!92403 e!92404)))

(declare-fun c!26739 () Bool)

(assert (=> b!141804 (= c!26739 (and ((_ is Cons!1735) (t!6314 lt!73232)) (not (= (_1!1339 (h!2342 (t!6314 lt!73232))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun b!141803 () Bool)

(assert (=> b!141803 (= e!92403 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73232)))))))

(declare-fun d!44745 () Bool)

(declare-fun c!26738 () Bool)

(assert (=> d!44745 (= c!26738 (and ((_ is Cons!1735) (t!6314 lt!73232)) (= (_1!1339 (h!2342 (t!6314 lt!73232))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!44745 (= (getValueByKey!174 (t!6314 lt!73232) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!92403)))

(declare-fun b!141805 () Bool)

(assert (=> b!141805 (= e!92404 (getValueByKey!174 (t!6314 (t!6314 lt!73232)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44745 c!26738) b!141803))

(assert (= (and d!44745 (not c!26738)) b!141804))

(assert (= (and b!141804 c!26739) b!141805))

(assert (= (and b!141804 (not c!26739)) b!141806))

(declare-fun m!170125 () Bool)

(assert (=> b!141805 m!170125))

(assert (=> b!140762 d!44745))

(assert (=> d!44049 d!43719))

(declare-fun b!141807 () Bool)

(declare-fun e!92406 () (_ BitVec 32))

(declare-fun e!92405 () (_ BitVec 32))

(assert (=> b!141807 (= e!92406 e!92405)))

(declare-fun c!26741 () Bool)

(assert (=> b!141807 (= c!26741 (validKeyInArray!0 (select (arr!2302 lt!73355) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001))))))

(declare-fun b!141808 () Bool)

(declare-fun call!15694 () (_ BitVec 32))

(assert (=> b!141808 (= e!92405 (bvadd #b00000000000000000000000000000001 call!15694))))

(declare-fun d!44747 () Bool)

(declare-fun lt!74243 () (_ BitVec 32))

(assert (=> d!44747 (and (bvsge lt!74243 #b00000000000000000000000000000000) (bvsle lt!74243 (bvsub (size!2575 lt!73355) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001))))))

(assert (=> d!44747 (= lt!74243 e!92406)))

(declare-fun c!26740 () Bool)

(assert (=> d!44747 (= c!26740 (bvsge (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)))))

(assert (=> d!44747 (and (bvsle (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) (size!2575 lt!73355)))))

(assert (=> d!44747 (= (arrayCountValidKeys!0 lt!73355 (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)) lt!74243)))

(declare-fun b!141809 () Bool)

(assert (=> b!141809 (= e!92406 #b00000000000000000000000000000000)))

(declare-fun b!141810 () Bool)

(assert (=> b!141810 (= e!92405 call!15694)))

(declare-fun bm!15691 () Bool)

(assert (=> bm!15691 (= call!15694 (arrayCountValidKeys!0 lt!73355 (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) #b00000000000000000000000000000001)))))

(assert (= (and d!44747 c!26740) b!141809))

(assert (= (and d!44747 (not c!26740)) b!141807))

(assert (= (and b!141807 c!26741) b!141808))

(assert (= (and b!141807 (not c!26741)) b!141810))

(assert (= (or b!141808 b!141810) bm!15691))

(declare-fun m!170127 () Bool)

(assert (=> b!141807 m!170127))

(assert (=> b!141807 m!170127))

(declare-fun m!170129 () Bool)

(assert (=> b!141807 m!170129))

(declare-fun m!170131 () Bool)

(assert (=> bm!15691 m!170131))

(assert (=> bm!15647 d!44747))

(declare-fun d!44749 () Bool)

(declare-fun e!92408 () Bool)

(assert (=> d!44749 e!92408))

(declare-fun res!67625 () Bool)

(assert (=> d!44749 (=> res!67625 e!92408)))

(declare-fun lt!74247 () Bool)

(assert (=> d!44749 (= res!67625 (not lt!74247))))

(declare-fun lt!74246 () Bool)

(assert (=> d!44749 (= lt!74247 lt!74246)))

(declare-fun lt!74245 () Unit!4393)

(declare-fun e!92407 () Unit!4393)

(assert (=> d!44749 (= lt!74245 e!92407)))

(declare-fun c!26742 () Bool)

(assert (=> d!44749 (= c!26742 lt!74246)))

(assert (=> d!44749 (= lt!74246 (containsKey!178 (toList!871 lt!73501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44749 (= (contains!910 lt!73501 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74247)))

(declare-fun b!141811 () Bool)

(declare-fun lt!74244 () Unit!4393)

(assert (=> b!141811 (= e!92407 lt!74244)))

(assert (=> b!141811 (= lt!74244 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141811 (isDefined!128 (getValueByKey!174 (toList!871 lt!73501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141812 () Bool)

(declare-fun Unit!4473 () Unit!4393)

(assert (=> b!141812 (= e!92407 Unit!4473)))

(declare-fun b!141813 () Bool)

(assert (=> b!141813 (= e!92408 (isDefined!128 (getValueByKey!174 (toList!871 lt!73501) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44749 c!26742) b!141811))

(assert (= (and d!44749 (not c!26742)) b!141812))

(assert (= (and d!44749 (not res!67625)) b!141813))

(declare-fun m!170133 () Bool)

(assert (=> d!44749 m!170133))

(declare-fun m!170135 () Bool)

(assert (=> b!141811 m!170135))

(declare-fun m!170137 () Bool)

(assert (=> b!141811 m!170137))

(assert (=> b!141811 m!170137))

(declare-fun m!170139 () Bool)

(assert (=> b!141811 m!170139))

(assert (=> b!141813 m!170137))

(assert (=> b!141813 m!170137))

(assert (=> b!141813 m!170139))

(assert (=> b!140442 d!44749))

(declare-fun d!44751 () Bool)

(declare-fun e!92410 () Bool)

(assert (=> d!44751 e!92410))

(declare-fun res!67626 () Bool)

(assert (=> d!44751 (=> res!67626 e!92410)))

(declare-fun lt!74251 () Bool)

(assert (=> d!44751 (= res!67626 (not lt!74251))))

(declare-fun lt!74250 () Bool)

(assert (=> d!44751 (= lt!74251 lt!74250)))

(declare-fun lt!74249 () Unit!4393)

(declare-fun e!92409 () Unit!4393)

(assert (=> d!44751 (= lt!74249 e!92409)))

(declare-fun c!26743 () Bool)

(assert (=> d!44751 (= c!26743 lt!74250)))

(assert (=> d!44751 (= lt!74250 (containsKey!178 (toList!871 lt!73815) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!44751 (= (contains!910 lt!73815 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74251)))

(declare-fun b!141814 () Bool)

(declare-fun lt!74248 () Unit!4393)

(assert (=> b!141814 (= e!92409 lt!74248)))

(assert (=> b!141814 (= lt!74248 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73815) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> b!141814 (isDefined!128 (getValueByKey!174 (toList!871 lt!73815) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!141815 () Bool)

(declare-fun Unit!4474 () Unit!4393)

(assert (=> b!141815 (= e!92409 Unit!4474)))

(declare-fun b!141816 () Bool)

(assert (=> b!141816 (= e!92410 (isDefined!128 (getValueByKey!174 (toList!871 lt!73815) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44751 c!26743) b!141814))

(assert (= (and d!44751 (not c!26743)) b!141815))

(assert (= (and d!44751 (not res!67626)) b!141816))

(declare-fun m!170141 () Bool)

(assert (=> d!44751 m!170141))

(declare-fun m!170143 () Bool)

(assert (=> b!141814 m!170143))

(assert (=> b!141814 m!168509))

(assert (=> b!141814 m!168509))

(declare-fun m!170145 () Bool)

(assert (=> b!141814 m!170145))

(assert (=> b!141816 m!168509))

(assert (=> b!141816 m!168509))

(assert (=> b!141816 m!170145))

(assert (=> d!44087 d!44751))

(declare-fun b!141820 () Bool)

(declare-fun e!92412 () Option!180)

(assert (=> b!141820 (= e!92412 None!178)))

(declare-fun b!141818 () Bool)

(declare-fun e!92411 () Option!180)

(assert (=> b!141818 (= e!92411 e!92412)))

(declare-fun c!26745 () Bool)

(assert (=> b!141818 (= c!26745 (and ((_ is Cons!1735) lt!73816) (not (= (_1!1339 (h!2342 lt!73816)) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!141817 () Bool)

(assert (=> b!141817 (= e!92411 (Some!179 (_2!1339 (h!2342 lt!73816))))))

(declare-fun d!44753 () Bool)

(declare-fun c!26744 () Bool)

(assert (=> d!44753 (= c!26744 (and ((_ is Cons!1735) lt!73816) (= (_1!1339 (h!2342 lt!73816)) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44753 (= (getValueByKey!174 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92411)))

(declare-fun b!141819 () Bool)

(assert (=> b!141819 (= e!92412 (getValueByKey!174 (t!6314 lt!73816) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!44753 c!26744) b!141817))

(assert (= (and d!44753 (not c!26744)) b!141818))

(assert (= (and b!141818 c!26745) b!141819))

(assert (= (and b!141818 (not c!26745)) b!141820))

(declare-fun m!170147 () Bool)

(assert (=> b!141819 m!170147))

(assert (=> d!44087 d!44753))

(declare-fun d!44755 () Bool)

(assert (=> d!44755 (= (getValueByKey!174 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!74252 () Unit!4393)

(assert (=> d!44755 (= lt!74252 (choose!872 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!92413 () Bool)

(assert (=> d!44755 e!92413))

(declare-fun res!67627 () Bool)

(assert (=> d!44755 (=> (not res!67627) (not e!92413))))

(assert (=> d!44755 (= res!67627 (isStrictlySorted!320 lt!73816))))

(assert (=> d!44755 (= (lemmaContainsTupThenGetReturnValue!91 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74252)))

(declare-fun b!141821 () Bool)

(declare-fun res!67628 () Bool)

(assert (=> b!141821 (=> (not res!67628) (not e!92413))))

(assert (=> b!141821 (= res!67628 (containsKey!178 lt!73816 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!141822 () Bool)

(assert (=> b!141822 (= e!92413 (contains!914 lt!73816 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!44755 res!67627) b!141821))

(assert (= (and b!141821 res!67628) b!141822))

(assert (=> d!44755 m!168503))

(declare-fun m!170149 () Bool)

(assert (=> d!44755 m!170149))

(declare-fun m!170151 () Bool)

(assert (=> d!44755 m!170151))

(declare-fun m!170153 () Bool)

(assert (=> b!141821 m!170153))

(declare-fun m!170155 () Bool)

(assert (=> b!141822 m!170155))

(assert (=> d!44087 d!44755))

(declare-fun b!141823 () Bool)

(declare-fun e!92416 () List!1739)

(declare-fun call!15697 () List!1739)

(assert (=> b!141823 (= e!92416 call!15697)))

(declare-fun b!141824 () Bool)

(declare-fun e!92414 () List!1739)

(declare-fun call!15696 () List!1739)

(assert (=> b!141824 (= e!92414 call!15696)))

(declare-fun e!92417 () Bool)

(declare-fun b!141825 () Bool)

(declare-fun lt!74253 () List!1739)

(assert (=> b!141825 (= e!92417 (contains!914 lt!74253 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun bm!15692 () Bool)

(declare-fun c!26749 () Bool)

(declare-fun e!92415 () List!1739)

(assert (=> bm!15692 (= call!15697 ($colon$colon!93 e!92415 (ite c!26749 (h!2342 (toList!871 lt!73141)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!26746 () Bool)

(assert (=> bm!15692 (= c!26746 c!26749)))

(declare-fun bm!15693 () Bool)

(declare-fun call!15695 () List!1739)

(assert (=> bm!15693 (= call!15696 call!15695)))

(declare-fun b!141826 () Bool)

(declare-fun res!67629 () Bool)

(assert (=> b!141826 (=> (not res!67629) (not e!92417))))

(assert (=> b!141826 (= res!67629 (containsKey!178 lt!74253 (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun d!44757 () Bool)

(assert (=> d!44757 e!92417))

(declare-fun res!67630 () Bool)

(assert (=> d!44757 (=> (not res!67630) (not e!92417))))

(assert (=> d!44757 (= res!67630 (isStrictlySorted!320 lt!74253))))

(assert (=> d!44757 (= lt!74253 e!92416)))

(assert (=> d!44757 (= c!26749 (and ((_ is Cons!1735) (toList!871 lt!73141)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73141))) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44757 (isStrictlySorted!320 (toList!871 lt!73141))))

(assert (=> d!44757 (= (insertStrictlySorted!94 (toList!871 lt!73141) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74253)))

(declare-fun c!26748 () Bool)

(declare-fun c!26747 () Bool)

(declare-fun b!141827 () Bool)

(assert (=> b!141827 (= e!92415 (ite c!26748 (t!6314 (toList!871 lt!73141)) (ite c!26747 (Cons!1735 (h!2342 (toList!871 lt!73141)) (t!6314 (toList!871 lt!73141))) Nil!1736)))))

(declare-fun b!141828 () Bool)

(assert (=> b!141828 (= c!26747 (and ((_ is Cons!1735) (toList!871 lt!73141)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73141))) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!92418 () List!1739)

(assert (=> b!141828 (= e!92418 e!92414)))

(declare-fun b!141829 () Bool)

(assert (=> b!141829 (= e!92414 call!15696)))

(declare-fun b!141830 () Bool)

(assert (=> b!141830 (= e!92415 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73141)) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun bm!15694 () Bool)

(assert (=> bm!15694 (= call!15695 call!15697)))

(declare-fun b!141831 () Bool)

(assert (=> b!141831 (= e!92416 e!92418)))

(assert (=> b!141831 (= c!26748 (and ((_ is Cons!1735) (toList!871 lt!73141)) (= (_1!1339 (h!2342 (toList!871 lt!73141))) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!141832 () Bool)

(assert (=> b!141832 (= e!92418 call!15695)))

(assert (= (and d!44757 c!26749) b!141823))

(assert (= (and d!44757 (not c!26749)) b!141831))

(assert (= (and b!141831 c!26748) b!141832))

(assert (= (and b!141831 (not c!26748)) b!141828))

(assert (= (and b!141828 c!26747) b!141824))

(assert (= (and b!141828 (not c!26747)) b!141829))

(assert (= (or b!141824 b!141829) bm!15693))

(assert (= (or b!141832 bm!15693) bm!15694))

(assert (= (or b!141823 bm!15694) bm!15692))

(assert (= (and bm!15692 c!26746) b!141830))

(assert (= (and bm!15692 (not c!26746)) b!141827))

(assert (= (and d!44757 res!67630) b!141826))

(assert (= (and b!141826 res!67629) b!141825))

(declare-fun m!170157 () Bool)

(assert (=> b!141826 m!170157))

(declare-fun m!170159 () Bool)

(assert (=> b!141830 m!170159))

(declare-fun m!170161 () Bool)

(assert (=> bm!15692 m!170161))

(declare-fun m!170163 () Bool)

(assert (=> b!141825 m!170163))

(declare-fun m!170165 () Bool)

(assert (=> d!44757 m!170165))

(declare-fun m!170167 () Bool)

(assert (=> d!44757 m!170167))

(assert (=> d!44087 d!44757))

(declare-fun d!44759 () Bool)

(declare-fun res!67631 () Bool)

(declare-fun e!92419 () Bool)

(assert (=> d!44759 (=> res!67631 e!92419)))

(assert (=> d!44759 (= res!67631 (= (select (arr!2302 lt!73345) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44759 (= (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!92419)))

(declare-fun b!141833 () Bool)

(declare-fun e!92420 () Bool)

(assert (=> b!141833 (= e!92419 e!92420)))

(declare-fun res!67632 () Bool)

(assert (=> b!141833 (=> (not res!67632) (not e!92420))))

(assert (=> b!141833 (= res!67632 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 lt!73345)))))

(declare-fun b!141834 () Bool)

(assert (=> b!141834 (= e!92420 (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44759 (not res!67631)) b!141833))

(assert (= (and b!141833 res!67632) b!141834))

(declare-fun m!170169 () Bool)

(assert (=> d!44759 m!170169))

(assert (=> b!141834 m!166407))

(declare-fun m!170171 () Bool)

(assert (=> b!141834 m!170171))

(assert (=> b!141088 d!44759))

(assert (=> b!140484 d!44217))

(declare-fun d!44761 () Bool)

(assert (=> d!44761 (isDefined!128 (getValueByKey!174 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun lt!74254 () Unit!4393)

(assert (=> d!44761 (= lt!74254 (choose!871 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92421 () Bool)

(assert (=> d!44761 e!92421))

(declare-fun res!67633 () Bool)

(assert (=> d!44761 (=> (not res!67633) (not e!92421))))

(assert (=> d!44761 (= res!67633 (isStrictlySorted!320 (toList!871 lt!73231)))))

(assert (=> d!44761 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74254)))

(declare-fun b!141835 () Bool)

(assert (=> b!141835 (= e!92421 (containsKey!178 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!44761 res!67633) b!141835))

(assert (=> d!44761 m!166931))

(assert (=> d!44761 m!166931))

(assert (=> d!44761 m!168099))

(declare-fun m!170173 () Bool)

(assert (=> d!44761 m!170173))

(declare-fun m!170175 () Bool)

(assert (=> d!44761 m!170175))

(assert (=> b!141835 m!168095))

(assert (=> b!140757 d!44761))

(assert (=> b!140757 d!44571))

(assert (=> b!140757 d!43883))

(declare-fun d!44763 () Bool)

(assert (=> d!44763 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73145)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73145)))))

(assert (=> d!44097 d!44763))

(declare-fun b!141839 () Bool)

(declare-fun e!92423 () Option!180)

(assert (=> b!141839 (= e!92423 None!178)))

(declare-fun b!141837 () Bool)

(declare-fun e!92422 () Option!180)

(assert (=> b!141837 (= e!92422 e!92423)))

(declare-fun c!26751 () Bool)

(assert (=> b!141837 (= c!26751 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73145))))))

(declare-fun b!141836 () Bool)

(assert (=> b!141836 (= e!92422 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))))

(declare-fun d!44765 () Bool)

(declare-fun c!26750 () Bool)

(assert (=> d!44765 (= c!26750 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73145)))))

(assert (=> d!44765 (= (getValueByKey!174 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73145) e!92422)))

(declare-fun b!141838 () Bool)

(assert (=> b!141838 (= e!92423 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73126 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) lt!73145))))

(assert (= (and d!44765 c!26750) b!141836))

(assert (= (and d!44765 (not c!26750)) b!141837))

(assert (= (and b!141837 c!26751) b!141838))

(assert (= (and b!141837 (not c!26751)) b!141839))

(declare-fun m!170177 () Bool)

(assert (=> b!141838 m!170177))

(assert (=> d!44097 d!44765))

(declare-fun d!44767 () Bool)

(assert (=> d!44767 (= (apply!120 lt!73441 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73441) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5948 () Bool)

(assert (= bs!5948 d!44767))

(assert (=> bs!5948 m!166699))

(declare-fun m!170179 () Bool)

(assert (=> bs!5948 m!170179))

(assert (=> bs!5948 m!170179))

(declare-fun m!170181 () Bool)

(assert (=> bs!5948 m!170181))

(assert (=> b!140394 d!44767))

(assert (=> b!140394 d!44041))

(assert (=> b!140610 d!43699))

(declare-fun d!44769 () Bool)

(assert (=> d!44769 (= (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))) (not (isEmpty!422 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))))

(declare-fun bs!5949 () Bool)

(assert (= bs!5949 d!44769))

(assert (=> bs!5949 m!167969))

(declare-fun m!170183 () Bool)

(assert (=> bs!5949 m!170183))

(assert (=> b!140689 d!44769))

(declare-fun b!141843 () Bool)

(declare-fun e!92425 () Option!180)

(assert (=> b!141843 (= e!92425 None!178)))

(declare-fun b!141841 () Bool)

(declare-fun e!92424 () Option!180)

(assert (=> b!141841 (= e!92424 e!92425)))

(declare-fun c!26753 () Bool)

(assert (=> b!141841 (= c!26753 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (not (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))))

(declare-fun b!141840 () Bool)

(assert (=> b!141840 (= e!92424 (Some!179 (_2!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))))

(declare-fun c!26752 () Bool)

(declare-fun d!44771 () Bool)

(assert (=> d!44771 (= c!26752 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (=> d!44771 (= (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) e!92424)))

(declare-fun b!141842 () Bool)

(assert (=> b!141842 (= e!92425 (getValueByKey!174 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!44771 c!26752) b!141840))

(assert (= (and d!44771 (not c!26752)) b!141841))

(assert (= (and b!141841 c!26753) b!141842))

(assert (= (and b!141841 (not c!26753)) b!141843))

(assert (=> b!141842 m!166633))

(declare-fun m!170185 () Bool)

(assert (=> b!141842 m!170185))

(assert (=> b!140689 d!44771))

(declare-fun d!44773 () Bool)

(declare-fun e!92427 () Bool)

(assert (=> d!44773 e!92427))

(declare-fun res!67634 () Bool)

(assert (=> d!44773 (=> res!67634 e!92427)))

(declare-fun lt!74258 () Bool)

(assert (=> d!44773 (= res!67634 (not lt!74258))))

(declare-fun lt!74257 () Bool)

(assert (=> d!44773 (= lt!74258 lt!74257)))

(declare-fun lt!74256 () Unit!4393)

(declare-fun e!92426 () Unit!4393)

(assert (=> d!44773 (= lt!74256 e!92426)))

(declare-fun c!26754 () Bool)

(assert (=> d!44773 (= c!26754 lt!74257)))

(assert (=> d!44773 (= lt!74257 (containsKey!178 (toList!871 lt!73517) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44773 (= (contains!910 lt!73517 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74258)))

(declare-fun b!141844 () Bool)

(declare-fun lt!74255 () Unit!4393)

(assert (=> b!141844 (= e!92426 lt!74255)))

(assert (=> b!141844 (= lt!74255 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73517) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141844 (isDefined!128 (getValueByKey!174 (toList!871 lt!73517) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141845 () Bool)

(declare-fun Unit!4475 () Unit!4393)

(assert (=> b!141845 (= e!92426 Unit!4475)))

(declare-fun b!141846 () Bool)

(assert (=> b!141846 (= e!92427 (isDefined!128 (getValueByKey!174 (toList!871 lt!73517) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44773 c!26754) b!141844))

(assert (= (and d!44773 (not c!26754)) b!141845))

(assert (= (and d!44773 (not res!67634)) b!141846))

(declare-fun m!170187 () Bool)

(assert (=> d!44773 m!170187))

(declare-fun m!170189 () Bool)

(assert (=> b!141844 m!170189))

(declare-fun m!170191 () Bool)

(assert (=> b!141844 m!170191))

(assert (=> b!141844 m!170191))

(declare-fun m!170193 () Bool)

(assert (=> b!141844 m!170193))

(assert (=> b!141846 m!170191))

(assert (=> b!141846 m!170191))

(assert (=> b!141846 m!170193))

(assert (=> bm!15569 d!44773))

(declare-fun d!44775 () Bool)

(assert (=> d!44775 (= (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146)) (not (isEmpty!422 (getValueByKey!174 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))))

(declare-fun bs!5950 () Bool)

(assert (= bs!5950 d!44775))

(assert (=> bs!5950 m!168493))

(declare-fun m!170195 () Bool)

(assert (=> bs!5950 m!170195))

(assert (=> b!140971 d!44775))

(declare-fun b!141850 () Bool)

(declare-fun e!92429 () Option!180)

(assert (=> b!141850 (= e!92429 None!178)))

(declare-fun b!141848 () Bool)

(declare-fun e!92428 () Option!180)

(assert (=> b!141848 (= e!92428 e!92429)))

(declare-fun c!26756 () Bool)

(assert (=> b!141848 (= c!26756 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73146))))))

(declare-fun b!141847 () Bool)

(assert (=> b!141847 (= e!92428 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))))

(declare-fun d!44777 () Bool)

(declare-fun c!26755 () Bool)

(assert (=> d!44777 (= c!26755 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73146)))))

(assert (=> d!44777 (= (getValueByKey!174 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146) e!92428)))

(declare-fun b!141849 () Bool)

(assert (=> b!141849 (= e!92429 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) lt!73146))))

(assert (= (and d!44777 c!26755) b!141847))

(assert (= (and d!44777 (not c!26755)) b!141848))

(assert (= (and b!141848 c!26756) b!141849))

(assert (= (and b!141848 (not c!26756)) b!141850))

(declare-fun m!170197 () Bool)

(assert (=> b!141849 m!170197))

(assert (=> b!140971 d!44777))

(declare-fun d!44779 () Bool)

(assert (=> d!44779 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73005) lt!73012)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73005) lt!73012))))))

(declare-fun bs!5951 () Bool)

(assert (= bs!5951 d!44779))

(assert (=> bs!5951 m!167179))

(declare-fun m!170199 () Bool)

(assert (=> bs!5951 m!170199))

(assert (=> b!140810 d!44779))

(assert (=> b!140810 d!44117))

(declare-fun b!141854 () Bool)

(declare-fun e!92431 () Option!180)

(assert (=> b!141854 (= e!92431 None!178)))

(declare-fun b!141852 () Bool)

(declare-fun e!92430 () Option!180)

(assert (=> b!141852 (= e!92430 e!92431)))

(declare-fun c!26758 () Bool)

(assert (=> b!141852 (= c!26758 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15490))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15490)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!141851 () Bool)

(assert (=> b!141851 (= e!92430 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 call!15490))))))))

(declare-fun d!44781 () Bool)

(declare-fun c!26757 () Bool)

(assert (=> d!44781 (= c!26757 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15490))) (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15490)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44781 (= (getValueByKey!174 (t!6314 (toList!871 call!15490)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92430)))

(declare-fun b!141853 () Bool)

(assert (=> b!141853 (= e!92431 (getValueByKey!174 (t!6314 (t!6314 (toList!871 call!15490))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44781 c!26757) b!141851))

(assert (= (and d!44781 (not c!26757)) b!141852))

(assert (= (and b!141852 c!26758) b!141853))

(assert (= (and b!141852 (not c!26758)) b!141854))

(assert (=> b!141853 m!166407))

(declare-fun m!170201 () Bool)

(assert (=> b!141853 m!170201))

(assert (=> b!140621 d!44781))

(declare-fun b!141855 () Bool)

(declare-fun e!92434 () List!1739)

(declare-fun call!15700 () List!1739)

(assert (=> b!141855 (= e!92434 call!15700)))

(declare-fun b!141856 () Bool)

(declare-fun e!92432 () List!1739)

(declare-fun call!15699 () List!1739)

(assert (=> b!141856 (= e!92432 call!15699)))

(declare-fun b!141857 () Bool)

(declare-fun e!92435 () Bool)

(declare-fun lt!74259 () List!1739)

(assert (=> b!141857 (= e!92435 (contains!914 lt!74259 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun c!26762 () Bool)

(declare-fun e!92433 () List!1739)

(declare-fun bm!15695 () Bool)

(assert (=> bm!15695 (= call!15700 ($colon$colon!93 e!92433 (ite c!26762 (h!2342 (t!6314 (toList!871 lt!73001))) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26759 () Bool)

(assert (=> bm!15695 (= c!26759 c!26762)))

(declare-fun bm!15696 () Bool)

(declare-fun call!15698 () List!1739)

(assert (=> bm!15696 (= call!15699 call!15698)))

(declare-fun b!141858 () Bool)

(declare-fun res!67635 () Bool)

(assert (=> b!141858 (=> (not res!67635) (not e!92435))))

(assert (=> b!141858 (= res!67635 (containsKey!178 lt!74259 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!44783 () Bool)

(assert (=> d!44783 e!92435))

(declare-fun res!67636 () Bool)

(assert (=> d!44783 (=> (not res!67636) (not e!92435))))

(assert (=> d!44783 (= res!67636 (isStrictlySorted!320 lt!74259))))

(assert (=> d!44783 (= lt!74259 e!92434)))

(assert (=> d!44783 (= c!26762 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73001))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73001)))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44783 (isStrictlySorted!320 (t!6314 (toList!871 lt!73001)))))

(assert (=> d!44783 (= (insertStrictlySorted!94 (t!6314 (toList!871 lt!73001)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74259)))

(declare-fun c!26761 () Bool)

(declare-fun c!26760 () Bool)

(declare-fun b!141859 () Bool)

(assert (=> b!141859 (= e!92433 (ite c!26761 (t!6314 (t!6314 (toList!871 lt!73001))) (ite c!26760 (Cons!1735 (h!2342 (t!6314 (toList!871 lt!73001))) (t!6314 (t!6314 (toList!871 lt!73001)))) Nil!1736)))))

(declare-fun b!141860 () Bool)

(assert (=> b!141860 (= c!26760 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73001))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73001)))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92436 () List!1739)

(assert (=> b!141860 (= e!92436 e!92432)))

(declare-fun b!141861 () Bool)

(assert (=> b!141861 (= e!92432 call!15699)))

(declare-fun b!141862 () Bool)

(assert (=> b!141862 (= e!92433 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 lt!73001))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15697 () Bool)

(assert (=> bm!15697 (= call!15698 call!15700)))

(declare-fun b!141863 () Bool)

(assert (=> b!141863 (= e!92434 e!92436)))

(assert (=> b!141863 (= c!26761 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73001))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73001)))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141864 () Bool)

(assert (=> b!141864 (= e!92436 call!15698)))

(assert (= (and d!44783 c!26762) b!141855))

(assert (= (and d!44783 (not c!26762)) b!141863))

(assert (= (and b!141863 c!26761) b!141864))

(assert (= (and b!141863 (not c!26761)) b!141860))

(assert (= (and b!141860 c!26760) b!141856))

(assert (= (and b!141860 (not c!26760)) b!141861))

(assert (= (or b!141856 b!141861) bm!15696))

(assert (= (or b!141864 bm!15696) bm!15697))

(assert (= (or b!141855 bm!15697) bm!15695))

(assert (= (and bm!15695 c!26759) b!141862))

(assert (= (and bm!15695 (not c!26759)) b!141859))

(assert (= (and d!44783 res!67636) b!141858))

(assert (= (and b!141858 res!67635) b!141857))

(declare-fun m!170203 () Bool)

(assert (=> b!141858 m!170203))

(declare-fun m!170205 () Bool)

(assert (=> b!141862 m!170205))

(declare-fun m!170207 () Bool)

(assert (=> bm!15695 m!170207))

(declare-fun m!170209 () Bool)

(assert (=> b!141857 m!170209))

(declare-fun m!170211 () Bool)

(assert (=> d!44783 m!170211))

(declare-fun m!170213 () Bool)

(assert (=> d!44783 m!170213))

(assert (=> b!140563 d!44783))

(declare-fun lt!74260 () Bool)

(declare-fun d!44785 () Bool)

(assert (=> d!44785 (= lt!74260 (select (content!138 (toList!871 lt!73436)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92438 () Bool)

(assert (=> d!44785 (= lt!74260 e!92438)))

(declare-fun res!67637 () Bool)

(assert (=> d!44785 (=> (not res!67637) (not e!92438))))

(assert (=> d!44785 (= res!67637 ((_ is Cons!1735) (toList!871 lt!73436)))))

(assert (=> d!44785 (= (contains!914 (toList!871 lt!73436) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74260)))

(declare-fun b!141865 () Bool)

(declare-fun e!92437 () Bool)

(assert (=> b!141865 (= e!92438 e!92437)))

(declare-fun res!67638 () Bool)

(assert (=> b!141865 (=> res!67638 e!92437)))

(assert (=> b!141865 (= res!67638 (= (h!2342 (toList!871 lt!73436)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141866 () Bool)

(assert (=> b!141866 (= e!92437 (contains!914 (t!6314 (toList!871 lt!73436)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44785 res!67637) b!141865))

(assert (= (and b!141865 (not res!67638)) b!141866))

(declare-fun m!170215 () Bool)

(assert (=> d!44785 m!170215))

(declare-fun m!170217 () Bool)

(assert (=> d!44785 m!170217))

(declare-fun m!170219 () Bool)

(assert (=> b!141866 m!170219))

(assert (=> b!140385 d!44785))

(declare-fun d!44787 () Bool)

(assert (=> d!44787 (= (get!1528 (getValueByKey!174 (toList!871 lt!73174) lt!73181)) (v!3279 (getValueByKey!174 (toList!871 lt!73174) lt!73181)))))

(assert (=> d!43763 d!44787))

(declare-fun b!141870 () Bool)

(declare-fun e!92440 () Option!180)

(assert (=> b!141870 (= e!92440 None!178)))

(declare-fun b!141868 () Bool)

(declare-fun e!92439 () Option!180)

(assert (=> b!141868 (= e!92439 e!92440)))

(declare-fun c!26764 () Bool)

(assert (=> b!141868 (= c!26764 (and ((_ is Cons!1735) (toList!871 lt!73174)) (not (= (_1!1339 (h!2342 (toList!871 lt!73174))) lt!73181))))))

(declare-fun b!141867 () Bool)

(assert (=> b!141867 (= e!92439 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73174)))))))

(declare-fun d!44789 () Bool)

(declare-fun c!26763 () Bool)

(assert (=> d!44789 (= c!26763 (and ((_ is Cons!1735) (toList!871 lt!73174)) (= (_1!1339 (h!2342 (toList!871 lt!73174))) lt!73181)))))

(assert (=> d!44789 (= (getValueByKey!174 (toList!871 lt!73174) lt!73181) e!92439)))

(declare-fun b!141869 () Bool)

(assert (=> b!141869 (= e!92440 (getValueByKey!174 (t!6314 (toList!871 lt!73174)) lt!73181))))

(assert (= (and d!44789 c!26763) b!141867))

(assert (= (and d!44789 (not c!26763)) b!141868))

(assert (= (and b!141868 c!26764) b!141869))

(assert (= (and b!141868 (not c!26764)) b!141870))

(declare-fun m!170221 () Bool)

(assert (=> b!141869 m!170221))

(assert (=> d!43763 d!44789))

(declare-fun d!44791 () Bool)

(assert (=> d!44791 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74261 () Unit!4393)

(assert (=> d!44791 (= lt!74261 (choose!871 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92441 () Bool)

(assert (=> d!44791 e!92441))

(declare-fun res!67639 () Bool)

(assert (=> d!44791 (=> (not res!67639) (not e!92441))))

(assert (=> d!44791 (= res!67639 (isStrictlySorted!320 (toList!871 lt!73197)))))

(assert (=> d!44791 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74261)))

(declare-fun b!141871 () Bool)

(assert (=> b!141871 (= e!92441 (containsKey!178 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44791 res!67639) b!141871))

(assert (=> d!44791 m!166699))

(assert (=> d!44791 m!167591))

(assert (=> d!44791 m!167591))

(assert (=> d!44791 m!167593))

(assert (=> d!44791 m!166699))

(declare-fun m!170223 () Bool)

(assert (=> d!44791 m!170223))

(assert (=> d!44791 m!169119))

(assert (=> b!141871 m!166699))

(assert (=> b!141871 m!167587))

(assert (=> b!140494 d!44791))

(assert (=> b!140494 d!44591))

(assert (=> b!140494 d!44593))

(declare-fun d!44793 () Bool)

(declare-fun res!67640 () Bool)

(declare-fun e!92442 () Bool)

(assert (=> d!44793 (=> res!67640 e!92442)))

(assert (=> d!44793 (= res!67640 (and ((_ is Cons!1735) (t!6314 (t!6314 (toList!871 lt!72917)))) (= (_1!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44793 (= (containsKey!178 (t!6314 (t!6314 (toList!871 lt!72917))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92442)))

(declare-fun b!141872 () Bool)

(declare-fun e!92443 () Bool)

(assert (=> b!141872 (= e!92442 e!92443)))

(declare-fun res!67641 () Bool)

(assert (=> b!141872 (=> (not res!67641) (not e!92443))))

(assert (=> b!141872 (= res!67641 (and (or (not ((_ is Cons!1735) (t!6314 (t!6314 (toList!871 lt!72917))))) (bvsle (_1!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (t!6314 (t!6314 (toList!871 lt!72917)))) (bvslt (_1!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!141873 () Bool)

(assert (=> b!141873 (= e!92443 (containsKey!178 (t!6314 (t!6314 (t!6314 (toList!871 lt!72917)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44793 (not res!67640)) b!141872))

(assert (= (and b!141872 res!67641) b!141873))

(assert (=> b!141873 m!166407))

(declare-fun m!170225 () Bool)

(assert (=> b!141873 m!170225))

(assert (=> b!140871 d!44793))

(declare-fun d!44795 () Bool)

(assert (=> d!44795 (= ($colon$colon!93 e!91686 (ite c!26410 (h!2342 (toList!871 lt!73005)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (Cons!1735 (ite c!26410 (h!2342 (toList!871 lt!73005)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91686))))

(assert (=> bm!15588 d!44795))

(assert (=> b!141140 d!44383))

(assert (=> d!43993 d!43719))

(declare-fun b!141877 () Bool)

(declare-fun e!92445 () Option!180)

(assert (=> b!141877 (= e!92445 None!178)))

(declare-fun b!141875 () Bool)

(declare-fun e!92444 () Option!180)

(assert (=> b!141875 (= e!92444 e!92445)))

(declare-fun c!26766 () Bool)

(assert (=> b!141875 (= c!26766 (and ((_ is Cons!1735) (toList!871 lt!73730)) (not (= (_1!1339 (h!2342 (toList!871 lt!73730))) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))))

(declare-fun b!141874 () Bool)

(assert (=> b!141874 (= e!92444 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73730)))))))

(declare-fun d!44797 () Bool)

(declare-fun c!26765 () Bool)

(assert (=> d!44797 (= c!26765 (and ((_ is Cons!1735) (toList!871 lt!73730)) (= (_1!1339 (h!2342 (toList!871 lt!73730))) (_1!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(assert (=> d!44797 (= (getValueByKey!174 (toList!871 lt!73730) (_1!1339 (tuple2!2657 lt!73265 lt!73264))) e!92444)))

(declare-fun b!141876 () Bool)

(assert (=> b!141876 (= e!92445 (getValueByKey!174 (t!6314 (toList!871 lt!73730)) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (= (and d!44797 c!26765) b!141874))

(assert (= (and d!44797 (not c!26765)) b!141875))

(assert (= (and b!141875 c!26766) b!141876))

(assert (= (and b!141875 (not c!26766)) b!141877))

(declare-fun m!170227 () Bool)

(assert (=> b!141876 m!170227))

(assert (=> b!140841 d!44797))

(declare-fun b!141881 () Bool)

(declare-fun e!92447 () Option!180)

(assert (=> b!141881 (= e!92447 None!178)))

(declare-fun b!141879 () Bool)

(declare-fun e!92446 () Option!180)

(assert (=> b!141879 (= e!92446 e!92447)))

(declare-fun c!26768 () Bool)

(assert (=> b!141879 (= c!26768 (and ((_ is Cons!1735) (toList!871 lt!73593)) (not (= (_1!1339 (h!2342 (toList!871 lt!73593))) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141878 () Bool)

(assert (=> b!141878 (= e!92446 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73593)))))))

(declare-fun d!44799 () Bool)

(declare-fun c!26767 () Bool)

(assert (=> d!44799 (= c!26767 (and ((_ is Cons!1735) (toList!871 lt!73593)) (= (_1!1339 (h!2342 (toList!871 lt!73593))) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44799 (= (getValueByKey!174 (toList!871 lt!73593) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) e!92446)))

(declare-fun b!141880 () Bool)

(assert (=> b!141880 (= e!92447 (getValueByKey!174 (t!6314 (toList!871 lt!73593)) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44799 c!26767) b!141878))

(assert (= (and d!44799 (not c!26767)) b!141879))

(assert (= (and b!141879 c!26768) b!141880))

(assert (= (and b!141879 (not c!26768)) b!141881))

(declare-fun m!170229 () Bool)

(assert (=> b!141880 m!170229))

(assert (=> b!140598 d!44799))

(declare-fun d!44801 () Bool)

(assert (=> d!44801 (= (get!1528 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43823 d!44801))

(declare-fun b!141885 () Bool)

(declare-fun e!92449 () Option!180)

(assert (=> b!141885 (= e!92449 None!178)))

(declare-fun b!141883 () Bool)

(declare-fun e!92448 () Option!180)

(assert (=> b!141883 (= e!92448 e!92449)))

(declare-fun c!26770 () Bool)

(assert (=> b!141883 (= c!26770 (and ((_ is Cons!1735) (toList!871 lt!73128)) (not (= (_1!1339 (h!2342 (toList!871 lt!73128))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141882 () Bool)

(assert (=> b!141882 (= e!92448 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73128)))))))

(declare-fun d!44803 () Bool)

(declare-fun c!26769 () Bool)

(assert (=> d!44803 (= c!26769 (and ((_ is Cons!1735) (toList!871 lt!73128)) (= (_1!1339 (h!2342 (toList!871 lt!73128))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44803 (= (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000) e!92448)))

(declare-fun b!141884 () Bool)

(assert (=> b!141884 (= e!92449 (getValueByKey!174 (t!6314 (toList!871 lt!73128)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44803 c!26769) b!141882))

(assert (= (and d!44803 (not c!26769)) b!141883))

(assert (= (and b!141883 c!26770) b!141884))

(assert (= (and b!141883 (not c!26770)) b!141885))

(declare-fun m!170231 () Bool)

(assert (=> b!141884 m!170231))

(assert (=> d!43823 d!44803))

(assert (=> b!140521 d!43699))

(assert (=> b!140585 d!44217))

(declare-fun d!44805 () Bool)

(declare-fun e!92451 () Bool)

(assert (=> d!44805 e!92451))

(declare-fun res!67642 () Bool)

(assert (=> d!44805 (=> res!67642 e!92451)))

(declare-fun lt!74265 () Bool)

(assert (=> d!44805 (= res!67642 (not lt!74265))))

(declare-fun lt!74264 () Bool)

(assert (=> d!44805 (= lt!74265 lt!74264)))

(declare-fun lt!74263 () Unit!4393)

(declare-fun e!92450 () Unit!4393)

(assert (=> d!44805 (= lt!74263 e!92450)))

(declare-fun c!26771 () Bool)

(assert (=> d!44805 (= c!26771 lt!74264)))

(assert (=> d!44805 (= lt!74264 (containsKey!178 (toList!871 lt!73501) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44805 (= (contains!910 lt!73501 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74265)))

(declare-fun b!141886 () Bool)

(declare-fun lt!74262 () Unit!4393)

(assert (=> b!141886 (= e!92450 lt!74262)))

(assert (=> b!141886 (= lt!74262 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73501) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141886 (isDefined!128 (getValueByKey!174 (toList!871 lt!73501) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141887 () Bool)

(declare-fun Unit!4476 () Unit!4393)

(assert (=> b!141887 (= e!92450 Unit!4476)))

(declare-fun b!141888 () Bool)

(assert (=> b!141888 (= e!92451 (isDefined!128 (getValueByKey!174 (toList!871 lt!73501) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44805 c!26771) b!141886))

(assert (= (and d!44805 (not c!26771)) b!141887))

(assert (= (and d!44805 (not res!67642)) b!141888))

(assert (=> d!44805 m!166699))

(declare-fun m!170233 () Bool)

(assert (=> d!44805 m!170233))

(assert (=> b!141886 m!166699))

(declare-fun m!170235 () Bool)

(assert (=> b!141886 m!170235))

(assert (=> b!141886 m!166699))

(declare-fun m!170237 () Bool)

(assert (=> b!141886 m!170237))

(assert (=> b!141886 m!170237))

(declare-fun m!170239 () Bool)

(assert (=> b!141886 m!170239))

(assert (=> b!141888 m!166699))

(assert (=> b!141888 m!170237))

(assert (=> b!141888 m!170237))

(assert (=> b!141888 m!170239))

(assert (=> b!140443 d!44805))

(declare-fun d!44807 () Bool)

(declare-fun e!92453 () Bool)

(assert (=> d!44807 e!92453))

(declare-fun res!67643 () Bool)

(assert (=> d!44807 (=> res!67643 e!92453)))

(declare-fun lt!74269 () Bool)

(assert (=> d!44807 (= res!67643 (not lt!74269))))

(declare-fun lt!74268 () Bool)

(assert (=> d!44807 (= lt!74269 lt!74268)))

(declare-fun lt!74267 () Unit!4393)

(declare-fun e!92452 () Unit!4393)

(assert (=> d!44807 (= lt!74267 e!92452)))

(declare-fun c!26772 () Bool)

(assert (=> d!44807 (= c!26772 lt!74268)))

(assert (=> d!44807 (= lt!74268 (containsKey!178 (toList!871 lt!73517) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44807 (= (contains!910 lt!73517 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74269)))

(declare-fun b!141889 () Bool)

(declare-fun lt!74266 () Unit!4393)

(assert (=> b!141889 (= e!92452 lt!74266)))

(assert (=> b!141889 (= lt!74266 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73517) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141889 (isDefined!128 (getValueByKey!174 (toList!871 lt!73517) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141890 () Bool)

(declare-fun Unit!4477 () Unit!4393)

(assert (=> b!141890 (= e!92452 Unit!4477)))

(declare-fun b!141891 () Bool)

(assert (=> b!141891 (= e!92453 (isDefined!128 (getValueByKey!174 (toList!871 lt!73517) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44807 c!26772) b!141889))

(assert (= (and d!44807 (not c!26772)) b!141890))

(assert (= (and d!44807 (not res!67643)) b!141891))

(declare-fun m!170241 () Bool)

(assert (=> d!44807 m!170241))

(declare-fun m!170243 () Bool)

(assert (=> b!141889 m!170243))

(assert (=> b!141889 m!169977))

(assert (=> b!141889 m!169977))

(declare-fun m!170245 () Bool)

(assert (=> b!141889 m!170245))

(assert (=> b!141891 m!169977))

(assert (=> b!141891 m!169977))

(assert (=> b!141891 m!170245))

(assert (=> bm!15572 d!44807))

(declare-fun d!44809 () Bool)

(declare-fun lt!74270 () Bool)

(assert (=> d!44809 (= lt!74270 (select (content!138 (t!6314 (toList!871 lt!73279))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92455 () Bool)

(assert (=> d!44809 (= lt!74270 e!92455)))

(declare-fun res!67644 () Bool)

(assert (=> d!44809 (=> (not res!67644) (not e!92455))))

(assert (=> d!44809 (= res!67644 ((_ is Cons!1735) (t!6314 (toList!871 lt!73279))))))

(assert (=> d!44809 (= (contains!914 (t!6314 (toList!871 lt!73279)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74270)))

(declare-fun b!141892 () Bool)

(declare-fun e!92454 () Bool)

(assert (=> b!141892 (= e!92455 e!92454)))

(declare-fun res!67645 () Bool)

(assert (=> b!141892 (=> res!67645 e!92454)))

(assert (=> b!141892 (= res!67645 (= (h!2342 (t!6314 (toList!871 lt!73279))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141893 () Bool)

(assert (=> b!141893 (= e!92454 (contains!914 (t!6314 (t!6314 (toList!871 lt!73279))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44809 res!67644) b!141892))

(assert (= (and b!141892 (not res!67645)) b!141893))

(declare-fun m!170247 () Bool)

(assert (=> d!44809 m!170247))

(declare-fun m!170249 () Bool)

(assert (=> d!44809 m!170249))

(declare-fun m!170251 () Bool)

(assert (=> b!141893 m!170251))

(assert (=> b!141174 d!44809))

(declare-fun d!44811 () Bool)

(assert (=> d!44811 (= (get!1527 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140987 d!44811))

(declare-fun d!44813 () Bool)

(declare-fun lt!74271 () Bool)

(assert (=> d!44813 (= lt!74271 (select (content!138 (toList!871 lt!73730)) (tuple2!2657 lt!73265 lt!73264)))))

(declare-fun e!92457 () Bool)

(assert (=> d!44813 (= lt!74271 e!92457)))

(declare-fun res!67646 () Bool)

(assert (=> d!44813 (=> (not res!67646) (not e!92457))))

(assert (=> d!44813 (= res!67646 ((_ is Cons!1735) (toList!871 lt!73730)))))

(assert (=> d!44813 (= (contains!914 (toList!871 lt!73730) (tuple2!2657 lt!73265 lt!73264)) lt!74271)))

(declare-fun b!141894 () Bool)

(declare-fun e!92456 () Bool)

(assert (=> b!141894 (= e!92457 e!92456)))

(declare-fun res!67647 () Bool)

(assert (=> b!141894 (=> res!67647 e!92456)))

(assert (=> b!141894 (= res!67647 (= (h!2342 (toList!871 lt!73730)) (tuple2!2657 lt!73265 lt!73264)))))

(declare-fun b!141895 () Bool)

(assert (=> b!141895 (= e!92456 (contains!914 (t!6314 (toList!871 lt!73730)) (tuple2!2657 lt!73265 lt!73264)))))

(assert (= (and d!44813 res!67646) b!141894))

(assert (= (and b!141894 (not res!67647)) b!141895))

(declare-fun m!170253 () Bool)

(assert (=> d!44813 m!170253))

(declare-fun m!170255 () Bool)

(assert (=> d!44813 m!170255))

(declare-fun m!170257 () Bool)

(assert (=> b!141895 m!170257))

(assert (=> b!140842 d!44813))

(declare-fun lt!74272 () Bool)

(declare-fun d!44815 () Bool)

(assert (=> d!44815 (= lt!74272 (select (content!138 (toList!871 lt!73593)) (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))

(declare-fun e!92459 () Bool)

(assert (=> d!44815 (= lt!74272 e!92459)))

(declare-fun res!67648 () Bool)

(assert (=> d!44815 (=> (not res!67648) (not e!92459))))

(assert (=> d!44815 (= res!67648 ((_ is Cons!1735) (toList!871 lt!73593)))))

(assert (=> d!44815 (= (contains!914 (toList!871 lt!73593) (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) lt!74272)))

(declare-fun b!141896 () Bool)

(declare-fun e!92458 () Bool)

(assert (=> b!141896 (= e!92459 e!92458)))

(declare-fun res!67649 () Bool)

(assert (=> b!141896 (=> res!67649 e!92458)))

(assert (=> b!141896 (= res!67649 (= (h!2342 (toList!871 lt!73593)) (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))

(declare-fun b!141897 () Bool)

(assert (=> b!141897 (= e!92458 (contains!914 (t!6314 (toList!871 lt!73593)) (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))

(assert (= (and d!44815 res!67648) b!141896))

(assert (= (and b!141896 (not res!67649)) b!141897))

(declare-fun m!170259 () Bool)

(assert (=> d!44815 m!170259))

(declare-fun m!170261 () Bool)

(assert (=> d!44815 m!170261))

(declare-fun m!170263 () Bool)

(assert (=> b!141897 m!170263))

(assert (=> b!140599 d!44815))

(declare-fun d!44817 () Bool)

(declare-fun e!92461 () Bool)

(assert (=> d!44817 e!92461))

(declare-fun res!67650 () Bool)

(assert (=> d!44817 (=> res!67650 e!92461)))

(declare-fun lt!74276 () Bool)

(assert (=> d!44817 (= res!67650 (not lt!74276))))

(declare-fun lt!74275 () Bool)

(assert (=> d!44817 (= lt!74276 lt!74275)))

(declare-fun lt!74274 () Unit!4393)

(declare-fun e!92460 () Unit!4393)

(assert (=> d!44817 (= lt!74274 e!92460)))

(declare-fun c!26773 () Bool)

(assert (=> d!44817 (= c!26773 lt!74275)))

(assert (=> d!44817 (= lt!74275 (containsKey!178 (toList!871 lt!73492) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (=> d!44817 (= (contains!910 lt!73492 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!74276)))

(declare-fun b!141898 () Bool)

(declare-fun lt!74273 () Unit!4393)

(assert (=> b!141898 (= e!92460 lt!74273)))

(assert (=> b!141898 (= lt!74273 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73492) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (=> b!141898 (isDefined!128 (getValueByKey!174 (toList!871 lt!73492) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141899 () Bool)

(declare-fun Unit!4478 () Unit!4393)

(assert (=> b!141899 (= e!92460 Unit!4478)))

(declare-fun b!141900 () Bool)

(assert (=> b!141900 (= e!92461 (isDefined!128 (getValueByKey!174 (toList!871 lt!73492) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44817 c!26773) b!141898))

(assert (= (and d!44817 (not c!26773)) b!141899))

(assert (= (and d!44817 (not res!67650)) b!141900))

(declare-fun m!170265 () Bool)

(assert (=> d!44817 m!170265))

(declare-fun m!170267 () Bool)

(assert (=> b!141898 m!170267))

(assert (=> b!141898 m!167451))

(assert (=> b!141898 m!167451))

(declare-fun m!170269 () Bool)

(assert (=> b!141898 m!170269))

(assert (=> b!141900 m!167451))

(assert (=> b!141900 m!167451))

(assert (=> b!141900 m!170269))

(assert (=> d!43759 d!44817))

(declare-fun b!141904 () Bool)

(declare-fun e!92463 () Option!180)

(assert (=> b!141904 (= e!92463 None!178)))

(declare-fun b!141902 () Bool)

(declare-fun e!92462 () Option!180)

(assert (=> b!141902 (= e!92462 e!92463)))

(declare-fun c!26775 () Bool)

(assert (=> b!141902 (= c!26775 (and ((_ is Cons!1735) lt!73493) (not (= (_1!1339 (h!2342 lt!73493)) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!141901 () Bool)

(assert (=> b!141901 (= e!92462 (Some!179 (_2!1339 (h!2342 lt!73493))))))

(declare-fun d!44819 () Bool)

(declare-fun c!26774 () Bool)

(assert (=> d!44819 (= c!26774 (and ((_ is Cons!1735) lt!73493) (= (_1!1339 (h!2342 lt!73493)) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44819 (= (getValueByKey!174 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) e!92462)))

(declare-fun b!141903 () Bool)

(assert (=> b!141903 (= e!92463 (getValueByKey!174 (t!6314 lt!73493) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44819 c!26774) b!141901))

(assert (= (and d!44819 (not c!26774)) b!141902))

(assert (= (and b!141902 c!26775) b!141903))

(assert (= (and b!141902 (not c!26775)) b!141904))

(declare-fun m!170271 () Bool)

(assert (=> b!141903 m!170271))

(assert (=> d!43759 d!44819))

(declare-fun d!44821 () Bool)

(assert (=> d!44821 (= (getValueByKey!174 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74277 () Unit!4393)

(assert (=> d!44821 (= lt!74277 (choose!872 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92464 () Bool)

(assert (=> d!44821 e!92464))

(declare-fun res!67651 () Bool)

(assert (=> d!44821 (=> (not res!67651) (not e!92464))))

(assert (=> d!44821 (= res!67651 (isStrictlySorted!320 lt!73493))))

(assert (=> d!44821 (= (lemmaContainsTupThenGetReturnValue!91 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!74277)))

(declare-fun b!141905 () Bool)

(declare-fun res!67652 () Bool)

(assert (=> b!141905 (=> (not res!67652) (not e!92464))))

(assert (=> b!141905 (= res!67652 (containsKey!178 lt!73493 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun b!141906 () Bool)

(assert (=> b!141906 (= e!92464 (contains!914 lt!73493 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44821 res!67651) b!141905))

(assert (= (and b!141905 res!67652) b!141906))

(assert (=> d!44821 m!167445))

(declare-fun m!170273 () Bool)

(assert (=> d!44821 m!170273))

(declare-fun m!170275 () Bool)

(assert (=> d!44821 m!170275))

(declare-fun m!170277 () Bool)

(assert (=> b!141905 m!170277))

(declare-fun m!170279 () Bool)

(assert (=> b!141906 m!170279))

(assert (=> d!43759 d!44821))

(declare-fun b!141907 () Bool)

(declare-fun e!92467 () List!1739)

(declare-fun call!15703 () List!1739)

(assert (=> b!141907 (= e!92467 call!15703)))

(declare-fun b!141908 () Bool)

(declare-fun e!92465 () List!1739)

(declare-fun call!15702 () List!1739)

(assert (=> b!141908 (= e!92465 call!15702)))

(declare-fun b!141909 () Bool)

(declare-fun lt!74278 () List!1739)

(declare-fun e!92468 () Bool)

(assert (=> b!141909 (= e!92468 (contains!914 lt!74278 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92466 () List!1739)

(declare-fun c!26779 () Bool)

(declare-fun bm!15698 () Bool)

(assert (=> bm!15698 (= call!15703 ($colon$colon!93 e!92466 (ite c!26779 (h!2342 (toList!871 lt!73184)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26776 () Bool)

(assert (=> bm!15698 (= c!26776 c!26779)))

(declare-fun bm!15699 () Bool)

(declare-fun call!15701 () List!1739)

(assert (=> bm!15699 (= call!15702 call!15701)))

(declare-fun b!141910 () Bool)

(declare-fun res!67653 () Bool)

(assert (=> b!141910 (=> (not res!67653) (not e!92468))))

(assert (=> b!141910 (= res!67653 (containsKey!178 lt!74278 (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun d!44823 () Bool)

(assert (=> d!44823 e!92468))

(declare-fun res!67654 () Bool)

(assert (=> d!44823 (=> (not res!67654) (not e!92468))))

(assert (=> d!44823 (= res!67654 (isStrictlySorted!320 lt!74278))))

(assert (=> d!44823 (= lt!74278 e!92467)))

(assert (=> d!44823 (= c!26779 (and ((_ is Cons!1735) (toList!871 lt!73184)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73184))) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(assert (=> d!44823 (isStrictlySorted!320 (toList!871 lt!73184))))

(assert (=> d!44823 (= (insertStrictlySorted!94 (toList!871 lt!73184) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!74278)))

(declare-fun c!26778 () Bool)

(declare-fun b!141911 () Bool)

(declare-fun c!26777 () Bool)

(assert (=> b!141911 (= e!92466 (ite c!26778 (t!6314 (toList!871 lt!73184)) (ite c!26777 (Cons!1735 (h!2342 (toList!871 lt!73184)) (t!6314 (toList!871 lt!73184))) Nil!1736)))))

(declare-fun b!141912 () Bool)

(assert (=> b!141912 (= c!26777 (and ((_ is Cons!1735) (toList!871 lt!73184)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73184))) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92469 () List!1739)

(assert (=> b!141912 (= e!92469 e!92465)))

(declare-fun b!141913 () Bool)

(assert (=> b!141913 (= e!92465 call!15702)))

(declare-fun b!141914 () Bool)

(assert (=> b!141914 (= e!92466 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73184)) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(declare-fun bm!15700 () Bool)

(assert (=> bm!15700 (= call!15701 call!15703)))

(declare-fun b!141915 () Bool)

(assert (=> b!141915 (= e!92467 e!92469)))

(assert (=> b!141915 (= c!26778 (and ((_ is Cons!1735) (toList!871 lt!73184)) (= (_1!1339 (h!2342 (toList!871 lt!73184))) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(declare-fun b!141916 () Bool)

(assert (=> b!141916 (= e!92469 call!15701)))

(assert (= (and d!44823 c!26779) b!141907))

(assert (= (and d!44823 (not c!26779)) b!141915))

(assert (= (and b!141915 c!26778) b!141916))

(assert (= (and b!141915 (not c!26778)) b!141912))

(assert (= (and b!141912 c!26777) b!141908))

(assert (= (and b!141912 (not c!26777)) b!141913))

(assert (= (or b!141908 b!141913) bm!15699))

(assert (= (or b!141916 bm!15699) bm!15700))

(assert (= (or b!141907 bm!15700) bm!15698))

(assert (= (and bm!15698 c!26776) b!141914))

(assert (= (and bm!15698 (not c!26776)) b!141911))

(assert (= (and d!44823 res!67654) b!141910))

(assert (= (and b!141910 res!67653) b!141909))

(declare-fun m!170281 () Bool)

(assert (=> b!141910 m!170281))

(declare-fun m!170283 () Bool)

(assert (=> b!141914 m!170283))

(declare-fun m!170285 () Bool)

(assert (=> bm!15698 m!170285))

(declare-fun m!170287 () Bool)

(assert (=> b!141909 m!170287))

(declare-fun m!170289 () Bool)

(assert (=> d!44823 m!170289))

(declare-fun m!170291 () Bool)

(assert (=> d!44823 m!170291))

(assert (=> d!43759 d!44823))

(declare-fun b!141920 () Bool)

(declare-fun e!92471 () Option!180)

(assert (=> b!141920 (= e!92471 None!178)))

(declare-fun b!141918 () Bool)

(declare-fun e!92470 () Option!180)

(assert (=> b!141918 (= e!92470 e!92471)))

(declare-fun c!26781 () Bool)

(assert (=> b!141918 (= c!26781 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141917 () Bool)

(assert (=> b!141917 (= e!92470 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73003))))))))

(declare-fun d!44825 () Bool)

(declare-fun c!26780 () Bool)

(assert (=> d!44825 (= c!26780 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44825 (= (getValueByKey!174 (t!6314 (toList!871 lt!73003)) #b1000000000000000000000000000000000000000000000000000000000000000) e!92470)))

(declare-fun b!141919 () Bool)

(assert (=> b!141919 (= e!92471 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73003))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44825 c!26780) b!141917))

(assert (= (and d!44825 (not c!26780)) b!141918))

(assert (= (and b!141918 c!26781) b!141919))

(assert (= (and b!141918 (not c!26781)) b!141920))

(declare-fun m!170293 () Bool)

(assert (=> b!141919 m!170293))

(assert (=> b!140501 d!44825))

(declare-fun d!44827 () Bool)

(declare-fun res!67655 () Bool)

(declare-fun e!92472 () Bool)

(assert (=> d!44827 (=> res!67655 e!92472)))

(assert (=> d!44827 (= res!67655 (and ((_ is Cons!1735) lt!73792) (= (_1!1339 (h!2342 lt!73792)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44827 (= (containsKey!178 lt!73792 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92472)))

(declare-fun b!141921 () Bool)

(declare-fun e!92473 () Bool)

(assert (=> b!141921 (= e!92472 e!92473)))

(declare-fun res!67656 () Bool)

(assert (=> b!141921 (=> (not res!67656) (not e!92473))))

(assert (=> b!141921 (= res!67656 (and (or (not ((_ is Cons!1735) lt!73792)) (bvsle (_1!1339 (h!2342 lt!73792)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1735) lt!73792) (bvslt (_1!1339 (h!2342 lt!73792)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141922 () Bool)

(assert (=> b!141922 (= e!92473 (containsKey!178 (t!6314 lt!73792) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44827 (not res!67655)) b!141921))

(assert (= (and b!141921 res!67656) b!141922))

(declare-fun m!170295 () Bool)

(assert (=> b!141922 m!170295))

(assert (=> b!140930 d!44827))

(declare-fun d!44829 () Bool)

(assert (=> d!44829 (= (apply!120 lt!73697 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73697) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5952 () Bool)

(assert (= bs!5952 d!44829))

(declare-fun m!170297 () Bool)

(assert (=> bs!5952 m!170297))

(assert (=> bs!5952 m!170297))

(declare-fun m!170299 () Bool)

(assert (=> bs!5952 m!170299))

(assert (=> b!140819 d!44829))

(declare-fun d!44831 () Bool)

(declare-fun e!92474 () Bool)

(assert (=> d!44831 e!92474))

(declare-fun res!67658 () Bool)

(assert (=> d!44831 (=> (not res!67658) (not e!92474))))

(declare-fun lt!74281 () ListLongMap!1711)

(assert (=> d!44831 (= res!67658 (contains!910 lt!74281 (_1!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74282 () List!1739)

(assert (=> d!44831 (= lt!74281 (ListLongMap!1712 lt!74282))))

(declare-fun lt!74279 () Unit!4393)

(declare-fun lt!74280 () Unit!4393)

(assert (=> d!44831 (= lt!74279 lt!74280)))

(assert (=> d!44831 (= (getValueByKey!174 lt!74282 (_1!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44831 (= lt!74280 (lemmaContainsTupThenGetReturnValue!91 lt!74282 (_1!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44831 (= lt!74282 (insertStrictlySorted!94 (toList!871 (ite c!26477 call!15628 (ite c!26480 call!15631 call!15626))) (_1!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44831 (= (+!167 (ite c!26477 call!15628 (ite c!26480 call!15631 call!15626)) (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74281)))

(declare-fun b!141923 () Bool)

(declare-fun res!67657 () Bool)

(assert (=> b!141923 (=> (not res!67657) (not e!92474))))

(assert (=> b!141923 (= res!67657 (= (getValueByKey!174 (toList!871 lt!74281) (_1!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!141924 () Bool)

(assert (=> b!141924 (= e!92474 (contains!914 (toList!871 lt!74281) (ite (or c!26477 c!26480) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44831 res!67658) b!141923))

(assert (= (and b!141923 res!67657) b!141924))

(declare-fun m!170301 () Bool)

(assert (=> d!44831 m!170301))

(declare-fun m!170303 () Bool)

(assert (=> d!44831 m!170303))

(declare-fun m!170305 () Bool)

(assert (=> d!44831 m!170305))

(declare-fun m!170307 () Bool)

(assert (=> d!44831 m!170307))

(declare-fun m!170309 () Bool)

(assert (=> b!141923 m!170309))

(declare-fun m!170311 () Bool)

(assert (=> b!141924 m!170311))

(assert (=> bm!15628 d!44831))

(declare-fun d!44833 () Bool)

(assert (=> d!44833 (= (apply!120 lt!73764 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73764) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5953 () Bool)

(assert (= bs!5953 d!44833))

(declare-fun m!170313 () Bool)

(assert (=> bs!5953 m!170313))

(assert (=> bs!5953 m!170313))

(declare-fun m!170315 () Bool)

(assert (=> bs!5953 m!170315))

(assert (=> b!140901 d!44833))

(declare-fun b!141925 () Bool)

(assert (=> b!141925 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!141925 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2576 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))))))))

(declare-fun lt!74289 () ListLongMap!1711)

(declare-fun e!92475 () Bool)

(assert (=> b!141925 (= e!92475 (= (apply!120 lt!74289 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141926 () Bool)

(declare-fun e!92477 () Bool)

(assert (=> b!141926 (= e!92477 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141926 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!141927 () Bool)

(declare-fun res!67660 () Bool)

(declare-fun e!92478 () Bool)

(assert (=> b!141927 (=> (not res!67660) (not e!92478))))

(assert (=> b!141927 (= res!67660 (not (contains!910 lt!74289 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141928 () Bool)

(declare-fun e!92481 () Bool)

(assert (=> b!141928 (= e!92481 e!92475)))

(assert (=> b!141928 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67662 () Bool)

(assert (=> b!141928 (= res!67662 (contains!910 lt!74289 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141928 (=> (not res!67662) (not e!92475))))

(declare-fun b!141929 () Bool)

(declare-fun lt!74285 () Unit!4393)

(declare-fun lt!74283 () Unit!4393)

(assert (=> b!141929 (= lt!74285 lt!74283)))

(declare-fun lt!74288 () (_ BitVec 64))

(declare-fun lt!74286 () ListLongMap!1711)

(declare-fun lt!74287 () V!3553)

(declare-fun lt!74284 () (_ BitVec 64))

(assert (=> b!141929 (not (contains!910 (+!167 lt!74286 (tuple2!2657 lt!74288 lt!74287)) lt!74284))))

(assert (=> b!141929 (= lt!74283 (addStillNotContains!65 lt!74286 lt!74288 lt!74287 lt!74284))))

(assert (=> b!141929 (= lt!74284 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141929 (= lt!74287 (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141929 (= lt!74288 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!15704 () ListLongMap!1711)

(assert (=> b!141929 (= lt!74286 call!15704)))

(declare-fun e!92479 () ListLongMap!1711)

(assert (=> b!141929 (= e!92479 (+!167 call!15704 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141930 () Bool)

(assert (=> b!141930 (= e!92478 e!92481)))

(declare-fun c!26785 () Bool)

(assert (=> b!141930 (= c!26785 e!92477)))

(declare-fun res!67659 () Bool)

(assert (=> b!141930 (=> (not res!67659) (not e!92477))))

(assert (=> b!141930 (= res!67659 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15701 () Bool)

(assert (=> bm!15701 (= call!15704 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!141931 () Bool)

(assert (=> b!141931 (= e!92479 call!15704)))

(declare-fun b!141932 () Bool)

(declare-fun e!92476 () Bool)

(assert (=> b!141932 (= e!92481 e!92476)))

(declare-fun c!26783 () Bool)

(assert (=> b!141932 (= c!26783 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!44835 () Bool)

(assert (=> d!44835 e!92478))

(declare-fun res!67661 () Bool)

(assert (=> d!44835 (=> (not res!67661) (not e!92478))))

(assert (=> d!44835 (= res!67661 (not (contains!910 lt!74289 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92480 () ListLongMap!1711)

(assert (=> d!44835 (= lt!74289 e!92480)))

(declare-fun c!26784 () Bool)

(assert (=> d!44835 (= c!26784 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!44835 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44835 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)) lt!74289)))

(declare-fun b!141933 () Bool)

(assert (=> b!141933 (= e!92480 (ListLongMap!1712 Nil!1736))))

(declare-fun b!141934 () Bool)

(assert (=> b!141934 (= e!92476 (isEmpty!421 lt!74289))))

(declare-fun b!141935 () Bool)

(assert (=> b!141935 (= e!92480 e!92479)))

(declare-fun c!26782 () Bool)

(assert (=> b!141935 (= c!26782 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141936 () Bool)

(assert (=> b!141936 (= e!92476 (= lt!74289 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!44835 c!26784) b!141933))

(assert (= (and d!44835 (not c!26784)) b!141935))

(assert (= (and b!141935 c!26782) b!141929))

(assert (= (and b!141935 (not c!26782)) b!141931))

(assert (= (or b!141929 b!141931) bm!15701))

(assert (= (and d!44835 res!67661) b!141927))

(assert (= (and b!141927 res!67660) b!141930))

(assert (= (and b!141930 res!67659) b!141926))

(assert (= (and b!141930 c!26785) b!141928))

(assert (= (and b!141930 (not c!26785)) b!141932))

(assert (= (and b!141928 res!67662) b!141925))

(assert (= (and b!141932 c!26783) b!141936))

(assert (= (and b!141932 (not c!26783)) b!141934))

(declare-fun b_lambda!6357 () Bool)

(assert (=> (not b_lambda!6357) (not b!141925)))

(assert (=> b!141925 t!6328))

(declare-fun b_and!8865 () Bool)

(assert (= b_and!8861 (and (=> t!6328 result!4187) b_and!8865)))

(assert (=> b!141925 t!6330))

(declare-fun b_and!8867 () Bool)

(assert (= b_and!8863 (and (=> t!6330 result!4189) b_and!8867)))

(declare-fun b_lambda!6359 () Bool)

(assert (=> (not b_lambda!6359) (not b!141929)))

(assert (=> b!141929 t!6328))

(declare-fun b_and!8869 () Bool)

(assert (= b_and!8865 (and (=> t!6328 result!4187) b_and!8869)))

(assert (=> b!141929 t!6330))

(declare-fun b_and!8871 () Bool)

(assert (= b_and!8867 (and (=> t!6330 result!4189) b_and!8871)))

(declare-fun m!170317 () Bool)

(assert (=> d!44835 m!170317))

(assert (=> d!44835 m!166687))

(declare-fun m!170319 () Bool)

(assert (=> bm!15701 m!170319))

(declare-fun m!170321 () Bool)

(assert (=> b!141927 m!170321))

(assert (=> b!141926 m!167925))

(assert (=> b!141926 m!167925))

(assert (=> b!141926 m!167927))

(declare-fun m!170323 () Bool)

(assert (=> b!141925 m!170323))

(assert (=> b!141925 m!166703))

(declare-fun m!170325 () Bool)

(assert (=> b!141925 m!170325))

(assert (=> b!141925 m!167925))

(assert (=> b!141925 m!166703))

(assert (=> b!141925 m!170323))

(assert (=> b!141925 m!167925))

(declare-fun m!170327 () Bool)

(assert (=> b!141925 m!170327))

(assert (=> b!141928 m!167925))

(assert (=> b!141928 m!167925))

(declare-fun m!170329 () Bool)

(assert (=> b!141928 m!170329))

(declare-fun m!170331 () Bool)

(assert (=> b!141934 m!170331))

(assert (=> b!141935 m!167925))

(assert (=> b!141935 m!167925))

(assert (=> b!141935 m!167927))

(assert (=> b!141929 m!170323))

(assert (=> b!141929 m!166703))

(assert (=> b!141929 m!170325))

(declare-fun m!170333 () Bool)

(assert (=> b!141929 m!170333))

(assert (=> b!141929 m!166703))

(declare-fun m!170335 () Bool)

(assert (=> b!141929 m!170335))

(assert (=> b!141929 m!170323))

(declare-fun m!170337 () Bool)

(assert (=> b!141929 m!170337))

(assert (=> b!141929 m!167925))

(assert (=> b!141929 m!170333))

(declare-fun m!170339 () Bool)

(assert (=> b!141929 m!170339))

(assert (=> b!141936 m!170319))

(assert (=> b!140611 d!44835))

(assert (=> b!141064 d!44137))

(declare-fun b!141940 () Bool)

(declare-fun e!92483 () Option!180)

(assert (=> b!141940 (= e!92483 None!178)))

(declare-fun b!141938 () Bool)

(declare-fun e!92482 () Option!180)

(assert (=> b!141938 (= e!92482 e!92483)))

(declare-fun c!26787 () Bool)

(assert (=> b!141938 (= c!26787 (and ((_ is Cons!1735) (toList!871 lt!73421)) (not (= (_1!1339 (h!2342 (toList!871 lt!73421))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!141937 () Bool)

(assert (=> b!141937 (= e!92482 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73421)))))))

(declare-fun c!26786 () Bool)

(declare-fun d!44837 () Bool)

(assert (=> d!44837 (= c!26786 (and ((_ is Cons!1735) (toList!871 lt!73421)) (= (_1!1339 (h!2342 (toList!871 lt!73421))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44837 (= (getValueByKey!174 (toList!871 lt!73421) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92482)))

(declare-fun b!141939 () Bool)

(assert (=> b!141939 (= e!92483 (getValueByKey!174 (t!6314 (toList!871 lt!73421)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!44837 c!26786) b!141937))

(assert (= (and d!44837 (not c!26786)) b!141938))

(assert (= (and b!141938 c!26787) b!141939))

(assert (= (and b!141938 (not c!26787)) b!141940))

(declare-fun m!170341 () Bool)

(assert (=> b!141939 m!170341))

(assert (=> b!140356 d!44837))

(assert (=> b!141045 d!44387))

(declare-fun d!44839 () Bool)

(assert (=> d!44839 (= (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190)) (not (isEmpty!422 (getValueByKey!174 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))))

(declare-fun bs!5954 () Bool)

(assert (= bs!5954 d!44839))

(assert (=> bs!5954 m!167383))

(declare-fun m!170343 () Bool)

(assert (=> bs!5954 m!170343))

(assert (=> b!140429 d!44839))

(declare-fun b!141944 () Bool)

(declare-fun e!92485 () Option!180)

(assert (=> b!141944 (= e!92485 None!178)))

(declare-fun b!141942 () Bool)

(declare-fun e!92484 () Option!180)

(assert (=> b!141942 (= e!92484 e!92485)))

(declare-fun c!26789 () Bool)

(assert (=> b!141942 (= c!26789 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))) lt!73190))))))

(declare-fun b!141941 () Bool)

(assert (=> b!141941 (= e!92484 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))))

(declare-fun c!26788 () Bool)

(declare-fun d!44841 () Bool)

(assert (=> d!44841 (= c!26788 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))) lt!73190)))))

(assert (=> d!44841 (= (getValueByKey!174 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190) e!92484)))

(declare-fun b!141943 () Bool)

(assert (=> b!141943 (= e!92485 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))) lt!73190))))

(assert (= (and d!44841 c!26788) b!141941))

(assert (= (and d!44841 (not c!26788)) b!141942))

(assert (= (and b!141942 c!26789) b!141943))

(assert (= (and b!141942 (not c!26789)) b!141944))

(declare-fun m!170345 () Bool)

(assert (=> b!141943 m!170345))

(assert (=> b!140429 d!44841))

(declare-fun d!44843 () Bool)

(assert (=> d!44843 (= ($colon$colon!93 e!91741 (ite c!26438 (h!2342 (toList!871 e!91273)) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1735 (ite c!26438 (h!2342 (toList!871 e!91273)) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!91741))))

(assert (=> bm!15602 d!44843))

(declare-fun d!44845 () Bool)

(assert (=> d!44845 (= (isEmpty!423 (toList!871 lt!73266)) ((_ is Nil!1736) (toList!871 lt!73266)))))

(assert (=> d!44191 d!44845))

(declare-fun d!44847 () Bool)

(assert (=> d!44847 (= (validMask!0 (mask!7278 (_2!1340 lt!73099))) (and (or (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000000000111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000000001111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000000011111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000000111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000001111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000011111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000000111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000001111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000011111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000000111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000001111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000011111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000000111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000001111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000011111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000000111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000001111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000011111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000000111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000001111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000011111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000000111111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000001111111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000011111111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00000111111111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00001111111111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00011111111111111111111111111111) (= (mask!7278 (_2!1340 lt!73099)) #b00111111111111111111111111111111)) (bvsle (mask!7278 (_2!1340 lt!73099)) #b00111111111111111111111111111111)))))

(assert (=> d!44035 d!44847))

(declare-fun d!44849 () Bool)

(assert (=> d!44849 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!73180)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!73180)))))

(assert (=> d!43745 d!44849))

(declare-fun b!141948 () Bool)

(declare-fun e!92487 () Option!180)

(assert (=> b!141948 (= e!92487 None!178)))

(declare-fun b!141946 () Bool)

(declare-fun e!92486 () Option!180)

(assert (=> b!141946 (= e!92486 e!92487)))

(declare-fun c!26791 () Bool)

(assert (=> b!141946 (= c!26791 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))) lt!73180))))))

(declare-fun b!141945 () Bool)

(assert (=> b!141945 (= e!92486 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))))

(declare-fun d!44851 () Bool)

(declare-fun c!26790 () Bool)

(assert (=> d!44851 (= c!26790 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))) lt!73180)))))

(assert (=> d!44851 (= (getValueByKey!174 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!73180) e!92486)))

(declare-fun b!141947 () Bool)

(assert (=> b!141947 (= e!92487 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))) lt!73180))))

(assert (= (and d!44851 c!26790) b!141945))

(assert (= (and d!44851 (not c!26790)) b!141946))

(assert (= (and b!141946 c!26791) b!141947))

(assert (= (and b!141946 (not c!26791)) b!141948))

(declare-fun m!170347 () Bool)

(assert (=> b!141947 m!170347))

(assert (=> d!43745 d!44851))

(declare-fun d!44853 () Bool)

(assert (=> d!44853 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun bs!5955 () Bool)

(assert (= bs!5955 d!44853))

(assert (=> bs!5955 m!166765))

(declare-fun m!170349 () Bool)

(assert (=> bs!5955 m!170349))

(assert (=> b!140997 d!44853))

(assert (=> b!140997 d!44211))

(declare-fun d!44855 () Bool)

(declare-fun e!92489 () Bool)

(assert (=> d!44855 e!92489))

(declare-fun res!67663 () Bool)

(assert (=> d!44855 (=> res!67663 e!92489)))

(declare-fun lt!74293 () Bool)

(assert (=> d!44855 (= res!67663 (not lt!74293))))

(declare-fun lt!74292 () Bool)

(assert (=> d!44855 (= lt!74293 lt!74292)))

(declare-fun lt!74291 () Unit!4393)

(declare-fun e!92488 () Unit!4393)

(assert (=> d!44855 (= lt!74291 e!92488)))

(declare-fun c!26792 () Bool)

(assert (=> d!44855 (= c!26792 lt!74292)))

(assert (=> d!44855 (= lt!74292 (containsKey!178 (toList!871 lt!73850) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44855 (= (contains!910 lt!73850 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74293)))

(declare-fun b!141949 () Bool)

(declare-fun lt!74290 () Unit!4393)

(assert (=> b!141949 (= e!92488 lt!74290)))

(assert (=> b!141949 (= lt!74290 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73850) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141949 (isDefined!128 (getValueByKey!174 (toList!871 lt!73850) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141950 () Bool)

(declare-fun Unit!4479 () Unit!4393)

(assert (=> b!141950 (= e!92488 Unit!4479)))

(declare-fun b!141951 () Bool)

(assert (=> b!141951 (= e!92489 (isDefined!128 (getValueByKey!174 (toList!871 lt!73850) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44855 c!26792) b!141949))

(assert (= (and d!44855 (not c!26792)) b!141950))

(assert (= (and d!44855 (not res!67663)) b!141951))

(declare-fun m!170351 () Bool)

(assert (=> d!44855 m!170351))

(declare-fun m!170353 () Bool)

(assert (=> b!141949 m!170353))

(declare-fun m!170355 () Bool)

(assert (=> b!141949 m!170355))

(assert (=> b!141949 m!170355))

(declare-fun m!170357 () Bool)

(assert (=> b!141949 m!170357))

(assert (=> b!141951 m!170355))

(assert (=> b!141951 m!170355))

(assert (=> b!141951 m!170357))

(assert (=> bm!15641 d!44855))

(declare-fun d!44857 () Bool)

(assert (=> d!44857 (= (apply!120 lt!73508 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1528 (getValueByKey!174 (toList!871 lt!73508) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!5956 () Bool)

(assert (= bs!5956 d!44857))

(assert (=> bs!5956 m!166979))

(assert (=> bs!5956 m!168989))

(assert (=> bs!5956 m!168989))

(declare-fun m!170359 () Bool)

(assert (=> bs!5956 m!170359))

(assert (=> b!140452 d!44857))

(assert (=> b!140452 d!44443))

(declare-fun d!44859 () Bool)

(assert (=> d!44859 (= (apply!120 lt!73880 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73880) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5957 () Bool)

(assert (= bs!5957 d!44859))

(declare-fun m!170361 () Bool)

(assert (=> bs!5957 m!170361))

(assert (=> bs!5957 m!170361))

(declare-fun m!170363 () Bool)

(assert (=> bs!5957 m!170363))

(assert (=> b!141068 d!44859))

(declare-fun b!141955 () Bool)

(declare-fun e!92491 () Option!180)

(assert (=> b!141955 (= e!92491 None!178)))

(declare-fun b!141953 () Bool)

(declare-fun e!92490 () Option!180)

(assert (=> b!141953 (= e!92490 e!92491)))

(declare-fun c!26794 () Bool)

(assert (=> b!141953 (= c!26794 (and ((_ is Cons!1735) (toList!871 lt!73588)) (not (= (_1!1339 (h!2342 (toList!871 lt!73588))) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))))

(declare-fun b!141952 () Bool)

(assert (=> b!141952 (= e!92490 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73588)))))))

(declare-fun d!44861 () Bool)

(declare-fun c!26793 () Bool)

(assert (=> d!44861 (= c!26793 (and ((_ is Cons!1735) (toList!871 lt!73588)) (= (_1!1339 (h!2342 (toList!871 lt!73588))) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(assert (=> d!44861 (= (getValueByKey!174 (toList!871 lt!73588) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) e!92490)))

(declare-fun b!141954 () Bool)

(assert (=> b!141954 (= e!92491 (getValueByKey!174 (t!6314 (toList!871 lt!73588)) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (= (and d!44861 c!26793) b!141952))

(assert (= (and d!44861 (not c!26793)) b!141953))

(assert (= (and b!141953 c!26794) b!141954))

(assert (= (and b!141953 (not c!26794)) b!141955))

(declare-fun m!170365 () Bool)

(assert (=> b!141954 m!170365))

(assert (=> b!140595 d!44861))

(declare-fun d!44863 () Bool)

(declare-fun res!67664 () Bool)

(declare-fun e!92492 () Bool)

(assert (=> d!44863 (=> res!67664 e!92492)))

(assert (=> d!44863 (= res!67664 (and ((_ is Cons!1735) (toList!871 lt!73128)) (= (_1!1339 (h!2342 (toList!871 lt!73128))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44863 (= (containsKey!178 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000) e!92492)))

(declare-fun b!141956 () Bool)

(declare-fun e!92493 () Bool)

(assert (=> b!141956 (= e!92492 e!92493)))

(declare-fun res!67665 () Bool)

(assert (=> b!141956 (=> (not res!67665) (not e!92493))))

(assert (=> b!141956 (= res!67665 (and (or (not ((_ is Cons!1735) (toList!871 lt!73128))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73128))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73128)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73128))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141957 () Bool)

(assert (=> b!141957 (= e!92493 (containsKey!178 (t!6314 (toList!871 lt!73128)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44863 (not res!67664)) b!141956))

(assert (= (and b!141956 res!67665) b!141957))

(declare-fun m!170367 () Bool)

(assert (=> b!141957 m!170367))

(assert (=> d!43819 d!44863))

(declare-fun b!141961 () Bool)

(declare-fun e!92495 () Option!180)

(assert (=> b!141961 (= e!92495 None!178)))

(declare-fun b!141959 () Bool)

(declare-fun e!92494 () Option!180)

(assert (=> b!141959 (= e!92494 e!92495)))

(declare-fun c!26796 () Bool)

(assert (=> b!141959 (= c!26796 (and ((_ is Cons!1735) (toList!871 lt!73635)) (not (= (_1!1339 (h!2342 (toList!871 lt!73635))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!141958 () Bool)

(assert (=> b!141958 (= e!92494 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73635)))))))

(declare-fun d!44865 () Bool)

(declare-fun c!26795 () Bool)

(assert (=> d!44865 (= c!26795 (and ((_ is Cons!1735) (toList!871 lt!73635)) (= (_1!1339 (h!2342 (toList!871 lt!73635))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!44865 (= (getValueByKey!174 (toList!871 lt!73635) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92494)))

(declare-fun b!141960 () Bool)

(assert (=> b!141960 (= e!92495 (getValueByKey!174 (t!6314 (toList!871 lt!73635)) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44865 c!26795) b!141958))

(assert (= (and d!44865 (not c!26795)) b!141959))

(assert (= (and b!141959 c!26796) b!141960))

(assert (= (and b!141959 (not c!26796)) b!141961))

(declare-fun m!170369 () Bool)

(assert (=> b!141960 m!170369))

(assert (=> b!140678 d!44865))

(declare-fun d!44867 () Bool)

(assert (=> d!44867 (= (isEmpty!422 (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))) (not ((_ is Some!179) (getValueByKey!174 (toList!871 call!15492) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))))

(assert (=> d!43941 d!44867))

(declare-fun b!141965 () Bool)

(declare-fun e!92497 () Option!180)

(assert (=> b!141965 (= e!92497 None!178)))

(declare-fun b!141963 () Bool)

(declare-fun e!92496 () Option!180)

(assert (=> b!141963 (= e!92496 e!92497)))

(declare-fun c!26798 () Bool)

(assert (=> b!141963 (= c!26798 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73011))))))

(declare-fun b!141962 () Bool)

(assert (=> b!141962 (= e!92496 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))))

(declare-fun d!44869 () Bool)

(declare-fun c!26797 () Bool)

(assert (=> d!44869 (= c!26797 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73011)))))

(assert (=> d!44869 (= (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73011) e!92496)))

(declare-fun b!141964 () Bool)

(assert (=> b!141964 (= e!92497 (getValueByKey!174 (t!6314 (t!6314 (toList!871 (+!167 lt!73016 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73011))))

(assert (= (and d!44869 c!26797) b!141962))

(assert (= (and d!44869 (not c!26797)) b!141963))

(assert (= (and b!141963 c!26798) b!141964))

(assert (= (and b!141963 (not c!26798)) b!141965))

(declare-fun m!170371 () Bool)

(assert (=> b!141964 m!170371))

(assert (=> b!140575 d!44869))

(declare-fun b!141969 () Bool)

(declare-fun e!92499 () Option!180)

(assert (=> b!141969 (= e!92499 None!178)))

(declare-fun b!141967 () Bool)

(declare-fun e!92498 () Option!180)

(assert (=> b!141967 (= e!92498 e!92499)))

(declare-fun c!26800 () Bool)

(assert (=> b!141967 (= c!26800 (and ((_ is Cons!1735) (toList!871 lt!73828)) (not (= (_1!1339 (h!2342 (toList!871 lt!73828))) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!141966 () Bool)

(assert (=> b!141966 (= e!92498 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73828)))))))

(declare-fun c!26799 () Bool)

(declare-fun d!44871 () Bool)

(assert (=> d!44871 (= c!26799 (and ((_ is Cons!1735) (toList!871 lt!73828)) (= (_1!1339 (h!2342 (toList!871 lt!73828))) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!44871 (= (getValueByKey!174 (toList!871 lt!73828) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92498)))

(declare-fun b!141968 () Bool)

(assert (=> b!141968 (= e!92499 (getValueByKey!174 (t!6314 (toList!871 lt!73828)) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!44871 c!26799) b!141966))

(assert (= (and d!44871 (not c!26799)) b!141967))

(assert (= (and b!141967 c!26800) b!141968))

(assert (= (and b!141967 (not c!26800)) b!141969))

(declare-fun m!170373 () Bool)

(assert (=> b!141968 m!170373))

(assert (=> b!140979 d!44871))

(declare-fun d!44873 () Bool)

(declare-fun e!92501 () Bool)

(assert (=> d!44873 e!92501))

(declare-fun res!67666 () Bool)

(assert (=> d!44873 (=> res!67666 e!92501)))

(declare-fun lt!74297 () Bool)

(assert (=> d!44873 (= res!67666 (not lt!74297))))

(declare-fun lt!74296 () Bool)

(assert (=> d!44873 (= lt!74297 lt!74296)))

(declare-fun lt!74295 () Unit!4393)

(declare-fun e!92500 () Unit!4393)

(assert (=> d!44873 (= lt!74295 e!92500)))

(declare-fun c!26801 () Bool)

(assert (=> d!44873 (= c!26801 lt!74296)))

(assert (=> d!44873 (= lt!74296 (containsKey!178 (toList!871 lt!73482) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (=> d!44873 (= (contains!910 lt!73482 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!74297)))

(declare-fun b!141970 () Bool)

(declare-fun lt!74294 () Unit!4393)

(assert (=> b!141970 (= e!92500 lt!74294)))

(assert (=> b!141970 (= lt!74294 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73482) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (=> b!141970 (isDefined!128 (getValueByKey!174 (toList!871 lt!73482) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun b!141971 () Bool)

(declare-fun Unit!4480 () Unit!4393)

(assert (=> b!141971 (= e!92500 Unit!4480)))

(declare-fun b!141972 () Bool)

(assert (=> b!141972 (= e!92501 (isDefined!128 (getValueByKey!174 (toList!871 lt!73482) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(assert (= (and d!44873 c!26801) b!141970))

(assert (= (and d!44873 (not c!26801)) b!141971))

(assert (= (and d!44873 (not res!67666)) b!141972))

(declare-fun m!170375 () Bool)

(assert (=> d!44873 m!170375))

(declare-fun m!170377 () Bool)

(assert (=> b!141970 m!170377))

(assert (=> b!141970 m!167415))

(assert (=> b!141970 m!167415))

(declare-fun m!170379 () Bool)

(assert (=> b!141970 m!170379))

(assert (=> b!141972 m!167415))

(assert (=> b!141972 m!167415))

(assert (=> b!141972 m!170379))

(assert (=> d!43749 d!44873))

(declare-fun b!141976 () Bool)

(declare-fun e!92503 () Option!180)

(assert (=> b!141976 (= e!92503 None!178)))

(declare-fun b!141974 () Bool)

(declare-fun e!92502 () Option!180)

(assert (=> b!141974 (= e!92502 e!92503)))

(declare-fun c!26803 () Bool)

(assert (=> b!141974 (= c!26803 (and ((_ is Cons!1735) lt!73483) (not (= (_1!1339 (h!2342 lt!73483)) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))))

(declare-fun b!141973 () Bool)

(assert (=> b!141973 (= e!92502 (Some!179 (_2!1339 (h!2342 lt!73483))))))

(declare-fun d!44875 () Bool)

(declare-fun c!26802 () Bool)

(assert (=> d!44875 (= c!26802 (and ((_ is Cons!1735) lt!73483) (= (_1!1339 (h!2342 lt!73483)) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(assert (=> d!44875 (= (getValueByKey!174 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) e!92502)))

(declare-fun b!141975 () Bool)

(assert (=> b!141975 (= e!92503 (getValueByKey!174 (t!6314 lt!73483) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(assert (= (and d!44875 c!26802) b!141973))

(assert (= (and d!44875 (not c!26802)) b!141974))

(assert (= (and b!141974 c!26803) b!141975))

(assert (= (and b!141974 (not c!26803)) b!141976))

(declare-fun m!170381 () Bool)

(assert (=> b!141975 m!170381))

(assert (=> d!43749 d!44875))

(declare-fun d!44877 () Bool)

(assert (=> d!44877 (= (getValueByKey!174 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun lt!74298 () Unit!4393)

(assert (=> d!44877 (= lt!74298 (choose!872 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun e!92504 () Bool)

(assert (=> d!44877 e!92504))

(declare-fun res!67667 () Bool)

(assert (=> d!44877 (=> (not res!67667) (not e!92504))))

(assert (=> d!44877 (= res!67667 (isStrictlySorted!320 lt!73483))))

(assert (=> d!44877 (= (lemmaContainsTupThenGetReturnValue!91 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!74298)))

(declare-fun b!141977 () Bool)

(declare-fun res!67668 () Bool)

(assert (=> b!141977 (=> (not res!67668) (not e!92504))))

(assert (=> b!141977 (= res!67668 (containsKey!178 lt!73483 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun b!141978 () Bool)

(assert (=> b!141978 (= e!92504 (contains!914 lt!73483 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(assert (= (and d!44877 res!67667) b!141977))

(assert (= (and b!141977 res!67668) b!141978))

(assert (=> d!44877 m!167409))

(declare-fun m!170383 () Bool)

(assert (=> d!44877 m!170383))

(declare-fun m!170385 () Bool)

(assert (=> d!44877 m!170385))

(declare-fun m!170387 () Bool)

(assert (=> b!141977 m!170387))

(declare-fun m!170389 () Bool)

(assert (=> b!141978 m!170389))

(assert (=> d!43749 d!44877))

(declare-fun b!141979 () Bool)

(declare-fun e!92507 () List!1739)

(declare-fun call!15707 () List!1739)

(assert (=> b!141979 (= e!92507 call!15707)))

(declare-fun b!141980 () Bool)

(declare-fun e!92505 () List!1739)

(declare-fun call!15706 () List!1739)

(assert (=> b!141980 (= e!92505 call!15706)))

(declare-fun e!92508 () Bool)

(declare-fun b!141981 () Bool)

(declare-fun lt!74299 () List!1739)

(assert (=> b!141981 (= e!92508 (contains!914 lt!74299 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(declare-fun e!92506 () List!1739)

(declare-fun bm!15702 () Bool)

(declare-fun c!26807 () Bool)

(assert (=> bm!15702 (= call!15707 ($colon$colon!93 e!92506 (ite c!26807 (h!2342 (toList!871 lt!73185)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))))

(declare-fun c!26804 () Bool)

(assert (=> bm!15702 (= c!26804 c!26807)))

(declare-fun bm!15703 () Bool)

(declare-fun call!15705 () List!1739)

(assert (=> bm!15703 (= call!15706 call!15705)))

(declare-fun b!141982 () Bool)

(declare-fun res!67669 () Bool)

(assert (=> b!141982 (=> (not res!67669) (not e!92508))))

(assert (=> b!141982 (= res!67669 (containsKey!178 lt!74299 (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun d!44879 () Bool)

(assert (=> d!44879 e!92508))

(declare-fun res!67670 () Bool)

(assert (=> d!44879 (=> (not res!67670) (not e!92508))))

(assert (=> d!44879 (= res!67670 (isStrictlySorted!320 lt!74299))))

(assert (=> d!44879 (= lt!74299 e!92507)))

(assert (=> d!44879 (= c!26807 (and ((_ is Cons!1735) (toList!871 lt!73185)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73185))) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(assert (=> d!44879 (isStrictlySorted!320 (toList!871 lt!73185))))

(assert (=> d!44879 (= (insertStrictlySorted!94 (toList!871 lt!73185) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))) lt!74299)))

(declare-fun c!26805 () Bool)

(declare-fun b!141983 () Bool)

(declare-fun c!26806 () Bool)

(assert (=> b!141983 (= e!92506 (ite c!26806 (t!6314 (toList!871 lt!73185)) (ite c!26805 (Cons!1735 (h!2342 (toList!871 lt!73185)) (t!6314 (toList!871 lt!73185))) Nil!1736)))))

(declare-fun b!141984 () Bool)

(assert (=> b!141984 (= c!26805 (and ((_ is Cons!1735) (toList!871 lt!73185)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73185))) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(declare-fun e!92509 () List!1739)

(assert (=> b!141984 (= e!92509 e!92505)))

(declare-fun b!141985 () Bool)

(assert (=> b!141985 (= e!92505 call!15706)))

(declare-fun b!141986 () Bool)

(assert (=> b!141986 (= e!92506 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73185)) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16)))))))

(declare-fun bm!15704 () Bool)

(assert (=> bm!15704 (= call!15705 call!15707)))

(declare-fun b!141987 () Bool)

(assert (=> b!141987 (= e!92507 e!92509)))

(assert (=> b!141987 (= c!26806 (and ((_ is Cons!1735) (toList!871 lt!73185)) (= (_1!1339 (h!2342 (toList!871 lt!73185))) (_1!1339 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))))

(declare-fun b!141988 () Bool)

(assert (=> b!141988 (= e!92509 call!15705)))

(assert (= (and d!44879 c!26807) b!141979))

(assert (= (and d!44879 (not c!26807)) b!141987))

(assert (= (and b!141987 c!26806) b!141988))

(assert (= (and b!141987 (not c!26806)) b!141984))

(assert (= (and b!141984 c!26805) b!141980))

(assert (= (and b!141984 (not c!26805)) b!141985))

(assert (= (or b!141980 b!141985) bm!15703))

(assert (= (or b!141988 bm!15703) bm!15704))

(assert (= (or b!141979 bm!15704) bm!15702))

(assert (= (and bm!15702 c!26804) b!141986))

(assert (= (and bm!15702 (not c!26804)) b!141983))

(assert (= (and d!44879 res!67670) b!141982))

(assert (= (and b!141982 res!67669) b!141981))

(declare-fun m!170391 () Bool)

(assert (=> b!141982 m!170391))

(declare-fun m!170393 () Bool)

(assert (=> b!141986 m!170393))

(declare-fun m!170395 () Bool)

(assert (=> bm!15702 m!170395))

(declare-fun m!170397 () Bool)

(assert (=> b!141981 m!170397))

(declare-fun m!170399 () Bool)

(assert (=> d!44879 m!170399))

(declare-fun m!170401 () Bool)

(assert (=> d!44879 m!170401))

(assert (=> d!43749 d!44879))

(declare-fun lt!74300 () Bool)

(declare-fun d!44881 () Bool)

(assert (=> d!44881 (= lt!74300 (select (content!138 (t!6314 (toList!871 lt!73394))) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!92511 () Bool)

(assert (=> d!44881 (= lt!74300 e!92511)))

(declare-fun res!67671 () Bool)

(assert (=> d!44881 (=> (not res!67671) (not e!92511))))

(assert (=> d!44881 (= res!67671 ((_ is Cons!1735) (t!6314 (toList!871 lt!73394))))))

(assert (=> d!44881 (= (contains!914 (t!6314 (toList!871 lt!73394)) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!74300)))

(declare-fun b!141989 () Bool)

(declare-fun e!92510 () Bool)

(assert (=> b!141989 (= e!92511 e!92510)))

(declare-fun res!67672 () Bool)

(assert (=> b!141989 (=> res!67672 e!92510)))

(assert (=> b!141989 (= res!67672 (= (h!2342 (t!6314 (toList!871 lt!73394))) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!141990 () Bool)

(assert (=> b!141990 (= e!92510 (contains!914 (t!6314 (t!6314 (toList!871 lt!73394))) (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!44881 res!67671) b!141989))

(assert (= (and b!141989 (not res!67672)) b!141990))

(declare-fun m!170403 () Bool)

(assert (=> d!44881 m!170403))

(declare-fun m!170405 () Bool)

(assert (=> d!44881 m!170405))

(declare-fun m!170407 () Bool)

(assert (=> b!141990 m!170407))

(assert (=> b!140686 d!44881))

(declare-fun d!44883 () Bool)

(declare-fun res!67673 () Bool)

(declare-fun e!92512 () Bool)

(assert (=> d!44883 (=> res!67673 e!92512)))

(assert (=> d!44883 (= res!67673 (and ((_ is Cons!1735) lt!73801) (= (_1!1339 (h!2342 lt!73801)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44883 (= (containsKey!178 lt!73801 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92512)))

(declare-fun b!141991 () Bool)

(declare-fun e!92513 () Bool)

(assert (=> b!141991 (= e!92512 e!92513)))

(declare-fun res!67674 () Bool)

(assert (=> b!141991 (=> (not res!67674) (not e!92513))))

(assert (=> b!141991 (= res!67674 (and (or (not ((_ is Cons!1735) lt!73801)) (bvsle (_1!1339 (h!2342 lt!73801)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73801) (bvslt (_1!1339 (h!2342 lt!73801)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!141992 () Bool)

(assert (=> b!141992 (= e!92513 (containsKey!178 (t!6314 lt!73801) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44883 (not res!67673)) b!141991))

(assert (= (and b!141991 res!67674) b!141992))

(declare-fun m!170409 () Bool)

(assert (=> b!141992 m!170409))

(assert (=> b!140953 d!44883))

(declare-fun d!44885 () Bool)

(assert (=> d!44885 (isDefined!128 (getValueByKey!174 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!74301 () Unit!4393)

(assert (=> d!44885 (= lt!74301 (choose!871 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!92514 () Bool)

(assert (=> d!44885 e!92514))

(declare-fun res!67675 () Bool)

(assert (=> d!44885 (=> (not res!67675) (not e!92514))))

(assert (=> d!44885 (= res!67675 (isStrictlySorted!320 (toList!871 lt!73410)))))

(assert (=> d!44885 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74301)))

(declare-fun b!141993 () Bool)

(assert (=> b!141993 (= e!92514 (containsKey!178 (toList!871 lt!73410) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44885 res!67675) b!141993))

(assert (=> d!44885 m!167203))

(assert (=> d!44885 m!167203))

(assert (=> d!44885 m!168819))

(declare-fun m!170411 () Bool)

(assert (=> d!44885 m!170411))

(declare-fun m!170413 () Bool)

(assert (=> d!44885 m!170413))

(assert (=> b!141993 m!168815))

(assert (=> b!141121 d!44885))

(assert (=> b!141121 d!44715))

(assert (=> b!141121 d!44109))

(declare-fun b!141994 () Bool)

(declare-fun e!92515 () Bool)

(declare-fun e!92517 () Bool)

(assert (=> b!141994 (= e!92515 e!92517)))

(declare-fun c!26808 () Bool)

(assert (=> b!141994 (= c!26808 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141995 () Bool)

(declare-fun e!92518 () Bool)

(assert (=> b!141995 (= e!92518 e!92515)))

(declare-fun res!67676 () Bool)

(assert (=> b!141995 (=> (not res!67676) (not e!92515))))

(declare-fun e!92516 () Bool)

(assert (=> b!141995 (= res!67676 (not e!92516))))

(declare-fun res!67677 () Bool)

(assert (=> b!141995 (=> (not res!67677) (not e!92516))))

(assert (=> b!141995 (= res!67677 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141996 () Bool)

(declare-fun call!15708 () Bool)

(assert (=> b!141996 (= e!92517 call!15708)))

(declare-fun d!44887 () Bool)

(declare-fun res!67678 () Bool)

(assert (=> d!44887 (=> res!67678 e!92518)))

(assert (=> d!44887 (= res!67678 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!44887 (= (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26418 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))) e!92518)))

(declare-fun b!141997 () Bool)

(assert (=> b!141997 (= e!92516 (contains!913 (ite c!26418 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141998 () Bool)

(assert (=> b!141998 (= e!92517 call!15708)))

(declare-fun bm!15705 () Bool)

(assert (=> bm!15705 (= call!15708 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26808 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26418 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))) (ite c!26418 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))))))))

(assert (= (and d!44887 (not res!67678)) b!141995))

(assert (= (and b!141995 res!67677) b!141997))

(assert (= (and b!141995 res!67676) b!141994))

(assert (= (and b!141994 c!26808) b!141996))

(assert (= (and b!141994 (not c!26808)) b!141998))

(assert (= (or b!141996 b!141998) bm!15705))

(declare-fun m!170415 () Bool)

(assert (=> b!141994 m!170415))

(assert (=> b!141994 m!170415))

(declare-fun m!170417 () Bool)

(assert (=> b!141994 m!170417))

(assert (=> b!141995 m!170415))

(assert (=> b!141995 m!170415))

(assert (=> b!141995 m!170417))

(assert (=> b!141997 m!170415))

(assert (=> b!141997 m!170415))

(declare-fun m!170419 () Bool)

(assert (=> b!141997 m!170419))

(assert (=> bm!15705 m!170415))

(declare-fun m!170421 () Bool)

(assert (=> bm!15705 m!170421))

(assert (=> bm!15593 d!44887))

(declare-fun d!44889 () Bool)

(assert (=> d!44889 (= (get!1527 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140639 d!44889))

(assert (=> bm!15620 d!44309))

(assert (=> b!140816 d!43699))

(assert (=> bm!15627 d!44357))

(declare-fun b!141999 () Bool)

(declare-fun e!92520 () SeekEntryResult!282)

(assert (=> b!141999 (= e!92520 Undefined!282)))

(declare-fun b!142000 () Bool)

(declare-fun c!26809 () Bool)

(declare-fun lt!74302 () (_ BitVec 64))

(assert (=> b!142000 (= c!26809 (= lt!74302 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92521 () SeekEntryResult!282)

(declare-fun e!92519 () SeekEntryResult!282)

(assert (=> b!142000 (= e!92521 e!92519)))

(declare-fun b!142001 () Bool)

(assert (=> b!142001 (= e!92520 e!92521)))

(declare-fun c!26811 () Bool)

(assert (=> b!142001 (= c!26811 (= lt!74302 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(declare-fun b!142002 () Bool)

(assert (=> b!142002 (= e!92521 (Found!282 (nextIndex!0 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16))))))

(declare-fun lt!74303 () SeekEntryResult!282)

(declare-fun d!44891 () Bool)

(assert (=> d!44891 (and (or ((_ is Undefined!282) lt!74303) (not ((_ is Found!282) lt!74303)) (and (bvsge (index!3292 lt!74303) #b00000000000000000000000000000000) (bvslt (index!3292 lt!74303) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!74303) ((_ is Found!282) lt!74303) (not ((_ is MissingVacant!282) lt!74303)) (not (= (index!3294 lt!74303) (index!3293 lt!73228))) (and (bvsge (index!3294 lt!74303) #b00000000000000000000000000000000) (bvslt (index!3294 lt!74303) (size!2575 (_keys!4697 newMap!16))))) (or ((_ is Undefined!282) lt!74303) (ite ((_ is Found!282) lt!74303) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!74303)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (and ((_ is MissingVacant!282) lt!74303) (= (index!3294 lt!74303) (index!3293 lt!73228)) (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3294 lt!74303)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!44891 (= lt!74303 e!92520)))

(declare-fun c!26810 () Bool)

(assert (=> d!44891 (= c!26810 (bvsge (bvadd (x!16138 lt!73228) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!44891 (= lt!74302 (select (arr!2302 (_keys!4697 newMap!16)) (nextIndex!0 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16))))))

(assert (=> d!44891 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44891 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!16138 lt!73228) #b00000000000000000000000000000001) (nextIndex!0 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16)) (index!3293 lt!73228) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!74303)))

(declare-fun b!142003 () Bool)

(assert (=> b!142003 (= e!92519 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16138 lt!73228) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16)) (bvadd (x!16138 lt!73228) #b00000000000000000000000000000001) (mask!7278 newMap!16)) (index!3293 lt!73228) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!142004 () Bool)

(assert (=> b!142004 (= e!92519 (MissingVacant!282 (index!3293 lt!73228)))))

(assert (= (and d!44891 c!26810) b!141999))

(assert (= (and d!44891 (not c!26810)) b!142001))

(assert (= (and b!142001 c!26811) b!142002))

(assert (= (and b!142001 (not c!26811)) b!142000))

(assert (= (and b!142000 c!26809) b!142004))

(assert (= (and b!142000 (not c!26809)) b!142003))

(declare-fun m!170423 () Bool)

(assert (=> d!44891 m!170423))

(declare-fun m!170425 () Bool)

(assert (=> d!44891 m!170425))

(assert (=> d!44891 m!167271))

(declare-fun m!170427 () Bool)

(assert (=> d!44891 m!170427))

(assert (=> d!44891 m!166687))

(assert (=> b!142003 m!167271))

(declare-fun m!170429 () Bool)

(assert (=> b!142003 m!170429))

(assert (=> b!142003 m!170429))

(assert (=> b!142003 m!166407))

(declare-fun m!170431 () Bool)

(assert (=> b!142003 m!170431))

(assert (=> b!140382 d!44891))

(declare-fun d!44893 () Bool)

(declare-fun lt!74304 () (_ BitVec 32))

(assert (=> d!44893 (and (bvsge lt!74304 #b00000000000000000000000000000000) (bvslt lt!74304 (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!44893 (= lt!74304 (choose!52 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16)))))

(assert (=> d!44893 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!44893 (= (nextIndex!0 (index!3293 lt!73228) (x!16138 lt!73228) (mask!7278 newMap!16)) lt!74304)))

(declare-fun bs!5958 () Bool)

(assert (= bs!5958 d!44893))

(declare-fun m!170433 () Bool)

(assert (=> bs!5958 m!170433))

(assert (=> bs!5958 m!166687))

(assert (=> b!140382 d!44893))

(declare-fun d!44895 () Bool)

(assert (not d!44895))

(assert (=> b!141019 d!44895))

(declare-fun lt!74305 () Bool)

(declare-fun d!44897 () Bool)

(assert (=> d!44897 (= lt!74305 (select (content!138 lt!73792) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92523 () Bool)

(assert (=> d!44897 (= lt!74305 e!92523)))

(declare-fun res!67679 () Bool)

(assert (=> d!44897 (=> (not res!67679) (not e!92523))))

(assert (=> d!44897 (= res!67679 ((_ is Cons!1735) lt!73792))))

(assert (=> d!44897 (= (contains!914 lt!73792 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74305)))

(declare-fun b!142005 () Bool)

(declare-fun e!92522 () Bool)

(assert (=> b!142005 (= e!92523 e!92522)))

(declare-fun res!67680 () Bool)

(assert (=> b!142005 (=> res!67680 e!92522)))

(assert (=> b!142005 (= res!67680 (= (h!2342 lt!73792) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142006 () Bool)

(assert (=> b!142006 (= e!92522 (contains!914 (t!6314 lt!73792) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44897 res!67679) b!142005))

(assert (= (and b!142005 (not res!67680)) b!142006))

(declare-fun m!170435 () Bool)

(assert (=> d!44897 m!170435))

(declare-fun m!170437 () Bool)

(assert (=> d!44897 m!170437))

(declare-fun m!170439 () Bool)

(assert (=> b!142006 m!170439))

(assert (=> b!140929 d!44897))

(declare-fun d!44899 () Bool)

(declare-fun e!92525 () Bool)

(assert (=> d!44899 e!92525))

(declare-fun res!67681 () Bool)

(assert (=> d!44899 (=> res!67681 e!92525)))

(declare-fun lt!74309 () Bool)

(assert (=> d!44899 (= res!67681 (not lt!74309))))

(declare-fun lt!74308 () Bool)

(assert (=> d!44899 (= lt!74309 lt!74308)))

(declare-fun lt!74307 () Unit!4393)

(declare-fun e!92524 () Unit!4393)

(assert (=> d!44899 (= lt!74307 e!92524)))

(declare-fun c!26812 () Bool)

(assert (=> d!44899 (= c!26812 lt!74308)))

(assert (=> d!44899 (= lt!74308 (containsKey!178 (toList!871 lt!73615) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44899 (= (contains!910 lt!73615 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74309)))

(declare-fun b!142007 () Bool)

(declare-fun lt!74306 () Unit!4393)

(assert (=> b!142007 (= e!92524 lt!74306)))

(assert (=> b!142007 (= lt!74306 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73615) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> b!142007 (isDefined!128 (getValueByKey!174 (toList!871 lt!73615) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!142008 () Bool)

(declare-fun Unit!4481 () Unit!4393)

(assert (=> b!142008 (= e!92524 Unit!4481)))

(declare-fun b!142009 () Bool)

(assert (=> b!142009 (= e!92525 (isDefined!128 (getValueByKey!174 (toList!871 lt!73615) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44899 c!26812) b!142007))

(assert (= (and d!44899 (not c!26812)) b!142008))

(assert (= (and d!44899 (not res!67681)) b!142009))

(declare-fun m!170441 () Bool)

(assert (=> d!44899 m!170441))

(declare-fun m!170443 () Bool)

(assert (=> b!142007 m!170443))

(assert (=> b!142007 m!167861))

(assert (=> b!142007 m!167861))

(declare-fun m!170445 () Bool)

(assert (=> b!142007 m!170445))

(assert (=> b!142009 m!167861))

(assert (=> b!142009 m!167861))

(assert (=> b!142009 m!170445))

(assert (=> d!43881 d!44899))

(declare-fun b!142013 () Bool)

(declare-fun e!92527 () Option!180)

(assert (=> b!142013 (= e!92527 None!178)))

(declare-fun b!142011 () Bool)

(declare-fun e!92526 () Option!180)

(assert (=> b!142011 (= e!92526 e!92527)))

(declare-fun c!26814 () Bool)

(assert (=> b!142011 (= c!26814 (and ((_ is Cons!1735) lt!73616) (not (= (_1!1339 (h!2342 lt!73616)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142010 () Bool)

(assert (=> b!142010 (= e!92526 (Some!179 (_2!1339 (h!2342 lt!73616))))))

(declare-fun d!44901 () Bool)

(declare-fun c!26813 () Bool)

(assert (=> d!44901 (= c!26813 (and ((_ is Cons!1735) lt!73616) (= (_1!1339 (h!2342 lt!73616)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44901 (= (getValueByKey!174 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!92526)))

(declare-fun b!142012 () Bool)

(assert (=> b!142012 (= e!92527 (getValueByKey!174 (t!6314 lt!73616) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!44901 c!26813) b!142010))

(assert (= (and d!44901 (not c!26813)) b!142011))

(assert (= (and b!142011 c!26814) b!142012))

(assert (= (and b!142011 (not c!26814)) b!142013))

(declare-fun m!170447 () Bool)

(assert (=> b!142012 m!170447))

(assert (=> d!43881 d!44901))

(declare-fun d!44903 () Bool)

(assert (=> d!44903 (= (getValueByKey!174 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74310 () Unit!4393)

(assert (=> d!44903 (= lt!74310 (choose!872 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92528 () Bool)

(assert (=> d!44903 e!92528))

(declare-fun res!67682 () Bool)

(assert (=> d!44903 (=> (not res!67682) (not e!92528))))

(assert (=> d!44903 (= res!67682 (isStrictlySorted!320 lt!73616))))

(assert (=> d!44903 (= (lemmaContainsTupThenGetReturnValue!91 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74310)))

(declare-fun b!142014 () Bool)

(declare-fun res!67683 () Bool)

(assert (=> b!142014 (=> (not res!67683) (not e!92528))))

(assert (=> b!142014 (= res!67683 (containsKey!178 lt!73616 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!142015 () Bool)

(assert (=> b!142015 (= e!92528 (contains!914 lt!73616 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!44903 res!67682) b!142014))

(assert (= (and b!142014 res!67683) b!142015))

(assert (=> d!44903 m!167855))

(declare-fun m!170449 () Bool)

(assert (=> d!44903 m!170449))

(declare-fun m!170451 () Bool)

(assert (=> d!44903 m!170451))

(declare-fun m!170453 () Bool)

(assert (=> b!142014 m!170453))

(declare-fun m!170455 () Bool)

(assert (=> b!142015 m!170455))

(assert (=> d!43881 d!44903))

(declare-fun b!142016 () Bool)

(declare-fun e!92531 () List!1739)

(declare-fun call!15711 () List!1739)

(assert (=> b!142016 (= e!92531 call!15711)))

(declare-fun b!142017 () Bool)

(declare-fun e!92529 () List!1739)

(declare-fun call!15710 () List!1739)

(assert (=> b!142017 (= e!92529 call!15710)))

(declare-fun b!142018 () Bool)

(declare-fun e!92532 () Bool)

(declare-fun lt!74311 () List!1739)

(assert (=> b!142018 (= e!92532 (contains!914 lt!74311 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92530 () List!1739)

(declare-fun c!26818 () Bool)

(declare-fun bm!15706 () Bool)

(assert (=> bm!15706 (= call!15711 ($colon$colon!93 e!92530 (ite c!26818 (h!2342 (toList!871 call!15522)) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun c!26815 () Bool)

(assert (=> bm!15706 (= c!26815 c!26818)))

(declare-fun bm!15707 () Bool)

(declare-fun call!15709 () List!1739)

(assert (=> bm!15707 (= call!15710 call!15709)))

(declare-fun b!142019 () Bool)

(declare-fun res!67684 () Bool)

(assert (=> b!142019 (=> (not res!67684) (not e!92532))))

(assert (=> b!142019 (= res!67684 (containsKey!178 lt!74311 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun d!44905 () Bool)

(assert (=> d!44905 e!92532))

(declare-fun res!67685 () Bool)

(assert (=> d!44905 (=> (not res!67685) (not e!92532))))

(assert (=> d!44905 (= res!67685 (isStrictlySorted!320 lt!74311))))

(assert (=> d!44905 (= lt!74311 e!92531)))

(assert (=> d!44905 (= c!26818 (and ((_ is Cons!1735) (toList!871 call!15522)) (bvslt (_1!1339 (h!2342 (toList!871 call!15522))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!44905 (isStrictlySorted!320 (toList!871 call!15522))))

(assert (=> d!44905 (= (insertStrictlySorted!94 (toList!871 call!15522) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74311)))

(declare-fun c!26816 () Bool)

(declare-fun b!142020 () Bool)

(declare-fun c!26817 () Bool)

(assert (=> b!142020 (= e!92530 (ite c!26817 (t!6314 (toList!871 call!15522)) (ite c!26816 (Cons!1735 (h!2342 (toList!871 call!15522)) (t!6314 (toList!871 call!15522))) Nil!1736)))))

(declare-fun b!142021 () Bool)

(assert (=> b!142021 (= c!26816 (and ((_ is Cons!1735) (toList!871 call!15522)) (bvsgt (_1!1339 (h!2342 (toList!871 call!15522))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!92533 () List!1739)

(assert (=> b!142021 (= e!92533 e!92529)))

(declare-fun b!142022 () Bool)

(assert (=> b!142022 (= e!92529 call!15710)))

(declare-fun b!142023 () Bool)

(assert (=> b!142023 (= e!92530 (insertStrictlySorted!94 (t!6314 (toList!871 call!15522)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun bm!15708 () Bool)

(assert (=> bm!15708 (= call!15709 call!15711)))

(declare-fun b!142024 () Bool)

(assert (=> b!142024 (= e!92531 e!92533)))

(assert (=> b!142024 (= c!26817 (and ((_ is Cons!1735) (toList!871 call!15522)) (= (_1!1339 (h!2342 (toList!871 call!15522))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142025 () Bool)

(assert (=> b!142025 (= e!92533 call!15709)))

(assert (= (and d!44905 c!26818) b!142016))

(assert (= (and d!44905 (not c!26818)) b!142024))

(assert (= (and b!142024 c!26817) b!142025))

(assert (= (and b!142024 (not c!26817)) b!142021))

(assert (= (and b!142021 c!26816) b!142017))

(assert (= (and b!142021 (not c!26816)) b!142022))

(assert (= (or b!142017 b!142022) bm!15707))

(assert (= (or b!142025 bm!15707) bm!15708))

(assert (= (or b!142016 bm!15708) bm!15706))

(assert (= (and bm!15706 c!26815) b!142023))

(assert (= (and bm!15706 (not c!26815)) b!142020))

(assert (= (and d!44905 res!67685) b!142019))

(assert (= (and b!142019 res!67684) b!142018))

(declare-fun m!170457 () Bool)

(assert (=> b!142019 m!170457))

(declare-fun m!170459 () Bool)

(assert (=> b!142023 m!170459))

(declare-fun m!170461 () Bool)

(assert (=> bm!15706 m!170461))

(declare-fun m!170463 () Bool)

(assert (=> b!142018 m!170463))

(declare-fun m!170465 () Bool)

(assert (=> d!44905 m!170465))

(declare-fun m!170467 () Bool)

(assert (=> d!44905 m!170467))

(assert (=> d!43881 d!44905))

(assert (=> d!43717 d!43719))

(declare-fun b!142029 () Bool)

(declare-fun e!92535 () Option!180)

(assert (=> b!142029 (= e!92535 None!178)))

(declare-fun b!142027 () Bool)

(declare-fun e!92534 () Option!180)

(assert (=> b!142027 (= e!92534 e!92535)))

(declare-fun c!26820 () Bool)

(assert (=> b!142027 (= c!26820 (and ((_ is Cons!1735) (toList!871 lt!73823)) (not (= (_1!1339 (h!2342 (toList!871 lt!73823))) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!142026 () Bool)

(assert (=> b!142026 (= e!92534 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73823)))))))

(declare-fun c!26819 () Bool)

(declare-fun d!44907 () Bool)

(assert (=> d!44907 (= c!26819 (and ((_ is Cons!1735) (toList!871 lt!73823)) (= (_1!1339 (h!2342 (toList!871 lt!73823))) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!44907 (= (getValueByKey!174 (toList!871 lt!73823) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92534)))

(declare-fun b!142028 () Bool)

(assert (=> b!142028 (= e!92535 (getValueByKey!174 (t!6314 (toList!871 lt!73823)) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (= (and d!44907 c!26819) b!142026))

(assert (= (and d!44907 (not c!26819)) b!142027))

(assert (= (and b!142027 c!26820) b!142028))

(assert (= (and b!142027 (not c!26820)) b!142029))

(declare-fun m!170469 () Bool)

(assert (=> b!142028 m!170469))

(assert (=> b!140976 d!44907))

(declare-fun d!44909 () Bool)

(assert (=> d!44909 (= (apply!120 lt!73501 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73501) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5959 () Bool)

(assert (= bs!5959 d!44909))

(assert (=> bs!5959 m!166699))

(assert (=> bs!5959 m!170237))

(assert (=> bs!5959 m!170237))

(declare-fun m!170471 () Bool)

(assert (=> bs!5959 m!170471))

(assert (=> b!140440 d!44909))

(assert (=> b!140440 d!44041))

(assert (=> b!141080 d!44241))

(declare-fun d!44911 () Bool)

(declare-fun res!67686 () Bool)

(declare-fun e!92536 () Bool)

(assert (=> d!44911 (=> res!67686 e!92536)))

(assert (=> d!44911 (= res!67686 (and ((_ is Cons!1735) (toList!871 lt!73172)) (= (_1!1339 (h!2342 (toList!871 lt!73172))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44911 (= (containsKey!178 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) e!92536)))

(declare-fun b!142030 () Bool)

(declare-fun e!92537 () Bool)

(assert (=> b!142030 (= e!92536 e!92537)))

(declare-fun res!67687 () Bool)

(assert (=> b!142030 (=> (not res!67687) (not e!92537))))

(assert (=> b!142030 (= res!67687 (and (or (not ((_ is Cons!1735) (toList!871 lt!73172))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73172))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1735) (toList!871 lt!73172)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73172))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142031 () Bool)

(assert (=> b!142031 (= e!92537 (containsKey!178 (t!6314 (toList!871 lt!73172)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44911 (not res!67686)) b!142030))

(assert (= (and b!142030 res!67687) b!142031))

(assert (=> b!142031 m!166699))

(declare-fun m!170473 () Bool)

(assert (=> b!142031 m!170473))

(assert (=> d!44171 d!44911))

(assert (=> d!43715 d!43713))

(assert (=> d!43715 d!43601))

(assert (=> d!43715 d!43717))

(declare-fun d!44913 () Bool)

(declare-fun lt!74312 () Bool)

(assert (=> d!44913 (= lt!74312 (select (content!138 (toList!871 lt!73604)) (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))

(declare-fun e!92539 () Bool)

(assert (=> d!44913 (= lt!74312 e!92539)))

(declare-fun res!67688 () Bool)

(assert (=> d!44913 (=> (not res!67688) (not e!92539))))

(assert (=> d!44913 (= res!67688 ((_ is Cons!1735) (toList!871 lt!73604)))))

(assert (=> d!44913 (= (contains!914 (toList!871 lt!73604) (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) lt!74312)))

(declare-fun b!142032 () Bool)

(declare-fun e!92538 () Bool)

(assert (=> b!142032 (= e!92539 e!92538)))

(declare-fun res!67689 () Bool)

(assert (=> b!142032 (=> res!67689 e!92538)))

(assert (=> b!142032 (= res!67689 (= (h!2342 (toList!871 lt!73604)) (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))

(declare-fun b!142033 () Bool)

(assert (=> b!142033 (= e!92538 (contains!914 (t!6314 (toList!871 lt!73604)) (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))

(assert (= (and d!44913 res!67688) b!142032))

(assert (= (and b!142032 (not res!67689)) b!142033))

(declare-fun m!170475 () Bool)

(assert (=> d!44913 m!170475))

(declare-fun m!170477 () Bool)

(assert (=> d!44913 m!170477))

(declare-fun m!170479 () Bool)

(assert (=> b!142033 m!170479))

(assert (=> b!140613 d!44913))

(declare-fun d!44915 () Bool)

(declare-fun e!92541 () Bool)

(assert (=> d!44915 e!92541))

(declare-fun res!67690 () Bool)

(assert (=> d!44915 (=> res!67690 e!92541)))

(declare-fun lt!74316 () Bool)

(assert (=> d!44915 (= res!67690 (not lt!74316))))

(declare-fun lt!74315 () Bool)

(assert (=> d!44915 (= lt!74316 lt!74315)))

(declare-fun lt!74314 () Unit!4393)

(declare-fun e!92540 () Unit!4393)

(assert (=> d!44915 (= lt!74314 e!92540)))

(declare-fun c!26821 () Bool)

(assert (=> d!44915 (= c!26821 lt!74315)))

(assert (=> d!44915 (= lt!74315 (containsKey!178 (toList!871 lt!73880) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44915 (= (contains!910 lt!73880 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74316)))

(declare-fun b!142034 () Bool)

(declare-fun lt!74313 () Unit!4393)

(assert (=> b!142034 (= e!92540 lt!74313)))

(assert (=> b!142034 (= lt!74313 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73880) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142034 (isDefined!128 (getValueByKey!174 (toList!871 lt!73880) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142035 () Bool)

(declare-fun Unit!4482 () Unit!4393)

(assert (=> b!142035 (= e!92540 Unit!4482)))

(declare-fun b!142036 () Bool)

(assert (=> b!142036 (= e!92541 (isDefined!128 (getValueByKey!174 (toList!871 lt!73880) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44915 c!26821) b!142034))

(assert (= (and d!44915 (not c!26821)) b!142035))

(assert (= (and d!44915 (not res!67690)) b!142036))

(declare-fun m!170481 () Bool)

(assert (=> d!44915 m!170481))

(declare-fun m!170483 () Bool)

(assert (=> b!142034 m!170483))

(declare-fun m!170485 () Bool)

(assert (=> b!142034 m!170485))

(assert (=> b!142034 m!170485))

(declare-fun m!170487 () Bool)

(assert (=> b!142034 m!170487))

(assert (=> b!142036 m!170485))

(assert (=> b!142036 m!170485))

(assert (=> b!142036 m!170487))

(assert (=> bm!15650 d!44915))

(declare-fun d!44917 () Bool)

(declare-fun e!92542 () Bool)

(assert (=> d!44917 e!92542))

(declare-fun res!67692 () Bool)

(assert (=> d!44917 (=> (not res!67692) (not e!92542))))

(declare-fun lt!74319 () ListLongMap!1711)

(assert (=> d!44917 (= res!67692 (contains!910 lt!74319 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74320 () List!1739)

(assert (=> d!44917 (= lt!74319 (ListLongMap!1712 lt!74320))))

(declare-fun lt!74317 () Unit!4393)

(declare-fun lt!74318 () Unit!4393)

(assert (=> d!44917 (= lt!74317 lt!74318)))

(assert (=> d!44917 (= (getValueByKey!174 lt!74320 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44917 (= lt!74318 (lemmaContainsTupThenGetReturnValue!91 lt!74320 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44917 (= lt!74320 (insertStrictlySorted!94 (toList!871 call!15599) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!44917 (= (+!167 call!15599 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74319)))

(declare-fun b!142037 () Bool)

(declare-fun res!67691 () Bool)

(assert (=> b!142037 (=> (not res!67691) (not e!92542))))

(assert (=> b!142037 (= res!67691 (= (getValueByKey!174 (toList!871 lt!74319) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142038 () Bool)

(assert (=> b!142038 (= e!92542 (contains!914 (toList!871 lt!74319) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!44917 res!67692) b!142037))

(assert (= (and b!142037 res!67691) b!142038))

(declare-fun m!170489 () Bool)

(assert (=> d!44917 m!170489))

(declare-fun m!170491 () Bool)

(assert (=> d!44917 m!170491))

(declare-fun m!170493 () Bool)

(assert (=> d!44917 m!170493))

(declare-fun m!170495 () Bool)

(assert (=> d!44917 m!170495))

(declare-fun m!170497 () Bool)

(assert (=> b!142037 m!170497))

(declare-fun m!170499 () Bool)

(assert (=> b!142038 m!170499))

(assert (=> b!140701 d!44917))

(declare-fun d!44919 () Bool)

(assert (=> d!44919 (isDefined!128 (getValueByKey!174 (toList!871 lt!73005) lt!73012))))

(declare-fun lt!74321 () Unit!4393)

(assert (=> d!44919 (= lt!74321 (choose!871 (toList!871 lt!73005) lt!73012))))

(declare-fun e!92543 () Bool)

(assert (=> d!44919 e!92543))

(declare-fun res!67693 () Bool)

(assert (=> d!44919 (=> (not res!67693) (not e!92543))))

(assert (=> d!44919 (= res!67693 (isStrictlySorted!320 (toList!871 lt!73005)))))

(assert (=> d!44919 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73005) lt!73012) lt!74321)))

(declare-fun b!142039 () Bool)

(assert (=> b!142039 (= e!92543 (containsKey!178 (toList!871 lt!73005) lt!73012))))

(assert (= (and d!44919 res!67693) b!142039))

(assert (=> d!44919 m!167179))

(assert (=> d!44919 m!167179))

(assert (=> d!44919 m!168153))

(declare-fun m!170501 () Bool)

(assert (=> d!44919 m!170501))

(assert (=> d!44919 m!167923))

(assert (=> b!142039 m!168149))

(assert (=> b!140808 d!44919))

(assert (=> b!140808 d!44779))

(assert (=> b!140808 d!44117))

(declare-fun d!44921 () Bool)

(assert (=> d!44921 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))

(declare-fun lt!74322 () Unit!4393)

(assert (=> d!44921 (= lt!74322 (choose!871 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))

(declare-fun e!92544 () Bool)

(assert (=> d!44921 e!92544))

(declare-fun res!67694 () Bool)

(assert (=> d!44921 (=> (not res!67694) (not e!92544))))

(assert (=> d!44921 (= res!67694 (isStrictlySorted!320 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!44921 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146) lt!74322)))

(declare-fun b!142040 () Bool)

(assert (=> b!142040 (= e!92544 (containsKey!178 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146))))

(assert (= (and d!44921 res!67694) b!142040))

(assert (=> d!44921 m!168493))

(assert (=> d!44921 m!168493))

(assert (=> d!44921 m!168495))

(declare-fun m!170503 () Bool)

(assert (=> d!44921 m!170503))

(declare-fun m!170505 () Bool)

(assert (=> d!44921 m!170505))

(assert (=> b!142040 m!168489))

(assert (=> b!140969 d!44921))

(assert (=> b!140969 d!44775))

(assert (=> b!140969 d!44777))

(declare-fun b!142044 () Bool)

(declare-fun e!92546 () Option!180)

(assert (=> b!142044 (= e!92546 None!178)))

(declare-fun b!142042 () Bool)

(declare-fun e!92545 () Option!180)

(assert (=> b!142042 (= e!92545 e!92546)))

(declare-fun c!26823 () Bool)

(assert (=> b!142042 (= c!26823 (and ((_ is Cons!1735) (t!6314 (toList!871 e!91274))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 e!91274)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))))

(declare-fun b!142041 () Bool)

(assert (=> b!142041 (= e!92545 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 e!91274))))))))

(declare-fun d!44923 () Bool)

(declare-fun c!26822 () Bool)

(assert (=> d!44923 (= c!26822 (and ((_ is Cons!1735) (t!6314 (toList!871 e!91274))) (= (_1!1339 (h!2342 (t!6314 (toList!871 e!91274)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!44923 (= (getValueByKey!174 (t!6314 (toList!871 e!91274)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92545)))

(declare-fun b!142043 () Bool)

(assert (=> b!142043 (= e!92546 (getValueByKey!174 (t!6314 (t!6314 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!44923 c!26822) b!142041))

(assert (= (and d!44923 (not c!26822)) b!142042))

(assert (= (and b!142042 c!26823) b!142043))

(assert (= (and b!142042 (not c!26823)) b!142044))

(assert (=> b!142043 m!166407))

(declare-fun m!170507 () Bool)

(assert (=> b!142043 m!170507))

(assert (=> b!140508 d!44923))

(assert (=> d!44059 d!44057))

(declare-fun d!44925 () Bool)

(assert (=> d!44925 (= (getValueByKey!174 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44925 true))

(declare-fun _$22!498 () Unit!4393)

(assert (=> d!44925 (= (choose!872 lt!73280 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!498)))

(declare-fun bs!5960 () Bool)

(assert (= bs!5960 d!44925))

(assert (=> bs!5960 m!167007))

(assert (=> d!44059 d!44925))

(declare-fun d!44927 () Bool)

(declare-fun res!67695 () Bool)

(declare-fun e!92547 () Bool)

(assert (=> d!44927 (=> res!67695 e!92547)))

(assert (=> d!44927 (= res!67695 (or ((_ is Nil!1736) lt!73280) ((_ is Nil!1736) (t!6314 lt!73280))))))

(assert (=> d!44927 (= (isStrictlySorted!320 lt!73280) e!92547)))

(declare-fun b!142045 () Bool)

(declare-fun e!92548 () Bool)

(assert (=> b!142045 (= e!92547 e!92548)))

(declare-fun res!67696 () Bool)

(assert (=> b!142045 (=> (not res!67696) (not e!92548))))

(assert (=> b!142045 (= res!67696 (bvslt (_1!1339 (h!2342 lt!73280)) (_1!1339 (h!2342 (t!6314 lt!73280)))))))

(declare-fun b!142046 () Bool)

(assert (=> b!142046 (= e!92548 (isStrictlySorted!320 (t!6314 lt!73280)))))

(assert (= (and d!44927 (not res!67695)) b!142045))

(assert (= (and b!142045 res!67696) b!142046))

(declare-fun m!170509 () Bool)

(assert (=> b!142046 m!170509))

(assert (=> d!44059 d!44927))

(declare-fun b!142050 () Bool)

(declare-fun e!92550 () Option!180)

(assert (=> b!142050 (= e!92550 None!178)))

(declare-fun b!142048 () Bool)

(declare-fun e!92549 () Option!180)

(assert (=> b!142048 (= e!92549 e!92550)))

(declare-fun c!26825 () Bool)

(assert (=> b!142048 (= c!26825 (and ((_ is Cons!1735) (t!6314 lt!73411)) (not (= (_1!1339 (h!2342 (t!6314 lt!73411))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142047 () Bool)

(assert (=> b!142047 (= e!92549 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73411)))))))

(declare-fun d!44929 () Bool)

(declare-fun c!26824 () Bool)

(assert (=> d!44929 (= c!26824 (and ((_ is Cons!1735) (t!6314 lt!73411)) (= (_1!1339 (h!2342 (t!6314 lt!73411))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44929 (= (getValueByKey!174 (t!6314 lt!73411) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92549)))

(declare-fun b!142049 () Bool)

(assert (=> b!142049 (= e!92550 (getValueByKey!174 (t!6314 (t!6314 lt!73411)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44929 c!26824) b!142047))

(assert (= (and d!44929 (not c!26824)) b!142048))

(assert (= (and b!142048 c!26825) b!142049))

(assert (= (and b!142048 (not c!26825)) b!142050))

(declare-fun m!170511 () Bool)

(assert (=> b!142049 m!170511))

(assert (=> b!141126 d!44929))

(declare-fun d!44931 () Bool)

(assert (=> d!44931 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(declare-fun lt!74323 () Unit!4393)

(assert (=> d!44931 (= lt!74323 (choose!871 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(declare-fun e!92551 () Bool)

(assert (=> d!44931 e!92551))

(declare-fun res!67697 () Bool)

(assert (=> d!44931 (=> (not res!67697) (not e!92551))))

(assert (=> d!44931 (= res!67697 (isStrictlySorted!320 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))

(assert (=> d!44931 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) lt!74323)))

(declare-fun b!142051 () Bool)

(assert (=> b!142051 (= e!92551 (containsKey!178 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!44931 res!67697) b!142051))

(assert (=> d!44931 m!166633))

(assert (=> d!44931 m!167969))

(assert (=> d!44931 m!167969))

(assert (=> d!44931 m!167971))

(assert (=> d!44931 m!166633))

(declare-fun m!170513 () Bool)

(assert (=> d!44931 m!170513))

(declare-fun m!170515 () Bool)

(assert (=> d!44931 m!170515))

(assert (=> b!142051 m!166633))

(assert (=> b!142051 m!167965))

(assert (=> b!140687 d!44931))

(assert (=> b!140687 d!44769))

(assert (=> b!140687 d!44771))

(declare-fun b!142054 () Bool)

(declare-fun res!67698 () Bool)

(declare-fun e!92552 () Bool)

(assert (=> b!142054 (=> (not res!67698) (not e!92552))))

(assert (=> b!142054 (= res!67698 (= (size!2581 (_2!1340 lt!73342)) (bvadd (_size!624 (_2!1340 lt!73342)) (bvsdiv (bvadd (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!142053 () Bool)

(declare-fun res!67701 () Bool)

(assert (=> b!142053 (=> (not res!67701) (not e!92552))))

(assert (=> b!142053 (= res!67701 (bvsge (size!2581 (_2!1340 lt!73342)) (_size!624 (_2!1340 lt!73342))))))

(declare-fun d!44933 () Bool)

(declare-fun res!67699 () Bool)

(assert (=> d!44933 (=> (not res!67699) (not e!92552))))

(assert (=> d!44933 (= res!67699 (validMask!0 (mask!7278 (_2!1340 lt!73342))))))

(assert (=> d!44933 (= (simpleValid!96 (_2!1340 lt!73342)) e!92552)))

(declare-fun b!142055 () Bool)

(assert (=> b!142055 (= e!92552 (and (bvsge (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000000) (bvsle (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000011) (bvsge (_vacant!624 (_2!1340 lt!73342)) #b00000000000000000000000000000000)))))

(declare-fun b!142052 () Bool)

(declare-fun res!67700 () Bool)

(assert (=> b!142052 (=> (not res!67700) (not e!92552))))

(assert (=> b!142052 (= res!67700 (and (= (size!2576 (_values!2922 (_2!1340 lt!73342))) (bvadd (mask!7278 (_2!1340 lt!73342)) #b00000000000000000000000000000001)) (= (size!2575 (_keys!4697 (_2!1340 lt!73342))) (size!2576 (_values!2922 (_2!1340 lt!73342)))) (bvsge (_size!624 (_2!1340 lt!73342)) #b00000000000000000000000000000000) (bvsle (_size!624 (_2!1340 lt!73342)) (bvadd (mask!7278 (_2!1340 lt!73342)) #b00000000000000000000000000000001))))))

(assert (= (and d!44933 res!67699) b!142052))

(assert (= (and b!142052 res!67700) b!142053))

(assert (= (and b!142053 res!67701) b!142054))

(assert (= (and b!142054 res!67698) b!142055))

(declare-fun m!170517 () Bool)

(assert (=> b!142054 m!170517))

(assert (=> b!142053 m!170517))

(declare-fun m!170519 () Bool)

(assert (=> d!44933 m!170519))

(assert (=> d!43945 d!44933))

(declare-fun d!44935 () Bool)

(declare-fun res!67702 () Bool)

(declare-fun e!92553 () Bool)

(assert (=> d!44935 (=> res!67702 e!92553)))

(assert (=> d!44935 (= res!67702 (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!44935 (= (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92553)))

(declare-fun b!142056 () Bool)

(declare-fun e!92554 () Bool)

(assert (=> b!142056 (= e!92553 e!92554)))

(declare-fun res!67703 () Bool)

(assert (=> b!142056 (=> (not res!67703) (not e!92554))))

(assert (=> b!142056 (= res!67703 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!142057 () Bool)

(assert (=> b!142057 (= e!92554 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44935 (not res!67702)) b!142056))

(assert (= (and b!142056 res!67703) b!142057))

(declare-fun m!170521 () Bool)

(assert (=> d!44935 m!170521))

(assert (=> b!142057 m!166407))

(declare-fun m!170523 () Bool)

(assert (=> b!142057 m!170523))

(assert (=> b!141145 d!44935))

(declare-fun d!44937 () Bool)

(assert (=> d!44937 (= (get!1528 (getValueByKey!174 (toList!871 lt!73199) lt!73206)) (v!3279 (getValueByKey!174 (toList!871 lt!73199) lt!73206)))))

(assert (=> d!43861 d!44937))

(declare-fun b!142061 () Bool)

(declare-fun e!92556 () Option!180)

(assert (=> b!142061 (= e!92556 None!178)))

(declare-fun b!142059 () Bool)

(declare-fun e!92555 () Option!180)

(assert (=> b!142059 (= e!92555 e!92556)))

(declare-fun c!26827 () Bool)

(assert (=> b!142059 (= c!26827 (and ((_ is Cons!1735) (toList!871 lt!73199)) (not (= (_1!1339 (h!2342 (toList!871 lt!73199))) lt!73206))))))

(declare-fun b!142058 () Bool)

(assert (=> b!142058 (= e!92555 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73199)))))))

(declare-fun d!44939 () Bool)

(declare-fun c!26826 () Bool)

(assert (=> d!44939 (= c!26826 (and ((_ is Cons!1735) (toList!871 lt!73199)) (= (_1!1339 (h!2342 (toList!871 lt!73199))) lt!73206)))))

(assert (=> d!44939 (= (getValueByKey!174 (toList!871 lt!73199) lt!73206) e!92555)))

(declare-fun b!142060 () Bool)

(assert (=> b!142060 (= e!92556 (getValueByKey!174 (t!6314 (toList!871 lt!73199)) lt!73206))))

(assert (= (and d!44939 c!26826) b!142058))

(assert (= (and d!44939 (not c!26826)) b!142059))

(assert (= (and b!142059 c!26827) b!142060))

(assert (= (and b!142059 (not c!26827)) b!142061))

(declare-fun m!170525 () Bool)

(assert (=> b!142060 m!170525))

(assert (=> d!43861 d!44939))

(declare-fun d!44941 () Bool)

(declare-fun lt!74324 () Bool)

(assert (=> d!44941 (= lt!74324 (select (content!138 (toList!871 lt!73828)) (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun e!92558 () Bool)

(assert (=> d!44941 (= lt!74324 e!92558)))

(declare-fun res!67704 () Bool)

(assert (=> d!44941 (=> (not res!67704) (not e!92558))))

(assert (=> d!44941 (= res!67704 ((_ is Cons!1735) (toList!871 lt!73828)))))

(assert (=> d!44941 (= (contains!914 (toList!871 lt!73828) (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!74324)))

(declare-fun b!142062 () Bool)

(declare-fun e!92557 () Bool)

(assert (=> b!142062 (= e!92558 e!92557)))

(declare-fun res!67705 () Bool)

(assert (=> b!142062 (=> res!67705 e!92557)))

(assert (=> b!142062 (= res!67705 (= (h!2342 (toList!871 lt!73828)) (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!142063 () Bool)

(assert (=> b!142063 (= e!92557 (contains!914 (t!6314 (toList!871 lt!73828)) (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!44941 res!67704) b!142062))

(assert (= (and b!142062 (not res!67705)) b!142063))

(declare-fun m!170527 () Bool)

(assert (=> d!44941 m!170527))

(declare-fun m!170529 () Bool)

(assert (=> d!44941 m!170529))

(declare-fun m!170531 () Bool)

(assert (=> b!142063 m!170531))

(assert (=> b!140980 d!44941))

(declare-fun d!44943 () Bool)

(declare-fun res!67706 () Bool)

(declare-fun e!92559 () Bool)

(assert (=> d!44943 (=> res!67706 e!92559)))

(assert (=> d!44943 (= res!67706 (or ((_ is Nil!1736) lt!73558) ((_ is Nil!1736) (t!6314 lt!73558))))))

(assert (=> d!44943 (= (isStrictlySorted!320 lt!73558) e!92559)))

(declare-fun b!142064 () Bool)

(declare-fun e!92560 () Bool)

(assert (=> b!142064 (= e!92559 e!92560)))

(declare-fun res!67707 () Bool)

(assert (=> b!142064 (=> (not res!67707) (not e!92560))))

(assert (=> b!142064 (= res!67707 (bvslt (_1!1339 (h!2342 lt!73558)) (_1!1339 (h!2342 (t!6314 lt!73558)))))))

(declare-fun b!142065 () Bool)

(assert (=> b!142065 (= e!92560 (isStrictlySorted!320 (t!6314 lt!73558)))))

(assert (= (and d!44943 (not res!67706)) b!142064))

(assert (= (and b!142064 res!67707) b!142065))

(declare-fun m!170533 () Bool)

(assert (=> b!142065 m!170533))

(assert (=> d!43817 d!44943))

(declare-fun d!44945 () Bool)

(declare-fun res!67708 () Bool)

(declare-fun e!92561 () Bool)

(assert (=> d!44945 (=> res!67708 e!92561)))

(assert (=> d!44945 (= res!67708 (or ((_ is Nil!1736) (toList!871 lt!73001)) ((_ is Nil!1736) (t!6314 (toList!871 lt!73001)))))))

(assert (=> d!44945 (= (isStrictlySorted!320 (toList!871 lt!73001)) e!92561)))

(declare-fun b!142066 () Bool)

(declare-fun e!92562 () Bool)

(assert (=> b!142066 (= e!92561 e!92562)))

(declare-fun res!67709 () Bool)

(assert (=> b!142066 (=> (not res!67709) (not e!92562))))

(assert (=> b!142066 (= res!67709 (bvslt (_1!1339 (h!2342 (toList!871 lt!73001))) (_1!1339 (h!2342 (t!6314 (toList!871 lt!73001))))))))

(declare-fun b!142067 () Bool)

(assert (=> b!142067 (= e!92562 (isStrictlySorted!320 (t!6314 (toList!871 lt!73001))))))

(assert (= (and d!44945 (not res!67708)) b!142066))

(assert (= (and b!142066 res!67709) b!142067))

(assert (=> b!142067 m!170213))

(assert (=> d!43817 d!44945))

(assert (=> b!140618 d!43787))

(declare-fun d!44947 () Bool)

(assert (=> d!44947 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5961 () Bool)

(assert (= bs!5961 d!44947))

(assert (=> bs!5961 m!167599))

(declare-fun m!170535 () Bool)

(assert (=> bs!5961 m!170535))

(assert (=> b!140994 d!44947))

(declare-fun b!142071 () Bool)

(declare-fun e!92564 () Option!180)

(assert (=> b!142071 (= e!92564 None!178)))

(declare-fun b!142069 () Bool)

(declare-fun e!92563 () Option!180)

(assert (=> b!142069 (= e!92563 e!92564)))

(declare-fun c!26829 () Bool)

(assert (=> b!142069 (= c!26829 (and ((_ is Cons!1735) (toList!871 lt!73172)) (not (= (_1!1339 (h!2342 (toList!871 lt!73172))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142068 () Bool)

(assert (=> b!142068 (= e!92563 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73172)))))))

(declare-fun d!44949 () Bool)

(declare-fun c!26828 () Bool)

(assert (=> d!44949 (= c!26828 (and ((_ is Cons!1735) (toList!871 lt!73172)) (= (_1!1339 (h!2342 (toList!871 lt!73172))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44949 (= (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000) e!92563)))

(declare-fun b!142070 () Bool)

(assert (=> b!142070 (= e!92564 (getValueByKey!174 (t!6314 (toList!871 lt!73172)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44949 c!26828) b!142068))

(assert (= (and d!44949 (not c!26828)) b!142069))

(assert (= (and b!142069 c!26829) b!142070))

(assert (= (and b!142069 (not c!26829)) b!142071))

(declare-fun m!170537 () Bool)

(assert (=> b!142070 m!170537))

(assert (=> b!140994 d!44949))

(declare-fun d!44951 () Bool)

(declare-fun e!92566 () Bool)

(assert (=> d!44951 e!92566))

(declare-fun res!67710 () Bool)

(assert (=> d!44951 (=> res!67710 e!92566)))

(declare-fun lt!74328 () Bool)

(assert (=> d!44951 (= res!67710 (not lt!74328))))

(declare-fun lt!74327 () Bool)

(assert (=> d!44951 (= lt!74328 lt!74327)))

(declare-fun lt!74326 () Unit!4393)

(declare-fun e!92565 () Unit!4393)

(assert (=> d!44951 (= lt!74326 e!92565)))

(declare-fun c!26830 () Bool)

(assert (=> d!44951 (= c!26830 lt!74327)))

(assert (=> d!44951 (= lt!74327 (containsKey!178 (toList!871 lt!73734) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44951 (= (contains!910 lt!73734 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74328)))

(declare-fun b!142072 () Bool)

(declare-fun lt!74325 () Unit!4393)

(assert (=> b!142072 (= e!92565 lt!74325)))

(assert (=> b!142072 (= lt!74325 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73734) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142072 (isDefined!128 (getValueByKey!174 (toList!871 lt!73734) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142073 () Bool)

(declare-fun Unit!4483 () Unit!4393)

(assert (=> b!142073 (= e!92565 Unit!4483)))

(declare-fun b!142074 () Bool)

(assert (=> b!142074 (= e!92566 (isDefined!128 (getValueByKey!174 (toList!871 lt!73734) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44951 c!26830) b!142072))

(assert (= (and d!44951 (not c!26830)) b!142073))

(assert (= (and d!44951 (not res!67710)) b!142074))

(declare-fun m!170539 () Bool)

(assert (=> d!44951 m!170539))

(declare-fun m!170541 () Bool)

(assert (=> b!142072 m!170541))

(assert (=> b!142072 m!168255))

(assert (=> b!142072 m!168255))

(declare-fun m!170543 () Bool)

(assert (=> b!142072 m!170543))

(assert (=> b!142074 m!168255))

(assert (=> b!142074 m!168255))

(assert (=> b!142074 m!170543))

(assert (=> d!44009 d!44951))

(declare-fun b!142078 () Bool)

(declare-fun e!92568 () Option!180)

(assert (=> b!142078 (= e!92568 None!178)))

(declare-fun b!142076 () Bool)

(declare-fun e!92567 () Option!180)

(assert (=> b!142076 (= e!92567 e!92568)))

(declare-fun c!26832 () Bool)

(assert (=> b!142076 (= c!26832 (and ((_ is Cons!1735) lt!73735) (not (= (_1!1339 (h!2342 lt!73735)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142075 () Bool)

(assert (=> b!142075 (= e!92567 (Some!179 (_2!1339 (h!2342 lt!73735))))))

(declare-fun c!26831 () Bool)

(declare-fun d!44953 () Bool)

(assert (=> d!44953 (= c!26831 (and ((_ is Cons!1735) lt!73735) (= (_1!1339 (h!2342 lt!73735)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44953 (= (getValueByKey!174 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92567)))

(declare-fun b!142077 () Bool)

(assert (=> b!142077 (= e!92568 (getValueByKey!174 (t!6314 lt!73735) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44953 c!26831) b!142075))

(assert (= (and d!44953 (not c!26831)) b!142076))

(assert (= (and b!142076 c!26832) b!142077))

(assert (= (and b!142076 (not c!26832)) b!142078))

(declare-fun m!170545 () Bool)

(assert (=> b!142077 m!170545))

(assert (=> d!44009 d!44953))

(declare-fun d!44955 () Bool)

(assert (=> d!44955 (= (getValueByKey!174 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74329 () Unit!4393)

(assert (=> d!44955 (= lt!74329 (choose!872 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92569 () Bool)

(assert (=> d!44955 e!92569))

(declare-fun res!67711 () Bool)

(assert (=> d!44955 (=> (not res!67711) (not e!92569))))

(assert (=> d!44955 (= res!67711 (isStrictlySorted!320 lt!73735))))

(assert (=> d!44955 (= (lemmaContainsTupThenGetReturnValue!91 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74329)))

(declare-fun b!142079 () Bool)

(declare-fun res!67712 () Bool)

(assert (=> b!142079 (=> (not res!67712) (not e!92569))))

(assert (=> b!142079 (= res!67712 (containsKey!178 lt!73735 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142080 () Bool)

(assert (=> b!142080 (= e!92569 (contains!914 lt!73735 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44955 res!67711) b!142079))

(assert (= (and b!142079 res!67712) b!142080))

(assert (=> d!44955 m!168249))

(declare-fun m!170547 () Bool)

(assert (=> d!44955 m!170547))

(declare-fun m!170549 () Bool)

(assert (=> d!44955 m!170549))

(declare-fun m!170551 () Bool)

(assert (=> b!142079 m!170551))

(declare-fun m!170553 () Bool)

(assert (=> b!142080 m!170553))

(assert (=> d!44009 d!44955))

(declare-fun b!142081 () Bool)

(declare-fun e!92572 () List!1739)

(declare-fun call!15714 () List!1739)

(assert (=> b!142081 (= e!92572 call!15714)))

(declare-fun b!142082 () Bool)

(declare-fun e!92570 () List!1739)

(declare-fun call!15713 () List!1739)

(assert (=> b!142082 (= e!92570 call!15713)))

(declare-fun lt!74330 () List!1739)

(declare-fun b!142083 () Bool)

(declare-fun e!92573 () Bool)

(assert (=> b!142083 (= e!92573 (contains!914 lt!74330 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92571 () List!1739)

(declare-fun c!26836 () Bool)

(declare-fun bm!15709 () Bool)

(assert (=> bm!15709 (= call!15714 ($colon$colon!93 e!92571 (ite c!26836 (h!2342 (toList!871 call!15539)) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26833 () Bool)

(assert (=> bm!15709 (= c!26833 c!26836)))

(declare-fun bm!15710 () Bool)

(declare-fun call!15712 () List!1739)

(assert (=> bm!15710 (= call!15713 call!15712)))

(declare-fun b!142084 () Bool)

(declare-fun res!67713 () Bool)

(assert (=> b!142084 (=> (not res!67713) (not e!92573))))

(assert (=> b!142084 (= res!67713 (containsKey!178 lt!74330 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!44957 () Bool)

(assert (=> d!44957 e!92573))

(declare-fun res!67714 () Bool)

(assert (=> d!44957 (=> (not res!67714) (not e!92573))))

(assert (=> d!44957 (= res!67714 (isStrictlySorted!320 lt!74330))))

(assert (=> d!44957 (= lt!74330 e!92572)))

(assert (=> d!44957 (= c!26836 (and ((_ is Cons!1735) (toList!871 call!15539)) (bvslt (_1!1339 (h!2342 (toList!871 call!15539))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44957 (isStrictlySorted!320 (toList!871 call!15539))))

(assert (=> d!44957 (= (insertStrictlySorted!94 (toList!871 call!15539) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74330)))

(declare-fun c!26835 () Bool)

(declare-fun b!142085 () Bool)

(declare-fun c!26834 () Bool)

(assert (=> b!142085 (= e!92571 (ite c!26835 (t!6314 (toList!871 call!15539)) (ite c!26834 (Cons!1735 (h!2342 (toList!871 call!15539)) (t!6314 (toList!871 call!15539))) Nil!1736)))))

(declare-fun b!142086 () Bool)

(assert (=> b!142086 (= c!26834 (and ((_ is Cons!1735) (toList!871 call!15539)) (bvsgt (_1!1339 (h!2342 (toList!871 call!15539))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92574 () List!1739)

(assert (=> b!142086 (= e!92574 e!92570)))

(declare-fun b!142087 () Bool)

(assert (=> b!142087 (= e!92570 call!15713)))

(declare-fun b!142088 () Bool)

(assert (=> b!142088 (= e!92571 (insertStrictlySorted!94 (t!6314 (toList!871 call!15539)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15711 () Bool)

(assert (=> bm!15711 (= call!15712 call!15714)))

(declare-fun b!142089 () Bool)

(assert (=> b!142089 (= e!92572 e!92574)))

(assert (=> b!142089 (= c!26835 (and ((_ is Cons!1735) (toList!871 call!15539)) (= (_1!1339 (h!2342 (toList!871 call!15539))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142090 () Bool)

(assert (=> b!142090 (= e!92574 call!15712)))

(assert (= (and d!44957 c!26836) b!142081))

(assert (= (and d!44957 (not c!26836)) b!142089))

(assert (= (and b!142089 c!26835) b!142090))

(assert (= (and b!142089 (not c!26835)) b!142086))

(assert (= (and b!142086 c!26834) b!142082))

(assert (= (and b!142086 (not c!26834)) b!142087))

(assert (= (or b!142082 b!142087) bm!15710))

(assert (= (or b!142090 bm!15710) bm!15711))

(assert (= (or b!142081 bm!15711) bm!15709))

(assert (= (and bm!15709 c!26833) b!142088))

(assert (= (and bm!15709 (not c!26833)) b!142085))

(assert (= (and d!44957 res!67714) b!142084))

(assert (= (and b!142084 res!67713) b!142083))

(declare-fun m!170555 () Bool)

(assert (=> b!142084 m!170555))

(declare-fun m!170557 () Bool)

(assert (=> b!142088 m!170557))

(declare-fun m!170559 () Bool)

(assert (=> bm!15709 m!170559))

(declare-fun m!170561 () Bool)

(assert (=> b!142083 m!170561))

(declare-fun m!170563 () Bool)

(assert (=> d!44957 m!170563))

(declare-fun m!170565 () Bool)

(assert (=> d!44957 m!170565))

(assert (=> d!44009 d!44957))

(declare-fun d!44959 () Bool)

(declare-fun e!92576 () Bool)

(assert (=> d!44959 e!92576))

(declare-fun res!67715 () Bool)

(assert (=> d!44959 (=> res!67715 e!92576)))

(declare-fun lt!74334 () Bool)

(assert (=> d!44959 (= res!67715 (not lt!74334))))

(declare-fun lt!74333 () Bool)

(assert (=> d!44959 (= lt!74334 lt!74333)))

(declare-fun lt!74332 () Unit!4393)

(declare-fun e!92575 () Unit!4393)

(assert (=> d!44959 (= lt!74332 e!92575)))

(declare-fun c!26837 () Bool)

(assert (=> d!44959 (= c!26837 lt!74333)))

(assert (=> d!44959 (= lt!74333 (containsKey!178 (toList!871 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44959 (= (contains!910 lt!73601 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74334)))

(declare-fun b!142091 () Bool)

(declare-fun lt!74331 () Unit!4393)

(assert (=> b!142091 (= e!92575 lt!74331)))

(assert (=> b!142091 (= lt!74331 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142091 (isDefined!128 (getValueByKey!174 (toList!871 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142092 () Bool)

(declare-fun Unit!4484 () Unit!4393)

(assert (=> b!142092 (= e!92575 Unit!4484)))

(declare-fun b!142093 () Bool)

(assert (=> b!142093 (= e!92576 (isDefined!128 (getValueByKey!174 (toList!871 lt!73601) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44959 c!26837) b!142091))

(assert (= (and d!44959 (not c!26837)) b!142092))

(assert (= (and d!44959 (not res!67715)) b!142093))

(declare-fun m!170567 () Bool)

(assert (=> d!44959 m!170567))

(declare-fun m!170569 () Bool)

(assert (=> b!142091 m!170569))

(declare-fun m!170571 () Bool)

(assert (=> b!142091 m!170571))

(assert (=> b!142091 m!170571))

(declare-fun m!170573 () Bool)

(assert (=> b!142091 m!170573))

(assert (=> b!142093 m!170571))

(assert (=> b!142093 m!170571))

(assert (=> b!142093 m!170573))

(assert (=> d!43855 d!44959))

(assert (=> d!43855 d!43719))

(declare-fun d!44961 () Bool)

(assert (=> d!44961 (arrayContainsKey!0 (_keys!4697 (_2!1340 lt!73099)) lt!73571 #b00000000000000000000000000000000)))

(declare-fun lt!74335 () Unit!4393)

(assert (=> d!44961 (= lt!74335 (choose!13 (_keys!4697 (_2!1340 lt!73099)) lt!73571 #b00000000000000000000000000000000))))

(assert (=> d!44961 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44961 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (_2!1340 lt!73099)) lt!73571 #b00000000000000000000000000000000) lt!74335)))

(declare-fun bs!5962 () Bool)

(assert (= bs!5962 d!44961))

(assert (=> bs!5962 m!167707))

(declare-fun m!170575 () Bool)

(assert (=> bs!5962 m!170575))

(assert (=> b!140583 d!44961))

(declare-fun d!44963 () Bool)

(declare-fun res!67716 () Bool)

(declare-fun e!92577 () Bool)

(assert (=> d!44963 (=> res!67716 e!92577)))

(assert (=> d!44963 (= res!67716 (= (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) lt!73571))))

(assert (=> d!44963 (= (arrayContainsKey!0 (_keys!4697 (_2!1340 lt!73099)) lt!73571 #b00000000000000000000000000000000) e!92577)))

(declare-fun b!142094 () Bool)

(declare-fun e!92578 () Bool)

(assert (=> b!142094 (= e!92577 e!92578)))

(declare-fun res!67717 () Bool)

(assert (=> b!142094 (=> (not res!67717) (not e!92578))))

(assert (=> b!142094 (= res!67717 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(declare-fun b!142095 () Bool)

(assert (=> b!142095 (= e!92578 (arrayContainsKey!0 (_keys!4697 (_2!1340 lt!73099)) lt!73571 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44963 (not res!67716)) b!142094))

(assert (= (and b!142094 res!67717) b!142095))

(assert (=> d!44963 m!167523))

(declare-fun m!170577 () Bool)

(assert (=> b!142095 m!170577))

(assert (=> b!140583 d!44963))

(declare-fun b!142096 () Bool)

(declare-fun c!26840 () Bool)

(declare-fun lt!74337 () (_ BitVec 64))

(assert (=> b!142096 (= c!26840 (= lt!74337 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92581 () SeekEntryResult!282)

(declare-fun e!92580 () SeekEntryResult!282)

(assert (=> b!142096 (= e!92581 e!92580)))

(declare-fun b!142097 () Bool)

(declare-fun e!92579 () SeekEntryResult!282)

(assert (=> b!142097 (= e!92579 Undefined!282)))

(declare-fun b!142098 () Bool)

(declare-fun lt!74338 () SeekEntryResult!282)

(assert (=> b!142098 (= e!92581 (Found!282 (index!3293 lt!74338)))))

(declare-fun b!142099 () Bool)

(assert (=> b!142099 (= e!92580 (seekKeyOrZeroReturnVacant!0 (x!16138 lt!74338) (index!3293 lt!74338) (index!3293 lt!74338) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))))))

(declare-fun d!44965 () Bool)

(declare-fun lt!74336 () SeekEntryResult!282)

(assert (=> d!44965 (and (or ((_ is Undefined!282) lt!74336) (not ((_ is Found!282) lt!74336)) (and (bvsge (index!3292 lt!74336) #b00000000000000000000000000000000) (bvslt (index!3292 lt!74336) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))) (or ((_ is Undefined!282) lt!74336) ((_ is Found!282) lt!74336) (not ((_ is MissingZero!282) lt!74336)) (and (bvsge (index!3291 lt!74336) #b00000000000000000000000000000000) (bvslt (index!3291 lt!74336) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))) (or ((_ is Undefined!282) lt!74336) ((_ is Found!282) lt!74336) ((_ is MissingZero!282) lt!74336) (not ((_ is MissingVacant!282) lt!74336)) (and (bvsge (index!3294 lt!74336) #b00000000000000000000000000000000) (bvslt (index!3294 lt!74336) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))) (or ((_ is Undefined!282) lt!74336) (ite ((_ is Found!282) lt!74336) (= (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (index!3292 lt!74336)) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!282) lt!74336) (= (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (index!3291 lt!74336)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!282) lt!74336) (= (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (index!3294 lt!74336)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44965 (= lt!74336 e!92579)))

(declare-fun c!26838 () Bool)

(assert (=> d!44965 (= c!26838 (and ((_ is Intermediate!282) lt!74338) (undefined!1094 lt!74338)))))

(assert (=> d!44965 (= lt!74338 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (mask!7278 (_2!1340 lt!73099))) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))))))

(assert (=> d!44965 (validMask!0 (mask!7278 (_2!1340 lt!73099)))))

(assert (=> d!44965 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (_keys!4697 (_2!1340 lt!73099)) (mask!7278 (_2!1340 lt!73099))) lt!74336)))

(declare-fun b!142100 () Bool)

(assert (=> b!142100 (= e!92580 (MissingZero!282 (index!3293 lt!74338)))))

(declare-fun b!142101 () Bool)

(assert (=> b!142101 (= e!92579 e!92581)))

(assert (=> b!142101 (= lt!74337 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (index!3293 lt!74338)))))

(declare-fun c!26839 () Bool)

(assert (=> b!142101 (= c!26839 (= lt!74337 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (= (and d!44965 c!26838) b!142097))

(assert (= (and d!44965 (not c!26838)) b!142101))

(assert (= (and b!142101 c!26839) b!142098))

(assert (= (and b!142101 (not c!26839)) b!142096))

(assert (= (and b!142096 c!26840) b!142100))

(assert (= (and b!142096 (not c!26840)) b!142099))

(assert (=> b!142099 m!167523))

(declare-fun m!170579 () Bool)

(assert (=> b!142099 m!170579))

(assert (=> d!44965 m!167523))

(declare-fun m!170581 () Bool)

(assert (=> d!44965 m!170581))

(declare-fun m!170583 () Bool)

(assert (=> d!44965 m!170583))

(assert (=> d!44965 m!170581))

(assert (=> d!44965 m!167523))

(declare-fun m!170585 () Bool)

(assert (=> d!44965 m!170585))

(declare-fun m!170587 () Bool)

(assert (=> d!44965 m!170587))

(assert (=> d!44965 m!167541))

(declare-fun m!170589 () Bool)

(assert (=> d!44965 m!170589))

(declare-fun m!170591 () Bool)

(assert (=> b!142101 m!170591))

(assert (=> b!140583 d!44965))

(declare-fun b!142105 () Bool)

(declare-fun e!92583 () Option!180)

(assert (=> b!142105 (= e!92583 None!178)))

(declare-fun b!142103 () Bool)

(declare-fun e!92582 () Option!180)

(assert (=> b!142103 (= e!92582 e!92583)))

(declare-fun c!26842 () Bool)

(assert (=> b!142103 (= c!26842 (and ((_ is Cons!1735) (toList!871 lt!73718)) (not (= (_1!1339 (h!2342 (toList!871 lt!73718))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142102 () Bool)

(assert (=> b!142102 (= e!92582 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73718)))))))

(declare-fun d!44967 () Bool)

(declare-fun c!26841 () Bool)

(assert (=> d!44967 (= c!26841 (and ((_ is Cons!1735) (toList!871 lt!73718)) (= (_1!1339 (h!2342 (toList!871 lt!73718))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44967 (= (getValueByKey!174 (toList!871 lt!73718) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92582)))

(declare-fun b!142104 () Bool)

(assert (=> b!142104 (= e!92583 (getValueByKey!174 (t!6314 (toList!871 lt!73718)) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44967 c!26841) b!142102))

(assert (= (and d!44967 (not c!26841)) b!142103))

(assert (= (and b!142103 c!26842) b!142104))

(assert (= (and b!142103 (not c!26842)) b!142105))

(declare-fun m!170593 () Bool)

(assert (=> b!142104 m!170593))

(assert (=> b!140833 d!44967))

(declare-fun d!44969 () Bool)

(declare-fun res!67718 () Bool)

(declare-fun e!92584 () Bool)

(assert (=> d!44969 (=> res!67718 e!92584)))

(assert (=> d!44969 (= res!67718 (or ((_ is Nil!1736) lt!73631) ((_ is Nil!1736) (t!6314 lt!73631))))))

(assert (=> d!44969 (= (isStrictlySorted!320 lt!73631) e!92584)))

(declare-fun b!142106 () Bool)

(declare-fun e!92585 () Bool)

(assert (=> b!142106 (= e!92584 e!92585)))

(declare-fun res!67719 () Bool)

(assert (=> b!142106 (=> (not res!67719) (not e!92585))))

(assert (=> b!142106 (= res!67719 (bvslt (_1!1339 (h!2342 lt!73631)) (_1!1339 (h!2342 (t!6314 lt!73631)))))))

(declare-fun b!142107 () Bool)

(assert (=> b!142107 (= e!92585 (isStrictlySorted!320 (t!6314 lt!73631)))))

(assert (= (and d!44969 (not res!67718)) b!142106))

(assert (= (and b!142106 res!67719) b!142107))

(declare-fun m!170595 () Bool)

(assert (=> b!142107 m!170595))

(assert (=> d!43903 d!44969))

(declare-fun d!44971 () Bool)

(declare-fun res!67720 () Bool)

(declare-fun e!92586 () Bool)

(assert (=> d!44971 (=> res!67720 e!92586)))

(assert (=> d!44971 (= res!67720 (or ((_ is Nil!1736) (toList!871 lt!73005)) ((_ is Nil!1736) (t!6314 (toList!871 lt!73005)))))))

(assert (=> d!44971 (= (isStrictlySorted!320 (toList!871 lt!73005)) e!92586)))

(declare-fun b!142108 () Bool)

(declare-fun e!92587 () Bool)

(assert (=> b!142108 (= e!92586 e!92587)))

(declare-fun res!67721 () Bool)

(assert (=> b!142108 (=> (not res!67721) (not e!92587))))

(assert (=> b!142108 (= res!67721 (bvslt (_1!1339 (h!2342 (toList!871 lt!73005))) (_1!1339 (h!2342 (t!6314 (toList!871 lt!73005))))))))

(declare-fun b!142109 () Bool)

(assert (=> b!142109 (= e!92587 (isStrictlySorted!320 (t!6314 (toList!871 lt!73005))))))

(assert (= (and d!44971 (not res!67720)) b!142108))

(assert (= (and b!142108 res!67721) b!142109))

(declare-fun m!170597 () Bool)

(assert (=> b!142109 m!170597))

(assert (=> d!43903 d!44971))

(assert (=> d!43851 d!43841))

(declare-fun d!44973 () Bool)

(assert (=> d!44973 (= (apply!120 (+!167 lt!73195 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) lt!73214) (apply!120 lt!73195 lt!73214))))

(assert (=> d!44973 true))

(declare-fun _$34!1011 () Unit!4393)

(assert (=> d!44973 (= (choose!869 lt!73195 lt!73204 (zeroValue!2789 newMap!16) lt!73214) _$34!1011)))

(declare-fun bs!5963 () Bool)

(assert (= bs!5963 d!44973))

(assert (=> bs!5963 m!166887))

(assert (=> bs!5963 m!166887))

(assert (=> bs!5963 m!166889))

(assert (=> bs!5963 m!166893))

(assert (=> d!43851 d!44973))

(declare-fun d!44975 () Bool)

(declare-fun e!92589 () Bool)

(assert (=> d!44975 e!92589))

(declare-fun res!67722 () Bool)

(assert (=> d!44975 (=> res!67722 e!92589)))

(declare-fun lt!74342 () Bool)

(assert (=> d!44975 (= res!67722 (not lt!74342))))

(declare-fun lt!74341 () Bool)

(assert (=> d!44975 (= lt!74342 lt!74341)))

(declare-fun lt!74340 () Unit!4393)

(declare-fun e!92588 () Unit!4393)

(assert (=> d!44975 (= lt!74340 e!92588)))

(declare-fun c!26843 () Bool)

(assert (=> d!44975 (= c!26843 lt!74341)))

(assert (=> d!44975 (= lt!74341 (containsKey!178 (toList!871 lt!73195) lt!73214))))

(assert (=> d!44975 (= (contains!910 lt!73195 lt!73214) lt!74342)))

(declare-fun b!142110 () Bool)

(declare-fun lt!74339 () Unit!4393)

(assert (=> b!142110 (= e!92588 lt!74339)))

(assert (=> b!142110 (= lt!74339 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73195) lt!73214))))

(assert (=> b!142110 (isDefined!128 (getValueByKey!174 (toList!871 lt!73195) lt!73214))))

(declare-fun b!142111 () Bool)

(declare-fun Unit!4485 () Unit!4393)

(assert (=> b!142111 (= e!92588 Unit!4485)))

(declare-fun b!142112 () Bool)

(assert (=> b!142112 (= e!92589 (isDefined!128 (getValueByKey!174 (toList!871 lt!73195) lt!73214)))))

(assert (= (and d!44975 c!26843) b!142110))

(assert (= (and d!44975 (not c!26843)) b!142111))

(assert (= (and d!44975 (not res!67722)) b!142112))

(declare-fun m!170599 () Bool)

(assert (=> d!44975 m!170599))

(declare-fun m!170601 () Bool)

(assert (=> b!142110 m!170601))

(assert (=> b!142110 m!167799))

(assert (=> b!142110 m!167799))

(declare-fun m!170603 () Bool)

(assert (=> b!142110 m!170603))

(assert (=> b!142112 m!167799))

(assert (=> b!142112 m!167799))

(assert (=> b!142112 m!170603))

(assert (=> d!43851 d!44975))

(assert (=> d!43851 d!43869))

(assert (=> d!43851 d!43859))

(declare-fun d!44977 () Bool)

(declare-fun res!67723 () Bool)

(declare-fun e!92590 () Bool)

(assert (=> d!44977 (=> res!67723 e!92590)))

(assert (=> d!44977 (= res!67723 (and ((_ is Cons!1735) (toList!871 lt!73266)) (= (_1!1339 (h!2342 (toList!871 lt!73266))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44977 (= (containsKey!178 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000) e!92590)))

(declare-fun b!142113 () Bool)

(declare-fun e!92591 () Bool)

(assert (=> b!142113 (= e!92590 e!92591)))

(declare-fun res!67724 () Bool)

(assert (=> b!142113 (=> (not res!67724) (not e!92591))))

(assert (=> b!142113 (= res!67724 (and (or (not ((_ is Cons!1735) (toList!871 lt!73266))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73266))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73266)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73266))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142114 () Bool)

(assert (=> b!142114 (= e!92591 (containsKey!178 (t!6314 (toList!871 lt!73266)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44977 (not res!67723)) b!142113))

(assert (= (and b!142113 res!67724) b!142114))

(declare-fun m!170605 () Bool)

(assert (=> b!142114 m!170605))

(assert (=> d!43703 d!44977))

(declare-fun d!44979 () Bool)

(declare-fun lt!74343 () Bool)

(assert (=> d!44979 (= lt!74343 (select (content!138 (toList!871 lt!73823)) (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun e!92593 () Bool)

(assert (=> d!44979 (= lt!74343 e!92593)))

(declare-fun res!67725 () Bool)

(assert (=> d!44979 (=> (not res!67725) (not e!92593))))

(assert (=> d!44979 (= res!67725 ((_ is Cons!1735) (toList!871 lt!73823)))))

(assert (=> d!44979 (= (contains!914 (toList!871 lt!73823) (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!74343)))

(declare-fun b!142115 () Bool)

(declare-fun e!92592 () Bool)

(assert (=> b!142115 (= e!92593 e!92592)))

(declare-fun res!67726 () Bool)

(assert (=> b!142115 (=> res!67726 e!92592)))

(assert (=> b!142115 (= res!67726 (= (h!2342 (toList!871 lt!73823)) (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(declare-fun b!142116 () Bool)

(assert (=> b!142116 (= e!92592 (contains!914 (t!6314 (toList!871 lt!73823)) (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))

(assert (= (and d!44979 res!67725) b!142115))

(assert (= (and b!142115 (not res!67726)) b!142116))

(declare-fun m!170607 () Bool)

(assert (=> d!44979 m!170607))

(declare-fun m!170609 () Bool)

(assert (=> d!44979 m!170609))

(declare-fun m!170611 () Bool)

(assert (=> b!142116 m!170611))

(assert (=> b!140977 d!44979))

(declare-fun d!44981 () Bool)

(declare-fun e!92594 () Bool)

(assert (=> d!44981 e!92594))

(declare-fun res!67728 () Bool)

(assert (=> d!44981 (=> (not res!67728) (not e!92594))))

(declare-fun lt!74346 () ListLongMap!1711)

(assert (=> d!44981 (= res!67728 (contains!910 lt!74346 (_1!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74347 () List!1739)

(assert (=> d!44981 (= lt!74346 (ListLongMap!1712 lt!74347))))

(declare-fun lt!74344 () Unit!4393)

(declare-fun lt!74345 () Unit!4393)

(assert (=> d!44981 (= lt!74344 lt!74345)))

(assert (=> d!44981 (= (getValueByKey!174 lt!74347 (_1!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!179 (_2!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44981 (= lt!74345 (lemmaContainsTupThenGetReturnValue!91 lt!74347 (_1!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44981 (= lt!74347 (insertStrictlySorted!94 (toList!871 (ite c!26336 call!15565 (ite c!26339 call!15568 call!15563))) (_1!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44981 (= (+!167 (ite c!26336 call!15565 (ite c!26339 call!15568 call!15563)) (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74346)))

(declare-fun b!142117 () Bool)

(declare-fun res!67727 () Bool)

(assert (=> b!142117 (=> (not res!67727) (not e!92594))))

(assert (=> b!142117 (= res!67727 (= (getValueByKey!174 (toList!871 lt!74346) (_1!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!179 (_2!1339 (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142118 () Bool)

(assert (=> b!142118 (= e!92594 (contains!914 (toList!871 lt!74346) (ite (or c!26336 c!26339) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44981 res!67728) b!142117))

(assert (= (and b!142117 res!67727) b!142118))

(declare-fun m!170613 () Bool)

(assert (=> d!44981 m!170613))

(declare-fun m!170615 () Bool)

(assert (=> d!44981 m!170615))

(declare-fun m!170617 () Bool)

(assert (=> d!44981 m!170617))

(declare-fun m!170619 () Bool)

(assert (=> d!44981 m!170619))

(declare-fun m!170621 () Bool)

(assert (=> b!142117 m!170621))

(declare-fun m!170623 () Bool)

(assert (=> b!142118 m!170623))

(assert (=> bm!15565 d!44981))

(declare-fun d!44983 () Bool)

(assert (=> d!44983 (= ($colon$colon!93 e!91848 (ite c!26489 (h!2342 (toList!871 call!15501)) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1735 (ite c!26489 (h!2342 (toList!871 call!15501)) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91848))))

(assert (=> bm!15629 d!44983))

(assert (=> d!43815 d!43813))

(declare-fun d!44985 () Bool)

(assert (=> d!44985 (= (getValueByKey!174 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44985 true))

(declare-fun _$22!499 () Unit!4393)

(assert (=> d!44985 (= (choose!872 lt!73402 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) _$22!499)))

(declare-fun bs!5964 () Bool)

(assert (= bs!5964 d!44985))

(assert (=> bs!5964 m!167157))

(assert (=> d!43815 d!44985))

(declare-fun d!44987 () Bool)

(declare-fun res!67729 () Bool)

(declare-fun e!92595 () Bool)

(assert (=> d!44987 (=> res!67729 e!92595)))

(assert (=> d!44987 (= res!67729 (or ((_ is Nil!1736) lt!73402) ((_ is Nil!1736) (t!6314 lt!73402))))))

(assert (=> d!44987 (= (isStrictlySorted!320 lt!73402) e!92595)))

(declare-fun b!142119 () Bool)

(declare-fun e!92596 () Bool)

(assert (=> b!142119 (= e!92595 e!92596)))

(declare-fun res!67730 () Bool)

(assert (=> b!142119 (=> (not res!67730) (not e!92596))))

(assert (=> b!142119 (= res!67730 (bvslt (_1!1339 (h!2342 lt!73402)) (_1!1339 (h!2342 (t!6314 lt!73402)))))))

(declare-fun b!142120 () Bool)

(assert (=> b!142120 (= e!92596 (isStrictlySorted!320 (t!6314 lt!73402)))))

(assert (= (and d!44987 (not res!67729)) b!142119))

(assert (= (and b!142119 res!67730) b!142120))

(declare-fun m!170625 () Bool)

(assert (=> b!142120 m!170625))

(assert (=> d!43815 d!44987))

(declare-fun d!44989 () Bool)

(declare-fun res!67731 () Bool)

(declare-fun e!92597 () Bool)

(assert (=> d!44989 (=> res!67731 e!92597)))

(assert (=> d!44989 (= res!67731 (and ((_ is Cons!1735) lt!73391) (= (_1!1339 (h!2342 lt!73391)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44989 (= (containsKey!178 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92597)))

(declare-fun b!142121 () Bool)

(declare-fun e!92598 () Bool)

(assert (=> b!142121 (= e!92597 e!92598)))

(declare-fun res!67732 () Bool)

(assert (=> b!142121 (=> (not res!67732) (not e!92598))))

(assert (=> b!142121 (= res!67732 (and (or (not ((_ is Cons!1735) lt!73391)) (bvsle (_1!1339 (h!2342 lt!73391)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73391) (bvslt (_1!1339 (h!2342 lt!73391)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142122 () Bool)

(assert (=> b!142122 (= e!92598 (containsKey!178 (t!6314 lt!73391) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44989 (not res!67731)) b!142121))

(assert (= (and b!142121 res!67732) b!142122))

(declare-fun m!170627 () Bool)

(assert (=> b!142122 m!170627))

(assert (=> b!140948 d!44989))

(declare-fun d!44991 () Bool)

(declare-fun e!92600 () Bool)

(assert (=> d!44991 e!92600))

(declare-fun res!67733 () Bool)

(assert (=> d!44991 (=> res!67733 e!92600)))

(declare-fun lt!74351 () Bool)

(assert (=> d!44991 (= res!67733 (not lt!74351))))

(declare-fun lt!74350 () Bool)

(assert (=> d!44991 (= lt!74351 lt!74350)))

(declare-fun lt!74349 () Unit!4393)

(declare-fun e!92599 () Unit!4393)

(assert (=> d!44991 (= lt!74349 e!92599)))

(declare-fun c!26844 () Bool)

(assert (=> d!44991 (= c!26844 lt!74350)))

(assert (=> d!44991 (= lt!74350 (containsKey!178 (toList!871 lt!73764) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44991 (= (contains!910 lt!73764 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74351)))

(declare-fun b!142123 () Bool)

(declare-fun lt!74348 () Unit!4393)

(assert (=> b!142123 (= e!92599 lt!74348)))

(assert (=> b!142123 (= lt!74348 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73764) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142123 (isDefined!128 (getValueByKey!174 (toList!871 lt!73764) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142124 () Bool)

(declare-fun Unit!4486 () Unit!4393)

(assert (=> b!142124 (= e!92599 Unit!4486)))

(declare-fun b!142125 () Bool)

(assert (=> b!142125 (= e!92600 (isDefined!128 (getValueByKey!174 (toList!871 lt!73764) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44991 c!26844) b!142123))

(assert (= (and d!44991 (not c!26844)) b!142124))

(assert (= (and d!44991 (not res!67733)) b!142125))

(assert (=> d!44991 m!166699))

(declare-fun m!170629 () Bool)

(assert (=> d!44991 m!170629))

(assert (=> b!142123 m!166699))

(declare-fun m!170631 () Bool)

(assert (=> b!142123 m!170631))

(assert (=> b!142123 m!166699))

(assert (=> b!142123 m!169823))

(assert (=> b!142123 m!169823))

(declare-fun m!170633 () Bool)

(assert (=> b!142123 m!170633))

(assert (=> b!142125 m!166699))

(assert (=> b!142125 m!169823))

(assert (=> b!142125 m!169823))

(assert (=> b!142125 m!170633))

(assert (=> b!140913 d!44991))

(assert (=> d!43901 d!43899))

(declare-fun d!44993 () Bool)

(assert (=> d!44993 (= (getValueByKey!174 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!44993 true))

(declare-fun _$22!500 () Unit!4393)

(assert (=> d!44993 (= (choose!872 lt!73395 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) _$22!500)))

(declare-fun bs!5965 () Bool)

(assert (= bs!5965 d!44993))

(assert (=> bs!5965 m!167137))

(assert (=> d!43901 d!44993))

(declare-fun d!44995 () Bool)

(declare-fun res!67734 () Bool)

(declare-fun e!92601 () Bool)

(assert (=> d!44995 (=> res!67734 e!92601)))

(assert (=> d!44995 (= res!67734 (or ((_ is Nil!1736) lt!73395) ((_ is Nil!1736) (t!6314 lt!73395))))))

(assert (=> d!44995 (= (isStrictlySorted!320 lt!73395) e!92601)))

(declare-fun b!142126 () Bool)

(declare-fun e!92602 () Bool)

(assert (=> b!142126 (= e!92601 e!92602)))

(declare-fun res!67735 () Bool)

(assert (=> b!142126 (=> (not res!67735) (not e!92602))))

(assert (=> b!142126 (= res!67735 (bvslt (_1!1339 (h!2342 lt!73395)) (_1!1339 (h!2342 (t!6314 lt!73395)))))))

(declare-fun b!142127 () Bool)

(assert (=> b!142127 (= e!92602 (isStrictlySorted!320 (t!6314 lt!73395)))))

(assert (= (and d!44995 (not res!67734)) b!142126))

(assert (= (and b!142126 res!67735) b!142127))

(declare-fun m!170635 () Bool)

(assert (=> b!142127 m!170635))

(assert (=> d!43901 d!44995))

(assert (=> b!140441 d!43699))

(declare-fun b!142131 () Bool)

(declare-fun e!92604 () Option!180)

(assert (=> b!142131 (= e!92604 None!178)))

(declare-fun b!142129 () Bool)

(declare-fun e!92603 () Option!180)

(assert (=> b!142129 (= e!92603 e!92604)))

(declare-fun c!26846 () Bool)

(assert (=> b!142129 (= c!26846 (and ((_ is Cons!1735) (t!6314 lt!73158)) (not (= (_1!1339 (h!2342 (t!6314 lt!73158))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142128 () Bool)

(assert (=> b!142128 (= e!92603 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73158)))))))

(declare-fun d!44997 () Bool)

(declare-fun c!26845 () Bool)

(assert (=> d!44997 (= c!26845 (and ((_ is Cons!1735) (t!6314 lt!73158)) (= (_1!1339 (h!2342 (t!6314 lt!73158))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!44997 (= (getValueByKey!174 (t!6314 lt!73158) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92603)))

(declare-fun b!142130 () Bool)

(assert (=> b!142130 (= e!92604 (getValueByKey!174 (t!6314 (t!6314 lt!73158)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!44997 c!26845) b!142128))

(assert (= (and d!44997 (not c!26845)) b!142129))

(assert (= (and b!142129 c!26846) b!142130))

(assert (= (and b!142129 (not c!26846)) b!142131))

(declare-fun m!170637 () Bool)

(assert (=> b!142130 m!170637))

(assert (=> b!141000 d!44997))

(declare-fun d!44999 () Bool)

(declare-fun e!92606 () Bool)

(assert (=> d!44999 e!92606))

(declare-fun res!67736 () Bool)

(assert (=> d!44999 (=> res!67736 e!92606)))

(declare-fun lt!74355 () Bool)

(assert (=> d!44999 (= res!67736 (not lt!74355))))

(declare-fun lt!74354 () Bool)

(assert (=> d!44999 (= lt!74355 lt!74354)))

(declare-fun lt!74353 () Unit!4393)

(declare-fun e!92605 () Unit!4393)

(assert (=> d!44999 (= lt!74353 e!92605)))

(declare-fun c!26847 () Bool)

(assert (=> d!44999 (= c!26847 lt!74354)))

(assert (=> d!44999 (= lt!74354 (containsKey!178 (toList!871 lt!73880) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44999 (= (contains!910 lt!73880 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74355)))

(declare-fun b!142132 () Bool)

(declare-fun lt!74352 () Unit!4393)

(assert (=> b!142132 (= e!92605 lt!74352)))

(assert (=> b!142132 (= lt!74352 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73880) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142132 (isDefined!128 (getValueByKey!174 (toList!871 lt!73880) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142133 () Bool)

(declare-fun Unit!4487 () Unit!4393)

(assert (=> b!142133 (= e!92605 Unit!4487)))

(declare-fun b!142134 () Bool)

(assert (=> b!142134 (= e!92606 (isDefined!128 (getValueByKey!174 (toList!871 lt!73880) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44999 c!26847) b!142132))

(assert (= (and d!44999 (not c!26847)) b!142133))

(assert (= (and d!44999 (not res!67736)) b!142134))

(declare-fun m!170639 () Bool)

(assert (=> d!44999 m!170639))

(declare-fun m!170641 () Bool)

(assert (=> b!142132 m!170641))

(assert (=> b!142132 m!170361))

(assert (=> b!142132 m!170361))

(declare-fun m!170643 () Bool)

(assert (=> b!142132 m!170643))

(assert (=> b!142134 m!170361))

(assert (=> b!142134 m!170361))

(assert (=> b!142134 m!170643))

(assert (=> bm!15653 d!44999))

(declare-fun d!45001 () Bool)

(assert (=> d!45001 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))

(declare-fun lt!74356 () Unit!4393)

(assert (=> d!45001 (= lt!74356 (choose!871 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))

(declare-fun e!92607 () Bool)

(assert (=> d!45001 e!92607))

(declare-fun res!67737 () Bool)

(assert (=> d!45001 (=> (not res!67737) (not e!92607))))

(assert (=> d!45001 (= res!67737 (isStrictlySorted!320 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45001 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190) lt!74356)))

(declare-fun b!142135 () Bool)

(assert (=> b!142135 (= e!92607 (containsKey!178 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190))))

(assert (= (and d!45001 res!67737) b!142135))

(assert (=> d!45001 m!167383))

(assert (=> d!45001 m!167383))

(assert (=> d!45001 m!167385))

(declare-fun m!170645 () Bool)

(assert (=> d!45001 m!170645))

(declare-fun m!170647 () Bool)

(assert (=> d!45001 m!170647))

(assert (=> b!142135 m!167379))

(assert (=> b!140427 d!45001))

(assert (=> b!140427 d!44839))

(assert (=> b!140427 d!44841))

(declare-fun d!45003 () Bool)

(assert (=> d!45003 (contains!910 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 lt!73348) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))

(assert (=> d!45003 true))

(declare-fun _$16!159 () Unit!4393)

(assert (=> d!45003 (= (choose!863 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (defaultEntry!2939 newMap!16)) _$16!159)))

(declare-fun bs!5966 () Bool)

(assert (= bs!5966 d!45003))

(assert (=> bs!5966 m!167039))

(assert (=> bs!5966 m!168767))

(assert (=> bs!5966 m!167039))

(assert (=> bs!5966 m!168767))

(assert (=> bs!5966 m!168769))

(assert (=> d!44155 d!45003))

(assert (=> d!44155 d!43719))

(declare-fun d!45005 () Bool)

(assert (=> d!45005 (isDefined!128 (getValueByKey!174 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!74357 () Unit!4393)

(assert (=> d!45005 (= lt!74357 (choose!871 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!92608 () Bool)

(assert (=> d!45005 e!92608))

(declare-fun res!67738 () Bool)

(assert (=> d!45005 (=> (not res!67738) (not e!92608))))

(assert (=> d!45005 (= res!67738 (isStrictlySorted!320 (toList!871 lt!73157)))))

(assert (=> d!45005 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74357)))

(declare-fun b!142136 () Bool)

(assert (=> b!142136 (= e!92608 (containsKey!178 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45005 res!67738) b!142136))

(assert (=> d!45005 m!166765))

(assert (=> d!45005 m!166765))

(assert (=> d!45005 m!168597))

(declare-fun m!170649 () Bool)

(assert (=> d!45005 m!170649))

(declare-fun m!170651 () Bool)

(assert (=> d!45005 m!170651))

(assert (=> b!142136 m!168593))

(assert (=> b!140995 d!45005))

(assert (=> b!140995 d!44853))

(assert (=> b!140995 d!44211))

(declare-fun d!45007 () Bool)

(declare-fun e!92610 () Bool)

(assert (=> d!45007 e!92610))

(declare-fun res!67739 () Bool)

(assert (=> d!45007 (=> res!67739 e!92610)))

(declare-fun lt!74361 () Bool)

(assert (=> d!45007 (= res!67739 (not lt!74361))))

(declare-fun lt!74360 () Bool)

(assert (=> d!45007 (= lt!74361 lt!74360)))

(declare-fun lt!74359 () Unit!4393)

(declare-fun e!92609 () Unit!4393)

(assert (=> d!45007 (= lt!74359 e!92609)))

(declare-fun c!26848 () Bool)

(assert (=> d!45007 (= c!26848 lt!74360)))

(assert (=> d!45007 (= lt!74360 (containsKey!178 (toList!871 lt!73548) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45007 (= (contains!910 lt!73548 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74361)))

(declare-fun b!142137 () Bool)

(declare-fun lt!74358 () Unit!4393)

(assert (=> b!142137 (= e!92609 lt!74358)))

(assert (=> b!142137 (= lt!74358 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73548) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142137 (isDefined!128 (getValueByKey!174 (toList!871 lt!73548) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142138 () Bool)

(declare-fun Unit!4488 () Unit!4393)

(assert (=> b!142138 (= e!92609 Unit!4488)))

(declare-fun b!142139 () Bool)

(assert (=> b!142139 (= e!92610 (isDefined!128 (getValueByKey!174 (toList!871 lt!73548) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45007 c!26848) b!142137))

(assert (= (and d!45007 (not c!26848)) b!142138))

(assert (= (and d!45007 (not res!67739)) b!142139))

(declare-fun m!170653 () Bool)

(assert (=> d!45007 m!170653))

(declare-fun m!170655 () Bool)

(assert (=> b!142137 m!170655))

(declare-fun m!170657 () Bool)

(assert (=> b!142137 m!170657))

(assert (=> b!142137 m!170657))

(declare-fun m!170659 () Bool)

(assert (=> b!142137 m!170659))

(assert (=> b!142139 m!170657))

(assert (=> b!142139 m!170657))

(assert (=> b!142139 m!170659))

(assert (=> d!43809 d!45007))

(assert (=> d!43809 d!43719))

(declare-fun d!45009 () Bool)

(declare-fun res!67740 () Bool)

(declare-fun e!92611 () Bool)

(assert (=> d!45009 (=> res!67740 e!92611)))

(assert (=> d!45009 (= res!67740 (and ((_ is Cons!1735) (toList!871 lt!73015)) (= (_1!1339 (h!2342 (toList!871 lt!73015))) lt!73021)))))

(assert (=> d!45009 (= (containsKey!178 (toList!871 lt!73015) lt!73021) e!92611)))

(declare-fun b!142140 () Bool)

(declare-fun e!92612 () Bool)

(assert (=> b!142140 (= e!92611 e!92612)))

(declare-fun res!67741 () Bool)

(assert (=> b!142140 (=> (not res!67741) (not e!92612))))

(assert (=> b!142140 (= res!67741 (and (or (not ((_ is Cons!1735) (toList!871 lt!73015))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73015))) lt!73021)) ((_ is Cons!1735) (toList!871 lt!73015)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73015))) lt!73021)))))

(declare-fun b!142141 () Bool)

(assert (=> b!142141 (= e!92612 (containsKey!178 (t!6314 (toList!871 lt!73015)) lt!73021))))

(assert (= (and d!45009 (not res!67740)) b!142140))

(assert (= (and b!142140 res!67741) b!142141))

(declare-fun m!170661 () Bool)

(assert (=> b!142141 m!170661))

(assert (=> d!43889 d!45009))

(declare-fun d!45011 () Bool)

(assert (=> d!45011 (= (isEmpty!421 lt!73601) (isEmpty!423 (toList!871 lt!73601)))))

(declare-fun bs!5967 () Bool)

(assert (= bs!5967 d!45011))

(declare-fun m!170663 () Bool)

(assert (=> bs!5967 m!170663))

(assert (=> b!140609 d!45011))

(declare-fun d!45013 () Bool)

(assert (=> d!45013 (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!73352 lt!73349)))

(assert (=> d!45013 true))

(declare-fun _$65!65 () Unit!4393)

(assert (=> d!45013 (= (choose!41 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) lt!73352 lt!73349) _$65!65)))

(declare-fun bs!5968 () Bool)

(assert (= bs!5968 d!45013))

(assert (=> bs!5968 m!167045))

(assert (=> bs!5968 m!167033))

(assert (=> d!44151 d!45013))

(declare-fun d!45015 () Bool)

(declare-fun res!67742 () Bool)

(declare-fun e!92613 () Bool)

(assert (=> d!45015 (=> res!67742 e!92613)))

(assert (=> d!45015 (= res!67742 (or ((_ is Nil!1736) lt!73675) ((_ is Nil!1736) (t!6314 lt!73675))))))

(assert (=> d!45015 (= (isStrictlySorted!320 lt!73675) e!92613)))

(declare-fun b!142142 () Bool)

(declare-fun e!92614 () Bool)

(assert (=> b!142142 (= e!92613 e!92614)))

(declare-fun res!67743 () Bool)

(assert (=> b!142142 (=> (not res!67743) (not e!92614))))

(assert (=> b!142142 (= res!67743 (bvslt (_1!1339 (h!2342 lt!73675)) (_1!1339 (h!2342 (t!6314 lt!73675)))))))

(declare-fun b!142143 () Bool)

(assert (=> b!142143 (= e!92614 (isStrictlySorted!320 (t!6314 lt!73675)))))

(assert (= (and d!45015 (not res!67742)) b!142142))

(assert (= (and b!142142 res!67743) b!142143))

(declare-fun m!170665 () Bool)

(assert (=> b!142143 m!170665))

(assert (=> d!43955 d!45015))

(declare-fun d!45017 () Bool)

(declare-fun res!67744 () Bool)

(declare-fun e!92615 () Bool)

(assert (=> d!45017 (=> res!67744 e!92615)))

(assert (=> d!45017 (= res!67744 (or ((_ is Nil!1736) (toList!871 e!91273)) ((_ is Nil!1736) (t!6314 (toList!871 e!91273)))))))

(assert (=> d!45017 (= (isStrictlySorted!320 (toList!871 e!91273)) e!92615)))

(declare-fun b!142144 () Bool)

(declare-fun e!92616 () Bool)

(assert (=> b!142144 (= e!92615 e!92616)))

(declare-fun res!67745 () Bool)

(assert (=> b!142144 (=> (not res!67745) (not e!92616))))

(assert (=> b!142144 (= res!67745 (bvslt (_1!1339 (h!2342 (toList!871 e!91273))) (_1!1339 (h!2342 (t!6314 (toList!871 e!91273))))))))

(declare-fun b!142145 () Bool)

(assert (=> b!142145 (= e!92616 (isStrictlySorted!320 (t!6314 (toList!871 e!91273))))))

(assert (= (and d!45017 (not res!67744)) b!142144))

(assert (= (and b!142144 res!67745) b!142145))

(declare-fun m!170667 () Bool)

(assert (=> b!142145 m!170667))

(assert (=> d!43955 d!45017))

(declare-fun d!45019 () Bool)

(assert (=> d!45019 (= (apply!120 lt!73441 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5969 () Bool)

(assert (= bs!5969 d!45019))

(declare-fun m!170669 () Bool)

(assert (=> bs!5969 m!170669))

(assert (=> bs!5969 m!170669))

(declare-fun m!170671 () Bool)

(assert (=> bs!5969 m!170671))

(assert (=> b!140393 d!45019))

(declare-fun d!45021 () Bool)

(assert (=> d!45021 (= (get!1528 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43959 d!45021))

(declare-fun b!142149 () Bool)

(declare-fun e!92618 () Option!180)

(assert (=> b!142149 (= e!92618 None!178)))

(declare-fun b!142147 () Bool)

(declare-fun e!92617 () Option!180)

(assert (=> b!142147 (= e!92617 e!92618)))

(declare-fun c!26850 () Bool)

(assert (=> b!142147 (= c!26850 (and ((_ is Cons!1735) (toList!871 lt!73197)) (not (= (_1!1339 (h!2342 (toList!871 lt!73197))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142146 () Bool)

(assert (=> b!142146 (= e!92617 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73197)))))))

(declare-fun d!45023 () Bool)

(declare-fun c!26849 () Bool)

(assert (=> d!45023 (= c!26849 (and ((_ is Cons!1735) (toList!871 lt!73197)) (= (_1!1339 (h!2342 (toList!871 lt!73197))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45023 (= (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000) e!92617)))

(declare-fun b!142148 () Bool)

(assert (=> b!142148 (= e!92618 (getValueByKey!174 (t!6314 (toList!871 lt!73197)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45023 c!26849) b!142146))

(assert (= (and d!45023 (not c!26849)) b!142147))

(assert (= (and b!142147 c!26850) b!142148))

(assert (= (and b!142147 (not c!26850)) b!142149))

(declare-fun m!170673 () Bool)

(assert (=> b!142148 m!170673))

(assert (=> d!43959 d!45023))

(declare-fun d!45025 () Bool)

(assert (=> d!45025 (= (get!1528 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3279 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43991 d!45025))

(declare-fun b!142153 () Bool)

(declare-fun e!92620 () Option!180)

(assert (=> b!142153 (= e!92620 None!178)))

(declare-fun b!142151 () Bool)

(declare-fun e!92619 () Option!180)

(assert (=> b!142151 (= e!92619 e!92620)))

(declare-fun c!26852 () Bool)

(assert (=> b!142151 (= c!26852 (and ((_ is Cons!1735) (toList!871 lt!73266)) (not (= (_1!1339 (h!2342 (toList!871 lt!73266))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!142150 () Bool)

(assert (=> b!142150 (= e!92619 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73266)))))))

(declare-fun c!26851 () Bool)

(declare-fun d!45027 () Bool)

(assert (=> d!45027 (= c!26851 (and ((_ is Cons!1735) (toList!871 lt!73266)) (= (_1!1339 (h!2342 (toList!871 lt!73266))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45027 (= (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92619)))

(declare-fun b!142152 () Bool)

(assert (=> b!142152 (= e!92620 (getValueByKey!174 (t!6314 (toList!871 lt!73266)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45027 c!26851) b!142150))

(assert (= (and d!45027 (not c!26851)) b!142151))

(assert (= (and b!142151 c!26852) b!142152))

(assert (= (and b!142151 (not c!26852)) b!142153))

(assert (=> b!142152 m!166533))

(declare-fun m!170675 () Bool)

(assert (=> b!142152 m!170675))

(assert (=> d!43991 d!45027))

(declare-fun b!142157 () Bool)

(declare-fun e!92622 () Option!180)

(assert (=> b!142157 (= e!92622 None!178)))

(declare-fun b!142155 () Bool)

(declare-fun e!92621 () Option!180)

(assert (=> b!142155 (= e!92621 e!92622)))

(declare-fun c!26854 () Bool)

(assert (=> b!142155 (= c!26854 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73401))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73401)))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142154 () Bool)

(assert (=> b!142154 (= e!92621 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73401))))))))

(declare-fun d!45029 () Bool)

(declare-fun c!26853 () Bool)

(assert (=> d!45029 (= c!26853 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73401))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73401)))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45029 (= (getValueByKey!174 (t!6314 (toList!871 lt!73401)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92621)))

(declare-fun b!142156 () Bool)

(assert (=> b!142156 (= e!92622 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73401))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45029 c!26853) b!142154))

(assert (= (and d!45029 (not c!26853)) b!142155))

(assert (= (and b!142155 c!26854) b!142156))

(assert (= (and b!142155 (not c!26854)) b!142157))

(declare-fun m!170677 () Bool)

(assert (=> b!142156 m!170677))

(assert (=> b!140571 d!45029))

(declare-fun lt!74362 () Bool)

(declare-fun d!45031 () Bool)

(assert (=> d!45031 (= lt!74362 (select (content!137 (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!92623 () Bool)

(assert (=> d!45031 (= lt!74362 e!92623)))

(declare-fun res!67747 () Bool)

(assert (=> d!45031 (=> (not res!67747) (not e!92623))))

(assert (=> d!45031 (= res!67747 ((_ is Cons!1736) (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))))))

(assert (=> d!45031 (= (contains!913 (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!74362)))

(declare-fun b!142158 () Bool)

(declare-fun e!92624 () Bool)

(assert (=> b!142158 (= e!92623 e!92624)))

(declare-fun res!67746 () Bool)

(assert (=> b!142158 (=> res!67746 e!92624)))

(assert (=> b!142158 (= res!67746 (= (h!2343 (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142159 () Bool)

(assert (=> b!142159 (= e!92624 (contains!913 (t!6315 (ite c!26298 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!45031 res!67747) b!142158))

(assert (= (and b!142158 (not res!67746)) b!142159))

(declare-fun m!170679 () Bool)

(assert (=> d!45031 m!170679))

(assert (=> d!45031 m!167951))

(declare-fun m!170681 () Bool)

(assert (=> d!45031 m!170681))

(assert (=> b!142159 m!167951))

(declare-fun m!170683 () Bool)

(assert (=> b!142159 m!170683))

(assert (=> b!140683 d!45031))

(assert (=> bm!15575 d!44525))

(declare-fun d!45033 () Bool)

(declare-fun e!92625 () Bool)

(assert (=> d!45033 e!92625))

(declare-fun res!67749 () Bool)

(assert (=> d!45033 (=> (not res!67749) (not e!92625))))

(declare-fun lt!74365 () ListLongMap!1711)

(assert (=> d!45033 (= res!67749 (contains!910 lt!74365 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))

(declare-fun lt!74366 () List!1739)

(assert (=> d!45033 (= lt!74365 (ListLongMap!1712 lt!74366))))

(declare-fun lt!74363 () Unit!4393)

(declare-fun lt!74364 () Unit!4393)

(assert (=> d!45033 (= lt!74363 lt!74364)))

(assert (=> d!45033 (= (getValueByKey!174 lt!74366 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45033 (= lt!74364 (lemmaContainsTupThenGetReturnValue!91 lt!74366 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45033 (= lt!74366 (insertStrictlySorted!94 (toList!871 call!15573) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45033 (= (+!167 call!15573 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))) lt!74365)))

(declare-fun b!142160 () Bool)

(declare-fun res!67748 () Bool)

(assert (=> b!142160 (=> (not res!67748) (not e!92625))))

(assert (=> b!142160 (= res!67748 (= (getValueByKey!174 (toList!871 lt!74365) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))))

(declare-fun b!142161 () Bool)

(assert (=> b!142161 (= e!92625 (contains!914 (toList!871 lt!74365) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))

(assert (= (and d!45033 res!67749) b!142160))

(assert (= (and b!142160 res!67748) b!142161))

(declare-fun m!170685 () Bool)

(assert (=> d!45033 m!170685))

(declare-fun m!170687 () Bool)

(assert (=> d!45033 m!170687))

(declare-fun m!170689 () Bool)

(assert (=> d!45033 m!170689))

(declare-fun m!170691 () Bool)

(assert (=> d!45033 m!170691))

(declare-fun m!170693 () Bool)

(assert (=> b!142160 m!170693))

(declare-fun m!170695 () Bool)

(assert (=> b!142161 m!170695))

(assert (=> b!140480 d!45033))

(declare-fun d!45035 () Bool)

(declare-fun res!67750 () Bool)

(declare-fun e!92626 () Bool)

(assert (=> d!45035 (=> res!67750 e!92626)))

(assert (=> d!45035 (= res!67750 (and ((_ is Cons!1735) (toList!871 lt!73197)) (= (_1!1339 (h!2342 (toList!871 lt!73197))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45035 (= (containsKey!178 (toList!871 lt!73197) #b0000000000000000000000000000000000000000000000000000000000000000) e!92626)))

(declare-fun b!142162 () Bool)

(declare-fun e!92627 () Bool)

(assert (=> b!142162 (= e!92626 e!92627)))

(declare-fun res!67751 () Bool)

(assert (=> b!142162 (=> (not res!67751) (not e!92627))))

(assert (=> b!142162 (= res!67751 (and (or (not ((_ is Cons!1735) (toList!871 lt!73197))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73197))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73197)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73197))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142163 () Bool)

(assert (=> b!142163 (= e!92627 (containsKey!178 (t!6314 (toList!871 lt!73197)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45035 (not res!67750)) b!142162))

(assert (= (and b!142162 res!67751) b!142163))

(declare-fun m!170697 () Bool)

(assert (=> b!142163 m!170697))

(assert (=> d!44025 d!45035))

(declare-fun d!45037 () Bool)

(assert (=> d!45037 (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74367 () Unit!4393)

(assert (=> d!45037 (= lt!74367 (choose!871 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92628 () Bool)

(assert (=> d!45037 e!92628))

(declare-fun res!67752 () Bool)

(assert (=> d!45037 (=> (not res!67752) (not e!92628))))

(assert (=> d!45037 (= res!67752 (isStrictlySorted!320 (toList!871 lt!73197)))))

(assert (=> d!45037 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74367)))

(declare-fun b!142164 () Bool)

(assert (=> b!142164 (= e!92628 (containsKey!178 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45037 res!67752) b!142164))

(assert (=> d!45037 m!167519))

(assert (=> d!45037 m!167519))

(assert (=> d!45037 m!167521))

(declare-fun m!170699 () Bool)

(assert (=> d!45037 m!170699))

(assert (=> d!45037 m!169119))

(assert (=> b!142164 m!167515))

(assert (=> b!140466 d!45037))

(declare-fun d!45039 () Bool)

(assert (=> d!45039 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73197) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5970 () Bool)

(assert (= bs!5970 d!45039))

(assert (=> bs!5970 m!167519))

(declare-fun m!170701 () Bool)

(assert (=> bs!5970 m!170701))

(assert (=> b!140466 d!45039))

(assert (=> b!140466 d!45023))

(declare-fun d!45041 () Bool)

(declare-fun e!92630 () Bool)

(assert (=> d!45041 e!92630))

(declare-fun res!67753 () Bool)

(assert (=> d!45041 (=> res!67753 e!92630)))

(declare-fun lt!74371 () Bool)

(assert (=> d!45041 (= res!67753 (not lt!74371))))

(declare-fun lt!74370 () Bool)

(assert (=> d!45041 (= lt!74371 lt!74370)))

(declare-fun lt!74369 () Unit!4393)

(declare-fun e!92629 () Unit!4393)

(assert (=> d!45041 (= lt!74369 e!92629)))

(declare-fun c!26855 () Bool)

(assert (=> d!45041 (= c!26855 lt!74370)))

(assert (=> d!45041 (= lt!74370 (containsKey!178 (toList!871 lt!73609) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45041 (= (contains!910 lt!73609 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!74371)))

(declare-fun b!142165 () Bool)

(declare-fun lt!74368 () Unit!4393)

(assert (=> b!142165 (= e!92629 lt!74368)))

(assert (=> b!142165 (= lt!74368 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73609) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (=> b!142165 (isDefined!128 (getValueByKey!174 (toList!871 lt!73609) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142166 () Bool)

(declare-fun Unit!4489 () Unit!4393)

(assert (=> b!142166 (= e!92629 Unit!4489)))

(declare-fun b!142167 () Bool)

(assert (=> b!142167 (= e!92630 (isDefined!128 (getValueByKey!174 (toList!871 lt!73609) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45041 c!26855) b!142165))

(assert (= (and d!45041 (not c!26855)) b!142166))

(assert (= (and d!45041 (not res!67753)) b!142167))

(declare-fun m!170703 () Bool)

(assert (=> d!45041 m!170703))

(declare-fun m!170705 () Bool)

(assert (=> b!142165 m!170705))

(assert (=> b!142165 m!167835))

(assert (=> b!142165 m!167835))

(declare-fun m!170707 () Bool)

(assert (=> b!142165 m!170707))

(assert (=> b!142167 m!167835))

(assert (=> b!142167 m!167835))

(assert (=> b!142167 m!170707))

(assert (=> d!43869 d!45041))

(declare-fun b!142171 () Bool)

(declare-fun e!92632 () Option!180)

(assert (=> b!142171 (= e!92632 None!178)))

(declare-fun b!142169 () Bool)

(declare-fun e!92631 () Option!180)

(assert (=> b!142169 (= e!92631 e!92632)))

(declare-fun c!26857 () Bool)

(assert (=> b!142169 (= c!26857 (and ((_ is Cons!1735) lt!73610) (not (= (_1!1339 (h!2342 lt!73610)) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142168 () Bool)

(assert (=> b!142168 (= e!92631 (Some!179 (_2!1339 (h!2342 lt!73610))))))

(declare-fun c!26856 () Bool)

(declare-fun d!45043 () Bool)

(assert (=> d!45043 (= c!26856 (and ((_ is Cons!1735) lt!73610) (= (_1!1339 (h!2342 lt!73610)) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45043 (= (getValueByKey!174 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) e!92631)))

(declare-fun b!142170 () Bool)

(assert (=> b!142170 (= e!92632 (getValueByKey!174 (t!6314 lt!73610) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!45043 c!26856) b!142168))

(assert (= (and d!45043 (not c!26856)) b!142169))

(assert (= (and b!142169 c!26857) b!142170))

(assert (= (and b!142169 (not c!26857)) b!142171))

(declare-fun m!170709 () Bool)

(assert (=> b!142170 m!170709))

(assert (=> d!43869 d!45043))

(declare-fun d!45045 () Bool)

(assert (=> d!45045 (= (getValueByKey!174 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74372 () Unit!4393)

(assert (=> d!45045 (= lt!74372 (choose!872 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92633 () Bool)

(assert (=> d!45045 e!92633))

(declare-fun res!67754 () Bool)

(assert (=> d!45045 (=> (not res!67754) (not e!92633))))

(assert (=> d!45045 (= res!67754 (isStrictlySorted!320 lt!73610))))

(assert (=> d!45045 (= (lemmaContainsTupThenGetReturnValue!91 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!74372)))

(declare-fun b!142172 () Bool)

(declare-fun res!67755 () Bool)

(assert (=> b!142172 (=> (not res!67755) (not e!92633))))

(assert (=> b!142172 (= res!67755 (containsKey!178 lt!73610 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142173 () Bool)

(assert (=> b!142173 (= e!92633 (contains!914 lt!73610 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45045 res!67754) b!142172))

(assert (= (and b!142172 res!67755) b!142173))

(assert (=> d!45045 m!167829))

(declare-fun m!170711 () Bool)

(assert (=> d!45045 m!170711))

(declare-fun m!170713 () Bool)

(assert (=> d!45045 m!170713))

(declare-fun m!170715 () Bool)

(assert (=> b!142172 m!170715))

(declare-fun m!170717 () Bool)

(assert (=> b!142173 m!170717))

(assert (=> d!43869 d!45045))

(declare-fun b!142174 () Bool)

(declare-fun e!92636 () List!1739)

(declare-fun call!15717 () List!1739)

(assert (=> b!142174 (= e!92636 call!15717)))

(declare-fun b!142175 () Bool)

(declare-fun e!92634 () List!1739)

(declare-fun call!15716 () List!1739)

(assert (=> b!142175 (= e!92634 call!15716)))

(declare-fun lt!74373 () List!1739)

(declare-fun b!142176 () Bool)

(declare-fun e!92637 () Bool)

(assert (=> b!142176 (= e!92637 (contains!914 lt!74373 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(declare-fun bm!15712 () Bool)

(declare-fun c!26861 () Bool)

(declare-fun e!92635 () List!1739)

(assert (=> bm!15712 (= call!15717 ($colon$colon!93 e!92635 (ite c!26861 (h!2342 (toList!871 lt!73195)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26858 () Bool)

(assert (=> bm!15712 (= c!26858 c!26861)))

(declare-fun bm!15713 () Bool)

(declare-fun call!15715 () List!1739)

(assert (=> bm!15713 (= call!15716 call!15715)))

(declare-fun b!142177 () Bool)

(declare-fun res!67756 () Bool)

(assert (=> b!142177 (=> (not res!67756) (not e!92637))))

(assert (=> b!142177 (= res!67756 (containsKey!178 lt!74373 (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun d!45047 () Bool)

(assert (=> d!45047 e!92637))

(declare-fun res!67757 () Bool)

(assert (=> d!45047 (=> (not res!67757) (not e!92637))))

(assert (=> d!45047 (= res!67757 (isStrictlySorted!320 lt!74373))))

(assert (=> d!45047 (= lt!74373 e!92636)))

(assert (=> d!45047 (= c!26861 (and ((_ is Cons!1735) (toList!871 lt!73195)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73195))) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45047 (isStrictlySorted!320 (toList!871 lt!73195))))

(assert (=> d!45047 (= (insertStrictlySorted!94 (toList!871 lt!73195) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))) lt!74373)))

(declare-fun b!142178 () Bool)

(declare-fun c!26860 () Bool)

(declare-fun c!26859 () Bool)

(assert (=> b!142178 (= e!92635 (ite c!26860 (t!6314 (toList!871 lt!73195)) (ite c!26859 (Cons!1735 (h!2342 (toList!871 lt!73195)) (t!6314 (toList!871 lt!73195))) Nil!1736)))))

(declare-fun b!142179 () Bool)

(assert (=> b!142179 (= c!26859 (and ((_ is Cons!1735) (toList!871 lt!73195)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73195))) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92638 () List!1739)

(assert (=> b!142179 (= e!92638 e!92634)))

(declare-fun b!142180 () Bool)

(assert (=> b!142180 (= e!92634 call!15716)))

(declare-fun b!142181 () Bool)

(assert (=> b!142181 (= e!92635 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73195)) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16)))))))

(declare-fun bm!15714 () Bool)

(assert (=> bm!15714 (= call!15715 call!15717)))

(declare-fun b!142182 () Bool)

(assert (=> b!142182 (= e!92636 e!92638)))

(assert (=> b!142182 (= c!26860 (and ((_ is Cons!1735) (toList!871 lt!73195)) (= (_1!1339 (h!2342 (toList!871 lt!73195))) (_1!1339 (tuple2!2657 lt!73204 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142183 () Bool)

(assert (=> b!142183 (= e!92638 call!15715)))

(assert (= (and d!45047 c!26861) b!142174))

(assert (= (and d!45047 (not c!26861)) b!142182))

(assert (= (and b!142182 c!26860) b!142183))

(assert (= (and b!142182 (not c!26860)) b!142179))

(assert (= (and b!142179 c!26859) b!142175))

(assert (= (and b!142179 (not c!26859)) b!142180))

(assert (= (or b!142175 b!142180) bm!15713))

(assert (= (or b!142183 bm!15713) bm!15714))

(assert (= (or b!142174 bm!15714) bm!15712))

(assert (= (and bm!15712 c!26858) b!142181))

(assert (= (and bm!15712 (not c!26858)) b!142178))

(assert (= (and d!45047 res!67757) b!142177))

(assert (= (and b!142177 res!67756) b!142176))

(declare-fun m!170719 () Bool)

(assert (=> b!142177 m!170719))

(declare-fun m!170721 () Bool)

(assert (=> b!142181 m!170721))

(declare-fun m!170723 () Bool)

(assert (=> bm!15712 m!170723))

(declare-fun m!170725 () Bool)

(assert (=> b!142176 m!170725))

(declare-fun m!170727 () Bool)

(assert (=> d!45047 m!170727))

(declare-fun m!170729 () Bool)

(assert (=> d!45047 m!170729))

(assert (=> d!43869 d!45047))

(assert (=> bm!15564 d!44509))

(declare-fun d!45049 () Bool)

(assert (=> d!45049 (= (apply!120 lt!73863 lt!73858) (get!1528 (getValueByKey!174 (toList!871 lt!73863) lt!73858)))))

(declare-fun bs!5971 () Bool)

(assert (= bs!5971 d!45049))

(declare-fun m!170731 () Bool)

(assert (=> bs!5971 m!170731))

(assert (=> bs!5971 m!170731))

(declare-fun m!170733 () Bool)

(assert (=> bs!5971 m!170733))

(assert (=> b!141040 d!45049))

(declare-fun d!45051 () Bool)

(assert (=> d!45051 (= (apply!120 (+!167 lt!73852 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))) lt!73859) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73852 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))) lt!73859)))))

(declare-fun bs!5972 () Bool)

(assert (= bs!5972 d!45051))

(declare-fun m!170735 () Bool)

(assert (=> bs!5972 m!170735))

(assert (=> bs!5972 m!170735))

(declare-fun m!170737 () Bool)

(assert (=> bs!5972 m!170737))

(assert (=> b!141040 d!45051))

(declare-fun d!45053 () Bool)

(declare-fun e!92639 () Bool)

(assert (=> d!45053 e!92639))

(declare-fun res!67759 () Bool)

(assert (=> d!45053 (=> (not res!67759) (not e!92639))))

(declare-fun lt!74376 () ListLongMap!1711)

(assert (=> d!45053 (= res!67759 (contains!910 lt!74376 (_1!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74377 () List!1739)

(assert (=> d!45053 (= lt!74376 (ListLongMap!1712 lt!74377))))

(declare-fun lt!74374 () Unit!4393)

(declare-fun lt!74375 () Unit!4393)

(assert (=> d!45053 (= lt!74374 lt!74375)))

(assert (=> d!45053 (= (getValueByKey!174 lt!74377 (_1!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45053 (= lt!74375 (lemmaContainsTupThenGetReturnValue!91 lt!74377 (_1!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45053 (= lt!74377 (insertStrictlySorted!94 (toList!871 lt!73848) (_1!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45053 (= (+!167 lt!73848 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))) lt!74376)))

(declare-fun b!142184 () Bool)

(declare-fun res!67758 () Bool)

(assert (=> b!142184 (=> (not res!67758) (not e!92639))))

(assert (=> b!142184 (= res!67758 (= (getValueByKey!174 (toList!871 lt!74376) (_1!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142185 () Bool)

(assert (=> b!142185 (= e!92639 (contains!914 (toList!871 lt!74376) (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45053 res!67759) b!142184))

(assert (= (and b!142184 res!67758) b!142185))

(declare-fun m!170739 () Bool)

(assert (=> d!45053 m!170739))

(declare-fun m!170741 () Bool)

(assert (=> d!45053 m!170741))

(declare-fun m!170743 () Bool)

(assert (=> d!45053 m!170743))

(declare-fun m!170745 () Bool)

(assert (=> d!45053 m!170745))

(declare-fun m!170747 () Bool)

(assert (=> b!142184 m!170747))

(declare-fun m!170749 () Bool)

(assert (=> b!142185 m!170749))

(assert (=> b!141040 d!45053))

(declare-fun d!45055 () Bool)

(assert (=> d!45055 (= (apply!120 (+!167 lt!73848 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))) lt!73867) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73848 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16)))) lt!73867)))))

(declare-fun bs!5973 () Bool)

(assert (= bs!5973 d!45055))

(declare-fun m!170751 () Bool)

(assert (=> bs!5973 m!170751))

(assert (=> bs!5973 m!170751))

(declare-fun m!170753 () Bool)

(assert (=> bs!5973 m!170753))

(assert (=> b!141040 d!45055))

(declare-fun d!45057 () Bool)

(declare-fun e!92640 () Bool)

(assert (=> d!45057 e!92640))

(declare-fun res!67761 () Bool)

(assert (=> d!45057 (=> (not res!67761) (not e!92640))))

(declare-fun lt!74380 () ListLongMap!1711)

(assert (=> d!45057 (= res!67761 (contains!910 lt!74380 (_1!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74381 () List!1739)

(assert (=> d!45057 (= lt!74380 (ListLongMap!1712 lt!74381))))

(declare-fun lt!74378 () Unit!4393)

(declare-fun lt!74379 () Unit!4393)

(assert (=> d!45057 (= lt!74378 lt!74379)))

(assert (=> d!45057 (= (getValueByKey!174 lt!74381 (_1!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45057 (= lt!74379 (lemmaContainsTupThenGetReturnValue!91 lt!74381 (_1!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45057 (= lt!74381 (insertStrictlySorted!94 (toList!871 lt!73862) (_1!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45057 (= (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))) lt!74380)))

(declare-fun b!142186 () Bool)

(declare-fun res!67760 () Bool)

(assert (=> b!142186 (=> (not res!67760) (not e!92640))))

(assert (=> b!142186 (= res!67760 (= (getValueByKey!174 (toList!871 lt!74380) (_1!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142187 () Bool)

(assert (=> b!142187 (= e!92640 (contains!914 (toList!871 lt!74380) (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45057 res!67761) b!142186))

(assert (= (and b!142186 res!67760) b!142187))

(declare-fun m!170755 () Bool)

(assert (=> d!45057 m!170755))

(declare-fun m!170757 () Bool)

(assert (=> d!45057 m!170757))

(declare-fun m!170759 () Bool)

(assert (=> d!45057 m!170759))

(declare-fun m!170761 () Bool)

(assert (=> d!45057 m!170761))

(declare-fun m!170763 () Bool)

(assert (=> b!142186 m!170763))

(declare-fun m!170765 () Bool)

(assert (=> b!142187 m!170765))

(assert (=> b!141040 d!45057))

(declare-fun d!45059 () Bool)

(declare-fun e!92641 () Bool)

(assert (=> d!45059 e!92641))

(declare-fun res!67763 () Bool)

(assert (=> d!45059 (=> (not res!67763) (not e!92641))))

(declare-fun lt!74384 () ListLongMap!1711)

(assert (=> d!45059 (= res!67763 (contains!910 lt!74384 (_1!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))))))

(declare-fun lt!74385 () List!1739)

(assert (=> d!45059 (= lt!74384 (ListLongMap!1712 lt!74385))))

(declare-fun lt!74382 () Unit!4393)

(declare-fun lt!74383 () Unit!4393)

(assert (=> d!45059 (= lt!74382 lt!74383)))

(assert (=> d!45059 (= (getValueByKey!174 lt!74385 (_1!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))))))

(assert (=> d!45059 (= lt!74383 (lemmaContainsTupThenGetReturnValue!91 lt!74385 (_1!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))))))

(assert (=> d!45059 (= lt!74385 (insertStrictlySorted!94 (toList!871 lt!73863) (_1!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))))))

(assert (=> d!45059 (= (+!167 lt!73863 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))) lt!74384)))

(declare-fun b!142188 () Bool)

(declare-fun res!67762 () Bool)

(assert (=> b!142188 (=> (not res!67762) (not e!92641))))

(assert (=> b!142188 (= res!67762 (= (getValueByKey!174 (toList!871 lt!74384) (_1!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))))))))

(declare-fun b!142189 () Bool)

(assert (=> b!142189 (= e!92641 (contains!914 (toList!871 lt!74384) (tuple2!2657 lt!73861 (minValue!2789 newMap!16))))))

(assert (= (and d!45059 res!67763) b!142188))

(assert (= (and b!142188 res!67762) b!142189))

(declare-fun m!170767 () Bool)

(assert (=> d!45059 m!170767))

(declare-fun m!170769 () Bool)

(assert (=> d!45059 m!170769))

(declare-fun m!170771 () Bool)

(assert (=> d!45059 m!170771))

(declare-fun m!170773 () Bool)

(assert (=> d!45059 m!170773))

(declare-fun m!170775 () Bool)

(assert (=> b!142188 m!170775))

(declare-fun m!170777 () Bool)

(assert (=> b!142189 m!170777))

(assert (=> b!141040 d!45059))

(declare-fun d!45061 () Bool)

(assert (=> d!45061 (= (apply!120 (+!167 lt!73863 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))) lt!73858) (apply!120 lt!73863 lt!73858))))

(declare-fun lt!74386 () Unit!4393)

(assert (=> d!45061 (= lt!74386 (choose!869 lt!73863 lt!73861 (minValue!2789 newMap!16) lt!73858))))

(declare-fun e!92642 () Bool)

(assert (=> d!45061 e!92642))

(declare-fun res!67764 () Bool)

(assert (=> d!45061 (=> (not res!67764) (not e!92642))))

(assert (=> d!45061 (= res!67764 (contains!910 lt!73863 lt!73858))))

(assert (=> d!45061 (= (addApplyDifferent!96 lt!73863 lt!73861 (minValue!2789 newMap!16) lt!73858) lt!74386)))

(declare-fun b!142190 () Bool)

(assert (=> b!142190 (= e!92642 (not (= lt!73858 lt!73861)))))

(assert (= (and d!45061 res!67764) b!142190))

(assert (=> d!45061 m!168675))

(assert (=> d!45061 m!168675))

(assert (=> d!45061 m!168687))

(declare-fun m!170779 () Bool)

(assert (=> d!45061 m!170779))

(assert (=> d!45061 m!168667))

(declare-fun m!170781 () Bool)

(assert (=> d!45061 m!170781))

(assert (=> b!141040 d!45061))

(declare-fun d!45063 () Bool)

(assert (=> d!45063 (= (apply!120 lt!73852 lt!73859) (get!1528 (getValueByKey!174 (toList!871 lt!73852) lt!73859)))))

(declare-fun bs!5974 () Bool)

(assert (= bs!5974 d!45063))

(declare-fun m!170783 () Bool)

(assert (=> bs!5974 m!170783))

(assert (=> bs!5974 m!170783))

(declare-fun m!170785 () Bool)

(assert (=> bs!5974 m!170785))

(assert (=> b!141040 d!45063))

(declare-fun d!45065 () Bool)

(assert (=> d!45065 (= (apply!120 (+!167 lt!73848 (tuple2!2657 lt!73857 (zeroValue!2789 newMap!16))) lt!73867) (apply!120 lt!73848 lt!73867))))

(declare-fun lt!74387 () Unit!4393)

(assert (=> d!45065 (= lt!74387 (choose!869 lt!73848 lt!73857 (zeroValue!2789 newMap!16) lt!73867))))

(declare-fun e!92643 () Bool)

(assert (=> d!45065 e!92643))

(declare-fun res!67765 () Bool)

(assert (=> d!45065 (=> (not res!67765) (not e!92643))))

(assert (=> d!45065 (= res!67765 (contains!910 lt!73848 lt!73867))))

(assert (=> d!45065 (= (addApplyDifferent!96 lt!73848 lt!73857 (zeroValue!2789 newMap!16) lt!73867) lt!74387)))

(declare-fun b!142191 () Bool)

(assert (=> b!142191 (= e!92643 (not (= lt!73867 lt!73857)))))

(assert (= (and d!45065 res!67765) b!142191))

(assert (=> d!45065 m!168683))

(assert (=> d!45065 m!168683))

(assert (=> d!45065 m!168685))

(declare-fun m!170787 () Bool)

(assert (=> d!45065 m!170787))

(assert (=> d!45065 m!168689))

(declare-fun m!170789 () Bool)

(assert (=> d!45065 m!170789))

(assert (=> b!141040 d!45065))

(assert (=> b!141040 d!44455))

(declare-fun d!45067 () Bool)

(assert (=> d!45067 (= (apply!120 lt!73848 lt!73867) (get!1528 (getValueByKey!174 (toList!871 lt!73848) lt!73867)))))

(declare-fun bs!5975 () Bool)

(assert (= bs!5975 d!45067))

(declare-fun m!170791 () Bool)

(assert (=> bs!5975 m!170791))

(assert (=> bs!5975 m!170791))

(declare-fun m!170793 () Bool)

(assert (=> bs!5975 m!170793))

(assert (=> b!141040 d!45067))

(declare-fun d!45069 () Bool)

(assert (=> d!45069 (= (apply!120 (+!167 lt!73863 (tuple2!2657 lt!73861 (minValue!2789 newMap!16))) lt!73858) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73863 (tuple2!2657 lt!73861 (minValue!2789 newMap!16)))) lt!73858)))))

(declare-fun bs!5976 () Bool)

(assert (= bs!5976 d!45069))

(declare-fun m!170795 () Bool)

(assert (=> bs!5976 m!170795))

(assert (=> bs!5976 m!170795))

(declare-fun m!170797 () Bool)

(assert (=> bs!5976 m!170797))

(assert (=> b!141040 d!45069))

(declare-fun d!45071 () Bool)

(declare-fun e!92645 () Bool)

(assert (=> d!45071 e!92645))

(declare-fun res!67766 () Bool)

(assert (=> d!45071 (=> res!67766 e!92645)))

(declare-fun lt!74391 () Bool)

(assert (=> d!45071 (= res!67766 (not lt!74391))))

(declare-fun lt!74390 () Bool)

(assert (=> d!45071 (= lt!74391 lt!74390)))

(declare-fun lt!74389 () Unit!4393)

(declare-fun e!92644 () Unit!4393)

(assert (=> d!45071 (= lt!74389 e!92644)))

(declare-fun c!26862 () Bool)

(assert (=> d!45071 (= c!26862 lt!74390)))

(assert (=> d!45071 (= lt!74390 (containsKey!178 (toList!871 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))) lt!73868))))

(assert (=> d!45071 (= (contains!910 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))) lt!73868) lt!74391)))

(declare-fun b!142192 () Bool)

(declare-fun lt!74388 () Unit!4393)

(assert (=> b!142192 (= e!92644 lt!74388)))

(assert (=> b!142192 (= lt!74388 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))) lt!73868))))

(assert (=> b!142192 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))) lt!73868))))

(declare-fun b!142193 () Bool)

(declare-fun Unit!4490 () Unit!4393)

(assert (=> b!142193 (= e!92644 Unit!4490)))

(declare-fun b!142194 () Bool)

(assert (=> b!142194 (= e!92645 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16)))) lt!73868)))))

(assert (= (and d!45071 c!26862) b!142192))

(assert (= (and d!45071 (not c!26862)) b!142193))

(assert (= (and d!45071 (not res!67766)) b!142194))

(declare-fun m!170799 () Bool)

(assert (=> d!45071 m!170799))

(declare-fun m!170801 () Bool)

(assert (=> b!142192 m!170801))

(declare-fun m!170803 () Bool)

(assert (=> b!142192 m!170803))

(assert (=> b!142192 m!170803))

(declare-fun m!170805 () Bool)

(assert (=> b!142192 m!170805))

(assert (=> b!142194 m!170803))

(assert (=> b!142194 m!170803))

(assert (=> b!142194 m!170805))

(assert (=> b!141040 d!45071))

(declare-fun d!45073 () Bool)

(assert (=> d!45073 (= (apply!120 (+!167 lt!73852 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))) lt!73859) (apply!120 lt!73852 lt!73859))))

(declare-fun lt!74392 () Unit!4393)

(assert (=> d!45073 (= lt!74392 (choose!869 lt!73852 lt!73864 (minValue!2789 newMap!16) lt!73859))))

(declare-fun e!92646 () Bool)

(assert (=> d!45073 e!92646))

(declare-fun res!67767 () Bool)

(assert (=> d!45073 (=> (not res!67767) (not e!92646))))

(assert (=> d!45073 (= res!67767 (contains!910 lt!73852 lt!73859))))

(assert (=> d!45073 (= (addApplyDifferent!96 lt!73852 lt!73864 (minValue!2789 newMap!16) lt!73859) lt!74392)))

(declare-fun b!142195 () Bool)

(assert (=> b!142195 (= e!92646 (not (= lt!73859 lt!73864)))))

(assert (= (and d!45073 res!67767) b!142195))

(assert (=> d!45073 m!168679))

(assert (=> d!45073 m!168679))

(assert (=> d!45073 m!168681))

(declare-fun m!170807 () Bool)

(assert (=> d!45073 m!170807))

(assert (=> d!45073 m!168665))

(declare-fun m!170809 () Bool)

(assert (=> d!45073 m!170809))

(assert (=> b!141040 d!45073))

(declare-fun d!45075 () Bool)

(assert (=> d!45075 (contains!910 (+!167 lt!73862 (tuple2!2657 lt!73851 (zeroValue!2789 newMap!16))) lt!73868)))

(declare-fun lt!74393 () Unit!4393)

(assert (=> d!45075 (= lt!74393 (choose!870 lt!73862 lt!73851 (zeroValue!2789 newMap!16) lt!73868))))

(assert (=> d!45075 (contains!910 lt!73862 lt!73868)))

(assert (=> d!45075 (= (addStillContains!96 lt!73862 lt!73851 (zeroValue!2789 newMap!16) lt!73868) lt!74393)))

(declare-fun bs!5977 () Bool)

(assert (= bs!5977 d!45075))

(assert (=> bs!5977 m!168671))

(assert (=> bs!5977 m!168671))

(assert (=> bs!5977 m!168677))

(declare-fun m!170811 () Bool)

(assert (=> bs!5977 m!170811))

(declare-fun m!170813 () Bool)

(assert (=> bs!5977 m!170813))

(assert (=> b!141040 d!45075))

(declare-fun d!45077 () Bool)

(declare-fun e!92647 () Bool)

(assert (=> d!45077 e!92647))

(declare-fun res!67769 () Bool)

(assert (=> d!45077 (=> (not res!67769) (not e!92647))))

(declare-fun lt!74396 () ListLongMap!1711)

(assert (=> d!45077 (= res!67769 (contains!910 lt!74396 (_1!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))))))

(declare-fun lt!74397 () List!1739)

(assert (=> d!45077 (= lt!74396 (ListLongMap!1712 lt!74397))))

(declare-fun lt!74394 () Unit!4393)

(declare-fun lt!74395 () Unit!4393)

(assert (=> d!45077 (= lt!74394 lt!74395)))

(assert (=> d!45077 (= (getValueByKey!174 lt!74397 (_1!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))))))

(assert (=> d!45077 (= lt!74395 (lemmaContainsTupThenGetReturnValue!91 lt!74397 (_1!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))))))

(assert (=> d!45077 (= lt!74397 (insertStrictlySorted!94 (toList!871 lt!73852) (_1!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))))))

(assert (=> d!45077 (= (+!167 lt!73852 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))) lt!74396)))

(declare-fun b!142196 () Bool)

(declare-fun res!67768 () Bool)

(assert (=> b!142196 (=> (not res!67768) (not e!92647))))

(assert (=> b!142196 (= res!67768 (= (getValueByKey!174 (toList!871 lt!74396) (_1!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73864 (minValue!2789 newMap!16))))))))

(declare-fun b!142197 () Bool)

(assert (=> b!142197 (= e!92647 (contains!914 (toList!871 lt!74396) (tuple2!2657 lt!73864 (minValue!2789 newMap!16))))))

(assert (= (and d!45077 res!67769) b!142196))

(assert (= (and b!142196 res!67768) b!142197))

(declare-fun m!170815 () Bool)

(assert (=> d!45077 m!170815))

(declare-fun m!170817 () Bool)

(assert (=> d!45077 m!170817))

(declare-fun m!170819 () Bool)

(assert (=> d!45077 m!170819))

(declare-fun m!170821 () Bool)

(assert (=> d!45077 m!170821))

(declare-fun m!170823 () Bool)

(assert (=> b!142196 m!170823))

(declare-fun m!170825 () Bool)

(assert (=> b!142197 m!170825))

(assert (=> b!141040 d!45077))

(assert (=> b!140462 d!44573))

(declare-fun d!45079 () Bool)

(assert (=> d!45079 (isDefined!128 (getValueByKey!174 (toList!871 lt!73016) lt!73011))))

(declare-fun lt!74398 () Unit!4393)

(assert (=> d!45079 (= lt!74398 (choose!871 (toList!871 lt!73016) lt!73011))))

(declare-fun e!92648 () Bool)

(assert (=> d!45079 e!92648))

(declare-fun res!67770 () Bool)

(assert (=> d!45079 (=> (not res!67770) (not e!92648))))

(assert (=> d!45079 (= res!67770 (isStrictlySorted!320 (toList!871 lt!73016)))))

(assert (=> d!45079 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73016) lt!73011) lt!74398)))

(declare-fun b!142198 () Bool)

(assert (=> b!142198 (= e!92648 (containsKey!178 (toList!871 lt!73016) lt!73011))))

(assert (= (and d!45079 res!67770) b!142198))

(assert (=> d!45079 m!167151))

(assert (=> d!45079 m!167151))

(assert (=> d!45079 m!168233))

(declare-fun m!170827 () Bool)

(assert (=> d!45079 m!170827))

(assert (=> d!45079 m!168461))

(assert (=> b!142198 m!168229))

(assert (=> b!140838 d!45079))

(declare-fun d!45081 () Bool)

(assert (=> d!45081 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73016) lt!73011)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73016) lt!73011))))))

(declare-fun bs!5978 () Bool)

(assert (= bs!5978 d!45081))

(assert (=> bs!5978 m!167151))

(declare-fun m!170829 () Bool)

(assert (=> bs!5978 m!170829))

(assert (=> b!140838 d!45081))

(assert (=> b!140838 d!44019))

(declare-fun d!45083 () Bool)

(declare-fun res!67771 () Bool)

(declare-fun e!92649 () Bool)

(assert (=> d!45083 (=> res!67771 e!92649)))

(assert (=> d!45083 (= res!67771 (and ((_ is Cons!1735) (toList!871 lt!73172)) (= (_1!1339 (h!2342 (toList!871 lt!73172))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45083 (= (containsKey!178 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000) e!92649)))

(declare-fun b!142199 () Bool)

(declare-fun e!92650 () Bool)

(assert (=> b!142199 (= e!92649 e!92650)))

(declare-fun res!67772 () Bool)

(assert (=> b!142199 (=> (not res!67772) (not e!92650))))

(assert (=> b!142199 (= res!67772 (and (or (not ((_ is Cons!1735) (toList!871 lt!73172))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73172))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73172)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73172))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142200 () Bool)

(assert (=> b!142200 (= e!92650 (containsKey!178 (t!6314 (toList!871 lt!73172)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45083 (not res!67771)) b!142199))

(assert (= (and b!142199 res!67772) b!142200))

(declare-fun m!170831 () Bool)

(assert (=> b!142200 m!170831))

(assert (=> d!43935 d!45083))

(declare-fun d!45085 () Bool)

(declare-fun res!67773 () Bool)

(declare-fun e!92651 () Bool)

(assert (=> d!45085 (=> res!67773 e!92651)))

(assert (=> d!45085 (= res!67773 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))))) lt!73261)))))

(assert (=> d!45085 (= (containsKey!178 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))) lt!73261) e!92651)))

(declare-fun b!142201 () Bool)

(declare-fun e!92652 () Bool)

(assert (=> b!142201 (= e!92651 e!92652)))

(declare-fun res!67774 () Bool)

(assert (=> b!142201 (=> (not res!67774) (not e!92652))))

(assert (=> b!142201 (= res!67774 (and (or (not ((_ is Cons!1735) (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))))) (bvsle (_1!1339 (h!2342 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))))) lt!73261)) ((_ is Cons!1735) (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))) (bvslt (_1!1339 (h!2342 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264))))) lt!73261)))))

(declare-fun b!142202 () Bool)

(assert (=> b!142202 (= e!92652 (containsKey!178 (t!6314 (toList!871 (+!167 lt!73263 (tuple2!2657 lt!73265 lt!73264)))) lt!73261))))

(assert (= (and d!45085 (not res!67773)) b!142201))

(assert (= (and b!142201 res!67774) b!142202))

(declare-fun m!170833 () Bool)

(assert (=> b!142202 m!170833))

(assert (=> d!44013 d!45085))

(declare-fun d!45087 () Bool)

(assert (=> d!45087 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5979 () Bool)

(assert (= bs!5979 d!45087))

(assert (=> bs!5979 m!167669))

(declare-fun m!170835 () Bool)

(assert (=> bs!5979 m!170835))

(assert (=> b!140568 d!45087))

(assert (=> b!140568 d!44803))

(declare-fun d!45089 () Bool)

(declare-fun res!67775 () Bool)

(declare-fun e!92653 () Bool)

(assert (=> d!45089 (=> res!67775 e!92653)))

(assert (=> d!45089 (= res!67775 (and ((_ is Cons!1735) (toList!871 lt!73266)) (= (_1!1339 (h!2342 (toList!871 lt!73266))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45089 (= (containsKey!178 (toList!871 lt!73266) #b0000000000000000000000000000000000000000000000000000000000000000) e!92653)))

(declare-fun b!142203 () Bool)

(declare-fun e!92654 () Bool)

(assert (=> b!142203 (= e!92653 e!92654)))

(declare-fun res!67776 () Bool)

(assert (=> b!142203 (=> (not res!67776) (not e!92654))))

(assert (=> b!142203 (= res!67776 (and (or (not ((_ is Cons!1735) (toList!871 lt!73266))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73266))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73266)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73266))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142204 () Bool)

(assert (=> b!142204 (= e!92654 (containsKey!178 (t!6314 (toList!871 lt!73266)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45089 (not res!67775)) b!142203))

(assert (= (and b!142203 res!67776) b!142204))

(declare-fun m!170837 () Bool)

(assert (=> b!142204 m!170837))

(assert (=> d!43733 d!45089))

(declare-fun d!45091 () Bool)

(assert (=> d!45091 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun bs!5980 () Bool)

(assert (= bs!5980 d!45091))

(assert (=> bs!5980 m!167163))

(declare-fun m!170839 () Bool)

(assert (=> bs!5980 m!170839))

(assert (=> b!140525 d!45091))

(assert (=> b!140525 d!43821))

(declare-fun d!45093 () Bool)

(assert (=> d!45093 (= (apply!120 lt!73764 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73764) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5981 () Bool)

(assert (= bs!5981 d!45093))

(declare-fun m!170841 () Bool)

(assert (=> bs!5981 m!170841))

(assert (=> bs!5981 m!170841))

(declare-fun m!170843 () Bool)

(assert (=> bs!5981 m!170843))

(assert (=> b!140897 d!45093))

(declare-fun d!45095 () Bool)

(declare-fun res!67777 () Bool)

(declare-fun e!92655 () Bool)

(assert (=> d!45095 (=> res!67777 e!92655)))

(assert (=> d!45095 (= res!67777 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!45095 (= (containsKey!178 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92655)))

(declare-fun b!142205 () Bool)

(declare-fun e!92656 () Bool)

(assert (=> b!142205 (= e!92655 e!92656)))

(declare-fun res!67778 () Bool)

(assert (=> b!142205 (=> (not res!67778) (not e!92656))))

(assert (=> b!142205 (= res!67778 (and (or (not ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (bvsle (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!142206 () Bool)

(assert (=> b!142206 (= e!92656 (containsKey!178 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!45095 (not res!67777)) b!142205))

(assert (= (and b!142205 res!67778) b!142206))

(assert (=> b!142206 m!166407))

(declare-fun m!170845 () Bool)

(assert (=> b!142206 m!170845))

(assert (=> d!43839 d!45095))

(declare-fun d!45097 () Bool)

(declare-fun e!92657 () Bool)

(assert (=> d!45097 e!92657))

(declare-fun res!67780 () Bool)

(assert (=> d!45097 (=> (not res!67780) (not e!92657))))

(declare-fun lt!74401 () ListLongMap!1711)

(assert (=> d!45097 (= res!67780 (contains!910 lt!74401 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74402 () List!1739)

(assert (=> d!45097 (= lt!74401 (ListLongMap!1712 lt!74402))))

(declare-fun lt!74399 () Unit!4393)

(declare-fun lt!74400 () Unit!4393)

(assert (=> d!45097 (= lt!74399 lt!74400)))

(assert (=> d!45097 (= (getValueByKey!174 lt!74402 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45097 (= lt!74400 (lemmaContainsTupThenGetReturnValue!91 lt!74402 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45097 (= lt!74402 (insertStrictlySorted!94 (toList!871 call!15645) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45097 (= (+!167 call!15645 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74401)))

(declare-fun b!142207 () Bool)

(declare-fun res!67779 () Bool)

(assert (=> b!142207 (=> (not res!67779) (not e!92657))))

(assert (=> b!142207 (= res!67779 (= (getValueByKey!174 (toList!871 lt!74401) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142208 () Bool)

(assert (=> b!142208 (= e!92657 (contains!914 (toList!871 lt!74401) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45097 res!67780) b!142207))

(assert (= (and b!142207 res!67779) b!142208))

(declare-fun m!170847 () Bool)

(assert (=> d!45097 m!170847))

(declare-fun m!170849 () Bool)

(assert (=> d!45097 m!170849))

(declare-fun m!170851 () Bool)

(assert (=> d!45097 m!170851))

(declare-fun m!170853 () Bool)

(assert (=> d!45097 m!170853))

(declare-fun m!170855 () Bool)

(assert (=> b!142207 m!170855))

(declare-fun m!170857 () Bool)

(assert (=> b!142208 m!170857))

(assert (=> b!141041 d!45097))

(declare-fun d!45099 () Bool)

(assert (=> d!45099 (= (size!2581 (v!3273 (underlying!476 thiss!992))) (bvadd (_size!624 (v!3273 (underlying!476 thiss!992))) (bvsdiv (bvadd (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140874 d!45099))

(declare-fun b!142209 () Bool)

(declare-fun e!92660 () List!1739)

(declare-fun call!15720 () List!1739)

(assert (=> b!142209 (= e!92660 call!15720)))

(declare-fun b!142210 () Bool)

(declare-fun e!92658 () List!1739)

(declare-fun call!15719 () List!1739)

(assert (=> b!142210 (= e!92658 call!15719)))

(declare-fun b!142211 () Bool)

(declare-fun e!92661 () Bool)

(declare-fun lt!74403 () List!1739)

(assert (=> b!142211 (= e!92661 (contains!914 lt!74403 (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun e!92659 () List!1739)

(declare-fun c!26866 () Bool)

(declare-fun bm!15715 () Bool)

(assert (=> bm!15715 (= call!15720 ($colon$colon!93 e!92659 (ite c!26866 (h!2342 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun c!26863 () Bool)

(assert (=> bm!15715 (= c!26863 c!26866)))

(declare-fun bm!15716 () Bool)

(declare-fun call!15718 () List!1739)

(assert (=> bm!15716 (= call!15719 call!15718)))

(declare-fun b!142212 () Bool)

(declare-fun res!67781 () Bool)

(assert (=> b!142212 (=> (not res!67781) (not e!92661))))

(assert (=> b!142212 (= res!67781 (containsKey!178 lt!74403 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun d!45101 () Bool)

(assert (=> d!45101 e!92661))

(declare-fun res!67782 () Bool)

(assert (=> d!45101 (=> (not res!67782) (not e!92661))))

(assert (=> d!45101 (= res!67782 (isStrictlySorted!320 lt!74403))))

(assert (=> d!45101 (= lt!74403 e!92660)))

(assert (=> d!45101 (= c!26866 (and ((_ is Cons!1735) (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!45101 (isStrictlySorted!320 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))))))

(assert (=> d!45101 (= (insertStrictlySorted!94 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74403)))

(declare-fun c!26865 () Bool)

(declare-fun c!26864 () Bool)

(declare-fun b!142213 () Bool)

(assert (=> b!142213 (= e!92659 (ite c!26865 (t!6314 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (ite c!26864 (Cons!1735 (h!2342 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (t!6314 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))))) Nil!1736)))))

(declare-fun b!142214 () Bool)

(assert (=> b!142214 (= c!26864 (and ((_ is Cons!1735) (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun e!92662 () List!1739)

(assert (=> b!142214 (= e!92662 e!92658)))

(declare-fun b!142215 () Bool)

(assert (=> b!142215 (= e!92658 call!15719)))

(declare-fun b!142216 () Bool)

(assert (=> b!142216 (= e!92659 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun bm!15717 () Bool)

(assert (=> bm!15717 (= call!15718 call!15720)))

(declare-fun b!142217 () Bool)

(assert (=> b!142217 (= e!92660 e!92662)))

(assert (=> b!142217 (= c!26865 (and ((_ is Cons!1735) (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434))))) (= (_1!1339 (h!2342 (t!6314 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142218 () Bool)

(assert (=> b!142218 (= e!92662 call!15718)))

(assert (= (and d!45101 c!26866) b!142209))

(assert (= (and d!45101 (not c!26866)) b!142217))

(assert (= (and b!142217 c!26865) b!142218))

(assert (= (and b!142217 (not c!26865)) b!142214))

(assert (= (and b!142214 c!26864) b!142210))

(assert (= (and b!142214 (not c!26864)) b!142215))

(assert (= (or b!142210 b!142215) bm!15716))

(assert (= (or b!142218 bm!15716) bm!15717))

(assert (= (or b!142209 bm!15717) bm!15715))

(assert (= (and bm!15715 c!26863) b!142216))

(assert (= (and bm!15715 (not c!26863)) b!142213))

(assert (= (and d!45101 res!67782) b!142212))

(assert (= (and b!142212 res!67781) b!142211))

(declare-fun m!170859 () Bool)

(assert (=> b!142212 m!170859))

(declare-fun m!170861 () Bool)

(assert (=> b!142216 m!170861))

(declare-fun m!170863 () Bool)

(assert (=> bm!15715 m!170863))

(declare-fun m!170865 () Bool)

(assert (=> b!142211 m!170865))

(declare-fun m!170867 () Bool)

(assert (=> d!45101 m!170867))

(assert (=> d!45101 m!168975))

(assert (=> b!140773 d!45101))

(declare-fun b!142222 () Bool)

(declare-fun e!92664 () Option!180)

(assert (=> b!142222 (= e!92664 None!178)))

(declare-fun b!142220 () Bool)

(declare-fun e!92663 () Option!180)

(assert (=> b!142220 (= e!92663 e!92664)))

(declare-fun c!26868 () Bool)

(assert (=> b!142220 (= c!26868 (and ((_ is Cons!1735) (toList!871 lt!73755)) (not (= (_1!1339 (h!2342 (toList!871 lt!73755))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!142219 () Bool)

(assert (=> b!142219 (= e!92663 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73755)))))))

(declare-fun d!45103 () Bool)

(declare-fun c!26867 () Bool)

(assert (=> d!45103 (= c!26867 (and ((_ is Cons!1735) (toList!871 lt!73755)) (= (_1!1339 (h!2342 (toList!871 lt!73755))) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!45103 (= (getValueByKey!174 (toList!871 lt!73755) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!92663)))

(declare-fun b!142221 () Bool)

(assert (=> b!142221 (= e!92664 (getValueByKey!174 (t!6314 (toList!871 lt!73755)) (_1!1339 (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!45103 c!26867) b!142219))

(assert (= (and d!45103 (not c!26867)) b!142220))

(assert (= (and b!142220 c!26868) b!142221))

(assert (= (and b!142220 (not c!26868)) b!142222))

(declare-fun m!170869 () Bool)

(assert (=> b!142221 m!170869))

(assert (=> b!140890 d!45103))

(assert (=> d!44105 d!44083))

(assert (=> d!44105 d!44099))

(declare-fun d!45105 () Bool)

(assert (=> d!45105 (contains!910 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) lt!73146)))

(assert (=> d!45105 true))

(declare-fun _$35!392 () Unit!4393)

(assert (=> d!45105 (= (choose!870 lt!73140 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)) lt!73146) _$35!392)))

(declare-fun bs!5982 () Bool)

(assert (= bs!5982 d!45105))

(assert (=> bs!5982 m!166731))

(assert (=> bs!5982 m!166731))

(assert (=> bs!5982 m!166737))

(assert (=> d!44105 d!45105))

(declare-fun d!45107 () Bool)

(declare-fun e!92666 () Bool)

(assert (=> d!45107 e!92666))

(declare-fun res!67783 () Bool)

(assert (=> d!45107 (=> res!67783 e!92666)))

(declare-fun lt!74407 () Bool)

(assert (=> d!45107 (= res!67783 (not lt!74407))))

(declare-fun lt!74406 () Bool)

(assert (=> d!45107 (= lt!74407 lt!74406)))

(declare-fun lt!74405 () Unit!4393)

(declare-fun e!92665 () Unit!4393)

(assert (=> d!45107 (= lt!74405 e!92665)))

(declare-fun c!26869 () Bool)

(assert (=> d!45107 (= c!26869 lt!74406)))

(assert (=> d!45107 (= lt!74406 (containsKey!178 (toList!871 lt!73140) lt!73146))))

(assert (=> d!45107 (= (contains!910 lt!73140 lt!73146) lt!74407)))

(declare-fun b!142223 () Bool)

(declare-fun lt!74404 () Unit!4393)

(assert (=> b!142223 (= e!92665 lt!74404)))

(assert (=> b!142223 (= lt!74404 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73140) lt!73146))))

(assert (=> b!142223 (isDefined!128 (getValueByKey!174 (toList!871 lt!73140) lt!73146))))

(declare-fun b!142224 () Bool)

(declare-fun Unit!4491 () Unit!4393)

(assert (=> b!142224 (= e!92665 Unit!4491)))

(declare-fun b!142225 () Bool)

(assert (=> b!142225 (= e!92666 (isDefined!128 (getValueByKey!174 (toList!871 lt!73140) lt!73146)))))

(assert (= (and d!45107 c!26869) b!142223))

(assert (= (and d!45107 (not c!26869)) b!142224))

(assert (= (and d!45107 (not res!67783)) b!142225))

(declare-fun m!170871 () Bool)

(assert (=> d!45107 m!170871))

(declare-fun m!170873 () Bool)

(assert (=> b!142223 m!170873))

(declare-fun m!170875 () Bool)

(assert (=> b!142223 m!170875))

(assert (=> b!142223 m!170875))

(declare-fun m!170877 () Bool)

(assert (=> b!142223 m!170877))

(assert (=> b!142225 m!170875))

(assert (=> b!142225 m!170875))

(assert (=> b!142225 m!170877))

(assert (=> d!44105 d!45107))

(declare-fun d!45109 () Bool)

(assert (=> d!45109 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun bs!5983 () Bool)

(assert (= bs!5983 d!45109))

(assert (=> bs!5983 m!167143))

(declare-fun m!170879 () Bool)

(assert (=> bs!5983 m!170879))

(assert (=> b!140644 d!45109))

(assert (=> b!140644 d!43911))

(declare-fun d!45111 () Bool)

(assert (=> d!45111 (= (+!167 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!534 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))

(assert (=> d!45111 true))

(declare-fun _$3!49 () Unit!4393)

(assert (=> d!45111 (= (choose!875 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2939 newMap!16)) _$3!49)))

(declare-fun bs!5984 () Bool)

(assert (= bs!5984 d!45111))

(assert (=> bs!5984 m!166541))

(assert (=> bs!5984 m!166695))

(assert (=> bs!5984 m!166541))

(assert (=> bs!5984 m!167051))

(assert (=> bs!5984 m!167035))

(assert (=> bs!5984 m!167045))

(assert (=> d!44141 d!45111))

(assert (=> d!44141 d!43719))

(declare-fun d!45113 () Bool)

(assert (=> d!45113 (= ($colon$colon!93 e!91861 (ite c!26497 (h!2342 (toList!871 lt!73016)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (Cons!1735 (ite c!26497 (h!2342 (toList!871 lt!73016)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91861))))

(assert (=> bm!15633 d!45113))

(declare-fun d!45115 () Bool)

(declare-fun c!26870 () Bool)

(assert (=> d!45115 (= c!26870 ((_ is Nil!1736) (toList!871 lt!73410)))))

(declare-fun e!92667 () (InoxSet tuple2!2656))

(assert (=> d!45115 (= (content!138 (toList!871 lt!73410)) e!92667)))

(declare-fun b!142226 () Bool)

(assert (=> b!142226 (= e!92667 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!142227 () Bool)

(assert (=> b!142227 (= e!92667 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73410)) true) (content!138 (t!6314 (toList!871 lt!73410)))))))

(assert (= (and d!45115 c!26870) b!142226))

(assert (= (and d!45115 (not c!26870)) b!142227))

(declare-fun m!170881 () Bool)

(assert (=> b!142227 m!170881))

(assert (=> b!142227 m!169125))

(assert (=> d!43731 d!45115))

(declare-fun d!45117 () Bool)

(declare-fun c!26871 () Bool)

(assert (=> d!45117 (= c!26871 ((_ is Nil!1736) (toList!871 lt!73157)))))

(declare-fun e!92668 () (InoxSet tuple2!2656))

(assert (=> d!45117 (= (content!138 (toList!871 lt!73157)) e!92668)))

(declare-fun b!142228 () Bool)

(assert (=> b!142228 (= e!92668 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!142229 () Bool)

(assert (=> b!142229 (= e!92668 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73157)) true) (content!138 (t!6314 (toList!871 lt!73157)))))))

(assert (= (and d!45117 c!26871) b!142228))

(assert (= (and d!45117 (not c!26871)) b!142229))

(declare-fun m!170883 () Bool)

(assert (=> b!142229 m!170883))

(assert (=> b!142229 m!169909))

(assert (=> d!43835 d!45117))

(declare-fun d!45119 () Bool)

(assert (=> d!45119 (= (apply!120 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73136) (apply!120 lt!73141 lt!73136))))

(assert (=> d!45119 true))

(declare-fun _$34!1012 () Unit!4393)

(assert (=> d!45119 (= (choose!869 lt!73141 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73136) _$34!1012)))

(declare-fun bs!5985 () Bool)

(assert (= bs!5985 d!45119))

(assert (=> bs!5985 m!166735))

(assert (=> bs!5985 m!166735))

(assert (=> bs!5985 m!166747))

(assert (=> bs!5985 m!166727))

(assert (=> d!44081 d!45119))

(assert (=> d!44081 d!44079))

(declare-fun d!45121 () Bool)

(declare-fun e!92670 () Bool)

(assert (=> d!45121 e!92670))

(declare-fun res!67784 () Bool)

(assert (=> d!45121 (=> res!67784 e!92670)))

(declare-fun lt!74411 () Bool)

(assert (=> d!45121 (= res!67784 (not lt!74411))))

(declare-fun lt!74410 () Bool)

(assert (=> d!45121 (= lt!74411 lt!74410)))

(declare-fun lt!74409 () Unit!4393)

(declare-fun e!92669 () Unit!4393)

(assert (=> d!45121 (= lt!74409 e!92669)))

(declare-fun c!26872 () Bool)

(assert (=> d!45121 (= c!26872 lt!74410)))

(assert (=> d!45121 (= lt!74410 (containsKey!178 (toList!871 lt!73141) lt!73136))))

(assert (=> d!45121 (= (contains!910 lt!73141 lt!73136) lt!74411)))

(declare-fun b!142230 () Bool)

(declare-fun lt!74408 () Unit!4393)

(assert (=> b!142230 (= e!92669 lt!74408)))

(assert (=> b!142230 (= lt!74408 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73141) lt!73136))))

(assert (=> b!142230 (isDefined!128 (getValueByKey!174 (toList!871 lt!73141) lt!73136))))

(declare-fun b!142231 () Bool)

(declare-fun Unit!4492 () Unit!4393)

(assert (=> b!142231 (= e!92669 Unit!4492)))

(declare-fun b!142232 () Bool)

(assert (=> b!142232 (= e!92670 (isDefined!128 (getValueByKey!174 (toList!871 lt!73141) lt!73136)))))

(assert (= (and d!45121 c!26872) b!142230))

(assert (= (and d!45121 (not c!26872)) b!142231))

(assert (= (and d!45121 (not res!67784)) b!142232))

(declare-fun m!170885 () Bool)

(assert (=> d!45121 m!170885))

(declare-fun m!170887 () Bool)

(assert (=> b!142230 m!170887))

(assert (=> b!142230 m!168481))

(assert (=> b!142230 m!168481))

(declare-fun m!170889 () Bool)

(assert (=> b!142230 m!170889))

(assert (=> b!142232 m!168481))

(assert (=> b!142232 m!168481))

(assert (=> b!142232 m!170889))

(assert (=> d!44081 d!45121))

(assert (=> d!44081 d!44087))

(assert (=> d!44081 d!44089))

(declare-fun d!45123 () Bool)

(assert (=> d!45123 (= (get!1528 (getValueByKey!174 (toList!871 lt!73126) lt!73145)) (v!3279 (getValueByKey!174 (toList!871 lt!73126) lt!73145)))))

(assert (=> d!44091 d!45123))

(declare-fun b!142236 () Bool)

(declare-fun e!92672 () Option!180)

(assert (=> b!142236 (= e!92672 None!178)))

(declare-fun b!142234 () Bool)

(declare-fun e!92671 () Option!180)

(assert (=> b!142234 (= e!92671 e!92672)))

(declare-fun c!26874 () Bool)

(assert (=> b!142234 (= c!26874 (and ((_ is Cons!1735) (toList!871 lt!73126)) (not (= (_1!1339 (h!2342 (toList!871 lt!73126))) lt!73145))))))

(declare-fun b!142233 () Bool)

(assert (=> b!142233 (= e!92671 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73126)))))))

(declare-fun d!45125 () Bool)

(declare-fun c!26873 () Bool)

(assert (=> d!45125 (= c!26873 (and ((_ is Cons!1735) (toList!871 lt!73126)) (= (_1!1339 (h!2342 (toList!871 lt!73126))) lt!73145)))))

(assert (=> d!45125 (= (getValueByKey!174 (toList!871 lt!73126) lt!73145) e!92671)))

(declare-fun b!142235 () Bool)

(assert (=> b!142235 (= e!92672 (getValueByKey!174 (t!6314 (toList!871 lt!73126)) lt!73145))))

(assert (= (and d!45125 c!26873) b!142233))

(assert (= (and d!45125 (not c!26873)) b!142234))

(assert (= (and b!142234 c!26874) b!142235))

(assert (= (and b!142234 (not c!26874)) b!142236))

(declare-fun m!170891 () Bool)

(assert (=> b!142235 m!170891))

(assert (=> d!44091 d!45125))

(assert (=> b!140505 d!43725))

(declare-fun d!45127 () Bool)

(assert (=> d!45127 (= (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))))

(declare-fun bs!5986 () Bool)

(assert (= bs!5986 d!45127))

(assert (=> bs!5986 m!168795))

(declare-fun m!170893 () Bool)

(assert (=> bs!5986 m!170893))

(assert (=> b!141113 d!45127))

(declare-fun b!142240 () Bool)

(declare-fun e!92674 () Option!180)

(assert (=> b!142240 (= e!92674 None!178)))

(declare-fun b!142238 () Bool)

(declare-fun e!92673 () Option!180)

(assert (=> b!142238 (= e!92673 e!92674)))

(declare-fun c!26876 () Bool)

(assert (=> b!142238 (= c!26876 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (not (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))))

(declare-fun b!142237 () Bool)

(assert (=> b!142237 (= e!92673 (Some!179 (_2!1339 (h!2342 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))))

(declare-fun d!45129 () Bool)

(declare-fun c!26875 () Bool)

(assert (=> d!45129 (= c!26875 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))))))))

(assert (=> d!45129 (= (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) e!92673)))

(declare-fun b!142239 () Bool)

(assert (=> b!142239 (= e!92674 (getValueByKey!174 (t!6314 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (= (and d!45129 c!26875) b!142237))

(assert (= (and d!45129 (not c!26875)) b!142238))

(assert (= (and b!142238 c!26876) b!142239))

(assert (= (and b!142238 (not c!26876)) b!142240))

(assert (=> b!142239 m!167031))

(declare-fun m!170895 () Bool)

(assert (=> b!142239 m!170895))

(assert (=> b!141113 d!45129))

(declare-fun b!142241 () Bool)

(declare-fun e!92675 () Bool)

(declare-fun e!92677 () Bool)

(assert (=> b!142241 (= e!92675 e!92677)))

(declare-fun c!26877 () Bool)

(assert (=> b!142241 (= c!26877 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd lt!73352 #b00000000000000000000000000000001))))))

(declare-fun b!142242 () Bool)

(declare-fun e!92678 () Bool)

(assert (=> b!142242 (= e!92678 e!92675)))

(declare-fun res!67785 () Bool)

(assert (=> b!142242 (=> (not res!67785) (not e!92675))))

(declare-fun e!92676 () Bool)

(assert (=> b!142242 (= res!67785 (not e!92676))))

(declare-fun res!67786 () Bool)

(assert (=> b!142242 (=> (not res!67786) (not e!92676))))

(assert (=> b!142242 (= res!67786 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd lt!73352 #b00000000000000000000000000000001))))))

(declare-fun b!142243 () Bool)

(declare-fun call!15721 () Bool)

(assert (=> b!142243 (= e!92677 call!15721)))

(declare-fun d!45131 () Bool)

(declare-fun res!67787 () Bool)

(assert (=> d!45131 (=> res!67787 e!92678)))

(assert (=> d!45131 (= res!67787 (bvsge (bvadd lt!73352 #b00000000000000000000000000000001) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!45131 (= (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (bvadd lt!73352 #b00000000000000000000000000000001) (ite c!26517 (Cons!1736 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) lt!73349) lt!73349)) e!92678)))

(declare-fun b!142244 () Bool)

(assert (=> b!142244 (= e!92676 (contains!913 (ite c!26517 (Cons!1736 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) lt!73349) lt!73349) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd lt!73352 #b00000000000000000000000000000001))))))

(declare-fun b!142245 () Bool)

(assert (=> b!142245 (= e!92677 call!15721)))

(declare-fun bm!15718 () Bool)

(assert (=> bm!15718 (= call!15721 (arrayNoDuplicates!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (bvadd lt!73352 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26877 (Cons!1736 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd lt!73352 #b00000000000000000000000000000001)) (ite c!26517 (Cons!1736 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) lt!73349) lt!73349)) (ite c!26517 (Cons!1736 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) lt!73349) lt!73349))))))

(assert (= (and d!45131 (not res!67787)) b!142242))

(assert (= (and b!142242 res!67786) b!142244))

(assert (= (and b!142242 res!67785) b!142241))

(assert (= (and b!142241 c!26877) b!142243))

(assert (= (and b!142241 (not c!26877)) b!142245))

(assert (= (or b!142243 b!142245) bm!15718))

(declare-fun m!170897 () Bool)

(assert (=> b!142241 m!170897))

(assert (=> b!142241 m!170897))

(declare-fun m!170899 () Bool)

(assert (=> b!142241 m!170899))

(assert (=> b!142242 m!170897))

(assert (=> b!142242 m!170897))

(assert (=> b!142242 m!170899))

(assert (=> b!142244 m!170897))

(assert (=> b!142244 m!170897))

(declare-fun m!170901 () Bool)

(assert (=> b!142244 m!170901))

(assert (=> bm!15718 m!170897))

(declare-fun m!170903 () Bool)

(assert (=> bm!15718 m!170903))

(assert (=> bm!15639 d!45131))

(declare-fun d!45133 () Bool)

(assert (=> d!45133 (= (get!1526 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3272 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000)))))

(assert (=> b!140638 d!45133))

(declare-fun d!45135 () Bool)

(assert (=> d!45135 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5987 () Bool)

(assert (= bs!5987 d!45135))

(assert (=> bs!5987 m!167119))

(declare-fun m!170905 () Bool)

(assert (=> bs!5987 m!170905))

(assert (=> b!140734 d!45135))

(assert (=> b!140734 d!43915))

(declare-fun d!45137 () Bool)

(declare-fun e!92680 () Bool)

(assert (=> d!45137 e!92680))

(declare-fun res!67788 () Bool)

(assert (=> d!45137 (=> res!67788 e!92680)))

(declare-fun lt!74415 () Bool)

(assert (=> d!45137 (= res!67788 (not lt!74415))))

(declare-fun lt!74414 () Bool)

(assert (=> d!45137 (= lt!74415 lt!74414)))

(declare-fun lt!74413 () Unit!4393)

(declare-fun e!92679 () Unit!4393)

(assert (=> d!45137 (= lt!74413 e!92679)))

(declare-fun c!26878 () Bool)

(assert (=> d!45137 (= c!26878 lt!74414)))

(assert (=> d!45137 (= lt!74414 (containsKey!178 (toList!871 lt!73130) lt!73137))))

(assert (=> d!45137 (= (contains!910 lt!73130 lt!73137) lt!74415)))

(declare-fun b!142246 () Bool)

(declare-fun lt!74412 () Unit!4393)

(assert (=> b!142246 (= e!92679 lt!74412)))

(assert (=> b!142246 (= lt!74412 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73130) lt!73137))))

(assert (=> b!142246 (isDefined!128 (getValueByKey!174 (toList!871 lt!73130) lt!73137))))

(declare-fun b!142247 () Bool)

(declare-fun Unit!4493 () Unit!4393)

(assert (=> b!142247 (= e!92679 Unit!4493)))

(declare-fun b!142248 () Bool)

(assert (=> b!142248 (= e!92680 (isDefined!128 (getValueByKey!174 (toList!871 lt!73130) lt!73137)))))

(assert (= (and d!45137 c!26878) b!142246))

(assert (= (and d!45137 (not c!26878)) b!142247))

(assert (= (and d!45137 (not res!67788)) b!142248))

(declare-fun m!170907 () Bool)

(assert (=> d!45137 m!170907))

(declare-fun m!170909 () Bool)

(assert (=> b!142246 m!170909))

(assert (=> b!142246 m!168497))

(assert (=> b!142246 m!168497))

(declare-fun m!170911 () Bool)

(assert (=> b!142246 m!170911))

(assert (=> b!142248 m!168497))

(assert (=> b!142248 m!168497))

(assert (=> b!142248 m!170911))

(assert (=> d!44101 d!45137))

(assert (=> d!44101 d!44093))

(assert (=> d!44101 d!44103))

(declare-fun d!45139 () Bool)

(assert (=> d!45139 (= (apply!120 (+!167 lt!73130 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!73137) (apply!120 lt!73130 lt!73137))))

(assert (=> d!45139 true))

(declare-fun _$34!1013 () Unit!4393)

(assert (=> d!45139 (= (choose!869 lt!73130 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)) lt!73137) _$34!1013)))

(declare-fun bs!5988 () Bool)

(assert (= bs!5988 d!45139))

(assert (=> bs!5988 m!166739))

(assert (=> bs!5988 m!166739))

(assert (=> bs!5988 m!166741))

(assert (=> bs!5988 m!166725))

(assert (=> d!44101 d!45139))

(assert (=> d!44101 d!44085))

(declare-fun d!45141 () Bool)

(assert (=> d!45141 (= (isEmpty!422 (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!179) (getValueByKey!174 (toList!871 lt!73003) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!43707 d!45141))

(assert (=> bm!15614 d!43643))

(assert (=> d!44053 d!43677))

(assert (=> d!44053 d!43665))

(assert (=> d!44053 d!43667))

(declare-fun d!45143 () Bool)

(declare-fun res!67789 () Bool)

(declare-fun e!92681 () Bool)

(assert (=> d!45143 (=> res!67789 e!92681)))

(assert (=> d!45143 (= res!67789 (and ((_ is Cons!1735) (toList!871 (map!1424 (_2!1340 lt!73342)))) (= (_1!1339 (h!2342 (toList!871 (map!1424 (_2!1340 lt!73342))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!45143 (= (containsKey!178 (toList!871 (map!1424 (_2!1340 lt!73342))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!92681)))

(declare-fun b!142249 () Bool)

(declare-fun e!92682 () Bool)

(assert (=> b!142249 (= e!92681 e!92682)))

(declare-fun res!67790 () Bool)

(assert (=> b!142249 (=> (not res!67790) (not e!92682))))

(assert (=> b!142249 (= res!67790 (and (or (not ((_ is Cons!1735) (toList!871 (map!1424 (_2!1340 lt!73342))))) (bvsle (_1!1339 (h!2342 (toList!871 (map!1424 (_2!1340 lt!73342))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (toList!871 (map!1424 (_2!1340 lt!73342)))) (bvslt (_1!1339 (h!2342 (toList!871 (map!1424 (_2!1340 lt!73342))))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!142250 () Bool)

(assert (=> b!142250 (= e!92682 (containsKey!178 (t!6314 (toList!871 (map!1424 (_2!1340 lt!73342)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!45143 (not res!67789)) b!142249))

(assert (= (and b!142249 res!67790) b!142250))

(assert (=> b!142250 m!166407))

(declare-fun m!170913 () Bool)

(assert (=> b!142250 m!170913))

(assert (=> d!44207 d!45143))

(declare-fun d!45145 () Bool)

(assert (=> d!45145 (= (validKeyInArray!0 (select (arr!2302 lt!73355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) (and (not (= (select (arr!2302 lt!73355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 lt!73355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141051 d!45145))

(declare-fun d!45147 () Bool)

(assert (=> d!45147 (= (apply!120 lt!73697 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73697) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5989 () Bool)

(assert (= bs!5989 d!45147))

(declare-fun m!170915 () Bool)

(assert (=> bs!5989 m!170915))

(assert (=> bs!5989 m!170915))

(declare-fun m!170917 () Bool)

(assert (=> bs!5989 m!170917))

(assert (=> b!140815 d!45147))

(declare-fun b!142251 () Bool)

(assert (=> b!142251 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> b!142251 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2576 (_values!2922 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun lt!74422 () ListLongMap!1711)

(declare-fun e!92683 () Bool)

(assert (=> b!142251 (= e!92683 (= (apply!120 lt!74422 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142252 () Bool)

(declare-fun e!92685 () Bool)

(assert (=> b!142252 (= e!92685 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!142252 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!142253 () Bool)

(declare-fun res!67792 () Bool)

(declare-fun e!92686 () Bool)

(assert (=> b!142253 (=> (not res!67792) (not e!92686))))

(assert (=> b!142253 (= res!67792 (not (contains!910 lt!74422 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142254 () Bool)

(declare-fun e!92689 () Bool)

(assert (=> b!142254 (= e!92689 e!92683)))

(assert (=> b!142254 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun res!67794 () Bool)

(assert (=> b!142254 (= res!67794 (contains!910 lt!74422 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!142254 (=> (not res!67794) (not e!92683))))

(declare-fun b!142255 () Bool)

(declare-fun lt!74418 () Unit!4393)

(declare-fun lt!74416 () Unit!4393)

(assert (=> b!142255 (= lt!74418 lt!74416)))

(declare-fun lt!74421 () (_ BitVec 64))

(declare-fun lt!74419 () ListLongMap!1711)

(declare-fun lt!74420 () V!3553)

(declare-fun lt!74417 () (_ BitVec 64))

(assert (=> b!142255 (not (contains!910 (+!167 lt!74419 (tuple2!2657 lt!74421 lt!74420)) lt!74417))))

(assert (=> b!142255 (= lt!74416 (addStillNotContains!65 lt!74419 lt!74421 lt!74420 lt!74417))))

(assert (=> b!142255 (= lt!74417 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142255 (= lt!74420 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142255 (= lt!74421 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!15722 () ListLongMap!1711)

(assert (=> b!142255 (= lt!74419 call!15722)))

(declare-fun e!92687 () ListLongMap!1711)

(assert (=> b!142255 (= e!92687 (+!167 call!15722 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142256 () Bool)

(assert (=> b!142256 (= e!92686 e!92689)))

(declare-fun c!26882 () Bool)

(assert (=> b!142256 (= c!26882 e!92685)))

(declare-fun res!67791 () Bool)

(assert (=> b!142256 (=> (not res!67791) (not e!92685))))

(assert (=> b!142256 (= res!67791 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun bm!15719 () Bool)

(assert (=> bm!15719 (= call!15722 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!142257 () Bool)

(assert (=> b!142257 (= e!92687 call!15722)))

(declare-fun b!142258 () Bool)

(declare-fun e!92684 () Bool)

(assert (=> b!142258 (= e!92689 e!92684)))

(declare-fun c!26880 () Bool)

(assert (=> b!142258 (= c!26880 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun d!45149 () Bool)

(assert (=> d!45149 e!92686))

(declare-fun res!67793 () Bool)

(assert (=> d!45149 (=> (not res!67793) (not e!92686))))

(assert (=> d!45149 (= res!67793 (not (contains!910 lt!74422 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92688 () ListLongMap!1711)

(assert (=> d!45149 (= lt!74422 e!92688)))

(declare-fun c!26881 () Bool)

(assert (=> d!45149 (= c!26881 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!45149 (validMask!0 (mask!7278 (v!3273 (underlying!476 thiss!992))))))

(assert (=> d!45149 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992)))) lt!74422)))

(declare-fun b!142259 () Bool)

(assert (=> b!142259 (= e!92688 (ListLongMap!1712 Nil!1736))))

(declare-fun b!142260 () Bool)

(assert (=> b!142260 (= e!92684 (isEmpty!421 lt!74422))))

(declare-fun b!142261 () Bool)

(assert (=> b!142261 (= e!92688 e!92687)))

(declare-fun c!26879 () Bool)

(assert (=> b!142261 (= c!26879 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142262 () Bool)

(assert (=> b!142262 (= e!92684 (= lt!74422 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (_values!2922 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992))) (extraKeys!2694 (v!3273 (underlying!476 thiss!992))) (zeroValue!2789 (v!3273 (underlying!476 thiss!992))) (minValue!2789 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!45149 c!26881) b!142259))

(assert (= (and d!45149 (not c!26881)) b!142261))

(assert (= (and b!142261 c!26879) b!142255))

(assert (= (and b!142261 (not c!26879)) b!142257))

(assert (= (or b!142255 b!142257) bm!15719))

(assert (= (and d!45149 res!67793) b!142253))

(assert (= (and b!142253 res!67792) b!142256))

(assert (= (and b!142256 res!67791) b!142252))

(assert (= (and b!142256 c!26882) b!142254))

(assert (= (and b!142256 (not c!26882)) b!142258))

(assert (= (and b!142254 res!67794) b!142251))

(assert (= (and b!142258 c!26880) b!142262))

(assert (= (and b!142258 (not c!26880)) b!142260))

(declare-fun b_lambda!6361 () Bool)

(assert (=> (not b_lambda!6361) (not b!142251)))

(assert (=> b!142251 t!6311))

(declare-fun b_and!8873 () Bool)

(assert (= b_and!8869 (and (=> t!6311 result!4167) b_and!8873)))

(assert (=> b!142251 t!6313))

(declare-fun b_and!8875 () Bool)

(assert (= b_and!8871 (and (=> t!6313 result!4171) b_and!8875)))

(declare-fun b_lambda!6363 () Bool)

(assert (=> (not b_lambda!6363) (not b!142255)))

(assert (=> b!142255 t!6311))

(declare-fun b_and!8877 () Bool)

(assert (= b_and!8873 (and (=> t!6311 result!4167) b_and!8877)))

(assert (=> b!142255 t!6313))

(declare-fun b_and!8879 () Bool)

(assert (= b_and!8875 (and (=> t!6313 result!4171) b_and!8879)))

(declare-fun m!170919 () Bool)

(assert (=> d!45149 m!170919))

(assert (=> d!45149 m!166539))

(declare-fun m!170921 () Bool)

(assert (=> bm!15719 m!170921))

(declare-fun m!170923 () Bool)

(assert (=> b!142253 m!170923))

(assert (=> b!142252 m!168845))

(assert (=> b!142252 m!168845))

(declare-fun m!170925 () Bool)

(assert (=> b!142252 m!170925))

(declare-fun m!170927 () Bool)

(assert (=> b!142251 m!170927))

(assert (=> b!142251 m!166425))

(declare-fun m!170929 () Bool)

(assert (=> b!142251 m!170929))

(assert (=> b!142251 m!168845))

(assert (=> b!142251 m!166425))

(assert (=> b!142251 m!170927))

(assert (=> b!142251 m!168845))

(declare-fun m!170931 () Bool)

(assert (=> b!142251 m!170931))

(assert (=> b!142254 m!168845))

(assert (=> b!142254 m!168845))

(declare-fun m!170933 () Bool)

(assert (=> b!142254 m!170933))

(declare-fun m!170935 () Bool)

(assert (=> b!142260 m!170935))

(assert (=> b!142261 m!168845))

(assert (=> b!142261 m!168845))

(assert (=> b!142261 m!170925))

(assert (=> b!142255 m!170927))

(assert (=> b!142255 m!166425))

(assert (=> b!142255 m!170929))

(declare-fun m!170937 () Bool)

(assert (=> b!142255 m!170937))

(assert (=> b!142255 m!166425))

(declare-fun m!170939 () Bool)

(assert (=> b!142255 m!170939))

(assert (=> b!142255 m!170927))

(declare-fun m!170941 () Bool)

(assert (=> b!142255 m!170941))

(assert (=> b!142255 m!168845))

(assert (=> b!142255 m!170937))

(declare-fun m!170943 () Bool)

(assert (=> b!142255 m!170943))

(assert (=> b!142262 m!170921))

(assert (=> b!140463 d!45149))

(declare-fun b!142263 () Bool)

(declare-fun e!92690 () Bool)

(declare-fun e!92692 () Bool)

(assert (=> b!142263 (= e!92690 e!92692)))

(declare-fun c!26883 () Bool)

(assert (=> b!142263 (= c!26883 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142264 () Bool)

(declare-fun e!92693 () Bool)

(assert (=> b!142264 (= e!92693 e!92690)))

(declare-fun res!67795 () Bool)

(assert (=> b!142264 (=> (not res!67795) (not e!92690))))

(declare-fun e!92691 () Bool)

(assert (=> b!142264 (= res!67795 (not e!92691))))

(declare-fun res!67796 () Bool)

(assert (=> b!142264 (=> (not res!67796) (not e!92691))))

(assert (=> b!142264 (= res!67796 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142265 () Bool)

(declare-fun call!15723 () Bool)

(assert (=> b!142265 (= e!92692 call!15723)))

(declare-fun d!45151 () Bool)

(declare-fun res!67797 () Bool)

(assert (=> d!45151 (=> res!67797 e!92693)))

(assert (=> d!45151 (= res!67797 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!45151 (= (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26431 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) e!92693)))

(declare-fun b!142266 () Bool)

(assert (=> b!142266 (= e!92691 (contains!913 (ite c!26431 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) Nil!1737) Nil!1737) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142267 () Bool)

(assert (=> b!142267 (= e!92692 call!15723)))

(declare-fun bm!15720 () Bool)

(assert (=> bm!15720 (= call!15723 (arrayNoDuplicates!0 (_keys!4697 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26883 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26431 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26431 (Cons!1736 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000) Nil!1737) Nil!1737))))))

(assert (= (and d!45151 (not res!67797)) b!142264))

(assert (= (and b!142264 res!67796) b!142266))

(assert (= (and b!142264 res!67795) b!142263))

(assert (= (and b!142263 c!26883) b!142265))

(assert (= (and b!142263 (not c!26883)) b!142267))

(assert (= (or b!142265 b!142267) bm!15720))

(assert (=> b!142263 m!169933))

(assert (=> b!142263 m!169933))

(assert (=> b!142263 m!169935))

(assert (=> b!142264 m!169933))

(assert (=> b!142264 m!169933))

(assert (=> b!142264 m!169935))

(assert (=> b!142266 m!169933))

(assert (=> b!142266 m!169933))

(declare-fun m!170945 () Bool)

(assert (=> b!142266 m!170945))

(assert (=> bm!15720 m!169933))

(declare-fun m!170947 () Bool)

(assert (=> bm!15720 m!170947))

(assert (=> bm!15601 d!45151))

(assert (=> b!140840 d!45081))

(assert (=> b!140840 d!44019))

(declare-fun d!45153 () Bool)

(declare-fun e!92695 () Bool)

(assert (=> d!45153 e!92695))

(declare-fun res!67798 () Bool)

(assert (=> d!45153 (=> res!67798 e!92695)))

(declare-fun lt!74426 () Bool)

(assert (=> d!45153 (= res!67798 (not lt!74426))))

(declare-fun lt!74425 () Bool)

(assert (=> d!45153 (= lt!74426 lt!74425)))

(declare-fun lt!74424 () Unit!4393)

(declare-fun e!92694 () Unit!4393)

(assert (=> d!45153 (= lt!74424 e!92694)))

(declare-fun c!26884 () Bool)

(assert (=> d!45153 (= c!26884 lt!74425)))

(assert (=> d!45153 (= lt!74425 (containsKey!178 (toList!871 lt!73487) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (=> d!45153 (= (contains!910 lt!73487 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!74426)))

(declare-fun b!142268 () Bool)

(declare-fun lt!74423 () Unit!4393)

(assert (=> b!142268 (= e!92694 lt!74423)))

(assert (=> b!142268 (= lt!74423 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73487) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (=> b!142268 (isDefined!128 (getValueByKey!174 (toList!871 lt!73487) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun b!142269 () Bool)

(declare-fun Unit!4494 () Unit!4393)

(assert (=> b!142269 (= e!92694 Unit!4494)))

(declare-fun b!142270 () Bool)

(assert (=> b!142270 (= e!92695 (isDefined!128 (getValueByKey!174 (toList!871 lt!73487) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(assert (= (and d!45153 c!26884) b!142268))

(assert (= (and d!45153 (not c!26884)) b!142269))

(assert (= (and d!45153 (not res!67798)) b!142270))

(declare-fun m!170949 () Bool)

(assert (=> d!45153 m!170949))

(declare-fun m!170951 () Bool)

(assert (=> b!142268 m!170951))

(assert (=> b!142268 m!167431))

(assert (=> b!142268 m!167431))

(declare-fun m!170953 () Bool)

(assert (=> b!142268 m!170953))

(assert (=> b!142270 m!167431))

(assert (=> b!142270 m!167431))

(assert (=> b!142270 m!170953))

(assert (=> d!43753 d!45153))

(declare-fun b!142274 () Bool)

(declare-fun e!92697 () Option!180)

(assert (=> b!142274 (= e!92697 None!178)))

(declare-fun b!142272 () Bool)

(declare-fun e!92696 () Option!180)

(assert (=> b!142272 (= e!92696 e!92697)))

(declare-fun c!26886 () Bool)

(assert (=> b!142272 (= c!26886 (and ((_ is Cons!1735) lt!73488) (not (= (_1!1339 (h!2342 lt!73488)) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))))

(declare-fun b!142271 () Bool)

(assert (=> b!142271 (= e!92696 (Some!179 (_2!1339 (h!2342 lt!73488))))))

(declare-fun d!45155 () Bool)

(declare-fun c!26885 () Bool)

(assert (=> d!45155 (= c!26885 (and ((_ is Cons!1735) lt!73488) (= (_1!1339 (h!2342 lt!73488)) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(assert (=> d!45155 (= (getValueByKey!174 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) e!92696)))

(declare-fun b!142273 () Bool)

(assert (=> b!142273 (= e!92697 (getValueByKey!174 (t!6314 lt!73488) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(assert (= (and d!45155 c!26885) b!142271))

(assert (= (and d!45155 (not c!26885)) b!142272))

(assert (= (and b!142272 c!26886) b!142273))

(assert (= (and b!142272 (not c!26886)) b!142274))

(declare-fun m!170955 () Bool)

(assert (=> b!142273 m!170955))

(assert (=> d!43753 d!45155))

(declare-fun d!45157 () Bool)

(assert (=> d!45157 (= (getValueByKey!174 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun lt!74427 () Unit!4393)

(assert (=> d!45157 (= lt!74427 (choose!872 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun e!92698 () Bool)

(assert (=> d!45157 e!92698))

(declare-fun res!67799 () Bool)

(assert (=> d!45157 (=> (not res!67799) (not e!92698))))

(assert (=> d!45157 (= res!67799 (isStrictlySorted!320 lt!73488))))

(assert (=> d!45157 (= (lemmaContainsTupThenGetReturnValue!91 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!74427)))

(declare-fun b!142275 () Bool)

(declare-fun res!67800 () Bool)

(assert (=> b!142275 (=> (not res!67800) (not e!92698))))

(assert (=> b!142275 (= res!67800 (containsKey!178 lt!73488 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun b!142276 () Bool)

(assert (=> b!142276 (= e!92698 (contains!914 lt!73488 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(assert (= (and d!45157 res!67799) b!142275))

(assert (= (and b!142275 res!67800) b!142276))

(assert (=> d!45157 m!167425))

(declare-fun m!170957 () Bool)

(assert (=> d!45157 m!170957))

(declare-fun m!170959 () Bool)

(assert (=> d!45157 m!170959))

(declare-fun m!170961 () Bool)

(assert (=> b!142275 m!170961))

(declare-fun m!170963 () Bool)

(assert (=> b!142276 m!170963))

(assert (=> d!43753 d!45157))

(declare-fun b!142277 () Bool)

(declare-fun e!92701 () List!1739)

(declare-fun call!15726 () List!1739)

(assert (=> b!142277 (= e!92701 call!15726)))

(declare-fun b!142278 () Bool)

(declare-fun e!92699 () List!1739)

(declare-fun call!15725 () List!1739)

(assert (=> b!142278 (= e!92699 call!15725)))

(declare-fun e!92702 () Bool)

(declare-fun b!142279 () Bool)

(declare-fun lt!74428 () List!1739)

(assert (=> b!142279 (= e!92702 (contains!914 lt!74428 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(declare-fun c!26890 () Bool)

(declare-fun e!92700 () List!1739)

(declare-fun bm!15721 () Bool)

(assert (=> bm!15721 (= call!15726 ($colon$colon!93 e!92700 (ite c!26890 (h!2342 (toList!871 lt!73174)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))))

(declare-fun c!26887 () Bool)

(assert (=> bm!15721 (= c!26887 c!26890)))

(declare-fun bm!15722 () Bool)

(declare-fun call!15724 () List!1739)

(assert (=> bm!15722 (= call!15725 call!15724)))

(declare-fun b!142280 () Bool)

(declare-fun res!67801 () Bool)

(assert (=> b!142280 (=> (not res!67801) (not e!92702))))

(assert (=> b!142280 (= res!67801 (containsKey!178 lt!74428 (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun d!45159 () Bool)

(assert (=> d!45159 e!92702))

(declare-fun res!67802 () Bool)

(assert (=> d!45159 (=> (not res!67802) (not e!92702))))

(assert (=> d!45159 (= res!67802 (isStrictlySorted!320 lt!74428))))

(assert (=> d!45159 (= lt!74428 e!92701)))

(assert (=> d!45159 (= c!26890 (and ((_ is Cons!1735) (toList!871 lt!73174)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73174))) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(assert (=> d!45159 (isStrictlySorted!320 (toList!871 lt!73174))))

(assert (=> d!45159 (= (insertStrictlySorted!94 (toList!871 lt!73174) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))) lt!74428)))

(declare-fun c!26888 () Bool)

(declare-fun c!26889 () Bool)

(declare-fun b!142281 () Bool)

(assert (=> b!142281 (= e!92700 (ite c!26889 (t!6314 (toList!871 lt!73174)) (ite c!26888 (Cons!1735 (h!2342 (toList!871 lt!73174)) (t!6314 (toList!871 lt!73174))) Nil!1736)))))

(declare-fun b!142282 () Bool)

(assert (=> b!142282 (= c!26888 (and ((_ is Cons!1735) (toList!871 lt!73174)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73174))) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(declare-fun e!92703 () List!1739)

(assert (=> b!142282 (= e!92703 e!92699)))

(declare-fun b!142283 () Bool)

(assert (=> b!142283 (= e!92699 call!15725)))

(declare-fun b!142284 () Bool)

(assert (=> b!142284 (= e!92700 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73174)) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16)))))))

(declare-fun bm!15723 () Bool)

(assert (=> bm!15723 (= call!15724 call!15726)))

(declare-fun b!142285 () Bool)

(assert (=> b!142285 (= e!92701 e!92703)))

(assert (=> b!142285 (= c!26889 (and ((_ is Cons!1735) (toList!871 lt!73174)) (= (_1!1339 (h!2342 (toList!871 lt!73174))) (_1!1339 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))))

(declare-fun b!142286 () Bool)

(assert (=> b!142286 (= e!92703 call!15724)))

(assert (= (and d!45159 c!26890) b!142277))

(assert (= (and d!45159 (not c!26890)) b!142285))

(assert (= (and b!142285 c!26889) b!142286))

(assert (= (and b!142285 (not c!26889)) b!142282))

(assert (= (and b!142282 c!26888) b!142278))

(assert (= (and b!142282 (not c!26888)) b!142283))

(assert (= (or b!142278 b!142283) bm!15722))

(assert (= (or b!142286 bm!15722) bm!15723))

(assert (= (or b!142277 bm!15723) bm!15721))

(assert (= (and bm!15721 c!26887) b!142284))

(assert (= (and bm!15721 (not c!26887)) b!142281))

(assert (= (and d!45159 res!67802) b!142280))

(assert (= (and b!142280 res!67801) b!142279))

(declare-fun m!170965 () Bool)

(assert (=> b!142280 m!170965))

(declare-fun m!170967 () Bool)

(assert (=> b!142284 m!170967))

(declare-fun m!170969 () Bool)

(assert (=> bm!15721 m!170969))

(declare-fun m!170971 () Bool)

(assert (=> b!142279 m!170971))

(declare-fun m!170973 () Bool)

(assert (=> d!45159 m!170973))

(declare-fun m!170975 () Bool)

(assert (=> d!45159 m!170975))

(assert (=> d!43753 d!45159))

(assert (=> b!140468 d!45039))

(assert (=> b!140468 d!45023))

(declare-fun d!45161 () Bool)

(declare-fun res!67803 () Bool)

(declare-fun e!92704 () Bool)

(assert (=> d!45161 (=> res!67803 e!92704)))

(assert (=> d!45161 (= res!67803 (or ((_ is Nil!1736) lt!73792) ((_ is Nil!1736) (t!6314 lt!73792))))))

(assert (=> d!45161 (= (isStrictlySorted!320 lt!73792) e!92704)))

(declare-fun b!142287 () Bool)

(declare-fun e!92705 () Bool)

(assert (=> b!142287 (= e!92704 e!92705)))

(declare-fun res!67804 () Bool)

(assert (=> b!142287 (=> (not res!67804) (not e!92705))))

(assert (=> b!142287 (= res!67804 (bvslt (_1!1339 (h!2342 lt!73792)) (_1!1339 (h!2342 (t!6314 lt!73792)))))))

(declare-fun b!142288 () Bool)

(assert (=> b!142288 (= e!92705 (isStrictlySorted!320 (t!6314 lt!73792)))))

(assert (= (and d!45161 (not res!67803)) b!142287))

(assert (= (and b!142287 res!67804) b!142288))

(declare-fun m!170977 () Bool)

(assert (=> b!142288 m!170977))

(assert (=> d!44061 d!45161))

(declare-fun d!45163 () Bool)

(declare-fun res!67805 () Bool)

(declare-fun e!92706 () Bool)

(assert (=> d!45163 (=> res!67805 e!92706)))

(assert (=> d!45163 (= res!67805 (or ((_ is Nil!1736) (toList!871 call!15501)) ((_ is Nil!1736) (t!6314 (toList!871 call!15501)))))))

(assert (=> d!45163 (= (isStrictlySorted!320 (toList!871 call!15501)) e!92706)))

(declare-fun b!142289 () Bool)

(declare-fun e!92707 () Bool)

(assert (=> b!142289 (= e!92706 e!92707)))

(declare-fun res!67806 () Bool)

(assert (=> b!142289 (=> (not res!67806) (not e!92707))))

(assert (=> b!142289 (= res!67806 (bvslt (_1!1339 (h!2342 (toList!871 call!15501))) (_1!1339 (h!2342 (t!6314 (toList!871 call!15501))))))))

(declare-fun b!142290 () Bool)

(assert (=> b!142290 (= e!92707 (isStrictlySorted!320 (t!6314 (toList!871 call!15501))))))

(assert (= (and d!45163 (not res!67805)) b!142289))

(assert (= (and b!142289 res!67806) b!142290))

(assert (=> b!142290 m!169529))

(assert (=> d!44061 d!45163))

(declare-fun d!45165 () Bool)

(declare-fun e!92709 () Bool)

(assert (=> d!45165 e!92709))

(declare-fun res!67807 () Bool)

(assert (=> d!45165 (=> res!67807 e!92709)))

(declare-fun lt!74432 () Bool)

(assert (=> d!45165 (= res!67807 (not lt!74432))))

(declare-fun lt!74431 () Bool)

(assert (=> d!45165 (= lt!74432 lt!74431)))

(declare-fun lt!74430 () Unit!4393)

(declare-fun e!92708 () Unit!4393)

(assert (=> d!45165 (= lt!74430 e!92708)))

(declare-fun c!26891 () Bool)

(assert (=> d!45165 (= c!26891 lt!74431)))

(assert (=> d!45165 (= lt!74431 (containsKey!178 (toList!871 lt!73441) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45165 (= (contains!910 lt!73441 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74432)))

(declare-fun b!142291 () Bool)

(declare-fun lt!74429 () Unit!4393)

(assert (=> b!142291 (= e!92708 lt!74429)))

(assert (=> b!142291 (= lt!74429 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73441) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142291 (isDefined!128 (getValueByKey!174 (toList!871 lt!73441) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142292 () Bool)

(declare-fun Unit!4495 () Unit!4393)

(assert (=> b!142292 (= e!92708 Unit!4495)))

(declare-fun b!142293 () Bool)

(assert (=> b!142293 (= e!92709 (isDefined!128 (getValueByKey!174 (toList!871 lt!73441) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45165 c!26891) b!142291))

(assert (= (and d!45165 (not c!26891)) b!142292))

(assert (= (and d!45165 (not res!67807)) b!142293))

(assert (=> d!45165 m!166699))

(declare-fun m!170979 () Bool)

(assert (=> d!45165 m!170979))

(assert (=> b!142291 m!166699))

(declare-fun m!170981 () Bool)

(assert (=> b!142291 m!170981))

(assert (=> b!142291 m!166699))

(assert (=> b!142291 m!170179))

(assert (=> b!142291 m!170179))

(declare-fun m!170983 () Bool)

(assert (=> b!142291 m!170983))

(assert (=> b!142293 m!166699))

(assert (=> b!142293 m!170179))

(assert (=> b!142293 m!170179))

(assert (=> b!142293 m!170983))

(assert (=> b!140405 d!45165))

(assert (=> b!140898 d!43699))

(assert (=> d!43711 d!43719))

(declare-fun d!45167 () Bool)

(declare-fun res!67808 () Bool)

(declare-fun e!92710 () Bool)

(assert (=> d!45167 (=> res!67808 e!92710)))

(assert (=> d!45167 (= res!67808 (and ((_ is Cons!1735) (toList!871 lt!73390)) (= (_1!1339 (h!2342 (toList!871 lt!73390))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45167 (= (containsKey!178 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92710)))

(declare-fun b!142294 () Bool)

(declare-fun e!92711 () Bool)

(assert (=> b!142294 (= e!92710 e!92711)))

(declare-fun res!67809 () Bool)

(assert (=> b!142294 (=> (not res!67809) (not e!92711))))

(assert (=> b!142294 (= res!67809 (and (or (not ((_ is Cons!1735) (toList!871 lt!73390))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73390))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) (toList!871 lt!73390)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73390))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142295 () Bool)

(assert (=> b!142295 (= e!92711 (containsKey!178 (t!6314 (toList!871 lt!73390)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45167 (not res!67808)) b!142294))

(assert (= (and b!142294 res!67809) b!142295))

(declare-fun m!170985 () Bool)

(assert (=> b!142295 m!170985))

(assert (=> d!44065 d!45167))

(declare-fun b!142299 () Bool)

(declare-fun e!92713 () Option!180)

(assert (=> b!142299 (= e!92713 None!178)))

(declare-fun b!142297 () Bool)

(declare-fun e!92712 () Option!180)

(assert (=> b!142297 (= e!92712 e!92713)))

(declare-fun c!26893 () Bool)

(assert (=> b!142297 (= c!26893 (and ((_ is Cons!1735) (toList!871 lt!73604)) (not (= (_1!1339 (h!2342 (toList!871 lt!73604))) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))))

(declare-fun b!142296 () Bool)

(assert (=> b!142296 (= e!92712 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73604)))))))

(declare-fun c!26892 () Bool)

(declare-fun d!45169 () Bool)

(assert (=> d!45169 (= c!26892 (and ((_ is Cons!1735) (toList!871 lt!73604)) (= (_1!1339 (h!2342 (toList!871 lt!73604))) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(assert (=> d!45169 (= (getValueByKey!174 (toList!871 lt!73604) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) e!92712)))

(declare-fun b!142298 () Bool)

(assert (=> b!142298 (= e!92713 (getValueByKey!174 (t!6314 (toList!871 lt!73604)) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (= (and d!45169 c!26892) b!142296))

(assert (= (and d!45169 (not c!26892)) b!142297))

(assert (= (and b!142297 c!26893) b!142298))

(assert (= (and b!142297 (not c!26893)) b!142299))

(declare-fun m!170987 () Bool)

(assert (=> b!142298 m!170987))

(assert (=> b!140612 d!45169))

(assert (=> d!43739 d!43753))

(assert (=> d!43739 d!43735))

(declare-fun d!45171 () Bool)

(assert (=> d!45171 (= (apply!120 (+!167 lt!73174 (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) lt!73181) (apply!120 lt!73174 lt!73181))))

(assert (=> d!45171 true))

(declare-fun _$34!1014 () Unit!4393)

(assert (=> d!45171 (= (choose!869 lt!73174 lt!73186 (minValue!2789 newMap!16) lt!73181) _$34!1014)))

(declare-fun bs!5990 () Bool)

(assert (= bs!5990 d!45171))

(assert (=> bs!5990 m!166829))

(assert (=> bs!5990 m!166829))

(assert (=> bs!5990 m!166831))

(assert (=> bs!5990 m!166815))

(assert (=> d!43739 d!45171))

(declare-fun d!45173 () Bool)

(declare-fun e!92715 () Bool)

(assert (=> d!45173 e!92715))

(declare-fun res!67810 () Bool)

(assert (=> d!45173 (=> res!67810 e!92715)))

(declare-fun lt!74436 () Bool)

(assert (=> d!45173 (= res!67810 (not lt!74436))))

(declare-fun lt!74435 () Bool)

(assert (=> d!45173 (= lt!74436 lt!74435)))

(declare-fun lt!74434 () Unit!4393)

(declare-fun e!92714 () Unit!4393)

(assert (=> d!45173 (= lt!74434 e!92714)))

(declare-fun c!26894 () Bool)

(assert (=> d!45173 (= c!26894 lt!74435)))

(assert (=> d!45173 (= lt!74435 (containsKey!178 (toList!871 lt!73174) lt!73181))))

(assert (=> d!45173 (= (contains!910 lt!73174 lt!73181) lt!74436)))

(declare-fun b!142300 () Bool)

(declare-fun lt!74433 () Unit!4393)

(assert (=> b!142300 (= e!92714 lt!74433)))

(assert (=> b!142300 (= lt!74433 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73174) lt!73181))))

(assert (=> b!142300 (isDefined!128 (getValueByKey!174 (toList!871 lt!73174) lt!73181))))

(declare-fun b!142301 () Bool)

(declare-fun Unit!4496 () Unit!4393)

(assert (=> b!142301 (= e!92714 Unit!4496)))

(declare-fun b!142302 () Bool)

(assert (=> b!142302 (= e!92715 (isDefined!128 (getValueByKey!174 (toList!871 lt!73174) lt!73181)))))

(assert (= (and d!45173 c!26894) b!142300))

(assert (= (and d!45173 (not c!26894)) b!142301))

(assert (= (and d!45173 (not res!67810)) b!142302))

(declare-fun m!170989 () Bool)

(assert (=> d!45173 m!170989))

(declare-fun m!170991 () Bool)

(assert (=> b!142300 m!170991))

(assert (=> b!142300 m!167459))

(assert (=> b!142300 m!167459))

(declare-fun m!170993 () Bool)

(assert (=> b!142300 m!170993))

(assert (=> b!142302 m!167459))

(assert (=> b!142302 m!167459))

(assert (=> b!142302 m!170993))

(assert (=> d!43739 d!45173))

(assert (=> d!43739 d!43763))

(declare-fun d!45175 () Bool)

(declare-fun e!92716 () Bool)

(assert (=> d!45175 e!92716))

(declare-fun res!67812 () Bool)

(assert (=> d!45175 (=> (not res!67812) (not e!92716))))

(declare-fun lt!74439 () ListLongMap!1711)

(assert (=> d!45175 (= res!67812 (contains!910 lt!74439 (_1!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74440 () List!1739)

(assert (=> d!45175 (= lt!74439 (ListLongMap!1712 lt!74440))))

(declare-fun lt!74437 () Unit!4393)

(declare-fun lt!74438 () Unit!4393)

(assert (=> d!45175 (= lt!74437 lt!74438)))

(assert (=> d!45175 (= (getValueByKey!174 lt!74440 (_1!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45175 (= lt!74438 (lemmaContainsTupThenGetReturnValue!91 lt!74440 (_1!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45175 (= lt!74440 (insertStrictlySorted!94 (toList!871 lt!73657) (_1!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45175 (= (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))) lt!74439)))

(declare-fun b!142303 () Bool)

(declare-fun res!67811 () Bool)

(assert (=> b!142303 (=> (not res!67811) (not e!92716))))

(assert (=> b!142303 (= res!67811 (= (getValueByKey!174 (toList!871 lt!74439) (_1!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142304 () Bool)

(assert (=> b!142304 (= e!92716 (contains!914 (toList!871 lt!74439) (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45175 res!67812) b!142303))

(assert (= (and b!142303 res!67811) b!142304))

(declare-fun m!170995 () Bool)

(assert (=> d!45175 m!170995))

(declare-fun m!170997 () Bool)

(assert (=> d!45175 m!170997))

(declare-fun m!170999 () Bool)

(assert (=> d!45175 m!170999))

(declare-fun m!171001 () Bool)

(assert (=> d!45175 m!171001))

(declare-fun m!171003 () Bool)

(assert (=> b!142303 m!171003))

(declare-fun m!171005 () Bool)

(assert (=> b!142304 m!171005))

(assert (=> b!140700 d!45175))

(declare-fun d!45177 () Bool)

(declare-fun e!92718 () Bool)

(assert (=> d!45177 e!92718))

(declare-fun res!67813 () Bool)

(assert (=> d!45177 (=> res!67813 e!92718)))

(declare-fun lt!74444 () Bool)

(assert (=> d!45177 (= res!67813 (not lt!74444))))

(declare-fun lt!74443 () Bool)

(assert (=> d!45177 (= lt!74444 lt!74443)))

(declare-fun lt!74442 () Unit!4393)

(declare-fun e!92717 () Unit!4393)

(assert (=> d!45177 (= lt!74442 e!92717)))

(declare-fun c!26895 () Bool)

(assert (=> d!45177 (= c!26895 lt!74443)))

(assert (=> d!45177 (= lt!74443 (containsKey!178 (toList!871 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))) lt!73663))))

(assert (=> d!45177 (= (contains!910 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))) lt!73663) lt!74444)))

(declare-fun b!142305 () Bool)

(declare-fun lt!74441 () Unit!4393)

(assert (=> b!142305 (= e!92717 lt!74441)))

(assert (=> b!142305 (= lt!74441 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))) lt!73663))))

(assert (=> b!142305 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))) lt!73663))))

(declare-fun b!142306 () Bool)

(declare-fun Unit!4497 () Unit!4393)

(assert (=> b!142306 (= e!92717 Unit!4497)))

(declare-fun b!142307 () Bool)

(assert (=> b!142307 (= e!92718 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16)))) lt!73663)))))

(assert (= (and d!45177 c!26895) b!142305))

(assert (= (and d!45177 (not c!26895)) b!142306))

(assert (= (and d!45177 (not res!67813)) b!142307))

(declare-fun m!171007 () Bool)

(assert (=> d!45177 m!171007))

(declare-fun m!171009 () Bool)

(assert (=> b!142305 m!171009))

(declare-fun m!171011 () Bool)

(assert (=> b!142305 m!171011))

(assert (=> b!142305 m!171011))

(declare-fun m!171013 () Bool)

(assert (=> b!142305 m!171013))

(assert (=> b!142307 m!171011))

(assert (=> b!142307 m!171011))

(assert (=> b!142307 m!171013))

(assert (=> b!140700 d!45177))

(declare-fun d!45179 () Bool)

(assert (=> d!45179 (= (apply!120 (+!167 lt!73643 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))) lt!73662) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73643 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))) lt!73662)))))

(declare-fun bs!5991 () Bool)

(assert (= bs!5991 d!45179))

(declare-fun m!171015 () Bool)

(assert (=> bs!5991 m!171015))

(assert (=> bs!5991 m!171015))

(declare-fun m!171017 () Bool)

(assert (=> bs!5991 m!171017))

(assert (=> b!140700 d!45179))

(declare-fun b!142308 () Bool)

(assert (=> b!142308 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!142308 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 lt!73089)))))

(declare-fun lt!74451 () ListLongMap!1711)

(declare-fun e!92719 () Bool)

(assert (=> b!142308 (= e!92719 (= (apply!120 lt!74451 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142309 () Bool)

(declare-fun e!92721 () Bool)

(assert (=> b!142309 (= e!92721 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142309 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!142310 () Bool)

(declare-fun res!67815 () Bool)

(declare-fun e!92722 () Bool)

(assert (=> b!142310 (=> (not res!67815) (not e!92722))))

(assert (=> b!142310 (= res!67815 (not (contains!910 lt!74451 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142311 () Bool)

(declare-fun e!92725 () Bool)

(assert (=> b!142311 (= e!92725 e!92719)))

(assert (=> b!142311 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67817 () Bool)

(assert (=> b!142311 (= res!67817 (contains!910 lt!74451 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142311 (=> (not res!67817) (not e!92719))))

(declare-fun b!142312 () Bool)

(declare-fun lt!74447 () Unit!4393)

(declare-fun lt!74445 () Unit!4393)

(assert (=> b!142312 (= lt!74447 lt!74445)))

(declare-fun lt!74449 () V!3553)

(declare-fun lt!74446 () (_ BitVec 64))

(declare-fun lt!74450 () (_ BitVec 64))

(declare-fun lt!74448 () ListLongMap!1711)

(assert (=> b!142312 (not (contains!910 (+!167 lt!74448 (tuple2!2657 lt!74450 lt!74449)) lt!74446))))

(assert (=> b!142312 (= lt!74445 (addStillNotContains!65 lt!74448 lt!74450 lt!74449 lt!74446))))

(assert (=> b!142312 (= lt!74446 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142312 (= lt!74449 (get!1523 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142312 (= lt!74450 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!15727 () ListLongMap!1711)

(assert (=> b!142312 (= lt!74448 call!15727)))

(declare-fun e!92723 () ListLongMap!1711)

(assert (=> b!142312 (= e!92723 (+!167 call!15727 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142313 () Bool)

(assert (=> b!142313 (= e!92722 e!92725)))

(declare-fun c!26899 () Bool)

(assert (=> b!142313 (= c!26899 e!92721)))

(declare-fun res!67814 () Bool)

(assert (=> b!142313 (=> (not res!67814) (not e!92721))))

(assert (=> b!142313 (= res!67814 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun bm!15724 () Bool)

(assert (=> bm!15724 (= call!15727 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16)))))

(declare-fun b!142314 () Bool)

(assert (=> b!142314 (= e!92723 call!15727)))

(declare-fun b!142315 () Bool)

(declare-fun e!92720 () Bool)

(assert (=> b!142315 (= e!92725 e!92720)))

(declare-fun c!26897 () Bool)

(assert (=> b!142315 (= c!26897 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(declare-fun d!45181 () Bool)

(assert (=> d!45181 e!92722))

(declare-fun res!67816 () Bool)

(assert (=> d!45181 (=> (not res!67816) (not e!92722))))

(assert (=> d!45181 (= res!67816 (not (contains!910 lt!74451 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!92724 () ListLongMap!1711)

(assert (=> d!45181 (= lt!74451 e!92724)))

(declare-fun c!26898 () Bool)

(assert (=> d!45181 (= c!26898 (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!45181 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!45181 (= (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) lt!74451)))

(declare-fun b!142316 () Bool)

(assert (=> b!142316 (= e!92724 (ListLongMap!1712 Nil!1736))))

(declare-fun b!142317 () Bool)

(assert (=> b!142317 (= e!92720 (isEmpty!421 lt!74451))))

(declare-fun b!142318 () Bool)

(assert (=> b!142318 (= e!92724 e!92723)))

(declare-fun c!26896 () Bool)

(assert (=> b!142318 (= c!26896 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142319 () Bool)

(assert (=> b!142319 (= e!92720 (= lt!74451 (getCurrentListMapNoExtraKeys!132 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2939 newMap!16))))))

(assert (= (and d!45181 c!26898) b!142316))

(assert (= (and d!45181 (not c!26898)) b!142318))

(assert (= (and b!142318 c!26896) b!142312))

(assert (= (and b!142318 (not c!26896)) b!142314))

(assert (= (or b!142312 b!142314) bm!15724))

(assert (= (and d!45181 res!67816) b!142310))

(assert (= (and b!142310 res!67815) b!142313))

(assert (= (and b!142313 res!67814) b!142309))

(assert (= (and b!142313 c!26899) b!142311))

(assert (= (and b!142313 (not c!26899)) b!142315))

(assert (= (and b!142311 res!67817) b!142308))

(assert (= (and b!142315 c!26897) b!142319))

(assert (= (and b!142315 (not c!26897)) b!142317))

(declare-fun b_lambda!6365 () Bool)

(assert (=> (not b_lambda!6365) (not b!142308)))

(assert (=> b!142308 t!6328))

(declare-fun b_and!8881 () Bool)

(assert (= b_and!8877 (and (=> t!6328 result!4187) b_and!8881)))

(assert (=> b!142308 t!6330))

(declare-fun b_and!8883 () Bool)

(assert (= b_and!8879 (and (=> t!6330 result!4189) b_and!8883)))

(declare-fun b_lambda!6367 () Bool)

(assert (=> (not b_lambda!6367) (not b!142312)))

(assert (=> b!142312 t!6328))

(declare-fun b_and!8885 () Bool)

(assert (= b_and!8881 (and (=> t!6328 result!4187) b_and!8885)))

(assert (=> b!142312 t!6330))

(declare-fun b_and!8887 () Bool)

(assert (= b_and!8883 (and (=> t!6330 result!4189) b_and!8887)))

(declare-fun m!171019 () Bool)

(assert (=> d!45181 m!171019))

(assert (=> d!45181 m!166687))

(declare-fun m!171021 () Bool)

(assert (=> bm!15724 m!171021))

(declare-fun m!171023 () Bool)

(assert (=> b!142310 m!171023))

(assert (=> b!142309 m!166699))

(assert (=> b!142309 m!166699))

(assert (=> b!142309 m!166701))

(assert (=> b!142308 m!167973))

(assert (=> b!142308 m!166703))

(assert (=> b!142308 m!167975))

(assert (=> b!142308 m!166699))

(assert (=> b!142308 m!166703))

(assert (=> b!142308 m!167973))

(assert (=> b!142308 m!166699))

(declare-fun m!171025 () Bool)

(assert (=> b!142308 m!171025))

(assert (=> b!142311 m!166699))

(assert (=> b!142311 m!166699))

(declare-fun m!171027 () Bool)

(assert (=> b!142311 m!171027))

(declare-fun m!171029 () Bool)

(assert (=> b!142317 m!171029))

(assert (=> b!142318 m!166699))

(assert (=> b!142318 m!166699))

(assert (=> b!142318 m!166701))

(assert (=> b!142312 m!167973))

(assert (=> b!142312 m!166703))

(assert (=> b!142312 m!167975))

(declare-fun m!171031 () Bool)

(assert (=> b!142312 m!171031))

(assert (=> b!142312 m!166703))

(declare-fun m!171033 () Bool)

(assert (=> b!142312 m!171033))

(assert (=> b!142312 m!167973))

(declare-fun m!171035 () Bool)

(assert (=> b!142312 m!171035))

(assert (=> b!142312 m!166699))

(assert (=> b!142312 m!171031))

(declare-fun m!171037 () Bool)

(assert (=> b!142312 m!171037))

(assert (=> b!142319 m!171021))

(assert (=> b!140700 d!45181))

(declare-fun d!45183 () Bool)

(assert (=> d!45183 (= (apply!120 (+!167 lt!73647 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))) lt!73654) (apply!120 lt!73647 lt!73654))))

(declare-fun lt!74452 () Unit!4393)

(assert (=> d!45183 (= lt!74452 (choose!869 lt!73647 lt!73659 (minValue!2789 newMap!16) lt!73654))))

(declare-fun e!92726 () Bool)

(assert (=> d!45183 e!92726))

(declare-fun res!67818 () Bool)

(assert (=> d!45183 (=> (not res!67818) (not e!92726))))

(assert (=> d!45183 (= res!67818 (contains!910 lt!73647 lt!73654))))

(assert (=> d!45183 (= (addApplyDifferent!96 lt!73647 lt!73659 (minValue!2789 newMap!16) lt!73654) lt!74452)))

(declare-fun b!142320 () Bool)

(assert (=> b!142320 (= e!92726 (not (= lt!73654 lt!73659)))))

(assert (= (and d!45183 res!67818) b!142320))

(assert (=> d!45183 m!168007))

(assert (=> d!45183 m!168007))

(assert (=> d!45183 m!168009))

(declare-fun m!171039 () Bool)

(assert (=> d!45183 m!171039))

(assert (=> d!45183 m!167993))

(declare-fun m!171041 () Bool)

(assert (=> d!45183 m!171041))

(assert (=> b!140700 d!45183))

(declare-fun d!45185 () Bool)

(assert (=> d!45185 (= (apply!120 lt!73647 lt!73654) (get!1528 (getValueByKey!174 (toList!871 lt!73647) lt!73654)))))

(declare-fun bs!5992 () Bool)

(assert (= bs!5992 d!45185))

(declare-fun m!171043 () Bool)

(assert (=> bs!5992 m!171043))

(assert (=> bs!5992 m!171043))

(declare-fun m!171045 () Bool)

(assert (=> bs!5992 m!171045))

(assert (=> b!140700 d!45185))

(declare-fun d!45187 () Bool)

(assert (=> d!45187 (= (apply!120 (+!167 lt!73658 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))) lt!73653) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73658 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))) lt!73653)))))

(declare-fun bs!5993 () Bool)

(assert (= bs!5993 d!45187))

(declare-fun m!171047 () Bool)

(assert (=> bs!5993 m!171047))

(assert (=> bs!5993 m!171047))

(declare-fun m!171049 () Bool)

(assert (=> bs!5993 m!171049))

(assert (=> b!140700 d!45187))

(declare-fun d!45189 () Bool)

(declare-fun e!92727 () Bool)

(assert (=> d!45189 e!92727))

(declare-fun res!67820 () Bool)

(assert (=> d!45189 (=> (not res!67820) (not e!92727))))

(declare-fun lt!74455 () ListLongMap!1711)

(assert (=> d!45189 (= res!67820 (contains!910 lt!74455 (_1!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74456 () List!1739)

(assert (=> d!45189 (= lt!74455 (ListLongMap!1712 lt!74456))))

(declare-fun lt!74453 () Unit!4393)

(declare-fun lt!74454 () Unit!4393)

(assert (=> d!45189 (= lt!74453 lt!74454)))

(assert (=> d!45189 (= (getValueByKey!174 lt!74456 (_1!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45189 (= lt!74454 (lemmaContainsTupThenGetReturnValue!91 lt!74456 (_1!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45189 (= lt!74456 (insertStrictlySorted!94 (toList!871 lt!73643) (_1!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45189 (= (+!167 lt!73643 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))) lt!74455)))

(declare-fun b!142321 () Bool)

(declare-fun res!67819 () Bool)

(assert (=> b!142321 (=> (not res!67819) (not e!92727))))

(assert (=> b!142321 (= res!67819 (= (getValueByKey!174 (toList!871 lt!74455) (_1!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142322 () Bool)

(assert (=> b!142322 (= e!92727 (contains!914 (toList!871 lt!74455) (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45189 res!67820) b!142321))

(assert (= (and b!142321 res!67819) b!142322))

(declare-fun m!171051 () Bool)

(assert (=> d!45189 m!171051))

(declare-fun m!171053 () Bool)

(assert (=> d!45189 m!171053))

(declare-fun m!171055 () Bool)

(assert (=> d!45189 m!171055))

(declare-fun m!171057 () Bool)

(assert (=> d!45189 m!171057))

(declare-fun m!171059 () Bool)

(assert (=> b!142321 m!171059))

(declare-fun m!171061 () Bool)

(assert (=> b!142322 m!171061))

(assert (=> b!140700 d!45189))

(declare-fun d!45191 () Bool)

(assert (=> d!45191 (= (apply!120 (+!167 lt!73658 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))) lt!73653) (apply!120 lt!73658 lt!73653))))

(declare-fun lt!74457 () Unit!4393)

(assert (=> d!45191 (= lt!74457 (choose!869 lt!73658 lt!73656 (minValue!2789 newMap!16) lt!73653))))

(declare-fun e!92728 () Bool)

(assert (=> d!45191 e!92728))

(declare-fun res!67821 () Bool)

(assert (=> d!45191 (=> (not res!67821) (not e!92728))))

(assert (=> d!45191 (= res!67821 (contains!910 lt!73658 lt!73653))))

(assert (=> d!45191 (= (addApplyDifferent!96 lt!73658 lt!73656 (minValue!2789 newMap!16) lt!73653) lt!74457)))

(declare-fun b!142323 () Bool)

(assert (=> b!142323 (= e!92728 (not (= lt!73653 lt!73656)))))

(assert (= (and d!45191 res!67821) b!142323))

(assert (=> d!45191 m!168003))

(assert (=> d!45191 m!168003))

(assert (=> d!45191 m!168015))

(declare-fun m!171063 () Bool)

(assert (=> d!45191 m!171063))

(assert (=> d!45191 m!167995))

(declare-fun m!171065 () Bool)

(assert (=> d!45191 m!171065))

(assert (=> b!140700 d!45191))

(declare-fun d!45193 () Bool)

(assert (=> d!45193 (= (apply!120 lt!73643 lt!73662) (get!1528 (getValueByKey!174 (toList!871 lt!73643) lt!73662)))))

(declare-fun bs!5994 () Bool)

(assert (= bs!5994 d!45193))

(declare-fun m!171067 () Bool)

(assert (=> bs!5994 m!171067))

(assert (=> bs!5994 m!171067))

(declare-fun m!171069 () Bool)

(assert (=> bs!5994 m!171069))

(assert (=> b!140700 d!45193))

(declare-fun d!45195 () Bool)

(assert (=> d!45195 (= (apply!120 lt!73658 lt!73653) (get!1528 (getValueByKey!174 (toList!871 lt!73658) lt!73653)))))

(declare-fun bs!5995 () Bool)

(assert (= bs!5995 d!45195))

(declare-fun m!171071 () Bool)

(assert (=> bs!5995 m!171071))

(assert (=> bs!5995 m!171071))

(declare-fun m!171073 () Bool)

(assert (=> bs!5995 m!171073))

(assert (=> b!140700 d!45195))

(declare-fun d!45197 () Bool)

(assert (=> d!45197 (= (apply!120 (+!167 lt!73643 (tuple2!2657 lt!73652 (zeroValue!2789 newMap!16))) lt!73662) (apply!120 lt!73643 lt!73662))))

(declare-fun lt!74458 () Unit!4393)

(assert (=> d!45197 (= lt!74458 (choose!869 lt!73643 lt!73652 (zeroValue!2789 newMap!16) lt!73662))))

(declare-fun e!92729 () Bool)

(assert (=> d!45197 e!92729))

(declare-fun res!67822 () Bool)

(assert (=> d!45197 (=> (not res!67822) (not e!92729))))

(assert (=> d!45197 (= res!67822 (contains!910 lt!73643 lt!73662))))

(assert (=> d!45197 (= (addApplyDifferent!96 lt!73643 lt!73652 (zeroValue!2789 newMap!16) lt!73662) lt!74458)))

(declare-fun b!142324 () Bool)

(assert (=> b!142324 (= e!92729 (not (= lt!73662 lt!73652)))))

(assert (= (and d!45197 res!67822) b!142324))

(assert (=> d!45197 m!168011))

(assert (=> d!45197 m!168011))

(assert (=> d!45197 m!168013))

(declare-fun m!171075 () Bool)

(assert (=> d!45197 m!171075))

(assert (=> d!45197 m!168017))

(declare-fun m!171077 () Bool)

(assert (=> d!45197 m!171077))

(assert (=> b!140700 d!45197))

(declare-fun d!45199 () Bool)

(declare-fun e!92730 () Bool)

(assert (=> d!45199 e!92730))

(declare-fun res!67824 () Bool)

(assert (=> d!45199 (=> (not res!67824) (not e!92730))))

(declare-fun lt!74461 () ListLongMap!1711)

(assert (=> d!45199 (= res!67824 (contains!910 lt!74461 (_1!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))))))

(declare-fun lt!74462 () List!1739)

(assert (=> d!45199 (= lt!74461 (ListLongMap!1712 lt!74462))))

(declare-fun lt!74459 () Unit!4393)

(declare-fun lt!74460 () Unit!4393)

(assert (=> d!45199 (= lt!74459 lt!74460)))

(assert (=> d!45199 (= (getValueByKey!174 lt!74462 (_1!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))))))

(assert (=> d!45199 (= lt!74460 (lemmaContainsTupThenGetReturnValue!91 lt!74462 (_1!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))))))

(assert (=> d!45199 (= lt!74462 (insertStrictlySorted!94 (toList!871 lt!73647) (_1!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))))))

(assert (=> d!45199 (= (+!167 lt!73647 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))) lt!74461)))

(declare-fun b!142325 () Bool)

(declare-fun res!67823 () Bool)

(assert (=> b!142325 (=> (not res!67823) (not e!92730))))

(assert (=> b!142325 (= res!67823 (= (getValueByKey!174 (toList!871 lt!74461) (_1!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))))))))

(declare-fun b!142326 () Bool)

(assert (=> b!142326 (= e!92730 (contains!914 (toList!871 lt!74461) (tuple2!2657 lt!73659 (minValue!2789 newMap!16))))))

(assert (= (and d!45199 res!67824) b!142325))

(assert (= (and b!142325 res!67823) b!142326))

(declare-fun m!171079 () Bool)

(assert (=> d!45199 m!171079))

(declare-fun m!171081 () Bool)

(assert (=> d!45199 m!171081))

(declare-fun m!171083 () Bool)

(assert (=> d!45199 m!171083))

(declare-fun m!171085 () Bool)

(assert (=> d!45199 m!171085))

(declare-fun m!171087 () Bool)

(assert (=> b!142325 m!171087))

(declare-fun m!171089 () Bool)

(assert (=> b!142326 m!171089))

(assert (=> b!140700 d!45199))

(declare-fun d!45201 () Bool)

(declare-fun e!92731 () Bool)

(assert (=> d!45201 e!92731))

(declare-fun res!67826 () Bool)

(assert (=> d!45201 (=> (not res!67826) (not e!92731))))

(declare-fun lt!74465 () ListLongMap!1711)

(assert (=> d!45201 (= res!67826 (contains!910 lt!74465 (_1!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))))))

(declare-fun lt!74466 () List!1739)

(assert (=> d!45201 (= lt!74465 (ListLongMap!1712 lt!74466))))

(declare-fun lt!74463 () Unit!4393)

(declare-fun lt!74464 () Unit!4393)

(assert (=> d!45201 (= lt!74463 lt!74464)))

(assert (=> d!45201 (= (getValueByKey!174 lt!74466 (_1!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))))))

(assert (=> d!45201 (= lt!74464 (lemmaContainsTupThenGetReturnValue!91 lt!74466 (_1!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))))))

(assert (=> d!45201 (= lt!74466 (insertStrictlySorted!94 (toList!871 lt!73658) (_1!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))))))

(assert (=> d!45201 (= (+!167 lt!73658 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))) lt!74465)))

(declare-fun b!142327 () Bool)

(declare-fun res!67825 () Bool)

(assert (=> b!142327 (=> (not res!67825) (not e!92731))))

(assert (=> b!142327 (= res!67825 (= (getValueByKey!174 (toList!871 lt!74465) (_1!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73656 (minValue!2789 newMap!16))))))))

(declare-fun b!142328 () Bool)

(assert (=> b!142328 (= e!92731 (contains!914 (toList!871 lt!74465) (tuple2!2657 lt!73656 (minValue!2789 newMap!16))))))

(assert (= (and d!45201 res!67826) b!142327))

(assert (= (and b!142327 res!67825) b!142328))

(declare-fun m!171091 () Bool)

(assert (=> d!45201 m!171091))

(declare-fun m!171093 () Bool)

(assert (=> d!45201 m!171093))

(declare-fun m!171095 () Bool)

(assert (=> d!45201 m!171095))

(declare-fun m!171097 () Bool)

(assert (=> d!45201 m!171097))

(declare-fun m!171099 () Bool)

(assert (=> b!142327 m!171099))

(declare-fun m!171101 () Bool)

(assert (=> b!142328 m!171101))

(assert (=> b!140700 d!45201))

(declare-fun d!45203 () Bool)

(assert (=> d!45203 (= (apply!120 (+!167 lt!73647 (tuple2!2657 lt!73659 (minValue!2789 newMap!16))) lt!73654) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73647 (tuple2!2657 lt!73659 (minValue!2789 newMap!16)))) lt!73654)))))

(declare-fun bs!5996 () Bool)

(assert (= bs!5996 d!45203))

(declare-fun m!171103 () Bool)

(assert (=> bs!5996 m!171103))

(assert (=> bs!5996 m!171103))

(declare-fun m!171105 () Bool)

(assert (=> bs!5996 m!171105))

(assert (=> b!140700 d!45203))

(declare-fun d!45205 () Bool)

(assert (=> d!45205 (contains!910 (+!167 lt!73657 (tuple2!2657 lt!73646 (zeroValue!2789 newMap!16))) lt!73663)))

(declare-fun lt!74467 () Unit!4393)

(assert (=> d!45205 (= lt!74467 (choose!870 lt!73657 lt!73646 (zeroValue!2789 newMap!16) lt!73663))))

(assert (=> d!45205 (contains!910 lt!73657 lt!73663)))

(assert (=> d!45205 (= (addStillContains!96 lt!73657 lt!73646 (zeroValue!2789 newMap!16) lt!73663) lt!74467)))

(declare-fun bs!5997 () Bool)

(assert (= bs!5997 d!45205))

(assert (=> bs!5997 m!167999))

(assert (=> bs!5997 m!167999))

(assert (=> bs!5997 m!168005))

(declare-fun m!171107 () Bool)

(assert (=> bs!5997 m!171107))

(declare-fun m!171109 () Bool)

(assert (=> bs!5997 m!171109))

(assert (=> b!140700 d!45205))

(declare-fun lt!74468 () Bool)

(declare-fun d!45207 () Bool)

(assert (=> d!45207 (= lt!74468 (select (content!137 (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!92732 () Bool)

(assert (=> d!45207 (= lt!74468 e!92732)))

(declare-fun res!67828 () Bool)

(assert (=> d!45207 (=> (not res!67828) (not e!92732))))

(assert (=> d!45207 (= res!67828 ((_ is Cons!1736) (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))))))

(assert (=> d!45207 (= (contains!913 (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!74468)))

(declare-fun b!142329 () Bool)

(declare-fun e!92733 () Bool)

(assert (=> b!142329 (= e!92732 e!92733)))

(declare-fun res!67827 () Bool)

(assert (=> b!142329 (=> res!67827 e!92733)))

(assert (=> b!142329 (= res!67827 (= (h!2343 (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!142330 () Bool)

(assert (=> b!142330 (= e!92733 (contains!913 (t!6315 (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!45207 res!67828) b!142329))

(assert (= (and b!142329 (not res!67827)) b!142330))

(declare-fun m!171111 () Bool)

(assert (=> d!45207 m!171111))

(assert (=> d!45207 m!166997))

(declare-fun m!171113 () Bool)

(assert (=> d!45207 m!171113))

(assert (=> b!142330 m!166997))

(declare-fun m!171115 () Bool)

(assert (=> b!142330 m!171115))

(assert (=> b!141115 d!45207))

(declare-fun d!45209 () Bool)

(assert (=> d!45209 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74469 () Unit!4393)

(assert (=> d!45209 (= lt!74469 (choose!871 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92734 () Bool)

(assert (=> d!45209 e!92734))

(declare-fun res!67829 () Bool)

(assert (=> d!45209 (=> (not res!67829) (not e!92734))))

(assert (=> d!45209 (= res!67829 (isStrictlySorted!320 (toList!871 lt!73172)))))

(assert (=> d!45209 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74469)))

(declare-fun b!142331 () Bool)

(assert (=> b!142331 (= e!92734 (containsKey!178 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45209 res!67829) b!142331))

(assert (=> d!45209 m!167599))

(assert (=> d!45209 m!167599))

(assert (=> d!45209 m!168591))

(declare-fun m!171117 () Bool)

(assert (=> d!45209 m!171117))

(assert (=> d!45209 m!168995))

(assert (=> b!142331 m!168587))

(assert (=> b!140992 d!45209))

(assert (=> b!140992 d!44947))

(assert (=> b!140992 d!44949))

(declare-fun d!45211 () Bool)

(declare-fun res!67830 () Bool)

(declare-fun e!92735 () Bool)

(assert (=> d!45211 (=> res!67830 e!92735)))

(assert (=> d!45211 (= res!67830 (and ((_ is Cons!1735) (toList!871 lt!73128)) (= (_1!1339 (h!2342 (toList!871 lt!73128))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45211 (= (containsKey!178 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000) e!92735)))

(declare-fun b!142332 () Bool)

(declare-fun e!92736 () Bool)

(assert (=> b!142332 (= e!92735 e!92736)))

(declare-fun res!67831 () Bool)

(assert (=> b!142332 (=> (not res!67831) (not e!92736))))

(assert (=> b!142332 (= res!67831 (and (or (not ((_ is Cons!1735) (toList!871 lt!73128))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73128))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (toList!871 lt!73128)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73128))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142333 () Bool)

(assert (=> b!142333 (= e!92736 (containsKey!178 (t!6314 (toList!871 lt!73128)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45211 (not res!67830)) b!142332))

(assert (= (and b!142332 res!67831) b!142333))

(declare-fun m!171119 () Bool)

(assert (=> b!142333 m!171119))

(assert (=> d!43999 d!45211))

(declare-fun d!45213 () Bool)

(declare-fun res!67832 () Bool)

(declare-fun e!92737 () Bool)

(assert (=> d!45213 (=> res!67832 e!92737)))

(assert (=> d!45213 (= res!67832 (and ((_ is Cons!1735) lt!73558) (= (_1!1339 (h!2342 lt!73558)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45213 (= (containsKey!178 lt!73558 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92737)))

(declare-fun b!142334 () Bool)

(declare-fun e!92738 () Bool)

(assert (=> b!142334 (= e!92737 e!92738)))

(declare-fun res!67833 () Bool)

(assert (=> b!142334 (=> (not res!67833) (not e!92738))))

(assert (=> b!142334 (= res!67833 (and (or (not ((_ is Cons!1735) lt!73558)) (bvsle (_1!1339 (h!2342 lt!73558)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73558) (bvslt (_1!1339 (h!2342 lt!73558)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142335 () Bool)

(assert (=> b!142335 (= e!92738 (containsKey!178 (t!6314 lt!73558) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45213 (not res!67832)) b!142334))

(assert (= (and b!142334 res!67833) b!142335))

(declare-fun m!171121 () Bool)

(assert (=> b!142335 m!171121))

(assert (=> b!140559 d!45213))

(declare-fun lt!74470 () Bool)

(declare-fun d!45215 () Bool)

(assert (=> d!45215 (= lt!74470 (select (content!138 (toList!871 lt!73755)) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun e!92740 () Bool)

(assert (=> d!45215 (= lt!74470 e!92740)))

(declare-fun res!67834 () Bool)

(assert (=> d!45215 (=> (not res!67834) (not e!92740))))

(assert (=> d!45215 (= res!67834 ((_ is Cons!1735) (toList!871 lt!73755)))))

(assert (=> d!45215 (= (contains!914 (toList!871 lt!73755) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74470)))

(declare-fun b!142336 () Bool)

(declare-fun e!92739 () Bool)

(assert (=> b!142336 (= e!92740 e!92739)))

(declare-fun res!67835 () Bool)

(assert (=> b!142336 (=> res!67835 e!92739)))

(assert (=> b!142336 (= res!67835 (= (h!2342 (toList!871 lt!73755)) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun b!142337 () Bool)

(assert (=> b!142337 (= e!92739 (contains!914 (t!6314 (toList!871 lt!73755)) (ite (or c!26263 c!26266) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45215 res!67834) b!142336))

(assert (= (and b!142336 (not res!67835)) b!142337))

(declare-fun m!171123 () Bool)

(assert (=> d!45215 m!171123))

(declare-fun m!171125 () Bool)

(assert (=> d!45215 m!171125))

(declare-fun m!171127 () Bool)

(assert (=> b!142337 m!171127))

(assert (=> b!140891 d!45215))

(assert (=> d!43757 d!43741))

(assert (=> d!43757 d!43759))

(declare-fun d!45217 () Bool)

(assert (=> d!45217 (contains!910 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) lt!73190)))

(assert (=> d!45217 true))

(declare-fun _$35!393 () Unit!4393)

(assert (=> d!45217 (= (choose!870 lt!73184 lt!73173 (zeroValue!2789 newMap!16) lt!73190) _$35!393)))

(declare-fun bs!5998 () Bool)

(assert (= bs!5998 d!45217))

(assert (=> bs!5998 m!166821))

(assert (=> bs!5998 m!166821))

(assert (=> bs!5998 m!166827))

(assert (=> d!43757 d!45217))

(declare-fun d!45219 () Bool)

(declare-fun e!92742 () Bool)

(assert (=> d!45219 e!92742))

(declare-fun res!67836 () Bool)

(assert (=> d!45219 (=> res!67836 e!92742)))

(declare-fun lt!74474 () Bool)

(assert (=> d!45219 (= res!67836 (not lt!74474))))

(declare-fun lt!74473 () Bool)

(assert (=> d!45219 (= lt!74474 lt!74473)))

(declare-fun lt!74472 () Unit!4393)

(declare-fun e!92741 () Unit!4393)

(assert (=> d!45219 (= lt!74472 e!92741)))

(declare-fun c!26900 () Bool)

(assert (=> d!45219 (= c!26900 lt!74473)))

(assert (=> d!45219 (= lt!74473 (containsKey!178 (toList!871 lt!73184) lt!73190))))

(assert (=> d!45219 (= (contains!910 lt!73184 lt!73190) lt!74474)))

(declare-fun b!142338 () Bool)

(declare-fun lt!74471 () Unit!4393)

(assert (=> b!142338 (= e!92741 lt!74471)))

(assert (=> b!142338 (= lt!74471 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73184) lt!73190))))

(assert (=> b!142338 (isDefined!128 (getValueByKey!174 (toList!871 lt!73184) lt!73190))))

(declare-fun b!142339 () Bool)

(declare-fun Unit!4498 () Unit!4393)

(assert (=> b!142339 (= e!92741 Unit!4498)))

(declare-fun b!142340 () Bool)

(assert (=> b!142340 (= e!92742 (isDefined!128 (getValueByKey!174 (toList!871 lt!73184) lt!73190)))))

(assert (= (and d!45219 c!26900) b!142338))

(assert (= (and d!45219 (not c!26900)) b!142339))

(assert (= (and d!45219 (not res!67836)) b!142340))

(declare-fun m!171129 () Bool)

(assert (=> d!45219 m!171129))

(declare-fun m!171131 () Bool)

(assert (=> b!142338 m!171131))

(declare-fun m!171133 () Bool)

(assert (=> b!142338 m!171133))

(assert (=> b!142338 m!171133))

(declare-fun m!171135 () Bool)

(assert (=> b!142338 m!171135))

(assert (=> b!142340 m!171133))

(assert (=> b!142340 m!171133))

(assert (=> b!142340 m!171135))

(assert (=> d!43757 d!45219))

(declare-fun d!45221 () Bool)

(assert (=> d!45221 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140681 d!45221))

(declare-fun d!45223 () Bool)

(declare-fun e!92743 () Bool)

(assert (=> d!45223 e!92743))

(declare-fun res!67838 () Bool)

(assert (=> d!45223 (=> (not res!67838) (not e!92743))))

(declare-fun lt!74477 () ListLongMap!1711)

(assert (=> d!45223 (= res!67838 (contains!910 lt!74477 (_1!1339 (tuple2!2657 lt!73547 lt!73546))))))

(declare-fun lt!74478 () List!1739)

(assert (=> d!45223 (= lt!74477 (ListLongMap!1712 lt!74478))))

(declare-fun lt!74475 () Unit!4393)

(declare-fun lt!74476 () Unit!4393)

(assert (=> d!45223 (= lt!74475 lt!74476)))

(assert (=> d!45223 (= (getValueByKey!174 lt!74478 (_1!1339 (tuple2!2657 lt!73547 lt!73546))) (Some!179 (_2!1339 (tuple2!2657 lt!73547 lt!73546))))))

(assert (=> d!45223 (= lt!74476 (lemmaContainsTupThenGetReturnValue!91 lt!74478 (_1!1339 (tuple2!2657 lt!73547 lt!73546)) (_2!1339 (tuple2!2657 lt!73547 lt!73546))))))

(assert (=> d!45223 (= lt!74478 (insertStrictlySorted!94 (toList!871 lt!73545) (_1!1339 (tuple2!2657 lt!73547 lt!73546)) (_2!1339 (tuple2!2657 lt!73547 lt!73546))))))

(assert (=> d!45223 (= (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546)) lt!74477)))

(declare-fun b!142341 () Bool)

(declare-fun res!67837 () Bool)

(assert (=> b!142341 (=> (not res!67837) (not e!92743))))

(assert (=> b!142341 (= res!67837 (= (getValueByKey!174 (toList!871 lt!74477) (_1!1339 (tuple2!2657 lt!73547 lt!73546))) (Some!179 (_2!1339 (tuple2!2657 lt!73547 lt!73546)))))))

(declare-fun b!142342 () Bool)

(assert (=> b!142342 (= e!92743 (contains!914 (toList!871 lt!74477) (tuple2!2657 lt!73547 lt!73546)))))

(assert (= (and d!45223 res!67838) b!142341))

(assert (= (and b!142341 res!67837) b!142342))

(declare-fun m!171137 () Bool)

(assert (=> d!45223 m!171137))

(declare-fun m!171139 () Bool)

(assert (=> d!45223 m!171139))

(declare-fun m!171141 () Bool)

(assert (=> d!45223 m!171141))

(declare-fun m!171143 () Bool)

(assert (=> d!45223 m!171143))

(declare-fun m!171145 () Bool)

(assert (=> b!142341 m!171145))

(declare-fun m!171147 () Bool)

(assert (=> b!142342 m!171147))

(assert (=> b!140515 d!45223))

(declare-fun d!45225 () Bool)

(declare-fun e!92744 () Bool)

(assert (=> d!45225 e!92744))

(declare-fun res!67840 () Bool)

(assert (=> d!45225 (=> (not res!67840) (not e!92744))))

(declare-fun lt!74481 () ListLongMap!1711)

(assert (=> d!45225 (= res!67840 (contains!910 lt!74481 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74482 () List!1739)

(assert (=> d!45225 (= lt!74481 (ListLongMap!1712 lt!74482))))

(declare-fun lt!74479 () Unit!4393)

(declare-fun lt!74480 () Unit!4393)

(assert (=> d!45225 (= lt!74479 lt!74480)))

(assert (=> d!45225 (= (getValueByKey!174 lt!74482 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45225 (= lt!74480 (lemmaContainsTupThenGetReturnValue!91 lt!74482 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45225 (= lt!74482 (insertStrictlySorted!94 (toList!871 call!15578) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45225 (= (+!167 call!15578 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74481)))

(declare-fun b!142343 () Bool)

(declare-fun res!67839 () Bool)

(assert (=> b!142343 (=> (not res!67839) (not e!92744))))

(assert (=> b!142343 (= res!67839 (= (getValueByKey!174 (toList!871 lt!74481) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142344 () Bool)

(assert (=> b!142344 (= e!92744 (contains!914 (toList!871 lt!74481) (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite (or c!26231 c!26229) (_values!2922 newMap!16) lt!73089)) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45225 res!67840) b!142343))

(assert (= (and b!142343 res!67839) b!142344))

(declare-fun m!171149 () Bool)

(assert (=> d!45225 m!171149))

(declare-fun m!171151 () Bool)

(assert (=> d!45225 m!171151))

(declare-fun m!171153 () Bool)

(assert (=> d!45225 m!171153))

(declare-fun m!171155 () Bool)

(assert (=> d!45225 m!171155))

(declare-fun m!171157 () Bool)

(assert (=> b!142343 m!171157))

(declare-fun m!171159 () Bool)

(assert (=> b!142344 m!171159))

(assert (=> b!140515 d!45225))

(declare-fun d!45227 () Bool)

(assert (=> d!45227 (not (contains!910 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546)) lt!73543))))

(declare-fun lt!74483 () Unit!4393)

(assert (=> d!45227 (= lt!74483 (choose!874 lt!73545 lt!73547 lt!73546 lt!73543))))

(declare-fun e!92745 () Bool)

(assert (=> d!45227 e!92745))

(declare-fun res!67841 () Bool)

(assert (=> d!45227 (=> (not res!67841) (not e!92745))))

(assert (=> d!45227 (= res!67841 (not (contains!910 lt!73545 lt!73543)))))

(assert (=> d!45227 (= (addStillNotContains!65 lt!73545 lt!73547 lt!73546 lt!73543) lt!74483)))

(declare-fun b!142345 () Bool)

(assert (=> b!142345 (= e!92745 (not (= lt!73547 lt!73543)))))

(assert (= (and d!45227 res!67841) b!142345))

(assert (=> d!45227 m!167629))

(assert (=> d!45227 m!167629))

(assert (=> d!45227 m!167635))

(declare-fun m!171161 () Bool)

(assert (=> d!45227 m!171161))

(declare-fun m!171163 () Bool)

(assert (=> d!45227 m!171163))

(assert (=> b!140515 d!45227))

(assert (=> b!140515 d!43893))

(declare-fun d!45229 () Bool)

(declare-fun e!92747 () Bool)

(assert (=> d!45229 e!92747))

(declare-fun res!67842 () Bool)

(assert (=> d!45229 (=> res!67842 e!92747)))

(declare-fun lt!74487 () Bool)

(assert (=> d!45229 (= res!67842 (not lt!74487))))

(declare-fun lt!74486 () Bool)

(assert (=> d!45229 (= lt!74487 lt!74486)))

(declare-fun lt!74485 () Unit!4393)

(declare-fun e!92746 () Unit!4393)

(assert (=> d!45229 (= lt!74485 e!92746)))

(declare-fun c!26901 () Bool)

(assert (=> d!45229 (= c!26901 lt!74486)))

(assert (=> d!45229 (= lt!74486 (containsKey!178 (toList!871 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546))) lt!73543))))

(assert (=> d!45229 (= (contains!910 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546)) lt!73543) lt!74487)))

(declare-fun b!142346 () Bool)

(declare-fun lt!74484 () Unit!4393)

(assert (=> b!142346 (= e!92746 lt!74484)))

(assert (=> b!142346 (= lt!74484 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546))) lt!73543))))

(assert (=> b!142346 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546))) lt!73543))))

(declare-fun b!142347 () Bool)

(declare-fun Unit!4499 () Unit!4393)

(assert (=> b!142347 (= e!92746 Unit!4499)))

(declare-fun b!142348 () Bool)

(assert (=> b!142348 (= e!92747 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73545 (tuple2!2657 lt!73547 lt!73546))) lt!73543)))))

(assert (= (and d!45229 c!26901) b!142346))

(assert (= (and d!45229 (not c!26901)) b!142347))

(assert (= (and d!45229 (not res!67842)) b!142348))

(declare-fun m!171165 () Bool)

(assert (=> d!45229 m!171165))

(declare-fun m!171167 () Bool)

(assert (=> b!142346 m!171167))

(declare-fun m!171169 () Bool)

(assert (=> b!142346 m!171169))

(assert (=> b!142346 m!171169))

(declare-fun m!171171 () Bool)

(assert (=> b!142346 m!171171))

(assert (=> b!142348 m!171169))

(assert (=> b!142348 m!171169))

(assert (=> b!142348 m!171171))

(assert (=> b!140515 d!45229))

(declare-fun d!45231 () Bool)

(declare-fun res!67843 () Bool)

(declare-fun e!92748 () Bool)

(assert (=> d!45231 (=> res!67843 e!92748)))

(assert (=> d!45231 (= res!67843 (or ((_ is Nil!1736) lt!73801) ((_ is Nil!1736) (t!6314 lt!73801))))))

(assert (=> d!45231 (= (isStrictlySorted!320 lt!73801) e!92748)))

(declare-fun b!142349 () Bool)

(declare-fun e!92749 () Bool)

(assert (=> b!142349 (= e!92748 e!92749)))

(declare-fun res!67844 () Bool)

(assert (=> b!142349 (=> (not res!67844) (not e!92749))))

(assert (=> b!142349 (= res!67844 (bvslt (_1!1339 (h!2342 lt!73801)) (_1!1339 (h!2342 (t!6314 lt!73801)))))))

(declare-fun b!142350 () Bool)

(assert (=> b!142350 (= e!92749 (isStrictlySorted!320 (t!6314 lt!73801)))))

(assert (= (and d!45231 (not res!67843)) b!142349))

(assert (= (and b!142349 res!67844) b!142350))

(declare-fun m!171173 () Bool)

(assert (=> b!142350 m!171173))

(assert (=> d!44071 d!45231))

(declare-fun d!45233 () Bool)

(declare-fun res!67845 () Bool)

(declare-fun e!92750 () Bool)

(assert (=> d!45233 (=> res!67845 e!92750)))

(assert (=> d!45233 (= res!67845 (or ((_ is Nil!1736) (toList!871 lt!73016)) ((_ is Nil!1736) (t!6314 (toList!871 lt!73016)))))))

(assert (=> d!45233 (= (isStrictlySorted!320 (toList!871 lt!73016)) e!92750)))

(declare-fun b!142351 () Bool)

(declare-fun e!92751 () Bool)

(assert (=> b!142351 (= e!92750 e!92751)))

(declare-fun res!67846 () Bool)

(assert (=> b!142351 (=> (not res!67846) (not e!92751))))

(assert (=> b!142351 (= res!67846 (bvslt (_1!1339 (h!2342 (toList!871 lt!73016))) (_1!1339 (h!2342 (t!6314 (toList!871 lt!73016))))))))

(declare-fun b!142352 () Bool)

(assert (=> b!142352 (= e!92751 (isStrictlySorted!320 (t!6314 (toList!871 lt!73016))))))

(assert (= (and d!45233 (not res!67845)) b!142351))

(assert (= (and b!142351 res!67846) b!142352))

(assert (=> b!142352 m!169669))

(assert (=> d!44071 d!45233))

(declare-fun d!45235 () Bool)

(assert (=> d!45235 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5999 () Bool)

(assert (= bs!5999 d!45235))

(assert (=> bs!5999 m!167255))

(declare-fun m!171175 () Bool)

(assert (=> bs!5999 m!171175))

(assert (=> b!140360 d!45235))

(declare-fun b!142356 () Bool)

(declare-fun e!92753 () Option!180)

(assert (=> b!142356 (= e!92753 None!178)))

(declare-fun b!142354 () Bool)

(declare-fun e!92752 () Option!180)

(assert (=> b!142354 (= e!92752 e!92753)))

(declare-fun c!26903 () Bool)

(assert (=> b!142354 (= c!26903 (and ((_ is Cons!1735) (toList!871 lt!73266)) (not (= (_1!1339 (h!2342 (toList!871 lt!73266))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142353 () Bool)

(assert (=> b!142353 (= e!92752 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73266)))))))

(declare-fun d!45237 () Bool)

(declare-fun c!26902 () Bool)

(assert (=> d!45237 (= c!26902 (and ((_ is Cons!1735) (toList!871 lt!73266)) (= (_1!1339 (h!2342 (toList!871 lt!73266))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45237 (= (getValueByKey!174 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000) e!92752)))

(declare-fun b!142355 () Bool)

(assert (=> b!142355 (= e!92753 (getValueByKey!174 (t!6314 (toList!871 lt!73266)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45237 c!26902) b!142353))

(assert (= (and d!45237 (not c!26902)) b!142354))

(assert (= (and b!142354 c!26903) b!142355))

(assert (= (and b!142354 (not c!26903)) b!142356))

(declare-fun m!171177 () Bool)

(assert (=> b!142355 m!171177))

(assert (=> b!140360 d!45237))

(assert (=> b!140827 d!43699))

(assert (=> b!140805 d!43961))

(assert (=> b!140451 d!44333))

(declare-fun b!142357 () Bool)

(declare-fun e!92756 () List!1739)

(declare-fun call!15730 () List!1739)

(assert (=> b!142357 (= e!92756 call!15730)))

(declare-fun b!142358 () Bool)

(declare-fun e!92754 () List!1739)

(declare-fun call!15729 () List!1739)

(assert (=> b!142358 (= e!92754 call!15729)))

(declare-fun e!92757 () Bool)

(declare-fun b!142359 () Bool)

(declare-fun lt!74488 () List!1739)

(assert (=> b!142359 (= e!92757 (contains!914 lt!74488 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92755 () List!1739)

(declare-fun bm!15725 () Bool)

(declare-fun c!26907 () Bool)

(assert (=> bm!15725 (= call!15730 ($colon$colon!93 e!92755 (ite c!26907 (h!2342 (t!6314 (toList!871 lt!73015))) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26904 () Bool)

(assert (=> bm!15725 (= c!26904 c!26907)))

(declare-fun bm!15726 () Bool)

(declare-fun call!15728 () List!1739)

(assert (=> bm!15726 (= call!15729 call!15728)))

(declare-fun b!142360 () Bool)

(declare-fun res!67847 () Bool)

(assert (=> b!142360 (=> (not res!67847) (not e!92757))))

(assert (=> b!142360 (= res!67847 (containsKey!178 lt!74488 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!45239 () Bool)

(assert (=> d!45239 e!92757))

(declare-fun res!67848 () Bool)

(assert (=> d!45239 (=> (not res!67848) (not e!92757))))

(assert (=> d!45239 (= res!67848 (isStrictlySorted!320 lt!74488))))

(assert (=> d!45239 (= lt!74488 e!92756)))

(assert (=> d!45239 (= c!26907 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73015))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73015)))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45239 (isStrictlySorted!320 (t!6314 (toList!871 lt!73015)))))

(assert (=> d!45239 (= (insertStrictlySorted!94 (t!6314 (toList!871 lt!73015)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74488)))

(declare-fun b!142361 () Bool)

(declare-fun c!26906 () Bool)

(declare-fun c!26905 () Bool)

(assert (=> b!142361 (= e!92755 (ite c!26906 (t!6314 (t!6314 (toList!871 lt!73015))) (ite c!26905 (Cons!1735 (h!2342 (t!6314 (toList!871 lt!73015))) (t!6314 (t!6314 (toList!871 lt!73015)))) Nil!1736)))))

(declare-fun b!142362 () Bool)

(assert (=> b!142362 (= c!26905 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73015))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73015)))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92758 () List!1739)

(assert (=> b!142362 (= e!92758 e!92754)))

(declare-fun b!142363 () Bool)

(assert (=> b!142363 (= e!92754 call!15729)))

(declare-fun b!142364 () Bool)

(assert (=> b!142364 (= e!92755 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 lt!73015))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15727 () Bool)

(assert (=> bm!15727 (= call!15728 call!15730)))

(declare-fun b!142365 () Bool)

(assert (=> b!142365 (= e!92756 e!92758)))

(assert (=> b!142365 (= c!26906 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73015))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73015)))) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142366 () Bool)

(assert (=> b!142366 (= e!92758 call!15728)))

(assert (= (and d!45239 c!26907) b!142357))

(assert (= (and d!45239 (not c!26907)) b!142365))

(assert (= (and b!142365 c!26906) b!142366))

(assert (= (and b!142365 (not c!26906)) b!142362))

(assert (= (and b!142362 c!26905) b!142358))

(assert (= (and b!142362 (not c!26905)) b!142363))

(assert (= (or b!142358 b!142363) bm!15726))

(assert (= (or b!142366 bm!15726) bm!15727))

(assert (= (or b!142357 bm!15727) bm!15725))

(assert (= (and bm!15725 c!26904) b!142364))

(assert (= (and bm!15725 (not c!26904)) b!142361))

(assert (= (and d!45239 res!67848) b!142360))

(assert (= (and b!142360 res!67847) b!142359))

(declare-fun m!171179 () Bool)

(assert (=> b!142360 m!171179))

(declare-fun m!171181 () Bool)

(assert (=> b!142364 m!171181))

(declare-fun m!171183 () Bool)

(assert (=> bm!15725 m!171183))

(declare-fun m!171185 () Bool)

(assert (=> b!142359 m!171185))

(declare-fun m!171187 () Bool)

(assert (=> d!45239 m!171187))

(assert (=> d!45239 m!169813))

(assert (=> b!141137 d!45239))

(declare-fun d!45241 () Bool)

(declare-fun res!67849 () Bool)

(declare-fun e!92759 () Bool)

(assert (=> d!45241 (=> res!67849 e!92759)))

(assert (=> d!45241 (= res!67849 (and ((_ is Cons!1735) lt!73232) (= (_1!1339 (h!2342 lt!73232)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!45241 (= (containsKey!178 lt!73232 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!92759)))

(declare-fun b!142367 () Bool)

(declare-fun e!92760 () Bool)

(assert (=> b!142367 (= e!92759 e!92760)))

(declare-fun res!67850 () Bool)

(assert (=> b!142367 (=> (not res!67850) (not e!92760))))

(assert (=> b!142367 (= res!67850 (and (or (not ((_ is Cons!1735) lt!73232)) (bvsle (_1!1339 (h!2342 lt!73232)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) ((_ is Cons!1735) lt!73232) (bvslt (_1!1339 (h!2342 lt!73232)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142368 () Bool)

(assert (=> b!142368 (= e!92760 (containsKey!178 (t!6314 lt!73232) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45241 (not res!67849)) b!142367))

(assert (= (and b!142367 res!67850) b!142368))

(declare-fun m!171189 () Bool)

(assert (=> b!142368 m!171189))

(assert (=> b!140764 d!45241))

(declare-fun d!45243 () Bool)

(declare-fun lt!74489 () Bool)

(assert (=> d!45243 (= lt!74489 (select (content!138 lt!73158) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92762 () Bool)

(assert (=> d!45243 (= lt!74489 e!92762)))

(declare-fun res!67851 () Bool)

(assert (=> d!45243 (=> (not res!67851) (not e!92762))))

(assert (=> d!45243 (= res!67851 ((_ is Cons!1735) lt!73158))))

(assert (=> d!45243 (= (contains!914 lt!73158 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74489)))

(declare-fun b!142369 () Bool)

(declare-fun e!92761 () Bool)

(assert (=> b!142369 (= e!92762 e!92761)))

(declare-fun res!67852 () Bool)

(assert (=> b!142369 (=> res!67852 e!92761)))

(assert (=> b!142369 (= res!67852 (= (h!2342 lt!73158) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142370 () Bool)

(assert (=> b!142370 (= e!92761 (contains!914 (t!6314 lt!73158) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45243 res!67851) b!142369))

(assert (= (and b!142369 (not res!67852)) b!142370))

(declare-fun m!171191 () Bool)

(assert (=> d!45243 m!171191))

(declare-fun m!171193 () Bool)

(assert (=> d!45243 m!171193))

(declare-fun m!171195 () Bool)

(assert (=> b!142370 m!171195))

(assert (=> b!141003 d!45243))

(declare-fun b!142371 () Bool)

(declare-fun e!92763 () Bool)

(declare-fun e!92765 () Bool)

(assert (=> b!142371 (= e!92763 e!92765)))

(declare-fun c!26908 () Bool)

(assert (=> b!142371 (= c!26908 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142372 () Bool)

(declare-fun e!92766 () Bool)

(assert (=> b!142372 (= e!92766 e!92763)))

(declare-fun res!67853 () Bool)

(assert (=> b!142372 (=> (not res!67853) (not e!92763))))

(declare-fun e!92764 () Bool)

(assert (=> b!142372 (= res!67853 (not e!92764))))

(declare-fun res!67854 () Bool)

(assert (=> b!142372 (=> (not res!67854) (not e!92764))))

(assert (=> b!142372 (= res!67854 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142373 () Bool)

(declare-fun call!15731 () Bool)

(assert (=> b!142373 (= e!92765 call!15731)))

(declare-fun d!45245 () Bool)

(declare-fun res!67855 () Bool)

(assert (=> d!45245 (=> res!67855 e!92766)))

(assert (=> d!45245 (= res!67855 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!45245 (= (arrayNoDuplicates!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26411 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737))) e!92766)))

(declare-fun b!142374 () Bool)

(assert (=> b!142374 (= e!92764 (contains!913 (ite c!26411 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142375 () Bool)

(assert (=> b!142375 (= e!92765 call!15731)))

(declare-fun bm!15728 () Bool)

(assert (=> bm!15728 (= call!15731 (arrayNoDuplicates!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26908 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26411 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737))) (ite c!26411 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)))))))

(assert (= (and d!45245 (not res!67855)) b!142372))

(assert (= (and b!142372 res!67854) b!142374))

(assert (= (and b!142372 res!67853) b!142371))

(assert (= (and b!142371 c!26908) b!142373))

(assert (= (and b!142371 (not c!26908)) b!142375))

(assert (= (or b!142373 b!142375) bm!15728))

(assert (=> b!142371 m!168939))

(assert (=> b!142371 m!168939))

(assert (=> b!142371 m!168941))

(assert (=> b!142372 m!168939))

(assert (=> b!142372 m!168939))

(assert (=> b!142372 m!168941))

(assert (=> b!142374 m!168939))

(assert (=> b!142374 m!168939))

(declare-fun m!171197 () Bool)

(assert (=> b!142374 m!171197))

(assert (=> bm!15728 m!168939))

(declare-fun m!171199 () Bool)

(assert (=> bm!15728 m!171199))

(assert (=> bm!15591 d!45245))

(declare-fun d!45247 () Bool)

(assert (=> d!45247 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74490 () Unit!4393)

(assert (=> d!45247 (= lt!74490 (choose!871 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92767 () Bool)

(assert (=> d!45247 e!92767))

(declare-fun res!67856 () Bool)

(assert (=> d!45247 (=> (not res!67856) (not e!92767))))

(assert (=> d!45247 (= res!67856 (isStrictlySorted!320 (toList!871 lt!73128)))))

(assert (=> d!45247 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74490)))

(declare-fun b!142376 () Bool)

(assert (=> b!142376 (= e!92767 (containsKey!178 (toList!871 lt!73128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45247 res!67856) b!142376))

(assert (=> d!45247 m!167669))

(assert (=> d!45247 m!167669))

(assert (=> d!45247 m!167671))

(declare-fun m!171201 () Bool)

(assert (=> d!45247 m!171201))

(assert (=> d!45247 m!169787))

(assert (=> b!142376 m!167665))

(assert (=> b!140566 d!45247))

(assert (=> b!140566 d!45087))

(assert (=> b!140566 d!44803))

(declare-fun d!45249 () Bool)

(assert (=> d!45249 (= (get!1528 (getValueByKey!174 (toList!871 lt!73130) lt!73137)) (v!3279 (getValueByKey!174 (toList!871 lt!73130) lt!73137)))))

(assert (=> d!44085 d!45249))

(declare-fun b!142380 () Bool)

(declare-fun e!92769 () Option!180)

(assert (=> b!142380 (= e!92769 None!178)))

(declare-fun b!142378 () Bool)

(declare-fun e!92768 () Option!180)

(assert (=> b!142378 (= e!92768 e!92769)))

(declare-fun c!26910 () Bool)

(assert (=> b!142378 (= c!26910 (and ((_ is Cons!1735) (toList!871 lt!73130)) (not (= (_1!1339 (h!2342 (toList!871 lt!73130))) lt!73137))))))

(declare-fun b!142377 () Bool)

(assert (=> b!142377 (= e!92768 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73130)))))))

(declare-fun d!45251 () Bool)

(declare-fun c!26909 () Bool)

(assert (=> d!45251 (= c!26909 (and ((_ is Cons!1735) (toList!871 lt!73130)) (= (_1!1339 (h!2342 (toList!871 lt!73130))) lt!73137)))))

(assert (=> d!45251 (= (getValueByKey!174 (toList!871 lt!73130) lt!73137) e!92768)))

(declare-fun b!142379 () Bool)

(assert (=> b!142379 (= e!92769 (getValueByKey!174 (t!6314 (toList!871 lt!73130)) lt!73137))))

(assert (= (and d!45251 c!26909) b!142377))

(assert (= (and d!45251 (not c!26909)) b!142378))

(assert (= (and b!142378 c!26910) b!142379))

(assert (= (and b!142378 (not c!26910)) b!142380))

(declare-fun m!171203 () Bool)

(assert (=> b!142379 m!171203))

(assert (=> d!44085 d!45251))

(assert (=> d!44203 d!44047))

(assert (=> d!44203 d!43601))

(assert (=> d!44203 d!44049))

(declare-fun d!45253 () Bool)

(declare-fun e!92771 () Bool)

(assert (=> d!45253 e!92771))

(declare-fun res!67857 () Bool)

(assert (=> d!45253 (=> res!67857 e!92771)))

(declare-fun lt!74494 () Bool)

(assert (=> d!45253 (= res!67857 (not lt!74494))))

(declare-fun lt!74493 () Bool)

(assert (=> d!45253 (= lt!74494 lt!74493)))

(declare-fun lt!74492 () Unit!4393)

(declare-fun e!92770 () Unit!4393)

(assert (=> d!45253 (= lt!74492 e!92770)))

(declare-fun c!26911 () Bool)

(assert (=> d!45253 (= c!26911 lt!74493)))

(assert (=> d!45253 (= lt!74493 (containsKey!178 (toList!871 lt!73697) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45253 (= (contains!910 lt!73697 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74494)))

(declare-fun b!142381 () Bool)

(declare-fun lt!74491 () Unit!4393)

(assert (=> b!142381 (= e!92770 lt!74491)))

(assert (=> b!142381 (= lt!74491 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73697) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142381 (isDefined!128 (getValueByKey!174 (toList!871 lt!73697) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142382 () Bool)

(declare-fun Unit!4500 () Unit!4393)

(assert (=> b!142382 (= e!92770 Unit!4500)))

(declare-fun b!142383 () Bool)

(assert (=> b!142383 (= e!92771 (isDefined!128 (getValueByKey!174 (toList!871 lt!73697) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45253 c!26911) b!142381))

(assert (= (and d!45253 (not c!26911)) b!142382))

(assert (= (and d!45253 (not res!67857)) b!142383))

(declare-fun m!171205 () Bool)

(assert (=> d!45253 m!171205))

(declare-fun m!171207 () Bool)

(assert (=> b!142381 m!171207))

(assert (=> b!142381 m!170297))

(assert (=> b!142381 m!170297))

(declare-fun m!171209 () Bool)

(assert (=> b!142381 m!171209))

(assert (=> b!142383 m!170297))

(assert (=> b!142383 m!170297))

(assert (=> b!142383 m!171209))

(assert (=> bm!15616 d!45253))

(declare-fun d!45255 () Bool)

(assert (=> d!45255 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73015) lt!73021)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73015) lt!73021))))))

(declare-fun bs!6000 () Bool)

(assert (= bs!6000 d!45255))

(assert (=> bs!6000 m!167879))

(declare-fun m!171211 () Bool)

(assert (=> bs!6000 m!171211))

(assert (=> b!140637 d!45255))

(declare-fun b!142387 () Bool)

(declare-fun e!92773 () Option!180)

(assert (=> b!142387 (= e!92773 None!178)))

(declare-fun b!142385 () Bool)

(declare-fun e!92772 () Option!180)

(assert (=> b!142385 (= e!92772 e!92773)))

(declare-fun c!26913 () Bool)

(assert (=> b!142385 (= c!26913 (and ((_ is Cons!1735) (toList!871 lt!73015)) (not (= (_1!1339 (h!2342 (toList!871 lt!73015))) lt!73021))))))

(declare-fun b!142384 () Bool)

(assert (=> b!142384 (= e!92772 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73015)))))))

(declare-fun d!45257 () Bool)

(declare-fun c!26912 () Bool)

(assert (=> d!45257 (= c!26912 (and ((_ is Cons!1735) (toList!871 lt!73015)) (= (_1!1339 (h!2342 (toList!871 lt!73015))) lt!73021)))))

(assert (=> d!45257 (= (getValueByKey!174 (toList!871 lt!73015) lt!73021) e!92772)))

(declare-fun b!142386 () Bool)

(assert (=> b!142386 (= e!92773 (getValueByKey!174 (t!6314 (toList!871 lt!73015)) lt!73021))))

(assert (= (and d!45257 c!26912) b!142384))

(assert (= (and d!45257 (not c!26912)) b!142385))

(assert (= (and b!142385 c!26913) b!142386))

(assert (= (and b!142385 (not c!26913)) b!142387))

(declare-fun m!171213 () Bool)

(assert (=> b!142386 m!171213))

(assert (=> b!140637 d!45257))

(assert (=> b!140909 d!43699))

(declare-fun d!45259 () Bool)

(declare-fun e!92775 () Bool)

(assert (=> d!45259 e!92775))

(declare-fun res!67858 () Bool)

(assert (=> d!45259 (=> res!67858 e!92775)))

(declare-fun lt!74498 () Bool)

(assert (=> d!45259 (= res!67858 (not lt!74498))))

(declare-fun lt!74497 () Bool)

(assert (=> d!45259 (= lt!74498 lt!74497)))

(declare-fun lt!74496 () Unit!4393)

(declare-fun e!92774 () Unit!4393)

(assert (=> d!45259 (= lt!74496 e!92774)))

(declare-fun c!26914 () Bool)

(assert (=> d!45259 (= c!26914 lt!74497)))

(assert (=> d!45259 (= lt!74497 (containsKey!178 (toList!871 lt!73764) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45259 (= (contains!910 lt!73764 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74498)))

(declare-fun b!142388 () Bool)

(declare-fun lt!74495 () Unit!4393)

(assert (=> b!142388 (= e!92774 lt!74495)))

(assert (=> b!142388 (= lt!74495 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73764) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142388 (isDefined!128 (getValueByKey!174 (toList!871 lt!73764) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142389 () Bool)

(declare-fun Unit!4501 () Unit!4393)

(assert (=> b!142389 (= e!92774 Unit!4501)))

(declare-fun b!142390 () Bool)

(assert (=> b!142390 (= e!92775 (isDefined!128 (getValueByKey!174 (toList!871 lt!73764) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45259 c!26914) b!142388))

(assert (= (and d!45259 (not c!26914)) b!142389))

(assert (= (and d!45259 (not res!67858)) b!142390))

(declare-fun m!171215 () Bool)

(assert (=> d!45259 m!171215))

(declare-fun m!171217 () Bool)

(assert (=> b!142388 m!171217))

(assert (=> b!142388 m!170313))

(assert (=> b!142388 m!170313))

(declare-fun m!171219 () Bool)

(assert (=> b!142388 m!171219))

(assert (=> b!142390 m!170313))

(assert (=> b!142390 m!170313))

(assert (=> b!142390 m!171219))

(assert (=> bm!15623 d!45259))

(declare-fun d!45261 () Bool)

(declare-fun e!92776 () Bool)

(assert (=> d!45261 e!92776))

(declare-fun res!67860 () Bool)

(assert (=> d!45261 (=> (not res!67860) (not e!92776))))

(declare-fun lt!74501 () ListLongMap!1711)

(assert (=> d!45261 (= res!67860 (contains!910 lt!74501 (_1!1339 (tuple2!2657 lt!73600 lt!73599))))))

(declare-fun lt!74502 () List!1739)

(assert (=> d!45261 (= lt!74501 (ListLongMap!1712 lt!74502))))

(declare-fun lt!74499 () Unit!4393)

(declare-fun lt!74500 () Unit!4393)

(assert (=> d!45261 (= lt!74499 lt!74500)))

(assert (=> d!45261 (= (getValueByKey!174 lt!74502 (_1!1339 (tuple2!2657 lt!73600 lt!73599))) (Some!179 (_2!1339 (tuple2!2657 lt!73600 lt!73599))))))

(assert (=> d!45261 (= lt!74500 (lemmaContainsTupThenGetReturnValue!91 lt!74502 (_1!1339 (tuple2!2657 lt!73600 lt!73599)) (_2!1339 (tuple2!2657 lt!73600 lt!73599))))))

(assert (=> d!45261 (= lt!74502 (insertStrictlySorted!94 (toList!871 lt!73598) (_1!1339 (tuple2!2657 lt!73600 lt!73599)) (_2!1339 (tuple2!2657 lt!73600 lt!73599))))))

(assert (=> d!45261 (= (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599)) lt!74501)))

(declare-fun b!142391 () Bool)

(declare-fun res!67859 () Bool)

(assert (=> b!142391 (=> (not res!67859) (not e!92776))))

(assert (=> b!142391 (= res!67859 (= (getValueByKey!174 (toList!871 lt!74501) (_1!1339 (tuple2!2657 lt!73600 lt!73599))) (Some!179 (_2!1339 (tuple2!2657 lt!73600 lt!73599)))))))

(declare-fun b!142392 () Bool)

(assert (=> b!142392 (= e!92776 (contains!914 (toList!871 lt!74501) (tuple2!2657 lt!73600 lt!73599)))))

(assert (= (and d!45261 res!67860) b!142391))

(assert (= (and b!142391 res!67859) b!142392))

(declare-fun m!171221 () Bool)

(assert (=> d!45261 m!171221))

(declare-fun m!171223 () Bool)

(assert (=> d!45261 m!171223))

(declare-fun m!171225 () Bool)

(assert (=> d!45261 m!171225))

(declare-fun m!171227 () Bool)

(assert (=> d!45261 m!171227))

(declare-fun m!171229 () Bool)

(assert (=> b!142391 m!171229))

(declare-fun m!171231 () Bool)

(assert (=> b!142392 m!171231))

(assert (=> b!140604 d!45261))

(declare-fun d!45263 () Bool)

(assert (=> d!45263 (not (contains!910 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599)) lt!73596))))

(declare-fun lt!74503 () Unit!4393)

(assert (=> d!45263 (= lt!74503 (choose!874 lt!73598 lt!73600 lt!73599 lt!73596))))

(declare-fun e!92777 () Bool)

(assert (=> d!45263 e!92777))

(declare-fun res!67861 () Bool)

(assert (=> d!45263 (=> (not res!67861) (not e!92777))))

(assert (=> d!45263 (= res!67861 (not (contains!910 lt!73598 lt!73596)))))

(assert (=> d!45263 (= (addStillNotContains!65 lt!73598 lt!73600 lt!73599 lt!73596) lt!74503)))

(declare-fun b!142393 () Bool)

(assert (=> b!142393 (= e!92777 (not (= lt!73600 lt!73596)))))

(assert (= (and d!45263 res!67861) b!142393))

(assert (=> d!45263 m!167787))

(assert (=> d!45263 m!167787))

(assert (=> d!45263 m!167793))

(declare-fun m!171233 () Bool)

(assert (=> d!45263 m!171233))

(declare-fun m!171235 () Bool)

(assert (=> d!45263 m!171235))

(assert (=> b!140604 d!45263))

(assert (=> b!140604 d!44113))

(declare-fun d!45265 () Bool)

(declare-fun e!92778 () Bool)

(assert (=> d!45265 e!92778))

(declare-fun res!67863 () Bool)

(assert (=> d!45265 (=> (not res!67863) (not e!92778))))

(declare-fun lt!74506 () ListLongMap!1711)

(assert (=> d!45265 (= res!67863 (contains!910 lt!74506 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74507 () List!1739)

(assert (=> d!45265 (= lt!74506 (ListLongMap!1712 lt!74507))))

(declare-fun lt!74504 () Unit!4393)

(declare-fun lt!74505 () Unit!4393)

(assert (=> d!45265 (= lt!74504 lt!74505)))

(assert (=> d!45265 (= (getValueByKey!174 lt!74507 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45265 (= lt!74505 (lemmaContainsTupThenGetReturnValue!91 lt!74507 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45265 (= lt!74507 (insertStrictlySorted!94 (toList!871 call!15590) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45265 (= (+!167 call!15590 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74506)))

(declare-fun b!142394 () Bool)

(declare-fun res!67862 () Bool)

(assert (=> b!142394 (=> (not res!67862) (not e!92778))))

(assert (=> b!142394 (= res!67862 (= (getValueByKey!174 (toList!871 lt!74506) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142395 () Bool)

(assert (=> b!142395 (= e!92778 (contains!914 (toList!871 lt!74506) (tuple2!2657 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (get!1523 (select (arr!2303 (ite c!26231 (_values!2922 newMap!16) (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (index!3292 lt!73103) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45265 res!67863) b!142394))

(assert (= (and b!142394 res!67862) b!142395))

(declare-fun m!171237 () Bool)

(assert (=> d!45265 m!171237))

(declare-fun m!171239 () Bool)

(assert (=> d!45265 m!171239))

(declare-fun m!171241 () Bool)

(assert (=> d!45265 m!171241))

(declare-fun m!171243 () Bool)

(assert (=> d!45265 m!171243))

(declare-fun m!171245 () Bool)

(assert (=> b!142394 m!171245))

(declare-fun m!171247 () Bool)

(assert (=> b!142395 m!171247))

(assert (=> b!140604 d!45265))

(declare-fun d!45267 () Bool)

(declare-fun e!92780 () Bool)

(assert (=> d!45267 e!92780))

(declare-fun res!67864 () Bool)

(assert (=> d!45267 (=> res!67864 e!92780)))

(declare-fun lt!74511 () Bool)

(assert (=> d!45267 (= res!67864 (not lt!74511))))

(declare-fun lt!74510 () Bool)

(assert (=> d!45267 (= lt!74511 lt!74510)))

(declare-fun lt!74509 () Unit!4393)

(declare-fun e!92779 () Unit!4393)

(assert (=> d!45267 (= lt!74509 e!92779)))

(declare-fun c!26915 () Bool)

(assert (=> d!45267 (= c!26915 lt!74510)))

(assert (=> d!45267 (= lt!74510 (containsKey!178 (toList!871 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599))) lt!73596))))

(assert (=> d!45267 (= (contains!910 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599)) lt!73596) lt!74511)))

(declare-fun b!142396 () Bool)

(declare-fun lt!74508 () Unit!4393)

(assert (=> b!142396 (= e!92779 lt!74508)))

(assert (=> b!142396 (= lt!74508 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599))) lt!73596))))

(assert (=> b!142396 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599))) lt!73596))))

(declare-fun b!142397 () Bool)

(declare-fun Unit!4502 () Unit!4393)

(assert (=> b!142397 (= e!92779 Unit!4502)))

(declare-fun b!142398 () Bool)

(assert (=> b!142398 (= e!92780 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73598 (tuple2!2657 lt!73600 lt!73599))) lt!73596)))))

(assert (= (and d!45267 c!26915) b!142396))

(assert (= (and d!45267 (not c!26915)) b!142397))

(assert (= (and d!45267 (not res!67864)) b!142398))

(declare-fun m!171249 () Bool)

(assert (=> d!45267 m!171249))

(declare-fun m!171251 () Bool)

(assert (=> b!142396 m!171251))

(declare-fun m!171253 () Bool)

(assert (=> b!142396 m!171253))

(assert (=> b!142396 m!171253))

(declare-fun m!171255 () Bool)

(assert (=> b!142396 m!171255))

(assert (=> b!142398 m!171253))

(assert (=> b!142398 m!171253))

(assert (=> b!142398 m!171255))

(assert (=> b!140604 d!45267))

(declare-fun d!45269 () Bool)

(declare-fun res!67865 () Bool)

(declare-fun e!92781 () Bool)

(assert (=> d!45269 (=> res!67865 e!92781)))

(assert (=> d!45269 (= res!67865 (and ((_ is Cons!1735) (toList!871 lt!73128)) (= (_1!1339 (h!2342 (toList!871 lt!73128))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45269 (= (containsKey!178 (toList!871 lt!73128) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) e!92781)))

(declare-fun b!142399 () Bool)

(declare-fun e!92782 () Bool)

(assert (=> b!142399 (= e!92781 e!92782)))

(declare-fun res!67866 () Bool)

(assert (=> b!142399 (=> (not res!67866) (not e!92782))))

(assert (=> b!142399 (= res!67866 (and (or (not ((_ is Cons!1735) (toList!871 lt!73128))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73128))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1735) (toList!871 lt!73128)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73128))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142400 () Bool)

(assert (=> b!142400 (= e!92782 (containsKey!178 (t!6314 (toList!871 lt!73128)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45269 (not res!67865)) b!142399))

(assert (= (and b!142399 res!67866) b!142400))

(assert (=> b!142400 m!166699))

(declare-fun m!171257 () Bool)

(assert (=> b!142400 m!171257))

(assert (=> d!44023 d!45269))

(assert (=> d!43927 d!43719))

(declare-fun d!45271 () Bool)

(assert (=> d!45271 (= (apply!120 lt!73850 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73850) (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))))

(declare-fun bs!6001 () Bool)

(assert (= bs!6001 d!45271))

(assert (=> bs!6001 m!168641))

(declare-fun m!171259 () Bool)

(assert (=> bs!6001 m!171259))

(assert (=> bs!6001 m!171259))

(declare-fun m!171261 () Bool)

(assert (=> bs!6001 m!171261))

(assert (=> b!141038 d!45271))

(declare-fun d!45273 () Bool)

(declare-fun c!26916 () Bool)

(assert (=> d!45273 (= c!26916 ((_ is ValueCellFull!1121) (select (arr!2303 lt!73365) #b00000000000000000000000000000000)))))

(declare-fun e!92783 () V!3553)

(assert (=> d!45273 (= (get!1523 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92783)))

(declare-fun b!142401 () Bool)

(assert (=> b!142401 (= e!92783 (get!1526 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142402 () Bool)

(assert (=> b!142402 (= e!92783 (get!1527 (select (arr!2303 lt!73365) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45273 c!26916) b!142401))

(assert (= (and d!45273 (not c!26916)) b!142402))

(assert (=> b!142401 m!168645))

(assert (=> b!142401 m!166703))

(declare-fun m!171263 () Bool)

(assert (=> b!142401 m!171263))

(assert (=> b!142402 m!168645))

(assert (=> b!142402 m!166703))

(declare-fun m!171265 () Bool)

(assert (=> b!142402 m!171265))

(assert (=> b!141038 d!45273))

(declare-fun d!45275 () Bool)

(declare-fun e!92784 () Bool)

(assert (=> d!45275 e!92784))

(declare-fun res!67868 () Bool)

(assert (=> d!45275 (=> (not res!67868) (not e!92784))))

(declare-fun lt!74514 () ListLongMap!1711)

(assert (=> d!45275 (= res!67868 (contains!910 lt!74514 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(declare-fun lt!74515 () List!1739)

(assert (=> d!45275 (= lt!74514 (ListLongMap!1712 lt!74515))))

(declare-fun lt!74512 () Unit!4393)

(declare-fun lt!74513 () Unit!4393)

(assert (=> d!45275 (= lt!74512 lt!74513)))

(assert (=> d!45275 (= (getValueByKey!174 lt!74515 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45275 (= lt!74513 (lemmaContainsTupThenGetReturnValue!91 lt!74515 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45275 (= lt!74515 (insertStrictlySorted!94 (toList!871 call!15654) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (=> d!45275 (= (+!167 call!15654 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74514)))

(declare-fun b!142403 () Bool)

(declare-fun res!67867 () Bool)

(assert (=> b!142403 (=> (not res!67867) (not e!92784))))

(assert (=> b!142403 (= res!67867 (= (getValueByKey!174 (toList!871 lt!74514) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142404 () Bool)

(assert (=> b!142404 (= e!92784 (contains!914 (toList!871 lt!74514) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45275 res!67868) b!142403))

(assert (= (and b!142403 res!67867) b!142404))

(declare-fun m!171267 () Bool)

(assert (=> d!45275 m!171267))

(declare-fun m!171269 () Bool)

(assert (=> d!45275 m!171269))

(declare-fun m!171271 () Bool)

(assert (=> d!45275 m!171271))

(declare-fun m!171273 () Bool)

(assert (=> d!45275 m!171273))

(declare-fun m!171275 () Bool)

(assert (=> b!142403 m!171275))

(declare-fun m!171277 () Bool)

(assert (=> b!142404 m!171277))

(assert (=> b!141076 d!45275))

(declare-fun d!45277 () Bool)

(assert (=> d!45277 (= (apply!120 lt!73441 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6002 () Bool)

(assert (= bs!6002 d!45277))

(declare-fun m!171279 () Bool)

(assert (=> bs!6002 m!171279))

(assert (=> bs!6002 m!171279))

(declare-fun m!171281 () Bool)

(assert (=> bs!6002 m!171281))

(assert (=> b!140389 d!45277))

(declare-fun d!45279 () Bool)

(declare-fun e!92786 () Bool)

(assert (=> d!45279 e!92786))

(declare-fun res!67869 () Bool)

(assert (=> d!45279 (=> res!67869 e!92786)))

(declare-fun lt!74519 () Bool)

(assert (=> d!45279 (= res!67869 (not lt!74519))))

(declare-fun lt!74518 () Bool)

(assert (=> d!45279 (= lt!74519 lt!74518)))

(declare-fun lt!74517 () Unit!4393)

(declare-fun e!92785 () Unit!4393)

(assert (=> d!45279 (= lt!74517 e!92785)))

(declare-fun c!26917 () Bool)

(assert (=> d!45279 (= c!26917 lt!74518)))

(assert (=> d!45279 (= lt!74518 (containsKey!178 (toList!871 lt!73759) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45279 (= (contains!910 lt!73759 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74519)))

(declare-fun b!142405 () Bool)

(declare-fun lt!74516 () Unit!4393)

(assert (=> b!142405 (= e!92785 lt!74516)))

(assert (=> b!142405 (= lt!74516 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73759) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142405 (isDefined!128 (getValueByKey!174 (toList!871 lt!73759) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142406 () Bool)

(declare-fun Unit!4503 () Unit!4393)

(assert (=> b!142406 (= e!92785 Unit!4503)))

(declare-fun b!142407 () Bool)

(assert (=> b!142407 (= e!92786 (isDefined!128 (getValueByKey!174 (toList!871 lt!73759) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45279 c!26917) b!142405))

(assert (= (and d!45279 (not c!26917)) b!142406))

(assert (= (and d!45279 (not res!67869)) b!142407))

(declare-fun m!171283 () Bool)

(assert (=> d!45279 m!171283))

(declare-fun m!171285 () Bool)

(assert (=> b!142405 m!171285))

(assert (=> b!142405 m!168337))

(assert (=> b!142405 m!168337))

(declare-fun m!171287 () Bool)

(assert (=> b!142405 m!171287))

(assert (=> b!142407 m!168337))

(assert (=> b!142407 m!168337))

(assert (=> b!142407 m!171287))

(assert (=> d!44047 d!45279))

(declare-fun b!142411 () Bool)

(declare-fun e!92788 () Option!180)

(assert (=> b!142411 (= e!92788 None!178)))

(declare-fun b!142409 () Bool)

(declare-fun e!92787 () Option!180)

(assert (=> b!142409 (= e!92787 e!92788)))

(declare-fun c!26919 () Bool)

(assert (=> b!142409 (= c!26919 (and ((_ is Cons!1735) lt!73760) (not (= (_1!1339 (h!2342 lt!73760)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142408 () Bool)

(assert (=> b!142408 (= e!92787 (Some!179 (_2!1339 (h!2342 lt!73760))))))

(declare-fun c!26918 () Bool)

(declare-fun d!45281 () Bool)

(assert (=> d!45281 (= c!26918 (and ((_ is Cons!1735) lt!73760) (= (_1!1339 (h!2342 lt!73760)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45281 (= (getValueByKey!174 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92787)))

(declare-fun b!142410 () Bool)

(assert (=> b!142410 (= e!92788 (getValueByKey!174 (t!6314 lt!73760) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45281 c!26918) b!142408))

(assert (= (and d!45281 (not c!26918)) b!142409))

(assert (= (and b!142409 c!26919) b!142410))

(assert (= (and b!142409 (not c!26919)) b!142411))

(declare-fun m!171289 () Bool)

(assert (=> b!142410 m!171289))

(assert (=> d!44047 d!45281))

(declare-fun d!45283 () Bool)

(assert (=> d!45283 (= (getValueByKey!174 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74520 () Unit!4393)

(assert (=> d!45283 (= lt!74520 (choose!872 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92789 () Bool)

(assert (=> d!45283 e!92789))

(declare-fun res!67870 () Bool)

(assert (=> d!45283 (=> (not res!67870) (not e!92789))))

(assert (=> d!45283 (= res!67870 (isStrictlySorted!320 lt!73760))))

(assert (=> d!45283 (= (lemmaContainsTupThenGetReturnValue!91 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74520)))

(declare-fun b!142412 () Bool)

(declare-fun res!67871 () Bool)

(assert (=> b!142412 (=> (not res!67871) (not e!92789))))

(assert (=> b!142412 (= res!67871 (containsKey!178 lt!73760 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142413 () Bool)

(assert (=> b!142413 (= e!92789 (contains!914 lt!73760 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45283 res!67870) b!142412))

(assert (= (and b!142412 res!67871) b!142413))

(assert (=> d!45283 m!168331))

(declare-fun m!171291 () Bool)

(assert (=> d!45283 m!171291))

(declare-fun m!171293 () Bool)

(assert (=> d!45283 m!171293))

(declare-fun m!171295 () Bool)

(assert (=> b!142412 m!171295))

(declare-fun m!171297 () Bool)

(assert (=> b!142413 m!171297))

(assert (=> d!44047 d!45283))

(declare-fun b!142414 () Bool)

(declare-fun e!92792 () List!1739)

(declare-fun call!15734 () List!1739)

(assert (=> b!142414 (= e!92792 call!15734)))

(declare-fun b!142415 () Bool)

(declare-fun e!92790 () List!1739)

(declare-fun call!15733 () List!1739)

(assert (=> b!142415 (= e!92790 call!15733)))

(declare-fun b!142416 () Bool)

(declare-fun e!92793 () Bool)

(declare-fun lt!74521 () List!1739)

(assert (=> b!142416 (= e!92793 (contains!914 lt!74521 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92791 () List!1739)

(declare-fun c!26923 () Bool)

(declare-fun bm!15729 () Bool)

(assert (=> bm!15729 (= call!15734 ($colon$colon!93 e!92791 (ite c!26923 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26920 () Bool)

(assert (=> bm!15729 (= c!26920 c!26923)))

(declare-fun bm!15730 () Bool)

(declare-fun call!15732 () List!1739)

(assert (=> bm!15730 (= call!15733 call!15732)))

(declare-fun b!142417 () Bool)

(declare-fun res!67872 () Bool)

(assert (=> b!142417 (=> (not res!67872) (not e!92793))))

(assert (=> b!142417 (= res!67872 (containsKey!178 lt!74521 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!45285 () Bool)

(assert (=> d!45285 e!92793))

(declare-fun res!67873 () Bool)

(assert (=> d!45285 (=> (not res!67873) (not e!92793))))

(assert (=> d!45285 (= res!67873 (isStrictlySorted!320 lt!74521))))

(assert (=> d!45285 (= lt!74521 e!92792)))

(assert (=> d!45285 (= c!26923 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45285 (isStrictlySorted!320 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (=> d!45285 (= (insertStrictlySorted!94 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74521)))

(declare-fun c!26922 () Bool)

(declare-fun b!142418 () Bool)

(declare-fun c!26921 () Bool)

(assert (=> b!142418 (= e!92791 (ite c!26922 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (ite c!26921 (Cons!1735 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) Nil!1736)))))

(declare-fun b!142419 () Bool)

(assert (=> b!142419 (= c!26921 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvsgt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92794 () List!1739)

(assert (=> b!142419 (= e!92794 e!92790)))

(declare-fun b!142420 () Bool)

(assert (=> b!142420 (= e!92790 call!15733)))

(declare-fun b!142421 () Bool)

(assert (=> b!142421 (= e!92791 (insertStrictlySorted!94 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15731 () Bool)

(assert (=> bm!15731 (= call!15732 call!15734)))

(declare-fun b!142422 () Bool)

(assert (=> b!142422 (= e!92792 e!92794)))

(assert (=> b!142422 (= c!26922 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142423 () Bool)

(assert (=> b!142423 (= e!92794 call!15732)))

(assert (= (and d!45285 c!26923) b!142414))

(assert (= (and d!45285 (not c!26923)) b!142422))

(assert (= (and b!142422 c!26922) b!142423))

(assert (= (and b!142422 (not c!26922)) b!142419))

(assert (= (and b!142419 c!26921) b!142415))

(assert (= (and b!142419 (not c!26921)) b!142420))

(assert (= (or b!142415 b!142420) bm!15730))

(assert (= (or b!142423 bm!15730) bm!15731))

(assert (= (or b!142414 bm!15731) bm!15729))

(assert (= (and bm!15729 c!26920) b!142421))

(assert (= (and bm!15729 (not c!26920)) b!142418))

(assert (= (and d!45285 res!67873) b!142417))

(assert (= (and b!142417 res!67872) b!142416))

(declare-fun m!171299 () Bool)

(assert (=> b!142417 m!171299))

(declare-fun m!171301 () Bool)

(assert (=> b!142421 m!171301))

(declare-fun m!171303 () Bool)

(assert (=> bm!15729 m!171303))

(declare-fun m!171305 () Bool)

(assert (=> b!142416 m!171305))

(declare-fun m!171307 () Bool)

(assert (=> d!45285 m!171307))

(assert (=> d!45285 m!169513))

(assert (=> d!44047 d!45285))

(declare-fun d!45287 () Bool)

(declare-fun e!92796 () Bool)

(assert (=> d!45287 e!92796))

(declare-fun res!67874 () Bool)

(assert (=> d!45287 (=> res!67874 e!92796)))

(declare-fun lt!74525 () Bool)

(assert (=> d!45287 (= res!67874 (not lt!74525))))

(declare-fun lt!74524 () Bool)

(assert (=> d!45287 (= lt!74525 lt!74524)))

(declare-fun lt!74523 () Unit!4393)

(declare-fun e!92795 () Unit!4393)

(assert (=> d!45287 (= lt!74523 e!92795)))

(declare-fun c!26924 () Bool)

(assert (=> d!45287 (= c!26924 lt!74524)))

(assert (=> d!45287 (= lt!74524 (containsKey!178 (toList!871 lt!73508) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45287 (= (contains!910 lt!73508 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74525)))

(declare-fun b!142424 () Bool)

(declare-fun lt!74522 () Unit!4393)

(assert (=> b!142424 (= e!92795 lt!74522)))

(assert (=> b!142424 (= lt!74522 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73508) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142424 (isDefined!128 (getValueByKey!174 (toList!871 lt!73508) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142425 () Bool)

(declare-fun Unit!4504 () Unit!4393)

(assert (=> b!142425 (= e!92795 Unit!4504)))

(declare-fun b!142426 () Bool)

(assert (=> b!142426 (= e!92796 (isDefined!128 (getValueByKey!174 (toList!871 lt!73508) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45287 c!26924) b!142424))

(assert (= (and d!45287 (not c!26924)) b!142425))

(assert (= (and d!45287 (not res!67874)) b!142426))

(declare-fun m!171309 () Bool)

(assert (=> d!45287 m!171309))

(declare-fun m!171311 () Bool)

(assert (=> b!142424 m!171311))

(declare-fun m!171313 () Bool)

(assert (=> b!142424 m!171313))

(assert (=> b!142424 m!171313))

(declare-fun m!171315 () Bool)

(assert (=> b!142424 m!171315))

(assert (=> b!142426 m!171313))

(assert (=> b!142426 m!171313))

(assert (=> b!142426 m!171315))

(assert (=> d!43767 d!45287))

(assert (=> d!43767 d!43569))

(declare-fun d!45289 () Bool)

(assert (=> d!45289 (= (isEmpty!422 (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!179) (getValueByKey!174 (toList!871 lt!73003) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43807 d!45289))

(declare-fun d!45291 () Bool)

(assert (=> d!45291 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!6003 () Bool)

(assert (= bs!6003 d!45291))

(assert (=> bs!6003 m!167871))

(declare-fun m!171317 () Bool)

(assert (=> bs!6003 m!171317))

(assert (=> b!140633 d!45291))

(assert (=> b!140633 d!45027))

(declare-fun b!142430 () Bool)

(declare-fun e!92798 () Option!180)

(assert (=> b!142430 (= e!92798 None!178)))

(declare-fun b!142428 () Bool)

(declare-fun e!92797 () Option!180)

(assert (=> b!142428 (= e!92797 e!92798)))

(declare-fun c!26926 () Bool)

(assert (=> b!142428 (= c!26926 (and ((_ is Cons!1735) (toList!871 lt!73565)) (not (= (_1!1339 (h!2342 (toList!871 lt!73565))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun b!142427 () Bool)

(assert (=> b!142427 (= e!92797 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73565)))))))

(declare-fun d!45293 () Bool)

(declare-fun c!26925 () Bool)

(assert (=> d!45293 (= c!26925 (and ((_ is Cons!1735) (toList!871 lt!73565)) (= (_1!1339 (h!2342 (toList!871 lt!73565))) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(assert (=> d!45293 (= (getValueByKey!174 (toList!871 lt!73565) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) e!92797)))

(declare-fun b!142429 () Bool)

(assert (=> b!142429 (= e!92798 (getValueByKey!174 (t!6314 (toList!871 lt!73565)) (_1!1339 (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45293 c!26925) b!142427))

(assert (= (and d!45293 (not c!26925)) b!142428))

(assert (= (and b!142428 c!26926) b!142429))

(assert (= (and b!142428 (not c!26926)) b!142430))

(declare-fun m!171319 () Bool)

(assert (=> b!142429 m!171319))

(assert (=> b!140577 d!45293))

(declare-fun d!45295 () Bool)

(declare-fun e!92800 () Bool)

(assert (=> d!45295 e!92800))

(declare-fun res!67875 () Bool)

(assert (=> d!45295 (=> res!67875 e!92800)))

(declare-fun lt!74529 () Bool)

(assert (=> d!45295 (= res!67875 (not lt!74529))))

(declare-fun lt!74528 () Bool)

(assert (=> d!45295 (= lt!74529 lt!74528)))

(declare-fun lt!74527 () Unit!4393)

(declare-fun e!92799 () Unit!4393)

(assert (=> d!45295 (= lt!74527 e!92799)))

(declare-fun c!26927 () Bool)

(assert (=> d!45295 (= c!26927 lt!74528)))

(assert (=> d!45295 (= lt!74528 (containsKey!178 (toList!871 lt!73819) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!45295 (= (contains!910 lt!73819 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74529)))

(declare-fun b!142431 () Bool)

(declare-fun lt!74526 () Unit!4393)

(assert (=> b!142431 (= e!92799 lt!74526)))

(assert (=> b!142431 (= lt!74526 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73819) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> b!142431 (isDefined!128 (getValueByKey!174 (toList!871 lt!73819) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142432 () Bool)

(declare-fun Unit!4505 () Unit!4393)

(assert (=> b!142432 (= e!92799 Unit!4505)))

(declare-fun b!142433 () Bool)

(assert (=> b!142433 (= e!92800 (isDefined!128 (getValueByKey!174 (toList!871 lt!73819) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45295 c!26927) b!142431))

(assert (= (and d!45295 (not c!26927)) b!142432))

(assert (= (and d!45295 (not res!67875)) b!142433))

(declare-fun m!171321 () Bool)

(assert (=> d!45295 m!171321))

(declare-fun m!171323 () Bool)

(assert (=> b!142431 m!171323))

(assert (=> b!142431 m!168533))

(assert (=> b!142431 m!168533))

(declare-fun m!171325 () Bool)

(assert (=> b!142431 m!171325))

(assert (=> b!142433 m!168533))

(assert (=> b!142433 m!168533))

(assert (=> b!142433 m!171325))

(assert (=> d!44095 d!45295))

(declare-fun b!142437 () Bool)

(declare-fun e!92802 () Option!180)

(assert (=> b!142437 (= e!92802 None!178)))

(declare-fun b!142435 () Bool)

(declare-fun e!92801 () Option!180)

(assert (=> b!142435 (= e!92801 e!92802)))

(declare-fun c!26929 () Bool)

(assert (=> b!142435 (= c!26929 (and ((_ is Cons!1735) lt!73820) (not (= (_1!1339 (h!2342 lt!73820)) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!142434 () Bool)

(assert (=> b!142434 (= e!92801 (Some!179 (_2!1339 (h!2342 lt!73820))))))

(declare-fun c!26928 () Bool)

(declare-fun d!45297 () Bool)

(assert (=> d!45297 (= c!26928 (and ((_ is Cons!1735) lt!73820) (= (_1!1339 (h!2342 lt!73820)) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45297 (= (getValueByKey!174 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!92801)))

(declare-fun b!142436 () Bool)

(assert (=> b!142436 (= e!92802 (getValueByKey!174 (t!6314 lt!73820) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45297 c!26928) b!142434))

(assert (= (and d!45297 (not c!26928)) b!142435))

(assert (= (and b!142435 c!26929) b!142436))

(assert (= (and b!142435 (not c!26929)) b!142437))

(declare-fun m!171327 () Bool)

(assert (=> b!142436 m!171327))

(assert (=> d!44095 d!45297))

(declare-fun d!45299 () Bool)

(assert (=> d!45299 (= (getValueByKey!174 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!74530 () Unit!4393)

(assert (=> d!45299 (= lt!74530 (choose!872 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun e!92803 () Bool)

(assert (=> d!45299 e!92803))

(declare-fun res!67876 () Bool)

(assert (=> d!45299 (=> (not res!67876) (not e!92803))))

(assert (=> d!45299 (= res!67876 (isStrictlySorted!320 lt!73820))))

(assert (=> d!45299 (= (lemmaContainsTupThenGetReturnValue!91 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74530)))

(declare-fun b!142438 () Bool)

(declare-fun res!67877 () Bool)

(assert (=> b!142438 (=> (not res!67877) (not e!92803))))

(assert (=> b!142438 (= res!67877 (containsKey!178 lt!73820 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142439 () Bool)

(assert (=> b!142439 (= e!92803 (contains!914 lt!73820 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45299 res!67876) b!142438))

(assert (= (and b!142438 res!67877) b!142439))

(assert (=> d!45299 m!168527))

(declare-fun m!171329 () Bool)

(assert (=> d!45299 m!171329))

(declare-fun m!171331 () Bool)

(assert (=> d!45299 m!171331))

(declare-fun m!171333 () Bool)

(assert (=> b!142438 m!171333))

(declare-fun m!171335 () Bool)

(assert (=> b!142439 m!171335))

(assert (=> d!44095 d!45299))

(declare-fun b!142440 () Bool)

(declare-fun e!92806 () List!1739)

(declare-fun call!15737 () List!1739)

(assert (=> b!142440 (= e!92806 call!15737)))

(declare-fun b!142441 () Bool)

(declare-fun e!92804 () List!1739)

(declare-fun call!15736 () List!1739)

(assert (=> b!142441 (= e!92804 call!15736)))

(declare-fun lt!74531 () List!1739)

(declare-fun b!142442 () Bool)

(declare-fun e!92807 () Bool)

(assert (=> b!142442 (= e!92807 (contains!914 lt!74531 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26933 () Bool)

(declare-fun e!92805 () List!1739)

(declare-fun bm!15732 () Bool)

(assert (=> bm!15732 (= call!15737 ($colon$colon!93 e!92805 (ite c!26933 (h!2342 (toList!871 lt!73126)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun c!26930 () Bool)

(assert (=> bm!15732 (= c!26930 c!26933)))

(declare-fun bm!15733 () Bool)

(declare-fun call!15735 () List!1739)

(assert (=> bm!15733 (= call!15736 call!15735)))

(declare-fun b!142443 () Bool)

(declare-fun res!67878 () Bool)

(assert (=> b!142443 (=> (not res!67878) (not e!92807))))

(assert (=> b!142443 (= res!67878 (containsKey!178 lt!74531 (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun d!45301 () Bool)

(assert (=> d!45301 e!92807))

(declare-fun res!67879 () Bool)

(assert (=> d!45301 (=> (not res!67879) (not e!92807))))

(assert (=> d!45301 (= res!67879 (isStrictlySorted!320 lt!74531))))

(assert (=> d!45301 (= lt!74531 e!92806)))

(assert (=> d!45301 (= c!26933 (and ((_ is Cons!1735) (toList!871 lt!73126)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73126))) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45301 (isStrictlySorted!320 (toList!871 lt!73126))))

(assert (=> d!45301 (= (insertStrictlySorted!94 (toList!871 lt!73126) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74531)))

(declare-fun c!26931 () Bool)

(declare-fun c!26932 () Bool)

(declare-fun b!142444 () Bool)

(assert (=> b!142444 (= e!92805 (ite c!26932 (t!6314 (toList!871 lt!73126)) (ite c!26931 (Cons!1735 (h!2342 (toList!871 lt!73126)) (t!6314 (toList!871 lt!73126))) Nil!1736)))))

(declare-fun b!142445 () Bool)

(assert (=> b!142445 (= c!26931 (and ((_ is Cons!1735) (toList!871 lt!73126)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73126))) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun e!92808 () List!1739)

(assert (=> b!142445 (= e!92808 e!92804)))

(declare-fun b!142446 () Bool)

(assert (=> b!142446 (= e!92804 call!15736)))

(declare-fun b!142447 () Bool)

(assert (=> b!142447 (= e!92805 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73126)) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun bm!15734 () Bool)

(assert (=> bm!15734 (= call!15735 call!15737)))

(declare-fun b!142448 () Bool)

(assert (=> b!142448 (= e!92806 e!92808)))

(assert (=> b!142448 (= c!26932 (and ((_ is Cons!1735) (toList!871 lt!73126)) (= (_1!1339 (h!2342 (toList!871 lt!73126))) (_1!1339 (tuple2!2657 lt!73135 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142449 () Bool)

(assert (=> b!142449 (= e!92808 call!15735)))

(assert (= (and d!45301 c!26933) b!142440))

(assert (= (and d!45301 (not c!26933)) b!142448))

(assert (= (and b!142448 c!26932) b!142449))

(assert (= (and b!142448 (not c!26932)) b!142445))

(assert (= (and b!142445 c!26931) b!142441))

(assert (= (and b!142445 (not c!26931)) b!142446))

(assert (= (or b!142441 b!142446) bm!15733))

(assert (= (or b!142449 bm!15733) bm!15734))

(assert (= (or b!142440 bm!15734) bm!15732))

(assert (= (and bm!15732 c!26930) b!142447))

(assert (= (and bm!15732 (not c!26930)) b!142444))

(assert (= (and d!45301 res!67879) b!142443))

(assert (= (and b!142443 res!67878) b!142442))

(declare-fun m!171337 () Bool)

(assert (=> b!142443 m!171337))

(declare-fun m!171339 () Bool)

(assert (=> b!142447 m!171339))

(declare-fun m!171341 () Bool)

(assert (=> bm!15732 m!171341))

(declare-fun m!171343 () Bool)

(assert (=> b!142442 m!171343))

(declare-fun m!171345 () Bool)

(assert (=> d!45301 m!171345))

(declare-fun m!171347 () Bool)

(assert (=> d!45301 m!171347))

(assert (=> d!44095 d!45301))

(assert (=> b!141100 d!44149))

(assert (=> b!141100 d!43605))

(declare-fun d!45303 () Bool)

(assert (=> d!45303 (isDefined!128 (getValueByKey!174 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!74532 () Unit!4393)

(assert (=> d!45303 (= lt!74532 (choose!871 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!92809 () Bool)

(assert (=> d!45303 e!92809))

(declare-fun res!67880 () Bool)

(assert (=> d!45303 (=> (not res!67880) (not e!92809))))

(assert (=> d!45303 (= res!67880 (isStrictlySorted!320 (toList!871 lt!73394)))))

(assert (=> d!45303 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74532)))

(declare-fun b!142450 () Bool)

(assert (=> b!142450 (= e!92809 (containsKey!178 (toList!871 lt!73394) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45303 res!67880) b!142450))

(assert (=> d!45303 m!167143))

(assert (=> d!45303 m!167143))

(assert (=> d!45303 m!167901))

(declare-fun m!171349 () Bool)

(assert (=> d!45303 m!171349))

(declare-fun m!171351 () Bool)

(assert (=> d!45303 m!171351))

(assert (=> b!142450 m!167897))

(assert (=> b!140642 d!45303))

(assert (=> b!140642 d!45109))

(assert (=> b!140642 d!43911))

(assert (=> d!43837 d!43839))

(assert (=> d!43837 d!43601))

(declare-fun d!45305 () Bool)

(assert (=> d!45305 (contains!910 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))

(assert (=> d!45305 true))

(declare-fun _$17!59 () Unit!4393)

(assert (=> d!45305 (= (choose!873 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)) _$17!59)))

(declare-fun bs!6004 () Bool)

(assert (= bs!6004 d!45305))

(assert (=> bs!6004 m!166541))

(assert (=> bs!6004 m!166541))

(assert (=> bs!6004 m!166407))

(assert (=> bs!6004 m!167029))

(assert (=> d!43837 d!45305))

(assert (=> d!43837 d!43719))

(declare-fun d!45307 () Bool)

(assert (=> d!45307 (= (apply!120 lt!73645 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73645) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6005 () Bool)

(assert (= bs!6005 d!45307))

(assert (=> bs!6005 m!169919))

(assert (=> bs!6005 m!169919))

(declare-fun m!171353 () Bool)

(assert (=> bs!6005 m!171353))

(assert (=> b!140697 d!45307))

(declare-fun lt!74533 () Bool)

(declare-fun d!45309 () Bool)

(assert (=> d!45309 (= lt!74533 (select (content!138 (toList!871 lt!73492)) (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))

(declare-fun e!92811 () Bool)

(assert (=> d!45309 (= lt!74533 e!92811)))

(declare-fun res!67881 () Bool)

(assert (=> d!45309 (=> (not res!67881) (not e!92811))))

(assert (=> d!45309 (= res!67881 ((_ is Cons!1735) (toList!871 lt!73492)))))

(assert (=> d!45309 (= (contains!914 (toList!871 lt!73492) (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))) lt!74533)))

(declare-fun b!142451 () Bool)

(declare-fun e!92810 () Bool)

(assert (=> b!142451 (= e!92811 e!92810)))

(declare-fun res!67882 () Bool)

(assert (=> b!142451 (=> res!67882 e!92810)))

(assert (=> b!142451 (= res!67882 (= (h!2342 (toList!871 lt!73492)) (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))

(declare-fun b!142452 () Bool)

(assert (=> b!142452 (= e!92810 (contains!914 (t!6314 (toList!871 lt!73492)) (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45309 res!67881) b!142451))

(assert (= (and b!142451 (not res!67882)) b!142452))

(declare-fun m!171355 () Bool)

(assert (=> d!45309 m!171355))

(declare-fun m!171357 () Bool)

(assert (=> d!45309 m!171357))

(declare-fun m!171359 () Bool)

(assert (=> b!142452 m!171359))

(assert (=> b!140438 d!45309))

(declare-fun lt!74534 () Bool)

(declare-fun d!45311 () Bool)

(assert (=> d!45311 (= lt!74534 (select (content!138 lt!73558) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92813 () Bool)

(assert (=> d!45311 (= lt!74534 e!92813)))

(declare-fun res!67883 () Bool)

(assert (=> d!45311 (=> (not res!67883) (not e!92813))))

(assert (=> d!45311 (= res!67883 ((_ is Cons!1735) lt!73558))))

(assert (=> d!45311 (= (contains!914 lt!73558 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74534)))

(declare-fun b!142453 () Bool)

(declare-fun e!92812 () Bool)

(assert (=> b!142453 (= e!92813 e!92812)))

(declare-fun res!67884 () Bool)

(assert (=> b!142453 (=> res!67884 e!92812)))

(assert (=> b!142453 (= res!67884 (= (h!2342 lt!73558) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142454 () Bool)

(assert (=> b!142454 (= e!92812 (contains!914 (t!6314 lt!73558) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45311 res!67883) b!142453))

(assert (= (and b!142453 (not res!67884)) b!142454))

(declare-fun m!171361 () Bool)

(assert (=> d!45311 m!171361))

(declare-fun m!171363 () Bool)

(assert (=> d!45311 m!171363))

(declare-fun m!171365 () Bool)

(assert (=> b!142454 m!171365))

(assert (=> b!140558 d!45311))

(declare-fun d!45313 () Bool)

(declare-fun lt!74535 () Bool)

(assert (=> d!45313 (= lt!74535 (select (content!138 (t!6314 (toList!871 lt!73401))) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!92815 () Bool)

(assert (=> d!45313 (= lt!74535 e!92815)))

(declare-fun res!67885 () Bool)

(assert (=> d!45313 (=> (not res!67885) (not e!92815))))

(assert (=> d!45313 (= res!67885 ((_ is Cons!1735) (t!6314 (toList!871 lt!73401))))))

(assert (=> d!45313 (= (contains!914 (t!6314 (toList!871 lt!73401)) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!74535)))

(declare-fun b!142455 () Bool)

(declare-fun e!92814 () Bool)

(assert (=> b!142455 (= e!92815 e!92814)))

(declare-fun res!67886 () Bool)

(assert (=> b!142455 (=> res!67886 e!92814)))

(assert (=> b!142455 (= res!67886 (= (h!2342 (t!6314 (toList!871 lt!73401))) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!142456 () Bool)

(assert (=> b!142456 (= e!92814 (contains!914 (t!6314 (t!6314 (toList!871 lt!73401))) (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!45313 res!67885) b!142455))

(assert (= (and b!142455 (not res!67886)) b!142456))

(assert (=> d!45313 m!169951))

(declare-fun m!171367 () Bool)

(assert (=> d!45313 m!171367))

(declare-fun m!171369 () Bool)

(assert (=> b!142456 m!171369))

(assert (=> b!140641 d!45313))

(declare-fun d!45315 () Bool)

(assert (=> d!45315 (isDefined!128 (getValueByKey!174 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74536 () Unit!4393)

(assert (=> d!45315 (= lt!74536 (choose!871 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92816 () Bool)

(assert (=> d!45315 e!92816))

(declare-fun res!67887 () Bool)

(assert (=> d!45315 (=> (not res!67887) (not e!92816))))

(assert (=> d!45315 (= res!67887 (isStrictlySorted!320 (toList!871 lt!73386)))))

(assert (=> d!45315 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74536)))

(declare-fun b!142457 () Bool)

(assert (=> b!142457 (= e!92816 (containsKey!178 (toList!871 lt!73386) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45315 res!67887) b!142457))

(assert (=> d!45315 m!167119))

(assert (=> d!45315 m!167119))

(assert (=> d!45315 m!168063))

(declare-fun m!171371 () Bool)

(assert (=> d!45315 m!171371))

(declare-fun m!171373 () Bool)

(assert (=> d!45315 m!171373))

(assert (=> b!142457 m!168059))

(assert (=> b!140732 d!45315))

(assert (=> b!140732 d!45135))

(assert (=> b!140732 d!43915))

(assert (=> d!43727 d!43689))

(assert (=> d!43727 d!43691))

(declare-fun d!45317 () Bool)

(assert (=> d!45317 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!6006 () Bool)

(assert (= bs!6006 d!45317))

(assert (=> bs!6006 m!167013))

(declare-fun m!171375 () Bool)

(assert (=> bs!6006 m!171375))

(assert (=> b!140920 d!45317))

(assert (=> b!140920 d!44037))

(declare-fun d!45319 () Bool)

(declare-fun lt!74537 () Bool)

(assert (=> d!45319 (= lt!74537 (select (content!138 lt!73232) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun e!92818 () Bool)

(assert (=> d!45319 (= lt!74537 e!92818)))

(declare-fun res!67888 () Bool)

(assert (=> d!45319 (=> (not res!67888) (not e!92818))))

(assert (=> d!45319 (= res!67888 ((_ is Cons!1735) lt!73232))))

(assert (=> d!45319 (= (contains!914 lt!73232 (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!74537)))

(declare-fun b!142458 () Bool)

(declare-fun e!92817 () Bool)

(assert (=> b!142458 (= e!92818 e!92817)))

(declare-fun res!67889 () Bool)

(assert (=> b!142458 (=> res!67889 e!92817)))

(assert (=> b!142458 (= res!67889 (= (h!2342 lt!73232) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142459 () Bool)

(assert (=> b!142459 (= e!92817 (contains!914 (t!6314 lt!73232) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (= (and d!45319 res!67888) b!142458))

(assert (= (and b!142458 (not res!67889)) b!142459))

(declare-fun m!171377 () Bool)

(assert (=> d!45319 m!171377))

(declare-fun m!171379 () Bool)

(assert (=> d!45319 m!171379))

(declare-fun m!171381 () Bool)

(assert (=> b!142459 m!171381))

(assert (=> b!140765 d!45319))

(declare-fun d!45321 () Bool)

(declare-fun e!92820 () Bool)

(assert (=> d!45321 e!92820))

(declare-fun res!67890 () Bool)

(assert (=> d!45321 (=> res!67890 e!92820)))

(declare-fun lt!74541 () Bool)

(assert (=> d!45321 (= res!67890 (not lt!74541))))

(declare-fun lt!74540 () Bool)

(assert (=> d!45321 (= lt!74541 lt!74540)))

(declare-fun lt!74539 () Unit!4393)

(declare-fun e!92819 () Unit!4393)

(assert (=> d!45321 (= lt!74539 e!92819)))

(declare-fun c!26934 () Bool)

(assert (=> d!45321 (= c!26934 lt!74540)))

(assert (=> d!45321 (= lt!74540 (containsKey!178 (toList!871 lt!73697) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45321 (= (contains!910 lt!73697 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74541)))

(declare-fun b!142460 () Bool)

(declare-fun lt!74538 () Unit!4393)

(assert (=> b!142460 (= e!92819 lt!74538)))

(assert (=> b!142460 (= lt!74538 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73697) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142460 (isDefined!128 (getValueByKey!174 (toList!871 lt!73697) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142461 () Bool)

(declare-fun Unit!4506 () Unit!4393)

(assert (=> b!142461 (= e!92819 Unit!4506)))

(declare-fun b!142462 () Bool)

(assert (=> b!142462 (= e!92820 (isDefined!128 (getValueByKey!174 (toList!871 lt!73697) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45321 c!26934) b!142460))

(assert (= (and d!45321 (not c!26934)) b!142461))

(assert (= (and d!45321 (not res!67890)) b!142462))

(declare-fun m!171383 () Bool)

(assert (=> d!45321 m!171383))

(declare-fun m!171385 () Bool)

(assert (=> b!142460 m!171385))

(assert (=> b!142460 m!170915))

(assert (=> b!142460 m!170915))

(declare-fun m!171387 () Bool)

(assert (=> b!142460 m!171387))

(assert (=> b!142462 m!170915))

(assert (=> b!142462 m!170915))

(assert (=> b!142462 m!171387))

(assert (=> bm!15619 d!45321))

(assert (=> d!44069 d!44067))

(declare-fun d!45323 () Bool)

(assert (=> d!45323 (= (getValueByKey!174 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (Some!179 (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (=> d!45323 true))

(declare-fun _$22!501 () Unit!4393)

(assert (=> d!45323 (= (choose!872 lt!73391 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) _$22!501)))

(declare-fun bs!6007 () Bool)

(assert (= bs!6007 d!45323))

(assert (=> bs!6007 m!167125))

(assert (=> d!44069 d!45323))

(declare-fun d!45325 () Bool)

(declare-fun res!67891 () Bool)

(declare-fun e!92821 () Bool)

(assert (=> d!45325 (=> res!67891 e!92821)))

(assert (=> d!45325 (= res!67891 (or ((_ is Nil!1736) lt!73391) ((_ is Nil!1736) (t!6314 lt!73391))))))

(assert (=> d!45325 (= (isStrictlySorted!320 lt!73391) e!92821)))

(declare-fun b!142463 () Bool)

(declare-fun e!92822 () Bool)

(assert (=> b!142463 (= e!92821 e!92822)))

(declare-fun res!67892 () Bool)

(assert (=> b!142463 (=> (not res!67892) (not e!92822))))

(assert (=> b!142463 (= res!67892 (bvslt (_1!1339 (h!2342 lt!73391)) (_1!1339 (h!2342 (t!6314 lt!73391)))))))

(declare-fun b!142464 () Bool)

(assert (=> b!142464 (= e!92822 (isStrictlySorted!320 (t!6314 lt!73391)))))

(assert (= (and d!45325 (not res!67891)) b!142463))

(assert (= (and b!142463 res!67892) b!142464))

(declare-fun m!171389 () Bool)

(assert (=> b!142464 m!171389))

(assert (=> d!44069 d!45325))

(declare-fun b!142465 () Bool)

(declare-fun e!92823 () Bool)

(declare-fun e!92825 () Bool)

(assert (=> b!142465 (= e!92823 e!92825)))

(declare-fun c!26935 () Bool)

(assert (=> b!142465 (= c!26935 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142466 () Bool)

(declare-fun e!92826 () Bool)

(assert (=> b!142466 (= e!92826 e!92823)))

(declare-fun res!67893 () Bool)

(assert (=> b!142466 (=> (not res!67893) (not e!92823))))

(declare-fun e!92824 () Bool)

(assert (=> b!142466 (= res!67893 (not e!92824))))

(declare-fun res!67894 () Bool)

(assert (=> b!142466 (=> (not res!67894) (not e!92824))))

(assert (=> b!142466 (= res!67894 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142467 () Bool)

(declare-fun call!15738 () Bool)

(assert (=> b!142467 (= e!92825 call!15738)))

(declare-fun d!45327 () Bool)

(declare-fun res!67895 () Bool)

(assert (=> d!45327 (=> res!67895 e!92826)))

(assert (=> d!45327 (= res!67895 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!45327 (= (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26448 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) e!92826)))

(declare-fun b!142468 () Bool)

(assert (=> b!142468 (= e!92824 (contains!913 (ite c!26448 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) Nil!1737) Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142469 () Bool)

(assert (=> b!142469 (= e!92825 call!15738)))

(declare-fun bm!15735 () Bool)

(assert (=> bm!15735 (= call!15738 (arrayNoDuplicates!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26935 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26448 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (ite c!26448 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000) Nil!1737) Nil!1737))))))

(assert (= (and d!45327 (not res!67895)) b!142466))

(assert (= (and b!142466 res!67894) b!142468))

(assert (= (and b!142466 res!67893) b!142465))

(assert (= (and b!142465 c!26935) b!142467))

(assert (= (and b!142465 (not c!26935)) b!142469))

(assert (= (or b!142467 b!142469) bm!15735))

(assert (=> b!142465 m!169349))

(assert (=> b!142465 m!169349))

(assert (=> b!142465 m!169351))

(assert (=> b!142466 m!169349))

(assert (=> b!142466 m!169349))

(assert (=> b!142466 m!169351))

(assert (=> b!142468 m!169349))

(assert (=> b!142468 m!169349))

(declare-fun m!171391 () Bool)

(assert (=> b!142468 m!171391))

(assert (=> bm!15735 m!169349))

(declare-fun m!171393 () Bool)

(assert (=> bm!15735 m!171393))

(assert (=> bm!15608 d!45327))

(declare-fun d!45329 () Bool)

(assert (=> d!45329 (= (get!1528 (getValueByKey!174 (toList!871 lt!73170) lt!73189)) (v!3279 (getValueByKey!174 (toList!871 lt!73170) lt!73189)))))

(assert (=> d!43743 d!45329))

(declare-fun b!142473 () Bool)

(declare-fun e!92828 () Option!180)

(assert (=> b!142473 (= e!92828 None!178)))

(declare-fun b!142471 () Bool)

(declare-fun e!92827 () Option!180)

(assert (=> b!142471 (= e!92827 e!92828)))

(declare-fun c!26937 () Bool)

(assert (=> b!142471 (= c!26937 (and ((_ is Cons!1735) (toList!871 lt!73170)) (not (= (_1!1339 (h!2342 (toList!871 lt!73170))) lt!73189))))))

(declare-fun b!142470 () Bool)

(assert (=> b!142470 (= e!92827 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73170)))))))

(declare-fun d!45331 () Bool)

(declare-fun c!26936 () Bool)

(assert (=> d!45331 (= c!26936 (and ((_ is Cons!1735) (toList!871 lt!73170)) (= (_1!1339 (h!2342 (toList!871 lt!73170))) lt!73189)))))

(assert (=> d!45331 (= (getValueByKey!174 (toList!871 lt!73170) lt!73189) e!92827)))

(declare-fun b!142472 () Bool)

(assert (=> b!142472 (= e!92828 (getValueByKey!174 (t!6314 (toList!871 lt!73170)) lt!73189))))

(assert (= (and d!45331 c!26936) b!142470))

(assert (= (and d!45331 (not c!26936)) b!142471))

(assert (= (and b!142471 c!26937) b!142472))

(assert (= (and b!142471 (not c!26937)) b!142473))

(declare-fun m!171395 () Bool)

(assert (=> b!142472 m!171395))

(assert (=> d!43743 d!45331))

(declare-fun b!142477 () Bool)

(declare-fun e!92830 () Option!180)

(assert (=> b!142477 (= e!92830 None!178)))

(declare-fun b!142475 () Bool)

(declare-fun e!92829 () Option!180)

(assert (=> b!142475 (= e!92829 e!92830)))

(declare-fun c!26939 () Bool)

(assert (=> b!142475 (= c!26939 (and ((_ is Cons!1735) (t!6314 lt!73402)) (not (= (_1!1339 (h!2342 (t!6314 lt!73402))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142474 () Bool)

(assert (=> b!142474 (= e!92829 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73402)))))))

(declare-fun c!26938 () Bool)

(declare-fun d!45333 () Bool)

(assert (=> d!45333 (= c!26938 (and ((_ is Cons!1735) (t!6314 lt!73402)) (= (_1!1339 (h!2342 (t!6314 lt!73402))) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45333 (= (getValueByKey!174 (t!6314 lt!73402) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92829)))

(declare-fun b!142476 () Bool)

(assert (=> b!142476 (= e!92830 (getValueByKey!174 (t!6314 (t!6314 lt!73402)) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45333 c!26938) b!142474))

(assert (= (and d!45333 (not c!26938)) b!142475))

(assert (= (and b!142475 c!26939) b!142476))

(assert (= (and b!142475 (not c!26939)) b!142477))

(declare-fun m!171397 () Bool)

(assert (=> b!142476 m!171397))

(assert (=> b!140528 d!45333))

(declare-fun d!45335 () Bool)

(declare-fun lt!74542 () Bool)

(assert (=> d!45335 (= lt!74542 (select (content!137 Nil!1737) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun e!92831 () Bool)

(assert (=> d!45335 (= lt!74542 e!92831)))

(declare-fun res!67897 () Bool)

(assert (=> d!45335 (=> (not res!67897) (not e!92831))))

(assert (=> d!45335 (= res!67897 ((_ is Cons!1736) Nil!1737))))

(assert (=> d!45335 (= (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) lt!74542)))

(declare-fun b!142478 () Bool)

(declare-fun e!92832 () Bool)

(assert (=> b!142478 (= e!92831 e!92832)))

(declare-fun res!67896 () Bool)

(assert (=> b!142478 (=> res!67896 e!92832)))

(assert (=> b!142478 (= res!67896 (= (h!2343 Nil!1737) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!142479 () Bool)

(assert (=> b!142479 (= e!92832 (contains!913 (t!6315 Nil!1737) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (= (and d!45335 res!67897) b!142478))

(assert (= (and b!142478 (not res!67896)) b!142479))

(assert (=> d!45335 m!166945))

(assert (=> d!45335 m!167523))

(declare-fun m!171399 () Bool)

(assert (=> d!45335 m!171399))

(assert (=> b!142479 m!167523))

(declare-fun m!171401 () Bool)

(assert (=> b!142479 m!171401))

(assert (=> b!140730 d!45335))

(declare-fun d!45337 () Bool)

(declare-fun c!26940 () Bool)

(assert (=> d!45337 (= c!26940 ((_ is Nil!1736) (toList!871 lt!73279)))))

(declare-fun e!92833 () (InoxSet tuple2!2656))

(assert (=> d!45337 (= (content!138 (toList!871 lt!73279)) e!92833)))

(declare-fun b!142480 () Bool)

(assert (=> b!142480 (= e!92833 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!142481 () Bool)

(assert (=> b!142481 (= e!92833 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73279)) true) (content!138 (t!6314 (toList!871 lt!73279)))))))

(assert (= (and d!45337 c!26940) b!142480))

(assert (= (and d!45337 (not c!26940)) b!142481))

(declare-fun m!171403 () Bool)

(assert (=> b!142481 m!171403))

(assert (=> b!142481 m!170247))

(assert (=> d!44195 d!45337))

(declare-fun d!45339 () Bool)

(declare-fun e!92835 () Bool)

(assert (=> d!45339 e!92835))

(declare-fun res!67898 () Bool)

(assert (=> d!45339 (=> res!67898 e!92835)))

(declare-fun lt!74546 () Bool)

(assert (=> d!45339 (= res!67898 (not lt!74546))))

(declare-fun lt!74545 () Bool)

(assert (=> d!45339 (= lt!74546 lt!74545)))

(declare-fun lt!74544 () Unit!4393)

(declare-fun e!92834 () Unit!4393)

(assert (=> d!45339 (= lt!74544 e!92834)))

(declare-fun c!26941 () Bool)

(assert (=> d!45339 (= c!26941 lt!74545)))

(assert (=> d!45339 (= lt!74545 (containsKey!178 (toList!871 lt!73764) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45339 (= (contains!910 lt!73764 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74546)))

(declare-fun b!142482 () Bool)

(declare-fun lt!74543 () Unit!4393)

(assert (=> b!142482 (= e!92834 lt!74543)))

(assert (=> b!142482 (= lt!74543 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73764) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142482 (isDefined!128 (getValueByKey!174 (toList!871 lt!73764) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142483 () Bool)

(declare-fun Unit!4507 () Unit!4393)

(assert (=> b!142483 (= e!92834 Unit!4507)))

(declare-fun b!142484 () Bool)

(assert (=> b!142484 (= e!92835 (isDefined!128 (getValueByKey!174 (toList!871 lt!73764) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45339 c!26941) b!142482))

(assert (= (and d!45339 (not c!26941)) b!142483))

(assert (= (and d!45339 (not res!67898)) b!142484))

(declare-fun m!171405 () Bool)

(assert (=> d!45339 m!171405))

(declare-fun m!171407 () Bool)

(assert (=> b!142482 m!171407))

(assert (=> b!142482 m!170841))

(assert (=> b!142482 m!170841))

(declare-fun m!171409 () Bool)

(assert (=> b!142482 m!171409))

(assert (=> b!142484 m!170841))

(assert (=> b!142484 m!170841))

(assert (=> b!142484 m!171409))

(assert (=> bm!15626 d!45339))

(declare-fun d!45341 () Bool)

(assert (=> d!45341 (= (isEmpty!421 lt!73508) (isEmpty!423 (toList!871 lt!73508)))))

(declare-fun bs!6008 () Bool)

(assert (= bs!6008 d!45341))

(declare-fun m!171411 () Bool)

(assert (=> bs!6008 m!171411))

(assert (=> b!140461 d!45341))

(declare-fun d!45343 () Bool)

(assert (=> d!45343 (isDefined!128 (getValueByKey!174 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!74547 () Unit!4393)

(assert (=> d!45343 (= lt!74547 (choose!871 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!92836 () Bool)

(assert (=> d!45343 e!92836))

(declare-fun res!67899 () Bool)

(assert (=> d!45343 (=> (not res!67899) (not e!92836))))

(assert (=> d!45343 (= res!67899 (isStrictlySorted!320 (toList!871 lt!73401)))))

(assert (=> d!45343 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74547)))

(declare-fun b!142485 () Bool)

(assert (=> b!142485 (= e!92836 (containsKey!178 (toList!871 lt!73401) (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45343 res!67899) b!142485))

(assert (=> d!45343 m!167163))

(assert (=> d!45343 m!167163))

(assert (=> d!45343 m!167641))

(declare-fun m!171413 () Bool)

(assert (=> d!45343 m!171413))

(declare-fun m!171415 () Bool)

(assert (=> d!45343 m!171415))

(assert (=> b!142485 m!167637))

(assert (=> b!140523 d!45343))

(assert (=> b!140523 d!45091))

(assert (=> b!140523 d!43821))

(declare-fun b!142489 () Bool)

(declare-fun e!92838 () Option!180)

(assert (=> b!142489 (= e!92838 None!178)))

(declare-fun b!142487 () Bool)

(declare-fun e!92837 () Option!180)

(assert (=> b!142487 (= e!92837 e!92838)))

(declare-fun c!26943 () Bool)

(assert (=> b!142487 (= c!26943 (and ((_ is Cons!1735) (t!6314 lt!73395)) (not (= (_1!1339 (h!2342 (t!6314 lt!73395))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142486 () Bool)

(assert (=> b!142486 (= e!92837 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73395)))))))

(declare-fun c!26942 () Bool)

(declare-fun d!45345 () Bool)

(assert (=> d!45345 (= c!26942 (and ((_ is Cons!1735) (t!6314 lt!73395)) (= (_1!1339 (h!2342 (t!6314 lt!73395))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45345 (= (getValueByKey!174 (t!6314 lt!73395) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92837)))

(declare-fun b!142488 () Bool)

(assert (=> b!142488 (= e!92838 (getValueByKey!174 (t!6314 (t!6314 lt!73395)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45345 c!26942) b!142486))

(assert (= (and d!45345 (not c!26942)) b!142487))

(assert (= (and b!142487 c!26943) b!142488))

(assert (= (and b!142487 (not c!26943)) b!142489))

(declare-fun m!171417 () Bool)

(assert (=> b!142488 m!171417))

(assert (=> b!140647 d!45345))

(declare-fun d!45347 () Bool)

(declare-fun res!67900 () Bool)

(declare-fun e!92839 () Bool)

(assert (=> d!45347 (=> res!67900 e!92839)))

(assert (=> d!45347 (= res!67900 (and ((_ is Cons!1735) (toList!871 lt!73001)) (= (_1!1339 (h!2342 (toList!871 lt!73001))) lt!73020)))))

(assert (=> d!45347 (= (containsKey!178 (toList!871 lt!73001) lt!73020) e!92839)))

(declare-fun b!142490 () Bool)

(declare-fun e!92840 () Bool)

(assert (=> b!142490 (= e!92839 e!92840)))

(declare-fun res!67901 () Bool)

(assert (=> b!142490 (=> (not res!67901) (not e!92840))))

(assert (=> b!142490 (= res!67901 (and (or (not ((_ is Cons!1735) (toList!871 lt!73001))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73001))) lt!73020)) ((_ is Cons!1735) (toList!871 lt!73001)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73001))) lt!73020)))))

(declare-fun b!142491 () Bool)

(assert (=> b!142491 (= e!92840 (containsKey!178 (t!6314 (toList!871 lt!73001)) lt!73020))))

(assert (= (and d!45347 (not res!67900)) b!142490))

(assert (= (and b!142490 res!67901) b!142491))

(declare-fun m!171419 () Bool)

(assert (=> b!142491 m!171419))

(assert (=> d!44051 d!45347))

(declare-fun d!45349 () Bool)

(declare-fun res!67902 () Bool)

(declare-fun e!92841 () Bool)

(assert (=> d!45349 (=> res!67902 e!92841)))

(assert (=> d!45349 (= res!67902 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45349 (= (containsKey!178 (t!6314 (toList!871 lt!73003)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92841)))

(declare-fun b!142492 () Bool)

(declare-fun e!92842 () Bool)

(assert (=> b!142492 (= e!92841 e!92842)))

(declare-fun res!67903 () Bool)

(assert (=> b!142492 (=> (not res!67903) (not e!92842))))

(assert (=> b!142492 (= res!67903 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 lt!73003)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!142493 () Bool)

(assert (=> b!142493 (= e!92842 (containsKey!178 (t!6314 (t!6314 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45349 (not res!67902)) b!142492))

(assert (= (and b!142492 res!67903) b!142493))

(assert (=> b!142493 m!166533))

(declare-fun m!171421 () Bool)

(assert (=> b!142493 m!171421))

(assert (=> b!141117 d!45349))

(declare-fun d!45351 () Bool)

(assert (=> d!45351 (= (apply!120 lt!73530 lt!73525) (get!1528 (getValueByKey!174 (toList!871 lt!73530) lt!73525)))))

(declare-fun bs!6009 () Bool)

(assert (= bs!6009 d!45351))

(declare-fun m!171423 () Bool)

(assert (=> bs!6009 m!171423))

(assert (=> bs!6009 m!171423))

(declare-fun m!171425 () Bool)

(assert (=> bs!6009 m!171425))

(assert (=> b!140479 d!45351))

(declare-fun d!45353 () Bool)

(declare-fun e!92844 () Bool)

(assert (=> d!45353 e!92844))

(declare-fun res!67904 () Bool)

(assert (=> d!45353 (=> res!67904 e!92844)))

(declare-fun lt!74551 () Bool)

(assert (=> d!45353 (= res!67904 (not lt!74551))))

(declare-fun lt!74550 () Bool)

(assert (=> d!45353 (= lt!74551 lt!74550)))

(declare-fun lt!74549 () Unit!4393)

(declare-fun e!92843 () Unit!4393)

(assert (=> d!45353 (= lt!74549 e!92843)))

(declare-fun c!26944 () Bool)

(assert (=> d!45353 (= c!26944 lt!74550)))

(assert (=> d!45353 (= lt!74550 (containsKey!178 (toList!871 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))) lt!73535))))

(assert (=> d!45353 (= (contains!910 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))) lt!73535) lt!74551)))

(declare-fun b!142494 () Bool)

(declare-fun lt!74548 () Unit!4393)

(assert (=> b!142494 (= e!92843 lt!74548)))

(assert (=> b!142494 (= lt!74548 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))) lt!73535))))

(assert (=> b!142494 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))) lt!73535))))

(declare-fun b!142495 () Bool)

(declare-fun Unit!4508 () Unit!4393)

(assert (=> b!142495 (= e!92843 Unit!4508)))

(declare-fun b!142496 () Bool)

(assert (=> b!142496 (= e!92844 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))) lt!73535)))))

(assert (= (and d!45353 c!26944) b!142494))

(assert (= (and d!45353 (not c!26944)) b!142495))

(assert (= (and d!45353 (not res!67904)) b!142496))

(declare-fun m!171427 () Bool)

(assert (=> d!45353 m!171427))

(declare-fun m!171429 () Bool)

(assert (=> b!142494 m!171429))

(declare-fun m!171431 () Bool)

(assert (=> b!142494 m!171431))

(assert (=> b!142494 m!171431))

(declare-fun m!171433 () Bool)

(assert (=> b!142494 m!171433))

(assert (=> b!142496 m!171431))

(assert (=> b!142496 m!171431))

(assert (=> b!142496 m!171433))

(assert (=> b!140479 d!45353))

(declare-fun d!45355 () Bool)

(declare-fun e!92845 () Bool)

(assert (=> d!45355 e!92845))

(declare-fun res!67906 () Bool)

(assert (=> d!45355 (=> (not res!67906) (not e!92845))))

(declare-fun lt!74554 () ListLongMap!1711)

(assert (=> d!45355 (= res!67906 (contains!910 lt!74554 (_1!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))))))

(declare-fun lt!74555 () List!1739)

(assert (=> d!45355 (= lt!74554 (ListLongMap!1712 lt!74555))))

(declare-fun lt!74552 () Unit!4393)

(declare-fun lt!74553 () Unit!4393)

(assert (=> d!45355 (= lt!74552 lt!74553)))

(assert (=> d!45355 (= (getValueByKey!174 lt!74555 (_1!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45355 (= lt!74553 (lemmaContainsTupThenGetReturnValue!91 lt!74555 (_1!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45355 (= lt!74555 (insertStrictlySorted!94 (toList!871 lt!73530) (_1!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45355 (= (+!167 lt!73530 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))) lt!74554)))

(declare-fun b!142497 () Bool)

(declare-fun res!67905 () Bool)

(assert (=> b!142497 (=> (not res!67905) (not e!92845))))

(assert (=> b!142497 (= res!67905 (= (getValueByKey!174 (toList!871 lt!74554) (_1!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))))))))

(declare-fun b!142498 () Bool)

(assert (=> b!142498 (= e!92845 (contains!914 (toList!871 lt!74554) (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))))))

(assert (= (and d!45355 res!67906) b!142497))

(assert (= (and b!142497 res!67905) b!142498))

(declare-fun m!171435 () Bool)

(assert (=> d!45355 m!171435))

(declare-fun m!171437 () Bool)

(assert (=> d!45355 m!171437))

(declare-fun m!171439 () Bool)

(assert (=> d!45355 m!171439))

(declare-fun m!171441 () Bool)

(assert (=> d!45355 m!171441))

(declare-fun m!171443 () Bool)

(assert (=> b!142497 m!171443))

(declare-fun m!171445 () Bool)

(assert (=> b!142498 m!171445))

(assert (=> b!140479 d!45355))

(declare-fun d!45357 () Bool)

(declare-fun e!92846 () Bool)

(assert (=> d!45357 e!92846))

(declare-fun res!67908 () Bool)

(assert (=> d!45357 (=> (not res!67908) (not e!92846))))

(declare-fun lt!74558 () ListLongMap!1711)

(assert (=> d!45357 (= res!67908 (contains!910 lt!74558 (_1!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))))))

(declare-fun lt!74559 () List!1739)

(assert (=> d!45357 (= lt!74558 (ListLongMap!1712 lt!74559))))

(declare-fun lt!74556 () Unit!4393)

(declare-fun lt!74557 () Unit!4393)

(assert (=> d!45357 (= lt!74556 lt!74557)))

(assert (=> d!45357 (= (getValueByKey!174 lt!74559 (_1!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45357 (= lt!74557 (lemmaContainsTupThenGetReturnValue!91 lt!74559 (_1!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45357 (= lt!74559 (insertStrictlySorted!94 (toList!871 lt!73515) (_1!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45357 (= (+!167 lt!73515 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))) lt!74558)))

(declare-fun b!142499 () Bool)

(declare-fun res!67907 () Bool)

(assert (=> b!142499 (=> (not res!67907) (not e!92846))))

(assert (=> b!142499 (= res!67907 (= (getValueByKey!174 (toList!871 lt!74558) (_1!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))))))))

(declare-fun b!142500 () Bool)

(assert (=> b!142500 (= e!92846 (contains!914 (toList!871 lt!74558) (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))))))

(assert (= (and d!45357 res!67908) b!142499))

(assert (= (and b!142499 res!67907) b!142500))

(declare-fun m!171447 () Bool)

(assert (=> d!45357 m!171447))

(declare-fun m!171449 () Bool)

(assert (=> d!45357 m!171449))

(declare-fun m!171451 () Bool)

(assert (=> d!45357 m!171451))

(declare-fun m!171453 () Bool)

(assert (=> d!45357 m!171453))

(declare-fun m!171455 () Bool)

(assert (=> b!142499 m!171455))

(declare-fun m!171457 () Bool)

(assert (=> b!142500 m!171457))

(assert (=> b!140479 d!45357))

(declare-fun d!45359 () Bool)

(declare-fun e!92847 () Bool)

(assert (=> d!45359 e!92847))

(declare-fun res!67910 () Bool)

(assert (=> d!45359 (=> (not res!67910) (not e!92847))))

(declare-fun lt!74562 () ListLongMap!1711)

(assert (=> d!45359 (= res!67910 (contains!910 lt!74562 (_1!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))))))

(declare-fun lt!74563 () List!1739)

(assert (=> d!45359 (= lt!74562 (ListLongMap!1712 lt!74563))))

(declare-fun lt!74560 () Unit!4393)

(declare-fun lt!74561 () Unit!4393)

(assert (=> d!45359 (= lt!74560 lt!74561)))

(assert (=> d!45359 (= (getValueByKey!174 lt!74563 (_1!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45359 (= lt!74561 (lemmaContainsTupThenGetReturnValue!91 lt!74563 (_1!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45359 (= lt!74563 (insertStrictlySorted!94 (toList!871 lt!73519) (_1!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45359 (= (+!167 lt!73519 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))) lt!74562)))

(declare-fun b!142501 () Bool)

(declare-fun res!67909 () Bool)

(assert (=> b!142501 (=> (not res!67909) (not e!92847))))

(assert (=> b!142501 (= res!67909 (= (getValueByKey!174 (toList!871 lt!74562) (_1!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))))))))

(declare-fun b!142502 () Bool)

(assert (=> b!142502 (= e!92847 (contains!914 (toList!871 lt!74562) (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))))))

(assert (= (and d!45359 res!67910) b!142501))

(assert (= (and b!142501 res!67909) b!142502))

(declare-fun m!171459 () Bool)

(assert (=> d!45359 m!171459))

(declare-fun m!171461 () Bool)

(assert (=> d!45359 m!171461))

(declare-fun m!171463 () Bool)

(assert (=> d!45359 m!171463))

(declare-fun m!171465 () Bool)

(assert (=> d!45359 m!171465))

(declare-fun m!171467 () Bool)

(assert (=> b!142501 m!171467))

(declare-fun m!171469 () Bool)

(assert (=> b!142502 m!171469))

(assert (=> b!140479 d!45359))

(assert (=> b!140479 d!44335))

(declare-fun d!45361 () Bool)

(assert (=> d!45361 (= (apply!120 (+!167 lt!73515 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))) lt!73534) (apply!120 lt!73515 lt!73534))))

(declare-fun lt!74564 () Unit!4393)

(assert (=> d!45361 (= lt!74564 (choose!869 lt!73515 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)) lt!73534))))

(declare-fun e!92848 () Bool)

(assert (=> d!45361 e!92848))

(declare-fun res!67911 () Bool)

(assert (=> d!45361 (=> (not res!67911) (not e!92848))))

(assert (=> d!45361 (= res!67911 (contains!910 lt!73515 lt!73534))))

(assert (=> d!45361 (= (addApplyDifferent!96 lt!73515 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)) lt!73534) lt!74564)))

(declare-fun b!142503 () Bool)

(assert (=> b!142503 (= e!92848 (not (= lt!73534 lt!73524)))))

(assert (= (and d!45361 res!67911) b!142503))

(assert (=> d!45361 m!167569))

(assert (=> d!45361 m!167569))

(assert (=> d!45361 m!167571))

(declare-fun m!171471 () Bool)

(assert (=> d!45361 m!171471))

(assert (=> d!45361 m!167575))

(declare-fun m!171473 () Bool)

(assert (=> d!45361 m!171473))

(assert (=> b!140479 d!45361))

(declare-fun d!45363 () Bool)

(assert (=> d!45363 (= (apply!120 (+!167 lt!73530 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))) lt!73525) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73530 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099))))) lt!73525)))))

(declare-fun bs!6010 () Bool)

(assert (= bs!6010 d!45363))

(declare-fun m!171475 () Bool)

(assert (=> bs!6010 m!171475))

(assert (=> bs!6010 m!171475))

(declare-fun m!171477 () Bool)

(assert (=> bs!6010 m!171477))

(assert (=> b!140479 d!45363))

(declare-fun d!45365 () Bool)

(assert (=> d!45365 (= (apply!120 lt!73519 lt!73526) (get!1528 (getValueByKey!174 (toList!871 lt!73519) lt!73526)))))

(declare-fun bs!6011 () Bool)

(assert (= bs!6011 d!45365))

(declare-fun m!171479 () Bool)

(assert (=> bs!6011 m!171479))

(assert (=> bs!6011 m!171479))

(declare-fun m!171481 () Bool)

(assert (=> bs!6011 m!171481))

(assert (=> b!140479 d!45365))

(declare-fun d!45367 () Bool)

(assert (=> d!45367 (= (apply!120 (+!167 lt!73515 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099)))) lt!73534) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73515 (tuple2!2657 lt!73524 (zeroValue!2789 (_2!1340 lt!73099))))) lt!73534)))))

(declare-fun bs!6012 () Bool)

(assert (= bs!6012 d!45367))

(declare-fun m!171483 () Bool)

(assert (=> bs!6012 m!171483))

(assert (=> bs!6012 m!171483))

(declare-fun m!171485 () Bool)

(assert (=> bs!6012 m!171485))

(assert (=> b!140479 d!45367))

(declare-fun d!45369 () Bool)

(assert (=> d!45369 (contains!910 (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))) lt!73535)))

(declare-fun lt!74565 () Unit!4393)

(assert (=> d!45369 (= lt!74565 (choose!870 lt!73529 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)) lt!73535))))

(assert (=> d!45369 (contains!910 lt!73529 lt!73535)))

(assert (=> d!45369 (= (addStillContains!96 lt!73529 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)) lt!73535) lt!74565)))

(declare-fun bs!6013 () Bool)

(assert (= bs!6013 d!45369))

(assert (=> bs!6013 m!167557))

(assert (=> bs!6013 m!167557))

(assert (=> bs!6013 m!167563))

(declare-fun m!171487 () Bool)

(assert (=> bs!6013 m!171487))

(declare-fun m!171489 () Bool)

(assert (=> bs!6013 m!171489))

(assert (=> b!140479 d!45369))

(declare-fun d!45371 () Bool)

(assert (=> d!45371 (= (apply!120 (+!167 lt!73519 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))) lt!73526) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73519 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099))))) lt!73526)))))

(declare-fun bs!6014 () Bool)

(assert (= bs!6014 d!45371))

(declare-fun m!171491 () Bool)

(assert (=> bs!6014 m!171491))

(assert (=> bs!6014 m!171491))

(declare-fun m!171493 () Bool)

(assert (=> bs!6014 m!171493))

(assert (=> b!140479 d!45371))

(declare-fun d!45373 () Bool)

(assert (=> d!45373 (= (apply!120 (+!167 lt!73530 (tuple2!2657 lt!73528 (minValue!2789 (_2!1340 lt!73099)))) lt!73525) (apply!120 lt!73530 lt!73525))))

(declare-fun lt!74566 () Unit!4393)

(assert (=> d!45373 (= lt!74566 (choose!869 lt!73530 lt!73528 (minValue!2789 (_2!1340 lt!73099)) lt!73525))))

(declare-fun e!92849 () Bool)

(assert (=> d!45373 e!92849))

(declare-fun res!67912 () Bool)

(assert (=> d!45373 (=> (not res!67912) (not e!92849))))

(assert (=> d!45373 (= res!67912 (contains!910 lt!73530 lt!73525))))

(assert (=> d!45373 (= (addApplyDifferent!96 lt!73530 lt!73528 (minValue!2789 (_2!1340 lt!73099)) lt!73525) lt!74566)))

(declare-fun b!142504 () Bool)

(assert (=> b!142504 (= e!92849 (not (= lt!73525 lt!73528)))))

(assert (= (and d!45373 res!67912) b!142504))

(assert (=> d!45373 m!167561))

(assert (=> d!45373 m!167561))

(assert (=> d!45373 m!167573))

(declare-fun m!171495 () Bool)

(assert (=> d!45373 m!171495))

(assert (=> d!45373 m!167553))

(declare-fun m!171497 () Bool)

(assert (=> d!45373 m!171497))

(assert (=> b!140479 d!45373))

(declare-fun d!45375 () Bool)

(assert (=> d!45375 (= (apply!120 (+!167 lt!73519 (tuple2!2657 lt!73531 (minValue!2789 (_2!1340 lt!73099)))) lt!73526) (apply!120 lt!73519 lt!73526))))

(declare-fun lt!74567 () Unit!4393)

(assert (=> d!45375 (= lt!74567 (choose!869 lt!73519 lt!73531 (minValue!2789 (_2!1340 lt!73099)) lt!73526))))

(declare-fun e!92850 () Bool)

(assert (=> d!45375 e!92850))

(declare-fun res!67913 () Bool)

(assert (=> d!45375 (=> (not res!67913) (not e!92850))))

(assert (=> d!45375 (= res!67913 (contains!910 lt!73519 lt!73526))))

(assert (=> d!45375 (= (addApplyDifferent!96 lt!73519 lt!73531 (minValue!2789 (_2!1340 lt!73099)) lt!73526) lt!74567)))

(declare-fun b!142505 () Bool)

(assert (=> b!142505 (= e!92850 (not (= lt!73526 lt!73531)))))

(assert (= (and d!45375 res!67913) b!142505))

(assert (=> d!45375 m!167565))

(assert (=> d!45375 m!167565))

(assert (=> d!45375 m!167567))

(declare-fun m!171499 () Bool)

(assert (=> d!45375 m!171499))

(assert (=> d!45375 m!167551))

(declare-fun m!171501 () Bool)

(assert (=> d!45375 m!171501))

(assert (=> b!140479 d!45375))

(declare-fun d!45377 () Bool)

(declare-fun e!92851 () Bool)

(assert (=> d!45377 e!92851))

(declare-fun res!67915 () Bool)

(assert (=> d!45377 (=> (not res!67915) (not e!92851))))

(declare-fun lt!74570 () ListLongMap!1711)

(assert (=> d!45377 (= res!67915 (contains!910 lt!74570 (_1!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))))))

(declare-fun lt!74571 () List!1739)

(assert (=> d!45377 (= lt!74570 (ListLongMap!1712 lt!74571))))

(declare-fun lt!74568 () Unit!4393)

(declare-fun lt!74569 () Unit!4393)

(assert (=> d!45377 (= lt!74568 lt!74569)))

(assert (=> d!45377 (= (getValueByKey!174 lt!74571 (_1!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45377 (= lt!74569 (lemmaContainsTupThenGetReturnValue!91 lt!74571 (_1!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45377 (= lt!74571 (insertStrictlySorted!94 (toList!871 lt!73529) (_1!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))) (_2!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))))))

(assert (=> d!45377 (= (+!167 lt!73529 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))) lt!74570)))

(declare-fun b!142506 () Bool)

(declare-fun res!67914 () Bool)

(assert (=> b!142506 (=> (not res!67914) (not e!92851))))

(assert (=> b!142506 (= res!67914 (= (getValueByKey!174 (toList!871 lt!74570) (_1!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099))))) (Some!179 (_2!1339 (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))))))))

(declare-fun b!142507 () Bool)

(assert (=> b!142507 (= e!92851 (contains!914 (toList!871 lt!74570) (tuple2!2657 lt!73518 (zeroValue!2789 (_2!1340 lt!73099)))))))

(assert (= (and d!45377 res!67915) b!142506))

(assert (= (and b!142506 res!67914) b!142507))

(declare-fun m!171503 () Bool)

(assert (=> d!45377 m!171503))

(declare-fun m!171505 () Bool)

(assert (=> d!45377 m!171505))

(declare-fun m!171507 () Bool)

(assert (=> d!45377 m!171507))

(declare-fun m!171509 () Bool)

(assert (=> d!45377 m!171509))

(declare-fun m!171511 () Bool)

(assert (=> b!142506 m!171511))

(declare-fun m!171513 () Bool)

(assert (=> b!142507 m!171513))

(assert (=> b!140479 d!45377))

(declare-fun d!45379 () Bool)

(assert (=> d!45379 (= (apply!120 lt!73515 lt!73534) (get!1528 (getValueByKey!174 (toList!871 lt!73515) lt!73534)))))

(declare-fun bs!6015 () Bool)

(assert (= bs!6015 d!45379))

(declare-fun m!171515 () Bool)

(assert (=> bs!6015 m!171515))

(assert (=> bs!6015 m!171515))

(declare-fun m!171517 () Bool)

(assert (=> bs!6015 m!171517))

(assert (=> b!140479 d!45379))

(declare-fun d!45381 () Bool)

(declare-fun e!92852 () Bool)

(assert (=> d!45381 e!92852))

(declare-fun res!67917 () Bool)

(assert (=> d!45381 (=> (not res!67917) (not e!92852))))

(declare-fun lt!74574 () ListLongMap!1711)

(assert (=> d!45381 (= res!67917 (contains!910 lt!74574 (_1!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74575 () List!1739)

(assert (=> d!45381 (= lt!74574 (ListLongMap!1712 lt!74575))))

(declare-fun lt!74572 () Unit!4393)

(declare-fun lt!74573 () Unit!4393)

(assert (=> d!45381 (= lt!74572 lt!74573)))

(assert (=> d!45381 (= (getValueByKey!174 lt!74575 (_1!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45381 (= lt!74573 (lemmaContainsTupThenGetReturnValue!91 lt!74575 (_1!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45381 (= lt!74575 (insertStrictlySorted!94 (toList!871 (ite c!26421 call!15600 (ite c!26424 call!15603 call!15598))) (_1!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45381 (= (+!167 (ite c!26421 call!15600 (ite c!26424 call!15603 call!15598)) (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74574)))

(declare-fun b!142508 () Bool)

(declare-fun res!67916 () Bool)

(assert (=> b!142508 (=> (not res!67916) (not e!92852))))

(assert (=> b!142508 (= res!67916 (= (getValueByKey!174 (toList!871 lt!74574) (_1!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142509 () Bool)

(assert (=> b!142509 (= e!92852 (contains!914 (toList!871 lt!74574) (ite (or c!26421 c!26424) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45381 res!67917) b!142508))

(assert (= (and b!142508 res!67916) b!142509))

(declare-fun m!171519 () Bool)

(assert (=> d!45381 m!171519))

(declare-fun m!171521 () Bool)

(assert (=> d!45381 m!171521))

(declare-fun m!171523 () Bool)

(assert (=> d!45381 m!171523))

(declare-fun m!171525 () Bool)

(assert (=> d!45381 m!171525))

(declare-fun m!171527 () Bool)

(assert (=> b!142508 m!171527))

(declare-fun m!171529 () Bool)

(assert (=> b!142509 m!171529))

(assert (=> bm!15600 d!45381))

(declare-fun d!45383 () Bool)

(declare-fun res!67918 () Bool)

(declare-fun e!92853 () Bool)

(assert (=> d!45383 (=> res!67918 e!92853)))

(assert (=> d!45383 (= res!67918 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45383 (= (containsKey!178 (t!6314 (toList!871 lt!73003)) #b0000000000000000000000000000000000000000000000000000000000000000) e!92853)))

(declare-fun b!142510 () Bool)

(declare-fun e!92854 () Bool)

(assert (=> b!142510 (= e!92853 e!92854)))

(declare-fun res!67919 () Bool)

(assert (=> b!142510 (=> (not res!67919) (not e!92854))))

(assert (=> b!142510 (= res!67919 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 lt!73003)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142511 () Bool)

(assert (=> b!142511 (= e!92854 (containsKey!178 (t!6314 (t!6314 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45383 (not res!67918)) b!142510))

(assert (= (and b!142510 res!67919) b!142511))

(declare-fun m!171531 () Bool)

(assert (=> b!142511 m!171531))

(assert (=> b!140624 d!45383))

(declare-fun d!45385 () Bool)

(assert (=> d!45385 (= (isEmpty!422 (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!179) (getValueByKey!174 (toList!871 lt!73003) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43931 d!45385))

(assert (=> b!140390 d!43699))

(assert (=> bm!15587 d!44835))

(declare-fun d!45387 () Bool)

(assert (=> d!45387 (= (apply!120 (+!167 lt!73199 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) lt!73206) (apply!120 lt!73199 lt!73206))))

(assert (=> d!45387 true))

(declare-fun _$34!1015 () Unit!4393)

(assert (=> d!45387 (= (choose!869 lt!73199 lt!73211 (minValue!2789 newMap!16) lt!73206) _$34!1015)))

(declare-fun bs!6016 () Bool)

(assert (= bs!6016 d!45387))

(assert (=> bs!6016 m!166883))

(assert (=> bs!6016 m!166883))

(assert (=> bs!6016 m!166885))

(assert (=> bs!6016 m!166869))

(assert (=> d!43865 d!45387))

(declare-fun d!45389 () Bool)

(declare-fun e!92856 () Bool)

(assert (=> d!45389 e!92856))

(declare-fun res!67920 () Bool)

(assert (=> d!45389 (=> res!67920 e!92856)))

(declare-fun lt!74579 () Bool)

(assert (=> d!45389 (= res!67920 (not lt!74579))))

(declare-fun lt!74578 () Bool)

(assert (=> d!45389 (= lt!74579 lt!74578)))

(declare-fun lt!74577 () Unit!4393)

(declare-fun e!92855 () Unit!4393)

(assert (=> d!45389 (= lt!74577 e!92855)))

(declare-fun c!26945 () Bool)

(assert (=> d!45389 (= c!26945 lt!74578)))

(assert (=> d!45389 (= lt!74578 (containsKey!178 (toList!871 lt!73199) lt!73206))))

(assert (=> d!45389 (= (contains!910 lt!73199 lt!73206) lt!74579)))

(declare-fun b!142512 () Bool)

(declare-fun lt!74576 () Unit!4393)

(assert (=> b!142512 (= e!92855 lt!74576)))

(assert (=> b!142512 (= lt!74576 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73199) lt!73206))))

(assert (=> b!142512 (isDefined!128 (getValueByKey!174 (toList!871 lt!73199) lt!73206))))

(declare-fun b!142513 () Bool)

(declare-fun Unit!4509 () Unit!4393)

(assert (=> b!142513 (= e!92855 Unit!4509)))

(declare-fun b!142514 () Bool)

(assert (=> b!142514 (= e!92856 (isDefined!128 (getValueByKey!174 (toList!871 lt!73199) lt!73206)))))

(assert (= (and d!45389 c!26945) b!142512))

(assert (= (and d!45389 (not c!26945)) b!142513))

(assert (= (and d!45389 (not res!67920)) b!142514))

(declare-fun m!171533 () Bool)

(assert (=> d!45389 m!171533))

(declare-fun m!171535 () Bool)

(assert (=> b!142512 m!171535))

(assert (=> b!142512 m!167803))

(assert (=> b!142512 m!167803))

(declare-fun m!171537 () Bool)

(assert (=> b!142512 m!171537))

(assert (=> b!142514 m!167803))

(assert (=> b!142514 m!167803))

(assert (=> b!142514 m!171537))

(assert (=> d!43865 d!45389))

(assert (=> d!43865 d!43857))

(assert (=> d!43865 d!43861))

(assert (=> d!43865 d!43863))

(declare-fun d!45391 () Bool)

(declare-fun c!26946 () Bool)

(assert (=> d!45391 (= c!26946 ((_ is Nil!1736) (toList!871 lt!73386)))))

(declare-fun e!92857 () (InoxSet tuple2!2656))

(assert (=> d!45391 (= (content!138 (toList!871 lt!73386)) e!92857)))

(declare-fun b!142515 () Bool)

(assert (=> b!142515 (= e!92857 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!142516 () Bool)

(assert (=> b!142516 (= e!92857 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73386)) true) (content!138 (t!6314 (toList!871 lt!73386)))))))

(assert (= (and d!45391 c!26946) b!142515))

(assert (= (and d!45391 (not c!26946)) b!142516))

(declare-fun m!171539 () Bool)

(assert (=> b!142516 m!171539))

(assert (=> b!142516 m!169533))

(assert (=> d!44021 d!45391))

(declare-fun d!45393 () Bool)

(assert (=> d!45393 (= (apply!120 lt!73645 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73645) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6017 () Bool)

(assert (= bs!6017 d!45393))

(assert (=> bs!6017 m!166699))

(declare-fun m!171541 () Bool)

(assert (=> bs!6017 m!171541))

(assert (=> bs!6017 m!171541))

(declare-fun m!171543 () Bool)

(assert (=> bs!6017 m!171543))

(assert (=> b!140698 d!45393))

(declare-fun d!45395 () Bool)

(declare-fun c!26947 () Bool)

(assert (=> d!45395 (= c!26947 ((_ is ValueCellFull!1121) (select (arr!2303 lt!73089) #b00000000000000000000000000000000)))))

(declare-fun e!92858 () V!3553)

(assert (=> d!45395 (= (get!1523 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92858)))

(declare-fun b!142517 () Bool)

(assert (=> b!142517 (= e!92858 (get!1526 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142518 () Bool)

(assert (=> b!142518 (= e!92858 (get!1527 (select (arr!2303 lt!73089) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45395 c!26947) b!142517))

(assert (= (and d!45395 (not c!26947)) b!142518))

(assert (=> b!142517 m!167973))

(assert (=> b!142517 m!166703))

(declare-fun m!171545 () Bool)

(assert (=> b!142517 m!171545))

(assert (=> b!142518 m!167973))

(assert (=> b!142518 m!166703))

(declare-fun m!171547 () Bool)

(assert (=> b!142518 m!171547))

(assert (=> b!140698 d!45395))

(assert (=> b!140873 d!45099))

(declare-fun d!45397 () Bool)

(declare-fun e!92860 () Bool)

(assert (=> d!45397 e!92860))

(declare-fun res!67921 () Bool)

(assert (=> d!45397 (=> res!67921 e!92860)))

(declare-fun lt!74583 () Bool)

(assert (=> d!45397 (= res!67921 (not lt!74583))))

(declare-fun lt!74582 () Bool)

(assert (=> d!45397 (= lt!74583 lt!74582)))

(declare-fun lt!74581 () Unit!4393)

(declare-fun e!92859 () Unit!4393)

(assert (=> d!45397 (= lt!74581 e!92859)))

(declare-fun c!26948 () Bool)

(assert (=> d!45397 (= c!26948 lt!74582)))

(assert (=> d!45397 (= lt!74582 (containsKey!178 (toList!871 lt!73462) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45397 (= (contains!910 lt!73462 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74583)))

(declare-fun b!142519 () Bool)

(declare-fun lt!74580 () Unit!4393)

(assert (=> b!142519 (= e!92859 lt!74580)))

(assert (=> b!142519 (= lt!74580 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73462) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142519 (isDefined!128 (getValueByKey!174 (toList!871 lt!73462) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142520 () Bool)

(declare-fun Unit!4510 () Unit!4393)

(assert (=> b!142520 (= e!92859 Unit!4510)))

(declare-fun b!142521 () Bool)

(assert (=> b!142521 (= e!92860 (isDefined!128 (getValueByKey!174 (toList!871 lt!73462) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45397 c!26948) b!142519))

(assert (= (and d!45397 (not c!26948)) b!142520))

(assert (= (and d!45397 (not res!67921)) b!142521))

(declare-fun m!171549 () Bool)

(assert (=> d!45397 m!171549))

(declare-fun m!171551 () Bool)

(assert (=> b!142519 m!171551))

(assert (=> b!142519 m!167345))

(assert (=> b!142519 m!167345))

(declare-fun m!171553 () Bool)

(assert (=> b!142519 m!171553))

(assert (=> b!142521 m!167345))

(assert (=> b!142521 m!167345))

(assert (=> b!142521 m!171553))

(assert (=> d!43723 d!45397))

(declare-fun b!142525 () Bool)

(declare-fun e!92862 () Option!180)

(assert (=> b!142525 (= e!92862 None!178)))

(declare-fun b!142523 () Bool)

(declare-fun e!92861 () Option!180)

(assert (=> b!142523 (= e!92861 e!92862)))

(declare-fun c!26950 () Bool)

(assert (=> b!142523 (= c!26950 (and ((_ is Cons!1735) lt!73463) (not (= (_1!1339 (h!2342 lt!73463)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142522 () Bool)

(assert (=> b!142522 (= e!92861 (Some!179 (_2!1339 (h!2342 lt!73463))))))

(declare-fun c!26949 () Bool)

(declare-fun d!45399 () Bool)

(assert (=> d!45399 (= c!26949 (and ((_ is Cons!1735) lt!73463) (= (_1!1339 (h!2342 lt!73463)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45399 (= (getValueByKey!174 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92861)))

(declare-fun b!142524 () Bool)

(assert (=> b!142524 (= e!92862 (getValueByKey!174 (t!6314 lt!73463) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45399 c!26949) b!142522))

(assert (= (and d!45399 (not c!26949)) b!142523))

(assert (= (and b!142523 c!26950) b!142524))

(assert (= (and b!142523 (not c!26950)) b!142525))

(declare-fun m!171555 () Bool)

(assert (=> b!142524 m!171555))

(assert (=> d!43723 d!45399))

(declare-fun d!45401 () Bool)

(assert (=> d!45401 (= (getValueByKey!174 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74584 () Unit!4393)

(assert (=> d!45401 (= lt!74584 (choose!872 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92863 () Bool)

(assert (=> d!45401 e!92863))

(declare-fun res!67922 () Bool)

(assert (=> d!45401 (=> (not res!67922) (not e!92863))))

(assert (=> d!45401 (= res!67922 (isStrictlySorted!320 lt!73463))))

(assert (=> d!45401 (= (lemmaContainsTupThenGetReturnValue!91 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74584)))

(declare-fun b!142526 () Bool)

(declare-fun res!67923 () Bool)

(assert (=> b!142526 (=> (not res!67923) (not e!92863))))

(assert (=> b!142526 (= res!67923 (containsKey!178 lt!73463 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142527 () Bool)

(assert (=> b!142527 (= e!92863 (contains!914 lt!73463 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45401 res!67922) b!142526))

(assert (= (and b!142526 res!67923) b!142527))

(assert (=> d!45401 m!167339))

(declare-fun m!171557 () Bool)

(assert (=> d!45401 m!171557))

(declare-fun m!171559 () Bool)

(assert (=> d!45401 m!171559))

(declare-fun m!171561 () Bool)

(assert (=> b!142526 m!171561))

(declare-fun m!171563 () Bool)

(assert (=> b!142527 m!171563))

(assert (=> d!43723 d!45401))

(declare-fun b!142528 () Bool)

(declare-fun e!92866 () List!1739)

(declare-fun call!15741 () List!1739)

(assert (=> b!142528 (= e!92866 call!15741)))

(declare-fun b!142529 () Bool)

(declare-fun e!92864 () List!1739)

(declare-fun call!15740 () List!1739)

(assert (=> b!142529 (= e!92864 call!15740)))

(declare-fun e!92867 () Bool)

(declare-fun b!142530 () Bool)

(declare-fun lt!74585 () List!1739)

(assert (=> b!142530 (= e!92867 (contains!914 lt!74585 (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!26954 () Bool)

(declare-fun bm!15736 () Bool)

(declare-fun e!92865 () List!1739)

(assert (=> bm!15736 (= call!15741 ($colon$colon!93 e!92865 (ite c!26954 (h!2342 (toList!871 (map!1424 newMap!16))) (tuple2!2657 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26951 () Bool)

(assert (=> bm!15736 (= c!26951 c!26954)))

(declare-fun bm!15737 () Bool)

(declare-fun call!15739 () List!1739)

(assert (=> bm!15737 (= call!15740 call!15739)))

(declare-fun b!142531 () Bool)

(declare-fun res!67924 () Bool)

(assert (=> b!142531 (=> (not res!67924) (not e!92867))))

(assert (=> b!142531 (= res!67924 (containsKey!178 lt!74585 (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!45403 () Bool)

(assert (=> d!45403 e!92867))

(declare-fun res!67925 () Bool)

(assert (=> d!45403 (=> (not res!67925) (not e!92867))))

(assert (=> d!45403 (= res!67925 (isStrictlySorted!320 lt!74585))))

(assert (=> d!45403 (= lt!74585 e!92866)))

(assert (=> d!45403 (= c!26954 (and ((_ is Cons!1735) (toList!871 (map!1424 newMap!16))) (bvslt (_1!1339 (h!2342 (toList!871 (map!1424 newMap!16)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45403 (isStrictlySorted!320 (toList!871 (map!1424 newMap!16)))))

(assert (=> d!45403 (= (insertStrictlySorted!94 (toList!871 (map!1424 newMap!16)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74585)))

(declare-fun c!26953 () Bool)

(declare-fun b!142532 () Bool)

(declare-fun c!26952 () Bool)

(assert (=> b!142532 (= e!92865 (ite c!26953 (t!6314 (toList!871 (map!1424 newMap!16))) (ite c!26952 (Cons!1735 (h!2342 (toList!871 (map!1424 newMap!16))) (t!6314 (toList!871 (map!1424 newMap!16)))) Nil!1736)))))

(declare-fun b!142533 () Bool)

(assert (=> b!142533 (= c!26952 (and ((_ is Cons!1735) (toList!871 (map!1424 newMap!16))) (bvsgt (_1!1339 (h!2342 (toList!871 (map!1424 newMap!16)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92868 () List!1739)

(assert (=> b!142533 (= e!92868 e!92864)))

(declare-fun b!142534 () Bool)

(assert (=> b!142534 (= e!92864 call!15740)))

(declare-fun b!142535 () Bool)

(assert (=> b!142535 (= e!92865 (insertStrictlySorted!94 (t!6314 (toList!871 (map!1424 newMap!16))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15738 () Bool)

(assert (=> bm!15738 (= call!15739 call!15741)))

(declare-fun b!142536 () Bool)

(assert (=> b!142536 (= e!92866 e!92868)))

(assert (=> b!142536 (= c!26953 (and ((_ is Cons!1735) (toList!871 (map!1424 newMap!16))) (= (_1!1339 (h!2342 (toList!871 (map!1424 newMap!16)))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142537 () Bool)

(assert (=> b!142537 (= e!92868 call!15739)))

(assert (= (and d!45403 c!26954) b!142528))

(assert (= (and d!45403 (not c!26954)) b!142536))

(assert (= (and b!142536 c!26953) b!142537))

(assert (= (and b!142536 (not c!26953)) b!142533))

(assert (= (and b!142533 c!26952) b!142529))

(assert (= (and b!142533 (not c!26952)) b!142534))

(assert (= (or b!142529 b!142534) bm!15737))

(assert (= (or b!142537 bm!15737) bm!15738))

(assert (= (or b!142528 bm!15738) bm!15736))

(assert (= (and bm!15736 c!26951) b!142535))

(assert (= (and bm!15736 (not c!26951)) b!142532))

(assert (= (and d!45403 res!67925) b!142531))

(assert (= (and b!142531 res!67924) b!142530))

(declare-fun m!171565 () Bool)

(assert (=> b!142531 m!171565))

(declare-fun m!171567 () Bool)

(assert (=> b!142535 m!171567))

(declare-fun m!171569 () Bool)

(assert (=> bm!15736 m!171569))

(declare-fun m!171571 () Bool)

(assert (=> b!142530 m!171571))

(declare-fun m!171573 () Bool)

(assert (=> d!45403 m!171573))

(declare-fun m!171575 () Bool)

(assert (=> d!45403 m!171575))

(assert (=> d!43723 d!45403))

(assert (=> d!43873 d!43875))

(assert (=> d!43873 d!43877))

(declare-fun d!45405 () Bool)

(assert (=> d!45405 (isDefined!128 (getValueByKey!174 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!45405 true))

(declare-fun _$12!417 () Unit!4393)

(assert (=> d!45405 (= (choose!871 (toList!871 call!15490) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) _$12!417)))

(declare-fun bs!6018 () Bool)

(assert (= bs!6018 d!45405))

(assert (=> bs!6018 m!166407))

(assert (=> bs!6018 m!167105))

(assert (=> bs!6018 m!167105))

(assert (=> bs!6018 m!167107))

(assert (=> d!43873 d!45405))

(declare-fun d!45407 () Bool)

(declare-fun res!67926 () Bool)

(declare-fun e!92869 () Bool)

(assert (=> d!45407 (=> res!67926 e!92869)))

(assert (=> d!45407 (= res!67926 (or ((_ is Nil!1736) (toList!871 call!15490)) ((_ is Nil!1736) (t!6314 (toList!871 call!15490)))))))

(assert (=> d!45407 (= (isStrictlySorted!320 (toList!871 call!15490)) e!92869)))

(declare-fun b!142538 () Bool)

(declare-fun e!92870 () Bool)

(assert (=> b!142538 (= e!92869 e!92870)))

(declare-fun res!67927 () Bool)

(assert (=> b!142538 (=> (not res!67927) (not e!92870))))

(assert (=> b!142538 (= res!67927 (bvslt (_1!1339 (h!2342 (toList!871 call!15490))) (_1!1339 (h!2342 (t!6314 (toList!871 call!15490))))))))

(declare-fun b!142539 () Bool)

(assert (=> b!142539 (= e!92870 (isStrictlySorted!320 (t!6314 (toList!871 call!15490))))))

(assert (= (and d!45407 (not res!67926)) b!142538))

(assert (= (and b!142538 res!67927) b!142539))

(declare-fun m!171577 () Bool)

(assert (=> b!142539 m!171577))

(assert (=> d!43873 d!45407))

(assert (=> d!43845 d!43843))

(assert (=> d!43845 d!43853))

(declare-fun d!45409 () Bool)

(assert (=> d!45409 (contains!910 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) lt!73215)))

(assert (=> d!45409 true))

(declare-fun _$35!394 () Unit!4393)

(assert (=> d!45409 (= (choose!870 lt!73209 lt!73198 (zeroValue!2789 newMap!16) lt!73215) _$35!394)))

(declare-fun bs!6019 () Bool)

(assert (= bs!6019 d!45409))

(assert (=> bs!6019 m!166875))

(assert (=> bs!6019 m!166875))

(assert (=> bs!6019 m!166881))

(assert (=> d!43845 d!45409))

(declare-fun d!45411 () Bool)

(declare-fun e!92872 () Bool)

(assert (=> d!45411 e!92872))

(declare-fun res!67928 () Bool)

(assert (=> d!45411 (=> res!67928 e!92872)))

(declare-fun lt!74589 () Bool)

(assert (=> d!45411 (= res!67928 (not lt!74589))))

(declare-fun lt!74588 () Bool)

(assert (=> d!45411 (= lt!74589 lt!74588)))

(declare-fun lt!74587 () Unit!4393)

(declare-fun e!92871 () Unit!4393)

(assert (=> d!45411 (= lt!74587 e!92871)))

(declare-fun c!26955 () Bool)

(assert (=> d!45411 (= c!26955 lt!74588)))

(assert (=> d!45411 (= lt!74588 (containsKey!178 (toList!871 lt!73209) lt!73215))))

(assert (=> d!45411 (= (contains!910 lt!73209 lt!73215) lt!74589)))

(declare-fun b!142540 () Bool)

(declare-fun lt!74586 () Unit!4393)

(assert (=> b!142540 (= e!92871 lt!74586)))

(assert (=> b!142540 (= lt!74586 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73209) lt!73215))))

(assert (=> b!142540 (isDefined!128 (getValueByKey!174 (toList!871 lt!73209) lt!73215))))

(declare-fun b!142541 () Bool)

(declare-fun Unit!4511 () Unit!4393)

(assert (=> b!142541 (= e!92871 Unit!4511)))

(declare-fun b!142542 () Bool)

(assert (=> b!142542 (= e!92872 (isDefined!128 (getValueByKey!174 (toList!871 lt!73209) lt!73215)))))

(assert (= (and d!45411 c!26955) b!142540))

(assert (= (and d!45411 (not c!26955)) b!142541))

(assert (= (and d!45411 (not res!67928)) b!142542))

(declare-fun m!171579 () Bool)

(assert (=> d!45411 m!171579))

(declare-fun m!171581 () Bool)

(assert (=> b!142540 m!171581))

(declare-fun m!171583 () Bool)

(assert (=> b!142540 m!171583))

(assert (=> b!142540 m!171583))

(declare-fun m!171585 () Bool)

(assert (=> b!142540 m!171585))

(assert (=> b!142542 m!171583))

(assert (=> b!142542 m!171583))

(assert (=> b!142542 m!171585))

(assert (=> d!43845 d!45411))

(declare-fun d!45413 () Bool)

(assert (=> d!45413 (= ($colon$colon!93 e!91628 (ite c!26383 (h!2342 (toList!871 lt!73001)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (Cons!1735 (ite c!26383 (h!2342 (toList!871 lt!73001)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73010 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!91628))))

(assert (=> bm!15582 d!45413))

(declare-fun b!142543 () Bool)

(declare-fun e!92875 () List!1739)

(declare-fun call!15744 () List!1739)

(assert (=> b!142543 (= e!92875 call!15744)))

(declare-fun b!142544 () Bool)

(declare-fun e!92873 () List!1739)

(declare-fun call!15743 () List!1739)

(assert (=> b!142544 (= e!92873 call!15743)))

(declare-fun b!142545 () Bool)

(declare-fun e!92876 () Bool)

(declare-fun lt!74590 () List!1739)

(assert (=> b!142545 (= e!92876 (contains!914 lt!74590 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92874 () List!1739)

(declare-fun c!26959 () Bool)

(declare-fun bm!15739 () Bool)

(assert (=> bm!15739 (= call!15744 ($colon$colon!93 e!92874 (ite c!26959 (h!2342 (t!6314 (toList!871 call!15435))) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!26956 () Bool)

(assert (=> bm!15739 (= c!26956 c!26959)))

(declare-fun bm!15740 () Bool)

(declare-fun call!15742 () List!1739)

(assert (=> bm!15740 (= call!15743 call!15742)))

(declare-fun b!142546 () Bool)

(declare-fun res!67929 () Bool)

(assert (=> b!142546 (=> (not res!67929) (not e!92876))))

(assert (=> b!142546 (= res!67929 (containsKey!178 lt!74590 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!45415 () Bool)

(assert (=> d!45415 e!92876))

(declare-fun res!67930 () Bool)

(assert (=> d!45415 (=> (not res!67930) (not e!92876))))

(assert (=> d!45415 (= res!67930 (isStrictlySorted!320 lt!74590))))

(assert (=> d!45415 (= lt!74590 e!92875)))

(assert (=> d!45415 (= c!26959 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15435))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 call!15435)))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45415 (isStrictlySorted!320 (t!6314 (toList!871 call!15435)))))

(assert (=> d!45415 (= (insertStrictlySorted!94 (t!6314 (toList!871 call!15435)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74590)))

(declare-fun b!142547 () Bool)

(declare-fun c!26958 () Bool)

(declare-fun c!26957 () Bool)

(assert (=> b!142547 (= e!92874 (ite c!26958 (t!6314 (t!6314 (toList!871 call!15435))) (ite c!26957 (Cons!1735 (h!2342 (t!6314 (toList!871 call!15435))) (t!6314 (t!6314 (toList!871 call!15435)))) Nil!1736)))))

(declare-fun b!142548 () Bool)

(assert (=> b!142548 (= c!26957 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15435))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 call!15435)))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92877 () List!1739)

(assert (=> b!142548 (= e!92877 e!92873)))

(declare-fun b!142549 () Bool)

(assert (=> b!142549 (= e!92873 call!15743)))

(declare-fun b!142550 () Bool)

(assert (=> b!142550 (= e!92874 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 call!15435))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15741 () Bool)

(assert (=> bm!15741 (= call!15742 call!15744)))

(declare-fun b!142551 () Bool)

(assert (=> b!142551 (= e!92875 e!92877)))

(assert (=> b!142551 (= c!26958 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15435))) (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15435)))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142552 () Bool)

(assert (=> b!142552 (= e!92877 call!15742)))

(assert (= (and d!45415 c!26959) b!142543))

(assert (= (and d!45415 (not c!26959)) b!142551))

(assert (= (and b!142551 c!26958) b!142552))

(assert (= (and b!142551 (not c!26958)) b!142548))

(assert (= (and b!142548 c!26957) b!142544))

(assert (= (and b!142548 (not c!26957)) b!142549))

(assert (= (or b!142544 b!142549) bm!15740))

(assert (= (or b!142552 bm!15740) bm!15741))

(assert (= (or b!142543 bm!15741) bm!15739))

(assert (= (and bm!15739 c!26956) b!142550))

(assert (= (and bm!15739 (not c!26956)) b!142547))

(assert (= (and d!45415 res!67930) b!142546))

(assert (= (and b!142546 res!67929) b!142545))

(declare-fun m!171587 () Bool)

(assert (=> b!142546 m!171587))

(declare-fun m!171589 () Bool)

(assert (=> b!142550 m!171589))

(declare-fun m!171591 () Bool)

(assert (=> bm!15739 m!171591))

(declare-fun m!171593 () Bool)

(assert (=> b!142545 m!171593))

(declare-fun m!171595 () Bool)

(assert (=> d!45415 m!171595))

(assert (=> d!45415 m!169957))

(assert (=> b!141011 d!45415))

(declare-fun d!45417 () Bool)

(declare-fun lt!74591 () Bool)

(assert (=> d!45417 (= lt!74591 (select (content!138 (toList!871 lt!73565)) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!92879 () Bool)

(assert (=> d!45417 (= lt!74591 e!92879)))

(declare-fun res!67931 () Bool)

(assert (=> d!45417 (=> (not res!67931) (not e!92879))))

(assert (=> d!45417 (= res!67931 ((_ is Cons!1735) (toList!871 lt!73565)))))

(assert (=> d!45417 (= (contains!914 (toList!871 lt!73565) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74591)))

(declare-fun b!142553 () Bool)

(declare-fun e!92878 () Bool)

(assert (=> b!142553 (= e!92879 e!92878)))

(declare-fun res!67932 () Bool)

(assert (=> b!142553 (=> res!67932 e!92878)))

(assert (=> b!142553 (= res!67932 (= (h!2342 (toList!871 lt!73565)) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142554 () Bool)

(assert (=> b!142554 (= e!92878 (contains!914 (t!6314 (toList!871 lt!73565)) (ite (or c!26240 c!26243) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!45417 res!67931) b!142553))

(assert (= (and b!142553 (not res!67932)) b!142554))

(declare-fun m!171597 () Bool)

(assert (=> d!45417 m!171597))

(declare-fun m!171599 () Bool)

(assert (=> d!45417 m!171599))

(declare-fun m!171601 () Bool)

(assert (=> b!142554 m!171601))

(assert (=> b!140578 d!45417))

(declare-fun b!142555 () Bool)

(declare-fun e!92881 () (_ BitVec 32))

(declare-fun e!92880 () (_ BitVec 32))

(assert (=> b!142555 (= e!92881 e!92880)))

(declare-fun c!26961 () Bool)

(assert (=> b!142555 (= c!26961 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142556 () Bool)

(declare-fun call!15745 () (_ BitVec 32))

(assert (=> b!142556 (= e!92880 (bvadd #b00000000000000000000000000000001 call!15745))))

(declare-fun d!45419 () Bool)

(declare-fun lt!74592 () (_ BitVec 32))

(assert (=> d!45419 (and (bvsge lt!74592 #b00000000000000000000000000000000) (bvsle lt!74592 (bvsub (size!2575 (_keys!4697 (_2!1340 lt!73099))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45419 (= lt!74592 e!92881)))

(declare-fun c!26960 () Bool)

(assert (=> d!45419 (= c!26960 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!45419 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 (_2!1340 lt!73099))) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (=> d!45419 (= (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))) lt!74592)))

(declare-fun b!142557 () Bool)

(assert (=> b!142557 (= e!92881 #b00000000000000000000000000000000)))

(declare-fun b!142558 () Bool)

(assert (=> b!142558 (= e!92880 call!15745)))

(declare-fun bm!15742 () Bool)

(assert (=> bm!15742 (= call!15745 (arrayCountValidKeys!0 (_keys!4697 (_2!1340 lt!73099)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (_2!1340 lt!73099)))))))

(assert (= (and d!45419 c!26960) b!142557))

(assert (= (and d!45419 (not c!26960)) b!142555))

(assert (= (and b!142555 c!26961) b!142556))

(assert (= (and b!142555 (not c!26961)) b!142558))

(assert (= (or b!142556 b!142558) bm!15742))

(assert (=> b!142555 m!169933))

(assert (=> b!142555 m!169933))

(assert (=> b!142555 m!169935))

(declare-fun m!171603 () Bool)

(assert (=> bm!15742 m!171603))

(assert (=> bm!15661 d!45419))

(declare-fun b!142562 () Bool)

(declare-fun e!92883 () Option!180)

(assert (=> b!142562 (= e!92883 None!178)))

(declare-fun b!142560 () Bool)

(declare-fun e!92882 () Option!180)

(assert (=> b!142560 (= e!92882 e!92883)))

(declare-fun c!26963 () Bool)

(assert (=> b!142560 (= c!26963 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73231))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73231)))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(declare-fun b!142559 () Bool)

(assert (=> b!142559 (= e!92882 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73231))))))))

(declare-fun c!26962 () Bool)

(declare-fun d!45421 () Bool)

(assert (=> d!45421 (= c!26962 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73231))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73231)))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!45421 (= (getValueByKey!174 (t!6314 (toList!871 lt!73231)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!92882)))

(declare-fun b!142561 () Bool)

(assert (=> b!142561 (= e!92883 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73231))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45421 c!26962) b!142559))

(assert (= (and d!45421 (not c!26962)) b!142560))

(assert (= (and b!142560 c!26963) b!142561))

(assert (= (and b!142560 (not c!26963)) b!142562))

(declare-fun m!171605 () Bool)

(assert (=> b!142561 m!171605))

(assert (=> b!140629 d!45421))

(declare-fun lt!74593 () Bool)

(declare-fun d!45423 () Bool)

(assert (=> d!45423 (= lt!74593 (select (content!137 lt!73349) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)))))

(declare-fun e!92884 () Bool)

(assert (=> d!45423 (= lt!74593 e!92884)))

(declare-fun res!67934 () Bool)

(assert (=> d!45423 (=> (not res!67934) (not e!92884))))

(assert (=> d!45423 (= res!67934 ((_ is Cons!1736) lt!73349))))

(assert (=> d!45423 (= (contains!913 lt!73349 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)) lt!74593)))

(declare-fun b!142563 () Bool)

(declare-fun e!92885 () Bool)

(assert (=> b!142563 (= e!92884 e!92885)))

(declare-fun res!67933 () Bool)

(assert (=> b!142563 (=> res!67933 e!92885)))

(assert (=> b!142563 (= res!67933 (= (h!2343 lt!73349) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)))))

(declare-fun b!142564 () Bool)

(assert (=> b!142564 (= e!92885 (contains!913 (t!6315 lt!73349) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)))))

(assert (= (and d!45423 res!67934) b!142563))

(assert (= (and b!142563 (not res!67933)) b!142564))

(declare-fun m!171607 () Bool)

(assert (=> d!45423 m!171607))

(assert (=> d!45423 m!168629))

(declare-fun m!171609 () Bool)

(assert (=> d!45423 m!171609))

(assert (=> b!142564 m!168629))

(declare-fun m!171611 () Bool)

(assert (=> b!142564 m!171611))

(assert (=> b!141025 d!45423))

(declare-fun d!45425 () Bool)

(assert (=> d!45425 (isDefined!128 (getValueByKey!174 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(declare-fun lt!74594 () Unit!4393)

(assert (=> d!45425 (= lt!74594 (choose!871 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(declare-fun e!92886 () Bool)

(assert (=> d!45425 e!92886))

(declare-fun res!67935 () Bool)

(assert (=> d!45425 (=> (not res!67935) (not e!92886))))

(assert (=> d!45425 (= res!67935 (isStrictlySorted!320 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))))))

(assert (=> d!45425 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) lt!74594)))

(declare-fun b!142565 () Bool)

(assert (=> b!142565 (= e!92886 (containsKey!178 (toList!871 (getCurrentListMap!534 lt!73348 lt!73365 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))))))

(assert (= (and d!45425 res!67935) b!142565))

(assert (=> d!45425 m!167031))

(assert (=> d!45425 m!168795))

(assert (=> d!45425 m!168795))

(assert (=> d!45425 m!168797))

(assert (=> d!45425 m!167031))

(declare-fun m!171613 () Bool)

(assert (=> d!45425 m!171613))

(declare-fun m!171615 () Bool)

(assert (=> d!45425 m!171615))

(assert (=> b!142565 m!167031))

(assert (=> b!142565 m!168791))

(assert (=> b!141111 d!45425))

(assert (=> b!141111 d!45127))

(assert (=> b!141111 d!45129))

(declare-fun b!142569 () Bool)

(declare-fun e!92888 () Option!180)

(assert (=> b!142569 (= e!92888 None!178)))

(declare-fun b!142567 () Bool)

(declare-fun e!92887 () Option!180)

(assert (=> b!142567 (= e!92887 e!92888)))

(declare-fun c!26965 () Bool)

(assert (=> b!142567 (= c!26965 (and ((_ is Cons!1735) (t!6314 lt!73387)) (not (= (_1!1339 (h!2342 (t!6314 lt!73387))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!142566 () Bool)

(assert (=> b!142566 (= e!92887 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73387)))))))

(declare-fun c!26964 () Bool)

(declare-fun d!45427 () Bool)

(assert (=> d!45427 (= c!26964 (and ((_ is Cons!1735) (t!6314 lt!73387)) (= (_1!1339 (h!2342 (t!6314 lt!73387))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45427 (= (getValueByKey!174 (t!6314 lt!73387) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92887)))

(declare-fun b!142568 () Bool)

(assert (=> b!142568 (= e!92888 (getValueByKey!174 (t!6314 (t!6314 lt!73387)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45427 c!26964) b!142566))

(assert (= (and d!45427 (not c!26964)) b!142567))

(assert (= (and b!142567 c!26965) b!142568))

(assert (= (and b!142567 (not c!26965)) b!142569))

(declare-fun m!171617 () Bool)

(assert (=> b!142568 m!171617))

(assert (=> b!140737 d!45427))

(declare-fun d!45429 () Bool)

(declare-fun lt!74595 () Bool)

(assert (=> d!45429 (= lt!74595 (select (content!138 lt!73801) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92890 () Bool)

(assert (=> d!45429 (= lt!74595 e!92890)))

(declare-fun res!67936 () Bool)

(assert (=> d!45429 (=> (not res!67936) (not e!92890))))

(assert (=> d!45429 (= res!67936 ((_ is Cons!1735) lt!73801))))

(assert (=> d!45429 (= (contains!914 lt!73801 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74595)))

(declare-fun b!142570 () Bool)

(declare-fun e!92889 () Bool)

(assert (=> b!142570 (= e!92890 e!92889)))

(declare-fun res!67937 () Bool)

(assert (=> b!142570 (=> res!67937 e!92889)))

(assert (=> b!142570 (= res!67937 (= (h!2342 lt!73801) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142571 () Bool)

(assert (=> b!142571 (= e!92889 (contains!914 (t!6314 lt!73801) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45429 res!67936) b!142570))

(assert (= (and b!142570 (not res!67937)) b!142571))

(declare-fun m!171619 () Bool)

(assert (=> d!45429 m!171619))

(declare-fun m!171621 () Bool)

(assert (=> d!45429 m!171621))

(declare-fun m!171623 () Bool)

(assert (=> b!142571 m!171623))

(assert (=> b!140952 d!45429))

(declare-fun b!142572 () Bool)

(declare-fun lt!74597 () SeekEntryResult!282)

(assert (=> b!142572 (and (bvsge (index!3293 lt!74597) #b00000000000000000000000000000000) (bvslt (index!3293 lt!74597) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67938 () Bool)

(assert (=> b!142572 (= res!67938 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74597)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92895 () Bool)

(assert (=> b!142572 (=> res!67938 e!92895)))

(declare-fun e!92892 () Bool)

(assert (=> b!142572 (= e!92892 e!92895)))

(declare-fun b!142573 () Bool)

(declare-fun e!92891 () SeekEntryResult!282)

(assert (=> b!142573 (= e!92891 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16)) #b00000000000000000000000000000000 (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)))))

(declare-fun b!142574 () Bool)

(declare-fun e!92893 () SeekEntryResult!282)

(assert (=> b!142574 (= e!92893 (Intermediate!282 true (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!142576 () Bool)

(assert (=> b!142576 (= e!92891 (Intermediate!282 false (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!142577 () Bool)

(declare-fun e!92894 () Bool)

(assert (=> b!142577 (= e!92894 (bvsge (x!16138 lt!74597) #b01111111111111111111111111111110))))

(declare-fun b!142578 () Bool)

(assert (=> b!142578 (= e!92894 e!92892)))

(declare-fun res!67939 () Bool)

(assert (=> b!142578 (= res!67939 (and ((_ is Intermediate!282) lt!74597) (not (undefined!1094 lt!74597)) (bvslt (x!16138 lt!74597) #b01111111111111111111111111111110) (bvsge (x!16138 lt!74597) #b00000000000000000000000000000000) (bvsge (x!16138 lt!74597) #b00000000000000000000000000000000)))))

(assert (=> b!142578 (=> (not res!67939) (not e!92892))))

(declare-fun b!142579 () Bool)

(assert (=> b!142579 (= e!92893 e!92891)))

(declare-fun c!26966 () Bool)

(declare-fun lt!74596 () (_ BitVec 64))

(assert (=> b!142579 (= c!26966 (or (= lt!74596 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!74596 lt!74596) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142580 () Bool)

(assert (=> b!142580 (and (bvsge (index!3293 lt!74597) #b00000000000000000000000000000000) (bvslt (index!3293 lt!74597) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> b!142580 (= e!92895 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74597)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142575 () Bool)

(assert (=> b!142575 (and (bvsge (index!3293 lt!74597) #b00000000000000000000000000000000) (bvslt (index!3293 lt!74597) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun res!67940 () Bool)

(assert (=> b!142575 (= res!67940 (= (select (arr!2302 (_keys!4697 newMap!16)) (index!3293 lt!74597)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142575 (=> res!67940 e!92895)))

(declare-fun d!45431 () Bool)

(assert (=> d!45431 e!92894))

(declare-fun c!26967 () Bool)

(assert (=> d!45431 (= c!26967 (and ((_ is Intermediate!282) lt!74597) (undefined!1094 lt!74597)))))

(assert (=> d!45431 (= lt!74597 e!92893)))

(declare-fun c!26968 () Bool)

(assert (=> d!45431 (= c!26968 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!45431 (= lt!74596 (select (arr!2302 (_keys!4697 newMap!16)) (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16))))))

(assert (=> d!45431 (validMask!0 (mask!7278 newMap!16))))

(assert (=> d!45431 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (_keys!4697 newMap!16) (mask!7278 newMap!16)) lt!74597)))

(assert (= (and d!45431 c!26968) b!142574))

(assert (= (and d!45431 (not c!26968)) b!142579))

(assert (= (and b!142579 c!26966) b!142576))

(assert (= (and b!142579 (not c!26966)) b!142573))

(assert (= (and d!45431 c!26967) b!142577))

(assert (= (and d!45431 (not c!26967)) b!142578))

(assert (= (and b!142578 res!67939) b!142572))

(assert (= (and b!142572 (not res!67938)) b!142575))

(assert (= (and b!142575 (not res!67940)) b!142580))

(assert (=> b!142573 m!168469))

(declare-fun m!171625 () Bool)

(assert (=> b!142573 m!171625))

(assert (=> b!142573 m!171625))

(assert (=> b!142573 m!166699))

(declare-fun m!171627 () Bool)

(assert (=> b!142573 m!171627))

(declare-fun m!171629 () Bool)

(assert (=> b!142572 m!171629))

(assert (=> d!45431 m!168469))

(declare-fun m!171631 () Bool)

(assert (=> d!45431 m!171631))

(assert (=> d!45431 m!166687))

(assert (=> b!142575 m!171629))

(assert (=> b!142580 m!171629))

(assert (=> d!44077 d!45431))

(declare-fun d!45433 () Bool)

(declare-fun lt!74599 () (_ BitVec 32))

(declare-fun lt!74598 () (_ BitVec 32))

(assert (=> d!45433 (= lt!74599 (bvmul (bvxor lt!74598 (bvlshr lt!74598 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!45433 (= lt!74598 ((_ extract 31 0) (bvand (bvxor (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!45433 (and (bvsge (mask!7278 newMap!16) #b00000000000000000000000000000000) (let ((res!67365 (let ((h!2347 ((_ extract 31 0) (bvand (bvxor (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16242 (bvmul (bvxor h!2347 (bvlshr h!2347 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16242 (bvlshr x!16242 #b00000000000000000000000000001101)) (mask!7278 newMap!16)))))) (and (bvslt res!67365 (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67365 #b00000000000000000000000000000000))))))

(assert (=> d!45433 (= (toIndex!0 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) (mask!7278 newMap!16)) (bvand (bvxor lt!74599 (bvlshr lt!74599 #b00000000000000000000000000001101)) (mask!7278 newMap!16)))))

(assert (=> d!44077 d!45433))

(assert (=> d!44077 d!43719))

(declare-fun d!45435 () Bool)

(assert (=> d!45435 (= (apply!120 lt!73517 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73517) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6020 () Bool)

(assert (= bs!6020 d!45435))

(assert (=> bs!6020 m!170191))

(assert (=> bs!6020 m!170191))

(declare-fun m!171633 () Bool)

(assert (=> bs!6020 m!171633))

(assert (=> b!140476 d!45435))

(declare-fun d!45437 () Bool)

(assert (=> d!45437 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16))))

(assert (=> d!45437 true))

(declare-fun _$56!15 () Unit!4393)

(assert (=> d!45437 (= (choose!102 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (mask!7278 newMap!16)) _$56!15)))

(declare-fun bs!6021 () Bool)

(assert (= bs!6021 d!45437))

(assert (=> bs!6021 m!167045))

(assert (=> bs!6021 m!167055))

(assert (=> d!44147 d!45437))

(assert (=> d!44147 d!43719))

(declare-fun b!142584 () Bool)

(declare-fun e!92897 () Option!180)

(assert (=> b!142584 (= e!92897 None!178)))

(declare-fun b!142582 () Bool)

(declare-fun e!92896 () Option!180)

(assert (=> b!142582 (= e!92896 e!92897)))

(declare-fun c!26970 () Bool)

(assert (=> b!142582 (= c!26970 (and ((_ is Cons!1735) (toList!871 lt!73815)) (not (= (_1!1339 (h!2342 (toList!871 lt!73815))) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142581 () Bool)

(assert (=> b!142581 (= e!92896 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73815)))))))

(declare-fun c!26969 () Bool)

(declare-fun d!45439 () Bool)

(assert (=> d!45439 (= c!26969 (and ((_ is Cons!1735) (toList!871 lt!73815)) (= (_1!1339 (h!2342 (toList!871 lt!73815))) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45439 (= (getValueByKey!174 (toList!871 lt!73815) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!92896)))

(declare-fun b!142583 () Bool)

(assert (=> b!142583 (= e!92897 (getValueByKey!174 (t!6314 (toList!871 lt!73815)) (_1!1339 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!45439 c!26969) b!142581))

(assert (= (and d!45439 (not c!26969)) b!142582))

(assert (= (and b!142582 c!26970) b!142583))

(assert (= (and b!142582 (not c!26970)) b!142584))

(declare-fun m!171635 () Bool)

(assert (=> b!142583 m!171635))

(assert (=> b!140972 d!45439))

(declare-fun d!45441 () Bool)

(declare-fun e!92899 () Bool)

(assert (=> d!45441 e!92899))

(declare-fun res!67941 () Bool)

(assert (=> d!45441 (=> res!67941 e!92899)))

(declare-fun lt!74603 () Bool)

(assert (=> d!45441 (= res!67941 (not lt!74603))))

(declare-fun lt!74602 () Bool)

(assert (=> d!45441 (= lt!74603 lt!74602)))

(declare-fun lt!74601 () Unit!4393)

(declare-fun e!92898 () Unit!4393)

(assert (=> d!45441 (= lt!74601 e!92898)))

(declare-fun c!26971 () Bool)

(assert (=> d!45441 (= c!26971 lt!74602)))

(assert (=> d!45441 (= lt!74602 (containsKey!178 (toList!871 lt!73548) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45441 (= (contains!910 lt!73548 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74603)))

(declare-fun b!142585 () Bool)

(declare-fun lt!74600 () Unit!4393)

(assert (=> b!142585 (= e!92898 lt!74600)))

(assert (=> b!142585 (= lt!74600 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73548) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142585 (isDefined!128 (getValueByKey!174 (toList!871 lt!73548) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142586 () Bool)

(declare-fun Unit!4512 () Unit!4393)

(assert (=> b!142586 (= e!92898 Unit!4512)))

(declare-fun b!142587 () Bool)

(assert (=> b!142587 (= e!92899 (isDefined!128 (getValueByKey!174 (toList!871 lt!73548) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45441 c!26971) b!142585))

(assert (= (and d!45441 (not c!26971)) b!142586))

(assert (= (and d!45441 (not res!67941)) b!142587))

(declare-fun m!171637 () Bool)

(assert (=> d!45441 m!171637))

(declare-fun m!171639 () Bool)

(assert (=> b!142585 m!171639))

(declare-fun m!171641 () Bool)

(assert (=> b!142585 m!171641))

(assert (=> b!142585 m!171641))

(declare-fun m!171643 () Bool)

(assert (=> b!142585 m!171643))

(assert (=> b!142587 m!171641))

(assert (=> b!142587 m!171641))

(assert (=> b!142587 m!171643))

(assert (=> b!140513 d!45441))

(declare-fun d!45443 () Bool)

(assert (=> d!45443 (isDefined!128 (getValueByKey!174 (toList!871 lt!73015) lt!73021))))

(declare-fun lt!74604 () Unit!4393)

(assert (=> d!45443 (= lt!74604 (choose!871 (toList!871 lt!73015) lt!73021))))

(declare-fun e!92900 () Bool)

(assert (=> d!45443 e!92900))

(declare-fun res!67942 () Bool)

(assert (=> d!45443 (=> (not res!67942) (not e!92900))))

(assert (=> d!45443 (= res!67942 (isStrictlySorted!320 (toList!871 lt!73015)))))

(assert (=> d!45443 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73015) lt!73021) lt!74604)))

(declare-fun b!142588 () Bool)

(assert (=> b!142588 (= e!92900 (containsKey!178 (toList!871 lt!73015) lt!73021))))

(assert (= (and d!45443 res!67942) b!142588))

(assert (=> d!45443 m!167879))

(assert (=> d!45443 m!167879))

(assert (=> d!45443 m!167881))

(declare-fun m!171645 () Bool)

(assert (=> d!45443 m!171645))

(assert (=> d!45443 m!168841))

(assert (=> b!142588 m!167875))

(assert (=> b!140635 d!45443))

(assert (=> b!140635 d!45255))

(assert (=> b!140635 d!45257))

(declare-fun d!45445 () Bool)

(assert (=> d!45445 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74605 () Unit!4393)

(assert (=> d!45445 (= lt!74605 (choose!871 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92901 () Bool)

(assert (=> d!45445 e!92901))

(declare-fun res!67943 () Bool)

(assert (=> d!45445 (=> (not res!67943) (not e!92901))))

(assert (=> d!45445 (= res!67943 (isStrictlySorted!320 (toList!871 lt!73266)))))

(assert (=> d!45445 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74605)))

(declare-fun b!142589 () Bool)

(assert (=> b!142589 (= e!92901 (containsKey!178 (toList!871 lt!73266) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45445 res!67943) b!142589))

(assert (=> d!45445 m!167255))

(assert (=> d!45445 m!167255))

(assert (=> d!45445 m!167257))

(declare-fun m!171647 () Bool)

(assert (=> d!45445 m!171647))

(assert (=> d!45445 m!169137))

(assert (=> b!142589 m!167251))

(assert (=> b!140358 d!45445))

(assert (=> b!140358 d!45235))

(assert (=> b!140358 d!45237))

(assert (=> b!140727 d!44217))

(assert (=> d!44143 d!43719))

(declare-fun d!45447 () Bool)

(declare-fun e!92903 () Bool)

(assert (=> d!45447 e!92903))

(declare-fun res!67944 () Bool)

(assert (=> d!45447 (=> res!67944 e!92903)))

(declare-fun lt!74609 () Bool)

(assert (=> d!45447 (= res!67944 (not lt!74609))))

(declare-fun lt!74608 () Bool)

(assert (=> d!45447 (= lt!74609 lt!74608)))

(declare-fun lt!74607 () Unit!4393)

(declare-fun e!92902 () Unit!4393)

(assert (=> d!45447 (= lt!74607 e!92902)))

(declare-fun c!26972 () Bool)

(assert (=> d!45447 (= c!26972 lt!74608)))

(assert (=> d!45447 (= lt!74608 (containsKey!178 (toList!871 lt!73478) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45447 (= (contains!910 lt!73478 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!74609)))

(declare-fun b!142590 () Bool)

(declare-fun lt!74606 () Unit!4393)

(assert (=> b!142590 (= e!92902 lt!74606)))

(assert (=> b!142590 (= lt!74606 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73478) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (=> b!142590 (isDefined!128 (getValueByKey!174 (toList!871 lt!73478) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142591 () Bool)

(declare-fun Unit!4513 () Unit!4393)

(assert (=> b!142591 (= e!92902 Unit!4513)))

(declare-fun b!142592 () Bool)

(assert (=> b!142592 (= e!92903 (isDefined!128 (getValueByKey!174 (toList!871 lt!73478) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45447 c!26972) b!142590))

(assert (= (and d!45447 (not c!26972)) b!142591))

(assert (= (and d!45447 (not res!67944)) b!142592))

(declare-fun m!171649 () Bool)

(assert (=> d!45447 m!171649))

(declare-fun m!171651 () Bool)

(assert (=> b!142590 m!171651))

(assert (=> b!142590 m!167403))

(assert (=> b!142590 m!167403))

(declare-fun m!171653 () Bool)

(assert (=> b!142590 m!171653))

(assert (=> b!142592 m!167403))

(assert (=> b!142592 m!167403))

(assert (=> b!142592 m!171653))

(assert (=> d!43747 d!45447))

(declare-fun b!142596 () Bool)

(declare-fun e!92905 () Option!180)

(assert (=> b!142596 (= e!92905 None!178)))

(declare-fun b!142594 () Bool)

(declare-fun e!92904 () Option!180)

(assert (=> b!142594 (= e!92904 e!92905)))

(declare-fun c!26974 () Bool)

(assert (=> b!142594 (= c!26974 (and ((_ is Cons!1735) lt!73479) (not (= (_1!1339 (h!2342 lt!73479)) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142593 () Bool)

(assert (=> b!142593 (= e!92904 (Some!179 (_2!1339 (h!2342 lt!73479))))))

(declare-fun d!45449 () Bool)

(declare-fun c!26973 () Bool)

(assert (=> d!45449 (= c!26973 (and ((_ is Cons!1735) lt!73479) (= (_1!1339 (h!2342 lt!73479)) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45449 (= (getValueByKey!174 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) e!92904)))

(declare-fun b!142595 () Bool)

(assert (=> b!142595 (= e!92905 (getValueByKey!174 (t!6314 lt!73479) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!45449 c!26973) b!142593))

(assert (= (and d!45449 (not c!26973)) b!142594))

(assert (= (and b!142594 c!26974) b!142595))

(assert (= (and b!142594 (not c!26974)) b!142596))

(declare-fun m!171655 () Bool)

(assert (=> b!142595 m!171655))

(assert (=> d!43747 d!45449))

(declare-fun d!45451 () Bool)

(assert (=> d!45451 (= (getValueByKey!174 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74610 () Unit!4393)

(assert (=> d!45451 (= lt!74610 (choose!872 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92906 () Bool)

(assert (=> d!45451 e!92906))

(declare-fun res!67945 () Bool)

(assert (=> d!45451 (=> (not res!67945) (not e!92906))))

(assert (=> d!45451 (= res!67945 (isStrictlySorted!320 lt!73479))))

(assert (=> d!45451 (= (lemmaContainsTupThenGetReturnValue!91 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!74610)))

(declare-fun b!142597 () Bool)

(declare-fun res!67946 () Bool)

(assert (=> b!142597 (=> (not res!67946) (not e!92906))))

(assert (=> b!142597 (= res!67946 (containsKey!178 lt!73479 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142598 () Bool)

(assert (=> b!142598 (= e!92906 (contains!914 lt!73479 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45451 res!67945) b!142597))

(assert (= (and b!142597 res!67946) b!142598))

(assert (=> d!45451 m!167397))

(declare-fun m!171657 () Bool)

(assert (=> d!45451 m!171657))

(declare-fun m!171659 () Bool)

(assert (=> d!45451 m!171659))

(declare-fun m!171661 () Bool)

(assert (=> b!142597 m!171661))

(declare-fun m!171663 () Bool)

(assert (=> b!142598 m!171663))

(assert (=> d!43747 d!45451))

(declare-fun b!142599 () Bool)

(declare-fun e!92909 () List!1739)

(declare-fun call!15748 () List!1739)

(assert (=> b!142599 (= e!92909 call!15748)))

(declare-fun b!142600 () Bool)

(declare-fun e!92907 () List!1739)

(declare-fun call!15747 () List!1739)

(assert (=> b!142600 (= e!92907 call!15747)))

(declare-fun b!142601 () Bool)

(declare-fun lt!74611 () List!1739)

(declare-fun e!92910 () Bool)

(assert (=> b!142601 (= e!92910 (contains!914 lt!74611 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92908 () List!1739)

(declare-fun bm!15743 () Bool)

(declare-fun c!26978 () Bool)

(assert (=> bm!15743 (= call!15748 ($colon$colon!93 e!92908 (ite c!26978 (h!2342 (toList!871 lt!73170)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!26975 () Bool)

(assert (=> bm!15743 (= c!26975 c!26978)))

(declare-fun bm!15744 () Bool)

(declare-fun call!15746 () List!1739)

(assert (=> bm!15744 (= call!15747 call!15746)))

(declare-fun b!142602 () Bool)

(declare-fun res!67947 () Bool)

(assert (=> b!142602 (=> (not res!67947) (not e!92910))))

(assert (=> b!142602 (= res!67947 (containsKey!178 lt!74611 (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun d!45453 () Bool)

(assert (=> d!45453 e!92910))

(declare-fun res!67948 () Bool)

(assert (=> d!45453 (=> (not res!67948) (not e!92910))))

(assert (=> d!45453 (= res!67948 (isStrictlySorted!320 lt!74611))))

(assert (=> d!45453 (= lt!74611 e!92909)))

(assert (=> d!45453 (= c!26978 (and ((_ is Cons!1735) (toList!871 lt!73170)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73170))) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45453 (isStrictlySorted!320 (toList!871 lt!73170))))

(assert (=> d!45453 (= (insertStrictlySorted!94 (toList!871 lt!73170) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))) lt!74611)))

(declare-fun b!142603 () Bool)

(declare-fun c!26977 () Bool)

(declare-fun c!26976 () Bool)

(assert (=> b!142603 (= e!92908 (ite c!26977 (t!6314 (toList!871 lt!73170)) (ite c!26976 (Cons!1735 (h!2342 (toList!871 lt!73170)) (t!6314 (toList!871 lt!73170))) Nil!1736)))))

(declare-fun b!142604 () Bool)

(assert (=> b!142604 (= c!26976 (and ((_ is Cons!1735) (toList!871 lt!73170)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73170))) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92911 () List!1739)

(assert (=> b!142604 (= e!92911 e!92907)))

(declare-fun b!142605 () Bool)

(assert (=> b!142605 (= e!92907 call!15747)))

(declare-fun b!142606 () Bool)

(assert (=> b!142606 (= e!92908 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73170)) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16)))))))

(declare-fun bm!15745 () Bool)

(assert (=> bm!15745 (= call!15746 call!15748)))

(declare-fun b!142607 () Bool)

(assert (=> b!142607 (= e!92909 e!92911)))

(assert (=> b!142607 (= c!26977 (and ((_ is Cons!1735) (toList!871 lt!73170)) (= (_1!1339 (h!2342 (toList!871 lt!73170))) (_1!1339 (tuple2!2657 lt!73179 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142608 () Bool)

(assert (=> b!142608 (= e!92911 call!15746)))

(assert (= (and d!45453 c!26978) b!142599))

(assert (= (and d!45453 (not c!26978)) b!142607))

(assert (= (and b!142607 c!26977) b!142608))

(assert (= (and b!142607 (not c!26977)) b!142604))

(assert (= (and b!142604 c!26976) b!142600))

(assert (= (and b!142604 (not c!26976)) b!142605))

(assert (= (or b!142600 b!142605) bm!15744))

(assert (= (or b!142608 bm!15744) bm!15745))

(assert (= (or b!142599 bm!15745) bm!15743))

(assert (= (and bm!15743 c!26975) b!142606))

(assert (= (and bm!15743 (not c!26975)) b!142603))

(assert (= (and d!45453 res!67948) b!142602))

(assert (= (and b!142602 res!67947) b!142601))

(declare-fun m!171665 () Bool)

(assert (=> b!142602 m!171665))

(declare-fun m!171667 () Bool)

(assert (=> b!142606 m!171667))

(declare-fun m!171669 () Bool)

(assert (=> bm!15743 m!171669))

(declare-fun m!171671 () Bool)

(assert (=> b!142601 m!171671))

(declare-fun m!171673 () Bool)

(assert (=> d!45453 m!171673))

(declare-fun m!171675 () Bool)

(assert (=> d!45453 m!171675))

(assert (=> d!43747 d!45453))

(declare-fun d!45455 () Bool)

(declare-fun e!92913 () Bool)

(assert (=> d!45455 e!92913))

(declare-fun res!67949 () Bool)

(assert (=> d!45455 (=> res!67949 e!92913)))

(declare-fun lt!74615 () Bool)

(assert (=> d!45455 (= res!67949 (not lt!74615))))

(declare-fun lt!74614 () Bool)

(assert (=> d!45455 (= lt!74615 lt!74614)))

(declare-fun lt!74613 () Unit!4393)

(declare-fun e!92912 () Unit!4393)

(assert (=> d!45455 (= lt!74613 e!92912)))

(declare-fun c!26979 () Bool)

(assert (=> d!45455 (= c!26979 lt!74614)))

(assert (=> d!45455 (= lt!74614 (containsKey!178 (toList!871 lt!73501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45455 (= (contains!910 lt!73501 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74615)))

(declare-fun b!142609 () Bool)

(declare-fun lt!74612 () Unit!4393)

(assert (=> b!142609 (= e!92912 lt!74612)))

(assert (=> b!142609 (= lt!74612 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142609 (isDefined!128 (getValueByKey!174 (toList!871 lt!73501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142610 () Bool)

(declare-fun Unit!4514 () Unit!4393)

(assert (=> b!142610 (= e!92912 Unit!4514)))

(declare-fun b!142611 () Bool)

(assert (=> b!142611 (= e!92913 (isDefined!128 (getValueByKey!174 (toList!871 lt!73501) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45455 c!26979) b!142609))

(assert (= (and d!45455 (not c!26979)) b!142610))

(assert (= (and d!45455 (not res!67949)) b!142611))

(declare-fun m!171677 () Bool)

(assert (=> d!45455 m!171677))

(declare-fun m!171679 () Bool)

(assert (=> b!142609 m!171679))

(declare-fun m!171681 () Bool)

(assert (=> b!142609 m!171681))

(assert (=> b!142609 m!171681))

(declare-fun m!171683 () Bool)

(assert (=> b!142609 m!171683))

(assert (=> b!142611 m!171681))

(assert (=> b!142611 m!171681))

(assert (=> b!142611 m!171683))

(assert (=> d!43765 d!45455))

(assert (=> d!43765 d!43719))

(declare-fun d!45457 () Bool)

(declare-fun lt!74616 () Bool)

(assert (=> d!45457 (= lt!74616 (select (content!137 (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!92914 () Bool)

(assert (=> d!45457 (= lt!74616 e!92914)))

(declare-fun res!67951 () Bool)

(assert (=> d!45457 (=> (not res!67951) (not e!92914))))

(assert (=> d!45457 (= res!67951 ((_ is Cons!1736) (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)))))

(assert (=> d!45457 (= (contains!913 (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!74616)))

(declare-fun b!142612 () Bool)

(declare-fun e!92915 () Bool)

(assert (=> b!142612 (= e!92914 e!92915)))

(declare-fun res!67950 () Bool)

(assert (=> b!142612 (=> res!67950 e!92915)))

(assert (=> b!142612 (= res!67950 (= (h!2343 (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142613 () Bool)

(assert (=> b!142613 (= e!92915 (contains!913 (t!6315 (ite c!26246 (Cons!1736 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000) Nil!1737) Nil!1737)) (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!45457 res!67951) b!142612))

(assert (= (and b!142612 (not res!67950)) b!142613))

(declare-fun m!171685 () Bool)

(assert (=> d!45457 m!171685))

(assert (=> d!45457 m!167925))

(declare-fun m!171687 () Bool)

(assert (=> d!45457 m!171687))

(assert (=> b!142613 m!167925))

(declare-fun m!171689 () Bool)

(assert (=> b!142613 m!171689))

(assert (=> b!140664 d!45457))

(assert (=> d!43985 d!43685))

(assert (=> d!43985 d!43659))

(assert (=> d!43985 d!43673))

(declare-fun d!45459 () Bool)

(declare-fun e!92917 () Bool)

(assert (=> d!45459 e!92917))

(declare-fun res!67952 () Bool)

(assert (=> d!45459 (=> res!67952 e!92917)))

(declare-fun lt!74620 () Bool)

(assert (=> d!45459 (= res!67952 (not lt!74620))))

(declare-fun lt!74619 () Bool)

(assert (=> d!45459 (= lt!74620 lt!74619)))

(declare-fun lt!74618 () Unit!4393)

(declare-fun e!92916 () Unit!4393)

(assert (=> d!45459 (= lt!74618 e!92916)))

(declare-fun c!26980 () Bool)

(assert (=> d!45459 (= c!26980 lt!74619)))

(assert (=> d!45459 (= lt!74619 (containsKey!178 (toList!871 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45459 (= (contains!910 lt!73441 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74620)))

(declare-fun b!142614 () Bool)

(declare-fun lt!74617 () Unit!4393)

(assert (=> b!142614 (= e!92916 lt!74617)))

(assert (=> b!142614 (= lt!74617 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142614 (isDefined!128 (getValueByKey!174 (toList!871 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142615 () Bool)

(declare-fun Unit!4515 () Unit!4393)

(assert (=> b!142615 (= e!92916 Unit!4515)))

(declare-fun b!142616 () Bool)

(assert (=> b!142616 (= e!92917 (isDefined!128 (getValueByKey!174 (toList!871 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45459 c!26980) b!142614))

(assert (= (and d!45459 (not c!26980)) b!142615))

(assert (= (and d!45459 (not res!67952)) b!142616))

(declare-fun m!171691 () Bool)

(assert (=> d!45459 m!171691))

(declare-fun m!171693 () Bool)

(assert (=> b!142614 m!171693))

(assert (=> b!142614 m!170669))

(assert (=> b!142614 m!170669))

(declare-fun m!171695 () Bool)

(assert (=> b!142614 m!171695))

(assert (=> b!142616 m!170669))

(assert (=> b!142616 m!170669))

(assert (=> b!142616 m!171695))

(assert (=> bm!15560 d!45459))

(declare-fun d!45461 () Bool)

(assert (=> d!45461 (= (size!2581 (_2!1340 lt!73099)) (bvadd (_size!624 (_2!1340 lt!73099)) (bvsdiv (bvadd (extraKeys!2694 (_2!1340 lt!73099)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140877 d!45461))

(declare-fun d!45463 () Bool)

(assert (=> d!45463 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6022 () Bool)

(assert (= bs!6022 d!45463))

(assert (=> bs!6022 m!168225))

(declare-fun m!171697 () Bool)

(assert (=> bs!6022 m!171697))

(assert (=> b!140837 d!45463))

(assert (=> b!140837 d!44739))

(declare-fun d!45465 () Bool)

(declare-fun res!67953 () Bool)

(declare-fun e!92918 () Bool)

(assert (=> d!45465 (=> res!67953 e!92918)))

(assert (=> d!45465 (= res!67953 (and ((_ is Cons!1735) lt!73411) (= (_1!1339 (h!2342 lt!73411)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45465 (= (containsKey!178 lt!73411 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92918)))

(declare-fun b!142617 () Bool)

(declare-fun e!92919 () Bool)

(assert (=> b!142617 (= e!92918 e!92919)))

(declare-fun res!67954 () Bool)

(assert (=> b!142617 (=> (not res!67954) (not e!92919))))

(assert (=> b!142617 (= res!67954 (and (or (not ((_ is Cons!1735) lt!73411)) (bvsle (_1!1339 (h!2342 lt!73411)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73411) (bvslt (_1!1339 (h!2342 lt!73411)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142618 () Bool)

(assert (=> b!142618 (= e!92919 (containsKey!178 (t!6314 lt!73411) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45465 (not res!67953)) b!142617))

(assert (= (and b!142617 res!67954) b!142618))

(declare-fun m!171699 () Bool)

(assert (=> b!142618 m!171699))

(assert (=> b!141128 d!45465))

(assert (=> b!140401 d!43699))

(declare-fun d!45467 () Bool)

(declare-fun res!67955 () Bool)

(declare-fun e!92920 () Bool)

(assert (=> d!45467 (=> res!67955 e!92920)))

(assert (=> d!45467 (= res!67955 (and ((_ is Cons!1735) (toList!871 lt!73231)) (= (_1!1339 (h!2342 (toList!871 lt!73231))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!45467 (= (containsKey!178 (toList!871 lt!73231) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!92920)))

(declare-fun b!142619 () Bool)

(declare-fun e!92921 () Bool)

(assert (=> b!142619 (= e!92920 e!92921)))

(declare-fun res!67956 () Bool)

(assert (=> b!142619 (=> (not res!67956) (not e!92921))))

(assert (=> b!142619 (= res!67956 (and (or (not ((_ is Cons!1735) (toList!871 lt!73231))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73231))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) ((_ is Cons!1735) (toList!871 lt!73231)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73231))) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142620 () Bool)

(assert (=> b!142620 (= e!92921 (containsKey!178 (t!6314 (toList!871 lt!73231)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45467 (not res!67955)) b!142619))

(assert (= (and b!142619 res!67956) b!142620))

(declare-fun m!171701 () Bool)

(assert (=> b!142620 m!171701))

(assert (=> d!43967 d!45467))

(assert (=> b!140711 d!43879))

(declare-fun d!45469 () Bool)

(assert (=> d!45469 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun bs!6023 () Bool)

(assert (= bs!6023 d!45469))

(assert (=> bs!6023 m!167131))

(declare-fun m!171703 () Bool)

(assert (=> bs!6023 m!171703))

(assert (=> b!140943 d!45469))

(assert (=> b!140943 d!44129))

(declare-fun d!45471 () Bool)

(declare-fun e!92923 () Bool)

(assert (=> d!45471 e!92923))

(declare-fun res!67957 () Bool)

(assert (=> d!45471 (=> res!67957 e!92923)))

(declare-fun lt!74624 () Bool)

(assert (=> d!45471 (= res!67957 (not lt!74624))))

(declare-fun lt!74623 () Bool)

(assert (=> d!45471 (= lt!74624 lt!74623)))

(declare-fun lt!74622 () Unit!4393)

(declare-fun e!92922 () Unit!4393)

(assert (=> d!45471 (= lt!74622 e!92922)))

(declare-fun c!26981 () Bool)

(assert (=> d!45471 (= c!26981 lt!74623)))

(assert (=> d!45471 (= lt!74623 (containsKey!178 (toList!871 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45471 (= (contains!910 lt!73601 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74624)))

(declare-fun b!142621 () Bool)

(declare-fun lt!74621 () Unit!4393)

(assert (=> b!142621 (= e!92922 lt!74621)))

(assert (=> b!142621 (= lt!74621 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142621 (isDefined!128 (getValueByKey!174 (toList!871 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142622 () Bool)

(declare-fun Unit!4516 () Unit!4393)

(assert (=> b!142622 (= e!92922 Unit!4516)))

(declare-fun b!142623 () Bool)

(assert (=> b!142623 (= e!92923 (isDefined!128 (getValueByKey!174 (toList!871 lt!73601) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45471 c!26981) b!142621))

(assert (= (and d!45471 (not c!26981)) b!142622))

(assert (= (and d!45471 (not res!67957)) b!142623))

(declare-fun m!171705 () Bool)

(assert (=> d!45471 m!171705))

(declare-fun m!171707 () Bool)

(assert (=> b!142621 m!171707))

(declare-fun m!171709 () Bool)

(assert (=> b!142621 m!171709))

(assert (=> b!142621 m!171709))

(declare-fun m!171711 () Bool)

(assert (=> b!142621 m!171711))

(assert (=> b!142623 m!171709))

(assert (=> b!142623 m!171709))

(assert (=> b!142623 m!171711))

(assert (=> b!140602 d!45471))

(declare-fun b!142627 () Bool)

(declare-fun e!92925 () Option!180)

(assert (=> b!142627 (= e!92925 None!178)))

(declare-fun b!142625 () Bool)

(declare-fun e!92924 () Option!180)

(assert (=> b!142625 (= e!92924 e!92925)))

(declare-fun c!26983 () Bool)

(assert (=> b!142625 (= c!26983 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!142624 () Bool)

(assert (=> b!142624 (= e!92924 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73003))))))))

(declare-fun c!26982 () Bool)

(declare-fun d!45473 () Bool)

(assert (=> d!45473 (= c!26982 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45473 (= (getValueByKey!174 (t!6314 (toList!871 lt!73003)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92924)))

(declare-fun b!142626 () Bool)

(assert (=> b!142626 (= e!92925 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73003))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45473 c!26982) b!142624))

(assert (= (and d!45473 (not c!26982)) b!142625))

(assert (= (and b!142625 c!26983) b!142626))

(assert (= (and b!142625 (not c!26983)) b!142627))

(assert (=> b!142626 m!166533))

(declare-fun m!171713 () Bool)

(assert (=> b!142626 m!171713))

(assert (=> b!140364 d!45473))

(declare-fun d!45475 () Bool)

(declare-fun lt!74625 () Bool)

(assert (=> d!45475 (= lt!74625 (select (content!138 lt!73411) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!92927 () Bool)

(assert (=> d!45475 (= lt!74625 e!92927)))

(declare-fun res!67958 () Bool)

(assert (=> d!45475 (=> (not res!67958) (not e!92927))))

(assert (=> d!45475 (= res!67958 ((_ is Cons!1735) lt!73411))))

(assert (=> d!45475 (= (contains!914 lt!73411 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!74625)))

(declare-fun b!142628 () Bool)

(declare-fun e!92926 () Bool)

(assert (=> b!142628 (= e!92927 e!92926)))

(declare-fun res!67959 () Bool)

(assert (=> b!142628 (=> res!67959 e!92926)))

(assert (=> b!142628 (= res!67959 (= (h!2342 lt!73411) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142629 () Bool)

(assert (=> b!142629 (= e!92926 (contains!914 (t!6314 lt!73411) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45475 res!67958) b!142628))

(assert (= (and b!142628 (not res!67959)) b!142629))

(declare-fun m!171715 () Bool)

(assert (=> d!45475 m!171715))

(declare-fun m!171717 () Bool)

(assert (=> d!45475 m!171717))

(declare-fun m!171719 () Bool)

(assert (=> b!142629 m!171719))

(assert (=> b!141129 d!45475))

(declare-fun d!45477 () Bool)

(declare-fun res!67960 () Bool)

(declare-fun e!92928 () Bool)

(assert (=> d!45477 (=> res!67960 e!92928)))

(assert (=> d!45477 (= res!67960 (and ((_ is Cons!1735) (toList!871 lt!73197)) (= (_1!1339 (h!2342 (toList!871 lt!73197))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45477 (= (containsKey!178 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) e!92928)))

(declare-fun b!142630 () Bool)

(declare-fun e!92929 () Bool)

(assert (=> b!142630 (= e!92928 e!92929)))

(declare-fun res!67961 () Bool)

(assert (=> b!142630 (=> (not res!67961) (not e!92929))))

(assert (=> b!142630 (= res!67961 (and (or (not ((_ is Cons!1735) (toList!871 lt!73197))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73197))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1735) (toList!871 lt!73197)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73197))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142631 () Bool)

(assert (=> b!142631 (= e!92929 (containsKey!178 (t!6314 (toList!871 lt!73197)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45477 (not res!67960)) b!142630))

(assert (= (and b!142630 res!67961) b!142631))

(assert (=> b!142631 m!166699))

(declare-fun m!171721 () Bool)

(assert (=> b!142631 m!171721))

(assert (=> d!43785 d!45477))

(declare-fun d!45479 () Bool)

(declare-fun lt!74626 () Bool)

(assert (=> d!45479 (= lt!74626 (select (content!138 (toList!871 lt!73688)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun e!92931 () Bool)

(assert (=> d!45479 (= lt!74626 e!92931)))

(declare-fun res!67962 () Bool)

(assert (=> d!45479 (=> (not res!67962) (not e!92931))))

(assert (=> d!45479 (= res!67962 ((_ is Cons!1735) (toList!871 lt!73688)))))

(assert (=> d!45479 (= (contains!914 (toList!871 lt!73688) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74626)))

(declare-fun b!142632 () Bool)

(declare-fun e!92930 () Bool)

(assert (=> b!142632 (= e!92931 e!92930)))

(declare-fun res!67963 () Bool)

(assert (=> b!142632 (=> res!67963 e!92930)))

(assert (=> b!142632 (= res!67963 (= (h!2342 (toList!871 lt!73688)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!142633 () Bool)

(assert (=> b!142633 (= e!92930 (contains!914 (t!6314 (toList!871 lt!73688)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45479 res!67962) b!142632))

(assert (= (and b!142632 (not res!67963)) b!142633))

(declare-fun m!171723 () Bool)

(assert (=> d!45479 m!171723))

(declare-fun m!171725 () Bool)

(assert (=> d!45479 m!171725))

(declare-fun m!171727 () Bool)

(assert (=> b!142633 m!171727))

(assert (=> b!140807 d!45479))

(assert (=> b!141098 d!43579))

(declare-fun d!45481 () Bool)

(assert (=> d!45481 (isDefined!128 (getValueByKey!174 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!74627 () Unit!4393)

(assert (=> d!45481 (= lt!74627 (choose!871 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!92932 () Bool)

(assert (=> d!45481 e!92932))

(declare-fun res!67964 () Bool)

(assert (=> d!45481 (=> (not res!67964) (not e!92932))))

(assert (=> d!45481 (= res!67964 (isStrictlySorted!320 (toList!871 lt!73266)))))

(assert (=> d!45481 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!74627)))

(declare-fun b!142634 () Bool)

(assert (=> b!142634 (= e!92932 (containsKey!178 (toList!871 lt!73266) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45481 res!67964) b!142634))

(assert (=> d!45481 m!166533))

(assert (=> d!45481 m!167871))

(assert (=> d!45481 m!167871))

(assert (=> d!45481 m!167873))

(assert (=> d!45481 m!166533))

(declare-fun m!171729 () Bool)

(assert (=> d!45481 m!171729))

(assert (=> d!45481 m!169137))

(assert (=> b!142634 m!166533))

(assert (=> b!142634 m!167867))

(assert (=> b!140631 d!45481))

(assert (=> b!140631 d!45291))

(assert (=> b!140631 d!45027))

(declare-fun d!45483 () Bool)

(declare-fun res!67965 () Bool)

(declare-fun e!92933 () Bool)

(assert (=> d!45483 (=> res!67965 e!92933)))

(assert (=> d!45483 (= res!67965 (and ((_ is Cons!1735) lt!73681) (= (_1!1339 (h!2342 lt!73681)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (=> d!45483 (= (containsKey!178 lt!73681 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!92933)))

(declare-fun b!142635 () Bool)

(declare-fun e!92934 () Bool)

(assert (=> b!142635 (= e!92933 e!92934)))

(declare-fun res!67966 () Bool)

(assert (=> b!142635 (=> (not res!67966) (not e!92934))))

(assert (=> b!142635 (= res!67966 (and (or (not ((_ is Cons!1735) lt!73681)) (bvsle (_1!1339 (h!2342 lt!73681)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) ((_ is Cons!1735) lt!73681) (bvslt (_1!1339 (h!2342 lt!73681)) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142636 () Bool)

(assert (=> b!142636 (= e!92934 (containsKey!178 (t!6314 lt!73681) (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (= (and d!45483 (not res!67965)) b!142635))

(assert (= (and b!142635 res!67966) b!142636))

(declare-fun m!171731 () Bool)

(assert (=> b!142636 m!171731))

(assert (=> b!140769 d!45483))

(declare-fun d!45485 () Bool)

(declare-fun res!67967 () Bool)

(declare-fun e!92935 () Bool)

(assert (=> d!45485 (=> res!67967 e!92935)))

(assert (=> d!45485 (= res!67967 (or ((_ is Nil!1736) (t!6314 (toList!871 lt!72917))) ((_ is Nil!1736) (t!6314 (t!6314 (toList!871 lt!72917))))))))

(assert (=> d!45485 (= (isStrictlySorted!320 (t!6314 (toList!871 lt!72917))) e!92935)))

(declare-fun b!142637 () Bool)

(declare-fun e!92936 () Bool)

(assert (=> b!142637 (= e!92935 e!92936)))

(declare-fun res!67968 () Bool)

(assert (=> b!142637 (=> (not res!67968) (not e!92936))))

(assert (=> b!142637 (= res!67968 (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!72917)))) (_1!1339 (h!2342 (t!6314 (t!6314 (toList!871 lt!72917)))))))))

(declare-fun b!142638 () Bool)

(assert (=> b!142638 (= e!92936 (isStrictlySorted!320 (t!6314 (t!6314 (toList!871 lt!72917)))))))

(assert (= (and d!45485 (not res!67967)) b!142637))

(assert (= (and b!142637 res!67968) b!142638))

(declare-fun m!171733 () Bool)

(assert (=> b!142638 m!171733))

(assert (=> b!140416 d!45485))

(assert (=> b!140719 d!43797))

(declare-fun d!45487 () Bool)

(assert (=> d!45487 (= (isEmpty!421 lt!73501) (isEmpty!423 (toList!871 lt!73501)))))

(declare-fun bs!6024 () Bool)

(assert (= bs!6024 d!45487))

(declare-fun m!171735 () Bool)

(assert (=> bs!6024 m!171735))

(assert (=> b!140449 d!45487))

(declare-fun d!45489 () Bool)

(assert (=> d!45489 (= (get!1528 (getValueByKey!174 (toList!871 lt!73195) lt!73214)) (v!3279 (getValueByKey!174 (toList!871 lt!73195) lt!73214)))))

(assert (=> d!43859 d!45489))

(declare-fun b!142642 () Bool)

(declare-fun e!92938 () Option!180)

(assert (=> b!142642 (= e!92938 None!178)))

(declare-fun b!142640 () Bool)

(declare-fun e!92937 () Option!180)

(assert (=> b!142640 (= e!92937 e!92938)))

(declare-fun c!26985 () Bool)

(assert (=> b!142640 (= c!26985 (and ((_ is Cons!1735) (toList!871 lt!73195)) (not (= (_1!1339 (h!2342 (toList!871 lt!73195))) lt!73214))))))

(declare-fun b!142639 () Bool)

(assert (=> b!142639 (= e!92937 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73195)))))))

(declare-fun d!45491 () Bool)

(declare-fun c!26984 () Bool)

(assert (=> d!45491 (= c!26984 (and ((_ is Cons!1735) (toList!871 lt!73195)) (= (_1!1339 (h!2342 (toList!871 lt!73195))) lt!73214)))))

(assert (=> d!45491 (= (getValueByKey!174 (toList!871 lt!73195) lt!73214) e!92937)))

(declare-fun b!142641 () Bool)

(assert (=> b!142641 (= e!92938 (getValueByKey!174 (t!6314 (toList!871 lt!73195)) lt!73214))))

(assert (= (and d!45491 c!26984) b!142639))

(assert (= (and d!45491 (not c!26984)) b!142640))

(assert (= (and b!142640 c!26985) b!142641))

(assert (= (and b!142640 (not c!26985)) b!142642))

(declare-fun m!171737 () Bool)

(assert (=> b!142641 m!171737))

(assert (=> d!43859 d!45491))

(declare-fun d!45493 () Bool)

(declare-fun e!92939 () Bool)

(assert (=> d!45493 e!92939))

(declare-fun res!67970 () Bool)

(assert (=> d!45493 (=> (not res!67970) (not e!92939))))

(declare-fun lt!74630 () ListLongMap!1711)

(assert (=> d!45493 (= res!67970 (contains!910 lt!74630 (_1!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))))

(declare-fun lt!74631 () List!1739)

(assert (=> d!45493 (= lt!74630 (ListLongMap!1712 lt!74631))))

(declare-fun lt!74628 () Unit!4393)

(declare-fun lt!74629 () Unit!4393)

(assert (=> d!45493 (= lt!74628 lt!74629)))

(assert (=> d!45493 (= (getValueByKey!174 lt!74631 (_1!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))) (Some!179 (_2!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))))

(assert (=> d!45493 (= lt!74629 (lemmaContainsTupThenGetReturnValue!91 lt!74631 (_1!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))) (_2!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))))

(assert (=> d!45493 (= lt!74631 (insertStrictlySorted!94 (toList!871 (ite c!26353 call!15574 (ite c!26356 call!15577 call!15572))) (_1!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))) (_2!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))))))

(assert (=> d!45493 (= (+!167 (ite c!26353 call!15574 (ite c!26356 call!15577 call!15572)) (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))) lt!74630)))

(declare-fun b!142643 () Bool)

(declare-fun res!67969 () Bool)

(assert (=> b!142643 (=> (not res!67969) (not e!92939))))

(assert (=> b!142643 (= res!67969 (= (getValueByKey!174 (toList!871 lt!74630) (_1!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099)))))) (Some!179 (_2!1339 (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))))

(declare-fun b!142644 () Bool)

(assert (=> b!142644 (= e!92939 (contains!914 (toList!871 lt!74630) (ite (or c!26353 c!26356) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73099))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73099))))))))

(assert (= (and d!45493 res!67970) b!142643))

(assert (= (and b!142643 res!67969) b!142644))

(declare-fun m!171739 () Bool)

(assert (=> d!45493 m!171739))

(declare-fun m!171741 () Bool)

(assert (=> d!45493 m!171741))

(declare-fun m!171743 () Bool)

(assert (=> d!45493 m!171743))

(declare-fun m!171745 () Bool)

(assert (=> d!45493 m!171745))

(declare-fun m!171747 () Bool)

(assert (=> b!142643 m!171747))

(declare-fun m!171749 () Bool)

(assert (=> b!142644 m!171749))

(assert (=> bm!15574 d!45493))

(declare-fun d!45495 () Bool)

(assert (=> d!45495 (= (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352)) (and (not (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) lt!73352) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141022 d!45495))

(declare-fun d!45497 () Bool)

(declare-fun e!92941 () Bool)

(assert (=> d!45497 e!92941))

(declare-fun res!67971 () Bool)

(assert (=> d!45497 (=> res!67971 e!92941)))

(declare-fun lt!74635 () Bool)

(assert (=> d!45497 (= res!67971 (not lt!74635))))

(declare-fun lt!74634 () Bool)

(assert (=> d!45497 (= lt!74635 lt!74634)))

(declare-fun lt!74633 () Unit!4393)

(declare-fun e!92940 () Unit!4393)

(assert (=> d!45497 (= lt!74633 e!92940)))

(declare-fun c!26986 () Bool)

(assert (=> d!45497 (= c!26986 lt!74634)))

(assert (=> d!45497 (= lt!74634 (containsKey!178 (toList!871 lt!73436) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45497 (= (contains!910 lt!73436 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74635)))

(declare-fun b!142645 () Bool)

(declare-fun lt!74632 () Unit!4393)

(assert (=> b!142645 (= e!92940 lt!74632)))

(assert (=> b!142645 (= lt!74632 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73436) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142645 (isDefined!128 (getValueByKey!174 (toList!871 lt!73436) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142646 () Bool)

(declare-fun Unit!4517 () Unit!4393)

(assert (=> b!142646 (= e!92940 Unit!4517)))

(declare-fun b!142647 () Bool)

(assert (=> b!142647 (= e!92941 (isDefined!128 (getValueByKey!174 (toList!871 lt!73436) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45497 c!26986) b!142645))

(assert (= (and d!45497 (not c!26986)) b!142646))

(assert (= (and d!45497 (not res!67971)) b!142647))

(declare-fun m!171751 () Bool)

(assert (=> d!45497 m!171751))

(declare-fun m!171753 () Bool)

(assert (=> b!142645 m!171753))

(assert (=> b!142645 m!167283))

(assert (=> b!142645 m!167283))

(declare-fun m!171755 () Bool)

(assert (=> b!142645 m!171755))

(assert (=> b!142647 m!167283))

(assert (=> b!142647 m!167283))

(assert (=> b!142647 m!171755))

(assert (=> d!43713 d!45497))

(declare-fun b!142651 () Bool)

(declare-fun e!92943 () Option!180)

(assert (=> b!142651 (= e!92943 None!178)))

(declare-fun b!142649 () Bool)

(declare-fun e!92942 () Option!180)

(assert (=> b!142649 (= e!92942 e!92943)))

(declare-fun c!26988 () Bool)

(assert (=> b!142649 (= c!26988 (and ((_ is Cons!1735) lt!73437) (not (= (_1!1339 (h!2342 lt!73437)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142648 () Bool)

(assert (=> b!142648 (= e!92942 (Some!179 (_2!1339 (h!2342 lt!73437))))))

(declare-fun c!26987 () Bool)

(declare-fun d!45499 () Bool)

(assert (=> d!45499 (= c!26987 (and ((_ is Cons!1735) lt!73437) (= (_1!1339 (h!2342 lt!73437)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45499 (= (getValueByKey!174 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92942)))

(declare-fun b!142650 () Bool)

(assert (=> b!142650 (= e!92943 (getValueByKey!174 (t!6314 lt!73437) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45499 c!26987) b!142648))

(assert (= (and d!45499 (not c!26987)) b!142649))

(assert (= (and b!142649 c!26988) b!142650))

(assert (= (and b!142649 (not c!26988)) b!142651))

(declare-fun m!171757 () Bool)

(assert (=> b!142650 m!171757))

(assert (=> d!43713 d!45499))

(declare-fun d!45501 () Bool)

(assert (=> d!45501 (= (getValueByKey!174 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74636 () Unit!4393)

(assert (=> d!45501 (= lt!74636 (choose!872 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92944 () Bool)

(assert (=> d!45501 e!92944))

(declare-fun res!67972 () Bool)

(assert (=> d!45501 (=> (not res!67972) (not e!92944))))

(assert (=> d!45501 (= res!67972 (isStrictlySorted!320 lt!73437))))

(assert (=> d!45501 (= (lemmaContainsTupThenGetReturnValue!91 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74636)))

(declare-fun b!142652 () Bool)

(declare-fun res!67973 () Bool)

(assert (=> b!142652 (=> (not res!67973) (not e!92944))))

(assert (=> b!142652 (= res!67973 (containsKey!178 lt!73437 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142653 () Bool)

(assert (=> b!142653 (= e!92944 (contains!914 lt!73437 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45501 res!67972) b!142652))

(assert (= (and b!142652 res!67973) b!142653))

(assert (=> d!45501 m!167277))

(declare-fun m!171759 () Bool)

(assert (=> d!45501 m!171759))

(declare-fun m!171761 () Bool)

(assert (=> d!45501 m!171761))

(declare-fun m!171763 () Bool)

(assert (=> b!142652 m!171763))

(declare-fun m!171765 () Bool)

(assert (=> b!142653 m!171765))

(assert (=> d!43713 d!45501))

(declare-fun b!142654 () Bool)

(declare-fun e!92947 () List!1739)

(declare-fun call!15751 () List!1739)

(assert (=> b!142654 (= e!92947 call!15751)))

(declare-fun b!142655 () Bool)

(declare-fun e!92945 () List!1739)

(declare-fun call!15750 () List!1739)

(assert (=> b!142655 (= e!92945 call!15750)))

(declare-fun b!142656 () Bool)

(declare-fun lt!74637 () List!1739)

(declare-fun e!92948 () Bool)

(assert (=> b!142656 (= e!92948 (contains!914 lt!74637 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92946 () List!1739)

(declare-fun bm!15746 () Bool)

(declare-fun c!26992 () Bool)

(assert (=> bm!15746 (= call!15751 ($colon$colon!93 e!92946 (ite c!26992 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26989 () Bool)

(assert (=> bm!15746 (= c!26989 c!26992)))

(declare-fun bm!15747 () Bool)

(declare-fun call!15749 () List!1739)

(assert (=> bm!15747 (= call!15750 call!15749)))

(declare-fun b!142657 () Bool)

(declare-fun res!67974 () Bool)

(assert (=> b!142657 (=> (not res!67974) (not e!92948))))

(assert (=> b!142657 (= res!67974 (containsKey!178 lt!74637 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!45503 () Bool)

(assert (=> d!45503 e!92948))

(declare-fun res!67975 () Bool)

(assert (=> d!45503 (=> (not res!67975) (not e!92948))))

(assert (=> d!45503 (= res!67975 (isStrictlySorted!320 lt!74637))))

(assert (=> d!45503 (= lt!74637 e!92947)))

(assert (=> d!45503 (= c!26992 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45503 (isStrictlySorted!320 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (=> d!45503 (= (insertStrictlySorted!94 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74637)))

(declare-fun b!142658 () Bool)

(declare-fun c!26991 () Bool)

(declare-fun c!26990 () Bool)

(assert (=> b!142658 (= e!92946 (ite c!26991 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (ite c!26990 (Cons!1735 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) Nil!1736)))))

(declare-fun b!142659 () Bool)

(assert (=> b!142659 (= c!26990 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvsgt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92949 () List!1739)

(assert (=> b!142659 (= e!92949 e!92945)))

(declare-fun b!142660 () Bool)

(assert (=> b!142660 (= e!92945 call!15750)))

(declare-fun b!142661 () Bool)

(assert (=> b!142661 (= e!92946 (insertStrictlySorted!94 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15748 () Bool)

(assert (=> bm!15748 (= call!15749 call!15751)))

(declare-fun b!142662 () Bool)

(assert (=> b!142662 (= e!92947 e!92949)))

(assert (=> b!142662 (= c!26991 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142663 () Bool)

(assert (=> b!142663 (= e!92949 call!15749)))

(assert (= (and d!45503 c!26992) b!142654))

(assert (= (and d!45503 (not c!26992)) b!142662))

(assert (= (and b!142662 c!26991) b!142663))

(assert (= (and b!142662 (not c!26991)) b!142659))

(assert (= (and b!142659 c!26990) b!142655))

(assert (= (and b!142659 (not c!26990)) b!142660))

(assert (= (or b!142655 b!142660) bm!15747))

(assert (= (or b!142663 bm!15747) bm!15748))

(assert (= (or b!142654 bm!15748) bm!15746))

(assert (= (and bm!15746 c!26989) b!142661))

(assert (= (and bm!15746 (not c!26989)) b!142658))

(assert (= (and d!45503 res!67975) b!142657))

(assert (= (and b!142657 res!67974) b!142656))

(declare-fun m!171767 () Bool)

(assert (=> b!142657 m!171767))

(declare-fun m!171769 () Bool)

(assert (=> b!142661 m!171769))

(declare-fun m!171771 () Bool)

(assert (=> bm!15746 m!171771))

(declare-fun m!171773 () Bool)

(assert (=> b!142656 m!171773))

(declare-fun m!171775 () Bool)

(assert (=> d!45503 m!171775))

(assert (=> d!45503 m!169513))

(assert (=> d!43713 d!45503))

(declare-fun d!45505 () Bool)

(declare-fun e!92951 () Bool)

(assert (=> d!45505 e!92951))

(declare-fun res!67976 () Bool)

(assert (=> d!45505 (=> res!67976 e!92951)))

(declare-fun lt!74641 () Bool)

(assert (=> d!45505 (= res!67976 (not lt!74641))))

(declare-fun lt!74640 () Bool)

(assert (=> d!45505 (= lt!74641 lt!74640)))

(declare-fun lt!74639 () Unit!4393)

(declare-fun e!92950 () Unit!4393)

(assert (=> d!45505 (= lt!74639 e!92950)))

(declare-fun c!26993 () Bool)

(assert (=> d!45505 (= c!26993 lt!74640)))

(assert (=> d!45505 (= lt!74640 (containsKey!178 (toList!871 lt!73730) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (=> d!45505 (= (contains!910 lt!73730 (_1!1339 (tuple2!2657 lt!73265 lt!73264))) lt!74641)))

(declare-fun b!142664 () Bool)

(declare-fun lt!74638 () Unit!4393)

(assert (=> b!142664 (= e!92950 lt!74638)))

(assert (=> b!142664 (= lt!74638 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73730) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (=> b!142664 (isDefined!128 (getValueByKey!174 (toList!871 lt!73730) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun b!142665 () Bool)

(declare-fun Unit!4518 () Unit!4393)

(assert (=> b!142665 (= e!92950 Unit!4518)))

(declare-fun b!142666 () Bool)

(assert (=> b!142666 (= e!92951 (isDefined!128 (getValueByKey!174 (toList!871 lt!73730) (_1!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(assert (= (and d!45505 c!26993) b!142664))

(assert (= (and d!45505 (not c!26993)) b!142665))

(assert (= (and d!45505 (not res!67976)) b!142666))

(declare-fun m!171777 () Bool)

(assert (=> d!45505 m!171777))

(declare-fun m!171779 () Bool)

(assert (=> b!142664 m!171779))

(assert (=> b!142664 m!168243))

(assert (=> b!142664 m!168243))

(declare-fun m!171781 () Bool)

(assert (=> b!142664 m!171781))

(assert (=> b!142666 m!168243))

(assert (=> b!142666 m!168243))

(assert (=> b!142666 m!171781))

(assert (=> d!44007 d!45505))

(declare-fun b!142670 () Bool)

(declare-fun e!92953 () Option!180)

(assert (=> b!142670 (= e!92953 None!178)))

(declare-fun b!142668 () Bool)

(declare-fun e!92952 () Option!180)

(assert (=> b!142668 (= e!92952 e!92953)))

(declare-fun c!26995 () Bool)

(assert (=> b!142668 (= c!26995 (and ((_ is Cons!1735) lt!73731) (not (= (_1!1339 (h!2342 lt!73731)) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))))

(declare-fun b!142667 () Bool)

(assert (=> b!142667 (= e!92952 (Some!179 (_2!1339 (h!2342 lt!73731))))))

(declare-fun d!45507 () Bool)

(declare-fun c!26994 () Bool)

(assert (=> d!45507 (= c!26994 (and ((_ is Cons!1735) lt!73731) (= (_1!1339 (h!2342 lt!73731)) (_1!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(assert (=> d!45507 (= (getValueByKey!174 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264))) e!92952)))

(declare-fun b!142669 () Bool)

(assert (=> b!142669 (= e!92953 (getValueByKey!174 (t!6314 lt!73731) (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(assert (= (and d!45507 c!26994) b!142667))

(assert (= (and d!45507 (not c!26994)) b!142668))

(assert (= (and b!142668 c!26995) b!142669))

(assert (= (and b!142668 (not c!26995)) b!142670))

(declare-fun m!171783 () Bool)

(assert (=> b!142669 m!171783))

(assert (=> d!44007 d!45507))

(declare-fun d!45509 () Bool)

(assert (=> d!45509 (= (getValueByKey!174 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264))) (Some!179 (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun lt!74642 () Unit!4393)

(assert (=> d!45509 (= lt!74642 (choose!872 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun e!92954 () Bool)

(assert (=> d!45509 e!92954))

(declare-fun res!67977 () Bool)

(assert (=> d!45509 (=> (not res!67977) (not e!92954))))

(assert (=> d!45509 (= res!67977 (isStrictlySorted!320 lt!73731))))

(assert (=> d!45509 (= (lemmaContainsTupThenGetReturnValue!91 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))) lt!74642)))

(declare-fun b!142671 () Bool)

(declare-fun res!67978 () Bool)

(assert (=> b!142671 (=> (not res!67978) (not e!92954))))

(assert (=> b!142671 (= res!67978 (containsKey!178 lt!73731 (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun b!142672 () Bool)

(assert (=> b!142672 (= e!92954 (contains!914 lt!73731 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(assert (= (and d!45509 res!67977) b!142671))

(assert (= (and b!142671 res!67978) b!142672))

(assert (=> d!45509 m!168237))

(declare-fun m!171785 () Bool)

(assert (=> d!45509 m!171785))

(declare-fun m!171787 () Bool)

(assert (=> d!45509 m!171787))

(declare-fun m!171789 () Bool)

(assert (=> b!142671 m!171789))

(declare-fun m!171791 () Bool)

(assert (=> b!142672 m!171791))

(assert (=> d!44007 d!45509))

(declare-fun b!142673 () Bool)

(declare-fun e!92957 () List!1739)

(declare-fun call!15754 () List!1739)

(assert (=> b!142673 (= e!92957 call!15754)))

(declare-fun b!142674 () Bool)

(declare-fun e!92955 () List!1739)

(declare-fun call!15753 () List!1739)

(assert (=> b!142674 (= e!92955 call!15753)))

(declare-fun b!142675 () Bool)

(declare-fun lt!74643 () List!1739)

(declare-fun e!92958 () Bool)

(assert (=> b!142675 (= e!92958 (contains!914 lt!74643 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(declare-fun e!92956 () List!1739)

(declare-fun bm!15749 () Bool)

(declare-fun c!26999 () Bool)

(assert (=> bm!15749 (= call!15754 ($colon$colon!93 e!92956 (ite c!26999 (h!2342 (toList!871 lt!73263)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))))

(declare-fun c!26996 () Bool)

(assert (=> bm!15749 (= c!26996 c!26999)))

(declare-fun bm!15750 () Bool)

(declare-fun call!15752 () List!1739)

(assert (=> bm!15750 (= call!15753 call!15752)))

(declare-fun b!142676 () Bool)

(declare-fun res!67979 () Bool)

(assert (=> b!142676 (=> (not res!67979) (not e!92958))))

(assert (=> b!142676 (= res!67979 (containsKey!178 lt!74643 (_1!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun d!45511 () Bool)

(assert (=> d!45511 e!92958))

(declare-fun res!67980 () Bool)

(assert (=> d!45511 (=> (not res!67980) (not e!92958))))

(assert (=> d!45511 (= res!67980 (isStrictlySorted!320 lt!74643))))

(assert (=> d!45511 (= lt!74643 e!92957)))

(assert (=> d!45511 (= c!26999 (and ((_ is Cons!1735) (toList!871 lt!73263)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73263))) (_1!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(assert (=> d!45511 (isStrictlySorted!320 (toList!871 lt!73263))))

(assert (=> d!45511 (= (insertStrictlySorted!94 (toList!871 lt!73263) (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))) lt!74643)))

(declare-fun c!26997 () Bool)

(declare-fun c!26998 () Bool)

(declare-fun b!142677 () Bool)

(assert (=> b!142677 (= e!92956 (ite c!26998 (t!6314 (toList!871 lt!73263)) (ite c!26997 (Cons!1735 (h!2342 (toList!871 lt!73263)) (t!6314 (toList!871 lt!73263))) Nil!1736)))))

(declare-fun b!142678 () Bool)

(assert (=> b!142678 (= c!26997 (and ((_ is Cons!1735) (toList!871 lt!73263)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73263))) (_1!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(declare-fun e!92959 () List!1739)

(assert (=> b!142678 (= e!92959 e!92955)))

(declare-fun b!142679 () Bool)

(assert (=> b!142679 (= e!92955 call!15753)))

(declare-fun b!142680 () Bool)

(assert (=> b!142680 (= e!92956 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73263)) (_1!1339 (tuple2!2657 lt!73265 lt!73264)) (_2!1339 (tuple2!2657 lt!73265 lt!73264))))))

(declare-fun bm!15751 () Bool)

(assert (=> bm!15751 (= call!15752 call!15754)))

(declare-fun b!142681 () Bool)

(assert (=> b!142681 (= e!92957 e!92959)))

(assert (=> b!142681 (= c!26998 (and ((_ is Cons!1735) (toList!871 lt!73263)) (= (_1!1339 (h!2342 (toList!871 lt!73263))) (_1!1339 (tuple2!2657 lt!73265 lt!73264)))))))

(declare-fun b!142682 () Bool)

(assert (=> b!142682 (= e!92959 call!15752)))

(assert (= (and d!45511 c!26999) b!142673))

(assert (= (and d!45511 (not c!26999)) b!142681))

(assert (= (and b!142681 c!26998) b!142682))

(assert (= (and b!142681 (not c!26998)) b!142678))

(assert (= (and b!142678 c!26997) b!142674))

(assert (= (and b!142678 (not c!26997)) b!142679))

(assert (= (or b!142674 b!142679) bm!15750))

(assert (= (or b!142682 bm!15750) bm!15751))

(assert (= (or b!142673 bm!15751) bm!15749))

(assert (= (and bm!15749 c!26996) b!142680))

(assert (= (and bm!15749 (not c!26996)) b!142677))

(assert (= (and d!45511 res!67980) b!142676))

(assert (= (and b!142676 res!67979) b!142675))

(declare-fun m!171793 () Bool)

(assert (=> b!142676 m!171793))

(declare-fun m!171795 () Bool)

(assert (=> b!142680 m!171795))

(declare-fun m!171797 () Bool)

(assert (=> bm!15749 m!171797))

(declare-fun m!171799 () Bool)

(assert (=> b!142675 m!171799))

(declare-fun m!171801 () Bool)

(assert (=> d!45511 m!171801))

(declare-fun m!171803 () Bool)

(assert (=> d!45511 m!171803))

(assert (=> d!44007 d!45511))

(declare-fun d!45513 () Bool)

(declare-fun e!92961 () Bool)

(assert (=> d!45513 e!92961))

(declare-fun res!67981 () Bool)

(assert (=> d!45513 (=> res!67981 e!92961)))

(declare-fun lt!74647 () Bool)

(assert (=> d!45513 (= res!67981 (not lt!74647))))

(declare-fun lt!74646 () Bool)

(assert (=> d!45513 (= lt!74647 lt!74646)))

(declare-fun lt!74645 () Unit!4393)

(declare-fun e!92960 () Unit!4393)

(assert (=> d!45513 (= lt!74645 e!92960)))

(declare-fun c!27000 () Bool)

(assert (=> d!45513 (= c!27000 lt!74646)))

(assert (=> d!45513 (= lt!74646 (containsKey!178 (toList!871 lt!73593) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45513 (= (contains!910 lt!73593 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!74647)))

(declare-fun b!142683 () Bool)

(declare-fun lt!74644 () Unit!4393)

(assert (=> b!142683 (= e!92960 lt!74644)))

(assert (=> b!142683 (= lt!74644 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73593) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (=> b!142683 (isDefined!128 (getValueByKey!174 (toList!871 lt!73593) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142684 () Bool)

(declare-fun Unit!4519 () Unit!4393)

(assert (=> b!142684 (= e!92960 Unit!4519)))

(declare-fun b!142685 () Bool)

(assert (=> b!142685 (= e!92961 (isDefined!128 (getValueByKey!174 (toList!871 lt!73593) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45513 c!27000) b!142683))

(assert (= (and d!45513 (not c!27000)) b!142684))

(assert (= (and d!45513 (not res!67981)) b!142685))

(declare-fun m!171805 () Bool)

(assert (=> d!45513 m!171805))

(declare-fun m!171807 () Bool)

(assert (=> b!142683 m!171807))

(assert (=> b!142683 m!167771))

(assert (=> b!142683 m!167771))

(declare-fun m!171809 () Bool)

(assert (=> b!142683 m!171809))

(assert (=> b!142685 m!167771))

(assert (=> b!142685 m!167771))

(assert (=> b!142685 m!171809))

(assert (=> d!43853 d!45513))

(declare-fun b!142689 () Bool)

(declare-fun e!92963 () Option!180)

(assert (=> b!142689 (= e!92963 None!178)))

(declare-fun b!142687 () Bool)

(declare-fun e!92962 () Option!180)

(assert (=> b!142687 (= e!92962 e!92963)))

(declare-fun c!27002 () Bool)

(assert (=> b!142687 (= c!27002 (and ((_ is Cons!1735) lt!73594) (not (= (_1!1339 (h!2342 lt!73594)) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142686 () Bool)

(assert (=> b!142686 (= e!92962 (Some!179 (_2!1339 (h!2342 lt!73594))))))

(declare-fun c!27001 () Bool)

(declare-fun d!45515 () Bool)

(assert (=> d!45515 (= c!27001 (and ((_ is Cons!1735) lt!73594) (= (_1!1339 (h!2342 lt!73594)) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45515 (= (getValueByKey!174 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) e!92962)))

(declare-fun b!142688 () Bool)

(assert (=> b!142688 (= e!92963 (getValueByKey!174 (t!6314 lt!73594) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!45515 c!27001) b!142686))

(assert (= (and d!45515 (not c!27001)) b!142687))

(assert (= (and b!142687 c!27002) b!142688))

(assert (= (and b!142687 (not c!27002)) b!142689))

(declare-fun m!171811 () Bool)

(assert (=> b!142688 m!171811))

(assert (=> d!43853 d!45515))

(declare-fun d!45517 () Bool)

(assert (=> d!45517 (= (getValueByKey!174 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74648 () Unit!4393)

(assert (=> d!45517 (= lt!74648 (choose!872 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun e!92964 () Bool)

(assert (=> d!45517 e!92964))

(declare-fun res!67982 () Bool)

(assert (=> d!45517 (=> (not res!67982) (not e!92964))))

(assert (=> d!45517 (= res!67982 (isStrictlySorted!320 lt!73594))))

(assert (=> d!45517 (= (lemmaContainsTupThenGetReturnValue!91 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!74648)))

(declare-fun b!142690 () Bool)

(declare-fun res!67983 () Bool)

(assert (=> b!142690 (=> (not res!67983) (not e!92964))))

(assert (=> b!142690 (= res!67983 (containsKey!178 lt!73594 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun b!142691 () Bool)

(assert (=> b!142691 (= e!92964 (contains!914 lt!73594 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45517 res!67982) b!142690))

(assert (= (and b!142690 res!67983) b!142691))

(assert (=> d!45517 m!167765))

(declare-fun m!171813 () Bool)

(assert (=> d!45517 m!171813))

(declare-fun m!171815 () Bool)

(assert (=> d!45517 m!171815))

(declare-fun m!171817 () Bool)

(assert (=> b!142690 m!171817))

(declare-fun m!171819 () Bool)

(assert (=> b!142691 m!171819))

(assert (=> d!43853 d!45517))

(declare-fun b!142692 () Bool)

(declare-fun e!92967 () List!1739)

(declare-fun call!15757 () List!1739)

(assert (=> b!142692 (= e!92967 call!15757)))

(declare-fun b!142693 () Bool)

(declare-fun e!92965 () List!1739)

(declare-fun call!15756 () List!1739)

(assert (=> b!142693 (= e!92965 call!15756)))

(declare-fun e!92968 () Bool)

(declare-fun b!142694 () Bool)

(declare-fun lt!74649 () List!1739)

(assert (=> b!142694 (= e!92968 (contains!914 lt!74649 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(declare-fun bm!15752 () Bool)

(declare-fun e!92966 () List!1739)

(declare-fun c!27006 () Bool)

(assert (=> bm!15752 (= call!15757 ($colon$colon!93 e!92966 (ite c!27006 (h!2342 (toList!871 lt!73209)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))))

(declare-fun c!27003 () Bool)

(assert (=> bm!15752 (= c!27003 c!27006)))

(declare-fun bm!15753 () Bool)

(declare-fun call!15755 () List!1739)

(assert (=> bm!15753 (= call!15756 call!15755)))

(declare-fun b!142695 () Bool)

(declare-fun res!67984 () Bool)

(assert (=> b!142695 (=> (not res!67984) (not e!92968))))

(assert (=> b!142695 (= res!67984 (containsKey!178 lt!74649 (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun d!45519 () Bool)

(assert (=> d!45519 e!92968))

(declare-fun res!67985 () Bool)

(assert (=> d!45519 (=> (not res!67985) (not e!92968))))

(assert (=> d!45519 (= res!67985 (isStrictlySorted!320 lt!74649))))

(assert (=> d!45519 (= lt!74649 e!92967)))

(assert (=> d!45519 (= c!27006 (and ((_ is Cons!1735) (toList!871 lt!73209)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73209))) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45519 (isStrictlySorted!320 (toList!871 lt!73209))))

(assert (=> d!45519 (= (insertStrictlySorted!94 (toList!871 lt!73209) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!74649)))

(declare-fun c!27005 () Bool)

(declare-fun c!27004 () Bool)

(declare-fun b!142696 () Bool)

(assert (=> b!142696 (= e!92966 (ite c!27005 (t!6314 (toList!871 lt!73209)) (ite c!27004 (Cons!1735 (h!2342 (toList!871 lt!73209)) (t!6314 (toList!871 lt!73209))) Nil!1736)))))

(declare-fun b!142697 () Bool)

(assert (=> b!142697 (= c!27004 (and ((_ is Cons!1735) (toList!871 lt!73209)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73209))) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(declare-fun e!92969 () List!1739)

(assert (=> b!142697 (= e!92969 e!92965)))

(declare-fun b!142698 () Bool)

(assert (=> b!142698 (= e!92965 call!15756)))

(declare-fun b!142699 () Bool)

(assert (=> b!142699 (= e!92966 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73209)) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))))

(declare-fun bm!15754 () Bool)

(assert (=> bm!15754 (= call!15755 call!15757)))

(declare-fun b!142700 () Bool)

(assert (=> b!142700 (= e!92967 e!92969)))

(assert (=> b!142700 (= c!27005 (and ((_ is Cons!1735) (toList!871 lt!73209)) (= (_1!1339 (h!2342 (toList!871 lt!73209))) (_1!1339 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142701 () Bool)

(assert (=> b!142701 (= e!92969 call!15755)))

(assert (= (and d!45519 c!27006) b!142692))

(assert (= (and d!45519 (not c!27006)) b!142700))

(assert (= (and b!142700 c!27005) b!142701))

(assert (= (and b!142700 (not c!27005)) b!142697))

(assert (= (and b!142697 c!27004) b!142693))

(assert (= (and b!142697 (not c!27004)) b!142698))

(assert (= (or b!142693 b!142698) bm!15753))

(assert (= (or b!142701 bm!15753) bm!15754))

(assert (= (or b!142692 bm!15754) bm!15752))

(assert (= (and bm!15752 c!27003) b!142699))

(assert (= (and bm!15752 (not c!27003)) b!142696))

(assert (= (and d!45519 res!67985) b!142695))

(assert (= (and b!142695 res!67984) b!142694))

(declare-fun m!171821 () Bool)

(assert (=> b!142695 m!171821))

(declare-fun m!171823 () Bool)

(assert (=> b!142699 m!171823))

(declare-fun m!171825 () Bool)

(assert (=> bm!15752 m!171825))

(declare-fun m!171827 () Bool)

(assert (=> b!142694 m!171827))

(declare-fun m!171829 () Bool)

(assert (=> d!45519 m!171829))

(declare-fun m!171831 () Bool)

(assert (=> d!45519 m!171831))

(assert (=> d!43853 d!45519))

(declare-fun d!45521 () Bool)

(declare-fun res!67986 () Bool)

(declare-fun e!92970 () Bool)

(assert (=> d!45521 (=> res!67986 e!92970)))

(assert (=> d!45521 (= res!67986 (and ((_ is Cons!1735) lt!73158) (= (_1!1339 (h!2342 lt!73158)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45521 (= (containsKey!178 lt!73158 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!92970)))

(declare-fun b!142702 () Bool)

(declare-fun e!92971 () Bool)

(assert (=> b!142702 (= e!92970 e!92971)))

(declare-fun res!67987 () Bool)

(assert (=> b!142702 (=> (not res!67987) (not e!92971))))

(assert (=> b!142702 (= res!67987 (and (or (not ((_ is Cons!1735) lt!73158)) (bvsle (_1!1339 (h!2342 lt!73158)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73158) (bvslt (_1!1339 (h!2342 lt!73158)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142703 () Bool)

(assert (=> b!142703 (= e!92971 (containsKey!178 (t!6314 lt!73158) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45521 (not res!67986)) b!142702))

(assert (= (and b!142702 res!67987) b!142703))

(declare-fun m!171833 () Bool)

(assert (=> b!142703 m!171833))

(assert (=> b!141002 d!45521))

(declare-fun d!45523 () Bool)

(declare-fun lt!74650 () Bool)

(assert (=> d!45523 (= lt!74650 (select (content!138 (toList!871 lt!73815)) (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun e!92973 () Bool)

(assert (=> d!45523 (= lt!74650 e!92973)))

(declare-fun res!67988 () Bool)

(assert (=> d!45523 (=> (not res!67988) (not e!92973))))

(assert (=> d!45523 (= res!67988 ((_ is Cons!1735) (toList!871 lt!73815)))))

(assert (=> d!45523 (= (contains!914 (toList!871 lt!73815) (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) lt!74650)))

(declare-fun b!142704 () Bool)

(declare-fun e!92972 () Bool)

(assert (=> b!142704 (= e!92973 e!92972)))

(declare-fun res!67989 () Bool)

(assert (=> b!142704 (=> res!67989 e!92972)))

(assert (=> b!142704 (= res!67989 (= (h!2342 (toList!871 lt!73815)) (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(declare-fun b!142705 () Bool)

(assert (=> b!142705 (= e!92972 (contains!914 (t!6314 (toList!871 lt!73815)) (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))

(assert (= (and d!45523 res!67988) b!142704))

(assert (= (and b!142704 (not res!67989)) b!142705))

(declare-fun m!171835 () Bool)

(assert (=> d!45523 m!171835))

(declare-fun m!171837 () Bool)

(assert (=> d!45523 m!171837))

(declare-fun m!171839 () Bool)

(assert (=> b!142705 m!171839))

(assert (=> b!140973 d!45523))

(declare-fun d!45525 () Bool)

(declare-fun e!92975 () Bool)

(assert (=> d!45525 e!92975))

(declare-fun res!67990 () Bool)

(assert (=> d!45525 (=> res!67990 e!92975)))

(declare-fun lt!74654 () Bool)

(assert (=> d!45525 (= res!67990 (not lt!74654))))

(declare-fun lt!74653 () Bool)

(assert (=> d!45525 (= lt!74654 lt!74653)))

(declare-fun lt!74652 () Unit!4393)

(declare-fun e!92974 () Unit!4393)

(assert (=> d!45525 (= lt!74652 e!92974)))

(declare-fun c!27007 () Bool)

(assert (=> d!45525 (= c!27007 lt!74653)))

(assert (=> d!45525 (= lt!74653 (containsKey!178 (toList!871 lt!73548) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45525 (= (contains!910 lt!73548 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74654)))

(declare-fun b!142706 () Bool)

(declare-fun lt!74651 () Unit!4393)

(assert (=> b!142706 (= e!92974 lt!74651)))

(assert (=> b!142706 (= lt!74651 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73548) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142706 (isDefined!128 (getValueByKey!174 (toList!871 lt!73548) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142707 () Bool)

(declare-fun Unit!4520 () Unit!4393)

(assert (=> b!142707 (= e!92974 Unit!4520)))

(declare-fun b!142708 () Bool)

(assert (=> b!142708 (= e!92975 (isDefined!128 (getValueByKey!174 (toList!871 lt!73548) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45525 c!27007) b!142706))

(assert (= (and d!45525 (not c!27007)) b!142707))

(assert (= (and d!45525 (not res!67990)) b!142708))

(assert (=> d!45525 m!166699))

(declare-fun m!171841 () Bool)

(assert (=> d!45525 m!171841))

(assert (=> b!142706 m!166699))

(declare-fun m!171843 () Bool)

(assert (=> b!142706 m!171843))

(assert (=> b!142706 m!166699))

(declare-fun m!171845 () Bool)

(assert (=> b!142706 m!171845))

(assert (=> b!142706 m!171845))

(declare-fun m!171847 () Bool)

(assert (=> b!142706 m!171847))

(assert (=> b!142708 m!166699))

(assert (=> b!142708 m!171845))

(assert (=> b!142708 m!171845))

(assert (=> b!142708 m!171847))

(assert (=> b!140514 d!45525))

(assert (=> b!140680 d!45221))

(declare-fun b!142710 () Bool)

(declare-fun e!92977 () Bool)

(declare-fun call!15758 () Bool)

(assert (=> b!142710 (= e!92977 call!15758)))

(declare-fun b!142711 () Bool)

(declare-fun e!92978 () Bool)

(assert (=> b!142711 (= e!92978 e!92977)))

(declare-fun c!27008 () Bool)

(assert (=> b!142711 (= c!27008 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142712 () Bool)

(declare-fun e!92976 () Bool)

(assert (=> b!142712 (= e!92976 call!15758)))

(declare-fun bm!15755 () Bool)

(assert (=> bm!15755 (= call!15758 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)))))

(declare-fun b!142709 () Bool)

(assert (=> b!142709 (= e!92977 e!92976)))

(declare-fun lt!74656 () (_ BitVec 64))

(assert (=> b!142709 (= lt!74656 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74655 () Unit!4393)

(assert (=> b!142709 (= lt!74655 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!74656 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!142709 (arrayContainsKey!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) lt!74656 #b00000000000000000000000000000000)))

(declare-fun lt!74657 () Unit!4393)

(assert (=> b!142709 (= lt!74657 lt!74655)))

(declare-fun res!67992 () Bool)

(assert (=> b!142709 (= res!67992 (= (seekEntryOrOpen!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)) (Found!282 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142709 (=> (not res!67992) (not e!92976))))

(declare-fun d!45527 () Bool)

(declare-fun res!67991 () Bool)

(assert (=> d!45527 (=> res!67991 e!92978)))

(assert (=> d!45527 (= res!67991 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!45527 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (mask!7278 newMap!16)) e!92978)))

(assert (= (and d!45527 (not res!67991)) b!142711))

(assert (= (and b!142711 c!27008) b!142709))

(assert (= (and b!142711 (not c!27008)) b!142710))

(assert (= (and b!142709 res!67992) b!142712))

(assert (= (or b!142712 b!142710) bm!15755))

(declare-fun m!171849 () Bool)

(assert (=> b!142711 m!171849))

(assert (=> b!142711 m!171849))

(declare-fun m!171851 () Bool)

(assert (=> b!142711 m!171851))

(declare-fun m!171853 () Bool)

(assert (=> bm!15755 m!171853))

(assert (=> b!142709 m!171849))

(declare-fun m!171855 () Bool)

(assert (=> b!142709 m!171855))

(declare-fun m!171857 () Bool)

(assert (=> b!142709 m!171857))

(assert (=> b!142709 m!171849))

(declare-fun m!171859 () Bool)

(assert (=> b!142709 m!171859))

(assert (=> bm!15656 d!45527))

(declare-fun d!45529 () Bool)

(declare-fun res!67993 () Bool)

(declare-fun e!92979 () Bool)

(assert (=> d!45529 (=> res!67993 e!92979)))

(assert (=> d!45529 (= res!67993 (= (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!45529 (= (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92979)))

(declare-fun b!142713 () Bool)

(declare-fun e!92980 () Bool)

(assert (=> b!142713 (= e!92979 e!92980)))

(declare-fun res!67994 () Bool)

(assert (=> b!142713 (=> (not res!67994) (not e!92980))))

(assert (=> b!142713 (= res!67994 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(declare-fun b!142714 () Bool)

(assert (=> b!142714 (= e!92980 (arrayContainsKey!0 (_keys!4697 newMap!16) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45529 (not res!67993)) b!142713))

(assert (= (and b!142713 res!67994) b!142714))

(assert (=> d!45529 m!168939))

(assert (=> b!142714 m!166407))

(declare-fun m!171861 () Bool)

(assert (=> b!142714 m!171861))

(assert (=> b!141021 d!45529))

(declare-fun d!45531 () Bool)

(assert (=> d!45531 (= (apply!120 lt!73517 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73517) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))))

(declare-fun bs!6025 () Bool)

(assert (= bs!6025 d!45531))

(assert (=> bs!6025 m!167523))

(declare-fun m!171863 () Bool)

(assert (=> bs!6025 m!171863))

(assert (=> bs!6025 m!171863))

(declare-fun m!171865 () Bool)

(assert (=> bs!6025 m!171865))

(assert (=> b!140477 d!45531))

(declare-fun d!45533 () Bool)

(declare-fun c!27009 () Bool)

(assert (=> d!45533 (= c!27009 ((_ is ValueCellFull!1121) (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun e!92981 () V!3553)

(assert (=> d!45533 (= (get!1523 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92981)))

(declare-fun b!142715 () Bool)

(assert (=> b!142715 (= e!92981 (get!1526 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142716 () Bool)

(assert (=> b!142716 (= e!92981 (get!1527 (select (arr!2303 (_values!2922 (_2!1340 lt!73099))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73099)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45533 c!27009) b!142715))

(assert (= (and d!45533 (not c!27009)) b!142716))

(assert (=> b!142715 m!167529))

(assert (=> b!142715 m!167527))

(declare-fun m!171867 () Bool)

(assert (=> b!142715 m!171867))

(assert (=> b!142716 m!167529))

(assert (=> b!142716 m!167527))

(declare-fun m!171869 () Bool)

(assert (=> b!142716 m!171869))

(assert (=> b!140477 d!45533))

(declare-fun d!45535 () Bool)

(declare-fun lt!74658 () Bool)

(assert (=> d!45535 (= lt!74658 (select (content!137 Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!92982 () Bool)

(assert (=> d!45535 (= lt!74658 e!92982)))

(declare-fun res!67996 () Bool)

(assert (=> d!45535 (=> (not res!67996) (not e!92982))))

(assert (=> d!45535 (= res!67996 ((_ is Cons!1736) Nil!1737))))

(assert (=> d!45535 (= (contains!913 Nil!1737 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)) lt!74658)))

(declare-fun b!142717 () Bool)

(declare-fun e!92983 () Bool)

(assert (=> b!142717 (= e!92982 e!92983)))

(declare-fun res!67995 () Bool)

(assert (=> b!142717 (=> res!67995 e!92983)))

(assert (=> b!142717 (= res!67995 (= (h!2343 Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142718 () Bool)

(assert (=> b!142718 (= e!92983 (contains!913 (t!6315 Nil!1737) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!45535 res!67996) b!142717))

(assert (= (and b!142717 (not res!67995)) b!142718))

(assert (=> d!45535 m!166945))

(assert (=> d!45535 m!167691))

(declare-fun m!171871 () Bool)

(assert (=> d!45535 m!171871))

(assert (=> b!142718 m!167691))

(declare-fun m!171873 () Bool)

(assert (=> b!142718 m!171873))

(assert (=> b!140779 d!45535))

(assert (=> b!140450 d!43699))

(assert (=> b!140728 d!44217))

(declare-fun d!45537 () Bool)

(assert (=> d!45537 (= (inRange!0 (ite c!26453 (index!3291 lt!73684) (index!3294 lt!73684)) (mask!7278 newMap!16)) (and (bvsge (ite c!26453 (index!3291 lt!73684) (index!3294 lt!73684)) #b00000000000000000000000000000000) (bvslt (ite c!26453 (index!3291 lt!73684) (index!3294 lt!73684)) (bvadd (mask!7278 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15613 d!45537))

(declare-fun d!45539 () Bool)

(declare-fun e!92984 () Bool)

(assert (=> d!45539 e!92984))

(declare-fun res!67998 () Bool)

(assert (=> d!45539 (=> (not res!67998) (not e!92984))))

(declare-fun lt!74661 () ListLongMap!1711)

(assert (=> d!45539 (= res!67998 (contains!910 lt!74661 (_1!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74662 () List!1739)

(assert (=> d!45539 (= lt!74661 (ListLongMap!1712 lt!74662))))

(declare-fun lt!74659 () Unit!4393)

(declare-fun lt!74660 () Unit!4393)

(assert (=> d!45539 (= lt!74659 lt!74660)))

(assert (=> d!45539 (= (getValueByKey!174 lt!74662 (_1!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45539 (= lt!74660 (lemmaContainsTupThenGetReturnValue!91 lt!74662 (_1!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45539 (= lt!74662 (insertStrictlySorted!94 (toList!871 (ite c!26519 call!15646 (ite c!26522 call!15649 call!15644))) (_1!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45539 (= (+!167 (ite c!26519 call!15646 (ite c!26522 call!15649 call!15644)) (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74661)))

(declare-fun b!142719 () Bool)

(declare-fun res!67997 () Bool)

(assert (=> b!142719 (=> (not res!67997) (not e!92984))))

(assert (=> b!142719 (= res!67997 (= (getValueByKey!174 (toList!871 lt!74661) (_1!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142720 () Bool)

(assert (=> b!142720 (= e!92984 (contains!914 (toList!871 lt!74661) (ite (or c!26519 c!26522) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45539 res!67998) b!142719))

(assert (= (and b!142719 res!67997) b!142720))

(declare-fun m!171875 () Bool)

(assert (=> d!45539 m!171875))

(declare-fun m!171877 () Bool)

(assert (=> d!45539 m!171877))

(declare-fun m!171879 () Bool)

(assert (=> d!45539 m!171879))

(declare-fun m!171881 () Bool)

(assert (=> d!45539 m!171881))

(declare-fun m!171883 () Bool)

(assert (=> b!142719 m!171883))

(declare-fun m!171885 () Bool)

(assert (=> b!142720 m!171885))

(assert (=> bm!15646 d!45539))

(declare-fun d!45541 () Bool)

(assert (=> d!45541 (= (get!1528 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) (v!3279 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44039 d!45541))

(declare-fun b!142724 () Bool)

(declare-fun e!92986 () Option!180)

(assert (=> b!142724 (= e!92986 None!178)))

(declare-fun b!142722 () Bool)

(declare-fun e!92985 () Option!180)

(assert (=> b!142722 (= e!92985 e!92986)))

(declare-fun c!27011 () Bool)

(assert (=> b!142722 (= c!27011 (and ((_ is Cons!1735) (toList!871 lt!73172)) (not (= (_1!1339 (h!2342 (toList!871 lt!73172))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!142721 () Bool)

(assert (=> b!142721 (= e!92985 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73172)))))))

(declare-fun d!45543 () Bool)

(declare-fun c!27010 () Bool)

(assert (=> d!45543 (= c!27010 (and ((_ is Cons!1735) (toList!871 lt!73172)) (= (_1!1339 (h!2342 (toList!871 lt!73172))) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45543 (= (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) e!92985)))

(declare-fun b!142723 () Bool)

(assert (=> b!142723 (= e!92986 (getValueByKey!174 (t!6314 (toList!871 lt!73172)) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45543 c!27010) b!142721))

(assert (= (and d!45543 (not c!27010)) b!142722))

(assert (= (and b!142722 c!27011) b!142723))

(assert (= (and b!142722 (not c!27011)) b!142724))

(assert (=> b!142723 m!166699))

(declare-fun m!171887 () Bool)

(assert (=> b!142723 m!171887))

(assert (=> d!44039 d!45543))

(declare-fun d!45545 () Bool)

(assert (=> d!45545 (= (get!1528 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) (v!3279 (getValueByKey!174 (toList!871 lt!73197) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44111 d!45545))

(assert (=> d!44111 d!44593))

(declare-fun d!45547 () Bool)

(assert (=> d!45547 (= (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!6026 () Bool)

(assert (= bs!6026 d!45547))

(assert (=> bs!6026 m!168307))

(declare-fun m!171889 () Bool)

(assert (=> bs!6026 m!171889))

(assert (=> b!141120 d!45547))

(assert (=> b!141120 d!45543))

(assert (=> b!140878 d!45461))

(declare-fun d!45549 () Bool)

(assert (=> d!45549 (= (apply!120 lt!73850 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73850) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6027 () Bool)

(assert (= bs!6027 d!45549))

(assert (=> bs!6027 m!170355))

(assert (=> bs!6027 m!170355))

(declare-fun m!171891 () Bool)

(assert (=> bs!6027 m!171891))

(assert (=> b!141037 d!45549))

(declare-fun d!45551 () Bool)

(assert (=> d!45551 (= (apply!120 lt!73893 lt!73888) (get!1528 (getValueByKey!174 (toList!871 lt!73893) lt!73888)))))

(declare-fun bs!6028 () Bool)

(assert (= bs!6028 d!45551))

(declare-fun m!171893 () Bool)

(assert (=> bs!6028 m!171893))

(assert (=> bs!6028 m!171893))

(declare-fun m!171895 () Bool)

(assert (=> bs!6028 m!171895))

(assert (=> b!141075 d!45551))

(declare-fun d!45553 () Bool)

(assert (=> d!45553 (= (apply!120 (+!167 lt!73882 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))) lt!73889) (apply!120 lt!73882 lt!73889))))

(declare-fun lt!74663 () Unit!4393)

(assert (=> d!45553 (= lt!74663 (choose!869 lt!73882 lt!73894 (minValue!2789 newMap!16) lt!73889))))

(declare-fun e!92987 () Bool)

(assert (=> d!45553 e!92987))

(declare-fun res!67999 () Bool)

(assert (=> d!45553 (=> (not res!67999) (not e!92987))))

(assert (=> d!45553 (= res!67999 (contains!910 lt!73882 lt!73889))))

(assert (=> d!45553 (= (addApplyDifferent!96 lt!73882 lt!73894 (minValue!2789 newMap!16) lt!73889) lt!74663)))

(declare-fun b!142725 () Bool)

(assert (=> b!142725 (= e!92987 (not (= lt!73889 lt!73894)))))

(assert (= (and d!45553 res!67999) b!142725))

(assert (=> d!45553 m!168747))

(assert (=> d!45553 m!168747))

(assert (=> d!45553 m!168749))

(declare-fun m!171897 () Bool)

(assert (=> d!45553 m!171897))

(assert (=> d!45553 m!168733))

(declare-fun m!171899 () Bool)

(assert (=> d!45553 m!171899))

(assert (=> b!141075 d!45553))

(assert (=> b!141075 d!44553))

(declare-fun d!45555 () Bool)

(declare-fun e!92988 () Bool)

(assert (=> d!45555 e!92988))

(declare-fun res!68001 () Bool)

(assert (=> d!45555 (=> (not res!68001) (not e!92988))))

(declare-fun lt!74666 () ListLongMap!1711)

(assert (=> d!45555 (= res!68001 (contains!910 lt!74666 (_1!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))))))

(declare-fun lt!74667 () List!1739)

(assert (=> d!45555 (= lt!74666 (ListLongMap!1712 lt!74667))))

(declare-fun lt!74664 () Unit!4393)

(declare-fun lt!74665 () Unit!4393)

(assert (=> d!45555 (= lt!74664 lt!74665)))

(assert (=> d!45555 (= (getValueByKey!174 lt!74667 (_1!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))))))

(assert (=> d!45555 (= lt!74665 (lemmaContainsTupThenGetReturnValue!91 lt!74667 (_1!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))))))

(assert (=> d!45555 (= lt!74667 (insertStrictlySorted!94 (toList!871 lt!73893) (_1!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))))))

(assert (=> d!45555 (= (+!167 lt!73893 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))) lt!74666)))

(declare-fun b!142726 () Bool)

(declare-fun res!68000 () Bool)

(assert (=> b!142726 (=> (not res!68000) (not e!92988))))

(assert (=> b!142726 (= res!68000 (= (getValueByKey!174 (toList!871 lt!74666) (_1!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))))))))

(declare-fun b!142727 () Bool)

(assert (=> b!142727 (= e!92988 (contains!914 (toList!871 lt!74666) (tuple2!2657 lt!73891 (minValue!2789 newMap!16))))))

(assert (= (and d!45555 res!68001) b!142726))

(assert (= (and b!142726 res!68000) b!142727))

(declare-fun m!171901 () Bool)

(assert (=> d!45555 m!171901))

(declare-fun m!171903 () Bool)

(assert (=> d!45555 m!171903))

(declare-fun m!171905 () Bool)

(assert (=> d!45555 m!171905))

(declare-fun m!171907 () Bool)

(assert (=> d!45555 m!171907))

(declare-fun m!171909 () Bool)

(assert (=> b!142726 m!171909))

(declare-fun m!171911 () Bool)

(assert (=> b!142727 m!171911))

(assert (=> b!141075 d!45555))

(declare-fun d!45557 () Bool)

(assert (=> d!45557 (= (apply!120 lt!73882 lt!73889) (get!1528 (getValueByKey!174 (toList!871 lt!73882) lt!73889)))))

(declare-fun bs!6029 () Bool)

(assert (= bs!6029 d!45557))

(declare-fun m!171913 () Bool)

(assert (=> bs!6029 m!171913))

(assert (=> bs!6029 m!171913))

(declare-fun m!171915 () Bool)

(assert (=> bs!6029 m!171915))

(assert (=> b!141075 d!45557))

(declare-fun d!45559 () Bool)

(assert (=> d!45559 (= (apply!120 (+!167 lt!73878 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))) lt!73897) (apply!120 lt!73878 lt!73897))))

(declare-fun lt!74668 () Unit!4393)

(assert (=> d!45559 (= lt!74668 (choose!869 lt!73878 lt!73887 (zeroValue!2789 newMap!16) lt!73897))))

(declare-fun e!92989 () Bool)

(assert (=> d!45559 e!92989))

(declare-fun res!68002 () Bool)

(assert (=> d!45559 (=> (not res!68002) (not e!92989))))

(assert (=> d!45559 (= res!68002 (contains!910 lt!73878 lt!73897))))

(assert (=> d!45559 (= (addApplyDifferent!96 lt!73878 lt!73887 (zeroValue!2789 newMap!16) lt!73897) lt!74668)))

(declare-fun b!142728 () Bool)

(assert (=> b!142728 (= e!92989 (not (= lt!73897 lt!73887)))))

(assert (= (and d!45559 res!68002) b!142728))

(assert (=> d!45559 m!168751))

(assert (=> d!45559 m!168751))

(assert (=> d!45559 m!168753))

(declare-fun m!171917 () Bool)

(assert (=> d!45559 m!171917))

(assert (=> d!45559 m!168757))

(declare-fun m!171919 () Bool)

(assert (=> d!45559 m!171919))

(assert (=> b!141075 d!45559))

(declare-fun d!45561 () Bool)

(declare-fun e!92990 () Bool)

(assert (=> d!45561 e!92990))

(declare-fun res!68004 () Bool)

(assert (=> d!45561 (=> (not res!68004) (not e!92990))))

(declare-fun lt!74671 () ListLongMap!1711)

(assert (=> d!45561 (= res!68004 (contains!910 lt!74671 (_1!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))))))

(declare-fun lt!74672 () List!1739)

(assert (=> d!45561 (= lt!74671 (ListLongMap!1712 lt!74672))))

(declare-fun lt!74669 () Unit!4393)

(declare-fun lt!74670 () Unit!4393)

(assert (=> d!45561 (= lt!74669 lt!74670)))

(assert (=> d!45561 (= (getValueByKey!174 lt!74672 (_1!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))))))

(assert (=> d!45561 (= lt!74670 (lemmaContainsTupThenGetReturnValue!91 lt!74672 (_1!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))))))

(assert (=> d!45561 (= lt!74672 (insertStrictlySorted!94 (toList!871 lt!73882) (_1!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))))))

(assert (=> d!45561 (= (+!167 lt!73882 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))) lt!74671)))

(declare-fun b!142729 () Bool)

(declare-fun res!68003 () Bool)

(assert (=> b!142729 (=> (not res!68003) (not e!92990))))

(assert (=> b!142729 (= res!68003 (= (getValueByKey!174 (toList!871 lt!74671) (_1!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))))))))

(declare-fun b!142730 () Bool)

(assert (=> b!142730 (= e!92990 (contains!914 (toList!871 lt!74671) (tuple2!2657 lt!73894 (minValue!2789 newMap!16))))))

(assert (= (and d!45561 res!68004) b!142729))

(assert (= (and b!142729 res!68003) b!142730))

(declare-fun m!171921 () Bool)

(assert (=> d!45561 m!171921))

(declare-fun m!171923 () Bool)

(assert (=> d!45561 m!171923))

(declare-fun m!171925 () Bool)

(assert (=> d!45561 m!171925))

(declare-fun m!171927 () Bool)

(assert (=> d!45561 m!171927))

(declare-fun m!171929 () Bool)

(assert (=> b!142729 m!171929))

(declare-fun m!171931 () Bool)

(assert (=> b!142730 m!171931))

(assert (=> b!141075 d!45561))

(declare-fun d!45563 () Bool)

(assert (=> d!45563 (= (apply!120 (+!167 lt!73893 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))) lt!73888) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73893 (tuple2!2657 lt!73891 (minValue!2789 newMap!16)))) lt!73888)))))

(declare-fun bs!6030 () Bool)

(assert (= bs!6030 d!45563))

(declare-fun m!171933 () Bool)

(assert (=> bs!6030 m!171933))

(assert (=> bs!6030 m!171933))

(declare-fun m!171935 () Bool)

(assert (=> bs!6030 m!171935))

(assert (=> b!141075 d!45563))

(declare-fun d!45565 () Bool)

(assert (=> d!45565 (= (apply!120 (+!167 lt!73878 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))) lt!73897) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73878 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))) lt!73897)))))

(declare-fun bs!6031 () Bool)

(assert (= bs!6031 d!45565))

(declare-fun m!171937 () Bool)

(assert (=> bs!6031 m!171937))

(assert (=> bs!6031 m!171937))

(declare-fun m!171939 () Bool)

(assert (=> bs!6031 m!171939))

(assert (=> b!141075 d!45565))

(declare-fun d!45567 () Bool)

(assert (=> d!45567 (= (apply!120 (+!167 lt!73893 (tuple2!2657 lt!73891 (minValue!2789 newMap!16))) lt!73888) (apply!120 lt!73893 lt!73888))))

(declare-fun lt!74673 () Unit!4393)

(assert (=> d!45567 (= lt!74673 (choose!869 lt!73893 lt!73891 (minValue!2789 newMap!16) lt!73888))))

(declare-fun e!92991 () Bool)

(assert (=> d!45567 e!92991))

(declare-fun res!68005 () Bool)

(assert (=> d!45567 (=> (not res!68005) (not e!92991))))

(assert (=> d!45567 (= res!68005 (contains!910 lt!73893 lt!73888))))

(assert (=> d!45567 (= (addApplyDifferent!96 lt!73893 lt!73891 (minValue!2789 newMap!16) lt!73888) lt!74673)))

(declare-fun b!142731 () Bool)

(assert (=> b!142731 (= e!92991 (not (= lt!73888 lt!73891)))))

(assert (= (and d!45567 res!68005) b!142731))

(assert (=> d!45567 m!168743))

(assert (=> d!45567 m!168743))

(assert (=> d!45567 m!168755))

(declare-fun m!171941 () Bool)

(assert (=> d!45567 m!171941))

(assert (=> d!45567 m!168735))

(declare-fun m!171943 () Bool)

(assert (=> d!45567 m!171943))

(assert (=> b!141075 d!45567))

(declare-fun d!45569 () Bool)

(assert (=> d!45569 (contains!910 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))) lt!73898)))

(declare-fun lt!74674 () Unit!4393)

(assert (=> d!45569 (= lt!74674 (choose!870 lt!73892 lt!73881 (zeroValue!2789 newMap!16) lt!73898))))

(assert (=> d!45569 (contains!910 lt!73892 lt!73898)))

(assert (=> d!45569 (= (addStillContains!96 lt!73892 lt!73881 (zeroValue!2789 newMap!16) lt!73898) lt!74674)))

(declare-fun bs!6032 () Bool)

(assert (= bs!6032 d!45569))

(assert (=> bs!6032 m!168739))

(assert (=> bs!6032 m!168739))

(assert (=> bs!6032 m!168745))

(declare-fun m!171945 () Bool)

(assert (=> bs!6032 m!171945))

(declare-fun m!171947 () Bool)

(assert (=> bs!6032 m!171947))

(assert (=> b!141075 d!45569))

(declare-fun d!45571 () Bool)

(assert (=> d!45571 (= (apply!120 lt!73878 lt!73897) (get!1528 (getValueByKey!174 (toList!871 lt!73878) lt!73897)))))

(declare-fun bs!6033 () Bool)

(assert (= bs!6033 d!45571))

(declare-fun m!171949 () Bool)

(assert (=> bs!6033 m!171949))

(assert (=> bs!6033 m!171949))

(declare-fun m!171951 () Bool)

(assert (=> bs!6033 m!171951))

(assert (=> b!141075 d!45571))

(declare-fun d!45573 () Bool)

(declare-fun e!92992 () Bool)

(assert (=> d!45573 e!92992))

(declare-fun res!68007 () Bool)

(assert (=> d!45573 (=> (not res!68007) (not e!92992))))

(declare-fun lt!74677 () ListLongMap!1711)

(assert (=> d!45573 (= res!68007 (contains!910 lt!74677 (_1!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74678 () List!1739)

(assert (=> d!45573 (= lt!74677 (ListLongMap!1712 lt!74678))))

(declare-fun lt!74675 () Unit!4393)

(declare-fun lt!74676 () Unit!4393)

(assert (=> d!45573 (= lt!74675 lt!74676)))

(assert (=> d!45573 (= (getValueByKey!174 lt!74678 (_1!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45573 (= lt!74676 (lemmaContainsTupThenGetReturnValue!91 lt!74678 (_1!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45573 (= lt!74678 (insertStrictlySorted!94 (toList!871 lt!73878) (_1!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45573 (= (+!167 lt!73878 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))) lt!74677)))

(declare-fun b!142732 () Bool)

(declare-fun res!68006 () Bool)

(assert (=> b!142732 (=> (not res!68006) (not e!92992))))

(assert (=> b!142732 (= res!68006 (= (getValueByKey!174 (toList!871 lt!74677) (_1!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142733 () Bool)

(assert (=> b!142733 (= e!92992 (contains!914 (toList!871 lt!74677) (tuple2!2657 lt!73887 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45573 res!68007) b!142732))

(assert (= (and b!142732 res!68006) b!142733))

(declare-fun m!171953 () Bool)

(assert (=> d!45573 m!171953))

(declare-fun m!171955 () Bool)

(assert (=> d!45573 m!171955))

(declare-fun m!171957 () Bool)

(assert (=> d!45573 m!171957))

(declare-fun m!171959 () Bool)

(assert (=> d!45573 m!171959))

(declare-fun m!171961 () Bool)

(assert (=> b!142732 m!171961))

(declare-fun m!171963 () Bool)

(assert (=> b!142733 m!171963))

(assert (=> b!141075 d!45573))

(declare-fun d!45575 () Bool)

(declare-fun e!92993 () Bool)

(assert (=> d!45575 e!92993))

(declare-fun res!68009 () Bool)

(assert (=> d!45575 (=> (not res!68009) (not e!92993))))

(declare-fun lt!74681 () ListLongMap!1711)

(assert (=> d!45575 (= res!68009 (contains!910 lt!74681 (_1!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))))))

(declare-fun lt!74682 () List!1739)

(assert (=> d!45575 (= lt!74681 (ListLongMap!1712 lt!74682))))

(declare-fun lt!74679 () Unit!4393)

(declare-fun lt!74680 () Unit!4393)

(assert (=> d!45575 (= lt!74679 lt!74680)))

(assert (=> d!45575 (= (getValueByKey!174 lt!74682 (_1!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45575 (= lt!74680 (lemmaContainsTupThenGetReturnValue!91 lt!74682 (_1!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45575 (= lt!74682 (insertStrictlySorted!94 (toList!871 lt!73892) (_1!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))))))

(assert (=> d!45575 (= (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))) lt!74681)))

(declare-fun b!142734 () Bool)

(declare-fun res!68008 () Bool)

(assert (=> b!142734 (=> (not res!68008) (not e!92993))))

(assert (=> b!142734 (= res!68008 (= (getValueByKey!174 (toList!871 lt!74681) (_1!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))))))))

(declare-fun b!142735 () Bool)

(assert (=> b!142735 (= e!92993 (contains!914 (toList!871 lt!74681) (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))))))

(assert (= (and d!45575 res!68009) b!142734))

(assert (= (and b!142734 res!68008) b!142735))

(declare-fun m!171965 () Bool)

(assert (=> d!45575 m!171965))

(declare-fun m!171967 () Bool)

(assert (=> d!45575 m!171967))

(declare-fun m!171969 () Bool)

(assert (=> d!45575 m!171969))

(declare-fun m!171971 () Bool)

(assert (=> d!45575 m!171971))

(declare-fun m!171973 () Bool)

(assert (=> b!142734 m!171973))

(declare-fun m!171975 () Bool)

(assert (=> b!142735 m!171975))

(assert (=> b!141075 d!45575))

(declare-fun d!45577 () Bool)

(assert (=> d!45577 (= (apply!120 (+!167 lt!73882 (tuple2!2657 lt!73894 (minValue!2789 newMap!16))) lt!73889) (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73882 (tuple2!2657 lt!73894 (minValue!2789 newMap!16)))) lt!73889)))))

(declare-fun bs!6034 () Bool)

(assert (= bs!6034 d!45577))

(declare-fun m!171977 () Bool)

(assert (=> bs!6034 m!171977))

(assert (=> bs!6034 m!171977))

(declare-fun m!171979 () Bool)

(assert (=> bs!6034 m!171979))

(assert (=> b!141075 d!45577))

(declare-fun d!45579 () Bool)

(declare-fun e!92995 () Bool)

(assert (=> d!45579 e!92995))

(declare-fun res!68010 () Bool)

(assert (=> d!45579 (=> res!68010 e!92995)))

(declare-fun lt!74686 () Bool)

(assert (=> d!45579 (= res!68010 (not lt!74686))))

(declare-fun lt!74685 () Bool)

(assert (=> d!45579 (= lt!74686 lt!74685)))

(declare-fun lt!74684 () Unit!4393)

(declare-fun e!92994 () Unit!4393)

(assert (=> d!45579 (= lt!74684 e!92994)))

(declare-fun c!27012 () Bool)

(assert (=> d!45579 (= c!27012 lt!74685)))

(assert (=> d!45579 (= lt!74685 (containsKey!178 (toList!871 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))) lt!73898))))

(assert (=> d!45579 (= (contains!910 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16))) lt!73898) lt!74686)))

(declare-fun b!142736 () Bool)

(declare-fun lt!74683 () Unit!4393)

(assert (=> b!142736 (= e!92994 lt!74683)))

(assert (=> b!142736 (= lt!74683 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))) lt!73898))))

(assert (=> b!142736 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))) lt!73898))))

(declare-fun b!142737 () Bool)

(declare-fun Unit!4521 () Unit!4393)

(assert (=> b!142737 (= e!92994 Unit!4521)))

(declare-fun b!142738 () Bool)

(assert (=> b!142738 (= e!92995 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73892 (tuple2!2657 lt!73881 (zeroValue!2789 newMap!16)))) lt!73898)))))

(assert (= (and d!45579 c!27012) b!142736))

(assert (= (and d!45579 (not c!27012)) b!142737))

(assert (= (and d!45579 (not res!68010)) b!142738))

(declare-fun m!171981 () Bool)

(assert (=> d!45579 m!171981))

(declare-fun m!171983 () Bool)

(assert (=> b!142736 m!171983))

(declare-fun m!171985 () Bool)

(assert (=> b!142736 m!171985))

(assert (=> b!142736 m!171985))

(declare-fun m!171987 () Bool)

(assert (=> b!142736 m!171987))

(assert (=> b!142738 m!171985))

(assert (=> b!142738 m!171985))

(assert (=> b!142738 m!171987))

(assert (=> b!141075 d!45579))

(declare-fun d!45581 () Bool)

(declare-fun e!92997 () Bool)

(assert (=> d!45581 e!92997))

(declare-fun res!68011 () Bool)

(assert (=> d!45581 (=> res!68011 e!92997)))

(declare-fun lt!74690 () Bool)

(assert (=> d!45581 (= res!68011 (not lt!74690))))

(declare-fun lt!74689 () Bool)

(assert (=> d!45581 (= lt!74690 lt!74689)))

(declare-fun lt!74688 () Unit!4393)

(declare-fun e!92996 () Unit!4393)

(assert (=> d!45581 (= lt!74688 e!92996)))

(declare-fun c!27013 () Bool)

(assert (=> d!45581 (= c!27013 lt!74689)))

(assert (=> d!45581 (= lt!74689 (containsKey!178 (toList!871 lt!73645) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45581 (= (contains!910 lt!73645 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74690)))

(declare-fun b!142739 () Bool)

(declare-fun lt!74687 () Unit!4393)

(assert (=> b!142739 (= e!92996 lt!74687)))

(assert (=> b!142739 (= lt!74687 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73645) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142739 (isDefined!128 (getValueByKey!174 (toList!871 lt!73645) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142740 () Bool)

(declare-fun Unit!4522 () Unit!4393)

(assert (=> b!142740 (= e!92996 Unit!4522)))

(declare-fun b!142741 () Bool)

(assert (=> b!142741 (= e!92997 (isDefined!128 (getValueByKey!174 (toList!871 lt!73645) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45581 c!27013) b!142739))

(assert (= (and d!45581 (not c!27013)) b!142740))

(assert (= (and d!45581 (not res!68011)) b!142741))

(assert (=> d!45581 m!166699))

(declare-fun m!171989 () Bool)

(assert (=> d!45581 m!171989))

(assert (=> b!142739 m!166699))

(declare-fun m!171991 () Bool)

(assert (=> b!142739 m!171991))

(assert (=> b!142739 m!166699))

(assert (=> b!142739 m!171541))

(assert (=> b!142739 m!171541))

(declare-fun m!171993 () Bool)

(assert (=> b!142739 m!171993))

(assert (=> b!142741 m!166699))

(assert (=> b!142741 m!171541))

(assert (=> b!142741 m!171541))

(assert (=> b!142741 m!171993))

(assert (=> b!140709 d!45581))

(declare-fun d!45583 () Bool)

(declare-fun e!92999 () Bool)

(assert (=> d!45583 e!92999))

(declare-fun res!68012 () Bool)

(assert (=> d!45583 (=> res!68012 e!92999)))

(declare-fun lt!74694 () Bool)

(assert (=> d!45583 (= res!68012 (not lt!74694))))

(declare-fun lt!74693 () Bool)

(assert (=> d!45583 (= lt!74694 lt!74693)))

(declare-fun lt!74692 () Unit!4393)

(declare-fun e!92998 () Unit!4393)

(assert (=> d!45583 (= lt!74692 e!92998)))

(declare-fun c!27014 () Bool)

(assert (=> d!45583 (= c!27014 lt!74693)))

(assert (=> d!45583 (= lt!74693 (containsKey!178 (toList!871 lt!73601) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45583 (= (contains!910 lt!73601 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74694)))

(declare-fun b!142742 () Bool)

(declare-fun lt!74691 () Unit!4393)

(assert (=> b!142742 (= e!92998 lt!74691)))

(assert (=> b!142742 (= lt!74691 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73601) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142742 (isDefined!128 (getValueByKey!174 (toList!871 lt!73601) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142743 () Bool)

(declare-fun Unit!4523 () Unit!4393)

(assert (=> b!142743 (= e!92998 Unit!4523)))

(declare-fun b!142744 () Bool)

(assert (=> b!142744 (= e!92999 (isDefined!128 (getValueByKey!174 (toList!871 lt!73601) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45583 c!27014) b!142742))

(assert (= (and d!45583 (not c!27014)) b!142743))

(assert (= (and d!45583 (not res!68012)) b!142744))

(assert (=> d!45583 m!166699))

(declare-fun m!171995 () Bool)

(assert (=> d!45583 m!171995))

(assert (=> b!142742 m!166699))

(declare-fun m!171997 () Bool)

(assert (=> b!142742 m!171997))

(assert (=> b!142742 m!166699))

(declare-fun m!171999 () Bool)

(assert (=> b!142742 m!171999))

(assert (=> b!142742 m!171999))

(declare-fun m!172001 () Bool)

(assert (=> b!142742 m!172001))

(assert (=> b!142744 m!166699))

(assert (=> b!142744 m!171999))

(assert (=> b!142744 m!171999))

(assert (=> b!142744 m!172001))

(assert (=> b!140603 d!45583))

(declare-fun d!45585 () Bool)

(declare-fun e!93001 () Bool)

(assert (=> d!45585 e!93001))

(declare-fun res!68013 () Bool)

(assert (=> d!45585 (=> res!68013 e!93001)))

(declare-fun lt!74698 () Bool)

(assert (=> d!45585 (= res!68013 (not lt!74698))))

(declare-fun lt!74697 () Bool)

(assert (=> d!45585 (= lt!74698 lt!74697)))

(declare-fun lt!74696 () Unit!4393)

(declare-fun e!93000 () Unit!4393)

(assert (=> d!45585 (= lt!74696 e!93000)))

(declare-fun c!27015 () Bool)

(assert (=> d!45585 (= c!27015 lt!74697)))

(assert (=> d!45585 (= lt!74697 (containsKey!178 (toList!871 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45585 (= (contains!910 lt!73441 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74698)))

(declare-fun b!142745 () Bool)

(declare-fun lt!74695 () Unit!4393)

(assert (=> b!142745 (= e!93000 lt!74695)))

(assert (=> b!142745 (= lt!74695 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142745 (isDefined!128 (getValueByKey!174 (toList!871 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142746 () Bool)

(declare-fun Unit!4524 () Unit!4393)

(assert (=> b!142746 (= e!93000 Unit!4524)))

(declare-fun b!142747 () Bool)

(assert (=> b!142747 (= e!93001 (isDefined!128 (getValueByKey!174 (toList!871 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45585 c!27015) b!142745))

(assert (= (and d!45585 (not c!27015)) b!142746))

(assert (= (and d!45585 (not res!68013)) b!142747))

(declare-fun m!172003 () Bool)

(assert (=> d!45585 m!172003))

(declare-fun m!172005 () Bool)

(assert (=> b!142745 m!172005))

(assert (=> b!142745 m!171279))

(assert (=> b!142745 m!171279))

(declare-fun m!172007 () Bool)

(assert (=> b!142745 m!172007))

(assert (=> b!142747 m!171279))

(assert (=> b!142747 m!171279))

(assert (=> b!142747 m!172007))

(assert (=> bm!15563 d!45585))

(declare-fun d!45587 () Bool)

(declare-fun e!93003 () Bool)

(assert (=> d!45587 e!93003))

(declare-fun res!68014 () Bool)

(assert (=> d!45587 (=> res!68014 e!93003)))

(declare-fun lt!74702 () Bool)

(assert (=> d!45587 (= res!68014 (not lt!74702))))

(declare-fun lt!74701 () Bool)

(assert (=> d!45587 (= lt!74702 lt!74701)))

(declare-fun lt!74700 () Unit!4393)

(declare-fun e!93002 () Unit!4393)

(assert (=> d!45587 (= lt!74700 e!93002)))

(declare-fun c!27016 () Bool)

(assert (=> d!45587 (= c!27016 lt!74701)))

(assert (=> d!45587 (= lt!74701 (containsKey!178 (toList!871 lt!73588) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (=> d!45587 (= (contains!910 lt!73588 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!74702)))

(declare-fun b!142748 () Bool)

(declare-fun lt!74699 () Unit!4393)

(assert (=> b!142748 (= e!93002 lt!74699)))

(assert (=> b!142748 (= lt!74699 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73588) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (=> b!142748 (isDefined!128 (getValueByKey!174 (toList!871 lt!73588) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun b!142749 () Bool)

(declare-fun Unit!4525 () Unit!4393)

(assert (=> b!142749 (= e!93002 Unit!4525)))

(declare-fun b!142750 () Bool)

(assert (=> b!142750 (= e!93003 (isDefined!128 (getValueByKey!174 (toList!871 lt!73588) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(assert (= (and d!45587 c!27016) b!142748))

(assert (= (and d!45587 (not c!27016)) b!142749))

(assert (= (and d!45587 (not res!68014)) b!142750))

(declare-fun m!172009 () Bool)

(assert (=> d!45587 m!172009))

(declare-fun m!172011 () Bool)

(assert (=> b!142748 m!172011))

(assert (=> b!142748 m!167755))

(assert (=> b!142748 m!167755))

(declare-fun m!172013 () Bool)

(assert (=> b!142748 m!172013))

(assert (=> b!142750 m!167755))

(assert (=> b!142750 m!167755))

(assert (=> b!142750 m!172013))

(assert (=> d!43849 d!45587))

(declare-fun b!142754 () Bool)

(declare-fun e!93005 () Option!180)

(assert (=> b!142754 (= e!93005 None!178)))

(declare-fun b!142752 () Bool)

(declare-fun e!93004 () Option!180)

(assert (=> b!142752 (= e!93004 e!93005)))

(declare-fun c!27018 () Bool)

(assert (=> b!142752 (= c!27018 (and ((_ is Cons!1735) lt!73589) (not (= (_1!1339 (h!2342 lt!73589)) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))))

(declare-fun b!142751 () Bool)

(assert (=> b!142751 (= e!93004 (Some!179 (_2!1339 (h!2342 lt!73589))))))

(declare-fun c!27017 () Bool)

(declare-fun d!45589 () Bool)

(assert (=> d!45589 (= c!27017 (and ((_ is Cons!1735) lt!73589) (= (_1!1339 (h!2342 lt!73589)) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(assert (=> d!45589 (= (getValueByKey!174 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) e!93004)))

(declare-fun b!142753 () Bool)

(assert (=> b!142753 (= e!93005 (getValueByKey!174 (t!6314 lt!73589) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(assert (= (and d!45589 c!27017) b!142751))

(assert (= (and d!45589 (not c!27017)) b!142752))

(assert (= (and b!142752 c!27018) b!142753))

(assert (= (and b!142752 (not c!27018)) b!142754))

(declare-fun m!172015 () Bool)

(assert (=> b!142753 m!172015))

(assert (=> d!43849 d!45589))

(declare-fun d!45591 () Bool)

(assert (=> d!45591 (= (getValueByKey!174 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun lt!74703 () Unit!4393)

(assert (=> d!45591 (= lt!74703 (choose!872 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun e!93006 () Bool)

(assert (=> d!45591 e!93006))

(declare-fun res!68015 () Bool)

(assert (=> d!45591 (=> (not res!68015) (not e!93006))))

(assert (=> d!45591 (= res!68015 (isStrictlySorted!320 lt!73589))))

(assert (=> d!45591 (= (lemmaContainsTupThenGetReturnValue!91 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!74703)))

(declare-fun b!142755 () Bool)

(declare-fun res!68016 () Bool)

(assert (=> b!142755 (=> (not res!68016) (not e!93006))))

(assert (=> b!142755 (= res!68016 (containsKey!178 lt!73589 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun b!142756 () Bool)

(assert (=> b!142756 (= e!93006 (contains!914 lt!73589 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(assert (= (and d!45591 res!68015) b!142755))

(assert (= (and b!142755 res!68016) b!142756))

(assert (=> d!45591 m!167749))

(declare-fun m!172017 () Bool)

(assert (=> d!45591 m!172017))

(declare-fun m!172019 () Bool)

(assert (=> d!45591 m!172019))

(declare-fun m!172021 () Bool)

(assert (=> b!142755 m!172021))

(declare-fun m!172023 () Bool)

(assert (=> b!142756 m!172023))

(assert (=> d!43849 d!45591))

(declare-fun b!142757 () Bool)

(declare-fun e!93009 () List!1739)

(declare-fun call!15761 () List!1739)

(assert (=> b!142757 (= e!93009 call!15761)))

(declare-fun b!142758 () Bool)

(declare-fun e!93007 () List!1739)

(declare-fun call!15760 () List!1739)

(assert (=> b!142758 (= e!93007 call!15760)))

(declare-fun lt!74704 () List!1739)

(declare-fun b!142759 () Bool)

(declare-fun e!93010 () Bool)

(assert (=> b!142759 (= e!93010 (contains!914 lt!74704 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(declare-fun c!27022 () Bool)

(declare-fun bm!15756 () Bool)

(declare-fun e!93008 () List!1739)

(assert (=> bm!15756 (= call!15761 ($colon$colon!93 e!93008 (ite c!27022 (h!2342 (toList!871 lt!73210)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))))

(declare-fun c!27019 () Bool)

(assert (=> bm!15756 (= c!27019 c!27022)))

(declare-fun bm!15757 () Bool)

(declare-fun call!15759 () List!1739)

(assert (=> bm!15757 (= call!15760 call!15759)))

(declare-fun b!142760 () Bool)

(declare-fun res!68017 () Bool)

(assert (=> b!142760 (=> (not res!68017) (not e!93010))))

(assert (=> b!142760 (= res!68017 (containsKey!178 lt!74704 (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun d!45593 () Bool)

(assert (=> d!45593 e!93010))

(declare-fun res!68018 () Bool)

(assert (=> d!45593 (=> (not res!68018) (not e!93010))))

(assert (=> d!45593 (= res!68018 (isStrictlySorted!320 lt!74704))))

(assert (=> d!45593 (= lt!74704 e!93009)))

(assert (=> d!45593 (= c!27022 (and ((_ is Cons!1735) (toList!871 lt!73210)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73210))) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(assert (=> d!45593 (isStrictlySorted!320 (toList!871 lt!73210))))

(assert (=> d!45593 (= (insertStrictlySorted!94 (toList!871 lt!73210) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))) lt!74704)))

(declare-fun c!27021 () Bool)

(declare-fun c!27020 () Bool)

(declare-fun b!142761 () Bool)

(assert (=> b!142761 (= e!93008 (ite c!27021 (t!6314 (toList!871 lt!73210)) (ite c!27020 (Cons!1735 (h!2342 (toList!871 lt!73210)) (t!6314 (toList!871 lt!73210))) Nil!1736)))))

(declare-fun b!142762 () Bool)

(assert (=> b!142762 (= c!27020 (and ((_ is Cons!1735) (toList!871 lt!73210)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73210))) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(declare-fun e!93011 () List!1739)

(assert (=> b!142762 (= e!93011 e!93007)))

(declare-fun b!142763 () Bool)

(assert (=> b!142763 (= e!93007 call!15760)))

(declare-fun b!142764 () Bool)

(assert (=> b!142764 (= e!93008 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73210)) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16)))))))

(declare-fun bm!15758 () Bool)

(assert (=> bm!15758 (= call!15759 call!15761)))

(declare-fun b!142765 () Bool)

(assert (=> b!142765 (= e!93009 e!93011)))

(assert (=> b!142765 (= c!27021 (and ((_ is Cons!1735) (toList!871 lt!73210)) (= (_1!1339 (h!2342 (toList!871 lt!73210))) (_1!1339 (tuple2!2657 lt!73208 (minValue!2789 newMap!16))))))))

(declare-fun b!142766 () Bool)

(assert (=> b!142766 (= e!93011 call!15759)))

(assert (= (and d!45593 c!27022) b!142757))

(assert (= (and d!45593 (not c!27022)) b!142765))

(assert (= (and b!142765 c!27021) b!142766))

(assert (= (and b!142765 (not c!27021)) b!142762))

(assert (= (and b!142762 c!27020) b!142758))

(assert (= (and b!142762 (not c!27020)) b!142763))

(assert (= (or b!142758 b!142763) bm!15757))

(assert (= (or b!142766 bm!15757) bm!15758))

(assert (= (or b!142757 bm!15758) bm!15756))

(assert (= (and bm!15756 c!27019) b!142764))

(assert (= (and bm!15756 (not c!27019)) b!142761))

(assert (= (and d!45593 res!68018) b!142760))

(assert (= (and b!142760 res!68017) b!142759))

(declare-fun m!172025 () Bool)

(assert (=> b!142760 m!172025))

(declare-fun m!172027 () Bool)

(assert (=> b!142764 m!172027))

(declare-fun m!172029 () Bool)

(assert (=> bm!15756 m!172029))

(declare-fun m!172031 () Bool)

(assert (=> b!142759 m!172031))

(declare-fun m!172033 () Bool)

(assert (=> d!45593 m!172033))

(declare-fun m!172035 () Bool)

(assert (=> d!45593 m!172035))

(assert (=> d!43849 d!45593))

(declare-fun d!45595 () Bool)

(declare-fun e!93013 () Bool)

(assert (=> d!45595 e!93013))

(declare-fun res!68019 () Bool)

(assert (=> d!45595 (=> res!68019 e!93013)))

(declare-fun lt!74708 () Bool)

(assert (=> d!45595 (= res!68019 (not lt!74708))))

(declare-fun lt!74707 () Bool)

(assert (=> d!45595 (= lt!74708 lt!74707)))

(declare-fun lt!74706 () Unit!4393)

(declare-fun e!93012 () Unit!4393)

(assert (=> d!45595 (= lt!74706 e!93012)))

(declare-fun c!27023 () Bool)

(assert (=> d!45595 (= c!27023 lt!74707)))

(assert (=> d!45595 (= lt!74707 (containsKey!178 (toList!871 lt!73635) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45595 (= (contains!910 lt!73635 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74708)))

(declare-fun b!142767 () Bool)

(declare-fun lt!74705 () Unit!4393)

(assert (=> b!142767 (= e!93012 lt!74705)))

(assert (=> b!142767 (= lt!74705 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73635) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> b!142767 (isDefined!128 (getValueByKey!174 (toList!871 lt!73635) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142768 () Bool)

(declare-fun Unit!4526 () Unit!4393)

(assert (=> b!142768 (= e!93012 Unit!4526)))

(declare-fun b!142769 () Bool)

(assert (=> b!142769 (= e!93013 (isDefined!128 (getValueByKey!174 (toList!871 lt!73635) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!45595 c!27023) b!142767))

(assert (= (and d!45595 (not c!27023)) b!142768))

(assert (= (and d!45595 (not res!68019)) b!142769))

(declare-fun m!172037 () Bool)

(assert (=> d!45595 m!172037))

(declare-fun m!172039 () Bool)

(assert (=> b!142767 m!172039))

(assert (=> b!142767 m!167947))

(assert (=> b!142767 m!167947))

(declare-fun m!172041 () Bool)

(assert (=> b!142767 m!172041))

(assert (=> b!142769 m!167947))

(assert (=> b!142769 m!167947))

(assert (=> b!142769 m!172041))

(assert (=> d!43919 d!45595))

(declare-fun b!142773 () Bool)

(declare-fun e!93015 () Option!180)

(assert (=> b!142773 (= e!93015 None!178)))

(declare-fun b!142771 () Bool)

(declare-fun e!93014 () Option!180)

(assert (=> b!142771 (= e!93014 e!93015)))

(declare-fun c!27025 () Bool)

(assert (=> b!142771 (= c!27025 (and ((_ is Cons!1735) lt!73636) (not (= (_1!1339 (h!2342 lt!73636)) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun b!142770 () Bool)

(assert (=> b!142770 (= e!93014 (Some!179 (_2!1339 (h!2342 lt!73636))))))

(declare-fun c!27024 () Bool)

(declare-fun d!45597 () Bool)

(assert (=> d!45597 (= c!27024 (and ((_ is Cons!1735) lt!73636) (= (_1!1339 (h!2342 lt!73636)) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!45597 (= (getValueByKey!174 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) e!93014)))

(declare-fun b!142772 () Bool)

(assert (=> b!142772 (= e!93015 (getValueByKey!174 (t!6314 lt!73636) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (= (and d!45597 c!27024) b!142770))

(assert (= (and d!45597 (not c!27024)) b!142771))

(assert (= (and b!142771 c!27025) b!142772))

(assert (= (and b!142771 (not c!27025)) b!142773))

(declare-fun m!172043 () Bool)

(assert (=> b!142772 m!172043))

(assert (=> d!43919 d!45597))

(declare-fun d!45599 () Bool)

(assert (=> d!45599 (= (getValueByKey!174 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74709 () Unit!4393)

(assert (=> d!45599 (= lt!74709 (choose!872 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun e!93016 () Bool)

(assert (=> d!45599 e!93016))

(declare-fun res!68020 () Bool)

(assert (=> d!45599 (=> (not res!68020) (not e!93016))))

(assert (=> d!45599 (= res!68020 (isStrictlySorted!320 lt!73636))))

(assert (=> d!45599 (= (lemmaContainsTupThenGetReturnValue!91 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74709)))

(declare-fun b!142774 () Bool)

(declare-fun res!68021 () Bool)

(assert (=> b!142774 (=> (not res!68021) (not e!93016))))

(assert (=> b!142774 (= res!68021 (containsKey!178 lt!73636 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun b!142775 () Bool)

(assert (=> b!142775 (= e!93016 (contains!914 lt!73636 (tuple2!2657 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (= (and d!45599 res!68020) b!142774))

(assert (= (and b!142774 res!68021) b!142775))

(assert (=> d!45599 m!167941))

(declare-fun m!172045 () Bool)

(assert (=> d!45599 m!172045))

(declare-fun m!172047 () Bool)

(assert (=> d!45599 m!172047))

(declare-fun m!172049 () Bool)

(assert (=> b!142774 m!172049))

(declare-fun m!172051 () Bool)

(assert (=> b!142775 m!172051))

(assert (=> d!43919 d!45599))

(declare-fun b!142776 () Bool)

(declare-fun e!93019 () List!1739)

(declare-fun call!15764 () List!1739)

(assert (=> b!142776 (= e!93019 call!15764)))

(declare-fun b!142777 () Bool)

(declare-fun e!93017 () List!1739)

(declare-fun call!15763 () List!1739)

(assert (=> b!142777 (= e!93017 call!15763)))

(declare-fun lt!74710 () List!1739)

(declare-fun b!142778 () Bool)

(declare-fun e!93020 () Bool)

(assert (=> b!142778 (= e!93020 (contains!914 lt!74710 (tuple2!2657 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun c!27029 () Bool)

(declare-fun e!93018 () List!1739)

(declare-fun bm!15759 () Bool)

(assert (=> bm!15759 (= call!15764 ($colon$colon!93 e!93018 (ite c!27029 (h!2342 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (tuple2!2657 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))))

(declare-fun c!27026 () Bool)

(assert (=> bm!15759 (= c!27026 c!27029)))

(declare-fun bm!15760 () Bool)

(declare-fun call!15762 () List!1739)

(assert (=> bm!15760 (= call!15763 call!15762)))

(declare-fun b!142779 () Bool)

(declare-fun res!68022 () Bool)

(assert (=> b!142779 (=> (not res!68022) (not e!93020))))

(assert (=> b!142779 (= res!68022 (containsKey!178 lt!74710 (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun d!45601 () Bool)

(assert (=> d!45601 e!93020))

(declare-fun res!68023 () Bool)

(assert (=> d!45601 (=> (not res!68023) (not e!93020))))

(assert (=> d!45601 (= res!68023 (isStrictlySorted!320 lt!74710))))

(assert (=> d!45601 (= lt!74710 e!93019)))

(assert (=> d!45601 (= c!27029 (and ((_ is Cons!1735) (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (bvslt (_1!1339 (h!2342 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(assert (=> d!45601 (isStrictlySorted!320 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))))))

(assert (=> d!45601 (= (insertStrictlySorted!94 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) lt!74710)))

(declare-fun c!27027 () Bool)

(declare-fun c!27028 () Bool)

(declare-fun b!142780 () Bool)

(assert (=> b!142780 (= e!93018 (ite c!27028 (t!6314 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (ite c!27027 (Cons!1735 (h!2342 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (t!6314 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))))) Nil!1736)))))

(declare-fun b!142781 () Bool)

(assert (=> b!142781 (= c!27027 (and ((_ is Cons!1735) (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (bvsgt (_1!1339 (h!2342 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun e!93021 () List!1739)

(assert (=> b!142781 (= e!93021 e!93017)))

(declare-fun b!142782 () Bool)

(assert (=> b!142782 (= e!93017 call!15763)))

(declare-fun b!142783 () Bool)

(assert (=> b!142783 (= e!93018 (insertStrictlySorted!94 (t!6314 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun bm!15761 () Bool)

(assert (=> bm!15761 (= call!15762 call!15764)))

(declare-fun b!142784 () Bool)

(assert (=> b!142784 (= e!93019 e!93021)))

(assert (=> b!142784 (= c!27028 (and ((_ is Cons!1735) (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521)))) (= (_1!1339 (h!2342 (toList!871 (ite c!26248 call!15523 (ite c!26251 call!15526 call!15521))))) (_1!1339 (ite (or c!26248 c!26251) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142785 () Bool)

(assert (=> b!142785 (= e!93021 call!15762)))

(assert (= (and d!45601 c!27029) b!142776))

(assert (= (and d!45601 (not c!27029)) b!142784))

(assert (= (and b!142784 c!27028) b!142785))

(assert (= (and b!142784 (not c!27028)) b!142781))

(assert (= (and b!142781 c!27027) b!142777))

(assert (= (and b!142781 (not c!27027)) b!142782))

(assert (= (or b!142777 b!142782) bm!15760))

(assert (= (or b!142785 bm!15760) bm!15761))

(assert (= (or b!142776 bm!15761) bm!15759))

(assert (= (and bm!15759 c!27026) b!142783))

(assert (= (and bm!15759 (not c!27026)) b!142780))

(assert (= (and d!45601 res!68023) b!142779))

(assert (= (and b!142779 res!68022) b!142778))

(declare-fun m!172053 () Bool)

(assert (=> b!142779 m!172053))

(declare-fun m!172055 () Bool)

(assert (=> b!142783 m!172055))

(declare-fun m!172057 () Bool)

(assert (=> bm!15759 m!172057))

(declare-fun m!172059 () Bool)

(assert (=> b!142778 m!172059))

(declare-fun m!172061 () Bool)

(assert (=> d!45601 m!172061))

(declare-fun m!172063 () Bool)

(assert (=> d!45601 m!172063))

(assert (=> d!43919 d!45601))

(declare-fun b!142789 () Bool)

(declare-fun e!93023 () Option!180)

(assert (=> b!142789 (= e!93023 None!178)))

(declare-fun b!142787 () Bool)

(declare-fun e!93022 () Option!180)

(assert (=> b!142787 (= e!93022 e!93023)))

(declare-fun c!27031 () Bool)

(assert (=> b!142787 (= c!27031 (and ((_ is Cons!1735) (t!6314 lt!73280)) (not (= (_1!1339 (h!2342 (t!6314 lt!73280))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142786 () Bool)

(assert (=> b!142786 (= e!93022 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73280)))))))

(declare-fun d!45603 () Bool)

(declare-fun c!27030 () Bool)

(assert (=> d!45603 (= c!27030 (and ((_ is Cons!1735) (t!6314 lt!73280)) (= (_1!1339 (h!2342 (t!6314 lt!73280))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45603 (= (getValueByKey!174 (t!6314 lt!73280) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93022)))

(declare-fun b!142788 () Bool)

(assert (=> b!142788 (= e!93023 (getValueByKey!174 (t!6314 (t!6314 lt!73280)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45603 c!27030) b!142786))

(assert (= (and d!45603 (not c!27030)) b!142787))

(assert (= (and b!142787 c!27031) b!142788))

(assert (= (and b!142787 (not c!27031)) b!142789))

(declare-fun m!172065 () Bool)

(assert (=> b!142788 m!172065))

(assert (=> b!140923 d!45603))

(declare-fun lt!74711 () Bool)

(declare-fun d!45605 () Bool)

(assert (=> d!45605 (= lt!74711 (select (content!138 (t!6314 (toList!871 lt!73390))) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun e!93025 () Bool)

(assert (=> d!45605 (= lt!74711 e!93025)))

(declare-fun res!68024 () Bool)

(assert (=> d!45605 (=> (not res!68024) (not e!93025))))

(assert (=> d!45605 (= res!68024 ((_ is Cons!1735) (t!6314 (toList!871 lt!73390))))))

(assert (=> d!45605 (= (contains!914 (t!6314 (toList!871 lt!73390)) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) lt!74711)))

(declare-fun b!142790 () Bool)

(declare-fun e!93024 () Bool)

(assert (=> b!142790 (= e!93025 e!93024)))

(declare-fun res!68025 () Bool)

(assert (=> b!142790 (=> res!68025 e!93024)))

(assert (=> b!142790 (= res!68025 (= (h!2342 (t!6314 (toList!871 lt!73390))) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(declare-fun b!142791 () Bool)

(assert (=> b!142791 (= e!93024 (contains!914 (t!6314 (t!6314 (toList!871 lt!73390))) (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))

(assert (= (and d!45605 res!68024) b!142790))

(assert (= (and b!142790 (not res!68025)) b!142791))

(assert (=> d!45605 m!169845))

(declare-fun m!172067 () Bool)

(assert (=> d!45605 m!172067))

(declare-fun m!172069 () Bool)

(assert (=> b!142791 m!172069))

(assert (=> b!140465 d!45605))

(declare-fun d!45607 () Bool)

(declare-fun e!93027 () Bool)

(assert (=> d!45607 e!93027))

(declare-fun res!68026 () Bool)

(assert (=> d!45607 (=> res!68026 e!93027)))

(declare-fun lt!74715 () Bool)

(assert (=> d!45607 (= res!68026 (not lt!74715))))

(declare-fun lt!74714 () Bool)

(assert (=> d!45607 (= lt!74715 lt!74714)))

(declare-fun lt!74713 () Unit!4393)

(declare-fun e!93026 () Unit!4393)

(assert (=> d!45607 (= lt!74713 e!93026)))

(declare-fun c!27032 () Bool)

(assert (=> d!45607 (= c!27032 lt!74714)))

(assert (=> d!45607 (= lt!74714 (containsKey!178 (toList!871 lt!73421) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!45607 (= (contains!910 lt!73421 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74715)))

(declare-fun b!142792 () Bool)

(declare-fun lt!74712 () Unit!4393)

(assert (=> b!142792 (= e!93026 lt!74712)))

(assert (=> b!142792 (= lt!74712 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73421) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> b!142792 (isDefined!128 (getValueByKey!174 (toList!871 lt!73421) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142793 () Bool)

(declare-fun Unit!4527 () Unit!4393)

(assert (=> b!142793 (= e!93026 Unit!4527)))

(declare-fun b!142794 () Bool)

(assert (=> b!142794 (= e!93027 (isDefined!128 (getValueByKey!174 (toList!871 lt!73421) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45607 c!27032) b!142792))

(assert (= (and d!45607 (not c!27032)) b!142793))

(assert (= (and d!45607 (not res!68026)) b!142794))

(declare-fun m!172071 () Bool)

(assert (=> d!45607 m!172071))

(declare-fun m!172073 () Bool)

(assert (=> b!142792 m!172073))

(assert (=> b!142792 m!167247))

(assert (=> b!142792 m!167247))

(declare-fun m!172075 () Bool)

(assert (=> b!142792 m!172075))

(assert (=> b!142794 m!167247))

(assert (=> b!142794 m!167247))

(assert (=> b!142794 m!172075))

(assert (=> d!43701 d!45607))

(declare-fun b!142798 () Bool)

(declare-fun e!93029 () Option!180)

(assert (=> b!142798 (= e!93029 None!178)))

(declare-fun b!142796 () Bool)

(declare-fun e!93028 () Option!180)

(assert (=> b!142796 (= e!93028 e!93029)))

(declare-fun c!27034 () Bool)

(assert (=> b!142796 (= c!27034 (and ((_ is Cons!1735) lt!73422) (not (= (_1!1339 (h!2342 lt!73422)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142795 () Bool)

(assert (=> b!142795 (= e!93028 (Some!179 (_2!1339 (h!2342 lt!73422))))))

(declare-fun d!45609 () Bool)

(declare-fun c!27033 () Bool)

(assert (=> d!45609 (= c!27033 (and ((_ is Cons!1735) lt!73422) (= (_1!1339 (h!2342 lt!73422)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45609 (= (getValueByKey!174 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!93028)))

(declare-fun b!142797 () Bool)

(assert (=> b!142797 (= e!93029 (getValueByKey!174 (t!6314 lt!73422) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!45609 c!27033) b!142795))

(assert (= (and d!45609 (not c!27033)) b!142796))

(assert (= (and b!142796 c!27034) b!142797))

(assert (= (and b!142796 (not c!27034)) b!142798))

(declare-fun m!172077 () Bool)

(assert (=> b!142797 m!172077))

(assert (=> d!43701 d!45609))

(declare-fun d!45611 () Bool)

(assert (=> d!45611 (= (getValueByKey!174 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!74716 () Unit!4393)

(assert (=> d!45611 (= lt!74716 (choose!872 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!93030 () Bool)

(assert (=> d!45611 e!93030))

(declare-fun res!68027 () Bool)

(assert (=> d!45611 (=> (not res!68027) (not e!93030))))

(assert (=> d!45611 (= res!68027 (isStrictlySorted!320 lt!73422))))

(assert (=> d!45611 (= (lemmaContainsTupThenGetReturnValue!91 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74716)))

(declare-fun b!142799 () Bool)

(declare-fun res!68028 () Bool)

(assert (=> b!142799 (=> (not res!68028) (not e!93030))))

(assert (=> b!142799 (= res!68028 (containsKey!178 lt!73422 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142800 () Bool)

(assert (=> b!142800 (= e!93030 (contains!914 lt!73422 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45611 res!68027) b!142799))

(assert (= (and b!142799 res!68028) b!142800))

(assert (=> d!45611 m!167241))

(declare-fun m!172079 () Bool)

(assert (=> d!45611 m!172079))

(declare-fun m!172081 () Bool)

(assert (=> d!45611 m!172081))

(declare-fun m!172083 () Bool)

(assert (=> b!142799 m!172083))

(declare-fun m!172085 () Bool)

(assert (=> b!142800 m!172085))

(assert (=> d!43701 d!45611))

(declare-fun b!142801 () Bool)

(declare-fun e!93033 () List!1739)

(declare-fun call!15767 () List!1739)

(assert (=> b!142801 (= e!93033 call!15767)))

(declare-fun b!142802 () Bool)

(declare-fun e!93031 () List!1739)

(declare-fun call!15766 () List!1739)

(assert (=> b!142802 (= e!93031 call!15766)))

(declare-fun lt!74717 () List!1739)

(declare-fun e!93034 () Bool)

(declare-fun b!142803 () Bool)

(assert (=> b!142803 (= e!93034 (contains!914 lt!74717 (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!93032 () List!1739)

(declare-fun c!27038 () Bool)

(declare-fun bm!15762 () Bool)

(assert (=> bm!15762 (= call!15767 ($colon$colon!93 e!93032 (ite c!27038 (h!2342 (toList!871 call!15514)) (tuple2!2657 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!27035 () Bool)

(assert (=> bm!15762 (= c!27035 c!27038)))

(declare-fun bm!15763 () Bool)

(declare-fun call!15765 () List!1739)

(assert (=> bm!15763 (= call!15766 call!15765)))

(declare-fun b!142804 () Bool)

(declare-fun res!68029 () Bool)

(assert (=> b!142804 (=> (not res!68029) (not e!93034))))

(assert (=> b!142804 (= res!68029 (containsKey!178 lt!74717 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun d!45613 () Bool)

(assert (=> d!45613 e!93034))

(declare-fun res!68030 () Bool)

(assert (=> d!45613 (=> (not res!68030) (not e!93034))))

(assert (=> d!45613 (= res!68030 (isStrictlySorted!320 lt!74717))))

(assert (=> d!45613 (= lt!74717 e!93033)))

(assert (=> d!45613 (= c!27038 (and ((_ is Cons!1735) (toList!871 call!15514)) (bvslt (_1!1339 (h!2342 (toList!871 call!15514))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45613 (isStrictlySorted!320 (toList!871 call!15514))))

(assert (=> d!45613 (= (insertStrictlySorted!94 (toList!871 call!15514) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74717)))

(declare-fun c!27036 () Bool)

(declare-fun c!27037 () Bool)

(declare-fun b!142805 () Bool)

(assert (=> b!142805 (= e!93032 (ite c!27037 (t!6314 (toList!871 call!15514)) (ite c!27036 (Cons!1735 (h!2342 (toList!871 call!15514)) (t!6314 (toList!871 call!15514))) Nil!1736)))))

(declare-fun b!142806 () Bool)

(assert (=> b!142806 (= c!27036 (and ((_ is Cons!1735) (toList!871 call!15514)) (bvsgt (_1!1339 (h!2342 (toList!871 call!15514))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!93035 () List!1739)

(assert (=> b!142806 (= e!93035 e!93031)))

(declare-fun b!142807 () Bool)

(assert (=> b!142807 (= e!93031 call!15766)))

(declare-fun b!142808 () Bool)

(assert (=> b!142808 (= e!93032 (insertStrictlySorted!94 (t!6314 (toList!871 call!15514)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun bm!15764 () Bool)

(assert (=> bm!15764 (= call!15765 call!15767)))

(declare-fun b!142809 () Bool)

(assert (=> b!142809 (= e!93033 e!93035)))

(assert (=> b!142809 (= c!27037 (and ((_ is Cons!1735) (toList!871 call!15514)) (= (_1!1339 (h!2342 (toList!871 call!15514))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142810 () Bool)

(assert (=> b!142810 (= e!93035 call!15765)))

(assert (= (and d!45613 c!27038) b!142801))

(assert (= (and d!45613 (not c!27038)) b!142809))

(assert (= (and b!142809 c!27037) b!142810))

(assert (= (and b!142809 (not c!27037)) b!142806))

(assert (= (and b!142806 c!27036) b!142802))

(assert (= (and b!142806 (not c!27036)) b!142807))

(assert (= (or b!142802 b!142807) bm!15763))

(assert (= (or b!142810 bm!15763) bm!15764))

(assert (= (or b!142801 bm!15764) bm!15762))

(assert (= (and bm!15762 c!27035) b!142808))

(assert (= (and bm!15762 (not c!27035)) b!142805))

(assert (= (and d!45613 res!68030) b!142804))

(assert (= (and b!142804 res!68029) b!142803))

(declare-fun m!172087 () Bool)

(assert (=> b!142804 m!172087))

(declare-fun m!172089 () Bool)

(assert (=> b!142808 m!172089))

(declare-fun m!172091 () Bool)

(assert (=> bm!15762 m!172091))

(declare-fun m!172093 () Bool)

(assert (=> b!142803 m!172093))

(declare-fun m!172095 () Bool)

(assert (=> d!45613 m!172095))

(declare-fun m!172097 () Bool)

(assert (=> d!45613 m!172097))

(assert (=> d!43701 d!45613))

(declare-fun b!142814 () Bool)

(declare-fun e!93037 () Option!180)

(assert (=> b!142814 (= e!93037 None!178)))

(declare-fun b!142812 () Bool)

(declare-fun e!93036 () Option!180)

(assert (=> b!142812 (= e!93036 e!93037)))

(declare-fun c!27040 () Bool)

(assert (=> b!142812 (= c!27040 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15492))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15492)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))))

(declare-fun b!142811 () Bool)

(assert (=> b!142811 (= e!93036 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 call!15492))))))))

(declare-fun c!27039 () Bool)

(declare-fun d!45615 () Bool)

(assert (=> d!45615 (= c!27039 (and ((_ is Cons!1735) (t!6314 (toList!871 call!15492))) (= (_1!1339 (h!2342 (t!6314 (toList!871 call!15492)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (=> d!45615 (= (getValueByKey!174 (t!6314 (toList!871 call!15492)) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) e!93036)))

(declare-fun b!142813 () Bool)

(assert (=> b!142813 (= e!93037 (getValueByKey!174 (t!6314 (t!6314 (toList!871 call!15492))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!45615 c!27039) b!142811))

(assert (= (and d!45615 (not c!27039)) b!142812))

(assert (= (and b!142812 c!27040) b!142813))

(assert (= (and b!142812 (not c!27040)) b!142814))

(assert (=> b!142813 m!166633))

(declare-fun m!172099 () Bool)

(assert (=> b!142813 m!172099))

(assert (=> b!140722 d!45615))

(declare-fun b!142818 () Bool)

(declare-fun e!93039 () Option!180)

(assert (=> b!142818 (= e!93039 None!178)))

(declare-fun b!142816 () Bool)

(declare-fun e!93038 () Option!180)

(assert (=> b!142816 (= e!93038 e!93039)))

(declare-fun c!27042 () Bool)

(assert (=> b!142816 (= c!27042 (and ((_ is Cons!1735) (toList!871 lt!73492)) (not (= (_1!1339 (h!2342 (toList!871 lt!73492))) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142815 () Bool)

(assert (=> b!142815 (= e!93038 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73492)))))))

(declare-fun d!45617 () Bool)

(declare-fun c!27041 () Bool)

(assert (=> d!45617 (= c!27041 (and ((_ is Cons!1735) (toList!871 lt!73492)) (= (_1!1339 (h!2342 (toList!871 lt!73492))) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))))))

(assert (=> d!45617 (= (getValueByKey!174 (toList!871 lt!73492) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) e!93038)))

(declare-fun b!142817 () Bool)

(assert (=> b!142817 (= e!93039 (getValueByKey!174 (t!6314 (toList!871 lt!73492)) (_1!1339 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))))

(assert (= (and d!45617 c!27041) b!142815))

(assert (= (and d!45617 (not c!27041)) b!142816))

(assert (= (and b!142816 c!27042) b!142817))

(assert (= (and b!142816 (not c!27042)) b!142818))

(declare-fun m!172101 () Bool)

(assert (=> b!142817 m!172101))

(assert (=> b!140437 d!45617))

(assert (=> b!141023 d!45495))

(assert (=> b!141057 d!44163))

(declare-fun d!45619 () Bool)

(assert (=> d!45619 (isDefined!128 (getValueByKey!174 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74718 () Unit!4393)

(assert (=> d!45619 (= lt!74718 (choose!871 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!93040 () Bool)

(assert (=> d!45619 e!93040))

(declare-fun res!68031 () Bool)

(assert (=> d!45619 (=> (not res!68031) (not e!93040))))

(assert (=> d!45619 (= res!68031 (isStrictlySorted!320 (toList!871 lt!73279)))))

(assert (=> d!45619 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74718)))

(declare-fun b!142819 () Bool)

(assert (=> b!142819 (= e!93040 (containsKey!178 (toList!871 lt!73279) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45619 res!68031) b!142819))

(assert (=> d!45619 m!167013))

(assert (=> d!45619 m!167013))

(assert (=> d!45619 m!168403))

(declare-fun m!172103 () Bool)

(assert (=> d!45619 m!172103))

(declare-fun m!172105 () Bool)

(assert (=> d!45619 m!172105))

(assert (=> b!142819 m!168399))

(assert (=> b!140918 d!45619))

(assert (=> b!140918 d!45317))

(assert (=> b!140918 d!44037))

(declare-fun b!142823 () Bool)

(declare-fun e!93042 () Option!180)

(assert (=> b!142823 (= e!93042 None!178)))

(declare-fun b!142821 () Bool)

(declare-fun e!93041 () Option!180)

(assert (=> b!142821 (= e!93041 e!93042)))

(declare-fun c!27044 () Bool)

(assert (=> b!142821 (= c!27044 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73394))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73394)))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142820 () Bool)

(assert (=> b!142820 (= e!93041 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73394))))))))

(declare-fun c!27043 () Bool)

(declare-fun d!45621 () Bool)

(assert (=> d!45621 (= c!27043 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73394))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73394)))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45621 (= (getValueByKey!174 (t!6314 (toList!871 lt!73394)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!93041)))

(declare-fun b!142822 () Bool)

(assert (=> b!142822 (= e!93042 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73394))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45621 c!27043) b!142820))

(assert (= (and d!45621 (not c!27043)) b!142821))

(assert (= (and b!142821 c!27044) b!142822))

(assert (= (and b!142821 (not c!27044)) b!142823))

(declare-fun m!172107 () Bool)

(assert (=> b!142822 m!172107))

(assert (=> b!140668 d!45621))

(assert (=> d!43799 d!43801))

(assert (=> d!43799 d!43803))

(declare-fun d!45623 () Bool)

(assert (=> d!45623 (isDefined!128 (getValueByKey!174 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (=> d!45623 true))

(declare-fun _$12!418 () Unit!4393)

(assert (=> d!45623 (= (choose!871 (toList!871 e!91274) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) _$12!418)))

(declare-fun bs!6035 () Bool)

(assert (= bs!6035 d!45623))

(assert (=> bs!6035 m!166407))

(assert (=> bs!6035 m!166955))

(assert (=> bs!6035 m!166955))

(assert (=> bs!6035 m!166957))

(assert (=> d!43799 d!45623))

(declare-fun d!45625 () Bool)

(declare-fun res!68032 () Bool)

(declare-fun e!93043 () Bool)

(assert (=> d!45625 (=> res!68032 e!93043)))

(assert (=> d!45625 (= res!68032 (or ((_ is Nil!1736) (toList!871 e!91274)) ((_ is Nil!1736) (t!6314 (toList!871 e!91274)))))))

(assert (=> d!45625 (= (isStrictlySorted!320 (toList!871 e!91274)) e!93043)))

(declare-fun b!142824 () Bool)

(declare-fun e!93044 () Bool)

(assert (=> b!142824 (= e!93043 e!93044)))

(declare-fun res!68033 () Bool)

(assert (=> b!142824 (=> (not res!68033) (not e!93044))))

(assert (=> b!142824 (= res!68033 (bvslt (_1!1339 (h!2342 (toList!871 e!91274))) (_1!1339 (h!2342 (t!6314 (toList!871 e!91274))))))))

(declare-fun b!142825 () Bool)

(assert (=> b!142825 (= e!93044 (isStrictlySorted!320 (t!6314 (toList!871 e!91274))))))

(assert (= (and d!45625 (not res!68032)) b!142824))

(assert (= (and b!142824 res!68033) b!142825))

(declare-fun m!172109 () Bool)

(assert (=> b!142825 m!172109))

(assert (=> d!43799 d!45625))

(declare-fun b!142829 () Bool)

(declare-fun e!93046 () Option!180)

(assert (=> b!142829 (= e!93046 None!178)))

(declare-fun b!142827 () Bool)

(declare-fun e!93045 () Option!180)

(assert (=> b!142827 (= e!93045 e!93046)))

(declare-fun c!27046 () Bool)

(assert (=> b!142827 (= c!27046 (and ((_ is Cons!1735) (t!6314 lt!73391)) (not (= (_1!1339 (h!2342 (t!6314 lt!73391))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142826 () Bool)

(assert (=> b!142826 (= e!93045 (Some!179 (_2!1339 (h!2342 (t!6314 lt!73391)))))))

(declare-fun c!27045 () Bool)

(declare-fun d!45627 () Bool)

(assert (=> d!45627 (= c!27045 (and ((_ is Cons!1735) (t!6314 lt!73391)) (= (_1!1339 (h!2342 (t!6314 lt!73391))) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45627 (= (getValueByKey!174 (t!6314 lt!73391) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!93045)))

(declare-fun b!142828 () Bool)

(assert (=> b!142828 (= e!93046 (getValueByKey!174 (t!6314 (t!6314 lt!73391)) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45627 c!27045) b!142826))

(assert (= (and d!45627 (not c!27045)) b!142827))

(assert (= (and b!142827 c!27046) b!142828))

(assert (= (and b!142827 (not c!27046)) b!142829))

(declare-fun m!172111 () Bool)

(assert (=> b!142828 m!172111))

(assert (=> b!140946 d!45627))

(declare-fun d!45629 () Bool)

(declare-fun lt!74719 () Bool)

(assert (=> d!45629 (= lt!74719 (select (content!138 (toList!871 lt!73487)) (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))

(declare-fun e!93048 () Bool)

(assert (=> d!45629 (= lt!74719 e!93048)))

(declare-fun res!68034 () Bool)

(assert (=> d!45629 (=> (not res!68034) (not e!93048))))

(assert (=> d!45629 (= res!68034 ((_ is Cons!1735) (toList!871 lt!73487)))))

(assert (=> d!45629 (= (contains!914 (toList!871 lt!73487) (tuple2!2657 lt!73186 (minValue!2789 newMap!16))) lt!74719)))

(declare-fun b!142830 () Bool)

(declare-fun e!93047 () Bool)

(assert (=> b!142830 (= e!93048 e!93047)))

(declare-fun res!68035 () Bool)

(assert (=> b!142830 (=> res!68035 e!93047)))

(assert (=> b!142830 (= res!68035 (= (h!2342 (toList!871 lt!73487)) (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))

(declare-fun b!142831 () Bool)

(assert (=> b!142831 (= e!93047 (contains!914 (t!6314 (toList!871 lt!73487)) (tuple2!2657 lt!73186 (minValue!2789 newMap!16))))))

(assert (= (and d!45629 res!68034) b!142830))

(assert (= (and b!142830 (not res!68035)) b!142831))

(declare-fun m!172113 () Bool)

(assert (=> d!45629 m!172113))

(declare-fun m!172115 () Bool)

(assert (=> d!45629 m!172115))

(declare-fun m!172117 () Bool)

(assert (=> b!142831 m!172117))

(assert (=> b!140436 d!45629))

(assert (=> b!141105 d!45145))

(assert (=> b!140776 d!44383))

(declare-fun d!45631 () Bool)

(declare-fun e!93049 () Bool)

(assert (=> d!45631 e!93049))

(declare-fun res!68037 () Bool)

(assert (=> d!45631 (=> (not res!68037) (not e!93049))))

(declare-fun lt!74722 () ListLongMap!1711)

(assert (=> d!45631 (= res!68037 (contains!910 lt!74722 (_1!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(declare-fun lt!74723 () List!1739)

(assert (=> d!45631 (= lt!74722 (ListLongMap!1712 lt!74723))))

(declare-fun lt!74720 () Unit!4393)

(declare-fun lt!74721 () Unit!4393)

(assert (=> d!45631 (= lt!74720 lt!74721)))

(assert (=> d!45631 (= (getValueByKey!174 lt!74723 (_1!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45631 (= lt!74721 (lemmaContainsTupThenGetReturnValue!91 lt!74723 (_1!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45631 (= lt!74723 (insertStrictlySorted!94 (toList!871 (ite c!26529 call!15655 (ite c!26532 call!15658 call!15653))) (_1!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) (_2!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45631 (= (+!167 (ite c!26529 call!15655 (ite c!26532 call!15658 call!15653)) (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) lt!74722)))

(declare-fun b!142832 () Bool)

(declare-fun res!68036 () Bool)

(assert (=> b!142832 (=> (not res!68036) (not e!93049))))

(assert (=> b!142832 (= res!68036 (= (getValueByKey!174 (toList!871 lt!74722) (_1!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142833 () Bool)

(assert (=> b!142833 (= e!93049 (contains!914 (toList!871 lt!74722) (ite (or c!26529 c!26532) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 newMap!16)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45631 res!68037) b!142832))

(assert (= (and b!142832 res!68036) b!142833))

(declare-fun m!172119 () Bool)

(assert (=> d!45631 m!172119))

(declare-fun m!172121 () Bool)

(assert (=> d!45631 m!172121))

(declare-fun m!172123 () Bool)

(assert (=> d!45631 m!172123))

(declare-fun m!172125 () Bool)

(assert (=> d!45631 m!172125))

(declare-fun m!172127 () Bool)

(assert (=> b!142832 m!172127))

(declare-fun m!172129 () Bool)

(assert (=> b!142833 m!172129))

(assert (=> bm!15655 d!45631))

(declare-fun d!45633 () Bool)

(assert (=> d!45633 (= (apply!120 lt!73880 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73880) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6036 () Bool)

(assert (= bs!6036 d!45633))

(assert (=> bs!6036 m!170485))

(assert (=> bs!6036 m!170485))

(declare-fun m!172131 () Bool)

(assert (=> bs!6036 m!172131))

(assert (=> b!141072 d!45633))

(assert (=> b!140662 d!44391))

(declare-fun b!142837 () Bool)

(declare-fun e!93051 () Option!180)

(assert (=> b!142837 (= e!93051 None!178)))

(declare-fun b!142835 () Bool)

(declare-fun e!93050 () Option!180)

(assert (=> b!142835 (= e!93050 e!93051)))

(declare-fun c!27048 () Bool)

(assert (=> b!142835 (= c!27048 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73157))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73157)))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142834 () Bool)

(assert (=> b!142834 (= e!93050 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73157))))))))

(declare-fun d!45635 () Bool)

(declare-fun c!27047 () Bool)

(assert (=> d!45635 (= c!27047 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73157))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73157)))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45635 (= (getValueByKey!174 (t!6314 (toList!871 lt!73157)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!93050)))

(declare-fun b!142836 () Bool)

(assert (=> b!142836 (= e!93051 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73157))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45635 c!27047) b!142834))

(assert (= (and d!45635 (not c!27047)) b!142835))

(assert (= (and b!142835 c!27048) b!142836))

(assert (= (and b!142835 (not c!27048)) b!142837))

(declare-fun m!172133 () Bool)

(assert (=> b!142836 m!172133))

(assert (=> b!141194 d!45635))

(declare-fun d!45637 () Bool)

(declare-fun res!68038 () Bool)

(declare-fun e!93052 () Bool)

(assert (=> d!45637 (=> res!68038 e!93052)))

(assert (=> d!45637 (= res!68038 (and ((_ is Cons!1735) (toList!871 lt!73005)) (= (_1!1339 (h!2342 (toList!871 lt!73005))) lt!73012)))))

(assert (=> d!45637 (= (containsKey!178 (toList!871 lt!73005) lt!73012) e!93052)))

(declare-fun b!142838 () Bool)

(declare-fun e!93053 () Bool)

(assert (=> b!142838 (= e!93052 e!93053)))

(declare-fun res!68039 () Bool)

(assert (=> b!142838 (=> (not res!68039) (not e!93053))))

(assert (=> b!142838 (= res!68039 (and (or (not ((_ is Cons!1735) (toList!871 lt!73005))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73005))) lt!73012)) ((_ is Cons!1735) (toList!871 lt!73005)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73005))) lt!73012)))))

(declare-fun b!142839 () Bool)

(assert (=> b!142839 (= e!93053 (containsKey!178 (t!6314 (toList!871 lt!73005)) lt!73012))))

(assert (= (and d!45637 (not res!68038)) b!142838))

(assert (= (and b!142838 res!68039) b!142839))

(declare-fun m!172135 () Bool)

(assert (=> b!142839 m!172135))

(assert (=> d!43983 d!45637))

(declare-fun b!142840 () Bool)

(declare-fun e!93055 () (_ BitVec 32))

(declare-fun e!93054 () (_ BitVec 32))

(assert (=> b!142840 (= e!93055 e!93054)))

(declare-fun c!27050 () Bool)

(assert (=> b!142840 (= c!27050 (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142841 () Bool)

(declare-fun call!15768 () (_ BitVec 32))

(assert (=> b!142841 (= e!93054 (bvadd #b00000000000000000000000000000001 call!15768))))

(declare-fun d!45639 () Bool)

(declare-fun lt!74724 () (_ BitVec 32))

(assert (=> d!45639 (and (bvsge lt!74724 #b00000000000000000000000000000000) (bvsle lt!74724 (bvsub (size!2575 (_keys!4697 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!45639 (= lt!74724 e!93055)))

(declare-fun c!27049 () Bool)

(assert (=> d!45639 (= c!27049 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!45639 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 newMap!16)) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!45639 (= (arrayCountValidKeys!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))) lt!74724)))

(declare-fun b!142842 () Bool)

(assert (=> b!142842 (= e!93055 #b00000000000000000000000000000000)))

(declare-fun b!142843 () Bool)

(assert (=> b!142843 (= e!93054 call!15768)))

(declare-fun bm!15765 () Bool)

(assert (=> bm!15765 (= call!15768 (arrayCountValidKeys!0 (_keys!4697 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (= (and d!45639 c!27049) b!142842))

(assert (= (and d!45639 (not c!27049)) b!142840))

(assert (= (and b!142840 c!27050) b!142841))

(assert (= (and b!142840 (not c!27050)) b!142843))

(assert (= (or b!142841 b!142843) bm!15765))

(assert (=> b!142840 m!168939))

(assert (=> b!142840 m!168939))

(assert (=> b!142840 m!168941))

(declare-fun m!172137 () Bool)

(assert (=> bm!15765 m!172137))

(assert (=> bm!15592 d!45639))

(declare-fun d!45641 () Bool)

(declare-fun res!68040 () Bool)

(declare-fun e!93056 () Bool)

(assert (=> d!45641 (=> res!68040 e!93056)))

(assert (=> d!45641 (= res!68040 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73146)))))

(assert (=> d!45641 (= (containsKey!178 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!73146) e!93056)))

(declare-fun b!142844 () Bool)

(declare-fun e!93057 () Bool)

(assert (=> b!142844 (= e!93056 e!93057)))

(declare-fun res!68041 () Bool)

(assert (=> b!142844 (=> (not res!68041) (not e!93057))))

(assert (=> b!142844 (= res!68041 (and (or (not ((_ is Cons!1735) (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) (bvsle (_1!1339 (h!2342 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73146)) ((_ is Cons!1735) (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) (bvslt (_1!1339 (h!2342 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))) lt!73146)))))

(declare-fun b!142845 () Bool)

(assert (=> b!142845 (= e!93057 (containsKey!178 (t!6314 (toList!871 (+!167 lt!73140 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))) lt!73146))))

(assert (= (and d!45641 (not res!68040)) b!142844))

(assert (= (and b!142844 res!68041) b!142845))

(declare-fun m!172139 () Bool)

(assert (=> b!142845 m!172139))

(assert (=> d!44083 d!45641))

(declare-fun d!45643 () Bool)

(assert (=> d!45643 (= (apply!120 lt!73601 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73601) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6037 () Bool)

(assert (= bs!6037 d!45643))

(assert (=> bs!6037 m!166699))

(assert (=> bs!6037 m!171999))

(assert (=> bs!6037 m!171999))

(declare-fun m!172141 () Bool)

(assert (=> bs!6037 m!172141))

(assert (=> b!140600 d!45643))

(assert (=> b!140600 d!44113))

(declare-fun d!45645 () Bool)

(assert (=> d!45645 (isDefined!128 (getValueByKey!174 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun lt!74725 () Unit!4393)

(assert (=> d!45645 (= lt!74725 (choose!871 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!93058 () Bool)

(assert (=> d!45645 e!93058))

(declare-fun res!68042 () Bool)

(assert (=> d!45645 (=> (not res!68042) (not e!93058))))

(assert (=> d!45645 (= res!68042 (isStrictlySorted!320 (toList!871 lt!73390)))))

(assert (=> d!45645 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74725)))

(declare-fun b!142846 () Bool)

(assert (=> b!142846 (= e!93058 (containsKey!178 (toList!871 lt!73390) (_1!1339 (tuple2!2657 lt!73014 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45645 res!68042) b!142846))

(assert (=> d!45645 m!167131))

(assert (=> d!45645 m!167131))

(assert (=> d!45645 m!168439))

(declare-fun m!172143 () Bool)

(assert (=> d!45645 m!172143))

(declare-fun m!172145 () Bool)

(assert (=> d!45645 m!172145))

(assert (=> b!142846 m!168435))

(assert (=> b!140941 d!45645))

(assert (=> b!140941 d!45469))

(assert (=> b!140941 d!44129))

(declare-fun d!45647 () Bool)

(declare-fun lt!74726 () Bool)

(assert (=> d!45647 (= lt!74726 (select (content!138 lt!73681) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun e!93060 () Bool)

(assert (=> d!45647 (= lt!74726 e!93060)))

(declare-fun res!68043 () Bool)

(assert (=> d!45647 (=> (not res!68043) (not e!93060))))

(assert (=> d!45647 (= res!68043 ((_ is Cons!1735) lt!73681))))

(assert (=> d!45647 (= (contains!914 lt!73681 (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!74726)))

(declare-fun b!142847 () Bool)

(declare-fun e!93059 () Bool)

(assert (=> b!142847 (= e!93060 e!93059)))

(declare-fun res!68044 () Bool)

(assert (=> b!142847 (=> res!68044 e!93059)))

(assert (=> b!142847 (= res!68044 (= (h!2342 lt!73681) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun b!142848 () Bool)

(assert (=> b!142848 (= e!93059 (contains!914 (t!6314 lt!73681) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (= (and d!45647 res!68043) b!142847))

(assert (= (and b!142847 (not res!68044)) b!142848))

(declare-fun m!172147 () Bool)

(assert (=> d!45647 m!172147))

(declare-fun m!172149 () Bool)

(assert (=> d!45647 m!172149))

(declare-fun m!172151 () Bool)

(assert (=> b!142848 m!172151))

(assert (=> b!140768 d!45647))

(declare-fun d!45649 () Bool)

(declare-fun res!68045 () Bool)

(declare-fun e!93061 () Bool)

(assert (=> d!45649 (=> res!68045 e!93061)))

(assert (=> d!45649 (= res!68045 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(assert (=> d!45649 (= (containsKey!178 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))) e!93061)))

(declare-fun b!142849 () Bool)

(declare-fun e!93062 () Bool)

(assert (=> b!142849 (= e!93061 e!93062)))

(declare-fun res!68046 () Bool)

(assert (=> b!142849 (=> (not res!68046) (not e!93062))))

(assert (=> b!142849 (= res!68046 (and (or (not ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (bvsle (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))) ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103)))))))

(declare-fun b!142850 () Bool)

(assert (=> b!142850 (= e!93062 (containsKey!178 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) lt!73089 (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (select (arr!2302 (_keys!4697 newMap!16)) (index!3292 lt!73103))))))

(assert (= (and d!45649 (not res!68045)) b!142849))

(assert (= (and b!142849 res!68046) b!142850))

(assert (=> b!142850 m!166633))

(declare-fun m!172153 () Bool)

(assert (=> b!142850 m!172153))

(assert (=> d!43925 d!45649))

(declare-fun d!45651 () Bool)

(declare-fun e!93064 () Bool)

(assert (=> d!45651 e!93064))

(declare-fun res!68047 () Bool)

(assert (=> d!45651 (=> res!68047 e!93064)))

(declare-fun lt!74730 () Bool)

(assert (=> d!45651 (= res!68047 (not lt!74730))))

(declare-fun lt!74729 () Bool)

(assert (=> d!45651 (= lt!74730 lt!74729)))

(declare-fun lt!74728 () Unit!4393)

(declare-fun e!93063 () Unit!4393)

(assert (=> d!45651 (= lt!74728 e!93063)))

(declare-fun c!27051 () Bool)

(assert (=> d!45651 (= c!27051 lt!74729)))

(assert (=> d!45651 (= lt!74729 (containsKey!178 (toList!871 lt!73604) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (=> d!45651 (= (contains!910 lt!73604 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!74730)))

(declare-fun b!142851 () Bool)

(declare-fun lt!74727 () Unit!4393)

(assert (=> b!142851 (= e!93063 lt!74727)))

(assert (=> b!142851 (= lt!74727 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73604) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (=> b!142851 (isDefined!128 (getValueByKey!174 (toList!871 lt!73604) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun b!142852 () Bool)

(declare-fun Unit!4528 () Unit!4393)

(assert (=> b!142852 (= e!93063 Unit!4528)))

(declare-fun b!142853 () Bool)

(assert (=> b!142853 (= e!93064 (isDefined!128 (getValueByKey!174 (toList!871 lt!73604) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(assert (= (and d!45651 c!27051) b!142851))

(assert (= (and d!45651 (not c!27051)) b!142852))

(assert (= (and d!45651 (not res!68047)) b!142853))

(declare-fun m!172155 () Bool)

(assert (=> d!45651 m!172155))

(declare-fun m!172157 () Bool)

(assert (=> b!142851 m!172157))

(assert (=> b!142851 m!167815))

(assert (=> b!142851 m!167815))

(declare-fun m!172159 () Bool)

(assert (=> b!142851 m!172159))

(assert (=> b!142853 m!167815))

(assert (=> b!142853 m!167815))

(assert (=> b!142853 m!172159))

(assert (=> d!43863 d!45651))

(declare-fun b!142857 () Bool)

(declare-fun e!93066 () Option!180)

(assert (=> b!142857 (= e!93066 None!178)))

(declare-fun b!142855 () Bool)

(declare-fun e!93065 () Option!180)

(assert (=> b!142855 (= e!93065 e!93066)))

(declare-fun c!27053 () Bool)

(assert (=> b!142855 (= c!27053 (and ((_ is Cons!1735) lt!73605) (not (= (_1!1339 (h!2342 lt!73605)) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))))

(declare-fun b!142854 () Bool)

(assert (=> b!142854 (= e!93065 (Some!179 (_2!1339 (h!2342 lt!73605))))))

(declare-fun d!45653 () Bool)

(declare-fun c!27052 () Bool)

(assert (=> d!45653 (= c!27052 (and ((_ is Cons!1735) lt!73605) (= (_1!1339 (h!2342 lt!73605)) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(assert (=> d!45653 (= (getValueByKey!174 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) e!93065)))

(declare-fun b!142856 () Bool)

(assert (=> b!142856 (= e!93066 (getValueByKey!174 (t!6314 lt!73605) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(assert (= (and d!45653 c!27052) b!142854))

(assert (= (and d!45653 (not c!27052)) b!142855))

(assert (= (and b!142855 c!27053) b!142856))

(assert (= (and b!142855 (not c!27053)) b!142857))

(declare-fun m!172161 () Bool)

(assert (=> b!142856 m!172161))

(assert (=> d!43863 d!45653))

(declare-fun d!45655 () Bool)

(assert (=> d!45655 (= (getValueByKey!174 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) (Some!179 (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun lt!74731 () Unit!4393)

(assert (=> d!45655 (= lt!74731 (choose!872 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun e!93067 () Bool)

(assert (=> d!45655 e!93067))

(declare-fun res!68048 () Bool)

(assert (=> d!45655 (=> (not res!68048) (not e!93067))))

(assert (=> d!45655 (= res!68048 (isStrictlySorted!320 lt!73605))))

(assert (=> d!45655 (= (lemmaContainsTupThenGetReturnValue!91 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!74731)))

(declare-fun b!142858 () Bool)

(declare-fun res!68049 () Bool)

(assert (=> b!142858 (=> (not res!68049) (not e!93067))))

(assert (=> b!142858 (= res!68049 (containsKey!178 lt!73605 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun b!142859 () Bool)

(assert (=> b!142859 (= e!93067 (contains!914 lt!73605 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(assert (= (and d!45655 res!68048) b!142858))

(assert (= (and b!142858 res!68049) b!142859))

(assert (=> d!45655 m!167809))

(declare-fun m!172163 () Bool)

(assert (=> d!45655 m!172163))

(declare-fun m!172165 () Bool)

(assert (=> d!45655 m!172165))

(declare-fun m!172167 () Bool)

(assert (=> b!142858 m!172167))

(declare-fun m!172169 () Bool)

(assert (=> b!142859 m!172169))

(assert (=> d!43863 d!45655))

(declare-fun b!142860 () Bool)

(declare-fun e!93070 () List!1739)

(declare-fun call!15771 () List!1739)

(assert (=> b!142860 (= e!93070 call!15771)))

(declare-fun b!142861 () Bool)

(declare-fun e!93068 () List!1739)

(declare-fun call!15770 () List!1739)

(assert (=> b!142861 (= e!93068 call!15770)))

(declare-fun b!142862 () Bool)

(declare-fun e!93071 () Bool)

(declare-fun lt!74732 () List!1739)

(assert (=> b!142862 (= e!93071 (contains!914 lt!74732 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(declare-fun c!27057 () Bool)

(declare-fun bm!15766 () Bool)

(declare-fun e!93069 () List!1739)

(assert (=> bm!15766 (= call!15771 ($colon$colon!93 e!93069 (ite c!27057 (h!2342 (toList!871 lt!73199)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))))

(declare-fun c!27054 () Bool)

(assert (=> bm!15766 (= c!27054 c!27057)))

(declare-fun bm!15767 () Bool)

(declare-fun call!15769 () List!1739)

(assert (=> bm!15767 (= call!15770 call!15769)))

(declare-fun b!142863 () Bool)

(declare-fun res!68050 () Bool)

(assert (=> b!142863 (=> (not res!68050) (not e!93071))))

(assert (=> b!142863 (= res!68050 (containsKey!178 lt!74732 (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun d!45657 () Bool)

(assert (=> d!45657 e!93071))

(declare-fun res!68051 () Bool)

(assert (=> d!45657 (=> (not res!68051) (not e!93071))))

(assert (=> d!45657 (= res!68051 (isStrictlySorted!320 lt!74732))))

(assert (=> d!45657 (= lt!74732 e!93070)))

(assert (=> d!45657 (= c!27057 (and ((_ is Cons!1735) (toList!871 lt!73199)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73199))) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(assert (=> d!45657 (isStrictlySorted!320 (toList!871 lt!73199))))

(assert (=> d!45657 (= (insertStrictlySorted!94 (toList!871 lt!73199) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))) lt!74732)))

(declare-fun c!27055 () Bool)

(declare-fun c!27056 () Bool)

(declare-fun b!142864 () Bool)

(assert (=> b!142864 (= e!93069 (ite c!27056 (t!6314 (toList!871 lt!73199)) (ite c!27055 (Cons!1735 (h!2342 (toList!871 lt!73199)) (t!6314 (toList!871 lt!73199))) Nil!1736)))))

(declare-fun b!142865 () Bool)

(assert (=> b!142865 (= c!27055 (and ((_ is Cons!1735) (toList!871 lt!73199)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73199))) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(declare-fun e!93072 () List!1739)

(assert (=> b!142865 (= e!93072 e!93068)))

(declare-fun b!142866 () Bool)

(assert (=> b!142866 (= e!93068 call!15770)))

(declare-fun b!142867 () Bool)

(assert (=> b!142867 (= e!93069 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73199)) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))) (_2!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16)))))))

(declare-fun bm!15768 () Bool)

(assert (=> bm!15768 (= call!15769 call!15771)))

(declare-fun b!142868 () Bool)

(assert (=> b!142868 (= e!93070 e!93072)))

(assert (=> b!142868 (= c!27056 (and ((_ is Cons!1735) (toList!871 lt!73199)) (= (_1!1339 (h!2342 (toList!871 lt!73199))) (_1!1339 (tuple2!2657 lt!73211 (minValue!2789 newMap!16))))))))

(declare-fun b!142869 () Bool)

(assert (=> b!142869 (= e!93072 call!15769)))

(assert (= (and d!45657 c!27057) b!142860))

(assert (= (and d!45657 (not c!27057)) b!142868))

(assert (= (and b!142868 c!27056) b!142869))

(assert (= (and b!142868 (not c!27056)) b!142865))

(assert (= (and b!142865 c!27055) b!142861))

(assert (= (and b!142865 (not c!27055)) b!142866))

(assert (= (or b!142861 b!142866) bm!15767))

(assert (= (or b!142869 bm!15767) bm!15768))

(assert (= (or b!142860 bm!15768) bm!15766))

(assert (= (and bm!15766 c!27054) b!142867))

(assert (= (and bm!15766 (not c!27054)) b!142864))

(assert (= (and d!45657 res!68051) b!142863))

(assert (= (and b!142863 res!68050) b!142862))

(declare-fun m!172171 () Bool)

(assert (=> b!142863 m!172171))

(declare-fun m!172173 () Bool)

(assert (=> b!142867 m!172173))

(declare-fun m!172175 () Bool)

(assert (=> bm!15766 m!172175))

(declare-fun m!172177 () Bool)

(assert (=> b!142862 m!172177))

(declare-fun m!172179 () Bool)

(assert (=> d!45657 m!172179))

(declare-fun m!172181 () Bool)

(assert (=> d!45657 m!172181))

(assert (=> d!43863 d!45657))

(declare-fun lt!74733 () Bool)

(declare-fun d!45659 () Bool)

(assert (=> d!45659 (= lt!74733 (select (content!138 lt!73387) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!93074 () Bool)

(assert (=> d!45659 (= lt!74733 e!93074)))

(declare-fun res!68052 () Bool)

(assert (=> d!45659 (=> (not res!68052) (not e!93074))))

(assert (=> d!45659 (= res!68052 ((_ is Cons!1735) lt!73387))))

(assert (=> d!45659 (= (contains!914 lt!73387 (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74733)))

(declare-fun b!142870 () Bool)

(declare-fun e!93073 () Bool)

(assert (=> b!142870 (= e!93074 e!93073)))

(declare-fun res!68053 () Bool)

(assert (=> b!142870 (=> res!68053 e!93073)))

(assert (=> b!142870 (= res!68053 (= (h!2342 lt!73387) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142871 () Bool)

(assert (=> b!142871 (= e!93073 (contains!914 (t!6314 lt!73387) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!45659 res!68052) b!142870))

(assert (= (and b!142870 (not res!68053)) b!142871))

(declare-fun m!172183 () Bool)

(assert (=> d!45659 m!172183))

(declare-fun m!172185 () Bool)

(assert (=> d!45659 m!172185))

(declare-fun m!172187 () Bool)

(assert (=> b!142871 m!172187))

(assert (=> b!140740 d!45659))

(declare-fun d!45661 () Bool)

(assert (=> d!45661 (isDefined!128 (getValueByKey!174 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74734 () Unit!4393)

(assert (=> d!45661 (= lt!74734 (choose!871 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!93075 () Bool)

(assert (=> d!45661 e!93075))

(declare-fun res!68054 () Bool)

(assert (=> d!45661 (=> (not res!68054) (not e!93075))))

(assert (=> d!45661 (= res!68054 (isStrictlySorted!320 (toList!871 lt!73128)))))

(assert (=> d!45661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74734)))

(declare-fun b!142872 () Bool)

(assert (=> b!142872 (= e!93075 (containsKey!178 (toList!871 lt!73128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45661 res!68054) b!142872))

(assert (=> d!45661 m!168225))

(assert (=> d!45661 m!168225))

(assert (=> d!45661 m!168227))

(declare-fun m!172189 () Bool)

(assert (=> d!45661 m!172189))

(assert (=> d!45661 m!169787))

(assert (=> b!142872 m!168221))

(assert (=> b!140835 d!45661))

(assert (=> b!140835 d!45463))

(assert (=> b!140835 d!44739))

(declare-fun d!45663 () Bool)

(assert (=> d!45663 (= (apply!120 lt!73645 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1528 (getValueByKey!174 (toList!871 lt!73645) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6038 () Bool)

(assert (= bs!6038 d!45663))

(assert (=> bs!6038 m!168891))

(assert (=> bs!6038 m!168891))

(declare-fun m!172191 () Bool)

(assert (=> bs!6038 m!172191))

(assert (=> b!140693 d!45663))

(declare-fun d!45665 () Bool)

(declare-fun res!68055 () Bool)

(declare-fun e!93076 () Bool)

(assert (=> d!45665 (=> res!68055 e!93076)))

(assert (=> d!45665 (= res!68055 (and ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (= (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73021)))))

(assert (=> d!45665 (= (containsKey!178 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) lt!73021) e!93076)))

(declare-fun b!142873 () Bool)

(declare-fun e!93077 () Bool)

(assert (=> b!142873 (= e!93076 e!93077)))

(declare-fun res!68056 () Bool)

(assert (=> b!142873 (=> (not res!68056) (not e!93077))))

(assert (=> b!142873 (= res!68056 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73021)) ((_ is Cons!1735) (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))) lt!73021)))))

(declare-fun b!142874 () Bool)

(assert (=> b!142874 (= e!93077 (containsKey!178 (t!6314 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) lt!73021))))

(assert (= (and d!45665 (not res!68055)) b!142873))

(assert (= (and b!142873 res!68056) b!142874))

(declare-fun m!172193 () Bool)

(assert (=> b!142874 m!172193))

(assert (=> b!140752 d!45665))

(declare-fun d!45667 () Bool)

(assert (=> d!45667 (= (get!1528 (getValueByKey!174 (toList!871 lt!73185) lt!73180)) (v!3279 (getValueByKey!174 (toList!871 lt!73185) lt!73180)))))

(assert (=> d!43737 d!45667))

(declare-fun b!142878 () Bool)

(declare-fun e!93079 () Option!180)

(assert (=> b!142878 (= e!93079 None!178)))

(declare-fun b!142876 () Bool)

(declare-fun e!93078 () Option!180)

(assert (=> b!142876 (= e!93078 e!93079)))

(declare-fun c!27059 () Bool)

(assert (=> b!142876 (= c!27059 (and ((_ is Cons!1735) (toList!871 lt!73185)) (not (= (_1!1339 (h!2342 (toList!871 lt!73185))) lt!73180))))))

(declare-fun b!142875 () Bool)

(assert (=> b!142875 (= e!93078 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73185)))))))

(declare-fun d!45669 () Bool)

(declare-fun c!27058 () Bool)

(assert (=> d!45669 (= c!27058 (and ((_ is Cons!1735) (toList!871 lt!73185)) (= (_1!1339 (h!2342 (toList!871 lt!73185))) lt!73180)))))

(assert (=> d!45669 (= (getValueByKey!174 (toList!871 lt!73185) lt!73180) e!93078)))

(declare-fun b!142877 () Bool)

(assert (=> b!142877 (= e!93079 (getValueByKey!174 (t!6314 (toList!871 lt!73185)) lt!73180))))

(assert (= (and d!45669 c!27058) b!142875))

(assert (= (and d!45669 (not c!27058)) b!142876))

(assert (= (and b!142876 c!27059) b!142877))

(assert (= (and b!142876 (not c!27059)) b!142878))

(declare-fun m!172195 () Bool)

(assert (=> b!142877 m!172195))

(assert (=> d!43737 d!45669))

(declare-fun b!142882 () Bool)

(declare-fun e!93081 () Option!180)

(assert (=> b!142882 (= e!93081 None!178)))

(declare-fun b!142880 () Bool)

(declare-fun e!93080 () Option!180)

(assert (=> b!142880 (= e!93080 e!93081)))

(declare-fun c!27061 () Bool)

(assert (=> b!142880 (= c!27061 (and ((_ is Cons!1735) (toList!871 lt!73734)) (not (= (_1!1339 (h!2342 (toList!871 lt!73734))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142879 () Bool)

(assert (=> b!142879 (= e!93080 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73734)))))))

(declare-fun d!45671 () Bool)

(declare-fun c!27060 () Bool)

(assert (=> d!45671 (= c!27060 (and ((_ is Cons!1735) (toList!871 lt!73734)) (= (_1!1339 (h!2342 (toList!871 lt!73734))) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45671 (= (getValueByKey!174 (toList!871 lt!73734) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93080)))

(declare-fun b!142881 () Bool)

(assert (=> b!142881 (= e!93081 (getValueByKey!174 (t!6314 (toList!871 lt!73734)) (_1!1339 (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45671 c!27060) b!142879))

(assert (= (and d!45671 (not c!27060)) b!142880))

(assert (= (and b!142880 c!27061) b!142881))

(assert (= (and b!142880 (not c!27061)) b!142882))

(declare-fun m!172197 () Bool)

(assert (=> b!142881 m!172197))

(assert (=> b!140843 d!45671))

(declare-fun b!142886 () Bool)

(declare-fun e!93083 () Option!180)

(assert (=> b!142886 (= e!93083 None!178)))

(declare-fun b!142884 () Bool)

(declare-fun e!93082 () Option!180)

(assert (=> b!142884 (= e!93082 e!93083)))

(declare-fun c!27063 () Bool)

(assert (=> b!142884 (= c!27063 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73386))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73386)))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!142883 () Bool)

(assert (=> b!142883 (= e!93082 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73386))))))))

(declare-fun d!45673 () Bool)

(declare-fun c!27062 () Bool)

(assert (=> d!45673 (= c!27062 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73386))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73386)))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45673 (= (getValueByKey!174 (t!6314 (toList!871 lt!73386)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!93082)))

(declare-fun b!142885 () Bool)

(assert (=> b!142885 (= e!93083 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73386))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45673 c!27062) b!142883))

(assert (= (and d!45673 (not c!27062)) b!142884))

(assert (= (and b!142884 c!27063) b!142885))

(assert (= (and b!142884 (not c!27063)) b!142886))

(declare-fun m!172199 () Bool)

(assert (=> b!142885 m!172199))

(assert (=> b!140672 d!45673))

(declare-fun d!45675 () Bool)

(assert (=> d!45675 (= ($colon$colon!93 e!91755 (ite c!26447 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))) (Cons!1735 (ite c!26447 (h!2342 (toList!871 (ite c!26185 call!15436 (ite c!26188 call!15439 call!15434)))) (tuple2!2657 (_1!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) (_2!1339 (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))) e!91755))))

(assert (=> bm!15605 d!45675))

(assert (=> d!44139 d!44157))

(declare-fun d!45677 () Bool)

(assert (=> d!45677 (arrayContainsKey!0 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!45677 true))

(declare-fun _$60!367 () Unit!4393)

(assert (=> d!45677 (= (choose!13 lt!73345 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) _$60!367)))

(declare-fun bs!6039 () Bool)

(assert (= bs!6039 d!45677))

(assert (=> bs!6039 m!166407))

(assert (=> bs!6039 m!167065))

(assert (=> d!44139 d!45677))

(declare-fun b!142890 () Bool)

(declare-fun e!93085 () Option!180)

(assert (=> b!142890 (= e!93085 None!178)))

(declare-fun b!142888 () Bool)

(declare-fun e!93084 () Option!180)

(assert (=> b!142888 (= e!93084 e!93085)))

(declare-fun c!27065 () Bool)

(assert (=> b!142888 (= c!27065 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73016))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73016)))) lt!73011))))))

(declare-fun b!142887 () Bool)

(assert (=> b!142887 (= e!93084 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73016))))))))

(declare-fun d!45679 () Bool)

(declare-fun c!27064 () Bool)

(assert (=> d!45679 (= c!27064 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73016))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73016)))) lt!73011)))))

(assert (=> d!45679 (= (getValueByKey!174 (t!6314 (toList!871 lt!73016)) lt!73011) e!93084)))

(declare-fun b!142889 () Bool)

(assert (=> b!142889 (= e!93085 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73016))) lt!73011))))

(assert (= (and d!45679 c!27064) b!142887))

(assert (= (and d!45679 (not c!27064)) b!142888))

(assert (= (and b!142888 c!27065) b!142889))

(assert (= (and b!142888 (not c!27065)) b!142890))

(declare-fun m!172201 () Bool)

(assert (=> b!142889 m!172201))

(assert (=> b!140856 d!45679))

(declare-fun lt!74735 () Bool)

(declare-fun d!45681 () Bool)

(assert (=> d!45681 (= lt!74735 (select (content!138 (t!6314 (toList!871 lt!73231))) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun e!93087 () Bool)

(assert (=> d!45681 (= lt!74735 e!93087)))

(declare-fun res!68057 () Bool)

(assert (=> d!45681 (=> (not res!68057) (not e!93087))))

(assert (=> d!45681 (= res!68057 ((_ is Cons!1735) (t!6314 (toList!871 lt!73231))))))

(assert (=> d!45681 (= (contains!914 (t!6314 (toList!871 lt!73231)) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74735)))

(declare-fun b!142891 () Bool)

(declare-fun e!93086 () Bool)

(assert (=> b!142891 (= e!93087 e!93086)))

(declare-fun res!68058 () Bool)

(assert (=> b!142891 (=> res!68058 e!93086)))

(assert (=> b!142891 (= res!68058 (= (h!2342 (t!6314 (toList!871 lt!73231))) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun b!142892 () Bool)

(assert (=> b!142892 (= e!93086 (contains!914 (t!6314 (t!6314 (toList!871 lt!73231))) (ite (or c!26185 c!26188) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45681 res!68057) b!142891))

(assert (= (and b!142891 (not res!68058)) b!142892))

(assert (=> d!45681 m!170097))

(declare-fun m!172203 () Bool)

(assert (=> d!45681 m!172203))

(declare-fun m!172205 () Bool)

(assert (=> b!142892 m!172205))

(assert (=> b!140853 d!45681))

(declare-fun d!45683 () Bool)

(declare-fun e!93089 () Bool)

(assert (=> d!45683 e!93089))

(declare-fun res!68059 () Bool)

(assert (=> d!45683 (=> res!68059 e!93089)))

(declare-fun lt!74739 () Bool)

(assert (=> d!45683 (= res!68059 (not lt!74739))))

(declare-fun lt!74738 () Bool)

(assert (=> d!45683 (= lt!74739 lt!74738)))

(declare-fun lt!74737 () Unit!4393)

(declare-fun e!93088 () Unit!4393)

(assert (=> d!45683 (= lt!74737 e!93088)))

(declare-fun c!27066 () Bool)

(assert (=> d!45683 (= c!27066 lt!74738)))

(assert (=> d!45683 (= lt!74738 (containsKey!178 (toList!871 lt!73828) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> d!45683 (= (contains!910 lt!73828 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74739)))

(declare-fun b!142893 () Bool)

(declare-fun lt!74736 () Unit!4393)

(assert (=> b!142893 (= e!93088 lt!74736)))

(assert (=> b!142893 (= lt!74736 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73828) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (=> b!142893 (isDefined!128 (getValueByKey!174 (toList!871 lt!73828) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142894 () Bool)

(declare-fun Unit!4529 () Unit!4393)

(assert (=> b!142894 (= e!93088 Unit!4529)))

(declare-fun b!142895 () Bool)

(assert (=> b!142895 (= e!93089 (isDefined!128 (getValueByKey!174 (toList!871 lt!73828) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45683 c!27066) b!142893))

(assert (= (and d!45683 (not c!27066)) b!142894))

(assert (= (and d!45683 (not res!68059)) b!142895))

(declare-fun m!172207 () Bool)

(assert (=> d!45683 m!172207))

(declare-fun m!172209 () Bool)

(assert (=> b!142893 m!172209))

(assert (=> b!142893 m!168565))

(assert (=> b!142893 m!168565))

(declare-fun m!172211 () Bool)

(assert (=> b!142893 m!172211))

(assert (=> b!142895 m!168565))

(assert (=> b!142895 m!168565))

(assert (=> b!142895 m!172211))

(assert (=> d!44103 d!45683))

(declare-fun b!142899 () Bool)

(declare-fun e!93091 () Option!180)

(assert (=> b!142899 (= e!93091 None!178)))

(declare-fun b!142897 () Bool)

(declare-fun e!93090 () Option!180)

(assert (=> b!142897 (= e!93090 e!93091)))

(declare-fun c!27068 () Bool)

(assert (=> b!142897 (= c!27068 (and ((_ is Cons!1735) lt!73829) (not (= (_1!1339 (h!2342 lt!73829)) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun b!142896 () Bool)

(assert (=> b!142896 (= e!93090 (Some!179 (_2!1339 (h!2342 lt!73829))))))

(declare-fun d!45685 () Bool)

(declare-fun c!27067 () Bool)

(assert (=> d!45685 (= c!27067 (and ((_ is Cons!1735) lt!73829) (= (_1!1339 (h!2342 lt!73829)) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45685 (= (getValueByKey!174 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) e!93090)))

(declare-fun b!142898 () Bool)

(assert (=> b!142898 (= e!93091 (getValueByKey!174 (t!6314 lt!73829) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(assert (= (and d!45685 c!27067) b!142896))

(assert (= (and d!45685 (not c!27067)) b!142897))

(assert (= (and b!142897 c!27068) b!142898))

(assert (= (and b!142897 (not c!27068)) b!142899))

(declare-fun m!172213 () Bool)

(assert (=> b!142898 m!172213))

(assert (=> d!44103 d!45685))

(declare-fun d!45687 () Bool)

(assert (=> d!45687 (= (getValueByKey!174 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun lt!74740 () Unit!4393)

(assert (=> d!45687 (= lt!74740 (choose!872 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun e!93092 () Bool)

(assert (=> d!45687 e!93092))

(declare-fun res!68060 () Bool)

(assert (=> d!45687 (=> (not res!68060) (not e!93092))))

(assert (=> d!45687 (= res!68060 (isStrictlySorted!320 lt!73829))))

(assert (=> d!45687 (= (lemmaContainsTupThenGetReturnValue!91 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74740)))

(declare-fun b!142900 () Bool)

(declare-fun res!68061 () Bool)

(assert (=> b!142900 (=> (not res!68061) (not e!93092))))

(assert (=> b!142900 (= res!68061 (containsKey!178 lt!73829 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun b!142901 () Bool)

(assert (=> b!142901 (= e!93092 (contains!914 lt!73829 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (= (and d!45687 res!68060) b!142900))

(assert (= (and b!142900 res!68061) b!142901))

(assert (=> d!45687 m!168559))

(declare-fun m!172215 () Bool)

(assert (=> d!45687 m!172215))

(declare-fun m!172217 () Bool)

(assert (=> d!45687 m!172217))

(declare-fun m!172219 () Bool)

(assert (=> b!142900 m!172219))

(declare-fun m!172221 () Bool)

(assert (=> b!142901 m!172221))

(assert (=> d!44103 d!45687))

(declare-fun b!142902 () Bool)

(declare-fun e!93095 () List!1739)

(declare-fun call!15774 () List!1739)

(assert (=> b!142902 (= e!93095 call!15774)))

(declare-fun b!142903 () Bool)

(declare-fun e!93093 () List!1739)

(declare-fun call!15773 () List!1739)

(assert (=> b!142903 (= e!93093 call!15773)))

(declare-fun b!142904 () Bool)

(declare-fun e!93096 () Bool)

(declare-fun lt!74741 () List!1739)

(assert (=> b!142904 (= e!93096 (contains!914 lt!74741 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!93094 () List!1739)

(declare-fun c!27072 () Bool)

(declare-fun bm!15769 () Bool)

(assert (=> bm!15769 (= call!15774 ($colon$colon!93 e!93094 (ite c!27072 (h!2342 (toList!871 lt!73130)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))))

(declare-fun c!27069 () Bool)

(assert (=> bm!15769 (= c!27069 c!27072)))

(declare-fun bm!15770 () Bool)

(declare-fun call!15772 () List!1739)

(assert (=> bm!15770 (= call!15773 call!15772)))

(declare-fun b!142905 () Bool)

(declare-fun res!68062 () Bool)

(assert (=> b!142905 (=> (not res!68062) (not e!93096))))

(assert (=> b!142905 (= res!68062 (containsKey!178 lt!74741 (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun d!45689 () Bool)

(assert (=> d!45689 e!93096))

(declare-fun res!68063 () Bool)

(assert (=> d!45689 (=> (not res!68063) (not e!93096))))

(assert (=> d!45689 (= res!68063 (isStrictlySorted!320 lt!74741))))

(assert (=> d!45689 (= lt!74741 e!93095)))

(assert (=> d!45689 (= c!27072 (and ((_ is Cons!1735) (toList!871 lt!73130)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73130))) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(assert (=> d!45689 (isStrictlySorted!320 (toList!871 lt!73130))))

(assert (=> d!45689 (= (insertStrictlySorted!94 (toList!871 lt!73130) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!74741)))

(declare-fun c!27070 () Bool)

(declare-fun b!142906 () Bool)

(declare-fun c!27071 () Bool)

(assert (=> b!142906 (= e!93094 (ite c!27071 (t!6314 (toList!871 lt!73130)) (ite c!27070 (Cons!1735 (h!2342 (toList!871 lt!73130)) (t!6314 (toList!871 lt!73130))) Nil!1736)))))

(declare-fun b!142907 () Bool)

(assert (=> b!142907 (= c!27070 (and ((_ is Cons!1735) (toList!871 lt!73130)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73130))) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun e!93097 () List!1739)

(assert (=> b!142907 (= e!93097 e!93093)))

(declare-fun b!142908 () Bool)

(assert (=> b!142908 (= e!93093 call!15773)))

(declare-fun b!142909 () Bool)

(assert (=> b!142909 (= e!93094 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73130)) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))))

(declare-fun bm!15771 () Bool)

(assert (=> bm!15771 (= call!15772 call!15774)))

(declare-fun b!142910 () Bool)

(assert (=> b!142910 (= e!93095 e!93097)))

(assert (=> b!142910 (= c!27071 (and ((_ is Cons!1735) (toList!871 lt!73130)) (= (_1!1339 (h!2342 (toList!871 lt!73130))) (_1!1339 (tuple2!2657 lt!73142 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))

(declare-fun b!142911 () Bool)

(assert (=> b!142911 (= e!93097 call!15772)))

(assert (= (and d!45689 c!27072) b!142902))

(assert (= (and d!45689 (not c!27072)) b!142910))

(assert (= (and b!142910 c!27071) b!142911))

(assert (= (and b!142910 (not c!27071)) b!142907))

(assert (= (and b!142907 c!27070) b!142903))

(assert (= (and b!142907 (not c!27070)) b!142908))

(assert (= (or b!142903 b!142908) bm!15770))

(assert (= (or b!142911 bm!15770) bm!15771))

(assert (= (or b!142902 bm!15771) bm!15769))

(assert (= (and bm!15769 c!27069) b!142909))

(assert (= (and bm!15769 (not c!27069)) b!142906))

(assert (= (and d!45689 res!68063) b!142905))

(assert (= (and b!142905 res!68062) b!142904))

(declare-fun m!172223 () Bool)

(assert (=> b!142905 m!172223))

(declare-fun m!172225 () Bool)

(assert (=> b!142909 m!172225))

(declare-fun m!172227 () Bool)

(assert (=> bm!15769 m!172227))

(declare-fun m!172229 () Bool)

(assert (=> b!142904 m!172229))

(declare-fun m!172231 () Bool)

(assert (=> d!45689 m!172231))

(declare-fun m!172233 () Bool)

(assert (=> d!45689 m!172233))

(assert (=> d!44103 d!45689))

(declare-fun b!142915 () Bool)

(declare-fun e!93099 () Option!180)

(assert (=> b!142915 (= e!93099 None!178)))

(declare-fun b!142913 () Bool)

(declare-fun e!93098 () Option!180)

(assert (=> b!142913 (= e!93098 e!93099)))

(declare-fun c!27074 () Bool)

(assert (=> b!142913 (= c!27074 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73001))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73001)))) lt!73020))))))

(declare-fun b!142912 () Bool)

(assert (=> b!142912 (= e!93098 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73001))))))))

(declare-fun d!45691 () Bool)

(declare-fun c!27073 () Bool)

(assert (=> d!45691 (= c!27073 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73001))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73001)))) lt!73020)))))

(assert (=> d!45691 (= (getValueByKey!174 (t!6314 (toList!871 lt!73001)) lt!73020) e!93098)))

(declare-fun b!142914 () Bool)

(assert (=> b!142914 (= e!93099 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73001))) lt!73020))))

(assert (= (and d!45691 c!27073) b!142912))

(assert (= (and d!45691 (not c!27073)) b!142913))

(assert (= (and b!142913 c!27074) b!142914))

(assert (= (and b!142913 (not c!27074)) b!142915))

(declare-fun m!172235 () Bool)

(assert (=> b!142914 m!172235))

(assert (=> b!140868 d!45691))

(assert (=> d!44201 d!43611))

(declare-fun d!45693 () Bool)

(declare-fun lt!74742 () Bool)

(assert (=> d!45693 (= lt!74742 (select (content!138 (toList!871 lt!73482)) (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))

(declare-fun e!93101 () Bool)

(assert (=> d!45693 (= lt!74742 e!93101)))

(declare-fun res!68064 () Bool)

(assert (=> d!45693 (=> (not res!68064) (not e!93101))))

(assert (=> d!45693 (= res!68064 ((_ is Cons!1735) (toList!871 lt!73482)))))

(assert (=> d!45693 (= (contains!914 (toList!871 lt!73482) (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) lt!74742)))

(declare-fun b!142916 () Bool)

(declare-fun e!93100 () Bool)

(assert (=> b!142916 (= e!93101 e!93100)))

(declare-fun res!68065 () Bool)

(assert (=> b!142916 (=> res!68065 e!93100)))

(assert (=> b!142916 (= res!68065 (= (h!2342 (toList!871 lt!73482)) (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))

(declare-fun b!142917 () Bool)

(assert (=> b!142917 (= e!93100 (contains!914 (t!6314 (toList!871 lt!73482)) (tuple2!2657 lt!73183 (minValue!2789 newMap!16))))))

(assert (= (and d!45693 res!68064) b!142916))

(assert (= (and b!142916 (not res!68065)) b!142917))

(declare-fun m!172237 () Bool)

(assert (=> d!45693 m!172237))

(declare-fun m!172239 () Bool)

(assert (=> d!45693 m!172239))

(declare-fun m!172241 () Bool)

(assert (=> b!142917 m!172241))

(assert (=> b!140433 d!45693))

(declare-fun b!142918 () Bool)

(declare-fun e!93104 () List!1739)

(declare-fun call!15777 () List!1739)

(assert (=> b!142918 (= e!93104 call!15777)))

(declare-fun b!142919 () Bool)

(declare-fun e!93102 () List!1739)

(declare-fun call!15776 () List!1739)

(assert (=> b!142919 (= e!93102 call!15776)))

(declare-fun e!93105 () Bool)

(declare-fun b!142920 () Bool)

(declare-fun lt!74743 () List!1739)

(assert (=> b!142920 (= e!93105 (contains!914 lt!74743 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!93103 () List!1739)

(declare-fun bm!15772 () Bool)

(declare-fun c!27078 () Bool)

(assert (=> bm!15772 (= call!15777 ($colon$colon!93 e!93103 (ite c!27078 (h!2342 (t!6314 (toList!871 lt!73005))) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(declare-fun c!27075 () Bool)

(assert (=> bm!15772 (= c!27075 c!27078)))

(declare-fun bm!15773 () Bool)

(declare-fun call!15775 () List!1739)

(assert (=> bm!15773 (= call!15776 call!15775)))

(declare-fun b!142921 () Bool)

(declare-fun res!68066 () Bool)

(assert (=> b!142921 (=> (not res!68066) (not e!93105))))

(assert (=> b!142921 (= res!68066 (containsKey!178 lt!74743 (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun d!45695 () Bool)

(assert (=> d!45695 e!93105))

(declare-fun res!68067 () Bool)

(assert (=> d!45695 (=> (not res!68067) (not e!93105))))

(assert (=> d!45695 (= res!68067 (isStrictlySorted!320 lt!74743))))

(assert (=> d!45695 (= lt!74743 e!93104)))

(assert (=> d!45695 (= c!27078 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73005))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73005)))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45695 (isStrictlySorted!320 (t!6314 (toList!871 lt!73005)))))

(assert (=> d!45695 (= (insertStrictlySorted!94 (t!6314 (toList!871 lt!73005)) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!74743)))

(declare-fun c!27076 () Bool)

(declare-fun b!142922 () Bool)

(declare-fun c!27077 () Bool)

(assert (=> b!142922 (= e!93103 (ite c!27077 (t!6314 (t!6314 (toList!871 lt!73005))) (ite c!27076 (Cons!1735 (h!2342 (t!6314 (toList!871 lt!73005))) (t!6314 (t!6314 (toList!871 lt!73005)))) Nil!1736)))))

(declare-fun b!142923 () Bool)

(assert (=> b!142923 (= c!27076 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73005))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 lt!73005)))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun e!93106 () List!1739)

(assert (=> b!142923 (= e!93106 e!93102)))

(declare-fun b!142924 () Bool)

(assert (=> b!142924 (= e!93102 call!15776)))

(declare-fun b!142925 () Bool)

(assert (=> b!142925 (= e!93103 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 lt!73005))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))) (_2!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(declare-fun bm!15774 () Bool)

(assert (=> bm!15774 (= call!15775 call!15777)))

(declare-fun b!142926 () Bool)

(assert (=> b!142926 (= e!93104 e!93106)))

(assert (=> b!142926 (= c!27077 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73005))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73005)))) (_1!1339 (tuple2!2657 lt!73017 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142927 () Bool)

(assert (=> b!142927 (= e!93106 call!15775)))

(assert (= (and d!45695 c!27078) b!142918))

(assert (= (and d!45695 (not c!27078)) b!142926))

(assert (= (and b!142926 c!27077) b!142927))

(assert (= (and b!142926 (not c!27077)) b!142923))

(assert (= (and b!142923 c!27076) b!142919))

(assert (= (and b!142923 (not c!27076)) b!142924))

(assert (= (or b!142919 b!142924) bm!15773))

(assert (= (or b!142927 bm!15773) bm!15774))

(assert (= (or b!142918 bm!15774) bm!15772))

(assert (= (and bm!15772 c!27075) b!142925))

(assert (= (and bm!15772 (not c!27075)) b!142922))

(assert (= (and d!45695 res!68067) b!142921))

(assert (= (and b!142921 res!68066) b!142920))

(declare-fun m!172243 () Bool)

(assert (=> b!142921 m!172243))

(declare-fun m!172245 () Bool)

(assert (=> b!142925 m!172245))

(declare-fun m!172247 () Bool)

(assert (=> bm!15772 m!172247))

(declare-fun m!172249 () Bool)

(assert (=> b!142920 m!172249))

(declare-fun m!172251 () Bool)

(assert (=> d!45695 m!172251))

(assert (=> d!45695 m!170597))

(assert (=> b!140658 d!45695))

(declare-fun d!45697 () Bool)

(declare-fun e!93108 () Bool)

(assert (=> d!45697 e!93108))

(declare-fun res!68068 () Bool)

(assert (=> d!45697 (=> res!68068 e!93108)))

(declare-fun lt!74747 () Bool)

(assert (=> d!45697 (= res!68068 (not lt!74747))))

(declare-fun lt!74746 () Bool)

(assert (=> d!45697 (= lt!74747 lt!74746)))

(declare-fun lt!74745 () Unit!4393)

(declare-fun e!93107 () Unit!4393)

(assert (=> d!45697 (= lt!74745 e!93107)))

(declare-fun c!27079 () Bool)

(assert (=> d!45697 (= c!27079 lt!74746)))

(assert (=> d!45697 (= lt!74746 (containsKey!178 (toList!871 lt!73517) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (=> d!45697 (= (contains!910 lt!73517 (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)) lt!74747)))

(declare-fun b!142928 () Bool)

(declare-fun lt!74744 () Unit!4393)

(assert (=> b!142928 (= e!93107 lt!74744)))

(assert (=> b!142928 (= lt!74744 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73517) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(assert (=> b!142928 (isDefined!128 (getValueByKey!174 (toList!871 lt!73517) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000)))))

(declare-fun b!142929 () Bool)

(declare-fun Unit!4530 () Unit!4393)

(assert (=> b!142929 (= e!93107 Unit!4530)))

(declare-fun b!142930 () Bool)

(assert (=> b!142930 (= e!93108 (isDefined!128 (getValueByKey!174 (toList!871 lt!73517) (select (arr!2302 (_keys!4697 (_2!1340 lt!73099))) #b00000000000000000000000000000000))))))

(assert (= (and d!45697 c!27079) b!142928))

(assert (= (and d!45697 (not c!27079)) b!142929))

(assert (= (and d!45697 (not res!68068)) b!142930))

(assert (=> d!45697 m!167523))

(declare-fun m!172253 () Bool)

(assert (=> d!45697 m!172253))

(assert (=> b!142928 m!167523))

(declare-fun m!172255 () Bool)

(assert (=> b!142928 m!172255))

(assert (=> b!142928 m!167523))

(assert (=> b!142928 m!171863))

(assert (=> b!142928 m!171863))

(declare-fun m!172257 () Bool)

(assert (=> b!142928 m!172257))

(assert (=> b!142930 m!167523))

(assert (=> b!142930 m!171863))

(assert (=> b!142930 m!171863))

(assert (=> b!142930 m!172257))

(assert (=> b!140488 d!45697))

(assert (=> d!43979 d!43777))

(assert (=> d!43979 d!43779))

(declare-fun d!45699 () Bool)

(assert (=> d!45699 (isDefined!128 (getValueByKey!174 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021))))

(assert (=> d!45699 true))

(declare-fun _$12!419 () Unit!4393)

(assert (=> d!45699 (= (choose!871 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) lt!73021) _$12!419)))

(declare-fun bs!6040 () Bool)

(assert (= bs!6040 d!45699))

(assert (=> bs!6040 m!167211))

(assert (=> bs!6040 m!167211))

(assert (=> bs!6040 m!167213))

(assert (=> d!43979 d!45699))

(declare-fun d!45701 () Bool)

(declare-fun res!68069 () Bool)

(declare-fun e!93109 () Bool)

(assert (=> d!45701 (=> res!68069 e!93109)))

(assert (=> d!45701 (= res!68069 (or ((_ is Nil!1736) (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Nil!1736) (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))))

(assert (=> d!45701 (= (isStrictlySorted!320 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) e!93109)))

(declare-fun b!142931 () Bool)

(declare-fun e!93110 () Bool)

(assert (=> b!142931 (= e!93109 e!93110)))

(declare-fun res!68070 () Bool)

(assert (=> b!142931 (=> (not res!68070) (not e!93110))))

(assert (=> b!142931 (= res!68070 (bvslt (_1!1339 (h!2342 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))) (_1!1339 (h!2342 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))))

(declare-fun b!142932 () Bool)

(assert (=> b!142932 (= e!93110 (isStrictlySorted!320 (t!6314 (toList!871 (+!167 lt!73015 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))))

(assert (= (and d!45701 (not res!68069)) b!142931))

(assert (= (and b!142931 res!68070) b!142932))

(declare-fun m!172259 () Bool)

(assert (=> b!142932 m!172259))

(assert (=> d!43979 d!45701))

(assert (=> b!140865 d!44315))

(assert (=> b!140865 d!44317))

(declare-fun d!45703 () Bool)

(assert (=> d!45703 (= (get!1528 (getValueByKey!174 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73136)) (v!3279 (getValueByKey!174 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73136)))))

(assert (=> d!44089 d!45703))

(declare-fun b!142936 () Bool)

(declare-fun e!93112 () Option!180)

(assert (=> b!142936 (= e!93112 None!178)))

(declare-fun b!142934 () Bool)

(declare-fun e!93111 () Option!180)

(assert (=> b!142934 (= e!93111 e!93112)))

(declare-fun c!27081 () Bool)

(assert (=> b!142934 (= c!27081 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (not (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73136))))))

(declare-fun b!142933 () Bool)

(assert (=> b!142933 (= e!93111 (Some!179 (_2!1339 (h!2342 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))))))))

(declare-fun d!45705 () Bool)

(declare-fun c!27080 () Bool)

(assert (=> d!45705 (= c!27080 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))))) lt!73136)))))

(assert (=> d!45705 (= (getValueByKey!174 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16))))) lt!73136) e!93111)))

(declare-fun b!142935 () Bool)

(assert (=> b!142935 (= e!93112 (getValueByKey!174 (t!6314 (toList!871 (+!167 lt!73141 (tuple2!2657 lt!73139 (ite c!26231 (ite c!26232 (minValue!2789 newMap!16) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2789 newMap!16)))))) lt!73136))))

(assert (= (and d!45705 c!27080) b!142933))

(assert (= (and d!45705 (not c!27080)) b!142934))

(assert (= (and b!142934 c!27081) b!142935))

(assert (= (and b!142934 (not c!27081)) b!142936))

(declare-fun m!172261 () Bool)

(assert (=> b!142935 m!172261))

(assert (=> d!44089 d!45705))

(declare-fun d!45707 () Bool)

(assert (=> d!45707 (= (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4697 newMap!16) #b00000000000000000000000000000000 (size!2575 (_keys!4697 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!45707 true))

(declare-fun _$84!15 () Unit!4393)

(assert (=> d!45707 (= (choose!1 (_keys!4697 newMap!16) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) _$84!15)))

(declare-fun bs!6041 () Bool)

(assert (= bs!6041 d!45707))

(assert (=> bs!6041 m!167045))

(assert (=> bs!6041 m!167037))

(assert (=> bs!6041 m!166599))

(assert (=> d!44159 d!45707))

(declare-fun d!45709 () Bool)

(assert (=> d!45709 (= (get!1528 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73172) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43793 d!45709))

(assert (=> d!43793 d!44949))

(declare-fun d!45711 () Bool)

(declare-fun res!68071 () Bool)

(declare-fun e!93113 () Bool)

(assert (=> d!45711 (=> res!68071 e!93113)))

(assert (=> d!45711 (= res!68071 (and ((_ is Cons!1735) lt!73923) (= (_1!1339 (h!2342 lt!73923)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45711 (= (containsKey!178 lt!73923 (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!93113)))

(declare-fun b!142937 () Bool)

(declare-fun e!93114 () Bool)

(assert (=> b!142937 (= e!93113 e!93114)))

(declare-fun res!68072 () Bool)

(assert (=> b!142937 (=> (not res!68072) (not e!93114))))

(assert (=> b!142937 (= res!68072 (and (or (not ((_ is Cons!1735) lt!73923)) (bvsle (_1!1339 (h!2342 lt!73923)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73923) (bvslt (_1!1339 (h!2342 lt!73923)) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!142938 () Bool)

(assert (=> b!142938 (= e!93114 (containsKey!178 (t!6314 lt!73923) (_1!1339 (tuple2!2657 lt!73004 (zeroValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45711 (not res!68071)) b!142937))

(assert (= (and b!142937 res!68072) b!142938))

(declare-fun m!172263 () Bool)

(assert (=> b!142938 m!172263))

(assert (=> b!141133 d!45711))

(declare-fun b!142942 () Bool)

(declare-fun e!93116 () Option!180)

(assert (=> b!142942 (= e!93116 None!178)))

(declare-fun b!142940 () Bool)

(declare-fun e!93115 () Option!180)

(assert (=> b!142940 (= e!93115 e!93116)))

(declare-fun c!27083 () Bool)

(assert (=> b!142940 (= c!27083 (and ((_ is Cons!1735) (toList!871 lt!73615)) (not (= (_1!1339 (h!2342 (toList!871 lt!73615))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!142939 () Bool)

(assert (=> b!142939 (= e!93115 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73615)))))))

(declare-fun d!45713 () Bool)

(declare-fun c!27082 () Bool)

(assert (=> d!45713 (= c!27082 (and ((_ is Cons!1735) (toList!871 lt!73615)) (= (_1!1339 (h!2342 (toList!871 lt!73615))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45713 (= (getValueByKey!174 (toList!871 lt!73615) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!93115)))

(declare-fun b!142941 () Bool)

(assert (=> b!142941 (= e!93116 (getValueByKey!174 (t!6314 (toList!871 lt!73615)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45713 c!27082) b!142939))

(assert (= (and d!45713 (not c!27082)) b!142940))

(assert (= (and b!142940 c!27083) b!142941))

(assert (= (and b!142940 (not c!27083)) b!142942))

(declare-fun m!172265 () Bool)

(assert (=> b!142941 m!172265))

(assert (=> b!140625 d!45713))

(declare-fun d!45715 () Bool)

(assert (=> d!45715 (= (apply!120 lt!73548 (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73548) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6042 () Bool)

(assert (= bs!6042 d!45715))

(assert (=> bs!6042 m!166699))

(assert (=> bs!6042 m!171845))

(assert (=> bs!6042 m!171845))

(declare-fun m!172267 () Bool)

(assert (=> bs!6042 m!172267))

(assert (=> b!140511 d!45715))

(assert (=> b!140511 d!43893))

(assert (=> b!140718 d!44275))

(assert (=> b!140718 d!44277))

(assert (=> b!140425 d!44327))

(assert (=> b!140425 d!44329))

(assert (=> b!140851 d!44267))

(assert (=> b!140851 d!44269))

(declare-fun b!142944 () Bool)

(declare-fun e!93118 () Bool)

(declare-fun call!15778 () Bool)

(assert (=> b!142944 (= e!93118 call!15778)))

(declare-fun b!142945 () Bool)

(declare-fun e!93119 () Bool)

(assert (=> b!142945 (= e!93119 e!93118)))

(declare-fun c!27084 () Bool)

(assert (=> b!142945 (= c!27084 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142946 () Bool)

(declare-fun e!93117 () Bool)

(assert (=> b!142946 (= e!93117 call!15778)))

(declare-fun bm!15775 () Bool)

(assert (=> bm!15775 (= call!15778 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))))))

(declare-fun b!142943 () Bool)

(assert (=> b!142943 (= e!93118 e!93117)))

(declare-fun lt!74749 () (_ BitVec 64))

(assert (=> b!142943 (= lt!74749 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74748 () Unit!4393)

(assert (=> b!142943 (= lt!74748 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!74749 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!142943 (arrayContainsKey!0 (_keys!4697 (v!3273 (underlying!476 thiss!992))) lt!74749 #b00000000000000000000000000000000)))

(declare-fun lt!74750 () Unit!4393)

(assert (=> b!142943 (= lt!74750 lt!74748)))

(declare-fun res!68074 () Bool)

(assert (=> b!142943 (= res!68074 (= (seekEntryOrOpen!0 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))) (Found!282 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142943 (=> (not res!68074) (not e!93117))))

(declare-fun d!45717 () Bool)

(declare-fun res!68073 () Bool)

(assert (=> d!45717 (=> res!68073 e!93119)))

(assert (=> d!45717 (= res!68073 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 (v!3273 (underlying!476 thiss!992))))))))

(assert (=> d!45717 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4697 (v!3273 (underlying!476 thiss!992))) (mask!7278 (v!3273 (underlying!476 thiss!992)))) e!93119)))

(assert (= (and d!45717 (not res!68073)) b!142945))

(assert (= (and b!142945 c!27084) b!142943))

(assert (= (and b!142945 (not c!27084)) b!142944))

(assert (= (and b!142943 res!68074) b!142946))

(assert (= (or b!142946 b!142944) bm!15775))

(assert (=> b!142945 m!169349))

(assert (=> b!142945 m!169349))

(assert (=> b!142945 m!169351))

(declare-fun m!172269 () Bool)

(assert (=> bm!15775 m!172269))

(assert (=> b!142943 m!169349))

(declare-fun m!172271 () Bool)

(assert (=> b!142943 m!172271))

(declare-fun m!172273 () Bool)

(assert (=> b!142943 m!172273))

(assert (=> b!142943 m!169349))

(declare-fun m!172275 () Bool)

(assert (=> b!142943 m!172275))

(assert (=> bm!15585 d!45717))

(declare-fun d!45719 () Bool)

(assert (=> d!45719 (isDefined!128 (getValueByKey!174 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74751 () Unit!4393)

(assert (=> d!45719 (= lt!74751 (choose!871 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!93120 () Bool)

(assert (=> d!45719 e!93120))

(declare-fun res!68075 () Bool)

(assert (=> d!45719 (=> (not res!68075) (not e!93120))))

(assert (=> d!45719 (= res!68075 (isStrictlySorted!320 (toList!871 lt!73172)))))

(assert (=> d!45719 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)) lt!74751)))

(declare-fun b!142947 () Bool)

(assert (=> b!142947 (= e!93120 (containsKey!178 (toList!871 lt!73172) (select (arr!2302 (_keys!4697 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45719 res!68075) b!142947))

(assert (=> d!45719 m!166699))

(assert (=> d!45719 m!168307))

(assert (=> d!45719 m!168307))

(assert (=> d!45719 m!168811))

(assert (=> d!45719 m!166699))

(declare-fun m!172277 () Bool)

(assert (=> d!45719 m!172277))

(assert (=> d!45719 m!168995))

(assert (=> b!142947 m!166699))

(assert (=> b!142947 m!168807))

(assert (=> b!141118 d!45719))

(assert (=> b!141118 d!45547))

(assert (=> b!141118 d!45543))

(assert (=> d!43995 d!43997))

(assert (=> d!43995 d!43601))

(assert (=> d!43995 d!43993))

(assert (=> b!140591 d!44463))

(assert (=> b!140591 d!44465))

(declare-fun b!142948 () Bool)

(declare-fun e!93123 () List!1739)

(declare-fun call!15781 () List!1739)

(assert (=> b!142948 (= e!93123 call!15781)))

(declare-fun b!142949 () Bool)

(declare-fun e!93121 () List!1739)

(declare-fun call!15780 () List!1739)

(assert (=> b!142949 (= e!93121 call!15780)))

(declare-fun lt!74752 () List!1739)

(declare-fun b!142950 () Bool)

(declare-fun e!93124 () Bool)

(assert (=> b!142950 (= e!93124 (contains!914 lt!74752 (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!15776 () Bool)

(declare-fun e!93122 () List!1739)

(declare-fun c!27088 () Bool)

(assert (=> bm!15776 (= call!15781 ($colon$colon!93 e!93122 (ite c!27088 (h!2342 (t!6314 (toList!871 e!91273))) (tuple2!2657 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!27085 () Bool)

(assert (=> bm!15776 (= c!27085 c!27088)))

(declare-fun bm!15777 () Bool)

(declare-fun call!15779 () List!1739)

(assert (=> bm!15777 (= call!15780 call!15779)))

(declare-fun b!142951 () Bool)

(declare-fun res!68076 () Bool)

(assert (=> b!142951 (=> (not res!68076) (not e!93124))))

(assert (=> b!142951 (= res!68076 (containsKey!178 lt!74752 (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!45721 () Bool)

(assert (=> d!45721 e!93124))

(declare-fun res!68077 () Bool)

(assert (=> d!45721 (=> (not res!68077) (not e!93124))))

(assert (=> d!45721 (= res!68077 (isStrictlySorted!320 lt!74752))))

(assert (=> d!45721 (= lt!74752 e!93123)))

(assert (=> d!45721 (= c!27088 (and ((_ is Cons!1735) (t!6314 (toList!871 e!91273))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 e!91273)))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45721 (isStrictlySorted!320 (t!6314 (toList!871 e!91273)))))

(assert (=> d!45721 (= (insertStrictlySorted!94 (t!6314 (toList!871 e!91273)) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74752)))

(declare-fun c!27087 () Bool)

(declare-fun c!27086 () Bool)

(declare-fun b!142952 () Bool)

(assert (=> b!142952 (= e!93122 (ite c!27087 (t!6314 (t!6314 (toList!871 e!91273))) (ite c!27086 (Cons!1735 (h!2342 (t!6314 (toList!871 e!91273))) (t!6314 (t!6314 (toList!871 e!91273)))) Nil!1736)))))

(declare-fun b!142953 () Bool)

(assert (=> b!142953 (= c!27086 (and ((_ is Cons!1735) (t!6314 (toList!871 e!91273))) (bvsgt (_1!1339 (h!2342 (t!6314 (toList!871 e!91273)))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!93125 () List!1739)

(assert (=> b!142953 (= e!93125 e!93121)))

(declare-fun b!142954 () Bool)

(assert (=> b!142954 (= e!93121 call!15780)))

(declare-fun b!142955 () Bool)

(assert (=> b!142955 (= e!93122 (insertStrictlySorted!94 (t!6314 (t!6314 (toList!871 e!91273))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!15778 () Bool)

(assert (=> bm!15778 (= call!15779 call!15781)))

(declare-fun b!142956 () Bool)

(assert (=> b!142956 (= e!93123 e!93125)))

(assert (=> b!142956 (= c!27087 (and ((_ is Cons!1735) (t!6314 (toList!871 e!91273))) (= (_1!1339 (h!2342 (t!6314 (toList!871 e!91273)))) (_1!1339 (ite c!26231 (ite c!26232 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142957 () Bool)

(assert (=> b!142957 (= e!93125 call!15779)))

(assert (= (and d!45721 c!27088) b!142948))

(assert (= (and d!45721 (not c!27088)) b!142956))

(assert (= (and b!142956 c!27087) b!142957))

(assert (= (and b!142956 (not c!27087)) b!142953))

(assert (= (and b!142953 c!27086) b!142949))

(assert (= (and b!142953 (not c!27086)) b!142954))

(assert (= (or b!142949 b!142954) bm!15777))

(assert (= (or b!142957 bm!15777) bm!15778))

(assert (= (or b!142948 bm!15778) bm!15776))

(assert (= (and bm!15776 c!27085) b!142955))

(assert (= (and bm!15776 (not c!27085)) b!142952))

(assert (= (and d!45721 res!68077) b!142951))

(assert (= (and b!142951 res!68076) b!142950))

(declare-fun m!172279 () Bool)

(assert (=> b!142951 m!172279))

(declare-fun m!172281 () Bool)

(assert (=> b!142955 m!172281))

(declare-fun m!172283 () Bool)

(assert (=> bm!15776 m!172283))

(declare-fun m!172285 () Bool)

(assert (=> b!142950 m!172285))

(declare-fun m!172287 () Bool)

(assert (=> d!45721 m!172287))

(assert (=> d!45721 m!170667))

(assert (=> b!140748 d!45721))

(declare-fun d!45723 () Bool)

(declare-fun e!93127 () Bool)

(assert (=> d!45723 e!93127))

(declare-fun res!68078 () Bool)

(assert (=> d!45723 (=> res!68078 e!93127)))

(declare-fun lt!74756 () Bool)

(assert (=> d!45723 (= res!68078 (not lt!74756))))

(declare-fun lt!74755 () Bool)

(assert (=> d!45723 (= lt!74756 lt!74755)))

(declare-fun lt!74754 () Unit!4393)

(declare-fun e!93126 () Unit!4393)

(assert (=> d!45723 (= lt!74754 e!93126)))

(declare-fun c!27089 () Bool)

(assert (=> d!45723 (= c!27089 lt!74755)))

(assert (=> d!45723 (= lt!74755 (containsKey!178 (toList!871 lt!73850) (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(assert (=> d!45723 (= (contains!910 lt!73850 (select (arr!2302 lt!73348) #b00000000000000000000000000000000)) lt!74756)))

(declare-fun b!142958 () Bool)

(declare-fun lt!74753 () Unit!4393)

(assert (=> b!142958 (= e!93126 lt!74753)))

(assert (=> b!142958 (= lt!74753 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73850) (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(assert (=> b!142958 (isDefined!128 (getValueByKey!174 (toList!871 lt!73850) (select (arr!2302 lt!73348) #b00000000000000000000000000000000)))))

(declare-fun b!142959 () Bool)

(declare-fun Unit!4531 () Unit!4393)

(assert (=> b!142959 (= e!93126 Unit!4531)))

(declare-fun b!142960 () Bool)

(assert (=> b!142960 (= e!93127 (isDefined!128 (getValueByKey!174 (toList!871 lt!73850) (select (arr!2302 lt!73348) #b00000000000000000000000000000000))))))

(assert (= (and d!45723 c!27089) b!142958))

(assert (= (and d!45723 (not c!27089)) b!142959))

(assert (= (and d!45723 (not res!68078)) b!142960))

(assert (=> d!45723 m!168641))

(declare-fun m!172289 () Bool)

(assert (=> d!45723 m!172289))

(assert (=> b!142958 m!168641))

(declare-fun m!172291 () Bool)

(assert (=> b!142958 m!172291))

(assert (=> b!142958 m!168641))

(assert (=> b!142958 m!171259))

(assert (=> b!142958 m!171259))

(declare-fun m!172293 () Bool)

(assert (=> b!142958 m!172293))

(assert (=> b!142960 m!168641))

(assert (=> b!142960 m!171259))

(assert (=> b!142960 m!171259))

(assert (=> b!142960 m!172293))

(assert (=> b!141049 d!45723))

(declare-fun d!45725 () Bool)

(declare-fun lt!74757 () Bool)

(assert (=> d!45725 (= lt!74757 (select (content!138 (toList!871 lt!73615)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun e!93129 () Bool)

(assert (=> d!45725 (= lt!74757 e!93129)))

(declare-fun res!68079 () Bool)

(assert (=> d!45725 (=> (not res!68079) (not e!93129))))

(assert (=> d!45725 (= res!68079 ((_ is Cons!1735) (toList!871 lt!73615)))))

(assert (=> d!45725 (= (contains!914 (toList!871 lt!73615) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))) lt!74757)))

(declare-fun b!142961 () Bool)

(declare-fun e!93128 () Bool)

(assert (=> b!142961 (= e!93129 e!93128)))

(declare-fun res!68080 () Bool)

(assert (=> b!142961 (=> res!68080 e!93128)))

(assert (=> b!142961 (= res!68080 (= (h!2342 (toList!871 lt!73615)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(declare-fun b!142962 () Bool)

(assert (=> b!142962 (= e!93128 (contains!914 (t!6314 (toList!871 lt!73615)) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))

(assert (= (and d!45725 res!68079) b!142961))

(assert (= (and b!142961 (not res!68080)) b!142962))

(declare-fun m!172295 () Bool)

(assert (=> d!45725 m!172295))

(declare-fun m!172297 () Bool)

(assert (=> d!45725 m!172297))

(declare-fun m!172299 () Bool)

(assert (=> b!142962 m!172299))

(assert (=> b!140626 d!45725))

(assert (=> d!43775 d!44847))

(assert (=> bm!15599 d!45181))

(assert (=> bm!15567 d!45149))

(declare-fun d!45727 () Bool)

(declare-fun e!93131 () Bool)

(assert (=> d!45727 e!93131))

(declare-fun res!68081 () Bool)

(assert (=> d!45727 (=> res!68081 e!93131)))

(declare-fun lt!74761 () Bool)

(assert (=> d!45727 (= res!68081 (not lt!74761))))

(declare-fun lt!74760 () Bool)

(assert (=> d!45727 (= lt!74761 lt!74760)))

(declare-fun lt!74759 () Unit!4393)

(declare-fun e!93130 () Unit!4393)

(assert (=> d!45727 (= lt!74759 e!93130)))

(declare-fun c!27090 () Bool)

(assert (=> d!45727 (= c!27090 lt!74760)))

(assert (=> d!45727 (= lt!74760 (containsKey!178 (toList!871 lt!73823) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> d!45727 (= (contains!910 lt!73823 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74761)))

(declare-fun b!142963 () Bool)

(declare-fun lt!74758 () Unit!4393)

(assert (=> b!142963 (= e!93130 lt!74758)))

(assert (=> b!142963 (= lt!74758 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73823) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (=> b!142963 (isDefined!128 (getValueByKey!174 (toList!871 lt!73823) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142964 () Bool)

(declare-fun Unit!4532 () Unit!4393)

(assert (=> b!142964 (= e!93130 Unit!4532)))

(declare-fun b!142965 () Bool)

(assert (=> b!142965 (= e!93131 (isDefined!128 (getValueByKey!174 (toList!871 lt!73823) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45727 c!27090) b!142963))

(assert (= (and d!45727 (not c!27090)) b!142964))

(assert (= (and d!45727 (not res!68081)) b!142965))

(declare-fun m!172301 () Bool)

(assert (=> d!45727 m!172301))

(declare-fun m!172303 () Bool)

(assert (=> b!142963 m!172303))

(assert (=> b!142963 m!168549))

(assert (=> b!142963 m!168549))

(declare-fun m!172305 () Bool)

(assert (=> b!142963 m!172305))

(assert (=> b!142965 m!168549))

(assert (=> b!142965 m!168549))

(assert (=> b!142965 m!172305))

(assert (=> d!44099 d!45727))

(declare-fun b!142969 () Bool)

(declare-fun e!93133 () Option!180)

(assert (=> b!142969 (= e!93133 None!178)))

(declare-fun b!142967 () Bool)

(declare-fun e!93132 () Option!180)

(assert (=> b!142967 (= e!93132 e!93133)))

(declare-fun c!27092 () Bool)

(assert (=> b!142967 (= c!27092 (and ((_ is Cons!1735) lt!73824) (not (= (_1!1339 (h!2342 lt!73824)) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun b!142966 () Bool)

(assert (=> b!142966 (= e!93132 (Some!179 (_2!1339 (h!2342 lt!73824))))))

(declare-fun c!27091 () Bool)

(declare-fun d!45729 () Bool)

(assert (=> d!45729 (= c!27091 (and ((_ is Cons!1735) lt!73824) (= (_1!1339 (h!2342 lt!73824)) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45729 (= (getValueByKey!174 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) e!93132)))

(declare-fun b!142968 () Bool)

(assert (=> b!142968 (= e!93133 (getValueByKey!174 (t!6314 lt!73824) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(assert (= (and d!45729 c!27091) b!142966))

(assert (= (and d!45729 (not c!27091)) b!142967))

(assert (= (and b!142967 c!27092) b!142968))

(assert (= (and b!142967 (not c!27092)) b!142969))

(declare-fun m!172307 () Bool)

(assert (=> b!142968 m!172307))

(assert (=> d!44099 d!45729))

(declare-fun d!45731 () Bool)

(assert (=> d!45731 (= (getValueByKey!174 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) (Some!179 (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun lt!74762 () Unit!4393)

(assert (=> d!45731 (= lt!74762 (choose!872 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun e!93134 () Bool)

(assert (=> d!45731 e!93134))

(declare-fun res!68082 () Bool)

(assert (=> d!45731 (=> (not res!68082) (not e!93134))))

(assert (=> d!45731 (= res!68082 (isStrictlySorted!320 lt!73824))))

(assert (=> d!45731 (= (lemmaContainsTupThenGetReturnValue!91 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74762)))

(declare-fun b!142970 () Bool)

(declare-fun res!68083 () Bool)

(assert (=> b!142970 (=> (not res!68083) (not e!93134))))

(assert (=> b!142970 (= res!68083 (containsKey!178 lt!73824 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun b!142971 () Bool)

(assert (=> b!142971 (= e!93134 (contains!914 lt!73824 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (= (and d!45731 res!68082) b!142970))

(assert (= (and b!142970 res!68083) b!142971))

(assert (=> d!45731 m!168543))

(declare-fun m!172309 () Bool)

(assert (=> d!45731 m!172309))

(declare-fun m!172311 () Bool)

(assert (=> d!45731 m!172311))

(declare-fun m!172313 () Bool)

(assert (=> b!142970 m!172313))

(declare-fun m!172315 () Bool)

(assert (=> b!142971 m!172315))

(assert (=> d!44099 d!45731))

(declare-fun b!142972 () Bool)

(declare-fun e!93137 () List!1739)

(declare-fun call!15784 () List!1739)

(assert (=> b!142972 (= e!93137 call!15784)))

(declare-fun b!142973 () Bool)

(declare-fun e!93135 () List!1739)

(declare-fun call!15783 () List!1739)

(assert (=> b!142973 (= e!93135 call!15783)))

(declare-fun lt!74763 () List!1739)

(declare-fun b!142974 () Bool)

(declare-fun e!93138 () Bool)

(assert (=> b!142974 (= e!93138 (contains!914 lt!74763 (tuple2!2657 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun c!27096 () Bool)

(declare-fun bm!15779 () Bool)

(declare-fun e!93136 () List!1739)

(assert (=> bm!15779 (= call!15784 ($colon$colon!93 e!93136 (ite c!27096 (h!2342 (toList!871 lt!73140)) (tuple2!2657 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))))

(declare-fun c!27093 () Bool)

(assert (=> bm!15779 (= c!27093 c!27096)))

(declare-fun bm!15780 () Bool)

(declare-fun call!15782 () List!1739)

(assert (=> bm!15780 (= call!15783 call!15782)))

(declare-fun b!142975 () Bool)

(declare-fun res!68084 () Bool)

(assert (=> b!142975 (=> (not res!68084) (not e!93138))))

(assert (=> b!142975 (= res!68084 (containsKey!178 lt!74763 (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun d!45733 () Bool)

(assert (=> d!45733 e!93138))

(declare-fun res!68085 () Bool)

(assert (=> d!45733 (=> (not res!68085) (not e!93138))))

(assert (=> d!45733 (= res!68085 (isStrictlySorted!320 lt!74763))))

(assert (=> d!45733 (= lt!74763 e!93137)))

(assert (=> d!45733 (= c!27096 (and ((_ is Cons!1735) (toList!871 lt!73140)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73140))) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(assert (=> d!45733 (isStrictlySorted!320 (toList!871 lt!73140))))

(assert (=> d!45733 (= (insertStrictlySorted!94 (toList!871 lt!73140) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))) lt!74763)))

(declare-fun c!27095 () Bool)

(declare-fun b!142976 () Bool)

(declare-fun c!27094 () Bool)

(assert (=> b!142976 (= e!93136 (ite c!27095 (t!6314 (toList!871 lt!73140)) (ite c!27094 (Cons!1735 (h!2342 (toList!871 lt!73140)) (t!6314 (toList!871 lt!73140))) Nil!1736)))))

(declare-fun b!142977 () Bool)

(assert (=> b!142977 (= c!27094 (and ((_ is Cons!1735) (toList!871 lt!73140)) (bvsgt (_1!1339 (h!2342 (toList!871 lt!73140))) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun e!93139 () List!1739)

(assert (=> b!142977 (= e!93139 e!93135)))

(declare-fun b!142978 () Bool)

(assert (=> b!142978 (= e!93135 call!15783)))

(declare-fun b!142979 () Bool)

(assert (=> b!142979 (= e!93136 (insertStrictlySorted!94 (t!6314 (toList!871 lt!73140)) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))) (_2!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16))))))))

(declare-fun bm!15781 () Bool)

(assert (=> bm!15781 (= call!15782 call!15784)))

(declare-fun b!142980 () Bool)

(assert (=> b!142980 (= e!93137 e!93139)))

(assert (=> b!142980 (= c!27095 (and ((_ is Cons!1735) (toList!871 lt!73140)) (= (_1!1339 (h!2342 (toList!871 lt!73140))) (_1!1339 (tuple2!2657 lt!73129 (ite (and c!26231 c!26232) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2789 newMap!16)))))))))

(declare-fun b!142981 () Bool)

(assert (=> b!142981 (= e!93139 call!15782)))

(assert (= (and d!45733 c!27096) b!142972))

(assert (= (and d!45733 (not c!27096)) b!142980))

(assert (= (and b!142980 c!27095) b!142981))

(assert (= (and b!142980 (not c!27095)) b!142977))

(assert (= (and b!142977 c!27094) b!142973))

(assert (= (and b!142977 (not c!27094)) b!142978))

(assert (= (or b!142973 b!142978) bm!15780))

(assert (= (or b!142981 bm!15780) bm!15781))

(assert (= (or b!142972 bm!15781) bm!15779))

(assert (= (and bm!15779 c!27093) b!142979))

(assert (= (and bm!15779 (not c!27093)) b!142976))

(assert (= (and d!45733 res!68085) b!142975))

(assert (= (and b!142975 res!68084) b!142974))

(declare-fun m!172317 () Bool)

(assert (=> b!142975 m!172317))

(declare-fun m!172319 () Bool)

(assert (=> b!142979 m!172319))

(declare-fun m!172321 () Bool)

(assert (=> bm!15779 m!172321))

(declare-fun m!172323 () Bool)

(assert (=> b!142974 m!172323))

(declare-fun m!172325 () Bool)

(assert (=> d!45733 m!172325))

(declare-fun m!172327 () Bool)

(assert (=> d!45733 m!172327))

(assert (=> d!44099 d!45733))

(declare-fun b!142985 () Bool)

(declare-fun e!93141 () Option!180)

(assert (=> b!142985 (= e!93141 None!178)))

(declare-fun b!142983 () Bool)

(declare-fun e!93140 () Option!180)

(assert (=> b!142983 (= e!93140 e!93141)))

(declare-fun c!27098 () Bool)

(assert (=> b!142983 (= c!27098 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (not (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142982 () Bool)

(assert (=> b!142982 (= e!93140 (Some!179 (_2!1339 (h!2342 (t!6314 (toList!871 lt!73003))))))))

(declare-fun d!45735 () Bool)

(declare-fun c!27097 () Bool)

(assert (=> d!45735 (= c!27097 (and ((_ is Cons!1735) (t!6314 (toList!871 lt!73003))) (= (_1!1339 (h!2342 (t!6314 (toList!871 lt!73003)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45735 (= (getValueByKey!174 (t!6314 (toList!871 lt!73003)) #b0000000000000000000000000000000000000000000000000000000000000000) e!93140)))

(declare-fun b!142984 () Bool)

(assert (=> b!142984 (= e!93141 (getValueByKey!174 (t!6314 (t!6314 (toList!871 lt!73003))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45735 c!27097) b!142982))

(assert (= (and d!45735 (not c!27097)) b!142983))

(assert (= (and b!142983 c!27098) b!142984))

(assert (= (and b!142983 (not c!27098)) b!142985))

(declare-fun m!172329 () Bool)

(assert (=> b!142984 m!172329))

(assert (=> b!140714 d!45735))

(assert (=> b!140777 d!44383))

(assert (=> d!44131 d!43795))

(declare-fun bm!15782 () Bool)

(declare-fun call!15785 () ListLongMap!1711)

(declare-fun call!15787 () ListLongMap!1711)

(assert (=> bm!15782 (= call!15785 call!15787)))

(declare-fun bm!15783 () Bool)

(declare-fun call!15790 () Bool)

(declare-fun lt!74767 () ListLongMap!1711)

(assert (=> bm!15783 (= call!15790 (contains!910 lt!74767 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142987 () Bool)

(declare-fun e!93149 () Bool)

(assert (=> b!142987 (= e!93149 (not call!15790))))

(declare-fun b!142988 () Bool)

(declare-fun e!93147 () ListLongMap!1711)

(assert (=> b!142988 (= e!93147 call!15785)))

(declare-fun b!142989 () Bool)

(declare-fun e!93146 () Bool)

(assert (=> b!142989 (= e!93146 (= (apply!120 lt!74767 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2789 (_2!1340 lt!73342))))))

(declare-fun b!142990 () Bool)

(declare-fun e!93151 () Bool)

(assert (=> b!142990 (= e!93151 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun b!142991 () Bool)

(declare-fun e!93152 () Bool)

(declare-fun e!93145 () Bool)

(assert (=> b!142991 (= e!93152 e!93145)))

(declare-fun c!27101 () Bool)

(assert (=> b!142991 (= c!27101 (not (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!142992 () Bool)

(declare-fun res!68087 () Bool)

(assert (=> b!142992 (=> (not res!68087) (not e!93152))))

(declare-fun e!93148 () Bool)

(assert (=> b!142992 (= res!68087 e!93148)))

(declare-fun res!68090 () Bool)

(assert (=> b!142992 (=> res!68090 e!93148)))

(assert (=> b!142992 (= res!68090 (not e!93151))))

(declare-fun res!68093 () Bool)

(assert (=> b!142992 (=> (not res!68093) (not e!93151))))

(assert (=> b!142992 (= res!68093 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(declare-fun bm!15784 () Bool)

(declare-fun call!15791 () ListLongMap!1711)

(declare-fun call!15788 () ListLongMap!1711)

(assert (=> bm!15784 (= call!15791 call!15788)))

(declare-fun b!142993 () Bool)

(declare-fun e!93143 () Bool)

(assert (=> b!142993 (= e!93143 (= (apply!120 lt!74767 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2789 (_2!1340 lt!73342))))))

(declare-fun b!142994 () Bool)

(declare-fun e!93144 () Bool)

(assert (=> b!142994 (= e!93144 (= (apply!120 lt!74767 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)) (get!1523 (select (arr!2303 (_values!2922 (_2!1340 lt!73342))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 (_2!1340 lt!73342)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!142994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2576 (_values!2922 (_2!1340 lt!73342)))))))

(assert (=> b!142994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(declare-fun b!142995 () Bool)

(declare-fun e!93154 () ListLongMap!1711)

(assert (=> b!142995 (= e!93154 e!93147)))

(declare-fun c!27103 () Bool)

(assert (=> b!142995 (= c!27103 (and (not (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!142996 () Bool)

(declare-fun e!93142 () Unit!4393)

(declare-fun lt!74783 () Unit!4393)

(assert (=> b!142996 (= e!93142 lt!74783)))

(declare-fun lt!74779 () ListLongMap!1711)

(assert (=> b!142996 (= lt!74779 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))))))

(declare-fun lt!74768 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74768 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74785 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74785 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000))))

(declare-fun lt!74764 () Unit!4393)

(assert (=> b!142996 (= lt!74764 (addStillContains!96 lt!74779 lt!74768 (zeroValue!2789 (_2!1340 lt!73342)) lt!74785))))

(assert (=> b!142996 (contains!910 (+!167 lt!74779 (tuple2!2657 lt!74768 (zeroValue!2789 (_2!1340 lt!73342)))) lt!74785)))

(declare-fun lt!74766 () Unit!4393)

(assert (=> b!142996 (= lt!74766 lt!74764)))

(declare-fun lt!74769 () ListLongMap!1711)

(assert (=> b!142996 (= lt!74769 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))))))

(declare-fun lt!74781 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74781 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74776 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74776 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000))))

(declare-fun lt!74777 () Unit!4393)

(assert (=> b!142996 (= lt!74777 (addApplyDifferent!96 lt!74769 lt!74781 (minValue!2789 (_2!1340 lt!73342)) lt!74776))))

(assert (=> b!142996 (= (apply!120 (+!167 lt!74769 (tuple2!2657 lt!74781 (minValue!2789 (_2!1340 lt!73342)))) lt!74776) (apply!120 lt!74769 lt!74776))))

(declare-fun lt!74782 () Unit!4393)

(assert (=> b!142996 (= lt!74782 lt!74777)))

(declare-fun lt!74765 () ListLongMap!1711)

(assert (=> b!142996 (= lt!74765 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))))))

(declare-fun lt!74774 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74774 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74784 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74784 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000))))

(declare-fun lt!74773 () Unit!4393)

(assert (=> b!142996 (= lt!74773 (addApplyDifferent!96 lt!74765 lt!74774 (zeroValue!2789 (_2!1340 lt!73342)) lt!74784))))

(assert (=> b!142996 (= (apply!120 (+!167 lt!74765 (tuple2!2657 lt!74774 (zeroValue!2789 (_2!1340 lt!73342)))) lt!74784) (apply!120 lt!74765 lt!74784))))

(declare-fun lt!74770 () Unit!4393)

(assert (=> b!142996 (= lt!74770 lt!74773)))

(declare-fun lt!74780 () ListLongMap!1711)

(assert (=> b!142996 (= lt!74780 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))))))

(declare-fun lt!74778 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74778 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74775 () (_ BitVec 64))

(assert (=> b!142996 (= lt!74775 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000))))

(assert (=> b!142996 (= lt!74783 (addApplyDifferent!96 lt!74780 lt!74778 (minValue!2789 (_2!1340 lt!73342)) lt!74775))))

(assert (=> b!142996 (= (apply!120 (+!167 lt!74780 (tuple2!2657 lt!74778 (minValue!2789 (_2!1340 lt!73342)))) lt!74775) (apply!120 lt!74780 lt!74775))))

(declare-fun d!45737 () Bool)

(assert (=> d!45737 e!93152))

(declare-fun res!68092 () Bool)

(assert (=> d!45737 (=> (not res!68092) (not e!93152))))

(assert (=> d!45737 (= res!68092 (or (bvsge #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))))

(declare-fun lt!74771 () ListLongMap!1711)

(assert (=> d!45737 (= lt!74767 lt!74771)))

(declare-fun lt!74772 () Unit!4393)

(assert (=> d!45737 (= lt!74772 e!93142)))

(declare-fun c!27099 () Bool)

(declare-fun e!93153 () Bool)

(assert (=> d!45737 (= c!27099 e!93153)))

(declare-fun res!68089 () Bool)

(assert (=> d!45737 (=> (not res!68089) (not e!93153))))

(assert (=> d!45737 (= res!68089 (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(assert (=> d!45737 (= lt!74771 e!93154)))

(declare-fun c!27100 () Bool)

(assert (=> d!45737 (= c!27100 (and (not (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!45737 (validMask!0 (mask!7278 (_2!1340 lt!73342)))))

(assert (=> d!45737 (= (getCurrentListMap!534 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))) lt!74767)))

(declare-fun b!142986 () Bool)

(declare-fun e!93150 () ListLongMap!1711)

(declare-fun call!15786 () ListLongMap!1711)

(assert (=> b!142986 (= e!93150 call!15786)))

(declare-fun b!142997 () Bool)

(assert (=> b!142997 (= e!93154 (+!167 call!15787 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73342)))))))

(declare-fun b!142998 () Bool)

(assert (=> b!142998 (= e!93149 e!93143)))

(declare-fun res!68088 () Bool)

(assert (=> b!142998 (= res!68088 call!15790)))

(assert (=> b!142998 (=> (not res!68088) (not e!93143))))

(declare-fun bm!15785 () Bool)

(assert (=> bm!15785 (= call!15786 call!15791)))

(declare-fun b!142999 () Bool)

(declare-fun res!68086 () Bool)

(assert (=> b!142999 (=> (not res!68086) (not e!93152))))

(assert (=> b!142999 (= res!68086 e!93149)))

(declare-fun c!27104 () Bool)

(assert (=> b!142999 (= c!27104 (not (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!143000 () Bool)

(declare-fun c!27102 () Bool)

(assert (=> b!143000 (= c!27102 (and (not (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2694 (_2!1340 lt!73342)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!143000 (= e!93147 e!93150)))

(declare-fun b!143001 () Bool)

(assert (=> b!143001 (= e!93153 (validKeyInArray!0 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(declare-fun bm!15786 () Bool)

(declare-fun call!15789 () Bool)

(assert (=> bm!15786 (= call!15789 (contains!910 lt!74767 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!143002 () Bool)

(assert (=> b!143002 (= e!93150 call!15785)))

(declare-fun b!143003 () Bool)

(assert (=> b!143003 (= e!93145 (not call!15789))))

(declare-fun bm!15787 () Bool)

(assert (=> bm!15787 (= call!15788 (getCurrentListMapNoExtraKeys!132 (_keys!4697 (_2!1340 lt!73342)) (_values!2922 (_2!1340 lt!73342)) (mask!7278 (_2!1340 lt!73342)) (extraKeys!2694 (_2!1340 lt!73342)) (zeroValue!2789 (_2!1340 lt!73342)) (minValue!2789 (_2!1340 lt!73342)) #b00000000000000000000000000000000 (defaultEntry!2939 (_2!1340 lt!73342))))))

(declare-fun b!143004 () Bool)

(assert (=> b!143004 (= e!93145 e!93146)))

(declare-fun res!68091 () Bool)

(assert (=> b!143004 (= res!68091 call!15789)))

(assert (=> b!143004 (=> (not res!68091) (not e!93146))))

(declare-fun b!143005 () Bool)

(assert (=> b!143005 (= e!93148 e!93144)))

(declare-fun res!68094 () Bool)

(assert (=> b!143005 (=> (not res!68094) (not e!93144))))

(assert (=> b!143005 (= res!68094 (contains!910 lt!74767 (select (arr!2302 (_keys!4697 (_2!1340 lt!73342))) #b00000000000000000000000000000000)))))

(assert (=> b!143005 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2575 (_keys!4697 (_2!1340 lt!73342)))))))

(declare-fun b!143006 () Bool)

(declare-fun Unit!4533 () Unit!4393)

(assert (=> b!143006 (= e!93142 Unit!4533)))

(declare-fun bm!15788 () Bool)

(assert (=> bm!15788 (= call!15787 (+!167 (ite c!27100 call!15788 (ite c!27103 call!15791 call!15786)) (ite (or c!27100 c!27103) (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2789 (_2!1340 lt!73342))) (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (_2!1340 lt!73342))))))))

(assert (= (and d!45737 c!27100) b!142997))

(assert (= (and d!45737 (not c!27100)) b!142995))

(assert (= (and b!142995 c!27103) b!142988))

(assert (= (and b!142995 (not c!27103)) b!143000))

(assert (= (and b!143000 c!27102) b!143002))

(assert (= (and b!143000 (not c!27102)) b!142986))

(assert (= (or b!143002 b!142986) bm!15785))

(assert (= (or b!142988 bm!15785) bm!15784))

(assert (= (or b!142988 b!143002) bm!15782))

(assert (= (or b!142997 bm!15784) bm!15787))

(assert (= (or b!142997 bm!15782) bm!15788))

(assert (= (and d!45737 res!68089) b!143001))

(assert (= (and d!45737 c!27099) b!142996))

(assert (= (and d!45737 (not c!27099)) b!143006))

(assert (= (and d!45737 res!68092) b!142992))

(assert (= (and b!142992 res!68093) b!142990))

(assert (= (and b!142992 (not res!68090)) b!143005))

(assert (= (and b!143005 res!68094) b!142994))

(assert (= (and b!142992 res!68087) b!142999))

(assert (= (and b!142999 c!27104) b!142998))

(assert (= (and b!142999 (not c!27104)) b!142987))

(assert (= (and b!142998 res!68088) b!142993))

(assert (= (or b!142998 b!142987) bm!15783))

(assert (= (and b!142999 res!68086) b!142991))

(assert (= (and b!142991 c!27101) b!143004))

(assert (= (and b!142991 (not c!27101)) b!143003))

(assert (= (and b!143004 res!68091) b!142989))

(assert (= (or b!143004 b!143003) bm!15786))

(declare-fun b_lambda!6369 () Bool)

(assert (=> (not b_lambda!6369) (not b!142994)))

(declare-fun tb!2557 () Bool)

(declare-fun t!6337 () Bool)

(assert (=> (and b!139651 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 (_2!1340 lt!73342))) t!6337) tb!2557))

(declare-fun result!4195 () Bool)

(assert (=> tb!2557 (= result!4195 tp_is_empty!2929)))

(assert (=> b!142994 t!6337))

(declare-fun b_and!8889 () Bool)

(assert (= b_and!8885 (and (=> t!6337 result!4195) b_and!8889)))

(declare-fun t!6339 () Bool)

(declare-fun tb!2559 () Bool)

(assert (=> (and b!139639 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (_2!1340 lt!73342))) t!6339) tb!2559))

(declare-fun result!4197 () Bool)

(assert (= result!4197 result!4195))

(assert (=> b!142994 t!6339))

(declare-fun b_and!8891 () Bool)

(assert (= b_and!8887 (and (=> t!6339 result!4197) b_and!8891)))

(assert (=> b!143001 m!168913))

(assert (=> b!143001 m!168913))

(assert (=> b!143001 m!168915))

(declare-fun m!172331 () Bool)

(assert (=> b!142994 m!172331))

(declare-fun m!172333 () Bool)

(assert (=> b!142994 m!172333))

(assert (=> b!142994 m!172331))

(declare-fun m!172335 () Bool)

(assert (=> b!142994 m!172335))

(assert (=> b!142994 m!168913))

(assert (=> b!142994 m!168913))

(declare-fun m!172337 () Bool)

(assert (=> b!142994 m!172337))

(assert (=> b!142994 m!172333))

(declare-fun m!172339 () Bool)

(assert (=> bm!15783 m!172339))

(assert (=> b!143005 m!168913))

(assert (=> b!143005 m!168913))

(declare-fun m!172341 () Bool)

(assert (=> b!143005 m!172341))

(declare-fun m!172343 () Bool)

(assert (=> b!142989 m!172343))

(assert (=> d!45737 m!170519))

(declare-fun m!172345 () Bool)

(assert (=> bm!15786 m!172345))

(declare-fun m!172347 () Bool)

(assert (=> bm!15788 m!172347))

(declare-fun m!172349 () Bool)

(assert (=> bm!15787 m!172349))

(declare-fun m!172351 () Bool)

(assert (=> b!142993 m!172351))

(declare-fun m!172353 () Bool)

(assert (=> b!142996 m!172353))

(declare-fun m!172355 () Bool)

(assert (=> b!142996 m!172355))

(declare-fun m!172357 () Bool)

(assert (=> b!142996 m!172357))

(declare-fun m!172359 () Bool)

(assert (=> b!142996 m!172359))

(declare-fun m!172361 () Bool)

(assert (=> b!142996 m!172361))

(declare-fun m!172363 () Bool)

(assert (=> b!142996 m!172363))

(assert (=> b!142996 m!172359))

(declare-fun m!172365 () Bool)

(assert (=> b!142996 m!172365))

(declare-fun m!172367 () Bool)

(assert (=> b!142996 m!172367))

(declare-fun m!172369 () Bool)

(assert (=> b!142996 m!172369))

(declare-fun m!172371 () Bool)

(assert (=> b!142996 m!172371))

(declare-fun m!172373 () Bool)

(assert (=> b!142996 m!172373))

(assert (=> b!142996 m!172363))

(declare-fun m!172375 () Bool)

(assert (=> b!142996 m!172375))

(declare-fun m!172377 () Bool)

(assert (=> b!142996 m!172377))

(assert (=> b!142996 m!172367))

(assert (=> b!142996 m!172371))

(assert (=> b!142996 m!168913))

(declare-fun m!172379 () Bool)

(assert (=> b!142996 m!172379))

(assert (=> b!142996 m!172349))

(declare-fun m!172381 () Bool)

(assert (=> b!142996 m!172381))

(assert (=> b!142990 m!168913))

(assert (=> b!142990 m!168913))

(assert (=> b!142990 m!168915))

(declare-fun m!172383 () Bool)

(assert (=> b!142997 m!172383))

(assert (=> d!43721 d!45737))

(assert (=> b!140510 d!43697))

(assert (=> b!140601 d!43699))

(declare-fun d!45739 () Bool)

(assert (=> d!45739 (= (apply!120 lt!73880 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000)) (get!1528 (getValueByKey!174 (toList!871 lt!73880) (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!6043 () Bool)

(assert (= bs!6043 d!45739))

(assert (=> bs!6043 m!168705))

(assert (=> bs!6043 m!169317))

(assert (=> bs!6043 m!169317))

(declare-fun m!172385 () Bool)

(assert (=> bs!6043 m!172385))

(assert (=> b!141073 d!45739))

(declare-fun d!45741 () Bool)

(declare-fun c!27105 () Bool)

(assert (=> d!45741 (= c!27105 ((_ is ValueCellFull!1121) (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!93155 () V!3553)

(assert (=> d!45741 (= (get!1523 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!93155)))

(declare-fun b!143007 () Bool)

(assert (=> b!143007 (= e!93155 (get!1526 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!143008 () Bool)

(assert (=> b!143008 (= e!93155 (get!1527 (select (arr!2303 (array!4876 (store (arr!2303 (_values!2922 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (ValueCellFull!1121 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2576 (_values!2922 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!434 (defaultEntry!2939 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45741 c!27105) b!143007))

(assert (= (and d!45741 (not c!27105)) b!143008))

(assert (=> b!143007 m!168713))

(assert (=> b!143007 m!166703))

(declare-fun m!172387 () Bool)

(assert (=> b!143007 m!172387))

(assert (=> b!143008 m!168713))

(assert (=> b!143008 m!166703))

(declare-fun m!172389 () Bool)

(assert (=> b!143008 m!172389))

(assert (=> b!141073 d!45741))

(declare-fun d!45743 () Bool)

(declare-fun res!68095 () Bool)

(declare-fun e!93156 () Bool)

(assert (=> d!45743 (=> res!68095 e!93156)))

(assert (=> d!45743 (= res!68095 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))) lt!73190)))))

(assert (=> d!45743 (= (containsKey!178 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))) lt!73190) e!93156)))

(declare-fun b!143009 () Bool)

(declare-fun e!93157 () Bool)

(assert (=> b!143009 (= e!93156 e!93157)))

(declare-fun res!68096 () Bool)

(assert (=> b!143009 (=> (not res!68096) (not e!93157))))

(assert (=> b!143009 (= res!68096 (and (or (not ((_ is Cons!1735) (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))) (bvsle (_1!1339 (h!2342 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))) lt!73190)) ((_ is Cons!1735) (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))) (bvslt (_1!1339 (h!2342 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16)))))) lt!73190)))))

(declare-fun b!143010 () Bool)

(assert (=> b!143010 (= e!93157 (containsKey!178 (t!6314 (toList!871 (+!167 lt!73184 (tuple2!2657 lt!73173 (zeroValue!2789 newMap!16))))) lt!73190))))

(assert (= (and d!45743 (not res!68095)) b!143009))

(assert (= (and b!143009 res!68096) b!143010))

(declare-fun m!172391 () Bool)

(assert (=> b!143010 m!172391))

(assert (=> d!43741 d!45743))

(assert (=> b!140694 d!43699))

(declare-fun c!27108 () Bool)

(declare-fun d!45745 () Bool)

(assert (=> d!45745 (= c!27108 ((_ is Nil!1737) (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))))

(declare-fun e!93160 () (InoxSet (_ BitVec 64)))

(assert (=> d!45745 (= (content!137 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) e!93160)))

(declare-fun b!143015 () Bool)

(assert (=> b!143015 (= e!93160 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!143016 () Bool)

(assert (=> b!143016 (= e!93160 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2343 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)) true) (content!137 (t!6315 (ite c!26168 (Cons!1736 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355) Nil!1737) Nil!1737)))))))

(assert (= (and d!45745 c!27108) b!143015))

(assert (= (and d!45745 (not c!27108)) b!143016))

(declare-fun m!172393 () Bool)

(assert (=> b!143016 m!172393))

(assert (=> b!143016 m!171111))

(assert (=> d!44167 d!45745))

(declare-fun d!45747 () Bool)

(declare-fun res!68097 () Bool)

(declare-fun e!93161 () Bool)

(assert (=> d!45747 (=> res!68097 e!93161)))

(assert (=> d!45747 (= res!68097 (and ((_ is Cons!1735) (toList!871 lt!73157)) (= (_1!1339 (h!2342 (toList!871 lt!73157))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45747 (= (containsKey!178 (toList!871 lt!73157) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!93161)))

(declare-fun b!143017 () Bool)

(declare-fun e!93162 () Bool)

(assert (=> b!143017 (= e!93161 e!93162)))

(declare-fun res!68098 () Bool)

(assert (=> b!143017 (=> (not res!68098) (not e!93162))))

(assert (=> b!143017 (= res!68098 (and (or (not ((_ is Cons!1735) (toList!871 lt!73157))) (bvsle (_1!1339 (h!2342 (toList!871 lt!73157))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) (toList!871 lt!73157)) (bvslt (_1!1339 (h!2342 (toList!871 lt!73157))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!143018 () Bool)

(assert (=> b!143018 (= e!93162 (containsKey!178 (t!6314 (toList!871 lt!73157)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45747 (not res!68097)) b!143017))

(assert (= (and b!143017 res!68098) b!143018))

(declare-fun m!172395 () Bool)

(assert (=> b!143018 m!172395))

(assert (=> d!44121 d!45747))

(declare-fun b!143019 () Bool)

(declare-fun e!93164 () (_ BitVec 32))

(declare-fun e!93163 () (_ BitVec 32))

(assert (=> b!143019 (= e!93164 e!93163)))

(declare-fun c!27110 () Bool)

(assert (=> b!143019 (= c!27110 (validKeyInArray!0 (select (arr!2302 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!143020 () Bool)

(declare-fun call!15792 () (_ BitVec 32))

(assert (=> b!143020 (= e!93163 (bvadd #b00000000000000000000000000000001 call!15792))))

(declare-fun lt!74786 () (_ BitVec 32))

(declare-fun d!45749 () Bool)

(assert (=> d!45749 (and (bvsge lt!74786 #b00000000000000000000000000000000) (bvsle lt!74786 (bvsub (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45749 (= lt!74786 e!93164)))

(declare-fun c!27109 () Bool)

(assert (=> d!45749 (= c!27109 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (=> d!45749 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2575 (_keys!4697 newMap!16)) (size!2575 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))))))))

(assert (=> d!45749 (= (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))) lt!74786)))

(declare-fun b!143021 () Bool)

(assert (=> b!143021 (= e!93164 #b00000000000000000000000000000000)))

(declare-fun b!143022 () Bool)

(assert (=> b!143022 (= e!93163 call!15792)))

(declare-fun bm!15789 () Bool)

(assert (=> bm!15789 (= call!15792 (arrayCountValidKeys!0 (array!4874 (store (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) (size!2575 (_keys!4697 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2575 (_keys!4697 newMap!16))))))

(assert (= (and d!45749 c!27109) b!143021))

(assert (= (and d!45749 (not c!27109)) b!143019))

(assert (= (and b!143019 c!27110) b!143020))

(assert (= (and b!143019 (not c!27110)) b!143022))

(assert (= (or b!143020 b!143022) bm!15789))

(assert (=> b!143019 m!171849))

(assert (=> b!143019 m!171849))

(assert (=> b!143019 m!171851))

(declare-fun m!172397 () Bool)

(assert (=> bm!15789 m!172397))

(assert (=> bm!15648 d!45749))

(declare-fun lt!74787 () Bool)

(declare-fun d!45751 () Bool)

(assert (=> d!45751 (= lt!74787 (select (content!138 (toList!871 lt!73734)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!93166 () Bool)

(assert (=> d!45751 (= lt!74787 e!93166)))

(declare-fun res!68099 () Bool)

(assert (=> d!45751 (=> (not res!68099) (not e!93166))))

(assert (=> d!45751 (= res!68099 ((_ is Cons!1735) (toList!871 lt!73734)))))

(assert (=> d!45751 (= (contains!914 (toList!871 lt!73734) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74787)))

(declare-fun b!143023 () Bool)

(declare-fun e!93165 () Bool)

(assert (=> b!143023 (= e!93166 e!93165)))

(declare-fun res!68100 () Bool)

(assert (=> b!143023 (=> res!68100 e!93165)))

(assert (=> b!143023 (= res!68100 (= (h!2342 (toList!871 lt!73734)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!143024 () Bool)

(assert (=> b!143024 (= e!93165 (contains!914 (t!6314 (toList!871 lt!73734)) (tuple2!2657 (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45751 res!68099) b!143023))

(assert (= (and b!143023 (not res!68100)) b!143024))

(declare-fun m!172399 () Bool)

(assert (=> d!45751 m!172399))

(declare-fun m!172401 () Bool)

(assert (=> d!45751 m!172401))

(declare-fun m!172403 () Bool)

(assert (=> b!143024 m!172403))

(assert (=> b!140844 d!45751))

(declare-fun d!45753 () Bool)

(assert (=> d!45753 (= (validKeyInArray!0 (select (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103)))) (and (not (= (select (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2302 (_keys!4697 newMap!16)) (ite c!26226 (index!3294 lt!73103) (index!3291 lt!73103))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141097 d!45753))

(declare-fun d!45755 () Bool)

(declare-fun res!68101 () Bool)

(declare-fun e!93167 () Bool)

(assert (=> d!45755 (=> res!68101 e!93167)))

(assert (=> d!45755 (= res!68101 (and ((_ is Cons!1735) lt!73841) (= (_1!1339 (h!2342 lt!73841)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(assert (=> d!45755 (= (containsKey!178 lt!73841 (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))) e!93167)))

(declare-fun b!143025 () Bool)

(declare-fun e!93168 () Bool)

(assert (=> b!143025 (= e!93167 e!93168)))

(declare-fun res!68102 () Bool)

(assert (=> b!143025 (=> (not res!68102) (not e!93168))))

(assert (=> b!143025 (= res!68102 (and (or (not ((_ is Cons!1735) lt!73841)) (bvsle (_1!1339 (h!2342 lt!73841)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))) ((_ is Cons!1735) lt!73841) (bvslt (_1!1339 (h!2342 lt!73841)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992))))))))))

(declare-fun b!143026 () Bool)

(assert (=> b!143026 (= e!93168 (containsKey!178 (t!6314 lt!73841) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 (v!3273 (underlying!476 thiss!992)))))))))

(assert (= (and d!45755 (not res!68101)) b!143025))

(assert (= (and b!143025 res!68102) b!143026))

(declare-fun m!172405 () Bool)

(assert (=> b!143026 m!172405))

(assert (=> b!141007 d!45755))

(assert (=> b!141188 d!44217))

(declare-fun b!143030 () Bool)

(declare-fun e!93170 () Option!180)

(assert (=> b!143030 (= e!93170 None!178)))

(declare-fun b!143028 () Bool)

(declare-fun e!93169 () Option!180)

(assert (=> b!143028 (= e!93169 e!93170)))

(declare-fun c!27112 () Bool)

(assert (=> b!143028 (= c!27112 (and ((_ is Cons!1735) (toList!871 lt!73688)) (not (= (_1!1339 (h!2342 (toList!871 lt!73688))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))))

(declare-fun b!143027 () Bool)

(assert (=> b!143027 (= e!93169 (Some!179 (_2!1339 (h!2342 (toList!871 lt!73688)))))))

(declare-fun d!45757 () Bool)

(declare-fun c!27111 () Bool)

(assert (=> d!45757 (= c!27111 (and ((_ is Cons!1735) (toList!871 lt!73688)) (= (_1!1339 (h!2342 (toList!871 lt!73688))) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16))))))))

(assert (=> d!45757 (= (getValueByKey!174 (toList!871 lt!73688) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))) e!93169)))

(declare-fun b!143029 () Bool)

(assert (=> b!143029 (= e!93170 (getValueByKey!174 (t!6314 (toList!871 lt!73688)) (_1!1339 (tuple2!2657 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2789 newMap!16)))))))

(assert (= (and d!45757 c!27111) b!143027))

(assert (= (and d!45757 (not c!27111)) b!143028))

(assert (= (and b!143028 c!27112) b!143029))

(assert (= (and b!143028 (not c!27112)) b!143030))

(declare-fun m!172407 () Bool)

(assert (=> b!143029 m!172407))

(assert (=> b!140806 d!45757))

(declare-fun d!45759 () Bool)

(declare-fun e!93172 () Bool)

(assert (=> d!45759 e!93172))

(declare-fun res!68103 () Bool)

(assert (=> d!45759 (=> res!68103 e!93172)))

(declare-fun lt!74791 () Bool)

(assert (=> d!45759 (= res!68103 (not lt!74791))))

(declare-fun lt!74790 () Bool)

(assert (=> d!45759 (= lt!74791 lt!74790)))

(declare-fun lt!74789 () Unit!4393)

(declare-fun e!93171 () Unit!4393)

(assert (=> d!45759 (= lt!74789 e!93171)))

(declare-fun c!27113 () Bool)

(assert (=> d!45759 (= c!27113 lt!74790)))

(assert (=> d!45759 (= lt!74790 (containsKey!178 (toList!871 lt!73185) lt!73180))))

(assert (=> d!45759 (= (contains!910 lt!73185 lt!73180) lt!74791)))

(declare-fun b!143031 () Bool)

(declare-fun lt!74788 () Unit!4393)

(assert (=> b!143031 (= e!93171 lt!74788)))

(assert (=> b!143031 (= lt!74788 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73185) lt!73180))))

(assert (=> b!143031 (isDefined!128 (getValueByKey!174 (toList!871 lt!73185) lt!73180))))

(declare-fun b!143032 () Bool)

(declare-fun Unit!4534 () Unit!4393)

(assert (=> b!143032 (= e!93171 Unit!4534)))

(declare-fun b!143033 () Bool)

(assert (=> b!143033 (= e!93172 (isDefined!128 (getValueByKey!174 (toList!871 lt!73185) lt!73180)))))

(assert (= (and d!45759 c!27113) b!143031))

(assert (= (and d!45759 (not c!27113)) b!143032))

(assert (= (and d!45759 (not res!68103)) b!143033))

(declare-fun m!172409 () Bool)

(assert (=> d!45759 m!172409))

(declare-fun m!172411 () Bool)

(assert (=> b!143031 m!172411))

(assert (=> b!143031 m!167371))

(assert (=> b!143031 m!167371))

(declare-fun m!172413 () Bool)

(assert (=> b!143031 m!172413))

(assert (=> b!143033 m!167371))

(assert (=> b!143033 m!167371))

(assert (=> b!143033 m!172413))

(assert (=> d!43761 d!45759))

(assert (=> d!43761 d!43737))

(declare-fun d!45761 () Bool)

(assert (=> d!45761 (= (apply!120 (+!167 lt!73185 (tuple2!2657 lt!73183 (minValue!2789 newMap!16))) lt!73180) (apply!120 lt!73185 lt!73180))))

(assert (=> d!45761 true))

(declare-fun _$34!1016 () Unit!4393)

(assert (=> d!45761 (= (choose!869 lt!73185 lt!73183 (minValue!2789 newMap!16) lt!73180) _$34!1016)))

(declare-fun bs!6044 () Bool)

(assert (= bs!6044 d!45761))

(assert (=> bs!6044 m!166825))

(assert (=> bs!6044 m!166825))

(assert (=> bs!6044 m!166837))

(assert (=> bs!6044 m!166817))

(assert (=> d!43761 d!45761))

(assert (=> d!43761 d!43745))

(assert (=> d!43761 d!43749))

(declare-fun d!45763 () Bool)

(assert (=> d!45763 (= (get!1528 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (getValueByKey!174 (toList!871 lt!73172) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43957 d!45763))

(assert (=> d!43957 d!44277))

(assert (=> b!141187 d!44425))

(assert (=> b!141187 d!44427))

(declare-fun d!45765 () Bool)

(declare-fun res!68104 () Bool)

(declare-fun e!93173 () Bool)

(assert (=> d!45765 (=> res!68104 e!93173)))

(assert (=> d!45765 (= res!68104 (and ((_ is Cons!1735) (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))) (= (_1!1339 (h!2342 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))) lt!73215)))))

(assert (=> d!45765 (= (containsKey!178 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))) lt!73215) e!93173)))

(declare-fun b!143034 () Bool)

(declare-fun e!93174 () Bool)

(assert (=> b!143034 (= e!93173 e!93174)))

(declare-fun res!68105 () Bool)

(assert (=> b!143034 (=> (not res!68105) (not e!93174))))

(assert (=> b!143034 (= res!68105 (and (or (not ((_ is Cons!1735) (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))) (bvsle (_1!1339 (h!2342 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))) lt!73215)) ((_ is Cons!1735) (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))) (bvslt (_1!1339 (h!2342 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16)))))) lt!73215)))))

(declare-fun b!143035 () Bool)

(assert (=> b!143035 (= e!93174 (containsKey!178 (t!6314 (toList!871 (+!167 lt!73209 (tuple2!2657 lt!73198 (zeroValue!2789 newMap!16))))) lt!73215))))

(assert (= (and d!45765 (not res!68104)) b!143034))

(assert (= (and b!143034 res!68105) b!143035))

(declare-fun m!172415 () Bool)

(assert (=> b!143035 m!172415))

(assert (=> d!43843 d!45765))

(declare-fun d!45767 () Bool)

(declare-fun res!68106 () Bool)

(declare-fun e!93175 () Bool)

(assert (=> d!45767 (=> res!68106 e!93175)))

(assert (=> d!45767 (= res!68106 (and ((_ is Cons!1735) (t!6314 (toList!871 e!91274))) (= (_1!1339 (h!2342 (t!6314 (toList!871 e!91274)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(assert (=> d!45767 (= (containsKey!178 (t!6314 (toList!871 e!91274)) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)) e!93175)))

(declare-fun b!143036 () Bool)

(declare-fun e!93176 () Bool)

(assert (=> b!143036 (= e!93175 e!93176)))

(declare-fun res!68107 () Bool)

(assert (=> b!143036 (=> (not res!68107) (not e!93176))))

(assert (=> b!143036 (= res!68107 (and (or (not ((_ is Cons!1735) (t!6314 (toList!871 e!91274)))) (bvsle (_1!1339 (h!2342 (t!6314 (toList!871 e!91274)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))) ((_ is Cons!1735) (t!6314 (toList!871 e!91274))) (bvslt (_1!1339 (h!2342 (t!6314 (toList!871 e!91274)))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355))))))

(declare-fun b!143037 () Bool)

(assert (=> b!143037 (= e!93176 (containsKey!178 (t!6314 (t!6314 (toList!871 e!91274))) (select (arr!2302 (_keys!4697 (v!3273 (underlying!476 thiss!992)))) from!355)))))

(assert (= (and d!45767 (not res!68106)) b!143036))

(assert (= (and b!143036 res!68107) b!143037))

(assert (=> b!143037 m!166407))

(declare-fun m!172417 () Bool)

(assert (=> b!143037 m!172417))

(assert (=> b!140410 d!45767))

(declare-fun d!45769 () Bool)

(declare-fun c!27114 () Bool)

(assert (=> d!45769 (= c!27114 ((_ is Nil!1736) (toList!871 lt!73394)))))

(declare-fun e!93177 () (InoxSet tuple2!2656))

(assert (=> d!45769 (= (content!138 (toList!871 lt!73394)) e!93177)))

(declare-fun b!143038 () Bool)

(assert (=> b!143038 (= e!93177 ((as const (Array tuple2!2656 Bool)) false))))

(declare-fun b!143039 () Bool)

(assert (=> b!143039 (= e!93177 ((_ map or) (store ((as const (Array tuple2!2656 Bool)) false) (h!2342 (toList!871 lt!73394)) true) (content!138 (t!6314 (toList!871 lt!73394)))))))

(assert (= (and d!45769 c!27114) b!143038))

(assert (= (and d!45769 (not c!27114)) b!143039))

(declare-fun m!172419 () Bool)

(assert (=> b!143039 m!172419))

(assert (=> b!143039 m!170403))

(assert (=> d!43923 d!45769))

(assert (=> b!140512 d!43699))

(assert (=> b!140361 d!44169))

(declare-fun d!45771 () Bool)

(declare-fun e!93179 () Bool)

(assert (=> d!45771 e!93179))

(declare-fun res!68108 () Bool)

(assert (=> d!45771 (=> res!68108 e!93179)))

(declare-fun lt!74795 () Bool)

(assert (=> d!45771 (= res!68108 (not lt!74795))))

(declare-fun lt!74794 () Bool)

(assert (=> d!45771 (= lt!74795 lt!74794)))

(declare-fun lt!74793 () Unit!4393)

(declare-fun e!93178 () Unit!4393)

(assert (=> d!45771 (= lt!74793 e!93178)))

(declare-fun c!27115 () Bool)

(assert (=> d!45771 (= c!27115 lt!74794)))

(assert (=> d!45771 (= lt!74794 (containsKey!178 (toList!871 lt!73718) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45771 (= (contains!910 lt!73718 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74795)))

(declare-fun b!143040 () Bool)

(declare-fun lt!74792 () Unit!4393)

(assert (=> b!143040 (= e!93178 lt!74792)))

(assert (=> b!143040 (= lt!74792 (lemmaContainsKeyImpliesGetValueByKeyDefined!127 (toList!871 lt!73718) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!143040 (isDefined!128 (getValueByKey!174 (toList!871 lt!73718) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143041 () Bool)

(declare-fun Unit!4535 () Unit!4393)

(assert (=> b!143041 (= e!93178 Unit!4535)))

(declare-fun b!143042 () Bool)

(assert (=> b!143042 (= e!93179 (isDefined!128 (getValueByKey!174 (toList!871 lt!73718) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45771 c!27115) b!143040))

(assert (= (and d!45771 (not c!27115)) b!143041))

(assert (= (and d!45771 (not res!68108)) b!143042))

(declare-fun m!172421 () Bool)

(assert (=> d!45771 m!172421))

(declare-fun m!172423 () Bool)

(assert (=> b!143040 m!172423))

(assert (=> b!143040 m!168217))

(assert (=> b!143040 m!168217))

(declare-fun m!172425 () Bool)

(assert (=> b!143040 m!172425))

(assert (=> b!143042 m!168217))

(assert (=> b!143042 m!168217))

(assert (=> b!143042 m!172425))

(assert (=> d!43997 d!45771))

(declare-fun b!143046 () Bool)

(declare-fun e!93181 () Option!180)

(assert (=> b!143046 (= e!93181 None!178)))

(declare-fun b!143044 () Bool)

(declare-fun e!93180 () Option!180)

(assert (=> b!143044 (= e!93180 e!93181)))

(declare-fun c!27117 () Bool)

(assert (=> b!143044 (= c!27117 (and ((_ is Cons!1735) lt!73719) (not (= (_1!1339 (h!2342 lt!73719)) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!143043 () Bool)

(assert (=> b!143043 (= e!93180 (Some!179 (_2!1339 (h!2342 lt!73719))))))

(declare-fun c!27116 () Bool)

(declare-fun d!45773 () Bool)

(assert (=> d!45773 (= c!27116 (and ((_ is Cons!1735) lt!73719) (= (_1!1339 (h!2342 lt!73719)) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45773 (= (getValueByKey!174 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93180)))

(declare-fun b!143045 () Bool)

(assert (=> b!143045 (= e!93181 (getValueByKey!174 (t!6314 lt!73719) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45773 c!27116) b!143043))

(assert (= (and d!45773 (not c!27116)) b!143044))

(assert (= (and b!143044 c!27117) b!143045))

(assert (= (and b!143044 (not c!27117)) b!143046))

(declare-fun m!172427 () Bool)

(assert (=> b!143045 m!172427))

(assert (=> d!43997 d!45773))

(declare-fun d!45775 () Bool)

(assert (=> d!45775 (= (getValueByKey!174 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!179 (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74796 () Unit!4393)

(assert (=> d!45775 (= lt!74796 (choose!872 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!93182 () Bool)

(assert (=> d!45775 e!93182))

(declare-fun res!68109 () Bool)

(assert (=> d!45775 (=> (not res!68109) (not e!93182))))

(assert (=> d!45775 (= res!68109 (isStrictlySorted!320 lt!73719))))

(assert (=> d!45775 (= (lemmaContainsTupThenGetReturnValue!91 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74796)))

(declare-fun b!143047 () Bool)

(declare-fun res!68110 () Bool)

(assert (=> b!143047 (=> (not res!68110) (not e!93182))))

(assert (=> b!143047 (= res!68110 (containsKey!178 lt!73719 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143048 () Bool)

(assert (=> b!143048 (= e!93182 (contains!914 lt!73719 (tuple2!2657 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45775 res!68109) b!143047))

(assert (= (and b!143047 res!68110) b!143048))

(assert (=> d!45775 m!168211))

(declare-fun m!172429 () Bool)

(assert (=> d!45775 m!172429))

(declare-fun m!172431 () Bool)

(assert (=> d!45775 m!172431))

(declare-fun m!172433 () Bool)

(assert (=> b!143047 m!172433))

(declare-fun m!172435 () Bool)

(assert (=> b!143048 m!172435))

(assert (=> d!43997 d!45775))

(declare-fun b!143049 () Bool)

(declare-fun e!93185 () List!1739)

(declare-fun call!15795 () List!1739)

(assert (=> b!143049 (= e!93185 call!15795)))

(declare-fun b!143050 () Bool)

(declare-fun e!93183 () List!1739)

(declare-fun call!15794 () List!1739)

(assert (=> b!143050 (= e!93183 call!15794)))

(declare-fun b!143051 () Bool)

(declare-fun lt!74797 () List!1739)

(declare-fun e!93186 () Bool)

(assert (=> b!143051 (= e!93186 (contains!914 lt!74797 (tuple2!2657 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!93184 () List!1739)

(declare-fun bm!15790 () Bool)

(declare-fun c!27121 () Bool)

(assert (=> bm!15790 (= call!15795 ($colon$colon!93 e!93184 (ite c!27121 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (tuple2!2657 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!27118 () Bool)

(assert (=> bm!15790 (= c!27118 c!27121)))

(declare-fun bm!15791 () Bool)

(declare-fun call!15793 () List!1739)

(assert (=> bm!15791 (= call!15794 call!15793)))

(declare-fun b!143052 () Bool)

(declare-fun res!68111 () Bool)

(assert (=> b!143052 (=> (not res!68111) (not e!93186))))

(assert (=> b!143052 (= res!68111 (containsKey!178 lt!74797 (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!45777 () Bool)

(assert (=> d!45777 e!93186))

(declare-fun res!68112 () Bool)

(assert (=> d!45777 (=> (not res!68112) (not e!93186))))

(assert (=> d!45777 (= res!68112 (isStrictlySorted!320 lt!74797))))

(assert (=> d!45777 (= lt!74797 e!93185)))

(assert (=> d!45777 (= c!27121 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvslt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45777 (isStrictlySorted!320 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))))

(assert (=> d!45777 (= (insertStrictlySorted!94 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74797)))

(declare-fun c!27120 () Bool)

(declare-fun c!27119 () Bool)

(declare-fun b!143053 () Bool)

(assert (=> b!143053 (= e!93184 (ite c!27120 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (ite c!27119 (Cons!1735 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) Nil!1736)))))

(declare-fun b!143054 () Bool)

(assert (=> b!143054 (= c!27119 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (bvsgt (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!93187 () List!1739)

(assert (=> b!143054 (= e!93187 e!93183)))

(declare-fun b!143055 () Bool)

(assert (=> b!143055 (= e!93183 call!15794)))

(declare-fun b!143056 () Bool)

(assert (=> b!143056 (= e!93184 (insertStrictlySorted!94 (t!6314 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15792 () Bool)

(assert (=> bm!15792 (= call!15793 call!15795)))

(declare-fun b!143057 () Bool)

(assert (=> b!143057 (= e!93185 e!93187)))

(assert (=> b!143057 (= c!27120 (and ((_ is Cons!1735) (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16)))) (= (_1!1339 (h!2342 (toList!871 (getCurrentListMap!534 (_keys!4697 newMap!16) (_values!2922 newMap!16) (mask!7278 newMap!16) (extraKeys!2694 newMap!16) (zeroValue!2789 newMap!16) (minValue!2789 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2939 newMap!16))))) (_1!1339 (tuple2!2657 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1523 (select (arr!2303 (_values!2922 (v!3273 (underlying!476 thiss!992)))) from!355) (dynLambda!434 (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!143058 () Bool)

(assert (=> b!143058 (= e!93187 call!15793)))

(assert (= (and d!45777 c!27121) b!143049))

(assert (= (and d!45777 (not c!27121)) b!143057))

(assert (= (and b!143057 c!27120) b!143058))

(assert (= (and b!143057 (not c!27120)) b!143054))

(assert (= (and b!143054 c!27119) b!143050))

(assert (= (and b!143054 (not c!27119)) b!143055))

(assert (= (or b!143050 b!143055) bm!15791))

(assert (= (or b!143058 bm!15791) bm!15792))

(assert (= (or b!143049 bm!15792) bm!15790))

(assert (= (and bm!15790 c!27118) b!143056))

(assert (= (and bm!15790 (not c!27118)) b!143053))

(assert (= (and d!45777 res!68112) b!143052))

(assert (= (and b!143052 res!68111) b!143051))

(declare-fun m!172437 () Bool)

(assert (=> b!143052 m!172437))

(declare-fun m!172439 () Bool)

(assert (=> b!143056 m!172439))

(declare-fun m!172441 () Bool)

(assert (=> bm!15790 m!172441))

(declare-fun m!172443 () Bool)

(assert (=> b!143051 m!172443))

(declare-fun m!172445 () Bool)

(assert (=> d!45777 m!172445))

(assert (=> d!45777 m!169513))

(assert (=> d!43997 d!45777))

(assert (=> b!141109 d!44241))

(declare-fun b!143059 () Bool)

(declare-fun e!93189 () Bool)

(assert (=> b!143059 (= e!93189 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4849 () Bool)

(declare-fun mapRes!4849 () Bool)

(declare-fun tp!11581 () Bool)

(assert (=> mapNonEmpty!4849 (= mapRes!4849 (and tp!11581 e!93189))))

(declare-fun mapKey!4849 () (_ BitVec 32))

(declare-fun mapValue!4849 () ValueCell!1121)

(declare-fun mapRest!4849 () (Array (_ BitVec 32) ValueCell!1121))

(assert (=> mapNonEmpty!4849 (= mapRest!4847 (store mapRest!4849 mapKey!4849 mapValue!4849))))

(declare-fun b!143060 () Bool)

(declare-fun e!93188 () Bool)

(assert (=> b!143060 (= e!93188 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4849 () Bool)

(assert (=> mapIsEmpty!4849 mapRes!4849))

(declare-fun condMapEmpty!4849 () Bool)

(declare-fun mapDefault!4849 () ValueCell!1121)

(assert (=> mapNonEmpty!4847 (= condMapEmpty!4849 (= mapRest!4847 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4849)))))

(assert (=> mapNonEmpty!4847 (= tp!11579 (and e!93188 mapRes!4849))))

(assert (= (and mapNonEmpty!4847 condMapEmpty!4849) mapIsEmpty!4849))

(assert (= (and mapNonEmpty!4847 (not condMapEmpty!4849)) mapNonEmpty!4849))

(assert (= (and mapNonEmpty!4849 ((_ is ValueCellFull!1121) mapValue!4849)) b!143059))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1121) mapDefault!4849)) b!143060))

(declare-fun m!172447 () Bool)

(assert (=> mapNonEmpty!4849 m!172447))

(declare-fun b!143061 () Bool)

(declare-fun e!93191 () Bool)

(assert (=> b!143061 (= e!93191 tp_is_empty!2929)))

(declare-fun mapNonEmpty!4850 () Bool)

(declare-fun mapRes!4850 () Bool)

(declare-fun tp!11582 () Bool)

(assert (=> mapNonEmpty!4850 (= mapRes!4850 (and tp!11582 e!93191))))

(declare-fun mapKey!4850 () (_ BitVec 32))

(declare-fun mapValue!4850 () ValueCell!1121)

(declare-fun mapRest!4850 () (Array (_ BitVec 32) ValueCell!1121))

(assert (=> mapNonEmpty!4850 (= mapRest!4848 (store mapRest!4850 mapKey!4850 mapValue!4850))))

(declare-fun b!143062 () Bool)

(declare-fun e!93190 () Bool)

(assert (=> b!143062 (= e!93190 tp_is_empty!2929)))

(declare-fun mapIsEmpty!4850 () Bool)

(assert (=> mapIsEmpty!4850 mapRes!4850))

(declare-fun condMapEmpty!4850 () Bool)

(declare-fun mapDefault!4850 () ValueCell!1121)

(assert (=> mapNonEmpty!4848 (= condMapEmpty!4850 (= mapRest!4848 ((as const (Array (_ BitVec 32) ValueCell!1121)) mapDefault!4850)))))

(assert (=> mapNonEmpty!4848 (= tp!11580 (and e!93190 mapRes!4850))))

(assert (= (and mapNonEmpty!4848 condMapEmpty!4850) mapIsEmpty!4850))

(assert (= (and mapNonEmpty!4848 (not condMapEmpty!4850)) mapNonEmpty!4850))

(assert (= (and mapNonEmpty!4850 ((_ is ValueCellFull!1121) mapValue!4850)) b!143061))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1121) mapDefault!4850)) b!143062))

(declare-fun m!172449 () Bool)

(assert (=> mapNonEmpty!4850 m!172449))

(declare-fun b_lambda!6371 () Bool)

(assert (= b_lambda!6351 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6371)))

(declare-fun b_lambda!6373 () Bool)

(assert (= b_lambda!6359 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6373)))

(declare-fun b_lambda!6375 () Bool)

(assert (= b_lambda!6329 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6375)))

(declare-fun b_lambda!6377 () Bool)

(assert (= b_lambda!6337 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6377)))

(declare-fun b_lambda!6379 () Bool)

(assert (= b_lambda!6365 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6379)))

(declare-fun b_lambda!6381 () Bool)

(assert (= b_lambda!6341 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6381)))

(declare-fun b_lambda!6383 () Bool)

(assert (= b_lambda!6367 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6383)))

(declare-fun b_lambda!6385 () Bool)

(assert (= b_lambda!6339 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6385)))

(declare-fun b_lambda!6387 () Bool)

(assert (= b_lambda!6327 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6387)))

(declare-fun b_lambda!6389 () Bool)

(assert (= b_lambda!6325 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6389)))

(declare-fun b_lambda!6391 () Bool)

(assert (= b_lambda!6277 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 (_2!1340 lt!73099)))) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (_2!1340 lt!73099)))) b_lambda!6391)))

(declare-fun b_lambda!6393 () Bool)

(assert (= b_lambda!6361 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6393)))

(declare-fun b_lambda!6395 () Bool)

(assert (= b_lambda!6347 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6395)))

(declare-fun b_lambda!6397 () Bool)

(assert (= b_lambda!6345 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6397)))

(declare-fun b_lambda!6399 () Bool)

(assert (= b_lambda!6343 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6399)))

(declare-fun b_lambda!6401 () Bool)

(assert (= b_lambda!6355 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6401)))

(declare-fun b_lambda!6403 () Bool)

(assert (= b_lambda!6331 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6403)))

(declare-fun b_lambda!6405 () Bool)

(assert (= b_lambda!6363 (or (and b!139651 b_free!3025) (and b!139639 b_free!3027 (= (defaultEntry!2939 newMap!16) (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))))) b_lambda!6405)))

(declare-fun b_lambda!6407 () Bool)

(assert (= b_lambda!6353 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6407)))

(declare-fun b_lambda!6409 () Bool)

(assert (= b_lambda!6357 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6409)))

(declare-fun b_lambda!6411 () Bool)

(assert (= b_lambda!6349 (or (and b!139651 b_free!3025 (= (defaultEntry!2939 (v!3273 (underlying!476 thiss!992))) (defaultEntry!2939 newMap!16))) (and b!139639 b_free!3027) b_lambda!6411)))

(check-sat (not b!142606) (not d!45777) (not b!142633) (not d!45049) (not b!142003) (not d!44965) (not b!142112) (not d!44365) (not b!141360) (not b!142565) (not b!141242) (not d!44297) (not bm!15692) (not d!44283) (not d!44755) (not b!141668) (not b!142741) (not b!141471) (not d!45479) (not b_lambda!6393) (not bm!15736) (not b!142932) (not b!141657) (not b!142895) (not b!142719) (not b!141743) (not d!45275) (not d!45629) (not b!142310) (not b!141770) (not d!45259) (not d!44689) (not b!142304) (not d!44905) (not b!142388) (not b!142629) (not b!141439) (not b!142822) (not d!45235) (not b!141468) (not b!142845) (not b!142125) (not b!142185) (not b!142312) (not b!142302) (not b!141476) (not b!142421) (not b!141401) (not b!142070) (not b!142641) (not b!142840) (not d!44703) (not b!141363) (not b_lambda!6319) (not bm!15668) (not b!143031) (not b!142093) (not b!142720) (not d!45107) (not b!142716) (not d!45435) (not b!142699) (not b!141579) (not b!142955) (not b!142718) (not b!141612) (not b!142331) (not bm!15756) (not d!45165) (not b!142130) (not b!141797) (not b!141755) (not b!141633) (not b!141506) (not d!44815) (not b!141366) (not d!45147) (not d!45183) (not b!141670) (not b!142043) (not b!142764) (not d!45631) (not bm!15698) (not d!44829) (not b_lambda!6411) (not b!142177) (not b!142459) (not b!142772) (not d!44903) (not b!142488) (not b!142669) (not b!142067) (not d!45455) (not d!44293) (not b_lambda!6315) (not d!45271) (not b!142417) (not b!141539) (not b!142206) (not b!142401) (not d!44543) (not bm!15715) (not b!141207) (not b!142403) (not d!45581) (not b!142197) (not b!141814) (not b!142618) (not b!142404) (not bm!15688) (not d!45051) (not b!142426) (not d!45305) (not mapNonEmpty!4850) (not b!142526) (not b!142797) (not d!44453) (not b!142117) (not d!44933) (not b!142539) (not bm!15681) (not b!142192) (not b_lambda!6407) (not d!44327) (not b!142250) (not d!44541) (not b!142014) (not b!141304) (not b!142550) (not d!44381) (not b!142745) (not b!142371) (not b!142348) (not b!142328) (not b!142511) (not d!45359) (not b!141331) (not b!142989) (not d!45547) (not d!45697) (not d!45069) (not b!142242) (not b!142644) (not b!142293) (not d!44659) (not b!141693) (not b!142046) (not b!143010) (not d!45493) (not b!142251) (not d!45045) (not d!45411) (not b!142517) (not b!142319) (not b!141505) (not b!141426) (not d!44537) (not bm!15718) (not d!45693) (not d!45681) (not b!142636) (not b!142037) (not b!141227) (not d!44223) (not b!142993) (not d!44877) (not d!45577) (not b!142800) (not b!142165) (not d!44767) (not d!44449) (not b!141455) (not b!141340) (not b!142216) (not b!142735) (not b!141445) (not b!142395) (not d!44931) (not bm!15670) (not b!141589) (not b!142077) (not b!141398) (not b!142429) (not b!141990) (not b!142962) (not b!141503) (not b_lambda!6395) (not b!142288) (not d!45199) (not d!45375) (not d!44493) (not d!45707) (not b!141805) (not b!142033) (not b_lambda!6305) (not b!142305) (not d!45361) (not b!142391) (not b!142706) (not b!142307) (not b!142729) (not d!44373) (not b!141334) (not d!45299) (not b!141442) (not b!141284) (not d!44773) (not b!142462) (not d!44761) (not d!44959) (not d!44973) (not b!142497) (not b!142485) (not b!141386) (not b!142057) (not b!142589) (not d!44741) (not d!44489) (not b!141844) (not d!45403) (not b!141268) (not b!141502) (not d!44547) (not b!141995) (not b_lambda!6405) (not b!142246) (not d!45453) (not b!142664) (not b!141499) (not b!143048) (not d!44961) (not d!45551) (not d!45157) (not b!141925) (not b!142583) (not d!44831) (not d!44817) (not b!141939) (not b!141435) (not b!142733) (not d!45013) (not b!142590) (not d!45699) (not b!142164) (not b_lambda!6311) (not b!142400) (not b!142152) (not d!45197) (not d!45243) (not b!141895) (not d!44749) (not d!44433) (not b!141712) (not b!141751) (not b!142390) (not b!141513) (not d!44219) (not d!44285) (not b_lambda!6307) (not b!142317) (not b!142703) (not b!141497) (not b!141858) (not b!141216) (not d!44913) (not b!141492) (not b!142512) (not b!141441) (not b!141602) (not b!142493) (not b!142846) (not d!45227) (not b!142484) (not d!45523) (not b!142691) (not d!45065) (not b!142176) (not b!141262) (not b!142734) (not b_lambda!6373) (not b_lambda!6263) (not b_lambda!6403) (not d!45203) (not b!141772) (not b!142051) (not b!141316) (not d!45153) (not d!45101) (not bm!15702) (not b!142833) (not b!142063) (not b!142392) (not b!141395) (not b!141909) (not d!44231) (not d!45063) (not b!141922) (not b!142499) (not b!143056) (not b!142118) (not b!141637) (not bm!15788) (not b!142015) (not d!45405) (not bm!15684) (not b!142260) (not b!141320) (not b!142084) (not d!45721) (not b!142452) (not b!141935) (not b!141644) (not d!44813) (not d!44513) (not b!141406) (not b_lambda!6385) (not b!142060) (not b!142424) (not b_lambda!6241) (not b!142139) (not b!141551) (not b!141597) (not d!45659) (not d!45513) (not d!44615) (not d!45459) (not b!142723) (not b!141800) (not b!142715) (not b!142298) (not b!142530) (not b!142921) (not b!142885) (not d!45381) (not b!141724) (not b!142742) (not d!44921) (not bm!15677) (not b!142958) (not b!142412) (not b!141727) (not b!141960) (not d!45687) (not b!141929) (not b!141972) (not b_lambda!6391) (not b_next!3027) (not d!45501) (not b!142892) (not b!142730) (not b!141451) (not b!142825) (not b!142935) (not b!141949) (not d!44571) (not b!142342) (not d!44287) (not b!142431) (not b!141584) (not b!142900) (not b!142127) (not bm!15682) (not b!141572) (not d!45505) (not d!45097) (not d!44325) (not d!45057) (not d!44557) (not b!142779) (not b!142850) (not d!45683) (not b!141759) (not b!142223) (not b!142799) (not d!44309) (not b!143024) (not b_lambda!6333) (not b!141842) (not d!45389) (not d!44823) (not b!142340) (not b!142920) (not d!45219) (not d!44993) (not b!141934) (not d!44301) (not bm!15701) (not d!45387) (not b!141581) (not b!142941) (not d!44213) (not d!45613) (not b!142535) (not b!142568) (not b!141696) (not d!45575) (not b!141504) (not b!142518) (not b!142901) (not b!142225) (not d!45019) (not b!141454) (not b!142116) (not b!142769) (not b!141738) (not d!45321) (not b!141327) (not b!142135) (not b!143019) (not d!45005) (not d!44607) (not b!141571) (not d!44879) (not d!45737) (not b!141665) (not d!44697) (not b!142620) (not d!44893) (not d!45319) (not d!45003) (not b!141215) (not d!44985) (not d!44289) (not b!142279) (not b!142498) (not b!141397) (not d!45363) (not b!142450) (not b!141888) (not b!142974) (not d!45077) (not b!141538) (not d!45193) (not b!142514) (not d!45469) (not d!44603) (not b!141449) (not b!141595) (not b!143033) (not d!45301) (not b!141462) (not b!142853) (not d!45139) (not d!45595) (not b!142360) (not b!142965) (not b!141277) (not b!141601) (not b!141319) (not b!141569) (not d!45011) (not b!142881) (not b!142079) (not d!45059) (not b!141283) (not b!142643) (not b!142447) (not b!142661) (not b_lambda!6301) (not b!142828) (not b!141906) (not b_lambda!6309) (not b!141927) (not d!45315) (not b!142753) (not d!45177) (not d!44361) (not b!142207) (not b!141270) (not b!141372) (not b!141849) (not b_lambda!6317) (not b!141544) (not d!44909) (not d!44451) (not b!141512) (not d!45733) (not b!142170) (not d!44899) (not b!142095) (not b!141419) (not b!142500) (not b!141910) (not bm!15678) (not d!45601) (not b!141898) (not b!142524) (not d!45437) (not d!45569) (not b!141618) (not b!142602) (not d!44951) (not b!141740) (not d!45645) (not d!44991) (not b!141337) (not d!44779) (not b!143001) (not d!45367) (not d!44559) (not d!45255) (not b!141321) (not d!44955) (not b!142546) (not b!142181) (not d!45725) (not b!142675) (not b!141261) (not b!141292) (not b!141418) (not b!142759) (not b!141819) (not bm!15786) (not d!45087) (not b!141977) (not bm!15725) (not b!141210) (not b!141246) (not d!44891) (not b!142088) (not d!44979) (not b_lambda!6323) (not b!141310) (not b!141700) (not d!45061) (not b!142747) (not b!142516) (not b!142756) (not b!142856) (not b!142479) (not b!142173) (not bm!15729) (not b!142657) (not d!45229) (not b!141626) (not d!45239) (not b!141603) (not b!141514) (not b!142379) (not b!142123) (not b!143035) (not b_lambda!6257) (not bm!15769) (not d!44549) (not bm!15772) (not d!45723) (not b!142909) (not b!141315) (not d!44627) (not d!45397) (not b!142396) (not bm!15674) (not b!141507) (not bm!15667) (not b!142335) (not bm!15666) (not d!44495) (not b!142006) (not d!44625) (not b!142755) (not d!45291) (not b!142383) (not b!141276) (not b!142726) (not d!44363) (not b!141335) (not b!142141) (not b!141565) (not b!141891) (not bm!15790) (not d!44311) (not d!44565) (not b!141349) (not d!44727) (not d!45599) (not b!142638) (not b!142496) (not d!45611) (not b!142905) (not b!142235) (not d!44555) (not d!45415) (not b!142402) (not b!142917) (not d!44257) (not b!142341) (not b!141254) (not b!141255) (not d!44313) (not d!44227) (not b!141329) (not d!45187) (not bm!15739) (not d!44857) (not b!142573) (not d!45307) (not d!44611) (not b!142114) (not b!142359) (not b!141982) (not b!142481) (not b!142280) (not b!142595) (not b!141748) (not d!44479) (not d!45007) (not b!143007) (not b!141652) (not d!45351) (not b!141735) (not d!45121) (not d!45655) (not d!45247) (not b!141886) (not bm!15709) (not b!141495) (not b!142321) (not b!141835) (not b!141348) (not bm!15755) (not b!141573) (not b!141978) (not b_lambda!6299) (not d!45565) (not d!45647) (not b!142083) (not d!45643) (not b!141779) (not d!44505) (not d!45201) (not d!45559) (not b!142979) (not b!141521) (not b!141621) (not b!142295) (not b_lambda!6389) (not d!44409) (not b!141306) (not d!44295) (not b_lambda!6369) (not b!141661) (not b!141546) (not b!142791) (not b!142531) (not d!44783) (not b!142355) (not b!142261) (not mapNonEmpty!4849) (not d!45481) (not b!142263) (not b!142601) (not d!44291) (not d!44957) (not b!142943) (not b!142337) (not b!141873) (not d!44447) (not b!142750) (not b!142508) (not bm!15683) (not b!141821) (not b!141698) (not d!44507) (not b!142928) (not b!142666) (not b!142727) (not d!45033) (not b!142012) (not d!45661) (not b!142019) (not d!44621) (not b!142137) (not d!44591) (not d!45055) (not b!141480) (not d!44215) (not b!141272) (not d!45751) (not d!44501) (not b!141343) (not d!45181) (not d!45517) (not b!141766) (not b!141992) (not b!143037) (not b!142963) (not b!141354) (not b!141244) (not d!45731) (not d!44839) (not d!44629) (not b!142326) (not b!142739) (not d!45445) (not b!142626) (not d!45409) (not d!45579) (not b!141333) (not d!44265) (not b!141993) (not bm!15787) (not b!142346) (not b!142714) (not d!44253) (not b!142831) (not b!141947) (not bm!15749) (not d!44897) (not b_lambda!6335) (not b!141322) (not bm!15728) (not b!142338) (not b!141853) (not b!141826) (not d!45689) (not b!141317) (not b_lambda!6401) (not b!141580) (not b!142925) (not bm!15742) (not b!142653) (not b!141338) (not d!45287) (not d!44369) (not b!142970) (not d!44267) (not d!45475) (not b!142502) (not d!44705) (not b!141204) (not d!45557) (not b!142819) (not d!45179) (not b!142914) (not d!45651) (not b!142374) (not b!142091) (not b!141443) (not d!44673) (not b!141566) (not d!44235) (not b!141876) (not d!44273) (not b!142381) (not b!141745) (not b!141357) (not bm!15762) (not b!141328) (not d!45313) (not b!141975) (not b!141352) (not d!44499) (not d!45727) (not b!142273) (not b!142877) (not d!45261) (not b!141869) (not b!141582) (not b!141846) (not b!142671) (not b!142352) (not b!142527) (not b!141232) (not b!141402) (not b!142494) (not b_next!3025) (not b!142614) (not d!45431) (not d!45573) (not b!142410) (not b!141494) (not d!45189) (not d!44487) (not b!141813) (not b!142748) (not b!141905) (not d!45539) (not d!44407) (not d!44631) (not bm!15664) (not d!45323) (not b!142202) (not d!44535) (not d!45267) (not b!142275) (not b!141339) (not b!141374) b_and!8891 (not b!142189) (not b!142343) (not d!45393) (not d!44321) (not b!141515) (not b!142863) (not d!45047) (not d!44355) (not b_lambda!6245) (not b!141561) (not b!141447) (not b!142184) (not b!141567) (not b!141653) (not d!45657) (not b!142099) (not b_lambda!6377) (not b!142407) (not b!142188) (not d!44947) (not b!142889) (not b!141440) (not b!142344) (not d!44655) (not b!143016) (not b!142652) (not b!141690) (not d!45593) (not d!45343) (not b!142760) (not d!45369) (not b!142143) (not d!44855) (not b!142460) (not b!141954) (not d!45041) (not d!44511) (not d!44681) (not d!44641) (not b!142134) (not d!45311) (not d!44367) (not d!44271) (not b!141247) (not b!141274) (not b!141790) (not b!141371) (not b_lambda!6321) (not d!44497) (not b!141410) (not d!45111) (not b!142239) (not d!45471) (not b!142187) (not b!142585) (not b!142736) (not d!44353) (not b!142038) (not b!142571) (not d!44333) (not b!142472) (not b_lambda!6397) (not b!142631) (not d!44809) (not b!141825) (not b!142554) (not b!142372) (not d!44919) (not d!44693) (not d!44335) (not b!142264) (not b!142803) (not b!142034) (not d!44509) (not b!142476) (not b!142951) (not d!45511) (not b!142521) (not b!142997) (not d!45285) (not b!142333) (not b!141606) (not b!141763) (not d!44981) (not b_lambda!6409) (not b!142211) (not b!142148) (not b!142588) (not b!142774) (not b!142300) (not b!142738) (not b!141970) (not b!142350) (not b!141706) (not b!142732) (not b!141587) (not b!141822) (not d!44305) (not b!142072) (not d!45633) (not b!141212) (not b!141957) (not b!142107) (not b!141282) (not d!45775) (not b!142611) (not bm!15663) (not b!142848) (not b!141834) (not b!141250) (not b_lambda!6375) (not d!45663) (not b!141220) (not b!141703) (not b!142808) (not b!141209) (not bm!15719) (not d!44785) (not b!142506) (not b!142778) (not b!141461) (not d!44357) (not d!44715) (not d!45371) (not d!45283) (not b!142685) (not b!142947) (not d!45563) (not b!142454) (not b!141754) (not b!141884) (not d!44299) (not d!44617) (not b!142874) (not b!141202) (not b!142122) (not b!142690) (not b!142368) (not d!45067) (not d!44475) (not bm!15695) (not b_lambda!6371) (not d!45377) (not b!141903) (not b!141273) (not d!44399) (not b!142252) (not d!44519) (not b!141923) (not b!142971) (not bm!15783) (not d!44859) (not d!44873) (not d!45623) (not b!141632) (not b!142783) (not d!45503) (not b!142386) (not b!141968) (not b_lambda!6313) (not d!44545) (not b!141666) (not d!44757) (not b!142960) (not b!142413) (not b!141951) (not b!142080) (not d!44431) (not b!142248) (not b!141788) (not d!44307) (not b!142227) (not d!45335) (not b_lambda!6379) (not d!44577) (not d!44345) (not b!141350) (not b!142945) (not b!141206) (not b!142794) (not b!142975) (not b!142672) (not b_lambda!6303) (not b!142509) (not d!45423) (not bm!15766) (not b!142376) (not b!142621) (not b!141639) (not b!142110) (not d!44423) (not b!141486) (not bm!15735) (not b!142200) (not b!141709) (not bm!15752) (not d!44531) (not d!44469) (not d!44379) (not b!141429) (not b!141531) (not d!45205) (not b!142650) (not d!44743) (not d!45031) (not b!142291) (not b!141370) (not d!45429) (not b!142804) (not d!44725) (not b!141484) (not b!142996) (not b!142244) (not d!44925) (not d!44807) (not d!44275) (not d!45105) (not d!44575) (not b!142163) (not bm!15712) (not b!141563) (not b!142564) (not b!142308) (not b!142221) (not b!142930) (not d!44791) (not b!141496) (not d!44403) (not bm!15721) (not d!45457) (not b!141871) (not b!141522) (not d!45265) (not b!141286) (not d!44483) (not b!141599) tp_is_empty!2929 (not d!44517) (not d!45253) (not d!44455) (not d!44503) (not b_lambda!6381) (not b!142598) (not b!141552) (not b!141786) (not b!141862) (not d!44463) (not b!142266) (not b!143005) (not b!142196) (not b!142028) (not b!142464) (not b!141415) (not b!143045) (not d!44485) (not b!142405) (not d!45175) (not d!45771) (not d!45759) (not b!141624) (not b!141223) (not bm!15779) (not b!142232) (not d!45619) (not d!45587) (not b!142330) (not b_lambda!6383) (not d!45037) (not d!45463) (not b!141678) (not b!141562) (not b!142230) (not b!142394) (not b!142253) (not d!44821) (not b!141263) (not d!45425) (not d!45137) (not b!142813) (not b!142545) (not b!142788) (not b!141266) (not d!45159) (not d!44695) (not b!142318) (not d!44975) (not b!142303) (not b!142767) (not d!45549) (not b!142688) (not b!142994) (not d!44775) (not b!143018) (not d!45719) (not b!142023) (not b!141295) (not b!142561) (not d!44339) (not b!141981) (not b!142054) (not b!143051) (not b!141258) (not b!141289) (not d!44769) (not b!142984) (not b!141838) (not b!141422) (not b!141880) (not bm!15665) (not d!45039) (not d!45075) (not b!141994) (not d!45553) (not d!45451) (not bm!15789) (not bm!15662) (not b!143047) (not b!143008) (not d!45053) (not d!44281) (not b!141369) (not b!142276) (not d!45591) (not b!142839) (not b!142268) (not bm!15669) (not d!44881) (not b!141265) (not d!45119) (not d!44585) (not b!141816) (not d!44685) (not b!142792) (not d!45303) (not b!142507) (not b!142036) (not bm!15775) (not b!141559) (not b!142311) (not d!44677) (not d!45509) (not b!142322) (not b!142145) (not b!141634) (not b!141943) (not d!44751) (not b!142817) (not b!141986) (not d!45001) (not d!45441) (not b!141964) (not d!45497) (not b!141742) (not d!44425) (not d!45191) (not b!142540) (not b!141230) (not b!142647) (not b!142229) (not b!142167) (not d!45605) (not b!143052) (not b!142680) (not b_lambda!6297) (not b!141683) (not b!142438) (not b!141307) (not b!142609) (not b!142836) (not b!141218) (not b!141900) (not b!142443) (not b!141926) (not d!45487) (not b!141234) (not d!45695) (not b!141775) (not b!142398) (not b!141368) (not b!141609) (not d!45401) (not b!142872) (not b!142136) (not b!141309) (not d!45355) (not d!44413) (not d!45173) (not d!44359) (not b!141475) (not b!141914) (not b!142198) (not b!141239) (not b!141308) (not b!142456) (not d!44623) (not b!142990) (not b!141252) (not d!45195) (not b!142859) (not d!45447) (not b!141889) (not b!142186) (not b!142109) (not d!44397) (not d!45225) (not b!142867) (not d!45309) (not b!141645) (not b!141221) (not d!45073) (not b!142893) (not b!142262) (not b!141731) (not d!44711) (not d!45263) (not b!142270) (not b!141737) (not bm!15765) (not b!141549) (not d!45739) (not b!141592) (not b!141719) (not b!142858) (not b!141385) (not bm!15732) (not b!142634) (not b!142290) (not bm!15706) (not b!142683) (not d!44701) (not d!45761) (not b!142325) (not b!141807) (not b!141517) (not b!142592) (not b!142775) (not b!142160) (not b!142254) (not b!142711) (not b!143040) (not b!141802) (not b!142212) (not b!142370) (not d!45585) (not b!142466) (not b!141893) (not b!141466) (not d!44525) (not d!44461) (not b!141924) (not b!142656) (not d!45417) (not d!45715) (not b!142327) (not bm!15759) (not d!45317) (not b!141300) (not b!141997) (not d!45093) (not d!45081) (not d!45525) (not b!141750) (not b!142468) (not b!142009) (not d!45353) (not bm!15720) (not b!142007) (not b!142039) (not b!142074) (not b!141936) (not d!44885) (not b!141392) (not d!44667) (not b!141501) (not b!142241) (not b!142465) (not b!141453) (not d!45127) (not b!142439) (not b!142491) (not d!44411) (not b!142709) (not b!141919) (not b!141456) (not d!44515) (not b!141318) (not d!45223) (not b!142065) (not b!142968) (not d!44437) (not d!45567) (not bm!15724) (not b!142555) (not d!45531) (not b!141897) (not b!142898) (not b!142645) (not d!45091) (not d!45443) (not d!45583) (not b!142364) (not b!142053) (not b_lambda!6265) (not d!45379) (not b!142457) (not d!45561) (not d!44661) (not d!45295) (not b!141811) (not b!141498) (not b!142194) (not d!45555) (not b!142862) (not d!45071) (not d!45677) (not d!44341) (not d!44999) (not b!141650) (not b!142031) (not b!141629) (not b!142708) (not d!45279) (not b!142040) (not b!142284) (not b!141857) (not b!141830) (not d!44343) (not d!45373) (not bm!15673) (not b!141647) b_and!8889 (not d!44805) (not b!141610) (not b!142018) (not d!44347) (not b!141545) (not d!45339) (not b!141534) (not d!45607) (not b!141928) (not b!142744) (not b!141574) (not b!142705) (not b!142950) (not d!44835) (not d!45207) (not d!45277) (not b!142616) (not b!141446) (not b!141536) (not b!142204) (not b!143026) (not bm!15687) (not b!142542) (not b!141489) (not b!142172) (not b!141555) (not b!141570) (not b!141297) (not b!143039) (not b!141365) (not b!141656) (not b!141557) (not b!142587) (not d!44315) (not d!45109) (not b!142623) (not b!141715) (not b!142442) (not d!44915) (not d!44255) (not b!141390) (not d!45365) (not d!45079) (not d!44349) (not d!44491) (not b!141383) (not d!44917) (not b_lambda!6387) (not b!142208) (not b!141685) (not d!45171) (not d!44941) (not b!142694) (not b!141783) (not d!44445) (not b!141356) (not b!141452) (not b!141260) (not d!45215) (not b!142938) (not d!45209) (not b!142871) (not d!45535) (not d!44233) (not d!45135) (not b!142832) (not b!143042) (not b_lambda!6261) (not b!142309) (not d!44471) (not b!141428) (not d!44225) (not b!143029) (not bm!15776) (not b!141585) (not d!45217) (not b!142161) (not b!141341) (not b_lambda!6399) (not b!142676) (not d!45519) (not b!142519) (not b!141702) (not b!141342) (not b!141535) (not b!141866) (not b!142120) (not d!45571) (not b!142501) (not b!142597) (not b!142436) (not b!142104) (not b!141793) (not b!141412) (not b!142416) (not d!45149) (not b!141269) (not d!44853) (not b!142156) (not b!142433) (not bm!15705) (not bm!15691) (not b!142904) (not b!142132) (not b!141275) (not b!142049) (not b!142695) (not d!45185) (not b!141537) (not d!44653) (not d!44441) (not b!141336) (not b!142613) (not d!44351) (not b!141526) (not d!44303) (not b!142482) (not d!45341) (not b!141463) (not b!141687) (not b!142159) (not b!141381) (not b!141378) (not d!44553) (not b!142255) (not b!141680) (not b!141200) (not b!141695) (not bm!15746) (not b!141431) (not b!142851) (not d!45357) (not b_lambda!6259) (not d!44319) (not d!44833) (not bm!15743))
(check-sat b_and!8889 b_and!8891 (not b_next!3025) (not b_next!3027))
